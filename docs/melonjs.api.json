{"version":"1.0.0","metadata":{"linker":"(unsigned)","siteRoot":"melonJS/docs"},"root":{"id":"root-0VZSHdHHBrQWEOZf4nTDi","name":"","type":"RootDoc","members":[{"id":"7Kx-3ucKjB29k-SJtTLna","name":"audio","brief":"","type":"NSDoc","members":[{"id":"AgMW0rpnNMx7tczkTlN4n","name":"stopOnAudioError","brief":"","defaultValue":"true","type":"PropertyDoc","description":"<p>Specify either to stop on audio loading error or not<br>\nif true, melonJS will throw an exception and stop loading<br>\nif ..."},{"id":"qj0H7cyAmUImMdSckdfxP","name":"disable","brief":"","scope":"static","type":"FunctionDoc","description":"<p>disable audio output</p>","params":[],"returns":[]},{"id":"vOLpXl7hQELl-crSwAYaO","name":"enable","brief":"","scope":"static","see":["audio#disable"],"type":"FunctionDoc","description":"<p>enable audio output <br>\nonly useful if audio supported and previously disabled through</p>","params":[],"returns":[]},{"id":"qAVE2Wsb8cwqijp2_krFm","name":"fade","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Fade a currently playing sound between two volumee.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"from","optional":false,"description":"<p>Volume to fade from (0.0 to 1.0).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"to","optional":false,"description":"<p>Volume to fade to (0.0 to 1.0).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"duration","optional":false,"description":"<p>Time in milliseconds to fade.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will fade.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"8-T58-otc3NiRnK9Yq8TD","name":"getCurrentTrack","brief":"","scope":"static","type":"FunctionDoc","description":"<p>returns the current track Id</p>","params":[],"returns":[{"description":"<p>audio track name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"76y5qxk9kau62WK8JyVly","name":"getVolume","brief":"","scope":"static","type":"FunctionDoc","description":"<p>get the default global volume</p>","params":[],"returns":[{"description":"<p>current volume value in Float [0.0 - 1.0] .</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"q67zXJJ3UYdsfVTEW0Rib","name":"hasAudio","brief":"","scope":"static","type":"FunctionDoc","description":"<p>check if audio (HTML5 or WebAudio) is supported</p>","params":[],"returns":[{"description":"<p>return true if audio (HTML5 or WebAudio) is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BCivqP5KC0FPBXrdp8tsd","name":"hasFormat","brief":"","scope":"static","type":"FunctionDoc","description":"<p>check if the given audio format is supported</p>","params":[{"identifier":"codec","optional":false,"description":"<p>audio format : &quot;mp3&quot;, &quot;mpeg&quot;, opus&quot;, &quot;ogg&quot;, &quot;oga&quot;, &quot;wav&quot;, &quot;aac...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>return true if the given audio format is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"B6ZTO0luVo5bNMpkuX-LV","name":"init","brief":"","examples":[{"caption":"","code":"\n // initialize the \"sound engine\", giving \"webm\" as default desired audio format, and \"mp3\" as a fallback\n if (!me.audio.init(\"webm,mp3\")) {\n     alert(\"Sorry but your browser does not support html 5 audio !\");\n     return;\n }\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Initialize and configure the audio support.<br>\nmelonJS supports a wide array of audio codecs that have varying browser su...","params":[{"identifier":"format","optional":true,"default":"\"mp3\"","description":"<p>audio format to prioritize</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Indicates whether audio initialization was successful</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UqVnHKndc6zsP9TC_d8uu","name":"mute","brief":"","examples":[{"caption":"","code":"\n // mute the background music\n me.audio.mute(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>mute or unmute the specified sound, but does not pause the playback.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will mute.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"mute","optional":true,"default":"true","description":"<p>True to mute and false to unmute</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"DWr3HupxpX6OObkbbEFlb","name":"muteAll","brief":"","scope":"static","type":"FunctionDoc","description":"<p>mute all audio</p>","params":[],"returns":[]},{"id":"09Xz9TCV3s8aJGIOGlXhQ","name":"muted","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Returns true if audio is muted globally.</p>","params":[],"returns":[{"description":"<p>true if audio is muted globally</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DVhG75xqWFc9t2YuMZX-T","name":"pause","brief":"","examples":[{"caption":"","code":"\n me.audio.pause(\"cling\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>pause the specified sound on all channels<br>\nthis function does not reset the currentTime property</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will pause.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"8rzhuAhnT7mIsHjFV9Nhx","name":"pauseTrack","brief":"","examples":[{"caption":"","code":"\n me.audio.pauseTrack();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>pause the current audio track</p>","params":[],"returns":[]},{"id":"71HhgQQ9rZ49hFE_VGK8O","name":"play","brief":"","examples":[{"caption":"","code":"\n // play the \"cling\" audio clip\n me.audio.play(\"cling\");\n // play & repeat the \"engine\" audio clip\n me.audio.play(\"engine\", true);\n // play the \"gameover_sfx\" audio clip and call myFunc when finished\n me.audio.play(\"gameover_sfx\", false, myFunc);\n // play the \"gameover_sfx\" audio clip with a lower volume level\n me.audio.play(\"gameover_sfx\", false, null, 0.5);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>play the specified sound</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"loop","optional":true,"default":"false","description":"<p>loop audio</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onend","optional":true,"description":"<p>Function to call when sound instance ends playing.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"volume","optional":true,"default":"default","description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the sound instance ID.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HvHmNRkW0jMQfxgCgGIIx","name":"playTrack","brief":"","examples":[{"caption":"","code":"\n me.audio.playTrack(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>play the specified audio track<br>\nthis function automatically set the loop property to true<br>\nand keep track of the cur...","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio track name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"volume","optional":true,"default":"default","description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the sound instance ID.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jvMfvkQAXScumXUxUHOGd","name":"rate","brief":"","examples":[{"caption":"","code":"\n // get the playback rate of the background music\n var rate = me.audio.rate(\"dst-gameforest\");\n // speed up the playback of the background music\n me.audio.rate(\"dst-gameforest\", 2.0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>get or set the rate of playback for a sound.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"rate","optional":true,"variadic":true,"description":"<p>playback rate : 0.5 to 4.0, with 1.0 being normal speed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will be changed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>return the current playback rate (if no extra parameters were given)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"cp3T2XYas3_KmBEHUijm0","name":"resume","brief":"","examples":[{"caption":"","code":"\n // play a audio clip\n var id = me.audio.play(\"myClip\");\n ...\n // pause it\n me.audio.pause(\"myClip\", id);\n ...\n // resume\n me.audio.resume(\"myClip\", id);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>resume the specified sound on all channels<br></p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will resume.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"KgXWokT8maNPRI55eJKPl","name":"resumeTrack","brief":"","examples":[{"caption":"","code":"\n // play an awesome music\n me.audio.playTrack(\"awesome_music\");\n // pause the audio track\n me.audio.pauseTrack();\n // resume the music\n me.audio.resumeTrack();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>resume the previously paused audio track</p>","params":[],"returns":[]},{"id":"U9SWgSG4lqDvkylQVFadt","name":"seek","brief":"","examples":[{"caption":"","code":"\n // return the current position of the background music\n var current_pos = me.audio.seek(\"dst-gameforest\");\n // set back the position of the background music to the beginning\n me.audio.seek(\"dst-gameforest\", 0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>get/set the position of playback for a sound.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"seek","optional":true,"variadic":true,"description":"<p>the position to move current playback to (in seconds).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will changed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>return the current seek position (if no extra parameters were given)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"I5S4pSpi5uqotrhwz38h-","name":"setVolume","brief":"","scope":"static","type":"FunctionDoc","description":"<p>set the default global volume</p>","params":[{"identifier":"volume","optional":false,"description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oL2EsJgg60McmcZvTzzqx","name":"stop","brief":"","examples":[{"caption":"","code":"\n me.audio.stop(\"cling\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>stop the specified sound on all channels</p>","params":[{"identifier":"sound_name","optional":true,"description":"<p>audio clip name (case sensitive). If none is passed, all sounds are stopped.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will stop.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"MRU3yo83rYvmIlpkQVmZu","name":"stopTrack","brief":"","examples":[{"caption":"","code":"\n // play a awesome music\n me.audio.playTrack(\"awesome_music\");\n // stop the current music\n me.audio.stopTrack();\n"}],"scope":"static","see":["audio#playTrack"],"type":"FunctionDoc","description":"<p>stop the current audio track</p>","params":[],"returns":[]},{"id":"fJDuUda4F8VJtoO1ULMdQ","name":"unload","brief":"","examples":[{"caption":"","code":"\n me.audio.unload(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>unload specified audio track to free memory</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio track name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if unloaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3iObcUB3T4uFTSH-CNPBq","name":"unloadAll","brief":"","examples":[{"caption":"","code":"\n me.audio.unloadAll();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>unload all audio to free memory</p>","params":[],"returns":[]},{"id":"GnLxpMBuICHkIzy6iLku4","name":"unmute","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unmute the specified sound</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will unmute.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wKWYB4O6mSz9Ebl81NPFJ","name":"unmuteAll","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unmute all audio</p>","params":[],"returns":[]}]},{"id":"W7QCvRjzjtxO3P3AWFe6_","name":"collision","brief":"","type":"NSDoc","description":"<p>Collision detection (and projection-based collision response) of 2D shapes.<br>\nBased on the Separating Axis Theorem and s...","members":[{"id":"gFts4OZAXpBBd1L9_xvJG","name":"types","brief":"","examples":[{"caption":"","code":"\n // set the body collision type\n myEntity.body.collisionType = me.collision.types.PLAYER_OBJECT;\n\n // filter collision detection with collision shapes, enemies and collectables\n myEntity.body.setCollisionMask(\n     me.collision.types.WORLD_SHAPE |\n     me.collision.types.ENEMY_OBJECT |\n     me.collision.types.COLLECTABLE_OBJECT\n );\n\n // User-defined collision types are defined using BITWISE LEFT-SHIFT:\n game.collisionTypes = {\n     LOCKED_DOOR : me.collision.types.USER << 0,\n     OPEN_DOOR   : me.collision.types.USER << 1,\n     LOOT        : me.collision.types.USER << 2,\n };\n\n // Set collision type for a door entity\n myDoorEntity.body.collisionType = game.collisionTypes.LOCKED_DOOR;\n\n // Set collision mask for the player entity, so it collides with locked doors and loot\n myPlayerEntity.body.setCollisionMask(\n     me.collision.types.ENEMY_OBJECT |\n     me.collision.types.WORLD_SHAPE |\n     game.collisionTypes.LOCKED_DOOR |\n     game.collisionTypes.LOOT\n );\n"}],"readonly":true,"scope":"static","see":["Body.setCollisionMask","Body.collisionType"],"type":"EnumDoc","description":"<p>Enum for collision type values.</p>","members":[{"id":"pVVVSu5LChJsjFgjs7c0w","name":"ACTION_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. doors</p>"},{"id":"1KWgbI9PVqnGusi1my_KR","name":"ALL_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>all of the above (including user-defined types)</p>"},{"id":"IKwmlAveX0RjTPKAejPj7","name":"COLLECTABLE_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>collectable objects</p>"},{"id":"6cW4Zjm9Q8yRtBbzKkvPr","name":"ENEMY_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>enemies objects</p>"},{"id":"xiFBO56EgOcx7FuDkhmSy","name":"NO_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>to disable collision check</p>"},{"id":"1UnTuOXQxj_iPH5s9eR_b","name":"NO_OBJECT","brief":"<p>to disable collision check</p>","defaultValue":"0","scope":"static","type":"PropertyDoc"},{"id":"y3-Qs3IkplDQfgmNLrgJs","name":"NPC_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>non playable characters</p>"},{"id":"gpPwUTBnEAaHH58lmHqwf","name":"PLAYER_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>playbable characters</p>"},{"id":"gqIc4EpAiz7OIi9GUvWnD","name":"PROJECTILE_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. missiles</p>"},{"id":"hvn9ve--f7E80S1XoUgMW","name":"USER","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>user-defined collision types (see example)</p>"},{"id":"NTaDpRAtLfxm-DP9LXJWQ","name":"WORLD_SHAPE","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. walls; for map collision shapes</p>"}]},{"id":"WiJyTYlU703nw0azG43Zm","name":"maxChildren","brief":"","access":"public","defaultValue":"8","scope":"static","see":["game.world.broadphase"],"type":"PropertyDoc","description":"<p>The maximum number of children that a quadtree node can contain before it is split into sub-nodes.</p>"},{"id":"LsSYjuZHeqHBoXhwH2yEA","name":"maxDepth","brief":"","access":"public","defaultValue":"4","scope":"static","see":["game.world.broadphase"],"type":"PropertyDoc","description":"<p>The maximum number of levels that the quadtree will create.</p>"},{"id":"nmutlh2KfAGvl5YStZDYV","name":"rayCast","brief":"","access":"public","examples":[{"caption":"","code":"\n    // define a line accross the viewport\n    var ray = new me.Line(\n        // absolute position of the line\n        0, 0, [\n        // starting point relative to the initial position\n        new me.Vector2d(0, 0),\n        // ending point\n        new me.Vector2d(me.game.viewport.width, me.game.viewport.height)\n    ]);\n\n    // check for collition\n    result = me.collision.rayCast(ray);\n\n    if (result.length > 0) {\n        // ...\n    }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Checks for object colliding with the given line</p>","params":[{"identifier":"line","optional":false,"description":"<p>line to be tested for collision</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}},{"identifier":"result","optional":true,"description":"<p>a user defined array that will be populated with intersecting physic objects.</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>an array of intersecting physic objects</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]}]},{"id":"HPTN31-2qQ_a3YJ5MVx7v","name":"device","brief":"<p>The device capabilities and specific events</p>","type":"NSDoc","members":[{"id":"ueN4rLhCnTa-PzWyi2YRT","name":"accelerationX","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the x-axis.</p>"},{"id":"DGQyiFMf0_9CgRXkTxH14","name":"accelerationY","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the y-axis.</p>"},{"id":"21fJV3oQIKEVB9_-0B_pi","name":"accelerationZ","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the z-axis.</p>"},{"id":"229zziFBAPeanK-mDaTLG","name":"alpha","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Alpha property. Gives angle based on the rotation of the phone around its z axis.\nThe z-axis is perpend..."},{"id":"U9hMi9VfmHmpAVG8SeWGO","name":"android","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an Android platform.</p>"},{"id":"e2dXWmeJ0pnOA1s65bIeZ","name":"android2","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an Android 2.x platform.</p>"},{"id":"uZSTWZyjAG2odqkYRxs0o","name":"autoFocus","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to automatically bring the window to the front</p>"},{"id":"E5UGIjp2xcOSxvER552qw","name":"beta","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Beta property. Gives angle on tilting a portrait held phone forward or backward</p>"},{"id":"-eWXGfiuYS7_fdBn5rHrK","name":"BlackBerry","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a BlackBerry platform.</p>"},{"id":"8ELQmPec2Hg2SbBFpEj4g","name":"chromeOS","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is running on ChromeOS.</p>"},{"id":"rt7mShyZKK096KsSFgLJp","name":"devicePixelRatio","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Ratio of the resolution in physical pixels to the resolution in CSS pixels for the current display device.</p>","returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"AaM8CrUxZQWNfHmbBK7ji","name":"ejecta","brief":"","defaultValue":"false","readonly":true,"scope":"static","see":["http://impactjs.com/ejecta"],"type":"PropertyDoc","description":"<p>equals to true if the game is running under Ejecta.</p>"},{"id":"rSJ9YRF84EDx96u-EWJOd","name":"gamma","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Gamma property. Gives angle on tilting a portrait held phone left or right</p>"},{"id":"mOISB7D5BDwHL5JvZWueI","name":"hasAccelerometer","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser accelerometer capabilities</p>"},{"id":"mY5OoeGtH5oLPtdKz89VA","name":"hasDeviceOrientation","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser device orientation</p>"},{"id":"XlngSYqvm-LTW3zofVkhT","name":"hasFullscreenSupport","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser full screen support</p>"},{"id":"pjyPken9bB2DpxrKDN_Tm","name":"hasPointerLockSupport","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser pointerlock api support</p>"},{"id":"ckSukJPxSgCswH0W4ThtV","name":"hasWebAudio","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Device WebAudio Support</p>"},{"id":"AUOqLnjFvq8f-9JAcl0jW","name":"iOS","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an iOS platform.</p>"},{"id":"YIjDFXFhllgP41ywlzZEE","name":"isFullscreen","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Returns true if the browser/device is in full screen mode.</p>","returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vbF5iRvcpex84ccEvReVE","name":"isMobile","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if a mobile device <br>\n(Android | iPhone | iPad | iPod | BlackBerry | Windows Phone | Kindle)</p>"},{"id":"_Ggxk06yWziHI5YL0ZTjA","name":"isWeixin","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the  is running under Wechat.</p>"},{"id":"A03ik5FLjtEtxRbJmmhd2","name":"Kindle","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Kindle platform.</p>"},{"id":"Uy6IlS4IWgTWzVLZ4Z_Eu","name":"language","brief":"","access":"public","readonly":true,"scope":"static","see":["http://www.w3schools.com/tags/ref_language_codes.asp"],"type":"PropertyDoc","description":"<p>a string representing the preferred language of the user, usually the language of the browser UI.\n(will default to &quot;e..."},{"id":"YrwkKg3wgyFHVmdzqSXpm","name":"linux","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Linux platform.</p>"},{"id":"f-kpAXKiYAhdKcIvSLUQk","name":"localStorage","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser Local Storage capabilities <br>\n(this flag will be set to false if cookies are blocked)</p>"},{"id":"rpsU8OBVLYe2-nThHF8PI","name":"maxTouchPoints","brief":"","defaultValue":"1","examples":[{"caption":"","code":"\n if (me.device.maxTouchPoints > 1) {\n     // device supports multi-touch\n }\n"}],"readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Return the maximum number of simultaneous touch contact points are supported by the current device.</p>"},{"id":"5yI921W2J7vDLW3upMw3t","name":"nativeBase64","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser Base64 decoding capability</p>"},{"id":"vkcCZpO_CaktbZpnAGrhT","name":"nodeJS","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if running under node.js</p>"},{"id":"DDCZd81E0KualQh88AXGG","name":"OffScreenCanvas","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device browser supports OffScreenCanvas.</p>"},{"id":"VjdBrqMAISJNfdGQk7Ffc","name":"pauseOnBlur","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to pause the game when losing focus</p>"},{"id":"siHiTnOJNZmM91GOXj_Zn","name":"resumeOnFocus","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to unpause the game when gaining focus</p>"},{"id":"VNOTnv5uQbIDUOHiNnCTv","name":"ScreenOrientation","brief":"","defaultValue":"false","readonly":true,"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation/onchange"],"type":"PropertyDoc","description":"<p>Supports the ScreenOrientation API</p>"},{"id":"swMvzuH2UpTS3e00nYqWk","name":"sound","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Returns true if the browser/device has audio capabilities.</p>","returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"p0doIoo4KaS5g_QQCGDSg","name":"stopOnBlur","brief":"","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to stop the game when losing focus or not.\nThe engine restarts on focus if this is enabled.</p>"},{"id":"rIGEuEiLKpSmGkmKa8Fby","name":"touch","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Touch capabilities</p>"},{"id":"BNrZYqL-22kE7VYbPzUfj","name":"ua","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>the <code>ua</code> read-only property returns the user agent string for the current browser.</p>"},{"id":"ceWMK004e3iWb_oufIjAm","name":"wheel","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>W3C standard wheel events</p>"},{"id":"iDNhZ87vetd-JW6zH2SA2","name":"wp","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Windows Phone platform.</p>"},{"id":"TMzIUkOnObpFvj4zYwp8J","name":"turnOffPointerLock","brief":"","access":"public","deprecated":"since 10.3.0","scope":"instance","see":["input.exitPointerLock"],"type":"MethodDoc","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4Y0xi8g-Lis-155e6q22M","name":"turnOnPointerLock","brief":"","access":"public","deprecated":"since 10.3.0","scope":"instance","see":["input.requestPointerLock"],"type":"MethodDoc","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hODJDgpl1KmSCBX2cyC4p","name":"enableSwipe","brief":"","scope":"static","type":"FunctionDoc","description":"<p>enable/disable swipe on WebView.</p>","params":[{"identifier":"enable","optional":true,"default":"true","description":"<p>enable or disable swipe.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"achnAV6FnbkNStWs3Qr6X","name":"exitFullscreen","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Exit fullscreen mode. Requires fullscreen support from the browser/device.</p>","params":[],"returns":[]},{"id":"9rVCbfss_zxvaNH6liiZq","name":"focus","brief":"","examples":[{"caption":"","code":"\n  if (clicked) {\n    me.device.focus();\n  }\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Makes a request to bring this device window to the front.</p>","params":[],"returns":[]},{"id":"8sGEEYur4ISgoVkl7rz-5","name":"getElement","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the DOM element for the given element name or HTMLElement object</p>","params":[{"identifier":"element","optional":false,"description":"<p>the parent element name or a HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the corresponding DOM Element or null if not existing</p>","dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"RArke9SyYBSf7twZCzz6W","name":"getElementBounds","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/DOMRect"],"type":"FunctionDoc","description":"<p>returns the size of the given HTMLElement and its position relative to the viewport\n<br><img src=\"images/element-box-diagr...","params":[{"identifier":"element","optional":false,"description":"<p>an HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the size and position of the element relatively to the viewport</p>","dataType":{"tokens":[{"value":"DOMRect","kind":"canonical"},{"value":"DOMRect","kind":"canonical"}],"template":"%1"}}]},{"id":"IHh0njdUH1MckhlVYE5eb","name":"getMaxShaderPrecision","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the highest precision format supported by this device for GL Shaders</p>","params":[{"identifier":"gl","optional":false,"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>&quot;lowp&quot;, &quot;mediump&quot;, or &quot;highp&quot;</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GL1YxHo1cRR2D3tU1vUZe","name":"getParentBounds","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/DOMRect"],"type":"FunctionDoc","description":"<p>returns the size of the given HTMLElement Parent and its position relative to the viewport\n<br><img src=\"images/element-bo...","params":[{"identifier":"element","optional":false,"description":"<p>an HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the size and position of the given element parent relative to the viewport</p>","dataType":{"tokens":[{"value":"DOMRect","kind":"canonical"},{"value":"DOMRect","kind":"canonical"}],"template":"%1"}}]},{"id":"SNJFA0jk0X9B2DneVKC_k","name":"getParentElement","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the parent DOM element for the given parent name or HTMLElement object</p>","params":[{"identifier":"element","optional":false,"description":"<p>the parent element name or a HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the parent Element</p>","dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"zUG8IAYpWZ_9UwBxVWRo-","name":"getScreenOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation"],"type":"FunctionDoc","description":"<p>Return a string representing the orientation of the device screen.\nIt can be &quot;any&quot;, &quot;natural&quot;, &quot;l...","params":[],"returns":[{"description":"<p>the screen orientation</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"JVThahBWm3IOtCpss0Mic","name":"getStorage","brief":"","scope":"static","see":["save"],"type":"FunctionDoc","description":"<p>return the device storage</p>","params":[{"identifier":"type","optional":true,"default":"\"local\"","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a reference to the device storage</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"mdg0NyVbCYNJfTDefqmmp","name":"isLandscape","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return true if the device screen orientation is in Portrait mode</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0i0YIRLiR-EcSYrnASg65","name":"isPortrait","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return true if the device screen orientation is in Portrait mode</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-6XvOcAXSg_czvHKO4rH7","name":"isWebGLSupported","brief":"","scope":"static","type":"FunctionDoc","description":"<p>returns true if the device supports WebGL</p>","params":[{"identifier":"options","optional":true,"description":"<p>context creation options</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if WebGL is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7nIHNs-ozKeE7Zt9E0Hw4","name":"lockOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation"],"type":"FunctionDoc","description":"<p>locks the device screen into the specified orientation.<br>\nThis method only works for installed Web apps or for Web pages...","params":[{"identifier":"orientation","optional":false,"description":"<p>The orientation into which to lock the screen.</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[{"description":"<p>true if the orientation was unsuccessfully locked</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TshAay7wbppSWbpTm6V3W","name":"onReady","brief":"","examples":[{"caption":"","code":"\n // small game skeleton\n var game = {\n    // called by the me.device.onReady function\n    onload : function () {\n       // init video\n       if (!me.video.init('screen', 640, 480, true)) {\n          alert(\"Sorry but your browser does not support html 5 canvas.\");\n          return;\n       }\n\n       // initialize the \"audio\"\n       me.audio.init(\"mp3,ogg\");\n\n       // set callback for ressources loaded event\n       me.loader.onload = this.loaded.bind(this);\n\n       // set all ressources to be loaded\n       me.loader.preload(game.assets);\n\n       // load everything & display a loading screen\n       me.state.change(me.state.LOADING);\n    },\n\n    // callback when everything is loaded\n    loaded : function () {\n       // define stuff\n       // ....\n\n       // change to the menu screen\n       me.state.change(me.state.PLAY);\n    }\n }, // game\n\n // \"bootstrap\"\n me.device.onReady(function () {\n    game.onload();\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>specify a function to execute when the Device is fully loaded and ready</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to be executed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"KZYxGxACEWg0NwTlP_mAO","name":"requestFullscreen","brief":"","examples":[{"caption":"","code":"\n // add a keyboard shortcut to toggle Fullscreen mode on/off\n me.input.bindKey(me.input.KEY.F, \"toggleFullscreen\");\n me.event.on(me.event.KEYDOWN, function (action, keyCode, edge) {\n    // toggle fullscreen on/off\n    if (action === \"toggleFullscreen\") {\n       if (!me.device.isFullscreen) {\n          me.device.requestFullscreen();\n       } else {\n          me.device.exitFullscreen();\n       }\n    }\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Triggers a fullscreen request. Requires fullscreen support from the browser/device.</p>","params":[{"identifier":"element","optional":true,"default":"default canvas object","description":"<p>the element to be set in full-screen mode.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"d_2UWLzDYP0Qx9cNZEC2-","name":"unlockOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation"],"type":"FunctionDoc","description":"<p>unlocks the device screen into the specified orientation.<br>\nThis method only works for installed Web apps or for Web pag...","params":[],"returns":[{"description":"<p>true if the orientation was unsuccessfully unlocked</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_UCn5OQ7QJ26YB2b-39lc","name":"unwatchAccelerometer","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unwatch Accelerometor event</p>","params":[],"returns":[]},{"id":"PajO9dfVqo94XAK_G_IO_","name":"unwatchDeviceOrientation","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unwatch Device orientation event</p>","params":[],"returns":[]},{"id":"H1TacTpwLmdheJyNr9l2S","name":"vibrate","brief":"","examples":[{"caption":"","code":"\n // vibrate for 1000 ms\n me.device.vibrate(1000);\n // or alternatively\n me.device.vibrate([1000]);\n // vibrate for 50 ms, be still for 100 ms, and then vibrate for 150 ms:\n me.device.vibrate([50, 100, 150]);\n // cancel any existing vibrations\n me.device.vibrate(0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>the vibrate method pulses the vibration hardware on the device, <br>\nIf the device doesn't support vibration, this method ...","params":[{"identifier":"pattern","optional":false,"description":"<p>pattern of vibration and pause intervals</p>","dataType":{"tokens":[{"value":"number | Array<number>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | %3<%2>"}}],"returns":[]},{"id":"qVK9IY8Lg7Omv1AitVsAg","name":"watchAccelerometer","brief":"","examples":[{"caption":"","code":"\n // try to enable device accelerometer event on user gesture\n me.input.registerPointerEvent(\"pointerleave\", me.game.viewport, function() {\n     if (me.device.watchAccelerometer() === true) {\n         // Success\n         me.input.releasePointerEvent(\"pointerleave\", me.game.viewport);\n     } else {\n         // ... fail at enabling the device accelerometer event\n     }\n });\n"}],"scope":"static","see":["device.accelerationX","device.accelerationY","device.accelerationZ"],"type":"FunctionDoc","description":"<p>Enable monitor of the device accelerator to detect the amount of physical force of acceleration the device is receiving.\n(...","params":[],"returns":[{"description":"<p>false if not supported or permission not granted by the user</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HLlWONTPXFsLueCZ8U_1A","name":"watchDeviceOrientation","brief":"","examples":[{"caption":"","code":"\n // try to enable device orientation event on user gesture\n me.input.registerPointerEvent(\"pointerleave\", me.game.viewport, function() {\n     if (me.device.watchDeviceOrientation() === true) {\n         // Success\n         me.input.releasePointerEvent(\"pointerleave\", me.game.viewport);\n     } else {\n         // ... fail at enabling the device orientation event\n     }\n });\n"}],"scope":"static","see":["device.alpha","device.beta","device.gamma"],"type":"FunctionDoc","description":"<p>Enable monitor of the device orientation to detect the current orientation of the device as compared to the Earth coordina...","params":[],"returns":[{"description":"<p>false if not supported or permission not granted by the user</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"vjgUJ8FlDsBLvtDBatsle","name":"event","brief":"","type":"NSDoc","description":"<p>an event system based on nodeJS EventEmitter interface</p>","members":[{"id":"CR4msSLAOOTdGwYX39xiI","name":"BOOT","brief":"","access":"public","defaultValue":"\"me.boot\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the system is booting</p>"},{"id":"pxCMPmucuCRVIXnIOG9dN","name":"CANVAS_ONRESIZE","brief":"","access":"public","defaultValue":"\"canvas.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the canvas is resized <br>\n(this usually follows a WINDOW_ONRESIZE event).<br>\nData passed : {number} canva..."},{"id":"d39T8cWcG1zSo-dWbZSu4","name":"DRAGEND","brief":"","access":"public","defaultValue":"\"me.game.dragend\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for dragend events on a Draggable entity <br>\nData passed:\n{object} the drag event <br>\n{object} the Draggable entit..."},{"id":"jHg6g80KrYzaoIo6SXGrL","name":"DRAGSTART","brief":"","access":"public","defaultValue":"\"me.game.dragstart\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for dragstart events on a Draggable entity <br>\nData passed:\n{object} the drag event <br>\n{object} the Draggable ent..."},{"id":"1Q4sc0yOhDO7NNgieJW-b","name":"GAME_AFTER_DRAW","brief":"","access":"public","defaultValue":"\"me.game.afterDraw\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for the start of the draw loop\nData passed : {number} time the current time stamp</p>"},{"id":"oAPgl5EVD-IwsKevl_btH","name":"GAME_AFTER_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.afterUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for the end of the update loop\nData passed : {number} time the current time stamp</p>"},{"id":"zabFDRc1cI1h9RKyRl-6C","name":"GAME_BEFORE_DRAW","brief":"","access":"public","defaultValue":"\"me.game.beforeDraw\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for the end of the draw loop\nData passed : {number} time the current time stamp</p>"},{"id":"amvGbQhcyS6W4Lgh2B_oW","name":"GAME_BEFORE_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.beforeUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the engine is about to start a new game loop\nData passed : {number} time the current time stamp</p>"},{"id":"Y83-fAk-QmF725EcQ8Xks","name":"GAME_INIT","brief":"","access":"public","defaultValue":"\"me.game.onInit\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game manager is initialized <br>\nData passed : none <br></p>"},{"id":"BUMNesomLL8TI0QKs8v-p","name":"GAME_RESET","brief":"","access":"public","defaultValue":"\"me.game.onReset\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game manager is resetted <br>\nData passed : none <br></p>"},{"id":"iuD2CJgOz5edMpM95Ioin","name":"GAME_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.onUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the game is updated (will be impacted by frame skip, frame interpolation and pause/resume state) <br>\nData ..."},{"id":"yxCWuqPxrweWhpTzFyrUM","name":"GAMEPAD_CONNECTED","brief":"","access":"public","defaultValue":"\"gamepad.connected\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a gamepad is connected <br>\nData passed : {object} gamepad object</p>"},{"id":"t5sTGvcvuyZf-tCaPQ4lF","name":"GAMEPAD_DISCONNECTED","brief":"","access":"public","defaultValue":"\"gamepad.disconnected\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a gamepad is disconnected <br>\nData passed : {object} gamepad object</p>"},{"id":"eF6S-u0-FWy-bz4wbYH3I","name":"GAMEPAD_UPDATE","brief":"","access":"public","defaultValue":"\"gamepad.update\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when gamepad button/axis state is updated <br>\nData passed : {number} index <br>\nData passed : {string} type : &..."},{"id":"SE4UTkjQZ6xZ-eZKUPXjl","name":"KEYDOWN","brief":"","access":"public","defaultValue":"\"me.input.keydown\"","examples":[{"caption":"","code":"\n me.input.bindKey(me.input.KEY.X, \"jump\", true); // Edge-triggered\n me.input.bindKey(me.input.KEY.Z, \"shoot\"); // Level-triggered\n me.event.on(me.event.KEYDOWN, (action, keyCode, edge) => {\n   // Checking bound keys\n   if (action === \"jump\") {\n       if (edge) {\n           this.doJump();\n       }\n\n       // Make character fall slower when holding the jump key\n       this.vel.y = this.body.gravity;\n   }\n });\n"}],"readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for pressing a binded key <br>\nData passed : {string} user-defined action, {number} keyCode,\n{boolean} edge state <b..."},{"id":"adUccxUcl4x08jztoo4Ag","name":"KEYUP","brief":"","access":"public","defaultValue":"\"me.input.keyup\"","examples":[{"caption":"","code":"\n me.event.on(me.event.KEYUP, (action, keyCode) => {\n   // Checking unbound keys\n   if (keyCode == me.input.KEY.ESC) {\n       if (me.state.isPaused()) {\n           me.state.resume();\n       }\n       else {\n           me.state.pause();\n       }\n   }\n });\n"}],"readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for releasing a binded key <br>\nData passed : {string} user-defined action, {number} keyCode</p>"},{"id":"uhKKI78I8S3ZLSvYan0KZ","name":"LEVEL_LOADED","brief":"","access":"public","defaultValue":"\"me.game.onLevelLoaded\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a level is loaded <br>\nData passed : {string} Level Name</p>"},{"id":"9fMLJRvjgXHyEwj3V67am","name":"LOADER_COMPLETE","brief":"","access":"public","defaultValue":"\"me.loader.onload\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when everything has loaded <br>\nData passed : none <br></p>"},{"id":"l6T9MXsjcr6SUFb4puMtX","name":"LOADER_PROGRESS","brief":"","access":"public","defaultValue":"\"me.loader.onProgress\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for displaying a load progress indicator <br>\nData passed : {number} [0 .. 1], {Resource} resource object<br></p>"},{"id":"1q_xJ81QR8FMiV9fXp1Jp","name":"ONCONTEXT_RESTORED","brief":"","access":"public","defaultValue":"\"renderer.contextrestored\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the current context is restored <br>\nData passed : {me.Renderer} the current renderer instance`</p>"},{"id":"glgKMTdpRalBWV3rYG6ER","name":"POINTERLOCKCHANGE","brief":"","access":"public","defaultValue":"\"me.event.pointerlockChange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for onPointerLockChange event <br>\nData passed : {boolean} pointer lock status (true/false)</p>"},{"id":"7PLlIDHklnC24eY7dHV_Y","name":"POINTERMOVE","brief":"","access":"public","defaultValue":"\"me.event.pointermove\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for pointermove events on the screen area <br>\nData passed : {me.Pointer} a Pointer object</p>"},{"id":"dkUHmcQvMky24MrW2Ao3r","name":"STATE_CHANGE","brief":"","access":"public","defaultValue":"\"me.state.onChange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the changing to a different stage</p>"},{"id":"mJzyNC5ObqWcu73V7YPjt","name":"STATE_PAUSE","brief":"","access":"public","defaultValue":"\"me.state.onPause\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the game is paused <br>\nData passed : none <br></p>"},{"id":"e25jYinaKPJH1aONosEKs","name":"STATE_RESTART","brief":"","access":"public","defaultValue":"\"me.state.onRestart\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game is restarted <br>\nData passed : {number} time in ms the game was stopped</p>"},{"id":"lkQ6N-vH3_9T3jAHi2Rmg","name":"STATE_RESUME","brief":"","access":"public","defaultValue":"\"me.state.onResume\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game is resumed <br>\nData passed : {number} time in ms the game was paused</p>"},{"id":"QofW0enKURjvm2zbWro46","name":"STATE_STOP","brief":"","access":"public","defaultValue":"\"me.state.onStop\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the game is stopped <br>\nData passed : none <br></p>"},{"id":"lH9KEICyG6ehvjV7KvrTh","name":"VIDEO_INIT","brief":"","access":"public","defaultValue":"\"me.video.onInit\"","readonly":true,"see":["video.init","event.on"],"type":"PropertyDoc","description":"<p>event for when the video is initialized<br>\nData passed : none <br></p>"},{"id":"whaBmuxsfi-Re1n_HrxP4","name":"VIEWPORT_ONCHANGE","brief":"","access":"public","defaultValue":"\"viewport.onchange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the viewport position is updated <br>\nData passed : {me.Vector2d} viewport position vector</p>"},{"id":"S5Qht7JVSBLkiH3vaWeit","name":"VIEWPORT_ONRESIZE","brief":"","access":"public","defaultValue":"\"viewport.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the viewport is resized <br>\n(this usually follows a WINDOW_ONRESIZE event, when using the <code>flex</code..."},{"id":"29BcSQMOqLXtG8c4vAx0c","name":"WEBGL_ONCONTEXT_LOST","brief":"","access":"public","defaultValue":"\"renderer.contextlost\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the current context is lost <br>\nData passed : {me.Renderer} the current renderer instance</p>"},{"id":"vaARexyKWuc6N98yDUBXa","name":"WINDOW_ONORIENTATION_CHANGE","brief":"","access":"public","defaultValue":"\"globalThis.orientationchange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the device is rotated <br>\nData passed : {Event} Event object <br></p>"},{"id":"VBl8lDrMJaH7nLB59Xbkn","name":"WINDOW_ONRESIZE","brief":"","access":"public","defaultValue":"\"globalThis.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the (browser) window is resized <br>\nData passed : {Event} Event object</p>"},{"id":"12w37AoEtFSfCmBIYbWp9","name":"WINDOW_ONSCROLL","brief":"","access":"public","defaultValue":"\"globalThis.onscroll\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the (browser) window is scrolled <br>\nData passed : {Event} Event object</p>"},{"id":"gkkbpC4ldeDrWXLb96RXe","name":"emit","brief":"","examples":[{"caption":"","code":"\n me.event.emit(\"event-name\", a, b, c);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>calls each of the listeners registered for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>arguments to be passed to all listeners</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the event had listeners, false otherwise.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5X9BEL8tV2d3dCDHeAinf","name":"off","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.off(\"event-name\", myFunction);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>remove the given listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]},{"id":"zJ8BvUNRvNFRTTQotHMD_","name":"on","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.on(\"event-name\", myFunction, this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Add a listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"context","optional":true,"default":"this","description":"<p>The context to invoke the listener with.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]},{"id":"e9X2c4SSTPLylYD6OgZFo","name":"once","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.once(\"event-name\", myFunction, this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Add a one-time listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"context","optional":true,"default":"this","description":"<p>The context to invoke the listener with.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]}]},{"id":"FvA2GK0De6UuE2lxqjPcR","name":"game","brief":"","defaultValue":"true","type":"NSDoc","description":"<p>game represents your current game, it contains all the objects,\ntilemap layers, current viewport, collision map, etc...<br...","members":[{"id":"YzT4GFStIQd_iOL2dcgkx","name":"lastUpdate","brief":"","access":"public","type":"PropertyDoc","description":"<p>Last time the game update loop was executed. <br>\nUse this value to implement frame prediction in drawing events,\nfor crea..."},{"id":"U4a2r9xrxGhqOM9iXilzU","name":"mergeGroup","brief":"","access":"public","defaultValue":"true","type":"PropertyDoc","description":"<p>when true, all objects will be added under the root world container.<br>\nWhen false, a <code>me.Container</code> object wi..."},{"id":"OHy_1cBFpoyqBZ6KX-39X","name":"sortOn","brief":"","access":"public","defaultValue":"\"z\"","type":"PropertyDoc","description":"<p>Specify the property to be used when sorting entities.\nAccepted values : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"z7oWfBqYPdpk2uaXY8uj5","name":"viewport","brief":"","access":"public","type":"PropertyDoc","description":"<p>a reference to the current active stage &quot;default&quot; camera</p>"},{"id":"JO1W9pV-NZHTdkLxilCiQ","name":"world","brief":"","access":"public","type":"PropertyDoc","description":"<p>a reference to the game world, <br>\na world is a virtual environment containing all the game objects</p>"},{"id":"z6okTUpHfI2TIdLQS8IfD","name":"getParentContainer","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Returns the parent container of the specified Child in the game world</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}}]},{"id":"Ya9zOGdfhR4_I0EnMq_hg","name":"onLevelLoaded","brief":"","examples":[{"caption":"","code":"\n // call myFunction () everytime a level is loaded\n me.game.onLevelLoaded = this.myFunction.bind(this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Fired when a level is fully loaded and all entities instantiated. <br>\nAdditionnaly the level id will also be passed to th...","params":[],"returns":[]},{"id":"8AqP2anLvAmz7qAA6vOiQ","name":"repaint","brief":"","scope":"static","type":"FunctionDoc","description":"<p>force the redraw (not update) of all objects</p>","params":[],"returns":[]},{"id":"WDN53BncmxiofhAcPPpbZ","name":"reset","brief":"","scope":"static","type":"FunctionDoc","description":"<p>reset the game Object manager<br>\ndestroy all current objects</p>","params":[],"returns":[]},{"id":"L6Xi3l4hShwG5mrs_2Re7","name":"updateFrameRate","brief":"","scope":"static","see":["timer.maxfps","World.fps"],"type":"FunctionDoc","description":"<p>Update the renderer framerate using the system config variables.</p>","params":[],"returns":[]}]},{"id":"hcYwjE7SuZIu3YBXkldSj","name":"input","brief":"","type":"NSDoc","members":[{"id":"pGq0QeeC9OUX0BBoWjjOa","name":"GAMEPAD","brief":"","access":"public","type":"NSDoc","description":"<p>Namespace for standard gamepad mapping constants</p>","members":[{"id":"vFL2GeB3mI9MK9uEcsp97","name":"AXES","brief":"","access":"public","scope":"static","see":["https://w3c.github.io/gamepad/#remapping"],"type":"EnumDoc","description":"<p>Standard gamepad mapping information for axes<br></p>\n <ul>\n   <li>Left control stick: <code>LX</code> (horizontal), <code..."},{"id":"-MjlBkWxIgJZQwIxDAr22","name":"BUTTONS","brief":"","access":"public","scope":"static","see":["https://w3c.github.io/gamepad/#remapping"],"type":"EnumDoc","description":"<p>Standard gamepad mapping information for buttons<br></p>\n <ul>\n   <li>Face buttons: <code>FACE_1</code>, <code>FACE_2</cod..."}]},{"id":"bVF0jt7r9v_NPq0LP3G7j","name":"KEY","brief":"","access":"public","readonly":true,"type":"EnumDoc","description":"<p>standard keyboard constants</p>","members":[{"id":"PXi7NC5RNB785s5wuoRZ3","name":"A","brief":"","defaultValue":"65","scope":"static","type":"PropertyDoc"},{"id":"xO3RbihcWRR5bDuVC19uh","name":"ADD","brief":"","defaultValue":"107","scope":"static","type":"PropertyDoc"},{"id":"UpGYmxW0W-38jRxeX-DBP","name":"ALT","brief":"","defaultValue":"18","scope":"static","type":"PropertyDoc"},{"id":"gfqBawo4qa4tJ6fMiLgj6","name":"B","brief":"","defaultValue":"66","scope":"static","type":"PropertyDoc"},{"id":"81nHt80VzcwYHmhRzUBMv","name":"BACK_SLASH","brief":"","defaultValue":"220","scope":"static","type":"PropertyDoc"},{"id":"jOlOUo4adsKzu67bZ8dzv","name":"C","brief":"","defaultValue":"67","scope":"static","type":"PropertyDoc"},{"id":"RIXX-R89meUCe1CtDAdFm","name":"CAPS_LOCK","brief":"","defaultValue":"20","scope":"static","type":"PropertyDoc"},{"id":"k0FDGyeeUDuzrz5TmG3x8","name":"CLOSE_BRACKET","brief":"","defaultValue":"221","scope":"static","type":"PropertyDoc"},{"id":"noJCK3uqUoe1c2dJzyyfT","name":"COMMA","brief":"","defaultValue":"188","scope":"static","type":"PropertyDoc"},{"id":"_wyrRqwenMd_XrAW2hNdV","name":"CTRL","brief":"","defaultValue":"17","scope":"static","type":"PropertyDoc"},{"id":"USrux_lWzJW7Itfb_2Qyr","name":"D","brief":"","defaultValue":"68","scope":"static","type":"PropertyDoc"},{"id":"ZA6KB19D4ce7eWzrtiNjv","name":"DECIMAL","brief":"","defaultValue":"110","scope":"static","type":"PropertyDoc"},{"id":"zMnuydOdTwPEPmm8fvFFg","name":"DELETE","brief":"","defaultValue":"46","scope":"static","type":"PropertyDoc"},{"id":"v0c4Sv2qbnW12_N02eG4T","name":"DIVIDE","brief":"","defaultValue":"111","scope":"static","type":"PropertyDoc"},{"id":"o_Iw7sEOdMXevLp_6an1X","name":"DOWN","brief":"","defaultValue":"40","scope":"static","type":"PropertyDoc"},{"id":"treZipvUdIuHVN19dL3Rj","name":"E","brief":"","defaultValue":"69","scope":"static","type":"PropertyDoc"},{"id":"p_ta62O8FPIjS3rI1wft1","name":"END","brief":"","defaultValue":"35","scope":"static","type":"PropertyDoc"},{"id":"JXFZy41IJGmq5TWy4gGga","name":"ENTER","brief":"","defaultValue":"13","scope":"static","type":"PropertyDoc"},{"id":"ex2OygDtigXT3f_CoDiTo","name":"ESC","brief":"","defaultValue":"27","scope":"static","type":"PropertyDoc"},{"id":"oFseSLhZhkfNNYWwCoUzp","name":"F","brief":"","defaultValue":"70","scope":"static","type":"PropertyDoc"},{"id":"25Dluu0go_1wHQE7wrH_M","name":"F1","brief":"","defaultValue":"112","scope":"static","type":"PropertyDoc"},{"id":"Gw1XnyBnzT7XPzrlrKc5n","name":"F10","brief":"","defaultValue":"121","scope":"static","type":"PropertyDoc"},{"id":"gj_OTFkgAqHFOa_JVaBtj","name":"F11","brief":"","defaultValue":"122","scope":"static","type":"PropertyDoc"},{"id":"Bp0OPXkREWdd1-8Z7wezR","name":"F12","brief":"","defaultValue":"123","scope":"static","type":"PropertyDoc"},{"id":"31laPfhEpruMXsP5foIII","name":"F2","brief":"","defaultValue":"113","scope":"static","type":"PropertyDoc"},{"id":"OPutekup8iNDXTkCcd8M9","name":"F3","brief":"","defaultValue":"114","scope":"static","type":"PropertyDoc"},{"id":"ol6IvZlNOq0OqM5R4Jn7r","name":"F4","brief":"","defaultValue":"115","scope":"static","type":"PropertyDoc"},{"id":"8ofnzgVoK97GS73C26nRH","name":"F5","brief":"","defaultValue":"116","scope":"static","type":"PropertyDoc"},{"id":"TuBQrAWhnPLdutxNh3yHh","name":"F6","brief":"","defaultValue":"117","scope":"static","type":"PropertyDoc"},{"id":"ggWyz5E5SbQLecWakEMlq","name":"F7","brief":"","defaultValue":"118","scope":"static","type":"PropertyDoc"},{"id":"9u21pwWWkZO2HKaSZyX9A","name":"F8","brief":"","defaultValue":"119","scope":"static","type":"PropertyDoc"},{"id":"3YPMK2ciDKU63N83l7bec","name":"F9","brief":"","defaultValue":"120","scope":"static","type":"PropertyDoc"},{"id":"q5elxjmrELINHAo9QPv7B","name":"FORWAND_SLASH","brief":"","defaultValue":"191","scope":"static","type":"PropertyDoc"},{"id":"CmpnnWyR9r13Wjl-kSyVO","name":"G","brief":"","defaultValue":"71","scope":"static","type":"PropertyDoc"},{"id":"6sVWTcH63IO5AV0gHmV-c","name":"GRAVE_ACCENT","brief":"","defaultValue":"192","scope":"static","type":"PropertyDoc"},{"id":"p2v9xZqsBpKS2-Ns9f1N_","name":"H","brief":"","defaultValue":"72","scope":"static","type":"PropertyDoc"},{"id":"M1AJFrShdg2WpLs2pf8cb","name":"HOME","brief":"","defaultValue":"36","scope":"static","type":"PropertyDoc"},{"id":"h7d53bXgcPiZemK4r19cx","name":"I","brief":"","defaultValue":"73","scope":"static","type":"PropertyDoc"},{"id":"v9UpvXZ8Fy8cjYSu1YRMq","name":"INSERT","brief":"","defaultValue":"45","scope":"static","type":"PropertyDoc"},{"id":"EiCVud1RAgXs9uJpSpQCP","name":"J","brief":"","defaultValue":"74","scope":"static","type":"PropertyDoc"},{"id":"8Y_R1qP5e3ZEX-f-oDQ9U","name":"K","brief":"","defaultValue":"75","scope":"static","type":"PropertyDoc"},{"id":"tiewhkIGEzVC17rOT6hTh","name":"L","brief":"","defaultValue":"76","scope":"static","type":"PropertyDoc"},{"id":"KTb3P00vFWxspMZRsUvra","name":"LEFT","brief":"","defaultValue":"37","scope":"static","type":"PropertyDoc"},{"id":"VI64C_kS66gvjQmTiB3ee","name":"M","brief":"","defaultValue":"77","scope":"static","type":"PropertyDoc"},{"id":"vNOD35Xl5XOm7d01N16kl","name":"MINUS","brief":"","defaultValue":"189","scope":"static","type":"PropertyDoc"},{"id":"nVA_PuwmvNCt7nu8fTDAe","name":"MULTIPLY","brief":"","defaultValue":"106","scope":"static","type":"PropertyDoc"},{"id":"50sdgqC9uqgdK1WnX3-Qf","name":"N","brief":"","defaultValue":"78","scope":"static","type":"PropertyDoc"},{"id":"_alvSdTjakei1buIP3wYa","name":"NUM_LOCK","brief":"","defaultValue":"144","scope":"static","type":"PropertyDoc"},{"id":"y3snCxtpMogleWiom3-wH","name":"NUM0","brief":"","defaultValue":"48","scope":"static","type":"PropertyDoc"},{"id":"O_juglzyq563ZwtWcB_sg","name":"NUM1","brief":"","defaultValue":"49","scope":"static","type":"PropertyDoc"},{"id":"xqSVGMCwhyvxyWoFqVevj","name":"NUM2","brief":"","defaultValue":"50","scope":"static","type":"PropertyDoc"},{"id":"g2kfU9nPZ2O8VIJS0T5AI","name":"NUM3","brief":"","defaultValue":"51","scope":"static","type":"PropertyDoc"},{"id":"M0jcnyGHG6vemDosxxIjp","name":"NUM4","brief":"","defaultValue":"52","scope":"static","type":"PropertyDoc"},{"id":"OcuiOGw-6ffKYxrY-iyLZ","name":"NUM5","brief":"","defaultValue":"53","scope":"static","type":"PropertyDoc"},{"id":"Aqbc-_FKz5ahNptxBxUWe","name":"NUM6","brief":"","defaultValue":"54","scope":"static","type":"PropertyDoc"},{"id":"6T1pYy4FSGvb5FAj2liFK","name":"NUM7","brief":"","defaultValue":"55","scope":"static","type":"PropertyDoc"},{"id":"E9GIIQ7JEtEEB31l0uyk2","name":"NUM8","brief":"","defaultValue":"56","scope":"static","type":"PropertyDoc"},{"id":"op0Nyo-Z3pCwRmaCjU1Pe","name":"NUM9","brief":"","defaultValue":"57","scope":"static","type":"PropertyDoc"},{"id":"LCPoWSF7jzhmZms2RMVS1","name":"NUMPAD0","brief":"","defaultValue":"96","scope":"static","type":"PropertyDoc"},{"id":"FWU11DXZ3dV7yG348I-Iv","name":"NUMPAD1","brief":"","defaultValue":"97","scope":"static","type":"PropertyDoc"},{"id":"iE1AM1uUj04mKctdMWmYK","name":"NUMPAD2","brief":"","defaultValue":"98","scope":"static","type":"PropertyDoc"},{"id":"7Xn21wi0ohhiDxbatvlj6","name":"NUMPAD3","brief":"","defaultValue":"99","scope":"static","type":"PropertyDoc"},{"id":"PMa6csaqnjWvZJVNeGNvy","name":"NUMPAD4","brief":"","defaultValue":"100","scope":"static","type":"PropertyDoc"},{"id":"0Ce9FfLNZV1_HHvwm8tbO","name":"NUMPAD5","brief":"","defaultValue":"101","scope":"static","type":"PropertyDoc"},{"id":"y7746JQEKvc4miAqZ-jwW","name":"NUMPAD6","brief":"","defaultValue":"102","scope":"static","type":"PropertyDoc"},{"id":"HQqC-1a_SsjyW3M_N0p1V","name":"NUMPAD7","brief":"","defaultValue":"103","scope":"static","type":"PropertyDoc"},{"id":"pjvW1gAW3XUf45PAlXw_U","name":"NUMPAD8","brief":"","defaultValue":"104","scope":"static","type":"PropertyDoc"},{"id":"QZDAPajDGt1pK4Pu7vC8Q","name":"NUMPAD9","brief":"","defaultValue":"105","scope":"static","type":"PropertyDoc"},{"id":"bpnlilxbADHuSz10csFQi","name":"O","brief":"","defaultValue":"79","scope":"static","type":"PropertyDoc"},{"id":"ljrh96-2g_06dSX3v8wzR","name":"OPEN_BRACKET","brief":"","defaultValue":"219","scope":"static","type":"PropertyDoc"},{"id":"dudZeh8NQSTBfQ0FjpoYF","name":"P","brief":"","defaultValue":"80","scope":"static","type":"PropertyDoc"},{"id":"YLFt6aQ1lxM85ynXsGMoa","name":"PAGE_DOWN","brief":"","defaultValue":"34","scope":"static","type":"PropertyDoc"},{"id":"yuXcRyCjFMLpgAjVyBXNu","name":"PAGE_UP","brief":"","defaultValue":"33","scope":"static","type":"PropertyDoc"},{"id":"4NLFsnGw_YcTHxhiwUhbk","name":"PAUSE","brief":"","defaultValue":"19","scope":"static","type":"PropertyDoc"},{"id":"_rbNX-0bwyJ7zga4tzcug","name":"PERIOD","brief":"","defaultValue":"190","scope":"static","type":"PropertyDoc"},{"id":"tis9X8dSf9zFShCtP8lCi","name":"PLUS","brief":"","defaultValue":"187","scope":"static","type":"PropertyDoc"},{"id":"R0_UZaEXYS-_soP1pLwlG","name":"PRINT_SCREEN","brief":"","defaultValue":"42","scope":"static","type":"PropertyDoc"},{"id":"EySnS7GNaYbypZB5maM7M","name":"Q","brief":"","defaultValue":"81","scope":"static","type":"PropertyDoc"},{"id":"U2BcrJLYnRcS6D4UVFfQ0","name":"R","brief":"","defaultValue":"82","scope":"static","type":"PropertyDoc"},{"id":"VVuwawv04A06DN3weGMFa","name":"RIGHT","brief":"","defaultValue":"39","scope":"static","type":"PropertyDoc"},{"id":"ehh1sK0h9bkGPyhFYPOME","name":"S","brief":"","defaultValue":"83","scope":"static","type":"PropertyDoc"},{"id":"wtQESdFSiIy8glpQCdd9w","name":"SCROLL_LOCK","brief":"","defaultValue":"145","scope":"static","type":"PropertyDoc"},{"id":"n-bIEC777N7q1oEeroGcW","name":"SEMICOLON","brief":"","defaultValue":"186","scope":"static","type":"PropertyDoc"},{"id":"JPagD-CwrY1CATmoZQkXt","name":"SHIFT","brief":"","defaultValue":"16","scope":"static","type":"PropertyDoc"},{"id":"ITLcPq_IDQk9JgQZnsxox","name":"SINGLE_QUOTE","brief":"","defaultValue":"222","scope":"static","type":"PropertyDoc"},{"id":"BIEROUSrTbUH-4YCPtjT6","name":"SPACE","brief":"","defaultValue":"32","scope":"static","type":"PropertyDoc"},{"id":"VEJbXEOv6Y_ljK9fiZ6z0","name":"SUBSTRACT","brief":"","defaultValue":"109","scope":"static","type":"PropertyDoc"},{"id":"oWQMOOB9__XDQUHP16wRO","name":"T","brief":"","defaultValue":"84","scope":"static","type":"PropertyDoc"},{"id":"mEsbAfSiymjpiA6-wtwE0","name":"TAB","brief":"","defaultValue":"9","scope":"static","type":"PropertyDoc"},{"id":"DCqYVXnYauQiLHtiqQrzO","name":"TILDE","brief":"","defaultValue":"126","scope":"static","type":"PropertyDoc"},{"id":"RWjMlcYSElcnxXghrA7cS","name":"U","brief":"","defaultValue":"85","scope":"static","type":"PropertyDoc"},{"id":"bwog-QqY656miTRULRaiN","name":"UP","brief":"","defaultValue":"38","scope":"static","type":"PropertyDoc"},{"id":"KktaeXcGuYAnAHRyW7NAW","name":"V","brief":"","defaultValue":"86","scope":"static","type":"PropertyDoc"},{"id":"HVXGVOcNHnZFrgtgWYcOW","name":"W","brief":"","defaultValue":"87","scope":"static","type":"PropertyDoc"},{"id":"oyDSwwRdhQca8Zq1Otsls","name":"WINDOW_KEY","brief":"","defaultValue":"91","scope":"static","type":"PropertyDoc"},{"id":"YsBL79fBC8Ph5-pNuTlzC","name":"X","brief":"","defaultValue":"88","scope":"static","type":"PropertyDoc"},{"id":"EP28bCNSNrNemzA886mpy","name":"Y","brief":"","defaultValue":"89","scope":"static","type":"PropertyDoc"},{"id":"CRThQTkmg-EDwb1oB_uJ6","name":"Z","brief":"","defaultValue":"90","scope":"static","type":"PropertyDoc"}]},{"id":"QkzOXaUQuIJLQ3tgMa9eX","name":"keyBoardEventTarget","brief":"","access":"public","defaultValue":"undefined","type":"PropertyDoc","description":"<p>the default target element for keyboard events (usually the window element in which the game is running)</p>"},{"id":"9jJ2KzVe8Jf-IO9YbnmUy","name":"locked","brief":"","access":"public","defaultValue":"false","type":"PropertyDoc","description":"<p>indicates if the pointer is currently locked</p>"},{"id":"JbmVeCrUYrwSayGVTcDxV","name":"pointer","brief":"","access":"public","type":"PropertyDoc","description":"<p>Pointer information (current position and size)</p>"},{"id":"3Yd_N-YHHbP2idaLLEyhk","name":"pointerEventTarget","brief":"","access":"public","defaultValue":"undefined","type":"PropertyDoc","description":"<p>the default target element for pointer events (usually the canvas element in which the game is rendered)</p>"},{"id":"12xWbmAMcuOglhenjFgyr","name":"preventDefault","brief":"","access":"public","defaultValue":"true","type":"PropertyDoc","description":"<p>specify if melonJS should prevent all default browser action on registered events.</p>"},{"id":"_ReI8fv9PFgjXnd7P0vhC","name":"setGamepadMapping","brief":"","access":"public","examples":[{"caption":"","code":"\n // A weird controller that has its axis mappings reversed\n me.input.setGamepadMapping(\"Generic USB Controller\", {\n   \"axes\" : [ 3, 2, 1, 0 ],\n   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]\n });\n\n // Mapping extra axes to analog buttons\n me.input.setGamepadMapping(\"Generic Analog Controller\", {\n   \"axes\" : [ 0, 1, 2, 3 ],\n   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ],\n\n   // Raw axis 4 is mapped to GAMEPAD.BUTTONS.FACE_1\n   // Raw axis 5 is mapped to GAMEPAD.BUTTONS.FACE_2\n   // etc...\n   // Also maps left and right triggers\n   \"analog\" : [ 4, 5, 6, 7, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],\n\n   // Normalize the value of button L2: [-1.0..1.0] => [0.0..1.0]\n   \"normalize_fn\" : function (value, axis, button) {\n     return ((button === me.input.GAMEPAD.BUTTONS.L2) ? ((value + 1) / 2) : value) || 0;\n   }\n });\n"}],"type":"PropertyDoc","description":"<p>specify a custom mapping for a specific gamepad id<br>\nsee below for the default mapping : <br></p>\n <center><img src=\"ima...","params":[{"identifier":"id","description":"<p>Gamepad id string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"mapping","description":"<p>A hash table</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"mapping.axes","description":"<p>Standard analog control stick axis locations</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.buttons","description":"<p>Standard digital button locations</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.analog","optional":true,"description":"<p>Analog axis locations for buttons</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.normalize_fn","optional":true,"description":"<p>a function that returns a normalized value in range [-1.0..1.0] for the given value, axis and button</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}]},{"id":"YzaxmN25oQKG9U5En3Jz8","name":"throttlingInterval","brief":"","access":"public","type":"PropertyDoc","description":"<p>time interval for event throttling in milliseconds<br>\ndefault value : &quot;1000/me.timer.maxfps&quot; ms<br>\nset to 0 ms..."},{"id":"a6gjGfHt--HL_4ryNAwBM","name":"bindGamepad","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.X, \"shoot\");\n ...\n // map the lower face button on the first gamepad to the X key\n me.input.bindGamepad(0, {type:\"buttons\", code: me.input.GAMEPAD.BUTTONS.FACE_1}, me.input.KEY.X);\n // map the left axis value on the first gamepad to the LEFT key\n me.input.bindGamepad(0, {type:\"axes\", code: me.input.GAMEPAD.AXES.LX, threshold: -0.5}, me.input.KEY.LEFT);\n"}],"type":"FunctionDoc","description":"<p>Associate a gamepad event to a keycode</p>","params":[{"identifier":"index","optional":false,"description":"<p>Gamepad index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button","optional":false,"description":"<p>Button/Axis definition</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"button.type","description":"<p>&quot;buttons&quot; or &quot;axes&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"button.code","description":"<p>button or axis code id (See {@link input.GAMEPAD.BUTTONS}, {@link input.GAMEPAD.AXES})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button.threshold","optional":true,"default":"1","description":"<p>value indicating when the axis should trigger the keycode (e.g. -0.5 or 0.5)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"keyCode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bGnho0rK1v5Op_ta2BcR4","name":"bindKey","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.LEFT,  \"left\");\n me.input.bindKey(me.input.KEY.RIGHT, \"right\");\n me.input.bindKey(me.input.KEY.X,     \"jump\", true);\n me.input.bindKey(me.input.KEY.F1,    \"options\", true, true);\n"}],"type":"FunctionDoc","description":"<p>associate a user defined action to a keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"lock","optional":true,"default":"false","description":"<p>cancel the keypress event once read</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"preventDefault","optional":true,"default":"input.preventDefault","description":"<p>prevent default browser action</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"mxo2LA8IoPbP948AxsCcn","name":"bindPointer","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.X, \"shoot\");\n // map the left button click on the X key (default if the button is not specified)\n me.input.bindPointer(me.input.KEY.X);\n // map the right button click on the X key\n me.input.bindPointer(me.input.pointer.RIGHT, me.input.KEY.X);\n"}],"type":"FunctionDoc","description":"<p>Associate a pointer event to a keycode<br>\nLeft button – 0\nMiddle button – 1\nRight button – 2</p>","params":[{"identifier":"button","optional":true,"default":"input.pointer.LEFT","description":"<p>(accordingly to W3C values : 0,1,2 for left, middle and right buttons)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"keyCode","dataType":{"tokens":[{"value":"input.KEY","kind":"canonical"},{"value":"input.KEY","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"GxZ7cUGZghglqGkVI5oC5","name":"exitPointerLock","brief":"","access":"public","type":"FunctionDoc","description":"<p>Initiates an exit from pointer lock state</p>","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ukrc7cmSPgaQCgBpd9EmW","name":"getBindingKey","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the action associated with the given keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>user defined associated action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"yQ2_609XqSIQdMU3o_4ab","name":"globalToLocal","brief":"","access":"public","examples":[{"caption":"","code":"\n onMouseEvent : function (pointer) {\n    // convert the given into local (viewport) relative coordinates\n    var pos = me.input.globalToLocal(pointer.clientX, pointer.clientY);\n    // do something with pos !\n };\n"}],"type":"FunctionDoc","description":"<p>Translate the specified x and y values from the global (absolute)\ncoordinate to local (viewport) relative coordinate.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the global x coordinate to be translated.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the global y coordinate to be translated.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the translated coordinates</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>A vector object with the corresponding translated coordinates</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"WyYcqled1PEQRzo5fRXyA","name":"isKeyPressed","brief":"","access":"public","examples":[{"caption":"","code":"\n if (me.input.isKeyPressed('left')) {\n    //do something\n }\n else if (me.input.isKeyPressed('right')) {\n    //do something else...\n }\n"}],"type":"FunctionDoc","description":"<p>return the key press status of the specified action</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if pressed</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1wIAzm1eMA6xOO8ARobSZ","name":"keyStatus","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the key status of the specified action</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>down (true) or up(false)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"q6OqiTc-t9py9KVey1r6x","name":"registerPointerEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n  // onActivate function\n  onActivateEvent: function () {\n     // register on the 'pointerdown' event\n     me.input.registerPointerEvent('pointerdown', this, this.pointerDown.bind(this));\n  },\n\n  // pointerDown event callback\n  pointerDown: function (pointer) {\n    // do something\n    ....\n    // don\"t propagate the event to other objects\n    return false;\n  },\n"}],"see":["Pointer","{@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}"],"type":"FunctionDoc","description":"<p>allows registration of event listeners on the object target. <br>\nmelonJS will pass a me.Pointer object to the defined cal...","params":[{"identifier":"eventType","optional":false,"description":"<p>The event type for which the object is registering <br>\nmelonJS currently supports: <br></p>\n <ul>\n   <li><code>\"pointermo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"region","optional":false,"description":"<p>a shape representing the region to register on</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}},{"identifier":"callback","optional":false,"description":"<p>methods to be called when the event occurs.\nReturning <code>false</code> from the defined callback will prevent the event ...","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"TrQrC0FvuebPwZNVNgsQK","name":"releaseAllPointerEvents","brief":"","access":"public","examples":[{"caption":"","code":"\n // release all registered event on the\n me.input.releaseAllPointerEvents(this);\n"}],"type":"FunctionDoc","description":"<p>allows the removal of all registered event listeners from the object target.</p>","params":[{"identifier":"region","optional":false,"description":"<p>the registered region to release event from</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[]},{"id":"iHk9_U5uMt5O_1UlIMlLx","name":"releasePointerEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n // release the registered region on the 'pointerdown' event\n me.input.releasePointerEvent('pointerdown', this);\n"}],"see":["{@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}"],"type":"FunctionDoc","description":"<p>allows the removal of event listeners from the object target.</p>","params":[{"identifier":"eventType","optional":false,"description":"<p>The event type for which the object was registered. See {@link input.registerPointerEvent}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"region","optional":false,"description":"<p>the registered region to release for this event</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}},{"identifier":"callback","optional":true,"default":"\"all\"","description":"<p>if specified unregister the event only for the specific callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"veu2WRN5mQbTWxmCdBFwZ","name":"requestPointerLock","brief":"","access":"public","examples":[{"caption":"","code":"\n // register on the pointer lock change event\n event.on(event.POINTERLOCKCHANGE, (locked)=> {\n     console.log(\"pointer lock: \" + locked);\n });\n // request for pointer lock\n me.input.requestPointerLock();\n"}],"type":"FunctionDoc","description":"<p>request for the pointer to be locked on the parent DOM element.\n(Must be called in a click event or an event that requires...","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"p86S8mJecRDDKzJisTKPQ","name":"setGamepadDeadzone","brief":"","access":"public","type":"FunctionDoc","description":"<p>Set deadzone for analog gamepad inputs<br>\nThe default deadzone is 0.1 (10%) Analog values less than this will be ignored</p>","params":[{"identifier":"value","optional":false,"description":"<p>Deadzone value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"xsyW5cAeFwPZBl_KL-YRH","name":"setTouchAction","brief":"","access":"public","see":["https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action"],"type":"FunctionDoc","description":"<p>enable/disable all gestures on the given element.<br>\nby default melonJS will disable browser handling of all panning and ...","params":[{"identifier":"element","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"value","optional":true,"default":"\"none\"","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"YP0L3a2Ltx_aKH6sjPVMC","name":"triggerKeyEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n // trigger a key press\n me.input.triggerKeyEvent(me.input.KEY.LEFT, true);\n"}],"type":"FunctionDoc","description":"<p>trigger the specified key (simulated) event <br></p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"status","optional":true,"default":"false","description":"<p>true to trigger a key down event, or false for key up event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"mouseButton","optional":true,"description":"<p>the mouse button to trigger</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"pHrmAozObDRFi7ZG0lKgF","name":"unbindGamepad","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindGamepad(0, me.input.GAMEPAD.BUTTONS.FACE_1);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"index","optional":false,"description":"<p>Gamepad index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button","optional":false,"description":"<p>(See {@link input.GAMEPAD.BUTTONS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"W5d0ENgeZpkmF8xeqNUEc","name":"unbindKey","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindKey(me.input.KEY.LEFT);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CGXnHiR3EqeH1wVazTInO","name":"unbindPointer","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindPointer(me.input.pointer.LEFT);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"button","optional":true,"default":"input.pointer.LEFT","description":"<p>(accordingly to W3C values : 0,1,2 for left, middle and right buttons)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"EK7C7BIMcF9RJfkJ1yihP","name":"unlockKey","brief":"","access":"public","examples":[{"caption":"","code":"\n // Unlock jump when touching the ground\n if (!this.falling && !this.jumping) {\n     me.input.unlockKey(\"jump\");\n }\n"}],"type":"FunctionDoc","description":"<p>unlock a key manually</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]}]},{"id":"TNrfRmV9umyFrr4eVRkyP","name":"level","brief":"","type":"NSDoc","description":"<p>a level manager. once ressources loaded, the level manager contains all references of defined levels.</p>","members":[{"id":"QAMhN6VAFZwLonUQG3hXP","name":"add","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>add a level into the game manager (usually called by the preloader)</p>","params":[{"identifier":"format","optional":false,"description":"<p>level format (only &quot;tmx&quot; supported)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"levelId","optional":false,"description":"<p>the level id (or name)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"callback","optional":true,"description":"<p>a function to be called once the level is loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>true if the level was loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"FPCg-qSx18YWKHYtmlu8T","name":"getCurrentLevel","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the current level definition.\nfor a reference to the live instantiated level,\nrather use the container in which it ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}]},{"id":"DE_r1mKtcK0PAeeqtSEYI","name":"getCurrentLevelId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the current level id<br></p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"gpMFBNPoY707hHVG7biHn","name":"levelCount","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the amount of level preloaded</p>","params":[],"returns":[{"description":"<p>the amount of level preloaded</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"fjlfTG_gwVjogQuKrAf1k","name":"load","brief":"","access":"public","examples":[{"caption":"","code":"\n // the game assets to be be preloaded\n // TMX maps\n var resources = [\n     {name: \"a4_level1\",   type: \"tmx\",   src: \"data/level/a4_level1.tmx\"},\n     {name: \"a4_level2\",   type: \"tmx\",   src: \"data/level/a4_level2.tmx\"},\n     {name: \"a4_level3\",   type: \"tmx\",   src: \"data/level/a4_level3.tmx\"},\n     // ...\n ];\n\n // ...\n\n // load a level into the game world\n me.level.load(\"a4_level1\");\n ...\n ...\n // load a level into a specific container\n var levelContainer = new me.Container();\n me.level.load(\"a4_level2\", {container:levelContainer});\n // add a simple transformation\n levelContainer.currentTransform.translate(levelContainer.width / 2, levelContainer.height / 2 );\n levelContainer.currentTransform.rotate(0.05);\n levelContainer.currentTransform.translate(-levelContainer.width / 2, -levelContainer.height / 2 );\n // add it to the game world\n me.game.world.addChild(levelContainer);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>load a level into the game manager<br>\n(will also create all level defined entities, etc..)</p>","params":[{"identifier":"levelId","optional":false,"description":"<p>level id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"ame.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.setViewportBounds","optional":true,"default":"true","description":"<p>if true, set the viewport bounds to the map size</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"voTNN0d24b9lyxTdMO0_G","name":"next","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>load the next level</p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the next level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kGWyxVez1yKi22Lgdcj9E","name":"previous","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>load the previous level<br></p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the previous level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_d57pnDRGU849qmNAaIZG","name":"reload","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>reload the current level</p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>the current level</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]}]},{"id":"u4A25oGzg-J0ZahJYcJbT","name":"loader","brief":"","type":"NSDoc","description":"<p>a small class to manage loading of stuff and manage resources</p>","members":[{"id":"fxWcSLSQrJvFnBshB8FrS","name":"crossOrigin","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n  // allow for cross-origin texture loading in WebGL\n me.loader.crossOrigin = \"anonymous\";\n\n // set all ressources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes"],"type":"PropertyDoc","description":"<p>crossOrigin attribute to configure the CORS requests for Image data element.\nBy default (that is, when the attribute is no..."},{"id":"SbfwkoJpWn4NNijoMXEa5","name":"onload","brief":"","access":"public","examples":[{"caption":"","code":"\n // set a callback when everything is loaded\n me.loader.onload = this.loaded.bind(this);\n"}],"scope":"static","type":"PropertyDoc","description":"<p>onload callback</p>"},{"id":"KMdSS2BH1dLrZEqSmDrPC","name":"onProgress","brief":"","access":"public","examples":[{"caption":"","code":"\n // set a callback for progress notification\n me.loader.onProgress = this.updateProgress.bind(this);\n"}],"scope":"static","type":"PropertyDoc","description":"<p>onProgress callback<br>\neach time a resource is loaded, the loader will fire the specified function,\ngiving the actual pro..."},{"id":"63-SPbLfFqksjxE2AJ1lX","name":"withCredentials","brief":"","access":"public","defaultValue":"false","examples":[{"caption":"","code":"\n  // enable withCredentials\n me.loader.withCredentials = true;\n\n // set all ressources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials"],"type":"PropertyDoc","description":"<p>indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies,\nauthorizatio..."},{"id":"q3TDqsL_DnN3B1XsJ3Y2p","name":"getBinary","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified Binary object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the binary object (&quot;ymTrack&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"HP8Oh4WMjbUm8KlsmI6pF","name":"getImage","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified Image Object</p>","params":[{"identifier":"image","optional":false,"description":"<p>name of the Image element (&quot;tileset-platformer&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"}],"template":"%1"}}]},{"id":"srTA1fi_rE1a2OS1hUNK1","name":"getJSON","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified JSON Object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the json file to load</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"i4eXDnWNyJLoVz2pYVmg3","name":"getTMX","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified TMX/TSX object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the tmx/tsx element (&quot;map1&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"iHafser5Pnv2CIKr8qNhe","name":"load","brief":"","access":"public","examples":[{"caption":"","code":"\n // load an image asset\n me.loader.load({name: \"avatar\",  type:\"image\",  src: \"data/avatar.png\"}, this.onload.bind(this), this.onerror.bind(this));\n\n // start loading music\n me.loader.load({\n     name   : \"bgmusic\",\n     type   : \"audio\",\n     src    : \"data/audio/\"\n }, function () {\n     me.audio.play(\"bgmusic\");\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Load a single resource (to be used if you need to load additional resource during the game)</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;tmx&quot;, &quot;tsx&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.src","description":"<p>path and/or file name of the resource (for audio assets only the path is required)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.stream","optional":true,"description":"<p>Set to true to force HTML5 Audio, which allows not to wait for large file to be downloaded before playing.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onload","optional":false,"description":"<p>function to be called when the resource is loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"onerror","optional":false,"description":"<p>function to be called in case of error</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>the amount of corresponding resource to be preloaded</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"fXxi-HInexp4YJsjeLDWl","name":"preload","brief":"","access":"public","examples":[{"caption":"","code":"\n game_resources = [\n   // PNG tileset\n   {name: \"tileset-platformer\", type: \"image\",  src: \"data/map/tileset.png\"},\n   // PNG packed texture\n   {name: \"texture\", type:\"image\", src: \"data/gfx/texture.png\"}\n   // TSX file\n   {name: \"meta_tiles\", type: \"tsx\", src: \"data/map/meta_tiles.tsx\"},\n   // TMX level (XML & JSON)\n   {name: \"map1\", type: \"tmx\", src: \"data/map/map1.json\"},\n   {name: \"map2\", type: \"tmx\", src: \"data/map/map2.tmx\"},\n   {name: \"map3\", type: \"tmx\", format: \"json\", data: {\"height\":15,\"layers\":[...],\"tilewidth\":32,\"version\":1,\"width\":20}},\n   {name: \"map4\", type: \"tmx\", format: \"xml\", data: {xml representation of tmx}},\n   // audio resources\n   {name: \"bgmusic\", type: \"audio\",  src: \"data/audio/\"},\n   {name: \"cling\",   type: \"audio\",  src: \"data/audio/\"},\n   // binary file\n   {name: \"ymTrack\", type: \"binary\", src: \"data/audio/main.ym\"},\n   // JSON file (used for texturePacker)\n   {name: \"texture\", type: \"json\", src: \"data/gfx/texture.json\"},\n   // JavaScript file\n   {name: \"plugin\", type: \"js\", src: \"data/js/plugin.js\"},\n   // Font Face\n   { name: \"'kenpixel'\", type: \"fontface\",  src: \"url('data/font/kenvector_future.woff2')\" }\n ];\n ...\n // set all resources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set all the specified game resources to be preloaded.</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;,&quot;js&quot;, &quot;tmx&quot;, &quot;tsx&quot;, &qu...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.src","description":"<p>path and/or file name of the resource (for audio assets only the path is required)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.stream","optional":true,"description":"<p>Set to true to force HTML5 Audio, which allows not to wait for large file to be downloaded before playing.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onload","optional":true,"default":"loader.onload","description":"<p>function to be called when all resources are loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"switchToLoadState","optional":true,"default":"true","description":"<p>automatically switch to the loading screen</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"fVkteS8vXxZ07m9tQDPxu","name":"setBaseURL","brief":"","access":"public","examples":[{"caption":"","code":"\n // change the base URL relative address for audio assets\n me.loader.setBaseURL(\"audio\", \"data/audio/\");\n // change the base URL absolute address for all object types\n me.loader.setBaseURL(\"*\", \"http://myurl.com/\")\n"}],"scope":"instance","type":"MethodDoc","description":"<p>change the default baseURL for the given asset type.<br>\n(this will prepend the asset URL and must finish with a '/')</p>","params":[{"identifier":"type","optional":false,"description":"<p>&quot;*&quot;, &quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;js&quot;, &quot;tmx&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"url","optional":true,"default":"\"./\"","description":"<p>default base URL</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"q1JK9bf3yuA5NlsrWDd0m","name":"unload","brief":"","access":"public","examples":[{"caption":"","code":"me.loader.unload({name: \"avatar\",  type:\"image\"});\n"}],"scope":"instance","type":"MethodDoc","description":"<p>unload specified resource to free memory</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;tmx&quot;, &quot;tsx&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if unloaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"mHpRf_-IIfiRRzc6LZJ0_","name":"unloadAll","brief":"","access":"public","examples":[{"caption":"","code":"me.loader.unloadAll();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>unload all resources to free memory</p>","params":[],"returns":[]}]},{"id":"tVMokfwNHTJ4G9T0mnbxL","name":"Math","brief":"","type":"NSDoc","description":"<p>a collection of math utility functions</p>","members":[{"id":"2bt6LCYSVr7tMezvi-Ujd","name":"DEG_TO_RAD","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant to convert from degrees to radians</p>"},{"id":"eXpXQeqsaqk3bpcvDVVZe","name":"EPSILON","brief":"","access":"public","defaultValue":"0.000001","readonly":true,"type":"PropertyDoc","description":"<p>the difference between 1 and the smallest floating point number greater than 1</p>"},{"id":"IVloujAsRvZ9EOenAFGhV","name":"ETA","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant equals to half pi</p>"},{"id":"vT0kZc388i178W67hG7sb","name":"RAD_TO_DEG","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant to convert from radians to degrees</p>"},{"id":"LjnuI3X-SlO4EnZ8Mw6iH","name":"TAU","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant equals to 2 times pi</p>"},{"id":"nzyn1a4iOHs2Lgx_IGnZn","name":"clamp","brief":"","access":"public","type":"FunctionDoc","description":"<p>clamp the given value</p>","params":[{"identifier":"val","optional":false,"description":"<p>the value to clamp</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"low","optional":false,"description":"<p>lower limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"description":"<p>higher limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>clamped value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NKZz2FR3pYbZQ0hZ-vNMF","name":"degToRad","brief":"","access":"public","examples":[{"caption":"","code":"\n // convert a specific angle\n me.Math.degToRad(60); // return 1.0471...\n"}],"type":"FunctionDoc","description":"<p>Converts an angle in degrees to an angle in radians</p>","params":[{"identifier":"angle","optional":false,"description":"<p>angle in degrees</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7T--imNIQsea1dSkaSMdA","name":"isPowerOfTwo","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given value is a power of two</p>","params":[{"identifier":"val","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"y6p-91hStqF61aUFOozFW","name":"nextPowerOfTwo","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the next power of two for the given value</p>","params":[{"identifier":"val","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"s4Jhdj_IgJfSea24zPCRb","name":"radToDeg","brief":"","access":"public","examples":[{"caption":"","code":"\n // convert a specific angle\n me.Math.radToDeg(1.0471975511965976); // return 60\n"}],"type":"FunctionDoc","description":"<p>Converts an angle in radians to an angle in degrees.</p>","params":[{"identifier":"radians","optional":false,"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding angle in degrees</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Rri7bfhMLDJrVxRh-4XOQ","name":"random","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.random(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a random integer between min (included) and max (excluded)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"BTd-mXclMurziuwHX8LGN","name":"randomFloat","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.randomFloat(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a random float between min, max (exclusive)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"i2EQAjTcfmWDPlAy9Cmvw","name":"round","brief":"","access":"public","examples":[{"caption":"","code":"\n // round a specific value to 2 digits\n me.Math.round(10.33333, 2); // return 10.33\n"}],"type":"FunctionDoc","description":"<p>round a value to the specified number of digit</p>","params":[{"identifier":"num","optional":false,"description":"<p>value to be rounded.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dec","optional":true,"default":"0","description":"<p>number of decimal digit to be rounded to.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>rounded value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Q3ZykUvyUb7RC0q2RCkMN","name":"toBeCloseTo","brief":"","access":"public","examples":[{"caption":"","code":"\n // test if the given value is close to 10\n if (me.Math.toBeCloseTo(10, value)) {\n     // do something\n }\n"}],"type":"FunctionDoc","description":"<p>check if the given value is close to the expected one</p>","params":[{"identifier":"expected","optional":false,"description":"<p>value to be compared with.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"actual","optional":false,"description":"<p>actual value to compare</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"precision","optional":true,"default":"2","description":"<p>float precision for the comparison</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>if close to</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EZus3WnUyMTx5RwKjXod-","name":"weightedRandom","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.weightedRandom(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a weighted random between min, max (exclusive)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"nLQV84iAic-kJV7TML_Fl","name":"ParticleEmitterSettings","brief":"","readonly":true,"see":["ParticleEmitter"],"type":"NSDoc","description":"<p>ParticleEmitterSettings contains the default settings for ParticleEmitter</p>","members":[{"id":"cP7S2k6XmR41iPr_U1tQH","name":"angle","brief":"","access":"public","defaultValue":"Math.PI / 2","scope":"static","type":"PropertyDoc","description":"<p>Start angle for particle launch in Radians</p>"},{"id":"P5_fTwPZVNWBZOYEV5MXp","name":"angleVariation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Variation in the start angle for particle launch in Radians.</p>"},{"id":"AAV4Q2eyPsVDmv_SbMfu-","name":"blendMode","brief":"","access":"public","defaultValue":"normal","scope":"static","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied when rendering particles.\n(note: this will superseed the <code>textureAdditive</code> setting..."},{"id":"vsheF5G2uNrwq2UUpQRNR","name":"duration","brief":"","access":"public","defaultValue":"Infinity","scope":"static","type":"PropertyDoc","description":"<p>Duration that the emitter releases particles in ms (used only if emitter is Stream).\nAfter this period, the emitter stop t..."},{"id":"NRsuVYFx-ZMKf-1k6zUaP","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Render particles in screen space.</p>"},{"id":"FLsXwjMFlV5fOGoTXcKPn","name":"followTrajectory","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Update the rotation of particle in accordance the particle trajectory.<br>\nThe particle sprite should aim at zero angle (d..."},{"id":"ZR4KA2LU3nL8M6GcAzYsW","name":"framesToSkip","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Skip n frames after updating the particle system once.\nThis can be used to reduce the performance impact of emitters with ..."},{"id":"U8iKeeiyM-3J349RLvtGN","name":"frequency","brief":"","access":"public","defaultValue":"100","scope":"static","type":"PropertyDoc","description":"<p>How often a particle is emitted in ms (used only if emitter is a Stream).</p>"},{"id":"3xlhsAlHaFfkH7uMt9jBk","name":"gravity","brief":"","access":"public","defaultValue":"0","scope":"static","see":["game.world.gravity"],"type":"PropertyDoc","description":"<p>Vertical force (Gravity) for each particle</p>"},{"id":"sRejejaLLQp3hFNJWsIjz","name":"height","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Height of the particle spawn area</p>"},{"id":"ykEwmH2f4d1nqap0MTYK9","name":"image","brief":"","access":"public","defaultValue":"undefined","scope":"static","see":["ParticleEmitterSettings.textureSize"],"type":"PropertyDoc","description":"<p>image used for particles texture\n(by default melonJS will create an white 8x8 texture image)</p>"},{"id":"WPUtwvmNukIpgCBxeNcXw","name":"maxEndScale","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Maximum end scale ratio for particles</p>"},{"id":"QzK4B8hP9yJiXPWz4yoG4","name":"maxLife","brief":"","access":"public","defaultValue":"3000","scope":"static","type":"PropertyDoc","description":"<p>Maximum time each particle lives once it is emitted in ms.</p>"},{"id":"pap5AFHO9TbuVRodZB6pg","name":"maxParticles","brief":"","access":"public","defaultValue":"10","scope":"static","type":"PropertyDoc","description":"<p>Maximum number of particles launched each time in this emitter (used only if emitter is Stream).</p>"},{"id":"g69W_AO9fbgtA0EoGgfbv","name":"maxRotation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Maximum start rotation for particles sprites in Radians</p>"},{"id":"JTPnM6Nx9I17A6ar8UMSZ","name":"maxStartScale","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Maximum start scale ratio for particles (1 = no scaling)</p>"},{"id":"ilv3X5SJJuRcwR8WXh4UI","name":"minEndScale","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Minimum end scale ratio for particles</p>"},{"id":"9yzWS6YGyXkRoJ_b20x6V","name":"minLife","brief":"","access":"public","defaultValue":"1000","scope":"static","type":"PropertyDoc","description":"<p>Minimum time each particle lives once it is emitted in ms.</p>"},{"id":"YOTUUd8LQWcwyig82WaH3","name":"minRotation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Minimum start rotation for particles sprites in Radians</p>"},{"id":"5mr2ZHGMSjUivGnLoMGyI","name":"minStartScale","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Minimum start scale ratio for particles (1 = no scaling)</p>"},{"id":"fkMlBizL1xXn3fcpoYbAC","name":"onlyInViewport","brief":"","access":"public","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Update particles only in the viewport, remove it when out of viewport.</p>"},{"id":"FmHCiCvzIWU56RShmGl7M","name":"speed","brief":"","access":"public","defaultValue":"2","scope":"static","type":"PropertyDoc","description":"<p>Start speed of particles.<br></p>"},{"id":"EtRejyh0d-hlpNF48NXKz","name":"speedVariation","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Variation in the start speed of particles</p>"},{"id":"4ffWg1uoFtzeAHMWVKbxp","name":"textureAdditive","brief":"","access":"public","defaultValue":"false","scope":"static","see":["ParticleEmitterSettings.blendMode"],"type":"PropertyDoc","description":"<p>Enable the Texture Additive by composite operation (&quot;additive&quot; blendMode)</p>"},{"id":"EsY1u6fzaW4oe6PsZjIXF","name":"textureSize","brief":"","access":"public","defaultValue":"8","scope":"static","see":["ParticleEmitterSettings.image"],"type":"PropertyDoc","description":"<p>default texture size used for particles if no image is specified\n(by default melonJS will create an white 8x8 texture imag..."},{"id":"6S9yfqaJrjbgJKyFZ2LL-","name":"tint","brief":"","access":"public","defaultValue":"\"#fff\"","scope":"static","type":"PropertyDoc","description":"<p>tint to be applied to particles</p>"},{"id":"sDccAcYHH_chhclD3zA0L","name":"totalParticles","brief":"","access":"public","defaultValue":"50","scope":"static","type":"PropertyDoc","description":"<p>Total number of particles in the emitter</p>"},{"id":"-zXlC9GC3Js-k2FSJRlMC","name":"width","brief":"","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Width of the particle spawn area.</p>"},{"id":"pAG4PZVI5hG8XFABeRdr5","name":"wind","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Horizontal force (like a Wind) for each particle</p>"}]},{"id":"DQwjKNu_c3Aq2X_yawRqA","name":"plugin","brief":"","type":"NSDoc","members":[{"id":"l4M0CDQ8H62TCJRXrB9Ne","name":"Base","brief":"","scope":"static","see":["plugin"],"type":"ClassDoc","description":"<p>a base Object for plugin <br>\nplugin must be installed using the register function</p>","members":[{"id":"fRzCw--_FUr2X4OM2s3sZ","name":"version","brief":"","access":"public","defaultValue":"\"__VERSION__\"","scope":"instance","type":"PropertyDoc","description":"<p>define the minimum required version of melonJS<br>\nthis can be overridden by the plugin</p>"},{"id":"y7PLD8GcdUyvfnnYPAFYN","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[]}]},{"id":"CxVERq7Aq8Z5XDrqC6VIm","name":"patch","brief":"","access":"public","examples":[{"caption":"","code":"\n // redefine the me.game.update function with a new one\n me.plugin.patch(me.game, \"update\", function () {\n   // display something in the console\n   console.log(\"duh\");\n   // call the original me.game.update function\n   this._patched();\n });\n"}],"scope":"static","type":"MethodDoc","description":"<p>patch a melonJS function</p>","params":[{"identifier":"proto","optional":false,"description":"<p>target object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"name","optional":false,"description":"<p>target function</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"fn","optional":false,"description":"<p>replacement function</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"eE5atbtv07Heyg3H0o12U","name":"register","brief":"","access":"public","examples":[{"caption":"","code":"\n // register a new plugin\n me.plugin.register(TestPlugin, \"testPlugin\");\n // the plugin then also become available\n // under then me.plugins namespace\n me.plugins.testPlugin.myfunction ();\n"}],"scope":"static","see":["Base"],"type":"MethodDoc","description":"<p>Register a plugin.</p>","params":[{"identifier":"pluginObj","optional":false,"description":"<p>Plugin object to instantiate and register</p>","dataType":{"tokens":[{"value":"plugin.Base","kind":"canonical"},{"value":"plugin.Base","kind":"link"}],"template":"%1"}},{"identifier":"name","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>all extra parameters will be passed to the plugin constructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]}]},{"id":"32n26TPe7npMkE_6ik8pY","name":"plugins","brief":"","see":["plugin.register"],"type":"NSDoc","description":"<p>This namespace is a container for all registered plugins.</p>"},{"id":"oW9RyqwS6a8ygUhY-7a1y","name":"pool","brief":"","examples":[{"caption":"","code":"\n // register our bullet object into the object pool\n pool.register(\"bullet\", BulletEntity, true);\n // ...\n // when we need to manually create a new bullet:\n var bullet = pool.pull(\"bullet\", x, y, direction, velocity);\n // ...\n // when we want to destroy existing object, the remove\n // function will ensure the object can then be reallocated later\n game.world.removeChild(bullet);\n"}],"see":["ObjectPool"],"type":"NSDoc","description":"<p>a default global ObjectPool instance</p>"},{"id":"LTvQv0Y_ZVOOZ5A_khx5W","name":"save","brief":"","examples":[{"caption":"","code":"\n // Initialize \"score\" and \"lives\" with default values\n // This loads the properties from localStorage if they exist, else it sets the given defaults\n me.save.add({ score : 0, lives : 3 });\n\n // Print all\n // On first load, this prints { score : 0, lives : 3 }\n // On further reloads, it prints { score : 31337, lives : 3, complexObject : ... }\n // Because the following changes will be saved to localStorage\n console.log(JSON.stringify(me.save));\n\n // Save score\n me.save.score = 31337;\n\n // Also supports complex objects thanks to the JSON backend\n me.save.add({ complexObject : {} })\n me.save.complexObject = { a : \"b\", c : [ 1, 2, 3, \"d\" ], e : { f : [{}] } };\n\n // WARNING: Do not set any child properties of complex objects directly!\n // Changes made that way will not save. Always set the entire object value at once.\n // If you cannot live with this limitation, there's a workaround:\n me.save.complexObject.c.push(\"foo\"); // Modify a child property\n me.save.complexObject = me.save.complexObject; // Save the entire object!\n\n // Remove \"lives\" from localStorage\n me.save.remove(\"lives\");"}],"type":"NSDoc","description":"<p>allow to access and manage the device localStorage</p>","members":[{"id":"-xDbOTzjVMRhsJwt6GD2l","name":"add","brief":"","examples":[{"caption":"","code":"\n // Initialize \"score\" and \"lives\" with default values\n me.save.add({ score : 0, lives : 3 });\n // get or set the value through me.save\n me.save.score = 1000;\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Add new keys to localStorage and set them to the given default values if they do not exist</p>","params":[{"identifier":"props","optional":false,"description":"<p>key and corresponding values</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"fCmfySV8Y_DsjblDUDgOs","name":"remove","brief":"","examples":[{"caption":"","code":"\n // Remove the \"score\" key from localStorage\n me.save.remove(\"score\");\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Remove a key from localStorage</p>","params":[{"identifier":"key","optional":false,"description":"<p>key to be removed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]}]},{"id":"KPBjiOfIWZoFeFdLTOqgp","name":"state","brief":"","type":"NSDoc","description":"<p>a State Manager (state machine)</p>","members":[{"id":"2Bw8zCls-Fdq9DPZCRzRE","name":"CREDITS","brief":"","defaultValue":"7","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Credits Stage</p>"},{"id":"Cyytwxyxzvi7QpUUlfCol","name":"GAME_END","brief":"","defaultValue":"5","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Game End Stage</p>"},{"id":"f7MKMETTTfi6XigvuhSm_","name":"GAMEOVER","brief":"","defaultValue":"4","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Game Over Stage</p>"},{"id":"YX-Trry4h6XAEFCqHwkbQ","name":"LOADING","brief":"","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Loading Stage</p>"},{"id":"17BhFSVEqeI7Ntqi2U0wF","name":"MENU","brief":"","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Menu Stage</p>"},{"id":"S4mPLwaiG_KsuP1mJRk7W","name":"PLAY","brief":"","defaultValue":"3","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Play Stage</p>"},{"id":"ug9m0VIFPPpBGXTyMKKOm","name":"READY","brief":"","defaultValue":"2","scope":"static","type":"PropertyDoc","description":"<p>default state ID for &quot;Ready&quot; Stage</p>"},{"id":"gDj0fA0p6l-RXmJbh_LmM","name":"SCORE","brief":"","defaultValue":"6","scope":"static","type":"PropertyDoc","description":"<p>default state ID for High Score Stage</p>"},{"id":"2_MHGUYlynynxoiTmy8N7","name":"SETTINGS","brief":"","defaultValue":"8","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Settings Stage</p>"},{"id":"lRRkDD6rRKIoVG_aZH3_e","name":"SETTINGS","brief":"","defaultValue":"9","scope":"static","type":"PropertyDoc","description":"<p>default state ID for the default Stage\n(the default stage is the one running as soon as melonJS is started)</p>"},{"id":"jTGXRER3IDVN-zqiwqZcE","name":"USER","brief":"","defaultValue":"100","examples":[{"caption":"","code":"\n var STATE_INFO = me.state.USER + 0;\n var STATE_WARN = me.state.USER + 1;\n var STATE_ERROR = me.state.USER + 2;\n var STATE_CUTSCENE = me.state.USER + 3;\n"}],"scope":"static","type":"PropertyDoc","description":"<p>default state ID for user defined constants<br></p>"},{"id":"5NTLWWOz6XnfiQ74KX22K","name":"change","brief":"","access":"public","examples":[{"caption":"","code":"\n // The onResetEvent method on the play screen will receive two args:\n // \"level_1\" and the number 3\n me.state.change(me.state.PLAY, \"level_1\", 3);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>change the game/app state</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"forceChange","optional":false,"description":"<p>if true the state will be changed immediately</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>extra arguments to be passed to the reset functions</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"qz51NG3YP7BsDp54S1drH","name":"current","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the current stage<br>\nuseful to call a object specific method</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}}]},{"id":"yiWan4etPh8Qs-vJNiJoc","name":"isCurrent","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the specified state is the current one</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the specified state is the current one</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3drAaKyQVThTdImcZqZ9F","name":"isPaused","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the pause state of the state manager</p>","params":[],"returns":[{"description":"<p>true if the game is paused</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HwChSV3p-gfbUYIm_GszJ","name":"isRunning","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the running state of the state manager</p>","params":[],"returns":[{"description":"<p>true if a &quot;process is running&quot;</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9yVWfgB7YWRdOIQ7sY2pT","name":"pause","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>pause the current stage</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>pause current music track on screen pause</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"aEE_KWkR0FCEQ1DOWEcWz","name":"restart","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Restart the current stage from a full stop.</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>resume current music track on screen resume</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"GNhZdb9g6WyfURLeooQfq","name":"resume","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>resume the current stage</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>resume current music track on screen resume</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"-S_6qmdUTvSDesrPtqrJx","name":"set","brief":"","access":"public","examples":[{"caption":"","code":"\n class MenuButton extends me.GUI_Object {\n     onClick() {\n         // Change to the PLAY state when the button is clicked\n         me.state.change(me.state.PLAY);\n         return true;\n     }\n };\n\n class MenuScreen extends me.Stage {\n     onResetEvent() {\n         // Load background image\n         me.game.world.addChild(\n             new me.ImageLayer(0, 0, {\n                 image : \"bg\",\n                 z: 0 // z-index\n             }\n         );\n\n         // Add a button\n         me.game.world.addChild(\n             new MenuButton(350, 200, { \"image\" : \"start\" }),\n             1 // z-index\n         );\n\n         // Play music\n         me.audio.playTrack(\"menu\");\n     }\n\n     onDestroyEvent() {\n         // Stop music\n         me.audio.stopTrack();\n     }\n };\n\n me.state.set(me.state.MENU, new MenuScreen());\n"}],"scope":"instance","type":"MethodDoc","description":"<p>associate the specified state with a Stage</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"stage","optional":false,"description":"<p>Instantiated Stage to associate with state ID</p>","dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}},{"identifier":"start ","optional":true,"default":" false","description":"<p>if true the state will be changed immediately after adding it.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"wNV60RE9DwCtXpEjnvY-_","name":"set","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the stage associated with the specified state\n(or the current one if none is specified)</p>","params":[{"identifier":"state","optional":true,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}}]},{"id":"TeUK4HRfR3L5NuRiX8RNj","name":"setTransition","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>enable/disable transition for a specific state (by default enabled for all)</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":false,"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"sUAuTPPenLt2YEXx0_Q10","name":"stop","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Stop the current stage.</p>","params":[{"identifier":"pauseTrack","optional":true,"default":"false","description":"<p>pause current track on screen stop.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"EUHjkrhHkctsa5luka6TF","name":"transition","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>specify a global transition effect</p>","params":[{"identifier":"effect","optional":false,"description":"<p>(only &quot;fade&quot; is supported for now)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"nfrul5mQlf2nj5cMEXemg","name":"timer","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" after 1000ms\n timer.setTimeout(myFunction, 1000);\n // set a timer to call \"myFunction\" after 1000ms (respecting the pause state) and passing param1 and param2\n timer.setTimeout(myFunction, 1000, true, param1, param2);\n // set a timer to call \"myFunction\" every 1000ms\n timer.setInterval(myFunction, 1000);\n // set a timer to call \"myFunction\" every 1000ms (respecting the pause state) and passing param1 and param2\n timer.setInterval(myFunction, 1000, true, param1, param2);\n"}],"readonly":true,"see":["Timer"],"type":"NSDoc","description":"<p>the default global Timer instance</p>","members":[{"id":"2akydFZoyS_QKDQSPWKvV","name":"fps","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Last measured fps rate.<br/>\nThis feature is disabled by default, unless the debugPanel is enabled/visible</p>"},{"id":"boTlFkul80_SDgccaCP-I","name":"interpolation","brief":"","defaultValue":"false","scope":"instance","see":["timer.tick"],"type":"PropertyDoc","description":"<p>Enable/disable frame interpolation</p>"},{"id":"n7D3DhrGdiABLm41xdJKp","name":"maxfps","brief":"","access":"public","defaultValue":"60","scope":"instance","see":["timer.tick"],"type":"PropertyDoc","description":"<p>Set the maximum target display frame per second</p>"},{"id":"pTMTnhsxUfKB8ARI2qukL","name":"tick","brief":"","access":"public","defaultValue":"1","scope":"instance","see":["timer.interpolation"],"type":"PropertyDoc","description":"<p>Last game tick value.<br/>\nUse this value to scale velocities during frame drops due to slow\nhardware or when setting an F..."},{"id":"yr2Debc6lymsyylQ1H_nm","name":"clearInterval","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the Interval set by me.timer.setInterval().</p>","params":[{"identifier":"intervalID","optional":false,"description":"<p>ID of the interval to be cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ntvVmP6rdXWS7UJM_rKgh","name":"clearTimeout","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the delay set by me.timer.setTimeout().</p>","params":[{"identifier":"timeoutID","optional":false,"description":"<p>ID of the timeout to be cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"AqlXlj-W58vQ6V7C-cojd","name":"getDelta","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return elapsed time in milliseconds since the last update</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"TJh0gT-DU_8Q0aeW0_Ysf","name":"getTime","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the current timestamp in milliseconds <br>\nsince the game has started or since linux epoch (based on browser suppor...","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"lxIi9wpIRs_N2MzzM2aya","name":"setInterval","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" every 1000ms\n me.timer.setInterval(myFunction, 1000);\n // set a timer to call \"myFunction\" every 1000ms (respecting the pause state) and passing param1 and param2\n me.timer.setInterval(myFunction, 1000, true, param1, param2);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Calls a function continously at the specified interval.  See setTimeout to call function a single time.</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to execute</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>the number of milliseconds (thousandths of a second) on how often to execute the function</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pauseable","optional":true,"default":"true","description":"<p>respects the pause state of the engine.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>optional parameters which are passed through to the function specified by fn once the timer expires.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>The numerical ID of the timer, which can be used later with me.timer.clearInterval().</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HsTPgnQjPfkK13EW5vW-Z","name":"setTimeout","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" after 1000ms\n me.timer.setTimeout(myFunction, 1000);\n // set a timer to call \"myFunction\" after 1000ms (respecting the pause state) and passing param1 and param2\n me.timer.setTimeout(myFunction, 1000, true, param1, param2);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Calls a function once after a specified delay. See me.timer.setInterval to repeativly call a function.</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function you want to execute after delay milliseconds.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>the number of milliseconds (thousandths of a second) that the function call should be delayed by.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pauseable","optional":true,"default":"true","description":"<p>respects the pause state of the engine.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>optional parameters which are passed through to the function specified by fn once the timer expires.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>The numerical ID of the timer, which can be used later with me.timer.clearTimeout().</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"86LELpMrPpw-H_UVwl9AZ","name":"utils","brief":"","defaultValue":"\"\"","type":"NSDoc","description":"<p>a collection of utility functions</p>","members":[{"id":"6Yqdm2N3Mj_lmHPLoAtvI","name":"agent","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of utility functons to ease porting between different user agents.</p>","members":[{"id":"vuxGIFAHsirJUtDGLV6ec","name":"prefixed","brief":"","access":"public","type":"FunctionDoc","description":"<p>Get a vendor-prefixed property</p>","params":[{"identifier":"name","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"obj","optional":true,"default":"globalThis","description":"<p>Object or element reference to access</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Value of property</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"Np2UByFyAZ6k0R47lLjfF","name":"setPrefixed","brief":"","access":"public","type":"FunctionDoc","description":"<p>Set a vendor-prefixed property</p>","params":[{"identifier":"name","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Property value</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"obj","optional":true,"default":"globalThis","description":"<p>Object or element reference to access</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if one of the vendor-prefixed property was found</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"G478Nk9W6doijsRYmSONH","name":"array","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of array utility functions</p>","members":[{"id":"sjf46wy0tjBUxcZVA6HQ4","name":"random","brief":"","access":"public","examples":[{"caption":"","code":"\n // Select a random array element\n var arr = [ \"foo\", \"bar\", \"baz\" ];\n console.log(me.utils.array.random(arr));\n"}],"type":"FunctionDoc","description":"<p>return a random array element</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array to pick a element</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random member of array</p>","dataType":{"tokens":[{"value":"any","kind":"canonical"}],"template":"any"}}]},{"id":"wSe7HDPJ_R39T4Tef5FED","name":"remove","brief":"","access":"public","type":"FunctionDoc","description":"<p>Remove the specified object from the given Array</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array from which to remove an object</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}},{"identifier":"obj","optional":false,"description":"<p>to be removed</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the modified Array\nvar arr = [ &quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot; ];\n// remove &quot;foo&quot; from the arr...","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"kI7L2IIM_Jyc4LjfqIJzI","name":"weightedRandom","brief":"","access":"public","type":"FunctionDoc","description":"<p>return a weighted random array element, favoring the earlier entries</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array to pick a element</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random member of array</p>","dataType":{"tokens":[{"value":"any","kind":"canonical"}],"template":"any"}}]}]},{"id":"9NAObm7_AV13FPN8ZJCkt","name":"file","brief":"","defaultValue":"undefined","readonly":true,"scope":"static","type":"NSDoc","description":"<p>a collection of file utility functions</p>","members":[{"id":"dicb9_A4viXLKk0YN5O4x","name":"getBasename","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the base name of the file without path info</p>","params":[{"identifier":"path","optional":false,"description":"<p>path containing the filename</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the base name without path information.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"AtMHwS9uk7CiMt7eZnN57","name":"getExtension","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the extension of the file in the given path</p>","params":[{"identifier":"path","optional":false,"description":"<p>path containing the filename</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>filename extension.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]}]},{"id":"Yb0vPEJctwWZd8g4SZqXu","name":"function","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of utility functions</p>","members":[{"id":"WXRbMY-U6Tc2Bxz9rcrEo","name":"defer","brief":"","access":"public","examples":[{"caption":"","code":"\n // execute myFunc() when the stack is empty,\n // with the current context and [1, 2, 3] as parameter\n me.utils.function.defer(myFunc, this, 1, 2, 3);\n"}],"type":"FunctionDoc","description":"<p>Executes a function as soon as the interpreter is idle (stack empty).</p>","params":[{"identifier":"func","optional":false,"description":"<p>The function to be deferred.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":false,"description":"<p>The value to be passed as the this parameter to the target function when the deferred function is called</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>Optional additional arguments to carry for the function.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>id that can be used to clear the deferred function using\nclearTimeout</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"tNc3KG1TrI75MN26xn-T6","name":"throttle","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns a function that, when invoked will only be triggered at most\nonce during a given window of time</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to be throttled.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>The delay in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"no_trailing","optional":false,"description":"<p>disable the execution on the trailing edge</p>","dataType":{"tokens":[{"value":"no_trailing","kind":"canonical"},{"value":"no_trailing","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the function that will be throttled</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}]}]},{"id":"DyluoH5lQfZSLr-30bm4-","name":"string","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of string utility functions</p>","members":[{"id":"LoKfIu2jagYamig6Rt5hQ","name":"capitalize","brief":"","access":"public","type":"FunctionDoc","description":"<p>converts the first character of the given string to uppercase</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be capitalized</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the capitalized string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"OF7QizE18TIzxg4lnQI7F","name":"isBoolean","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given string contains a true or false</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be tested</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if the string is either true or false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4fxwvt7fLZT1eoiCsYBXD","name":"isNumeric","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given string contains a numeric integer or float value</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be tested</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if string contains only digits</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1v3C0jzacZDB4UL7U7Fq1","name":"toHex","brief":"","access":"public","type":"FunctionDoc","description":"<p>convert a string to the corresponding hexadecimal value</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be converted</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the converted hexadecimal value</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"4PFdN33cCsNN59LxdUzZJ","name":"trimLeft","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the string stripped of whitespace from the left.</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be trimmed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>trimmed string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"ehUBTbDeULaVFn4Hm8yjz","name":"trimRight","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the string stripped of whitespace from the right.</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be trimmed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>trimmed string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]}]},{"id":"hhFU1_aLVY6BbaKU2_Q8N","name":"checkVersion","brief":"","access":"public","examples":[{"caption":"","code":"\n if (me.utils.checkVersion(\"7.0.0\") > 0) {\n     console.error(\n         \"melonJS is too old. Expected: 7.0.0, Got: 6.3.0\"\n     );\n }\n"}],"scope":"static","type":"MethodDoc","description":"<p>Compare two version strings</p>","params":[{"identifier":"first","optional":false,"description":"<p>First version string to compare</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"second","optional":true,"default":"version","description":"<p>Second version string to compare</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>comparison result <br>&lt; 0 : first &lt; second<br>\n0 : first == second<br>\n&gt; 0 : first &gt; second</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"CB4BiFZnmSm4AV25gyRs6","name":"getPixels","brief":"","access":"public","scope":"static","type":"MethodDoc","description":"<p>Get image pixels</p>","params":[{"identifier":"image","optional":false,"description":"<p>Image to read</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>ImageData object</p>","dataType":{"tokens":[{"value":"ImageData","kind":"canonical"},{"value":"ImageData","kind":"canonical"}],"template":"%1"}}]},{"id":"rFzHsRZFx7_2amtLmr_Un","name":"getUriFragment","brief":"","access":"public","examples":[{"caption":"","code":"\n // http://www.example.com/index.html#debug&hitbox=true&mytag=value\n var UriFragment = me.utils.getUriFragment();\n console.log(UriFragment[\"mytag\"]); //> \"value\"\n"}],"scope":"static","type":"MethodDoc","description":"<p>parse the fragment (hash) from a URL and returns them into</p>","params":[{"identifier":"url","optional":true,"default":"document.location","description":"<p>an optional params string or URL containing fragment (hash) params to be parsed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>an object representing the deserialized params string.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"members":[{"id":"HZapHjx161oT--k-I36DW","name":"debug","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>display the debug panel (if preloaded)</p>"},{"id":"evwowTf2-VeGE-whS3-qp","name":"debugToggleKey","brief":"","access":"public","defaultValue":"\"s\"","scope":"static","type":"PropertyDoc","description":"<p>show/hide the debug panel (if preloaded)</p>"},{"id":"jeGOHn-iFZRRljDaIZKm0","name":"hitbox","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the hitbox in the debug panel (if enabled)</p>"},{"id":"mo8omMAaKMLkKGroxs-wd","name":"quadtree","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the quadtree in the debug panel (if enabled)</p>"},{"id":"qFu_4fp5kSohlurcwU2FZ","name":"velocity","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the entities velocity in the debug panel (if enabled)</p>"},{"id":"k0Y6zuoGdOjslvzZXYDAT","name":"webgl","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>force the renderer to WebGL</p>"}]}]},{"id":"5ZuhrfPF-ftNsEaNShB9U","name":"video","brief":"","defaultValue":"1","type":"NSDoc","description":"<p>video functions</p>","members":[{"id":"y0FK4r41U252dF9PwRQBI","name":"AUTO","brief":"","defaultValue":"2","readonly":true,"type":"PropertyDoc","description":"<p>Auto-select the renderer (Attempt WebGL first, with fallback to Canvas)</p>"},{"id":"vWYO8tkXs_4C5aVCcl_TV","name":"CANVAS","brief":"","defaultValue":"0","readonly":true,"type":"PropertyDoc","description":"<p>Select the HTML5 Canvas renderer</p>"},{"id":"beE5u6SrXYe5a5Ssh4WkU","name":"renderer","brief":"","defaultValue":"undefined","type":"PropertyDoc","description":"<p>A reference to the active Canvas or WebGL active renderer renderer</p>"},{"id":"e5TZe6X1g0d3MEGAXZdAt","name":"scaleRatio","brief":"","defaultValue":"<1,1>","type":"PropertyDoc","description":"<p>the scaling ratio to be applied to the display canvas</p>"},{"id":"JiB1OOmi4r5C5KFaLO7jD","name":"WEBGL","brief":"","defaultValue":"1","readonly":true,"type":"PropertyDoc","description":"<p>Select the WebGL renderer</p>"},{"id":"kPOOJTqCRK13oS387NKL3","name":"createCanvas","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Create and return a new Canvas element</p>","params":[{"identifier":"width","optional":false,"description":"<p>width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"offscreenCanvas","optional":true,"default":"false","description":"<p>will return an OffscreenCanvas if supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"P2qjDr7YIQDu_2pDpxFhe","name":"getParent","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return a reference to the parent DOM element holding the main canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"AILQaZDv5ydGVp01UzZF8","name":"init","brief":"","examples":[{"caption":"","code":"\n // init the video with a 640x480 canvas\n me.video.init(640, 480, {\n     parent : \"screen\",\n     renderer : me.video.AUTO,\n     scale : \"auto\",\n     scaleMethod : \"fit\",\n     doubleBuffering : true\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Initialize the &quot;video&quot; system (create a canvas based on the given arguments, and the related renderer). <br>\nmel...","params":[{"identifier":"width","optional":false,"description":"<p>The width of the canvas viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The height of the canvas viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options","optional":true,"description":"<p>The optional video/renderer parameters.<br> (see Renderer(s) documentation for further specific options)</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.parent","optional":true,"default":"document.body","description":"<p>the DOM parent element to hold the canvas in the HTML file</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}},{"identifier":"options.renderer","optional":true,"default":"video.AUTO","description":"<p>renderer to use (me.video.CANVAS, me.video.WEBGL, me.video.AUTO)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>enable/disable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.scale","optional":true,"default":"1.0","description":"<p>enable scaling of the canvas ('auto' for automatic scaling)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"options.scaleMethod","optional":true,"default":"\"fit\"","description":"<p>screen scaling modes ('fit','fill-min','fill-max','flex','flex-width','flex-height','stretch')</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.preferWebGL1","optional":true,"default":"false","description":"<p>if true the renderer will only use WebGL 1</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.powerPreference","optional":true,"default":"\"default\"","description":"<p>a hint to the user agent indicating what configuration of GPU is suitable for the WebGL context (&quot;default&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>whether to allow transparent pixels in the front buffer (screen).</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>whether to enable or not video scaling interpolation</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.consoleHeader","optional":true,"default":"true","description":"<p>whether to display melonJS version and basic device information in the console</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>false if initialization failed (canvas not supported)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JvEKzQ1Rj85gjv7vHzTHS","name":"scale","brief":"","scope":"static","see":["video.init"],"type":"FunctionDoc","description":"<p>scale the &quot;displayed&quot; canvas by the given scalar.\nthis will modify the size of canvas element directly.\nOnly use...","params":[{"identifier":"x","optional":false,"description":"<p>x scaling multiplier</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y scaling multiplier</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"S81hPnHnx0dB2ZBE_VFdC","name":"BitmapText","brief":"","type":"ClassDoc","description":"<p>a bitmap font object</p>","extends":["Renderable"],"members":[{"id":"LxTu52G880TYvFQ06zicY","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"MqpnXAwNxx4E39nZESRBK","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"99UkIsYmfGT8Q1n9MW92o","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"FBO7rmpYKC0o0RQUviYHK","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"SqfS8o8hXiaG-cmtTpqJX","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"sHYZpGw-tFuZZ4Hk1eGHH","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"0C2I4fVlKh0hwz8sfdNHh","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"E-KWv0EyvG1ccY0HeDER_","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"mzhXbV5ClfCUdVyFGvG1a","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"gS9ZcWWDuUxfc4oJED3IU","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"farf-h4mFmpNL2RIXL0Nk","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"JiJ8QjiiNc11DCyyQ0238","name":"fillStyle","brief":"","access":"public","scope":"instance","see":["Renderable#tint"],"type":"PropertyDoc","description":"<p>defines the color used to tint the bitmap text</p>"},{"id":"A2cjo6HfwTdQEgd_6kk3F","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"BB0MxO5ibfsBjBfpI-5X1","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"8iCgaVIx-vqv679RGxU2N","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"sf27UHkwXhFIZpf6wzQGp","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"aZxDUjvXXBBk1pcGwfRIG","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"BI-IpVH9J5pfsbTFQeA52","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"ownNqS5aZs6J8vrtB2lVv","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"S1AbytrP_Z9xOIkjbKuOE","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"D3ou6StjzJ0zq9TI5cver","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"njGLgjKHzm8a0Q47QOxkw","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"KIek9Zq0JP9c4e3yF-bHb","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"wjBFgUXLNdOGv0_TEh0jz","name":"lineHeight","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Set the line spacing height (when displaying multi-line strings). <br>\nCurrent font height will be multiplied with this va..."},{"id":"BcxqeklkllwsZQEpLepCF","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"lHPH77nlSmN8HoAwhmBjt","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"zAVMgpnkEmou3tjHA023O","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"gDEkySXopEFHIw96kgrRt","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"QUS33LBS-513DelYIJZqZ","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"sZVybEI4jgKoCYP4uLD9A","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"ABzyqCfAIBVS-5lf2XOtx","name":"textAlign","brief":"","access":"public","defaultValue":"\"left\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the default text alignment (or justification),<br>\npossible values are &quot;left&quot;, &quot;right&quot;, and &quot;..."},{"id":"0TU7HvWZlo0JJRzeu2nhf","name":"textBaseline","brief":"","access":"public","defaultValue":"\"top\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\npossible values are &quot;top&quot;, &quot;hang..."},{"id":"N06Y87HMfkNGv0Cb348mA","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"saW9VrIBCael8uyzgb954","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"W6YGiU00xJBHXqIjfur8k","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"Q0EX5urZTiEMCILGsLHs5","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"w3fXmkwbbVMtYDID7HQRS","name":"wordWrapWidth","brief":"","access":"public","defaultValue":"-1","scope":"instance","type":"PropertyDoc","description":"<p>the maximum length in CSS pixel for a single segment of text.\n(use -1 to disable word wrapping)</p>"},{"id":"lfD_i0-4xl0U2M46iEEoF","name":"_text","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>the text to be displayed</p>"},{"id":"EjXF7IuRNdeP6TAH8kNfm","name":"fontData","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>font data</p>"},{"id":"US_Vcy0gQae9EcprQ8xHH","name":"fontImage","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>font image</p>"},{"id":"RJswgdxyIA2mvARZWhOly","name":"fontScale","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>scaled font size</p>"},{"id":"xQWePpxauZEVthiebH6hJ","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"m3O6yKqBZ3zK00lCs75xz","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"DxIYn68mSvpWW-wkE-vBE","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Wgv_yWSTbYhyXk3fWWw1Z","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // Use me.loader.preload or me.loader.load to load assets\n me.loader.preload([\n     { name: \"arial\", type: \"binary\" src: \"data/font/arial.fnt\" },\n     { name: \"arial\", type: \"image\" src: \"data/font/arial.png\" },\n ])\n // Then create an instance of your bitmap font:\n var myFont = new me.BitmapText(x, y, {font:\"arial\", text:\"Hello\"});\n // two possibilities for using \"myFont\"\n // either call the draw function from your Renderable draw function\n myFont.draw(renderer, \"Hello!\", 0, 0);\n // or just add it to the word container\n me.game.world.addChild(myFont);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>the text configuration</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.font","description":"<p>a font name to identify the corresponing source image</p>","dataType":{"tokens":[{"value":"string | Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"string | %1"}},{"identifier":"settings.fontData","optional":true,"default":"settings.font","description":"<p>the bitmap font data corresponding name, or the bitmap font data itself</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.size","optional":true,"description":"<p>size a scaling ratio</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.fillStyle","optional":true,"description":"<p>a CSS color value used to tint the bitmapText (@see BitmapText.tint)</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.lineWidth","optional":true,"default":"1","description":"<p>line width, in pixels, when drawing stroke</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.textAlign","optional":true,"default":"\"left\"","description":"<p>horizontal text alignment</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.textBaseline","optional":true,"default":"\"top\"","description":"<p>the text baseline</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.lineHeight","optional":true,"default":"1.0","description":"<p>line spacing height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.0, y:0.0}","description":"<p>anchor point to draw the text at</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.wordWrapWidth","optional":true,"description":"<p>the maximum length in CSS pixel for a single segment of text</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.text","optional":true,"description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[]},{"id":"pR7q4o2ZaqPpEY9Z-BFQW","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ucl3NJhAXDgKX5v1BkvNk","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"AwvDJvNY6LsXnS6oZ8wmP","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"AAnjjIaaXyyh5M5WFGFny","name":"draw","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw the bitmap font</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YlWmij6QYrhkI5Nr74oja","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"L-YDJNRgdAZDAr3-wlYlG","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2MatbSta0rAa7oMlNOeUS","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"W4ORRPa91N55Cpcar4BW5","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"olIcC9scpoMOuSPy1l64X","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"GWNonTlys4gnPOh7l8bYr","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"rZQvWqgDf2MFuJQSF6MMn","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_LMNGPd0n3flypZtsSJu3","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HDXifNCYubgmWTGiCk71_","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XQwvsal62FqVMSTNIdpx8","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"10tCnycVIQBkz7PeJ_E_3","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in pixels</p>","params":[{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a TextMetrics object with two properties: <code>width</code> and <code>height</code>, defining the output dimensions</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"IJTx00tNq1gTPpdGxp2LL","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fXhRyvqQiYuKbwrC9VVbj","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"-IXQaTcpiZsB-LgL2X_kW","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"V_6dRvGNHMQVB2vvhuOR-","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-vJZAwjBS-mGjS4WpkkIF","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the font display size</p>","params":[{"identifier":"scale","optional":false,"description":"<p>ratio</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"Zv8wZf_9Lv6QiWUZy8u9D","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pLtDXiiSMoknwJMd48ENk","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"05ni6dBYkcGP7cSPgokU7","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lcVwOXwiFGSaVsMi5w5gx","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the font settings</p>","params":[{"identifier":"textAlign","optional":false,"description":"<p>(&quot;left&quot;, &quot;center&quot;, &quot;right&quot;)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"scale","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"dZtD-ubiS_Dw11naY0w2p","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"sabYcbw76A_wmcUkLjcF0","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Xnz2wv2EEdPSJOv1mX3Fh","name":"setText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the text to be displayed</p>","params":[{"identifier":"value","optional":false,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"number | string | Array<string>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | string | %2<string>"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"RgSiaCI8q48fZVifdgx7H","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PCROOf5XrRAa9Sxjn9kjD","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hxpaiH831X9PRBrK7hDcC","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"G_ScUohFUKYn3F-zbxl2S","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YiaErhbZlY41Lu6gT93LV","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Zo6tgqPCawAo8VlHjY3OD","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"EolIQbnnQREfY-pIDC4zx","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1_E6qFFs1DvHMA8DlHuns","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"MuzMe5LBDrPgYw6RMsIER","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"LHPO2UcfKu-V_wCLT0wYf","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"k49r5bVWeMPcggTyZt0ey","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HnR3LWt_P4pkC1D9cFtKC","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"-dKqAH54WuMq4-dxXfu9U","name":"Body","brief":"","see":["Renderable.body"],"type":"ClassDoc","description":"<p>a Generic Physic Body Object with some physic properties and behavior functionality, to as a member of a Renderable.</p>","members":[{"id":"SmBYiUijmIPCs0OU-tv5r","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this body,\nor undefined if it has not been added to one.</p>"},{"id":"qoPKnp2z_gWEz6oLa-rp1","name":"bounce","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>the body bouciness level when colliding with other solid bodies :\na value of 0 will not bounce, a value of 1 will fully re..."},{"id":"Yv9mvY95uuSm1rDnxNiQy","name":"bounds","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The AABB bounds box reprensenting this body</p>"},{"id":"lOF4YC5_95rN9NEzPPKNX","name":"collisionType","brief":"","access":"public","defaultValue":"collision.types.ENEMY_OBJECT","examples":[{"caption":"","code":"\n // set the body collision type\n body.collisionType = me.collision.types.PLAYER_OBJECT;\n"}],"scope":"instance","see":["collision.types"],"type":"PropertyDoc","description":"<p>define the collision type of the body for collision filtering</p>"},{"id":"JF5MnJ67lx3d5eUR9GSQR","name":"falling","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>falling state of the body<br>\ntrue if the object is falling<br>\nfalse if the object is standing on something<br></p>"},{"id":"RFtZghvX-uyzM1uMNQiNf","name":"force","brief":"","access":"public","defaultValue":"<0,0>","examples":[{"caption":"","code":"\n // define a default maximum acceleration, initial force and friction\n this.body.force.set(0, 0);\n this.body.friction.set(0.4, 0);\n this.body.setMaxVelocity(3, 15);\n\n // apply a postive or negative force when pressing left of right key\n update(dt) {\n     if (me.input.isKeyPressed(\"left\"))    {\n          this.body.force.x = -this.body.maxVel.x;\n      } else if (me.input.isKeyPressed(\"right\")) {\n         this.body.force.x = this.body.maxVel.x;\n     } else {\n         this.body.force.x = 0;\n     }\n }\n"}],"scope":"instance","see":["Body.setMaxVelocity"],"type":"PropertyDoc","description":"<p>body force or acceleration (automatically) applied to the body.\nwhen defining a force, user should also define a max veloc..."},{"id":"t3voUA8fS9AnSjRZR_YK_","name":"friction","brief":"","access":"public","defaultValue":"<0,0>","scope":"instance","type":"PropertyDoc","description":"<p>body friction</p>"},{"id":"ctk3iee2Zm8OBrIHLkdlP","name":"gravityScale","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["World.gravity"],"type":"PropertyDoc","description":"<p>The degree to which this body is affected by the world gravity</p>"},{"id":"k8uPu-nIpzQoe3ufiJD2n","name":"ignoreGravity","brief":"","access":"public","defaultValue":"false","scope":"instance","see":["World.gravity"],"type":"PropertyDoc","description":"<p>If true this body won't be affected by the world gravity</p>"},{"id":"3-xAwQ1Qh2YNvhF0LkOrs","name":"isStatic","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>Either this body is a static body or not.\nA static body is completely fixed and can never change position or angle.</p>"},{"id":"0NZhuhnPSiAgZ7uyahsm1","name":"jumping","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>jumping state of the body<br>\nequal true if the body is jumping<br></p>"},{"id":"4ueai2_FRV1_gP0MVh1J8","name":"mass","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>the body mass</p>"},{"id":"HUAtIeqT7oPxWYRdy-4Q3","name":"maxVel","brief":"","access":"public","defaultValue":"<490,490>","scope":"instance","type":"PropertyDoc","description":"<p>max velocity (to limit body velocity)</p>"},{"id":"FgoPM8q7X0JY8RwvjhiWo","name":"vel","brief":"","access":"public","defaultValue":"<0,0>","scope":"instance","type":"PropertyDoc","description":"<p>body velocity</p>"},{"id":"Z8GUS7MMnDo-M9w8A7dyc","name":"addShape","brief":"","examples":[{"caption":"","code":"\n // add a rectangle shape\n this.body.addShape(new me.Rect(0, 0, image.width, image.height));\n // add a shape from a JSON object\n this.body.addShape(me.loader.getJSON(\"shapesdef\").banana);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>add a collision shape to this body <br>\n(note: me.Rect objects will be converted to me.Polygon before being added)</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape or JSON object</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse | Bounds | object","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5 | object"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Zu-2s6tLwmNGW0YkNXh7f","name":"addVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the body shape</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points defining a convex hull</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object for which to set the vertices</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"3Il3zou2zveO5SFVH7dmg","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"ancestor","optional":false,"description":"<p>the parent object this body is attached to</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"shapes","optional":true,"description":"<p>a initial shape, list of shapes, or JSON object defining the body</p>","dataType":{"tokens":[{"value":"Rect | Array<Rect> | Polygon | Array<Polygon> | Line | Array<Line> | Ellipse | Array<Ellipse> | Bounds | Array<Bounds> | object","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"},{"value":"Bounds","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1 | %3<%2> | %4 | %5<%6> | %7 | %8<%9> | %10 | %11<%12> | %13 | %14<%15> | object"}},{"identifier":"onBodyUpdate","optional":true,"description":"<p>callback for when the body is updated (e.g. add/remove shapes)</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"dYOTLgt46Kebm7HdkiWQT","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the any of the shape composing the body contains the given point.</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5unqOkff5JjztD9oHJE6M","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the any of the shape composing the body contains the given point.</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xov79POhf0sRPFbLIw0--","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all shapes of the physic body\n mySprite.body.forEach((shape) => {\n    shape.doSomething();\n });\n mySprite.body.forEach((shape, index) => { ... });\n mySprite.body.forEach((shape, index, array) => { ... });\n mySprite.body.forEach((shape, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per body shape element. <br>\nthe callback function is invoked with ...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"4iaXucWILLmoNG2eiZUwc","name":"fromJSON","brief":"","examples":[{"caption":"","code":"\n // define the body based on the banana shape\n this.body.fromJSON(me.loader.getJSON(\"shapesdef\").banana);\n // or ...\n this.body.fromJSON(me.loader.getJSON(\"shapesdef\"), \"banana\");\n"}],"scope":"instance","see":["https://www.codeandweb.com/physicseditor"],"type":"MethodDoc","description":"<p>add collision mesh based on a JSON object\n(this will also apply any physic properties defined in the given JSON file)</p>","params":[{"identifier":"json","optional":false,"description":"<p>a JSON object as exported from a Physics Editor tool</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"id","optional":true,"description":"<p>an optional shape identifier within the given the json object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>how many shapes were added to the body</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"L2AQa_x25kiirrgxwEA6x","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the AABB bounding box for this body</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"ZCWAIs_JSC0vZfwa-6Yls","name":"getShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the collision shape at the given index</p>","params":[{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object at the specified index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>shape a shape object if defined</p>","dataType":{"tokens":[{"value":"Polygon | Line | Ellipse","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3"}}]},{"id":"WlsQM-9CaoR5daB2C6g6r","name":"removeShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>remove the specified shape from the body shape list</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object</p>","dataType":{"tokens":[{"value":"Polygon | Line | Ellipse","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_PEz1d-bCcFK95A-HFU4i","name":"removeShapeAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>remove the shape at the given index from the body shape list</p>","params":[{"identifier":"index","optional":false,"description":"<p>the shape object at the specified index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"MnUhSxxYUOh6gXLDf7ZQp","name":"respondToCollision","brief":"","scope":"instance","type":"MethodDoc","description":"<p>the built-in function to solve the collision response</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object (see {@link ResponseObject})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"yrr3iHnbF-N8mTgHWQ03B","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this body (counter-clockwise) by the specified angle (in radians).\nUnless specified the body will be rotated around...","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"default":"Body.getBounds().center","description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}]},{"id":"okFT7fBQgPy8611SIeU1k","name":"setCollisionMask","brief":"","examples":[{"caption":"","code":"\n // filter collision detection with collision shapes, enemies and collectables\n body.setCollisionMask(me.collision.types.WORLD_SHAPE | me.collision.types.ENEMY_OBJECT | me.collision.types.COLLECTABLE_OBJECT);\n ...\n // disable collision detection with all other objects\n body.setCollisionMask(me.collision.types.NO_OBJECT);\n"}],"scope":"instance","see":["collision.types"],"type":"MethodDoc","description":"<p>By default all physic bodies are able to collide with all other bodies, <br>\nbut it's also possible to specify 'collision ...","params":[{"identifier":"bitmask ","optional":true,"default":" collision.types.ALL_OBJECT","description":"<p>the collision mask</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"eQrMY4qOEXJiR9jrrgQd_","name":"setCollisionType","brief":"","examples":[{"caption":"","code":"\n // set the body collision type\n body.collisionType = me.collision.types.PLAYER_OBJECT;\n"}],"scope":"instance","see":["collision.types"],"type":"MethodDoc","description":"<p>define the collision type of the body for collision filtering</p>","params":[{"identifier":"type","optional":false,"description":"<p>the collision type</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bwd_XnqUCnhE_Y_KidbO9","name":"setFriction","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body default friction</p>","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>horizontal friction</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>vertical friction</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"1XJr7UQxwEmr_UjVpS0bd","name":"setMaxVelocity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>cap the body velocity (body.maxVel property) to the specified value<br></p>","params":[{"identifier":"x","optional":false,"description":"<p>max velocity on x axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>max velocity on y axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gGy4wWSLXG0vlWk6yR_We","name":"setStatic","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body as a static body\nstatic body do not move automatically and do not check againt collision with others</p>","params":[{"identifier":"isStatic","optional":true,"default":"true","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"hE9773ZEzmSHmzpxo1sHV","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body vertices to the given one</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points defining a convex hull</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object for which to set the vertices</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"true","description":"<p>either to reset the body definition before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"qiySD01VNCT_KctuExfva","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>Updates the parent's position as well as computes the new body's velocity based\non the values of force/friction/gravity.  ...","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if resulting velocity is different than 0</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"JzJkctfirMvjTvhPpkiW9","name":"Bounds","brief":"","type":"ClassDoc","description":"<p>a bound object contains methods for creating and manipulating axis-aligned bounding boxes (AABB).</p>","members":[{"id":"4l-ffrcS8vfBE_f8cbC1l","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"BPg57aD1TREgnHwg9M03C","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"ZjS8ymtp5TRSlNEGxooLr","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"BpiVR7b5MtxbfsOYN09Y1","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"PRsfWSfppsiyCzWQMH9KS","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"1LlLeXEdqN8YCmrmPOtv9","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"3b_3bTRE0U520RyQynSzP","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"ROOZf5ElA051lNAkgpVoq","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"uzmVrfjV6sAvGyLniO90u","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"URZ4uEGTxKUr8LkuCtobB","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"SqHXWQ9JKjTO4R0eMeD2i","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"JKJnsnwQsr0vH-xRcsX28","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"cIWTDljBLaudQXDx4GkX5","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"RtNqPsyVLxt3jcZjmEP0T","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"zTQn1b6NMCPh2aUQ7xRmt","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"z2cf9n3e6tHV_wAEePHlL","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"vJ0mWPvVoZ-N5Se1er5Q9","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"gyVOJOLjHu64lxYXJQTcF","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"vertices","optional":true,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"Kyy9mHiJlDk4UA2Yj-Zi6","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"p8CkpDLYiLQAh-AfyKuKv","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7ORTT5qi51SEq1G4yrDau","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZlNUFj6wJLhR23AV2CaN_","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UZXFkgnQCbHVlQ4_cOjfT","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oF4hkLxd2K-fwm0Tr0o0N","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1JThieENvlzP2HVdP20tZ","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ewB1u5Z4Uy0ASNI4Txsga","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"El8JohFOZCDJylR9vB7RD","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"B5CeIHQjxFd8cSI7Plntd","name":"shift","brief":"","type":"MethodDoc","description":"<p>Shifts the bounds to the given position vector.</p>","params":[{"identifier":"position","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ThQhSBVudWbSflUwLFNov","name":"translate","brief":"","type":"MethodDoc","description":"<p>Translates the bounds by the given vector.</p>","params":[{"identifier":"vector","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"4XO8eSApdrdHSk00Ts-F3","name":"Camera2d","brief":"","type":"ClassDoc","description":"<p>a 2D orthographic camera</p>","extends":["Renderable"],"members":[{"id":"DVpVP0qLBs-RlzPNyN89r","name":"AXIS","brief":"","readonly":true,"type":"EnumDoc","description":"<p>Axis definition</p>","members":[{"id":"w9TDVi1DlY-wmCA0j5DXO","name":"BOTH","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>both axis</p>"},{"id":"RlFTtJe8HA9e5rjtT1ZUe","name":"HORIZONTAL","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>horizontal axis only</p>"},{"id":"jlkjwvysMpD2qW5N2YtLw","name":"NONE","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>no axis</p>"},{"id":"V6zjapt07-98s1-SPxxUm","name":"VERTICAL","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>vertical axis only</p>"}]},{"id":"1j0JMzfSE8DgILGjitS3o","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"v0s3c3af-6ZLl7Yl7aPQi","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"kR_H31Y2VRRAMlWZnekzs","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"KeVsd3Dqh5EwLYxFNy8cH","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"c9dZ3IwZ40OPkDlFKA79O","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"6s3W_yz3jnzJLI1oAS-JN","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"jXCct538poCd0coCXGNdt","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"ZpoGhADcHClK8JS2sjhVM","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"LHKSpX0qo0jgF_JfBvxKj","name":"bounds","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Camera bounds</p>"},{"id":"iMu2rK8bdn27ZmeE41DVa","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"7kO49-xbXZz-rQYBwDIKI","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"M8Fr1VjZzPyrXQsmaZuDa","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"_6VythVZUEBgWhEJh3ewE","name":"damping","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Camera damping for smooth transition [0 .. 1].\n1 being the maximum value and will snap the camera to the target position</p>"},{"id":"G_KIzC3CRNAP9TKPTMeGz","name":"far","brief":"","access":"public","defaultValue":"1000","scope":"instance","type":"PropertyDoc","description":"<p>the furthest point relative to the camera.</p>"},{"id":"IbFhR9jxwTT3or7b2Xa5c","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"sJ1ZJ0aEOJOJXFm6Gdeng","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"fL1lov4jW7DRCTly78dZ0","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"au_AyVZvKR9EAWm5beT5l","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"gwciaeA4NxBZfGuhV6jts","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"n5J8HltimInxTXjvgVPuS","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"RJaGaplNmoPnkuMo1bFuI","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"IQ_dQX7c3ptlFsK5k-ehi","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"mBiVUWZy8saiA0EBTf_1q","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"JoQaw1eVDAX6ljADDZpJo","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"I5x5ZIY-kN2cQJ1IlTKpQ","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"o0pq5wInAU5ic3WwABnOG","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"ZdJNyJabz3ypK139yZ8Oc","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"6Jk3Fi747qqxpQLARkFqb","name":"near","brief":"","access":"public","defaultValue":"-1000","scope":"instance","type":"PropertyDoc","description":"<p>the closest point relative to the camera</p>"},{"id":"9SuYdmoLZDqViyntr2Yua","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"TzZWBzellKOGVOpERNRDp","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"Kes7VnJSCDv4hjgAO9QLd","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"cuwRZJks6_Ypf80F2CA5V","name":"projectionMatrix","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the default camera projection matrix\n(2d cameras use an orthographic projection by default).</p>"},{"id":"ZcApX-d3fArMJ6S1dWCun","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"_KWtZ6ItqoKjXoI9lo6ef","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"A-3dsa_1HjO22W7C003at","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"ZQQbVqtLDV66XxLW0KeaP","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"fr1hnbX7WrbBOjiU7aXPD","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"tzleNhiTwJz7luJZSuVTd","name":"smoothFollow","brief":"","access":"private","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>enable or disable damping</p>"},{"id":"X62eYOeksZ5dA_qptoc2n","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"j7dHzOAlNy1UTvDDddmDg","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"mKbAegoNg9iOBWObwtqkn","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"qtOyffKBxh06F5rvgmkNa","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"minX","optional":false,"description":"<p>start x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"description":"<p>start y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"description":"<p>end x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"description":"<p>end y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5-dhfABcvWMc22-F6N16A","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"a8S97hdu5blwh7e_woDhc","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"yaEO5pa-Xj9bxKlRgq75Z","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"rBTCdOeNP6kFVrGNM3g6D","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AMO3SmW5JgcvdDEMcl9dW","name":"fadeIn","brief":"","examples":[{"caption":"","code":"\n // flash the camera to white for 75ms\n me.game.viewport.fadeIn(\"#FFFFFF\", 75);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>fadeIn effect <p>\nfade to the specified color</p>","params":[{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"ZLfGvfCOMvhMsQ0w2ptqg","name":"fadeOut","brief":"","examples":[{"caption":"","code":"\n // fade the camera to white upon dying, reload the level, and then fade out back\n me.game.viewport.fadeIn(\"#fff\", 150, function() {\n     me.audio.play(\"die\", false);\n     me.level.reload();\n     me.game.viewport.fadeOut(\"#fff\", 150);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>fadeOut(flash) effect<p>\nscreen is filled with the specified color and slowly goes back to normal</p>","params":[{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"qaA0C30QxlqugSkcr6gJT","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cvR_ZUow8CQtIUP0absXU","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"JCMpfzdHeoiohOaURlt_M","name":"focusOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the camera position around the specified object</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable to focus the camera on</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"0xFhAupShHXMBnT7qyFlf","name":"follow","brief":"","examples":[{"caption":"","code":"\n // set the camera to follow this renderable on both axis, and enable damping\n me.game.viewport.follow(this, me.game.viewport.AXIS.BOTH, 0.1);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the camera to follow the specified renderable. <br>\n(this will put the camera center around the given target)</p>","params":[{"identifier":"target","optional":false,"description":"<p>renderable or position vector to follow</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"axis","optional":true,"default":"me.game.viewport.AXIS.BOTH","description":"<p>Which axis to follow (see {@link Camera2d.AXIS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"damping","optional":true,"default":"1","description":"<p>default damping value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-gX3ZLxe36E9d_kMIVj-M","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"LNn3DMrczegPtvaKxr7XV","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"SqRDnlj1F8NZv53Ilttoi","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"LPb8e-K0P-bXdCmlBzeid","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"CvJiMgbsIhwwg_lozAmm9","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-qcajMwRRv-JTjwQFP2X-","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RL1y08sUFXwhwz7ZxKV6h","name":"isVisible","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the specified renderable is in the camera</p>","params":[{"identifier":"obj","optional":false,"description":"<p>to be checked against</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"floating ","optional":true,"default":" obj.floating","description":"<p>if visibility check should be done against screen coordinates</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lj3ThZIyrzD5H3YEz6Ref","name":"localToWorld","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the given &quot;local&quot; (screen) coordinates into world coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the\nconverted value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"D-LspmqhnclrooJyNv1o0","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lG9CHw4TQIrU7rCd2uo2w","name":"move","brief":"","examples":[{"caption":"","code":"\n // Move the camera up by four pixels\n me.game.viewport.move(0, -4);\n"}],"scope":"instance","see":["Camera2d.focusOn"],"type":"MethodDoc","description":"<p>move the camera upper-left position by the specified offset.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DBx0FGhbii_Xo-AVHfwB1","name":"moveTo","brief":"","scope":"instance","see":["Camera2d.focusOn"],"type":"MethodDoc","description":"<p>move the camera upper-left position to the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5vqMQT_iShSpOl8Zrn3Cp","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"z5AAnjBr4z4nunNcdX3X0","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"YJtbPQp-H9kKbAX9EyZ40","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1X5FUjfCuUZmtiGznHHUP","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qO4EKQTnIcpdsrWTXSrb4","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the camera position to specified coordinates</p>","params":[{"identifier":"x","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"45yCg4NjPQTj68RCO4P8P","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the camera</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the camera</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the camera</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this camera</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}]},{"id":"YEI2p36dsUCGBf-EVEOjR","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"yuYnz_DgiGSmclih5qftV","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Dcfl54cwzkO3dX4GPfDPz","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"_3czbHiiMJf3GW7q079JN","name":"setBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the camera boundaries (set to the world limit by default).\nthe camera is bound to the given coordinates and cannot mov...","params":[{"identifier":"x","optional":false,"description":"<p>world left limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>world top limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>world width limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>world height limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CZPZDsAhETkNN3f7GYi3Z","name":"setDeadzone","brief":"","scope":"instance","see":["Camera2d.follow"],"type":"MethodDoc","description":"<p>change the deadzone settings.\nthe &quot;deadzone&quot; defines an area within the current camera in which\nthe followed ren...","params":[{"identifier":"w","optional":false,"description":"<p>deadzone width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>deadzone height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"WEWDCNr9JYb0yRG-SNUfM","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"g92xP2SUNSVZ2Ly4dlNui","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"IhU-x_0_WPke8GUd66HVV","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kDS53NAyg9-CFy1LX_uYl","name":"shake","brief":"","examples":[{"caption":"","code":"\n // shake it baby !\n me.game.viewport.shake(10, 500, me.game.viewport.AXIS.BOTH);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>shake the camera</p>","params":[{"identifier":"intensity","optional":false,"description":"<p>maximum offset that the screen can be moved\nwhile shaking</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"axis","optional":true,"default":"me.game.viewport.AXIS.BOTH","description":"<p>specify on which axis to apply the shake effect (see {@link Camera2d.AXIS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once shaking effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"force","optional":true,"description":"<p>if true this will override the current effect</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"dwqA_24VUcKx3-CcE_FWn","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ANNF4j-jvFXxU42YcjPwf","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ptpOkwxAB9QBy2qI7ybfR","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"DV6-tJ9b367kVRqYim1xG","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uL3jxHZtYN6YFiVcy1Tgo","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"04wW4FtvuaK5IoQy0Gdvw","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"hKHC5VLjSJPBOMEQhXNVm","name":"unfollow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>unfollow the current target</p>","params":[],"returns":[]},{"id":"JAdf6Tb9X5VuESmlIYLGh","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"uSqEFRQjYUyPb_5I5kuK5","name":"worldToLocal","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the given world coordinates into &quot;local&quot; (screen) coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the\nconverted value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"hc9y5ItFJf-b5kM9Tzi7L","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"nZWSh1aW1u6tf0lUEdemq","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"xj8qc1sAPMG1EPMM80rSa","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"m4DTgqyMmAY8JLVrYhom4","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xnn6hAglisQ8CWyC1HIP0","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"NlylsZ4Di6toQTtKsz2KN","name":"CanvasRenderer","brief":"","type":"ClassDoc","description":"<p>a canvas renderer object</p>","extends":["Renderer"],"members":[{"id":"t4R_Gaz7jz2ulok3uexU4","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"OnPOQ2q2zc3zeClczxEwO","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"Uhcdqu9c4nIu7R-Otc4xQ","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"ABvw6Dh9yU__jh4dbxK43","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"Y060702-PRYmrHCKz2ArB","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the main framebuffer with the given color</p>","params":[{"identifier":"color","optional":true,"default":"\"#000000\"","description":"<p>CSS color.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"opaque","optional":true,"default":"false","description":"<p>Allow transparency [default] or clear the surface completely [true]</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"TtDaU2cglqyRhG7lt1wQ4","name":"clearMask","brief":"","scope":"instance","see":["CanvasRenderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"9iHBQWyQcS6wVjbhqCVUS","name":"clearRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Erase the pixels in the given rectangular area by setting them to transparent black (rgba(0,0,0,0)).</p>","params":[{"identifier":"x","optional":false,"description":"<p>x axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>The rectangle's width.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The rectangle's height.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Cy8WxTLKkhjbfiDgh2RgV","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"pio9Z5OP5lt1YBwtii9Xk","name":"clipRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clip the given region from the original canvas. Once a region is clipped,\nall future drawing will be limited to the clippe...","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"p1w0ldOka-st0pKP_IufT","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel renderering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.textureSeamFix","optional":true,"default":"true","description":"<p>enable the texture seam fix when rendering Tile when antiAlias is off for the canvasRenderer</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"JCEuvDPgiu5HTkKDyLXGD","name":"createPattern","brief":"","examples":[{"caption":"","code":"\n var tileable   = renderer.createPattern(image, \"repeat\");\n var horizontal = renderer.createPattern(image, \"repeat-x\");\n var vertical   = renderer.createPattern(image, \"repeat-y\");\n var basic      = renderer.createPattern(image, \"no-repeat\");\n"}],"scope":"instance","see":["ImageLayer#repeat"],"type":"MethodDoc","description":"<p>Create a pattern with the specified repetition</p>","params":[{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":false,"description":"<p>Define how the pattern should be repeated</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasPattern","kind":"canonical"},{"value":"CanvasPattern","kind":"canonical"}],"template":"%1"}}]},{"id":"kck34wcwXikaQZM0Nt2k2","name":"drawImage","brief":"","examples":[{"caption":"","code":"\n // Position the image on the canvas:\n renderer.drawImage(image, dx, dy);\n // Position the image on the canvas, and specify width and height of the image:\n renderer.drawImage(image, dx, dy, dWidth, dHeight);\n // Clip the image and position the clipped part on the canvas:\n renderer.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Draw an image onto the main using the canvas api</p>","params":[{"identifier":"image","optional":false,"description":"<p>An element to draw into the context. The specification permits any canvas image source (CanvasImageSource), specifically, ...","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"sx","optional":false,"description":"<p>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sy","optional":false,"description":"<p>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sw","optional":false,"description":"<p>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rect...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sh","optional":false,"description":"<p>The height of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dx","optional":false,"description":"<p>The X coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dy","optional":false,"description":"<p>The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dw","optional":false,"description":"<p>The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dh","optional":false,"description":"<p>The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the imag...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vsthbdwdS8k2aMduET8v5","name":"drawPattern","brief":"","scope":"instance","see":["CanvasRenderer#createPattern"],"type":"MethodDoc","description":"<p>Draw a pattern within the given rectangle.</p>","params":[{"identifier":"pattern","optional":false,"description":"<p>Pattern object</p>","dataType":{"tokens":[{"value":"CanvasPattern","kind":"canonical"},{"value":"CanvasPattern","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"seWE5ExYody-Nd4D3fe4P","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"t5Xy3sZr1ZVMnRxer7svJ","name":"fillArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"DQYYRkcafpe3K9LENUR4Z","name":"fillEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zyCIwNK-_jvE037-TPsL1","name":"fillLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"cPXy00CdE7NtR0-T2NPTS","name":"fillPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill the given me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"kA8EpqUAanatzaWE7q9x_","name":"fillRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5yNsaY6llaklpGKggWZaX","name":"fillRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a rounded filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CVPznD33zgwb78s-h9oAZ","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>render the main framebuffer on screen</p>","params":[],"returns":[]},{"id":"5Y9ONwCOCuLpL86iRlHvM","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"6PGZQNjHMbd_K0XqyULWp","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"SVzdaRSpKZtczfl--SsTC","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"YR52eb3e4K9RFMLimpBEk","name":"getContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system 2d Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"Af4MLtC2oqpWsVX-pkv8b","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"DvEFTwNNoghpNzPBod_IR","name":"getGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the global alpha</p>","params":[],"returns":[{"description":"<p>global alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1dIZoHhdGv63ovVCG-dTt","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"YLWu4bxEQqABhDWMOaBd-","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"J5oaoVBu-CCbzjr8FpeQB","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding 2d Context<br>\n(will return buffered context if double buffering is ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"tV9KlCQ6zuwgdshVmlCTw","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"wjFr_4KkLlnD2sIKuYrWw","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"PZRV91JkfXjlG3ipbv2HP","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"C08Etqnl9XKcM3CubValq","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"BEYvh11J4L4mZxo8lc_gj","name":"resetTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the canvas transform to identity</p>","params":[],"returns":[]},{"id":"SSkHf2k5O3i3fbf1iV1VU","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_lNne1q9hIrDfHWLtvizL","name":"restore","brief":"","scope":"instance","type":"MethodDoc","description":"<p>restores the canvas context</p>","params":[],"returns":[]},{"id":"wIrjqsiAGGXkjCYRfEAGO","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotates the canvas context</p>","params":[{"identifier":"angle","optional":false,"description":"<p>in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"rYP_6tvjn42fGqv11HTAK","name":"save","brief":"","scope":"instance","type":"MethodDoc","description":"<p>save the canvas context</p>","params":[],"returns":[]},{"id":"1ZvOuyX1GWA9htyQcm1EC","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scales the canvas context</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bpajEq0KJCxAvF9ENKB3a","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"M4aYGpIB7XyKahcxUOmwd","name":"setBlendMode","brief":"","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"type":"MethodDoc","description":"<p>set a blend mode for the given context. <br>\nSupported blend mode between Canvas and WebGL remderer : <br></p>\n<ul>\n<li>&q...","params":[{"identifier":"mode","optional":true,"default":"\"normal\"","description":"<p>blend mode : &quot;normal&quot;, &quot;multiply&quot;, &quot;lighter, &quot;additive&quot;, &quot;screen&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"LRoJOp3kwrfew8g-PjnFw","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the current fill &amp; stroke style color.\nBy default, or upon reset, the value is set to #000000.</p>","params":[{"identifier":"color","optional":false,"description":"<p>css color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"G17S95mp00jyA8zQIpjc9","name":"setGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the global alpha</p>","params":[{"identifier":"alpha","optional":false,"description":"<p>0.0 to 1.0 values accepted.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_JXQ2Fo04CapLufbFFHNd","name":"setLineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the line width on the context</p>","params":[{"identifier":"width","optional":false,"description":"<p>Line width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"NuM2pYZKvUMm_rMgo9K01","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>the shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"pm1gCMA-yxexC8ZYwIggp","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"__de5ZHiLKeN_6ergD1KA","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"1d8l-dOr525Jk-dyVZ859","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset (overrides) the renderer transformation matrix to the\nidentity one, and then apply the given transformation matrix.</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"T7WkomEVtvY_JNly82aCB","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ir62pC4P7XZlQzxATqZMc","name":"strokeArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"lDMyJNfQtCO1QoxIjQPSf","name":"strokeEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"yiXv7ON-H769Ez_2HknEE","name":"strokeLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Li8o0DqmB9Ex5-8wQY3rr","name":"strokePolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke the given me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"0UoPEdCcTVZsTPSZSf-wt","name":"strokeRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"H3aB2Fn4GshfKHXdihizs","name":"strokeRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rounded rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"-G1oVNqT5u9FZFD-5YFBx","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"NL4SJ365cnJX6EwPZI6D6","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply given matrix into the renderer tranformation matrix</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"VZ0pq6bfsHuounhJ6idgs","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the context to the given position</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"kBLJYfHZLN9GrcS4sGr33","name":"CanvasTexture","brief":"<p>Creates a Canvas Texture of the given size</p>","type":"ClassDoc","members":[{"id":"8yJDhcaAH_ul_WayEEyv9","name":"canvas","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>the canvas created for this CanvasTexture</p>"},{"id":"AIo4KFPRuGetRCU-V8IUE","name":"context","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>the rendering context of this CanvasTexture</p>"},{"id":"tt8fTRzmEQPsAcRuZy0kG","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The height of this canvas texture in pixels</p>"},{"id":"po6k6PXyScCHCcXer-8dh","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The width of this canvas texture in pixels</p>"},{"id":"_Rlh28JG40TkX9M5hiEYC","name":"clear","brief":"<p>Clears the content of the canvas texture</p>","scope":"instance","type":"MethodDoc","params":[],"returns":[]},{"id":"djvSy5zR_zFouBRKMp3y4","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"width","optional":false,"description":"<p>the desired width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the desired height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"attributes","optional":false,"description":"<p>The attributes to create both the canvas and 2d context</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"attributes.offscreenCanvas","optional":true,"default":"false","description":"<p>will create an offscreenCanvas if true instead of a standard canvas</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"attributes.willReadFrequently","optional":true,"default":"false","description":"<p>Indicates whether or not a lot of read-back operations are planned</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"PhCvdjENhjGyveitb35s4","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Resizes the canvas texture to the given width and height.</p>","params":[{"identifier":"width","optional":false,"description":"<p>the desired width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the desired height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"IB2dHiadaK7vcFfOGb1Xq","name":"Collectable","brief":"","type":"ClassDoc","description":"<p>a basic collectable helper class for immovable object (e.g. a coin)</p>","extends":["Sprite"],"members":[{"id":"NpvQlAa1uREox2pButysz","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"rWTi_CBYfAYiiryVezGOR","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"KgT0ECjHA5Goy1OlC1dC8","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"y-PE8vlk349qIvMpNI9ts","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"fNVaSNiMmnEA5lQTCDB14","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"scPtscCwyy76SPsMLYGa4","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"3MLQwy82sCy6PRaA7VtlY","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"uTe2BrKleBXPlm4nYNEiU","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"d8QfSGmGtnlRNMVlsRj_4","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"AqwWTJfNEN8KGW4CCNB3w","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"TrEYGYzYwQKVHtUNJDvgx","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"ROZNvwFwK8VrJhqcOmJ5Z","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"jhzMkagnyDsFhKgvgbbWW","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"heyXvMrR6ksOon1CoiSMq","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"7SkOJLmFKPUsw__uZP1Ma","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"6ILsO_GwHhOmqtsP05WF_","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"5os150sIhqJjIuLNxmU4M","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"9l9skPTube1dy3XS8ED5R","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"s8BiC7dianC0EPHDESVbN","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"04pIVSksH2YWpV0jPpfjv","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"c_dzJbpzdjmeEmsqJ1Iu5","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"O-9BNjAlv3NYtkXzp_GN2","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"eipqTV91ORirjyXg-nm_U","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"URX9aSgpHjiB-jG0uuXxJ","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"rig3LXhjXTzv-swp6WcwO","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"n_GjoJ8qIkkB494h5nWBC","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"K7ED1A8aaw2ZjRtgtpj1z","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"BYbNuDWoFMSVuiDz_VXL3","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"5miVuoattrQI_blxf6Mcx","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"Sxov68yCv1aTQi7IotSMI","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"-H2WRby_ZdiXt6Ufh_rjM","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"fHa-LFWtO6A7UXSwsCMdJ","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"rm3k3ycA9z-_28nxVwIA6","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"yOe_8rTX1fYHDU-i9Q7x-","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"ZoaCfkT01W4PHoL4rnrcp","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"HNqLP4e2qKQGFrbRSYUFT","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"EeRT98kOybZ8ar03TuOLC","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"rjlGXq_zKvurP6AzH1yBi","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"WpGcTSzbjPJGQXfWiDVP7","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"IprA3OowrUDKc3ap4atNY","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"7lnBb-TSvMg0jBIEYDupu","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the collectable</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the collectable</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>See {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"yxHhzwRNZ3A-YI0kyNBE9","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kbH5qWVSg6fBa0EQkoJJi","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Xi0FblaD2qGTkl8MVoJEm","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_0NFTOYcBjMrwKWRi6C8w","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"t3amCQVQ0Nk-CL7KbBlsR","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"Z5iF-KZpNG7mT7z0SP10S","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"yrvJeMaD0REqt5ci5SdHI","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"eMnYKz8ftuAGwzS0C9zQz","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"cW3Qfju_5lprbPclP7j_v","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"1MNqx6M5bM41J7rk8XWAY","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Dd67JL46AcT5aCjW27Y_l","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"hvRDAYgn_5Zw5a7GK8sIF","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ho6tMr6LkMLxCqjKBJp2E","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JR9Mo3jcuNNgTOUtGBejN","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2qKm_cD5Ykminmgj1wYHU","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JTZ8JVNYDJQ21jST0TVRl","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2FGe7oz-_D7t_JUj4xRk3","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RbGq2Rt52sqSUeipEN7fe","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"y3n1A2tNRwKPkIVtpV_Dp","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"oK7b8UZGuVxsrlPA5rpVj","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1GZNKHJNWkgDU8efQChsL","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"FM0BGgT8IRWzONYnScZuN","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"1xaVTDTfpj_tiCuyIQyCB","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"Ujj8CEUSP9AHuheOT6tky","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"chV5OuEbi6Z9iIpMtU5XP","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"1vjWjGWVUTVX6m7iJz7bX","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"z3rppJyZpmaPshz00Y4R9","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"PjEOVzXP0270b42C2Kh0-","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"bkL145moxfvxn5SGnIIWk","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-_FYIoAY2jQAfVp4KMlsB","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"6P22GmyQN7g7MZ-nEKmw9","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"TVuo0nBmmPZPzRH1hlYin","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"INBMhFJy3cSsiVVc8NCFO","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"uw_mf82w3UF9pnBDD6yfS","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9WooU_2D10yYhhWtWLi3K","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"EGyyiYnfkiW6XjiSujkgX","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"HND2903ravBbhLkaNr8F6","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5x4kGdawvpj0dl09cGmn2","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"i-ZiXz58_cJ2LozkG9GWi","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"hsVrmqsbT3spu8EGLlhn-","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this srite (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"bszjokHZmPC76dylYeWyX","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"GerZ86hqj6EZ1TgpLvshu","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"lVTn1NYc4ehgSaGPgbwod","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zPAmGvxQjnm9CNWjg3p_r","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"KAjcK2qUpU3ofIF4zbdgx","name":"Color","brief":"","type":"ClassDoc","description":"<p>A color manipulation object.</p>","members":[{"id":"01wn-cib5W1l4xcwk22rY","name":"alpha","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Alpha Component [0.0 .. 1.0]</p>"},{"id":"drB7vdbVKr5UVYjxTohhi","name":"b","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Blue Component [0 .. 255]</p>"},{"id":"uG76TJzVxZk3pfo6oWkz6","name":"g","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Green Component [0 .. 255]</p>"},{"id":"FYvIZw9ofe4b9OiOZZPHe","name":"r","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Red Component [0 .. 255]</p>"},{"id":"x6iQ6qEwxYm62u5g093MW","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Blend this color with the given one using addition.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"Hks6uyJ9sxPR-YFdUzoxR","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Create a new copy of this color object.</p>","params":[],"returns":[{"description":"<p>Reference to the newly cloned object</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"xAmWIOwvytxMxTWQM4KKe","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"r","optional":true,"default":"0","description":"<p>red component or array of color components</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","description":"<p>green component</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"default":"0","description":"<p>blue component</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nbm_WubwShmmtOsZlVvBO","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy a color object or CSS color into this one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"redX8_8t15pGws4psoGPB","name":"darken","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Darken this color value by 0..1</p>","params":[{"identifier":"scale","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"qo8mbw2wuiBiBr9x2d8dy","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return true if the r,g,b,a values of this color are equal with the\ngiven one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"F897ef5KSqUyO9x_2CLsx","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this color and the given one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>with alpha = 0 being this color, and alpha = 1 being the given one.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"E33Daw43ipNSa58W3hS4I","name":"lighten","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Lighten this color value by 0..1</p>","params":[{"identifier":"scale","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"rScgzC5q7fuXMoSDhZugw","name":"parseCSS","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse a CSS color string and set this color to the corresponding\nr,g,b values</p>","params":[{"identifier":"cssColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"MikDuopRzJ4mrT-kQxuSt","name":"parseHex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse a Hex color (&quot;#RGB&quot;, &quot;#RGBA&quot; or &quot;#RRGGBB&quot;, &quot;#RRGGBBAA&quot; format) and set this ...","params":[{"identifier":"hexColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"argb ","optional":true,"default":" false","description":"<p>true if format is #ARGB, or #AARRGGBB (as opposed to #RGBA or #RGGBBAA)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"o0kh0RiGZOljaCfv9STPd","name":"parseRGB","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse an RGB or RGBA CSS color string</p>","params":[{"identifier":"rgbColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"QdSnKsCGDi8Hy90sVdTO1","name":"random","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Generate random r,g,b values for this color object</p>","params":[{"identifier":"min","optional":true,"default":"0","description":"<p>minimum value for the random range</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":true,"default":"255","description":"<p>maxmium value for the random range</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"miogw04ln7txENimJfv_p","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set this color to the specified value.</p>","params":[{"identifier":"r","optional":false,"description":"<p>red component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":false,"description":"<p>green component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":false,"description":"<p>blue component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"3XDsWVgzrgIUQDZfE1CWH","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Tx-xxb4sv-vHJD45c23mv","name":"toHex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;#RRGGBB&quot; format</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"TsDk1igu9zzm8ShKFZ-oe","name":"toHex8","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;#RRGGBBAA&quot; format</p>","params":[{"identifier":"alpha","optional":false}],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"1bcPK_s4GZUfkDhItxMwU","name":"toRGB","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;rgb(R,G,B)&quot; format</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"GFsZBZO9bmiNVo_vL36QE","name":"toRGBA","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;rgba(R,G,B,A)&quot; format</p>","params":[{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"t9wyAtKx7ZwsFWxFbL5_K","name":"toUint32","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Pack this color into a Uint32 ARGB representation</p>","params":[{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"t8EXcszzZdfaa88wGuflR","name":"ColorLayer","brief":"","type":"ClassDoc","description":"<p>a generic Color Layer Object.  Fills the entire Canvas with the color not just the container the object belongs to.</p>","extends":["Renderable"],"members":[{"id":"nrIhhR7Pr6uHZfxuTUcW3","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"9J698lMNk6syaXmXInOhX","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Grd0eDO1MQRbbuSF8_6mr","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"5-WkGqzqbb3ZGteiASJKo","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"CWMLGFZuuqUuBZU7e4_3D","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"WNU0U1TymzqfcVBhkvi-v","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"PC95KUXv9k-KFsA-R9_nb","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"44Vc7VDheQ7ujmG-S6w6K","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"vKiQZ65gVSmpzO2yyjP5b","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"xJKyEZ1LRAwaXMOoGsmDN","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"n_VZYkL-n7ptWY0rV2QuV","name":"color","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the layer color component</p>"},{"id":"DxiB9CQQwUetACBrAoqn4","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"zXTm0pucC6KQ6gIw0B5_m","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"aNE2v__I2zZWYMGSoIxvi","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"X2FY_VvHahRvT3_QBDcLk","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"VxnAx_WgoQZCvzFjffP5a","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"g1tXPX3DnXKPP8P88gMl3","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"XyBEG4GgBbqea4raMriaO","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"_I7c98n4B2y2wL6lGlSYI","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"BQDkF1piOvoJPQb8NicC9","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"Gu3Eag69VePLivA0aiHiC","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"vsvesZixPN7gO9D0npFm_","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"X0E9KDHBFUk4X3Pa64lZP","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"y7PO73CXOgSTV2SioNg-x","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"yQfv3l7x8q22o3N6wmtSu","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"EqbVeS-t54r-Mnpd35P8r","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"CYbUqgcAxKKHzXZq6BDwx","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"eIjiCijyHemSpXm14oXw4","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"glax5fRhsfEFV6zRPE0Ud","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"QMzskN3_TJdQ4f5onGxj_","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"dyaiCYYB9MnijgTt78bLu","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"GHYqqyKgSmv09nywS2UBC","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"S7mEcApHmgf9vtH1ZVNPi","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"Jec6ba3ZlmVhkm95QSG3O","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7I95UndWlwn9cv4PLl_Tq","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"QLykqCnzMnPTp6lnYhhxl","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"8sYx0YdjSHMms-B_ghqRX","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"name","optional":false,"description":"<p>Layer name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"color","optional":false,"description":"<p>CSS color</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"z ","optional":true,"default":" 0","description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-nBd4BsoOhiPGier34GOD","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0e2mAed96kJlDKWj7CaxW","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"jauv3vt9RysFJkE3Z-PNl","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ciyoQ2QKJWIq1jgOMYPbb","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"YPDqX8aYbnWuGOUR_IMN3","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"qZGvNw0QZ6I6gdql71q0_","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"dG9t5wmzb40ZSgL_hbGBH","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Ct8KW3ctWjaDWnoEZml2F","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"ubXOARMrKg7nwWRvO4exz","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"g0hvGJLkzyvmeqqHmhSc9","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"60iD6f-oMNKSJ2K5-PSzG","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jrBPV33bvIm6QhaoLD_i2","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"uTpq9A1LWKJyJctG8DYX6","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"iLoKFP8JmJ_8W2LFLOj-m","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7C5AytXK3uLjWGlscWgTZ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"aBgB7N1n-7ZnldlCssbxV","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BKthuHJag0LlOwshDl6VI","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kF7fD-wukAnhY2rhxzMKR","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"BQEY6wtjJqsDFCwJZlIws","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Gl8mxoxvXCFV8KoNCVGXN","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VdEr7hgyFQnvAP6uM91IB","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"A962-XIEj7rW_l4FhbLT0","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oL_zMoKq3lJR4niOlJ4mo","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KdeKooEK4ADHOCJvACDUv","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QxilD892r2PEGn4f4SBd8","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"LpXKFPm6aun4gB_gHwT4A","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"HyMIzMXUK-J570tOOP0_Z","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"5Niv9w3h9Y1J18DwFQbvN","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"MM1D2enDpvxuc3TnEFnAp","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"gUWS-rCNz9NqXDrxpLx0t","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"bsL_ujYabxZBvkARbfSK2","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"sVwBkCE6OfqplOiqjdN88","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this color layer (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Kkl97WmBmslDA-mtMHqfo","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"F1BHfprf2sdHhIfBreK2n","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"cQnxBS_oGGHUVssFAyWLc","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UJx6DRVuv_pOmk-A6kdEc","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"BFe4Hmzv3IKGRHjVUH_1k","name":"Container","brief":"","type":"ClassDoc","description":"<p>Container represents a collection of child objects</p>","extends":["Renderable"],"members":[{"id":"lRGrpMOxsOhYVAp0X-s6Z","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"BwD5z8euISIf3V_LzZmBN","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"kMyTsCQ04lFiLxwvR6keQ","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"lU9zR4fC88d5cQqKccEQM","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"5RuORfo0z6iYgWB3cwDZL","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"EFEo5bBmDJdvqJktNG09u","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"RrKwrOrpn_yGyKlmRP4g2","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"kCEGvgPrAoryyCTRCuTJr","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"MzOMNulrjiFrr1x2TEFCx","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"puxWrZFo8aZjwo_K8cneT","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Eq9nZIyxA_eQtXNQfYZrZ","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"NE5RjFAxPmUPNrsar007n","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"GLbE_8WB1T-9CaA1F9p9q","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"CY3_c0wptWjSJCnsNq2t6","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"iA0Hz-qLLc2jGDSHW2c8l","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"POwj0GIQJCE2xd5ysMczP","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"rQ2m98tcViIw8JN9zZ1vU","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"SHa2ayOD6Nat2xcIwH4pS","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"vZO08bsX1wcfIXC_SDzvr","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"lYynNuPQYLckSOtAzYoTt","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"Q2Y1JelWklx2XVbAXAaU1","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"QtE9tfeHA6pU9pXFAWpu8","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"EIjrCdAiqaBdp3qlCQswY","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"NEtxQhMRQmI7pGtzwaOy-","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"TLpc0KrmNMl_hbCbQbN2R","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"JYBHd2Eg7PHCSgN9YC9Fo","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"7a06VeBrDlcdURhrHU_S7","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"1YPfngg769mZq1FHsEAxZ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"AyscGIKSFaVM83dDgOJNb","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"JeMpWMNuHsKQD0WjEMO3g","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"ZNl_x0mZii8TJ7FTHi4_K","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"5kXgu_tuYChrY-NhRZol6","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"4eIZ97IobmcbwHxAo0cfc","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"xWpgGy-AopAYG_MVFcPmH","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"UFyMJRgYEiQEEmxQha3Eg","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"9JGADn_6_8l7Infsj_mbq","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"XmAWZtnYfJUNECgsL-UFX","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"uRhIPzDCPKW56L3_LsHcQ","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"y8jMz-TwyJsqeURueZToE","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"X02ofyQnJ01FHYm3wQhFf","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"SX78YMq4rJQQkli-S3-y8","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Se43yUEm9w6HVTqJbmFw0","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"F7XFmswX2OavSLa97onJ0","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"g4QhFcX1RL_o1zA582hNt","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"oDBfhq0cqA4mTf8kwKGZ0","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":true,"default":"game.viewport.width","description":"<p>width of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":true,"default":"game.viewport.height","description":"<p>height of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ErA0_MY2ezmaZr83bYF7f","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rkJ3tAO5qVLYkhLyddrec","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PTGZRrNn7POlwHBiDtT9R","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1YrFvk-nTLGsWmx3rgyE5","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WrgVSu-hFiwAnZmFuKyj5","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5A2kQcNNOxn_372BERalD","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"oZ5Oxboex8eTub-V4OBRf","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"CMbg59iQ8XLa-SDR8TYiM","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ECJc-JfhLCGIxRqueSaVY","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"GJUijH7GpNde0F25vDrOn","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"WivhKVMkoZch5yQIHTyYg","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"-CAIIpH0xRAVUKcCJDrpk","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"jgINPtSo-3LzEYNpKUdYd","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"bi8UYjWfO-3WYnxZook97","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"oloCD7_bklYBHd3QUlnq1","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7eE0r7hn_H9rOwx5Zm7eW","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"Lrh2UdrGcqVh3DxQuruVR","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"3D5DSBt1jJoMB_-8Bk7kU","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9tFcZ3cKfJpDmQ8Z8hjo5","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_QKS0LDEauu26nS0ENgET","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"A00a1k_B7bH69eHJ5Rn6o","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_zoUPpYbgs7N_O99dxhBv","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gpyjfV4xllOJSL9MHmNRS","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"LMSHAKUTN_2SmQ_hnHgvJ","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Siw9uzJZh-Ri2p-UpKVeO","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"8TCz8nPF5ukSEfciOyOpg","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"uhTWE54oXcQ50meFoTTg3","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"5s1-XYvUrrCWX7Q2WhRTV","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","optional":false,"description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"pa5UgHzF7eOH6US70qkUp","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hMflHNdRb-Ler-MNNqdML","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"hRoxfHqhg5S0sEybVIKu_","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jOVetazhVccDzDzTcg1RP","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"whjN4jzJj03Y3Xqry4_SL","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"6FfQ-PVfzpr7g0HI9c_a8","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"jD5W1pGHrmylqWC-fFtwo","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the container, removing all childrens, and reseting transforms.</p>","params":[],"returns":[]},{"id":"hRBA-0RzvmSmXv7XNUzq3","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"m_QjvsHqOPnsq8EHQrCMT","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"tmoDbk52KW6RV9G0P3Qky","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZW_uKZ1jWrSxCZNin_Q7Z","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"JZ92PdFwfFo_8hnAHRcoy","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"hazs0osVSf42IZSfel3ps","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"0cHveiUXvUuDLHXPZIKaO","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"8MKXrH0tuEWZBq-2ZsFno","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ASfPB6cuVIcB8_efQQZ4O","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wU4AgHGS7fTvtLJ_2TA3p","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"MKMjNQ7ifADFdgoSInBr8","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"qH4JqfTNnLHiY3yCyx-Su","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"nbxP0lUOCymfvr3t3uK5e","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"dLwyCd-6dzFEXo_fyGzjm","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"b_UrthdWQ8bVWBqK119Q7","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"yhwJjVvbe-sq7y-Ahb2jY","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"by2JwCXOEaW8rXp-AVeQt","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"miqIIMg7UhiVyMC0nJcha","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"N3J-ynxeZwSGaoQlXYjrq","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"CBPC70hl2HabBt7yc4jHd","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"lRhlCfb5GxJ9It4WCcKAv","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KfGK5H9FC8viHilRzfS9C","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CQptiTDri_6Qzg4Tn3DtD","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"f_UHsCbrlUjKKaGKUXYMR","name":"Draggable","brief":"","see":["DropTarget"],"type":"ClassDoc","description":"<p>A Draggable base object</p>","extends":["Renderable"],"members":[{"id":"vLqJzPMbxFzBKbjfqZBB0","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"4CRu0WJf1OwMxs3RSdqRo","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"wgOVWl8RlnNTpA1MSrZjR","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"3PaCpnmNuIlSn6R9m56OS","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"ODTBcY2MR3Btv91G1rT90","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"soaQ5L26QVdbXmX9GEUrp","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"NQXQ9CWDFgaW65hAxcjMC","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"XKbeHN9nxt7NCW3n_f3mn","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"G_GgCiyuR1YPHVnex9MrG","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"QHMxE7bTxCXDjOcVnzUWV","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"r5MnCLPcnUK61C423BAH-","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"8HugKQjy0qGcyFgF5fgyp","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"N8YlNkSMdC6Hxu_MgSyhl","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"hcnqvOCCrJHn3H2F5nkDD","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"q3l1l4LnmNv_BlD9Iucb_","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"XOD7TGi_-CoG8rxvMBZ4W","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"lHZlcr-4Du-_ajoxXiBd-","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"0W5wfmDhxktG6gAjUgL6G","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"R65wJo2C4nCsCDq40F-5U","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"ldZpnmyVFyA8v8PZ7PZTT","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"EAMgCuqpRsRx7I_tYFsPY","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"827WbZC8_Yrw4DOWMuUOj","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"dh1RZuX7aGteFxICAOQAf","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"8pNFUkuzrS5p4l_7rsGf4","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"Bzzd4bWo2vgHQLgn4D8xl","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"MyW8hrJ-JBUEN9Ww2x5bt","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"ZvNsCwmLLn6lfqIBYicTp","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"2edZ2Kdc25lyaUfYG1wMP","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"1s5tqrO39nd_dntzIYCpH","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"wyaCW7CqFRZV0VWLoBJdZ","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"K-9i9AlpCn8dor8Q1jYVx","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"kr2kvuB4JzlGWXT2bszGC","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"MNg6aEgJhRYC-JFH6gm_M","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"83NnDPPwhSYGqFSKG8Kz0","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"r3FCbJGP1fSWY4zysYK_7","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CJGEDbJHDFDemJE985NF0","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>draggable object width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>draggable object height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"qqVa3iOqx7oTKlMIqBiXu","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3x-2KSyPkxCPXYaw6-Otc","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"6I9uRh6IIVWk7ixF0r2ag","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ohjhAVkwKi7jxw6lLcE-N","name":"dragEnd","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user stops dragging the entity</p>","params":[],"returns":[{"description":"<p>false if the object stopped being dragged</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5DS5VA9Rq-PnpTm2p8azI","name":"dragMove","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user drags this entity around</p>","params":[{"identifier":"e","optional":false,"description":"<p>the pointer event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"7jpfiv-J8rtUlNX8EFGRz","name":"dragStart","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user starts dragging the entity</p>","params":[{"identifier":"e","optional":false,"description":"<p>the pointer event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>false if the object is being dragged</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LdoKHu7umUOg6umGdhnTp","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rxjYZSagpjeIwoC7jUZuM","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"haCwgPCZqdPz6CUpQo6EH","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"f8GJSixLZxvBU8kB8opJy","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"zIfb3sJiRFvroTSHp8a20","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"mkdli4YyqgHlN3fvDstJm","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"_jC8ln4bEV62oAFIAbxWP","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dyVne3JQ3cFdPYzbaEgSv","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8XEdISTIcQmL3PAik7iSw","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"apz00BW3BuXywfnjQZOnz","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"N1ZO15Cq6SHjz_LX2Ya3F","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ib3T0InfZgpA8PRjqRmnU","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"EFWZlIm5h3htybnDnvC35","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JzikSrJFSeUGjqbe5_vNZ","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rn8o1Rcxi-6dmKiBaRNjK","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"bqWIqxm2OLIad_h1dslfr","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZWpX-GVSNz2hi6DnW5JF1","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"KW9B2ih0yaeUqJbWPeyb7","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZMqOMhiCG8KcHNRa2owxG","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"fO8m6Fr97-jXiZXigQrZ3","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"VdUKbxicFXhjpnDKVOk2s","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"pNoVj-X75CT5TtOle5ByD","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gYwfwFsug0Exj0MWyk1zd","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"l8O5Z9co09MlGZu4DGvC3","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"mdVekfv4jUyrkI31zZOdl","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1-thocepFCSvXOmkzM-wq","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"HpEXS-qxxjmJgLdmNxjRa","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"o9r-DGQwllNDRRiozcG2F","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"bShoIy93JwrOelnMcPcpX","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Evshbr7xTY1wchP462qrt","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"zgGbzC63VHULlhvbJeQ4Y","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"F6p9coVSf9b_zjhMSCjto","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LFA7Fi507PyXBfz1_os2A","name":"initEvents","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Initializes the events the modules needs to listen to\nIt translates the pointer events to me.events\nin order to make them ...","params":[],"returns":[]},{"id":"z4dqwcaSrlC4mM1SD1EAz","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"Rm706kcgBu1sKwP63GY8Q","name":"DraggableEntity","brief":"","deprecated":"since 10.5.0","see":["Draggable"],"type":"ClassDoc","description":"<p>Used to make a game entity draggable</p>","extends":["Entity"],"members":[{"id":"lVLbbsxXeUWekamtDEkhM","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"56ee_0wFD5G0G8LBGVFEL","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"AGSnGlNaLJuTyYuRaSU-9","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Ao7TLAxhvsWiIlV_-qoLa","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"uuMF1rVOW-bYm_8WbbvEt","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"Sf0DYmrsOkwIHBrMedyhv","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"SFD4Rt7M8QsqJ918XA_c5","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"iy-VfXPbS5u9beEfRpGem","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"BvAAYOouKTqnAcWldDU-G","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"lVHecuI9kVBADzVI0vZJv","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"fO47QJNz_J_iW4jDIPQoy","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"_s8QN-GYAlQ8BatyM3hHL","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"RlC8Fb8vG64wERH4IKooS","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"RNCUJDF4fdcY5WZKkddxK","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"tE5tyRnJ9Y2o5y1TljSAt","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"Ubit_oZAk0-BzLuTj0fVZ","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"qELSip8csdAmCRAsyPL_u","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"UkgfUawjb6e2WqoBdKgsu","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"mgPzi2OdHym0Hd1NPenb2","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"YW0JixTXqpDYDy-8ktNCy","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"aHj4DDMR-w6pf9WT9AcMv","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"wA9mbZeS5ODUORnhj4MNi","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"Vp42XFQ6SThOdlg-qTNJs","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"OASZfyZoVxyFwlcEA1LYv","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"nSz_Xk3NmmEaFg_iOJZ7H","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"5r5VIvKe6SR2PEoAxOFcI","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"79XC5_p4xDKemh5FLWMbS","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"Np6cvV9rvp2fs-R1x2gWq","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"38yTT6rc-sLsylC_RnIlt","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"WUMPGYMqJdGAcA46c0KTT","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"57__GDlhvLsNvcj3eG5ZH","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"jp8sKv3V8PgcUWe9vUxYy","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"JaxoFFjl1AhvqIIMI-fHK","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"OzOuZ0D6PFv0uayW0KtWQ","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"DfacxCrsvLfvBY8VZ5KKv","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"sR3bnWRYiLF48KHcyIY35","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dfziwDNOhMhDM-xWiQHt1","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"b7vOst5xTyE8sSE2nM64F","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CWkrnjIQ5FunrvlNL7vzB","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties (see {@link Entity})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"stovkp4SBsIESe4iVWYRQ","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tUKVFQ6D0A2pJIWVraYsx","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0jMcn8M8HdHz5nRLPTlzb","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"a8ZraH1doFXyMxTflTR89","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GNvuS06L_nOlHcLzFtoB6","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"TKXYLAtDWS5L3GXb2ky0G","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"rndjjUfr7636SUrTG6UC8","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"3BWnvPhZ69cvTZ1W1Bus1","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Erd1w2PlWGr4Kq9ixyFLd","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"XlwnNOGQPvubJ9BdCmFV4","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"tuXWVQTR-flfLhFadwqjk","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"o1rTEG6EMx2Et9uCj7zOn","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vB-zT0OJBzbjAVwZDCwMo","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"aXnHewVMv68hIdJW8WFwV","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zJyXt4KihGLLvO_UQgyXL","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"dYKhHhfFjk6Ll8sNaisHz","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"Z-AD-cIn0F7NV6gX2yRZv","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"w-oNcU8WNatVRyi9uKv_S","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6zLSMin6J5PwuMdx_wwBm","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"sueU7YfN7Y-lqEwhT2dDm","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"KyMTtaV3DACtuMuwEFz6C","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"nPXEh-arN4HgJ11aHvjIL","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"uvyKm3-rDrILD8_I3rI-m","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CoOmJhxk0Kv1b849RnQT-","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"tAxT1wwsrPwGaPMzjJ0TP","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"K0eTEWPGe8s6OhVnGhZAQ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"XfURS6alhD346yb3XI7GT","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"s-4516IQMrGlmTamqj8ld","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Gjs0vMCrB9op0EIh_Kpl3","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"A7BBI2Hk_DmIVmHp6N0D6","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"H8l7CNr92DnUX4GDTWg_d","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NLknvz7QvWCnxEt3_KHCk","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"BX14lBrJZOtpTGPqUOP7r","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this entity (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"vk3HL7f4Y6eKtnFzIYDIq","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"uAIWOBRz77_CULpS-Nltp","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"iCV0LOEMeDNhkKoQvfVpk","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3-_3aSRCL5oe3OfTm3aIY","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"yxbAd2NcMd4bdcgeiEVZv","name":"DropTarget","brief":"","see":["Draggable"],"type":"ClassDoc","description":"<p>a base drop target object</p>","extends":["Renderable"],"members":[{"id":"qElaIOCDn8tXiwZ5bLQcR","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"8uNelUeVNaOtewI2XH6C3","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"z9z7TegTUInLkysNLa3vj","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"AR1jlxI7RdVqKYp_NZNGk","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"Y8W7zGp04Zl_jhrdHh4SR","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"ad0GaVw5lH6qrl5-FR3h1","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"FMPvokAOHlj6rLuajDnHt","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"OrcnjAM5Cl42Ko2jFP83E","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"4JfGSdOEQoju5BJI372UI","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"8KZpvk-VkjTRuD3XCGi-J","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"M9vhRFvDCH8-FQKHbZCjL","name":"checkMethod","brief":"","access":"public","defaultValue":"\"overlaps\"","scope":"instance","type":"PropertyDoc","description":"<p>the checkmethod we want to use</p>"},{"id":"Q5TP8SZTii5pc_DVVPTnz","name":"CHECKMETHOD_CONTAINS","brief":"","access":"public","defaultValue":"\"contains\"","scope":"instance","type":"PropertyDoc","description":"<p>constant for the contains method</p>"},{"id":"_wi0T75slCkyLXMfLA5_t","name":"CHECKMETHOD_OVERLAP","brief":"","access":"public","defaultValue":"\"overlaps\"","scope":"instance","type":"PropertyDoc","description":"<p>constant for the overlaps method</p>"},{"id":"4sBDq5KqrvSfGpeyzTgeh","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"oJtVKoNOFFgs9H00sG3u5","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"AEmYJCwTCZ9FNahJL0n-9","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"ueNTyrtuP7EdU0GhfMYUa","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"Jwrz4wELPNJ2oyTw1dS-A","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"9U229hqWF-PxRudukkVWu","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"A4ubjQOOumtShREG-fOIe","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"efBGmSKWw0NePaqkm6i_T","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"dKauQ1OvrnT1irRr1tdzU","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"JJUZY4z7GD_sKsfiDP6fs","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"RtQzRf-juGZ5yG9x5Grcc","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"DQuKCsHbGBRIJiRlSHy7x","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"ShSnLrJmib4PJsDjBwLEa","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"P5DgvaecKgDAL7sz5Ef0Y","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"vrPooRne1E7Rhqy6391Sl","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"C2CAoKz03ylmxn78aFID_","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"KeOxF8CRLPQK6Yc-WvXEn","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"29ts1iHJv2ZUuDHQT1CqY","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"g6hVMUsNaY5yy0HF5Ty5v","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"bcTujxUAGIl6kZXkFoI37","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"Mudw4pz7WJFqKHrWN9oxx","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"jFZbTh4gn5ICpVPEwmlkh","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"LgLud1L1z0X4VRpMh1DB_","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UJopHdJHedJl-jsUqmfnB","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"hMyC_pKrhmR3u4T5yC2Us","name":"checkOnMe","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Checks if a dropped entity is dropped on the current entity</p>","params":[{"identifier":"e","optional":false,"description":"<p>the triggering event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"draggable","optional":false,"description":"<p>the draggable object that is dropped</p>","dataType":{"tokens":[{"value":"Draggable","kind":"canonical"},{"value":"Draggable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"iYU9ItlRbpkFQ8nonn-uk","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"JdHTMD4G3x4ElfhGj0gQn","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the drop target</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the drop target</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>drop target width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>drop target height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YhLTpbzALI9kVwSFnVO5N","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"aTEPGdyJdiJxr1j8-eXgM","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"898fZiFRJZ_k35ZD7d99m","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"pWKlOrvkAUM0-H6kcyzZW","name":"drop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when a draggable entity is dropped on the current entity</p>","params":[{"identifier":"draggable","optional":false,"description":"<p>the draggable object that is dropped</p>","dataType":{"tokens":[{"value":"Draggable","kind":"canonical"},{"value":"Draggable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ov51WM-lphdOc9JSuhRou","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"M4le377j8kLYIOT-iEC-r","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"wVzIa5ojbT4sXfxcuZ9Oc","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ekOcQ__UuwTU8U9cpNO-5","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"59vgsUwfgZEWB7Bc_n7fQ","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"L9AS2z3NTlUiue9Y6_MPD","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"iYIaqAJ6e9q2gRt1Dfnu9","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"yXKjsbN_GzEU7ZYSQYUFM","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CFH0vZY0FgUYuqcMfk-Dt","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"mu-Z2cqzYbjhvoIzPmhmo","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"42Jn5khMF4DCLTeuOidPg","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PaPu67B8U6maQIEzLY5Yj","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"vkPpn3bMB1xpyXgt_yxQF","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wyYMFKnwLzWK2rHWwNkHp","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"44qnemqniKHNWa5SfZDfB","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"X-r6RBkKGt7aovgcIOZg-","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"spytQN_0u6Pe29F7n_zxG","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"G_00ncWRZA7UDD3gZnMhQ","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9Lfwc64ereJB6ThD7VObu","name":"setCheckMethod","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Sets the collision method which is going to be used to check a valid drop</p>","params":[{"identifier":"checkMethod","optional":false,"description":"<p>the checkmethod (defaults to CHECKMETHOD_OVERLAP)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"yVCuNLfkQbnC2bM8rmxul","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"TWbArlDiN9dolyZV_ZC1_","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"2oxNM1Iy-cMQAhQMUbfZc","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"esRRC6bPX_bTbwVmVdQF_","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wqkifmRaoY0oC7rHoDl95","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LDBrl-m5FB3x-C--9XvI3","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"AGJZUa81U_eIKm6bbOqrE","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"e17Rf7yrAFgEkf5wlqxtz","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5Hyww45Ubc5ssMy4uvl1l","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"VR16fbeuux9bxQHLL2L3N","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"IWRA0Q9-kH7Y93_P2K7jV","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"zeSJ4m_o30alLTPHrxrm5","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Nhx05JIP7UvSxjvaW-ayO","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"6GIA0RapTnWVUikISyhWF","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"foOzUC9xC3fW2wxno64Qw","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"JYJgmqFi0tw5NGiOO-s6I","name":"DroptargetEntity","brief":"","deprecated":"since 10.5.0","see":["DropTarget"],"type":"ClassDoc","description":"<p>Used to make a game entity a droptarget</p>","extends":["Entity"],"members":[{"id":"zsQjKg5QBoieHb-zI7KpH","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"KhiiM1-21ARTaNvOMnM7B","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"3vjXgEYJYDCGNLbBp1E8q","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"HN5VdK8hL3J_z0MIaY2N5","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"hCaSX27Gd30sy2FZaK2g1","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"d8pWQSrmlk_rNx5GD10jm","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"GxwQw_PIOiYZfsKsEqper","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"pS6mUaETFcvVpXXlaJHh3","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"KNzSzy-eMAhy_835d2DLW","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"3vieW122IPut6gp2fA4Jr","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"ZI-dqNe9T5X_cUM2Q_WH9","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"HXOv7l2LyeoS1TvwvPHEf","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"emNsZ8tfcG1Ky7SbUDtth","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"usW7Qjd_vJH0-QvIURD5W","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"F-9fOblVWFCdsHc_14nxA","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"eVQmMGCFK5GDgJb1C3oAu","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"ie4KXuOw_kbHkre5ke-dK","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"Jl8kYIiAgawOBrxfjL3ow","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"WSkyQWbItCVLSwaJ2zKIS","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"27iKSQwcG68nb5vc_gJ78","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"LGnsLdkCPz4hxR6m1rSYU","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"E8ehDoko9_S9OTu0TbnED","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"QGhElryHCTcDdYH2TBUkh","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"gi9ufa2oHIUjHN6cE4jfO","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"D5xONnwIcZnWL5Jz_QTPc","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"q2v2IJ0V2SjWSL3P15DSf","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"-4_3gk4w16Mq8aIMHmWBM","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"e3dZM9wHcOksr7e7oNtud","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"_2mbSOofJYQCd4uEVfybz","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"tVhjh1zdN-h0c90fAdL_v","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"QHs4pWKk_4kdektuIZUru","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"MYO2b7gKfH7-17wWpszZN","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"p6Gf-_jhvL49sI2ukv02R","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"4eqBrPyUeeyCSefB6xeLs","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"xVRd93ct-10I8GrWdplG_","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"fKmO-TghuOLlbvHZrWVk2","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HRwmx6tVBk-4aD1HMe-m0","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PM2e72Hx70tuuwZu2t2zu","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"LfwRSlJWGLar0QWjMR8i7","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties (see {@link Entity})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"WFiBdbPIgfGlOjyFnEpXK","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"sevmsBt0c3NZxOakPkPCU","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"BaphQABVTls9qDaXAySGQ","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"mS7cXAt5OcfloNuXpnE9m","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"oWDSYLHRa73YPVa8AVmgG","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"aVt-SLrm0Yjh4J7GVJChS","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"bi8UocrcovAZdF8v6XDiG","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"GsDLDb509vgbP4mTnud7n","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"_orykjJma8v4R8TU8W0VT","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"wEwpVT2tc2eHYRhlVTqhH","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"A6a1hytAyXhqX8vUwnSMr","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"i4jiJT-MqnN5UvzUm7VTF","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7m0Ny-BLWX3FXzF2WO-Fp","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"-UvgcPvLlk_neduTgo84M","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SB1ap4R9DTX4SUwt6w1yv","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"mDUyjgoKfjSN2SeCt05g-","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"IE8Q2peckZ3YdQ_7QBVDe","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fXCVISBVJAYs4PqA862JQ","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Mf_5dxHHC02o7OhBAHM_Y","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PaqmRo8DIYuYaUZ0jzU6p","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GQfYIbOTFIAjnxqixSpKq","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3WOR-djeqZ3c2IYiieGlD","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"f_fqC79hiPik-0bTUFB6q","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"H1_o-yLCW8-E3UkEzeyMv","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"TNiUMTQJmS0MhA_YknKry","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"f-W4NHGkTWVRUYJUinjS7","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"j9DKpuMJyZKLQckLpoIJt","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"j5yJx_el5WkjXDr5PFn-n","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_oQqzu5F-Gd0cTxKSVu1-","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LEyyk0rJjISDpmggpLlQr","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"eK6fiThmn9iJgfZhJ0yr_","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qAlyUYasiZaHzt7Q9F_05","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PyMg39l0piau3ImE2iIS9","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this entity (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"SyHzzJnfSKWPy-Ljqbd2h","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Nkdc9tbDeopSodl9bE4X_","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"kV0JrfnJ_Hqxtp8pXEhhZ","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4USkkhLwSqJawhcINBCTY","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"BfC1D5Ek4IiXCoE05ThMq","name":"Ellipse","brief":"","type":"ClassDoc","description":"<p>an ellipse Object</p>","members":[{"id":"pjFoCQDPsDV6bM5NBAhIR","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the center coordinates of the ellipse</p>"},{"id":"epuAEAcb__Y6BskIksC_G","name":"radius","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Maximum radius of the ellipse</p>"},{"id":"6ipzoulDiRH17-T08XTzn","name":"radiusSq","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Radius squared, for pythagorean theorom</p>"},{"id":"qE2MvwOMZSMJcPS1zNJgg","name":"radiusV","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Pre-scaled radius vector for ellipse</p>"},{"id":"mdSUT_VLlMB9bx0XVX_Ye","name":"ratio","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x/y scaling ratio for ellipse</p>"},{"id":"t9x2C5xeCN3UMtDo7OXxS","name":"_bounds","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>The bounding rectangle for this shape</p>"},{"id":"Cjy99luLsfErlUR5H-aES","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this Ellipse</p>","params":[],"returns":[{"description":"<p>new Ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"Zowg8vhPQP21igrqHs9Mt","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the center x coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the center y coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hDUlY6UC0S9XEYjWkcL4f","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this circle/ellipse contains the specified point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WeJ46m37De9d_ILkJxpc5","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"uBkpNZsJzjnplSfzlDgV0","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Ellipse (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"PatVO7mHgDlJSKvmKUhhP","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Ellipse by the specified scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"92j2XCoBUEeN1YA9f1jyq","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Ellipse by the specified vector.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"Oz5qlQypQvVHz62bCwqSh","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Ellipse shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>the center x coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the center y coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"XFCtl5Q7o8YftNL5xUNaz","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this ellipse</p>","params":[{"identifier":"matrix","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wAODlNBSBKUXiMIp52i1S","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the circle/ellipse by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"Thi4VBn1kQO9MmYG3DyCz","name":"contains","brief":"","type":"MethodDoc","description":"<p>check if this circle/ellipse contains the specified point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kkigD3ywGVsO9UZguPUri","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the circle/ellipse by the specified offset</p>","params":[{"identifier":"x","description":"<p>x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]}]},{"id":"hqYYmRjK1RK8v-1yWwlUQ","name":"Entity","brief":"","see":["Renderable"],"type":"ClassDoc","description":"<p>a Generic Object Entity</p>","extends":["Renderable"],"members":[{"id":"9lnM_541OljXWgBrjx93m","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"LEGfLobdgTe2Ud3yNs3UV","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"FuUtnWrbZeNLGiAJIGCGi","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"yC_N2SMdx2gWE1wst3T9i","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"PHutFip1UQh24sZRIDuFm","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"jhp5IwELWMF6e7eN-Zke6","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"x_6LU-bCrc2P-jYofstCL","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"MrVirIQqN4AgTaHCie_OY","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"3bHeU4PLhfFGWDH8nB6xE","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Ba5kqJAGgkDJ6CK2eZfVo","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"CL0Yb4S1PdbrrY0mb2J4q","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"Yy9vx1JCRvkiGC0GUeQEu","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"msXY46VLLfzKvS8191JcM","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"axfFKI7_cqJIQNwezTm0j","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"4OSGy-bJH03qfyyjy3QQ9","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"bG9lK1-LW9ZNsf5Sp2Uvg","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"wSs07qGxA8XF6tHtijH73","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"fwW67cK8x7jspxUj-fGvz","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"RfbZUVFlPDup87OtB5dXQ","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"s9GhpCW731ER0jT7k71fl","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"q-Q7B0lFrRd37RdZVZCDH","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"Jh504XFCcK_XAIXfOUxZq","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"6B_wu5M2DwdDxpeVjBKO6","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"us3M6U5firoSMn-blhy3d","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"oknZNWsRI6VtOS5KrdZKr","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"EsC78QWzgMQNBTZzVyOQU","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"jc3eJcCXTP-QaO8z71JAT","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"fIooO0ujHXmK_wCqTZIrH","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"q9Rx3SO3669UOGXsIpeQz","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"Xi-3IjvK4T9Yhtt634HoZ","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"eQ4lyviZDrN98uF3zzssO","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"ln-hzE5HSSwf4EEBIdTSj","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"Zk6H6FNyffqET0YzLu0WI","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"Astxjl6cQhRvjKEzgT1jZ","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"UbdUBOX2ccqr1FrTajgwo","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"xA_tjoIF4O6ps4WilP751","name":"body","brief":"","access":"public","type":"PropertyDoc","description":"<p>the entity body object</p>"},{"id":"gb3cVZZ4aViWKIiuFW-jV","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"9E0mJ2BoeyZNmKdPsHDaP","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HpC-2j1xEA2lJuUqc9lgJ","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"kwDqbly7MfTd_ACZ8e1w5","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the entity object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the entity object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties, to be defined through Tiled or when calling the entity constructor\n<img src=\"images/object_properties.p...","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.width","description":"<p>the physical width the entity takes up in game</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","description":"<p>the physical height the entity takes up in game</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.name","optional":true,"description":"<p>object entity name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.id","optional":true,"description":"<p>object unique IDs</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.image","optional":true,"description":"<p>resource name of a spritesheet to use for the entity renderable component</p>","dataType":{"tokens":[{"value":"Image | string","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"settings.anchorPoint","optional":true,"default":"0.0","description":"<p>Entity anchor point</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.framewidth","optional":true,"default":"settings.width","description":"<p>width of a single frame in the given spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"default":"settings.width","description":"<p>height of a single frame in the given spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.type","optional":true,"description":"<p>object type</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.collisionMask","optional":true,"description":"<p>Mask collision detection for this object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.shapes","optional":true,"description":"<p>the initial list of collision shapes (usually populated through Tiled)</p>","dataType":{"tokens":[{"value":"Array<Rect> | Array<Polygon> | Array<Line> | Array<Ellipse>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1<%2> | %3<%4> | %5<%6> | %7<%8>"}}],"returns":[]},{"id":"P5yaG00g_6wP1ZgrL6Ojk","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"x3syVek06IheEhRBLSOhV","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"nqtqoDn0FSU3XD6Q0zape","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"WtduJhPEuIfTna-S1NlXI","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"U9MFjsRyRs-xY6l_CP-GV","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"X0kAGRQHvzzeSSNMuYg5q","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"oxR7nkVYYWNpDl-1YtQVE","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"sJmt1rQlpmmh4TMCS9-KV","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"xIZmZhfd4FIuAA28W4SJY","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"EVlQbnWYx8Sq0FVtcdURl","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"y-r_gVHc2QE0dQuHWiNwR","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gy_qwtEckgrIjcKkiLfuW","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VPebFjRkp7-KkxUmKRuX1","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"vQdZS1fdfXTG6m2U8VUou","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XAiGADm5k89dLxZ7TxQhS","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"XCCsyL8MuD1EWNhNRYnKQ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"LZAVwsfXtRd0v4yPR4fic","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"likKCbI0iNTZqiMbzl5AJ","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"bIYFE8rVnJ_ScoAiy7b44","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"5qZQzUVgJByc-yG9u2HTI","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6cB-G0KTNYirFQ9maHDrs","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UFrMXVEUAJd7uyaK6LTTl","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"1jcAwroSy4XejFl6WnD99","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7W_f-O8yYz9xKli2tJMNY","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"n6Y-HKh1jl7hvt_SnIUn5","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ZC2piHaSclcG5xspaD4I-","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UoUW7qhnuzm81gUvM0g_o","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NsuR54wnEKJdgcV1stcqk","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"AcmB2rYYWVcKOL9F7eni5","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wSAgyEjaoAITBHx7vt96i","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"U3avvglNKiF7nKuLscKyK","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"S5E_2gIlVhtwXlje-P8Mb","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"IexKkN0oPBcOxr9ssn7vU","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this entity (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"XcbHu-whqvibcZF22vJaf","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"fdGrYoQQWqPOrxVvZZW98","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ZWuXK-OLr6H3WuqSG-VvV","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VhyXPKGYrBM9xB5y6OYvl","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"E1w25lKLLGk-b-OvQf9sx","name":"GLShader","brief":"","type":"ClassDoc","description":"<p>a base GL Shader object</p>","members":[{"id":"7Qvdu1pL6WRYkm9PPGfQD","name":"attributes","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the location attributes of the shader</p>"},{"id":"TPhOZzrGSlfgl9f9VqfA9","name":"gl","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the active gl rendering context</p>"},{"id":"wk-DmAmKg9cA3-Brzw5xd","name":"program","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the shader program (once compiled)</p>"},{"id":"_akANNOHSG7cVN78toh31","name":"uniforms","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the uniforms of the shader</p>"},{"id":"gavVfCcTS5uDBnQaMYhD3","name":"vertex","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the vertex shader source code</p>"},{"id":"_32kYwBx20gKVzgPPnh1T","name":"vertex","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the fragment shader source code</p>"},{"id":"Bi9CCxeY0aL5zwWC767SR","name":"bind","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Installs this shader program as part of current rendering state</p>","params":[],"returns":[]},{"id":"r_U2ZNnKg2qQrBxk0T2NX","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a basic shader\n var myShader = new me.GLShader(\n    // WebGL rendering context\n    gl,\n    // vertex shader\n    [\n        \"void main() {\",\n        \"    gl_Position = doMathToMakeClipspaceCoordinates;\",\n        \"}\"\n    ].join(\"\\n\"),\n    // fragment shader\n    [\n        \"void main() {\",\n        \"    gl_FragColor = doMathToMakeAColor;\",\n        \"}\"\n    ].join(\"\\n\")\n  )\n // use the shader\n myShader.bind();\n"}],"scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/GLSL_Shaders"],"type":"MethodDoc","params":[{"identifier":"gl","optional":false,"description":"<p>the current WebGL rendering context</p>","dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}},{"identifier":"vertex","optional":false,"description":"<p>a string containing the GLSL source code to set</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"fragment","optional":false,"description":"<p>a string containing the GLSL source code to set</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"precision","optional":true,"default":"auto detected","description":"<p>float precision ('lowp', 'mediump' or 'highp').</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"oVrCfZUoey4vEUNStAzrB","name":"destroy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>destroy this shader objects resources (program, attributes, uniforms)</p>","params":[],"returns":[]},{"id":"JkERPA-c9XsPK2p1sunW4","name":"getAttribLocation","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the location of an attribute variable in this shader program</p>","params":[{"identifier":"name","optional":false,"description":"<p>the name of the attribute variable whose location to get.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>number indicating the location of the variable name if found. Returns -1 otherwise</p>","dataType":{"tokens":[{"value":"GLint","kind":"canonical"},{"value":"GLint","kind":"canonical"}],"template":"%1"}}]},{"id":"oMelBnviwVBoI833IRE8C","name":"setUniform","brief":"","examples":[{"caption":"","code":"\n myShader.setUniform(\"uProjectionMatrix\", this.projectionMatrix);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Set the uniform to the given value</p>","params":[{"identifier":"name","optional":false,"description":"<p>the uniform name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>the value to assign to that uniform</p>","dataType":{"tokens":[{"value":"object | Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"object | %1"}}],"returns":[]},{"id":"hkSHrn_KgyyMbQ9mn978K","name":"setVertexAttributes","brief":"","scope":"instance","type":"MethodDoc","description":"<p>activate the given vertex attribute for this shader</p>","params":[{"identifier":"gl","optional":false,"description":"<p>the current WebGL rendering context</p>","dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}},{"identifier":"attributes","optional":false,"description":"<p>an array of vertex attributes</p>","dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}},{"identifier":"vertexByteSize","optional":false,"description":"<p>the size of a single vertex in bytes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"Bfkw2xpbsYQGU0SxmShFx","name":"GUI_Object","brief":"","type":"ClassDoc","description":"<p>GUI Object<br>\nA very basic object to manage GUI elements <br>\nThe object simply register on the &quot;pointerdown&quot; <...","extends":["Sprite"],"members":[{"id":"dnHxxP8PCFdDtXYaTCBHj","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"cw9KprnjICyj3sxAZoBbf","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"2yDxsksdSZ48WEKzJOuJP","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"T-zJNEO8gu0x0J2mzxPTp","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"keKABD0Pf-1JzWAnaV3A0","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"6gibIAS1KxzICaxW3yUB1","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"IsweLTnAoH9caZkbMeKvt","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"ZDyNJQOPyfhqFxzKQ2Qwe","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"o-QNg7S3SlFEb376692Wa","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"_2gghJxa7jdkIpeGv0P6L","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"MUxfyIGeW0pQGs0bm1klG","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"y-nxiiaOvNlned-RiOVJN","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"oDhS5BK4ZBJXSM3tycs-R","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"z3jYCZDQ4l_SSCjc_XheA","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"PbybQZGbNjQZ7oclwEI-w","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"gWn2EQl_L6iGzXvfhng39","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"lo7IbEoGY4hA5ocT3lZqX","name":"holdThreshold","brief":"","defaultValue":"250","scope":"instance","type":"PropertyDoc","description":"<p>Tap and hold threshold timeout in ms</p>"},{"id":"1bdqtHCldW1oRB5jR5z3A","name":"hover","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the pointer is over the object</p>"},{"id":"8p6M4CbZfOmgD6aY_AiUw","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"tOccOw-SgwxUNKMvO2cYI","name":"isClickable","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>object can be clicked or not</p>"},{"id":"Qr6gsobEEIK_BiK6Cq622","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"AkFrMdx3i4hgJVJYvoA8u","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"ktHcOXGSTURUg_aTBEgFd","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"nQvY-SlYrExsFv73yNlfP","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"O7INHutxx4uPWCrUGOofk","name":"isHoldable","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>object can be tap and hold</p>"},{"id":"4RgHgMblKB6Gi8DF2X-up","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"5IyRnvsEv3ziFXIfD5izE","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"PWmCX4e3JDjNNLOSy7aJk","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"u5Qc95Su3lhKfT8xyBvia","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"BYz21PVdl58EVrwHE9pgn","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"VI1FoNK6y6VbmpKYXZC9X","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"0NXN9aIswxQSOvIv3YZo0","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"sSEfC9lBeusVKtWs8Imot","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"DEMnMBbWqAY34MH32Pwhi","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"vc52t1JpUgONlCGovYhB_","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"z6bEbh3HV_X_eoR14gqxV","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"egoczA_oAN2QNwbs3kOvl","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"qNrKk7qQbQdXX2-nkjQCj","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"MfSg7Cm89Qgfg4sX0Q4kR","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"vAXEksrw-qQN94RUQWekU","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"KjqCZYaD8O1BGmuvDfFTX","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"hU0iI4W5baI3pFhOwJqqi","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"sYRoK61hR9AQZE2PYfv5e","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KQWqe0THMnan23nk5OVgM","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Td207t6yH7HWC0SobKzdw","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a basic GUI Object\n class myButton extends GUI_Object {\n    constructor(x, y) {\n       var settings = {}\n       settings.image = \"button\";\n       settings.framewidth = 100;\n       settings.frameheight = 50;\n       // super constructor\n       super(x, y, settings);\n       // define the object z order\n       this.pos.z = 4;\n    }\n\n    // output something in the console\n    // when the object is clicked\n    onClick:function (event) {\n       console.log(\"clicked!\");\n       // don't propagate the event\n       return false;\n    }\n });\n\n // add the object at pos (10,10)\n me.game.world.addChild(new myButton(10,10));\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate of the GUI Object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate of the GUI Object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>See {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"8S-4RP2AAm3mrsbPANyST","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"p_ieYBObh9JPiKUH36OPh","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Tp2bC4Cn_r-Qw9OSzi2fd","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"KvrJTJWylgC2gz5bXyplJ","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XDXO9QujQT49KlbrDExjN","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"jhjhAr3-mJfnKIDFZ3HpL","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"CR7EJ_q5XWaANUahUewHe","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"_A55S7-7UxvcZGzgedntL","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"kRIdTPk0biOss3Kd7RQwi","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"_jmtDyWCHdH82GZKdBMQ7","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"tNmatNN4iNj6_JmIqd87w","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"iUgMWHnNV6NQOa1PDpkFy","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"YXRvWnearu_9Ik53goKRe","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vQURGzVbEnCqaXqjc19a3","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_DUr4E2ywyVU7AB6bJGcg","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"E256pLTl2VfMM-XjV4SZG","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7bhYUKAi1E5LYxDf7euAc","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"60Vi5Gn_o1IkUROOg_dLP","name":"onClick","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed (to be extended)</p>","params":[{"identifier":"event","optional":false,"description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>return false if we need to stop propagating the event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XiF2kEC2_eyDI6G5E5KPJ","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Z68GUV347A43SizAvh4Bi","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"_idIVvntP3ICnIotsW8W4","name":"onHold","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed and held<br>\nto be extended <br></p>","params":[],"returns":[]},{"id":"G2Ypy4Ut8duz18eEwA6h5","name":"onOut","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the pointer is leaving the object area</p>","params":[{"identifier":"event","optional":false,"description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"xKJ5CXTWimybd8qJJ9r84","name":"onOver","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the pointer is over the object</p>","params":[{"identifier":"event","optional":false,"description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"IyYDKIXxxH7BU0D1hDMZ_","name":"onRelease","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed and released (to be extended)</p>","params":[],"returns":[{"description":"<p>return false if we need to stop propagating the event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"aXXD_5fB8WVHzcVYOOtAz","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xF3kmH54pocZAsa4EnWCH","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rIkHrXxHnAC2-ZsO1OAfa","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"uL3ISEn_--MRR3tHd5sCr","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"v7XJhceM9RR0vq9Q98sxM","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"kyW-oFHru2cON0OQi3osE","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"yAoXIlv1FClTL3zb7QuVq","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"QHW52ifwdUxlW-2G8-yV5","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"qCR3RsouN8Vkl9SA2yVKc","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"usTkUx9pbY4lPfSuS6rFM","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"xSoDqx9hn5EKL7xXgnA7i","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"mmAHd8oYoS6pXkasJgiRz","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"On6m6nnxx7wgpa4b-o5OF","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BcOLcYsgn_mVltpQ01jMu","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"A7LUxQdyMT0bBAFhtAjb2","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"DGWcjM49nTh033lB1yfDG","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ijQalnzNDlH5Ca9UeVV-1","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"DGpfaPEdFtd_jN4o7eIU6","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"NkDFCkPNb6U24SrQfy6en","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Lwko4iNnkoAmX5Fm3WKA2","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CYVm5P3gUrLpW1_yubLQ_","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this srite (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Q1dbIRCRZcHNBFlF73Jt4","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"vDwVCl2ngTBV9g1TTsiwn","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ok9b_pL6ydkSwcnveMbGu","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"obeOGyNDQWHKjk88FP6Ux","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"4riB_dtQSpuRXL1IeUTIx","name":"ImageLayer","brief":"","type":"ClassDoc","description":"<p>a generic Image Layer Object</p>","extends":["Renderable"],"members":[{"id":"ScuvIJb86ZBWW8_lUjXuV","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"uM-y0DKBWLXmvf6rv51rN","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"bjfhkJ9VCI_NVL01CquaH","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"V33keB7OuJNT39shDvOzE","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>Define how the image is anchored to the viewport bounds<br>\nBy default, its upper-left corner is anchored to the viewport ..."},{"id":"9siIDWfur20vQIC-MUsl8","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"qA3PmAADDIwiqQichfsXR","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"pZhiozuOPTj-YNBV6tOWC","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"5Xzyb4fIeeRXZ9gCA8P6O","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"InJCNuEIETixtz4NsZXOu","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"wVoOQGFJxbfa3OHWhIFN9","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"f8cn5-5NaL47wifX7EHEM","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"2feg5uELlP9R8t1i9xMpj","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"jshDG5Iizh63PZ9uwegvx","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"Zr7Zmh2aQE4BHDtifADGI","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"hfvkTdI-KDLXjvMAh6wIM","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"g9DDrP4R2bvr8dKM2gPhx","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"SDYbHWjomYIh1GsiG4qyF","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"DLZnPZJPn3JjLAUgnQN8y","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"tclWhlFIrawdTeNRJbv9C","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"0UiGwNwYeVIGKm2HaSR_H","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"NRI9Own3KJ3mc_1DlKk2K","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"HkkocQQ9r45Rb8kaTXwP7","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"JJxAahhLg9yy7Kpj-LUqM","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"xY3BJ2pqHTmv1IP_GAqzQ","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"GMGFGI2b8IY8FOYgZZ5-D","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"83G69-r5s4E6PfTX6kL10","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"uvv6siF7UnpiW_dlqF7tJ","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"45Jnw8x0vUMKOee_xPJhr","name":"ratio","brief":"","access":"public","defaultValue":"<1.0,1.0>","scope":"instance","type":"PropertyDoc","description":"<p>Define the image scrolling ratio<br>\nScrolling speed is defined by multiplying the viewport delta position by the specifie..."},{"id":"h15OQqAczC5hYL8wiXJcS","name":"repeat","brief":"","access":"public","defaultValue":"'repeat'","scope":"instance","type":"PropertyDoc","description":"<p>Define if and how an Image Layer should be repeated.<br>\nBy default, an Image Layer is repeated both vertically and horizo..."},{"id":"z5OQPati_4YVZvvFszI6T","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"VQHn_7F5mKgfyG7jx-vIM","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"2d5h8DCx3p3qiue8Hohyf","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"jSZyNfbmAOKLD4utorDMQ","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"QzPxCGgQhDX2v0dG_0KVX","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"J4L2HHbUzA1wh_w7vQhcX","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"V7Ixhl9NTOuHYI38MYRku","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"U8suBlJglaMU2MoW4PCzD","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"vhznu7Z0Lx2k4H3xq0gGa","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a repetitive background pattern on the X axis using the citycloud image asset\n me.game.world.addChild(new me.ImageLayer(0, 0, {\n     image:\"citycloud\",\n     repeat :\"repeat-x\"\n }), 1);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>ImageLayer properties</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.image","description":"<p>Image reference. See {@link loader.getImage}</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2 | string"}},{"identifier":"settings.name","optional":true,"default":"\"me.ImageLayer\"","description":"<p>layer name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.z","optional":true,"default":"0","description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.ratio","optional":true,"default":"1.0","description":"<p>Scrolling ratio to be applied. See {@link ImageLayer#ratio}</p>","dataType":{"tokens":[{"value":"number | Vector2d","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"settings.repeat","optional":true,"default":"'repeat'","description":"<p>define if and how an Image Layer should be repeated (accepted values are 'repeat', 'repeat-x', 'repeat-y', 'no-repeat'). S...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.anchorPoint","optional":true,"default":"0.0","description":"<p>Image origin. See {@link ImageLayer#anchorPoint}</p>","dataType":{"tokens":[{"value":"number | Vector2d","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ZZLV8s8-AFeUMvLErgaSs","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TKBXUl5pVTzcCI8z5wZFJ","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"C14zJ8hVuuhgacn4z3fbr","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"4yOJ1XX9raliZvZ9eY1bl","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"btCKKCCQidJZelikPBYm0","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ic90XseTdjrbjdO8JfUrH","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"nD--gRgJ1E-CWtH0v4VLq","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"s9wy6tzePRW-a7PvZkCx_","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Pt0PXUIBRTAm_E2yrnJ_A","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"wgMNtCugkRs3xG8tM82kZ","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"9UCshcPUgRqpL2F78UkG-","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KyWTArgcwrCjD3rAILeUh","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"S1tqjHinMPuMRjQx6KZ9R","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"efW3fz3iu7RBvxr2Hbv2r","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"z6GI_oSvDchJwcMy-jbPw","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"rfGydCCIFDh7EY0L4MXjh","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kxHadmC-P9-yNW15q0PC4","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"awGHMaP4-mvCBTR0dLw4U","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the Image Layer to match the given size</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HNdKk13_n44aNGMTG7s3b","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"k7mbvGDbjY5Jz_xrKQLDj","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"xpUh9vwLUKqHfjWfUSiJJ","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"jKovD5VuoGO6zLOPO2oEL","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"E7DULgwoLoTL8R0oJWe32","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"BkK6oRC5cXS75KsJwgFtV","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"pckoNTsuGegtQsCf9Fshs","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HX2RN0Vwv8TEavfXKc35Y","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ValcaUDFQHJCat_kvv747","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"O4CeBUSzHaQFgnefbvNef","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"U03PsHPQocKiFQei5fdX3","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5e6s5GUsQ9POVN8bzf1n0","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"cBZD0CI1glybAj0sTuYU4","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"JSmCKUwD3PtYm9mpyif1u","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this ImageLayer (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Ml9qELIxbHaWOmckv6pTF","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"aMGi-jpROZp3eLb0LJD_a","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"eh5xaNQLRcW-oDIfwnlgE","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IT80k14Y_z5VbOzspg1xL","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"yoFw0Qqx4O-kj86auYhk-","name":"Light2d","brief":"","see":["stage.lights"],"type":"ClassDoc","description":"<p>A 2D point light.\nNote: this is a very experimental and work in progress feature, that provides a simple spot light effect...","extends":["Renderable"],"members":[{"id":"s7qSd1SNSW3x1k9o0ld4a","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"fIHLzUcVB7ImVxi4txFZS","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"TXVFeFryemMxCP8MXgDuN","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"tkxBqPfV9B40i90gzL_Jm","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"te_5SpowV1yTl8Dm0MsX3","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"y-aRQVQ8jEEADfuSc18G4","name":"blendMode","brief":"","defaultValue":"\"lighter\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the default blend mode to be applied when rendering this light</p>"},{"id":"t3N0gA3t3okT4zTQR-1h6","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"cLSSM-O2zTwsxDsutstOI","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"PT4xtYacfwywwNsK1K8rT","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"WB7MedgERGGxT-x2Bk1Mx","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"t5YrzUBw1_vr_8BxOUJ1X","name":"color","brief":"","defaultValue":"\"#FFF\"","scope":"instance","type":"PropertyDoc","description":"<p>the color of the light</p>"},{"id":"1OZnjC7YM5x5uQWXiZPRy","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"WNBOL5K8-HlIkFTnftAZD","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"Zs9iE8U0KqJRCOg4m2E22","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"lHA83IYRYj25NS7VzjpXj","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"-fDi0I2buNwkuxgrMRQfU","name":"intensity","brief":"","defaultValue":"0.7","scope":"instance","type":"PropertyDoc","description":"<p>The intensity of the light</p>"},{"id":"4UqhKu-Ambnh27C-W0jOI","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"Sji5QeJznx-_YZ2I2E8-Q","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"sZFzzKpP8AyMNYEE6nxSV","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"wTRyWN2MWCsjFsw3au6CQ","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"WL-lU-G0e4sumnuSadfKy","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"gYozxWT2UZqwIWlXoI2cz","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"Ga-dAPGKjI-VxHo1lmWXL","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"DrXMmTrVnyAwW_MVrgsqd","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"aXSH8y11sKinEtRsd42N_","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"IrXz5Ur5J-5kT07zkgDGN","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"aePbpYXHRUwwHyCHMKwrf","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"ojihqZTN49W5SEggoYQ2U","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"ruLWksR4hwGakuVQxDbyG","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"qHJ_IXgxyEfZ5P_tykYXk","name":"radius","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The radius of the light</p>"},{"id":"W8qsTFNXmvOWsiMo3S9dZ","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"Ieyhzi1OIE6WD67dbahm6","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"ztNTijfHmdJaFGtjCdSPO","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"rV8dhf37EUm5VXKMj4iqV","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"OZOF8FG0AhAys4FVj18jy","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"yZFOYkj6T1YHkUTmiNxzE","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dmaGRBrL4dwNP45VsRxgq","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"5t1kY0W8s5lfDKkrbimdJ","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PTUsWLxaDcGKegeh-LCl7","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>The horizontal position of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>The vertical position of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>The radius of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"color","optional":true,"default":"\"#FFF\"","description":"<p>the color of the light</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"intensity","optional":true,"default":"0.7","description":"<p>The intensity of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"w1OQBmne2nK03m7nj1AZO","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vXwb-TQY23GDoW1RhZR7q","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"AC_D-VegQIEawDMAd2DC3","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_HgXJZvc3x7OTgvQLrRNm","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0mP6riNWUbat07RjScJQr","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VJOOjP5pj4dJQt5ar3gPk","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lOxGsnmmgmzhFuTMCXMS6","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"YxSD6Sjdu9C1bN7SXAzvc","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"ygjRkXEhcXAEPZDzwbJzE","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"9XsFMiYdf8b8HT2eB0lCx","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"YYSZDyvoAz0WtBSvz45er","name":"getVisibleArea","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a geometry representing the visible area of this light</p>","params":[],"returns":[{"description":"<p>the light visible mask</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"W8PcvT6ZlYlmU4ntZt-Nj","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vqUSZozzp1Ax7X3PSb2pP","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4gKmTDDz7IMEbObru5nMo","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"My9OR5xdhoUAuocU1Mvvq","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jaVigmwQbf9wHEj_n1V4x","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"RPBt3UtZQ8Dgtw9IA8cF8","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"S4qAdxVOXIcBh3HNl8nSi","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"X5nW-RNpbg5N0gt2f11Jo","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"E0IS7lwg8hNkIHwNenvSP","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"D0BwhidtFvin-zSIRvu-h","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"B4s6aQQc4JbFrRiICH4Ha","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Cvw3mA2LS4jbAfrJQWa30","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Gh9h4cSMwKnzTmo1mx_Aq","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"bkW7gZPBpL_6uzKA-JYzF","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"dPMmaBg8ITyZM8RM6Z2cS","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"dmiV9_qCo2kn0E79P_gNI","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"EqGyiP6SkHlc5tVz6CKes","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"5GhbZD5LfIUuMfWalJfe0","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4geGVQYFXf8j1D1V8N7BN","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"WbLWK7s9QQ0wxtWYTx4xL","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"WnyEvvmOI4QpmDwgBfJIM","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"S43wdkrYzaITLu8cTpdQj","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this Light2d (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"2G7msi8oHVFmcAN421bX6","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"pezurljxxBAclU3WQYNpd","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"75iJBZQhvBEmXiXT5M30E","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"E_IgKV_rsj2Gcxf4xWoaQ","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"wCHYHencjAMQd0SayIbok","name":"Line","type":"ClassDoc","description":"<p>a line segment Object</p>","params":[{"identifier":"x","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","description":"<p>array of vectors defining the Line</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"extends":["Polygon"],"members":[{"id":"v_pE0-yMXBuHMQSOkaLHw","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"5nIhIFSRNpw690yZRCfa0","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"e-BF0YebRiNpiyAONeqB7","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this line segment</p>","params":[],"returns":[{"description":"<p>new Line</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}}]},{"id":"XIzPqA5ZxYo2NB3xJZ9nV","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","description":"<p>array of vectors defining the Line</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}]},{"id":"P2zk4e53xTPNaRX09Hk8n","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the Line contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"N2gw1IilNPfeeD32Xy7JI","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Kt03_R3eExiQVu_FJMtvh","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"VSZ6_dkiZNJCDho32kHWR","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"v-CE8PKieje9MW6LecJVR","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision edges and normals.\nThis <strong>must</strong> be called if the <code>points</code> array...","params":[],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}}]},{"id":"FvhcePzSR0vl2lpKLMRLc","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Z96rqSbadYxIMQ0mDyVdA","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"mhpkiqHDd4MvDdI4wKXjG","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4-xf3kcLCT94i2dK6g3Dc","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Polygon</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2> | %3<%4>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"sHVdEntB3zalbtdxT76H-","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PesnsAStylHfZEK13mSRh","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ibVR5JPplFKKi0_F96rAQ","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Zm3Q9UKg9xfr_rxaJFHpE","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"EFP1yqKAc8390a7G1Wxt3","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_-vNYjN2jN_I3tYJsdHTo","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NoaIFWo4hjBl5e4FbjXrs","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the Line contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"nZbhHYP1vBX_fmT1V4Ffm","name":"Matrix2d","brief":"","type":"ClassDoc","description":"<p>a Matrix2d Object.<br>\nthe identity matrix and parameters position : <br>\n<img src=\"images/identity-matrix_2x.png\"/></p>","members":[{"id":"vR-PI6QvjkGS4-AH4aCSP","name":"tx","brief":"","access":"public","scope":"instance","see":["Matrix2d.translate"],"type":"PropertyDoc","description":"<p>tx component of the matrix</p>"},{"id":"GCALqsT6nCoVPnPFE_EF_","name":"ty","brief":"","access":"public","scope":"instance","see":["Matrix2d.translate"],"type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"Xgqf7PCS9mIe7m2LXKKIU","name":"apply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"IAJb8TmL5HIW9SA9Nmv5c","name":"applyInverse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the inverted current transform to the given 2d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"1UjNL9k9e3G0QMGDX7COb","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clone the Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"wKDfRfuJjAm4NIn6Cdicy","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"args","optional":false,"variadic":true,"description":"<p>an instance of me.Matrix2d or me.Matrix3d to copy from, or individual matrix components (See {@link Matrix2d.setTransform}...","dataType":{"tokens":[{"value":"Matrix2d | Matrix3d | number","kind":"canonical"},{"value":"Matrix2d","kind":"link"},{"value":"Matrix3d","kind":"link"},{"value":"number","kind":"canonical"}],"template":"%1 | %2 | %3"}}],"returns":[]},{"id":"IcUC0Bq9OB02ogZ6EGYd_","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the values from another me.Matrix2d.</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"QHi83mVItMKGUKQZErqRb","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two matrices are identical</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if both are equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"W1ZAyUbc1KKETYDAhVC07","name":"fromMat3d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the upper-left 3x3 values from the given me.Matrix3d</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"-Se9maTr453gtwHJbImYy","name":"identity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the transformation matrix to the identity matrix (no transformation).<br>\nthe identity matrix and parameters positio...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"Y7Prufltz1DcXRY0rszNS","name":"invert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>invert this matrix, causing it to apply the opposite transformation.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"_ib2XKohk-udf9TyOh7Rx","name":"isIdentity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns true if the matrix is an identity matrix.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Rzo6yr7roVVuDzYSO5DSp","name":"multiply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>multiply both matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"C90wbLyiwN6nt9G06jMOW","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotate the matrix (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>Rotation angle in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"XhYeLiTsb398nfSvpCpAo","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the matrix</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"vUA_w3b7aZaEKVlXCBHYJ","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a 2D scaling transformation.</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"zpqqSR6ypyth7qdwA4R0N","name":"scaleX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [sx, 1] scaling vector</p>","params":[{"identifier":"x","optional":false,"description":"<p>x scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"EyVz_PyeIs_OqjZGa75iR","name":"scaleY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [1,sy] scaling vector</p>","params":[{"identifier":"y","optional":false,"description":"<p>y scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"rqjHhpJKp2AvlLjUSMpOZ","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the matrix to the specified value</p>","params":[{"identifier":"a","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"c","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"d","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"e","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"f","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"i","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"QZuIRJtAAZ83XGCyEUF8q","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"3A6xkOf9L4NOyFc9N120Z","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"STr0I53TrI0RTbxUy1TK1","name":"translateV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the matrix by a vector on the horizontal and vertical axis</p>","params":[{"identifier":"v","description":"<p>the vector to translate the matrix by</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"7nEK4oFJZXhbcLL_JkdfJ","name":"transpose","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Transpose the value of this matrix.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"hE9FntxFZ3D3rEZDeLbb9","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the matrix position on the horizontal and vertical axis</p>","params":[{"identifier":"x","description":"<p>the x coordindates to translate the matrix by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>the y coordindates to translate the matrix by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]}]},{"id":"1Gx5WxjbCpvnRPO_W2GQL","name":"Matrix3d","brief":"","type":"ClassDoc","description":"<p>a 4x4 Matrix3d Object</p>","members":[{"id":"XSOEy7VvtGZVSpNJRdqv8","name":"tx","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tx component of the matrix</p>"},{"id":"-66yBz6IyRsc1T7ZORbHE","name":"ty","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"8qbzDpYpvm_DgNqOhsTiA","name":"tz","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"NwazLtZdTAqho3-3uV4Wf","name":"apply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"8dShVzl_PieO7Pzjh5ZYm","name":"applyInverse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the inverted current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"G-B5CfZp2JA5hIo7lfbHR","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clone the Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"RpofXWbLDuyq0rkVjhvct","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"args","optional":false,"variadic":true,"description":"<p>An instance of me.Matrix3d to copy from, or individual Matrix components (See {@link Matrix3d.setTransform}). If not argum...","dataType":{"tokens":[{"value":"Matrix3d | number","kind":"canonical"},{"value":"Matrix3d","kind":"link"},{"value":"number","kind":"canonical"}],"template":"%1 | %2"}}],"returns":[]},{"id":"WSvKlmaJSexhyjF7FYGF5","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the values from another me.Matrix3d.</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"f0acOzGMYWlc49q4T4t7v","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two matrices are identical</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if both are equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PcRJ8rnD6OxEOY3TsWePJ","name":"fromMat2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the upper-left 2x2 values from the given me.Matrix2d</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"xKR3sTyeo5gpqsmJ3vqzn","name":"identity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the transformation matrix to the identity matrix (no transformation).<br>\nthe identity matrix and parameters positio...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"DThSdyYCodqHKWd1ukJ34","name":"invert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>invert this matrix, causing it to apply the opposite transformation.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"5sNVlShFPpDTXswO0cNV7","name":"isIdentity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns true if the matrix is an identity matrix.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6huhrYnKrr6xO3ELMVEKb","name":"multiply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>multiply both matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>Other matrix</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"rO1WjO9_p3Bo0e3N9javY","name":"ortho","brief":"","scope":"instance","type":"MethodDoc","description":"<p>generate an orthogonal projection matrix, with the result replacing the current matrix\n<img src=\"images/glOrtho.gif\"/><br>...","params":[{"identifier":"left","optional":false,"description":"<p>farthest left on the x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"right","optional":false,"description":"<p>farthest right on the x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"bottom","optional":false,"description":"<p>farthest down on the y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"top","optional":false,"description":"<p>farthest up on the y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"near","optional":false,"description":"<p>distance to the near clipping plane along the -Z axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"far","optional":false,"description":"<p>distance to the far clipping plane along the -Z axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"TONVLX0tHFfytKigKLA9B","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotate this matrix (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>Rotation angle in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":false,"description":"<p>the axis to rotate around</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"mQJp6OwaA6fSiLDZ08yL7","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the matrix</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>a number representing the depth vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"MG82eg94AL5_gXsZpg51f","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a 2D scaling transformation.</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"wZrLT4tcAwYFi4X_bwlkt","name":"scaleX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [sx, 1] scaling vector</p>","params":[{"identifier":"x","optional":false,"description":"<p>x scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"_iAFzs3ghwinupPQTmdob","name":"scaleY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [1,sy] scaling vector</p>","params":[{"identifier":"y","optional":false,"description":"<p>y scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"qoIRDbZSi4vROjGVSfM7H","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the matrix to the specified value</p>","params":[{"identifier":"m00","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m01","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m02","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m03","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m10","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m11","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m12","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m13","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m20","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m21","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m22","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m23","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m30","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m31","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m32","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m33","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"EZURISE6Ifh4S7oH9lev5","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"3PeRXQ_LbalkQ2kG3X6aW","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"IwNjzRPk8QcjpCy-6fRGr","name":"translateV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the matrix by a vector on the horizontal and vertical axis</p>","params":[{"identifier":"v","description":"<p>the vector to translate the matrix by</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"i8WMLKs_85Qvt8CAgzf1q","name":"transpose","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Transpose the value of this matrix.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"4v576eilrN0EmZi1KFexj","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the matrix position using the given vector</p>","params":[{"identifier":"x","description":"<p>a number representing the abscissa of the vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>a number representing the depth of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]}]},{"id":"dIX1xCwXlxl5LNX7WQYhJ","name":"NineSliceSprite","brief":"","see":["https://en.wikipedia.org/wiki/9-slice_scaling"],"type":"ClassDoc","description":"<p>A NineSliceSprite is similar to a Sprite, but it uses 9-slice scaling to strech its inner area to fit the size of the Rend...","extends":["Sprite"],"members":[{"id":"FwQ-QXm8711jbmpJjV08M","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"xpJygYvVw2zT1GDmE9tjD","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"bRV0w5EU1htr7Dk8vdAqM","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"2FKB-3zEPlz7rdkJ8RUVp","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"9BnKCu8DIJKz2KIHw1DpF","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"2Z9hskx_tKwj9b7_WWRmx","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"13he1BVT9-XRetOWd5SAN","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"x6lH7wxXmnGU6Uum6_bxT","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"UbgdHqekyS9FctLA9h4wp","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"ASLiEfJG9YWD5-E9vD7IQ","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"hL40aNReBW-spnFUeCbTZ","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"LbTLm-04n7cnBb5GDbb-f","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"3IgYyuksW4K8Qtyb918-o","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"3HFD9TV-KA5p_zq6J0a7c","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"wDYj5SV4Kqq_LPgqgUwI3","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"DOJHQXFcpKs-NLpqCJcVC","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"ZFXm_z-LiWLYVChDoZ_tc","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"6l-scjRp2erVa48cgjKFA","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"7mavTdbb8UCaz6RU5Xq27","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"R8usTzkpJ7269t299mOn7","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"N5taKvWJVcq7iGzNDDUB1","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"oyhnYZXDtEfhwidylNqrS","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"xR6EcCoCSVhKLFwbeYS7J","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"X6hhUo0pU8k2-Ve1AI6SP","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"P5pif_VARH1VUTm7wqAh0","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"UNRpLhoXJY7ben48TWGm1","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"tHYFHo0SBOaOqA_EgilFO","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"TIgwmsashLkoBl20ANGDO","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"b4mlVu84TiPrRtzH5M-ko","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"Wfd-VGrPSpn-VTx2bVtaw","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"X9DVtsqw8a8Vt79CQuiHP","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"CPueAvyM6ghk6R2BuKiqv","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"ELpRAhdY3mV5oDq7yWvPy","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"YR0a7aXlC61rrZUHKub_-","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"47ZUt-yJTl1nwsOyTkDxU","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"TNuilCSVki8ryCsOmxzW9","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"3H5ZWwGYRH3p2C6oVGS4m","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"w6SywxcpWsJaXMZCJ44SB","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Rm9lGmTMdkhFUkjuJsBOJ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KemolvGje6DkB2rh1vj3A","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"oVz5wOFi0-pPkOzeCB-OC","name":"constructor","brief":"","examples":[{"caption":"","code":"\n this.panelSprite = new me.NineSliceSprite(0, 0, {\n     image : game.texture,\n     region : \"grey_panel\",\n     width : this.width,\n     height : this.height\n });\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Configuration parameters for the Sprite object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.width","description":"<p>the width of the Renderable over which the sprite needs to be stretched</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","description":"<p>the height of the Renderable over which the sprite needs to be stretched</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.insetx","optional":true,"description":"<p>the width of a corner over which the sprite is unscaled (default is a quarter of the sprite width)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.insety","optional":true,"description":"<p>the height of a corner over which the sprite is unscaled (default is a quarter of the sprite height)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.image","description":"<p>reference to spritesheet image, a texture atlas or to a texture atlas</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | TextureAtlas | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1 | %2 | %3 | string"}},{"identifier":"settings.name","optional":true,"default":"\"\"","description":"<p>name of this object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.region","optional":true,"description":"<p>region name of a specific region to use when using a texture atlas, see {@link TextureAtlas}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.framewidth","optional":true,"description":"<p>Width of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"description":"<p>Height of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.tint","optional":true,"description":"<p>a tint to be applied to this sprite</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.flipX","optional":true,"description":"<p>flip the sprite on the horizontal axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.flipY","optional":true,"description":"<p>flip the sprite on the vertical axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.5, y:0.5}","description":"<p>Anchor point to draw the frame at (defaults to the center of the frame).</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"FLusxk7CN_NT_7WRtRyei","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6mTTWmzR8V0tGQn8Gl9HE","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"n_5wA9ggqputs5XDhyPdg","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"A3F0XxAqIVjukiPjCddby","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9bOyoBMVRtTL7XZVHgT2M","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"zRrA6OT5pJL-zRsmPBY2b","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"gIFiSvCdgJZS7ib5JaROr","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"oaAPv_LiXKXd8bIkkTZRY","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"mmCbfc_VWy4AJark-j0G_","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Rfo2wcsMjjPE5ZCW1_asM","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"K3BFwYwU7Nqy9_6P_u0SK","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"ib52wbCAPU-8dKVmiOiiN","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"sCUkQ2ZIkm4uvAprk6H6n","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WENhMc2o2roDgOkibcKHI","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vXCx2MKmSSPT-ZV6jadvJ","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"akdQgZxOZxEmxyvrtY2FG","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1D0ZG0LGYCu2xppRvFuv_","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"I9IzgZ9HKh0-e4WQ9DcuW","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CqVxlddeEFfSfW6MVeC9H","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"d9CR8jgCIhSFO5UlsNLVX","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AGrhelKA5LQXYKTqoz1zU","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PIpCWSnvWTpxde4kB73Fl","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"xtYEM3jXwqUXggUfkyVnU","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"BnU-uUgBgz3r5ObxEvbsa","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"wb-nEp0KkDZGRNp-ednJN","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9Fj2wcrXk1C3cOZm2H4WV","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GzD4q6c4bUbWi-8iJCLl9","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"t3GMcouXfFeOp9sHLJLkz","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"bgRYtI4ZssTNDGTd08mUI","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"f-ybQbpm3rSi1-GnDeu2f","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"vYsLnopdApt_2nc0HtCqL","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"BGI6Ri6MJeMqO5GLcQ6e8","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"JuYztQPNgvIwgxbx9Eabj","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vnj0tYMFsLnXKz0i9eNSp","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"7PNfw1Z5AJuB2wCwm3HKt","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8P1Q3MdKWUBTcOUhI54aZ","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kn0xpJCfnnA8bCtkUeN2g","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ezBZ1DY_yeYeeraAkIqwF","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"N6NEhx43fciiu4iIQZEzZ","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4rtHevIgqEicMsKfzGC0M","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this srite (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"QITBa8yIziSMv-ZwPa03E","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"cytKrqE0WlYBUcnTuz9sc","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"WoVyOXfVTdyJal9dtwhMj","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jVcQV-SHNo6k7aiQLlgIJ","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"I7Ic2zP9tfz_-nPitUI5L","name":"ObjectPool","brief":"","see":["{@link pool} the default global instance of ObjectPool"],"type":"ClassDoc","description":"<p>Object pooling - a technique that might speed up your game if used properly.<br>\nIf some of your classes will be instantia...","members":[{"id":"zSzDZoey9dHIyIdngnUYG","name":"exists","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Check if an object with the provided name is registered</p>","params":[{"identifier":"name","optional":false,"description":"<p>of the registered object class</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if the classname is registered</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KKpBUEXy0rNJD5d3rIlm_","name":"getInstanceCount","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the amount of object instance currently in the pool</p>","params":[],"returns":[{"description":"<p>amount of object instance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qi5JbvcBCovF-AjqoY29f","name":"poolable","brief":"","examples":[{"caption":"","code":"\n if (!me.pool.poolable(myCherryEntity)) {\n     // object was not properly registered\n }\n"}],"scope":"instance","see":["register"],"type":"MethodDoc","description":"<p>Check if an object is poolable\n(was properly registered with the recycling feature enable)</p>","params":[{"identifier":"obj","optional":false,"description":"<p>object to be checked</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the object is poolable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dL35saryEEPbD9xBOKILL","name":"pull","brief":"","examples":[{"caption":"","code":"\n me.pool.register(\"bullet\", BulletEntity, true);\n me.pool.register(\"enemy\", EnemyEntity, true);\n // ...\n // when we need to manually create a new bullet:\n var bullet = me.pool.pull(\"bullet\", x, y, direction);\n // ...\n // params aren't a fixed number\n // when we need new enemy we can add more params, that the object construct requires:\n var enemy = me.pool.pull(\"enemy\", x, y, direction, speed, power, life);\n // ...\n // when we want to destroy existing object, the remove\n // function will ensure the object can then be reallocated later\n me.game.world.removeChild(enemy);\n me.game.world.removeChild(bullet);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Pull a new instance of the requested object (if added into the object pool)</p>","params":[{"identifier":"name","optional":false,"description":"<p>as used in {@link pool.register}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>arguments to be passed when instantiating/reinitializing the object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the instance of the requested object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"i6ilZjRj5oX1iRxxIlT6j","name":"purge","brief":"","scope":"instance","type":"MethodDoc","description":"<p>purge the object pool from any inactive object <br>\nObject pooling must be enabled for this function to work<br>\nnote: thi...","params":[],"returns":[]},{"id":"uG4G30-iNurMhTPXfkkxI","name":"push","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Push back an object instance into the object pool <br>\nObject pooling for the object class must be enabled,\nand object mus...","params":[{"identifier":"obj","optional":false,"description":"<p>instance to be recycled</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"throwOnError","optional":true,"default":"true","description":"<p>throw an exception if the object cannot be recycled</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the object was successfully recycled in the object pool</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lsUVsqb8S_UL_UXJIzp8M","name":"register","brief":"","examples":[{"caption":"","code":"\n // implement CherryEntity\n class CherryEntity extends Spritesheet {\n    onResetEvent() {\n        // reset object mutable properties\n        this.lifeBar = 100;\n    }\n };\n // add our users defined entities in the object pool and enable object recycling\n me.pool.register(\"cherryentity\", CherryEntity, true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>register an object to the pool. <br>\nPooling must be set to true if more than one such objects will be created. <br>\n(Note...","params":[{"identifier":"className","optional":false,"description":"<p>as defined in the Name field of the Object Properties (in Tiled)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"classObj","optional":false,"description":"<p>corresponding Class to be instantiated</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recycling","optional":true,"default":"false","description":"<p>enables object recycling for the specified class</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]}]},{"id":"oqAnkLsht_7HPcArkUTJW","name":"ObservableVector2d","brief":"","type":"ClassDoc","description":"<p>A Vector2d object that provide notification by executing the given callback when the vector is changed.</p>","extends":["Vector2d"],"members":[{"id":"VzUHFKFU95eJh-SK52S2x","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"X-goxESrVBL5sDfbj462D","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"jHai_zJakn_uGy5lLMRW9","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"_x-aLBLr4JWVW8PUNw-_T","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"2cmyHWXb_hJwm9lOdeqg0","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dfQSLreYyAP1YDdSEmd3e","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"94fshGnA6CywqUoJz8V1i","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"ZA-n7SgT3DT33o9rUXYKq","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"tZBSZ_nxHIneVGhjYTJL2","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"Gqovu7mqoQjUNRUqACk5q","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"obqusUfz_kdaYzUe5orNW","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>additional required parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.onUpdate","description":"<p>the callback to be executed when the vector is changed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.scope","optional":true,"description":"<p>the value to use as this when calling onUpdate</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"ewGXXUXZvhEfB3TE_R739","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the x,y values of the passed vector to this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"UJ_LaCGxzsBWnsJElAe7J","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The cross product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"VCqzOYovFhgltSZRezkt2","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"iIxSZjJVsk3B1QE03PilU","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"qLXwEXZ3IOn4hr9Xax1q3","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"EpjIRMRNk8soB60irEWtg","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"b8JqKbBOsJLD24QR758s6","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"XinyLxHgA4AKViIgJynH2","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"KpMdS3-5JMm1v4QUVMzDA","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vjWtPqYFvBTF43jH3Nv12","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Vo165kJB3yLZGS552297V","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"9fKFA3wlI_w7Exf6NKZdC","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"8hXXLjsDVWQ2QXFjL9RKV","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"zxhtOxf99-4jgJ5yIyefP","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"Y4IIQbbvcr3JyHgYow0hS","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"D5QYHnGUGTw3byJ6M6uGq","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"am2CW6rQCrPRYBaWXwVQN","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"vkNcK0u4DZPIVjJ09kzR4","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"8ruameYpQLyqSQ7D8Kw_8","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"LK9SJxqIRLUzv9Pay9mQb","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"JomUw2qFnjszshyFzsMQK","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"r9F2hjEFw80DYbgwWHNad","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"LT2WeOy1veB6pDK8dt4Wi","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"H8USRCGu5PWg1vlTCyM7Z","name":"setCallback","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the callback to be executed when the vector is changed</p>","params":[{"identifier":"fn","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"scope","optional":true,"default":"null","description":"<p>scope</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"EaQQJVwcy1ikyABvaTSJD","name":"setMuted","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vector value without triggering the callback</p>","params":[{"identifier":"x","optional":false,"description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"lJgyARkwR5VEZH7M071aq","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"d8yNrbHIUgR6D70yyCVIG","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"xiASx8S5KYYUq8YIYm9Qx","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"YGlb9mwIePGrT6odAc2QC","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4yxbOtEYDdkGVDU37I1kA","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"3BTkQsNVUzErZJRo7TqdH","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"xJaUUkgx03nxiG4z6db98","name":"toVector2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a <code>me.Vector2d</code> copy of this <code>me.ObservableVector2d</code> object</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"QuciHl77aHcb_a-E98SGj","name":"ObservableVector3d","brief":"","type":"ClassDoc","description":"<p>A Vector3d object that provide notification by executing the given callback when the vector is changed.</p>","extends":["Vector3d"],"members":[{"id":"jjwX8SGoQc-G3c5k95Ij_","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"i3nq8k9QsOjg_pFjRtrLo","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"VPhbjauemHYAxmxUBq69f","name":"z","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>z value of the vector</p>"},{"id":"wc-ajxza_Pf_4j1Q0vYHb","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"rDODjZSZ-HBTAMBe3yury","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"256LevXPDTOTAv-ci9fql","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"74GxmElD11cwhByIXvcqR","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"igQmSF74umSs4MfCQQaGV","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"Ahk28aeN7fKXn-vE92c5I","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"aT03hE4ehodoeoOom0aNK","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"o0JZMXtz9jTAWUTy25s9d","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"6gKH3ldCLrYOGvT1bJz_v","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":false,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>additional required parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.onUpdate","description":"<p>the callback to be executed when the vector is changed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.scope","optional":true,"description":"<p>the value to use as this when calling onUpdate</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"TxIGbLIRpeiTmF9rDVo1X","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the components of the given vector into this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"A-oU2T17idL6AKSlpvHLM","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>calculate the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d | ObservableVector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"45CHKWgoidJAN9AyzS2-z","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"H1MusvhGYZN_fJtVXjRsp","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"4cZDsPD8QNsHEAwv8I7o1","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dTiDz6fIOjhOo4lHh9G4r","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pw3Tvz8bmwsb3EwQSY2-t","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"4NxpIq12miSVxvxglzGw1","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"FxJSYa_6B6Gm1c-Ga4RRD","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"pIrYtWhzHQl4Bmt_sMY2d","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"F1arTdk7AdFRTNFOfoXWx","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d | ObservableVector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"w-6z4IidJssQJ2TJnilGb","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"321KddL-olPZ0-q3rlXIc","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"Hagcj33KPD5V6XoR1ck1-","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"s4hJEgTl2v1TbOIhHab57","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"hcGJ5HduylEjp9c8537wn","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ESuqZGkQmf4WCc1erDSuq","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"N3JpTAWlECSX0smyFPdzJ","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"PWoRm2BM-yAsUu4S3o4ii","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"2obJMMVmQqU1RlZZYjZUw","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around (on the same z axis)</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"Wtms9jjJh8Grac8ifR0n9","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"uQ7R68RtVEOEisF-uE7l_","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"EdirAeb1gOwPLhqmIrsL7","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"6YdXv_lrilO7u2SP9nlWY","name":"setCallback","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the callback to be executed when the vector is changed</p>","params":[{"identifier":"fn","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"scope","optional":true,"default":"null","description":"<p>scope</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"01REQVWifAEwbeco50C20","name":"setMuted","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vector value without triggering the callback</p>","params":[{"identifier":"x","optional":false,"description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"0LS5JLJz1tY5jTNJgohmg","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"xyP0-dHJSh1EqqqGFsksT","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"3yxwE2uZwMgh2LvOrVUrZ","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"NEtHYsG3x51TgKM8xz5sV","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"3qqkHNajKw68gAG9DZXEK","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"dpN9YRuR8CBI2Mlt-8HNj","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"8ymJ_uq5fE3f6nkf5i6qt","name":"toVector3d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a <code>me.Vector3d</code> copy of this <code>me.ObservableVector3d</code> object</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]}]},{"id":"0b62hQOu9AgTjUq8SoqDw","name":"Particle","brief":"","type":"ClassDoc","description":"<p>Single Particle Object.</p>","extends":["Renderable"],"members":[{"id":"BMDpELZyiGbkqZJSwqW54","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"X_XNB9wV7Ia9RvxJzQN4K","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"E890wxaWsj_hrdyGYdIfa","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"_KPTAbNAWT7mS9HfAj0wj","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"XJlxpP56KoixBL7pXAw58","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"AugaQTjn4wHTeeGwJggz-","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"78BFKEo5tRtOpkk0N6zu3","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"A_A0bnNbaVjmPwIIsDlYx","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"fbuwHLFaZ7YUyo9AbCr6U","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"QIOWb84Z_CJnM1fjfRsCx","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"DLeykqxTwCPJRKBnWMToy","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"oKkJbM34MQSI4fH8LzKjE","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"pbULgbiocICbELtDy_A0Y","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"tgnaG5xLW0Qg6R771peTA","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"n0RLKmGPaBoh29KahKVjY","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"3pwq0qdXJsKlyQQSVPTGP","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"RqHqIeJ1aD1-l9p3rZNE9","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"FGzRvQsubwWJvflUx3O9L","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"HubuPufOvI9k7UqNMTvtQ","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"dWWrmOZT9JK23PU5XIxO0","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"qwBAAsDPU41xV5U29fqoH","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"Rm-bBpILP7clB_kiDD50r","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"ye_RMmGNnBi-ujKdtTR5w","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"0Av788XWaJa5GW6h0ZFKf","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"pqK95OUtoW1XmeLANOG-u","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"gyoMON4SDJVWzo1lncMoY","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"g3O0JNYrkI0PPSBsCqL6F","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"Q5oHre8VT_5l7L-beR9z6","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"UolL_e-Edt4pWLE_BqpyR","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"nhLT4m0U6dvGwNEOdPwzz","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"g1YtSHyN5iXrYXe4qM7Hj","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"32DdAGtMnCw2lZuvM4Cbp","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"uJr3bxz3fKm0ssa_1fRSB","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gK1qY0mYWgTpspB1UwzX4","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"X4Ns7_IH1tH0pX3WOCHJU","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9PQBVINXZg4iheURcZ-Me","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"emitter","optional":false,"description":"<p>the particle emitter</p>","dataType":{"tokens":[{"value":"ParticleEmitter","kind":"canonical"},{"value":"ParticleEmitter","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"4Suxa-a8fBZb6rabTxbNN","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ncxK8bP6_1eDnNzThLP64","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Z5xiu8tTCGwzP4ukB3WZB","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"70zfUmHdM2X5CD8JL-CVY","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"nX0pPD6xk6j0eC-Hce6LL","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"L42YwtwSouU4YcaV0wwv0","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"28fNC5sp1R6XyyQxbfoeJ","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"7Gcwfoeg761vXC1iE9a1C","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"NnoWbGQtLo0nX88u6eymE","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"D0ANdeVPcxiUl_lmJGgCK","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"wVGjfLJCsn3CrWDGc4qHD","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lpsveIpi4JrBVAZo5aLQO","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4sdgCxxJR-LfyuqeODBxt","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"OHOTOgoNwXVEsoV0xqOvZ","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GkL9pfiHvqXYLHf5zbCVP","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"xdnGwysMpqDOsqjdyIhw5","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fuf4HPqzzYyO6w8blA_4o","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"XB7j4BcmdPOGYNRz0ZQMw","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"bsZbCu42S1i9XZ_kWKFQZ","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"HFC8QBxlC4n84mbkkc5YL","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Gf7sXuij6XxcNzlftvd1r","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"a6PuyFpTRSRqueeLVBVrm","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wS1bRO65IDmpDW1IC0LA6","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"n8PqOoQuoE9euXB7oA0bs","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"XxD15CuyQwLOYi35w66pi","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"duvcfPcP5ZbU-KypVlNmp","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6_ncBV-IxWrW18vminHfP","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"B14SX90a3-Sq4ykaQmxCl","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"AJerTtE0SsjwHBwC1_ycr","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Q7V7K1VvVfhU7b9rohfdX","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"EQE9yRJE0cOnD-B30SweQ","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PjZYfR9FAlA4K7temDreY","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"XhX22pXiKwPoEHPCR0FLU","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"C9FORwPJzcbumFB5f848W","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"UtTvjdLR0ldc6vrxwIEHn","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WAg6frf84tcxzV_j6BiIr","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"BnXRiEu4JZSx7cqaHaile","name":"ParticleEmitter","brief":"","type":"ClassDoc","description":"<p>Particle Emitter Object.</p>","extends":["Container"],"members":[{"id":"0mliCNHqtOfzKPlEUNu5Z","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"8Z_i4TtyvhTA1mNW_JR-C","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"SWbBd4RRAtzRSxl4qMcgs","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"m74TUucRl0a9yInvjMA8z","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"1IoOCpOPXnXkE2Qi4cFvh","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"unsR8pPAAg2DgT8-qCQrS","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"2yQbajRkOyeig5HPelYT_","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"CDxOfkA3-nRl8oIe0Xa2Z","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"9h-4Feb9TxGsdRfCd1czv","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"DoA0-tsMDv3TKqDTcJMcr","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"GuTEftv1kmH15W60KK2my","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"kYqyWKxrwVMHqtxes29kK","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"kSyPyWPH6rAXTO-qSky3a","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"WqtDpV56ixY_c3AnfxCAv","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"GbjdWWccnt24Ly_R3l4s7","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"fo8I9fFY1u__rUrVFkPyP","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"TXsy0qzml0PpZ4pemR3--","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"rDA6aXR8ODOcSQCLSQ5sM","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"amz9AVjmSVoXFk2Hhu6lV","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"77HxbPHPQrtEdKehRFWAG","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"CNhGq2qtnbttZCn0ShNcA","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"8WqmFTpDv6njVxe9hh7M2","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"KlSp9BdTT8EESPjKUGLo7","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"kn-BBfhoV6oNWGLFpUgb8","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"f2H6xwYMN44TjTOrEueEs","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"noaibsjHvoojwnY1vS_3M","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"SEjp-3SvI-jHy-003zcg1","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"mtztQ_2eOluxYUfuqnqKU","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"bj_TZde5jJS81Bon6ruMs","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"EtI9MHtpUW5Tog9d4QMr4","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"RTZ1igJ55uZYnv-NrOXPu","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"3HMrvqgIt-8saA1pbGhAj","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"fU8Qms4JUupKS2d91vRlk","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"8KqnKgpKZcDjLZMuUKlhz","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"5eJsk_R5WEieHzLH2duSM","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the current (active) emitter settings</p>"},{"id":"wwuQ_equc5vWpw-9_yB1N","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"NRI4GAbigXDutNsYGhMza","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"1sFl3AlE9MT0M9k2zJIa0","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"2LLPuixACw8fvScyPhIVo","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"FQZzDDIuM7j-oKvvT6q_V","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"2jsOhDWf3XltItLwg3Ql9","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"TKGz3z5LNgBp6Eue31Fi-","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"bckMW4pn5soHPC0PTinZd","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"j0kNYvkIy8fpABlXwFT7M","name":"burstParticles","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Launch all particles from emitter and stop (e.g. for explosion)</p>","params":[{"identifier":"total","optional":false,"description":"<p>[optional] number of particles to launch</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"cmwEYOVxZuPDV7pJdH3ti","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"8hm6UBxsUPuTO4gHqmuSa","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HoGUYB_HTSxywEF9MgJgQ","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // Create a particle emitter at position 100, 100\n var emitter = new ParticleEmitter(100, 100, {\n     width: 16,\n     height : 16,\n     tint: \"#f00\",\n     totalParticles: 32,\n     angle: 0,\n     angleVariation: 6.283185307179586,\n     maxLife: 5,\n     speed: 3\n });\n\n // Add the emitter to the game world\n me.game.world.addChild(emitter);\n\n // Launch all particles one time and stop, like a explosion\n emitter.burstParticles();\n\n // Launch constantly the particles, like a fountain\n emitter.streamParticles();\n\n // At the end, remove emitter from the game world\n // call this in onDestroyEvent function\n me.game.world.removeChild(emitter);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x position of the particle emitter</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y position of the particle emitter</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":true,"default":"ParticleEmitterSettings","description":"<p>the settings for the particle emitter.</p>","dataType":{"tokens":[{"value":"ParticleEmitterSettings","kind":"canonical"},{"value":"ParticleEmitterSettings","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"WvxaQzTfq1EH1iLFjeK8_","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"iesYAbsPPfE6M97GYIaYe","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"atWEdmUsie421X2cJDir8","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qhRLUinuQ_cRA23hKYRQ2","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ra2sveroc0ehOwKu1ujIk","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0Fb0CQKnQ4nGwfjU6HdVs","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Ngs27IsDm9Ea7rxSa5n_5","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"iqrkb0VqHyD0FTdja-wMk","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ZbmheQafC9-hceeViuyEF","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"6dvVtKcAKOAHyE7g1HxvF","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"CEtReG_r-Spj7GVOcbfee","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"EvBu2Fkk9rAb-rlTVD6rz","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"xBs72kkz7XDKy7X0HEY4N","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"RFjZoRrLAMpNwU9aEqq8V","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"YHyLxrGGTJu1I_BM31At8","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ohqF8ijfYq13JyQ6ksR0r","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"XzLf56q7PY2pLk6CkGxg6","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"MAYVh7wRTIz6HKqs2hrNC","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"-K6uwKFKndxF2pZRbGZC2","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5-xmpspdw2pKDqnraoOy2","name":"getRandomPointX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a random point on the x axis within the bounds of this emitter</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7LlsISkfg_T8kud4rXiWA","name":"getRandomPointY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a random point on the y axis within the bounds this emitter</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"3uzv8j5loHrY_A968OgA5","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"U8OJJXjFfC5D3hFiB-Gxn","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2rAaWns7kTcP0InluhCyD","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6468JlNp7P2jDdj2GZNhj","name":"isRunning","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Emitter is of type stream and is launching particles</p>","params":[],"returns":[{"description":"<p>Emitter is Stream and is launching particles</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JnMfp8uCJARLgg-cy6qgA","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2Glf_GQlfxXdSfwae0O8E","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"iaZLgucCX77eMhHLKG9ij","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"IzQymUBxhmiV7Ef_sLNjR","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"5vLwJFpCV6Qght1c-yVmq","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"DbLE3_e9UFqXtEHkfeRLx","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","optional":false,"description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CYnbOzhFxHYwLuX2zskYl","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bFk7ebqbs7p_Z66L0hq09","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"Nnaz6TX3VyPS7bu5pn0Vh","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7huQ3QJe0Qa1B6yOV-PWs","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4ud6yKaxc4QFV7VInUJrS","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"7gr_BUmezwReLDdvB3EdH","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"uNd8_9TK3l6M1FN247jRo","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the emitter with particle emitter settings.</p>","params":[{"identifier":"settings","optional":false,"description":"<p>[optional] object with emitter settings. See {@link ParticleEmitterSettings}</p>","dataType":{"tokens":[{"value":"ParticleEmitterSettings","kind":"canonical"},{"value":"ParticleEmitterSettings","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Grj4TyxQR9B2o9dc-wFhK","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"3HDxw-gOGBck1Jc-Dd8xh","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZQm3jI3kYz5hXph4T4asz","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"app4I0dHzVMLw57QuDN_n","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"wBlXR-WEAtlkhe-UAeRiR","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"HgRKVT5mED0Rk4C2UsQDU","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"2ORDeEyrnlWPmJ8ssAao7","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"eIz5HjfS6fBL7wv1A6Ayw","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ET2aAaO1iC18_mnSt7kdY","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Ckg5wnRbw1uVKN_3mNQcP","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"R7U8z3fYIJpdDnqwqA0yr","name":"stopStream","brief":"<p>Stop the emitter from generating new particles (used only if emitter is Stream)</p>","scope":"instance","type":"MethodDoc","params":[],"returns":[]},{"id":"9TsfTg08ML3kiZI0_0c11","name":"streamParticles","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Launch particles from emitter constantly (e.g. for stream)</p>","params":[{"identifier":"duration","optional":false,"description":"<p>[optional] time that the emitter releases particles in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wxCROcS6r0P6adIgCBrOS","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"HJYX58AbGVGG7iFNNeOD3","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ptwyZt_06Zpa2Bphlq8hX","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kDNQeVWfzw1HxndTAgLZC","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"tZLV92QHynQYBDEkHwNsc","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ifEug9MnvlMVVTfAgKKan","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kvg5ujfWhFnLObesUheai","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"tnINWPs3tgEwoPBI-3Soo","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"X1LiBFAesNpWOrFNeYglW","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"mfobCMfx-VtWn-fIiUL9c","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"4y9AD2v5qfoqg-n64a1ev","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VUy2HyYIfAlf7BR7Z5TR_","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6VfOSU-5JGoh-IMKA4uYG","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"hU39sZhYBHmYFJxTqkiDG","name":"Path2D","brief":"","type":"ClassDoc","description":"<p>a simplified path2d implementation, supporting only one path</p>","members":[{"id":"YWH2qE_L7eTEbDhXAcIKR","name":"arcResolution","brief":"","access":"public","defaultValue":"5","scope":"instance","type":"PropertyDoc","description":"<p>space between interpolated points for quadratic and bezier curve approx. in pixels.</p>"},{"id":"AA6ZjRklMa3mCe7wVEhvq","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the points defining the current path</p>"},{"id":"1W1jr3d6n5L6d2SZYMQfg","name":"arc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an arc to the current path which is centered at (x, y) position with the given radius,\nstarting at startAngle and end...","params":[{"identifier":"x","optional":false,"description":"<p>the horizontal coordinate of the arc's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the vertical coordinate of the arc's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startAngle","optional":false,"description":"<p>the angle at which the arc starts in radians, measured from the positive x-axis.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endAngle","optional":false,"description":"<p>the angle at which the arc ends in radians, measured from the positive x-axis.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"anticlockwise","optional":true,"default":"false","description":"<p>an optional boolean value. If true, draws the arc counter-clockwise between the start and end angles.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"A8lNjlW5d5hznHaM3c259","name":"arcTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a circular arc to the path with the given control points and radius, connected to the previous point by a straight li...","params":[{"identifier":"x1","optional":false,"description":"<p>the x-axis coordinate of the first control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>the y-axis coordinate of the first control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x2","optional":false,"description":"<p>the x-axis coordinate of the second control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y2","optional":false,"description":"<p>the y-axis coordinate of the second control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"WEGz9aXBLhNdAlQuc7RTn","name":"beginPath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>begin a new path</p>","params":[],"returns":[]},{"id":"XOGu-RWQ_SV7pnk_e8j0I","name":"closePath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>causes the point of the pen to move back to the start of the current path.\nIt tries to draw a straight line from the curre...","params":[],"returns":[]},{"id":"DBBWF6e_xRlJCinsH0aXc","name":"ellipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an elliptical arc to the path which is centered at (x, y) position with the radii radiusX and radiusY\nstarting at sta...","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis (horizontal) coordinate of the ellipse's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the  y-axis (vertical) coordinate of the ellipse's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radiusX","optional":false,"description":"<p>the ellipse's major-axis radius. Must be non-negative.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radiusY","optional":false,"description":"<p>the ellipse's minor-axis radius. Must be non-negative.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"rotation","optional":false,"description":"<p>the rotation of the ellipse, expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startAngle","optional":false,"description":"<p>the angle at which the ellipse starts, measured clockwise from the positive x-axis and expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endAngle","optional":false,"description":"<p>the angle at which the ellipse ends, measured clockwise from the positive x-axis and expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"anticlockwise","optional":true,"default":"false","description":"<p>an optional boolean value which, if true, draws the ellipse counterclockwise (anticlockwise).</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Y7PgkWGtICnjXNXgmG0yg","name":"lineTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>connects the last point in the current patch to the (x, y) coordinates with a straight line.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the line's end point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the line's end point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Uk1QGNTK2Ebr05h_IHWJB","name":"moveTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>moves the starting point of the current path to the (x, y) coordinates.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis (horizontal) coordinate of the point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis (vertical) coordinate of the point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HSEkpYZVVHPDjaIWu_Ad7","name":"rect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>creates a path for a rectangle at position (x, y) with a size that is determined by width and height.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle's width. Positive values are to the right, and negative to the left.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle's height. Positive values are down, and negative are up.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Ip97UrvXmtJM-BV4qJSSe","name":"roundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an rounded rectangle to the current path.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle's width. Positive values are to the right, and negative to the left.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle's height. Positive values are down, and negative are up.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius to draw the borders. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7HoDpq2qXokCV4uFyXO08","name":"triangulatePath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>triangulate the shape defined by this path into an array of triangles</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}]}]},{"id":"2rA66njC6Lu9VSlJdnYeE","name":"Pointer","brief":"","type":"ClassDoc","description":"<p>a pointer object, representing a single finger on a touch enabled device.</p>","extends":["Bounds"],"members":[{"id":"ngEfT8f9zh2DcqrigekBL","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"RaUd0tR6Rity0tIhCMyit","name":"button","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button"],"type":"PropertyDoc","description":"<p>the button property indicates which button was pressed on the mouse to trigger the event.</p>"},{"id":"xshmZvuKvxO1j7gJb9bzl","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"g8n1ZloBC5BOHArU9oht_","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"PTAqcU_LYx-4LOgpxf32b","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"S1bxy9WuUDitgTxefiLVE","name":"clientX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX"],"type":"PropertyDoc","description":"<p>the horizontal coordinate within the application's client area at which the event occurred</p>"},{"id":"ID9wK6CDm5BRIAlqJFyRz","name":"clientY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientY"],"type":"PropertyDoc","description":"<p>the vertical coordinate within the application's client area at which the event occurred</p>"},{"id":"GBldohyXT4z9m4X-ut_7F","name":"deltaMode","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaMode"],"type":"PropertyDoc","description":"<p>an unsigned long representing the unit of the delta values scroll amount</p>"},{"id":"sh7aMKoqTde0n8Ee547Zn","name":"deltaX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaX"],"type":"PropertyDoc","description":"<p>a double representing the horizontal scroll amount in the Wheel Event deltaMode unit.</p>"},{"id":"a-2ZqGmBKcqA7cqxe2xvx","name":"deltaY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaY"],"type":"PropertyDoc","description":"<p>a double representing the vertical scroll amount in the Wheel Event deltaMode unit.</p>"},{"id":"T6vfwDsNRvvZdADe3HhjH","name":"deltaZ","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaZ"],"type":"PropertyDoc","description":"<p>a double representing the scroll amount in the z-axis, in the Wheel Event deltaMode unit.</p>"},{"id":"fWo2oxdtjKuDarFHGxZ8O","name":"event","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent","https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent","https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent"],"type":"PropertyDoc","description":"<p>the originating Event Object</p>"},{"id":"FinWtwz_oEGxqgM9wc6GQ","name":"gameLocalX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the holding container</p>"},{"id":"GzNOndQPcdlLj6Bc4g3aU","name":"gameLocalY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the holding container</p>"},{"id":"tc9RSUsrV-4UJJQBWTrhr","name":"gameScreenX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the viewport</p>"},{"id":"ST3ei0R1_zAUJRJkcE54v","name":"gameScreenY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the viewport</p>"},{"id":"J5Mcl7hp8NdRRlpuBrS5A","name":"gameWorldX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the map</p>"},{"id":"S6hNKvW_XEx6TYPCVh9Kr","name":"gameWorldY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the map</p>"},{"id":"HmXXTqaQh1pmyMELj5YFP","name":"gameX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event normalized X coordinate within the game canvas itself<br>\n<img src=\"images/event_coord.png\"/></p>"},{"id":"ynf2GoLvqIhsuYjIg14S-","name":"gameY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event normalized Y coordinate within the game canvas itself<br>\n<img src=\"images/event_coord.png\"/></p>"},{"id":"dJ5S8cmTly2c05CXl2dUo","name":"isNormalized","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if not originally a pointer event</p>"},{"id":"10FZ0AJvlj0UBZ0snM87Z","name":"isPrimary","brief":"","access":"public","defaultValue":"false","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary"],"type":"PropertyDoc","description":"<p>indicates whether or not the pointer device that created the event is the primary pointer.</p>"},{"id":"MhNoNIY3VKqam--z9EgQ7","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"6Dnrqq5JfMZw1vaaPaxgX","name":"LEFT","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>constant for left button</p>"},{"id":"r_0bKYJpWbgDKO5CIiZEF","name":"locked","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the pointer is currently locked</p>"},{"id":"qzc-iZ7xPUXFHKoj3OdBf","name":"MIDDLE","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>constant for middle button</p>"},{"id":"mT1D3LMZ0uPbdcpJSaj-r","name":"movementX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX"],"type":"PropertyDoc","description":"<p>the difference in the X coordinate of the pointer since the previous move event</p>"},{"id":"2KYMbOZg8bgNLuTjKZYUf","name":"movementY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementY"],"type":"PropertyDoc","description":"<p>the difference in the Y coordinate of the pointer since the previous move event</p>"},{"id":"EPyjjW45uX6Dwze1EzGIA","name":"pageX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageX"],"type":"PropertyDoc","description":"<p>the horizontal coordinate at which the event occurred, relative to the left edge of the entire document.</p>"},{"id":"S-luDPmFNnEocKx4C1DxH","name":"pageY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageY"],"type":"PropertyDoc","description":"<p>the vertical coordinate at which the event occurred, relative to the left edge of the entire document.</p>"},{"id":"M-0sbtC4U_gjHWHqWv1f0","name":"pointerId","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerId"],"type":"PropertyDoc","description":"<p>The unique identifier of the contact for a touch, mouse or pen</p>"},{"id":"Z8w7bBuQKk8E-Ueoix9--","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"sniGkDrZfAHgc0hZAybIZ","name":"RIGHT","brief":"","access":"public","defaultValue":"2","scope":"instance","type":"PropertyDoc","description":"<p>constant for right button</p>"},{"id":"fz0GrpedyKi_WIL1G_wQz","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"723r0R8GL152iljgYQahN","name":"type","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/Event/type"],"type":"PropertyDoc","description":"<p>a string containing the event's type.</p>"},{"id":"xKSNjfdq7hGFCwUU3AjZu","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"XGLsQTaChJ9lyGhDp8Vki","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"0xkGH5KUuZRfjM5jOFHKc","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"vJiIKr_-gjY5uFVZHJQ7H","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"nVbJofpKmLRWmcmUPUrDe","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"75gHg_Jp9zntsVH9ipeqn","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"SH93RbuNf_V54ij-tHaO5","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"wcfJc9wdPuOLFinqngC_f","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"AmUjtJrSfeKeWzF-g0T8Y","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"mr8eve2DKtYuyK7xata7P","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5rGYhw_xus5Ar7jE66Lnb","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hA1_lU4Vc_MXbllRWzbw3","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RsV8mXOleJFeDZvhfOIiG","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"P9-VjHyXTmVv-BMDSzvGW","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"NXnovkuyuMmfKlDcfNENs","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"2JE_36Z9zeFmvG_mU9EA-","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tqTiKI963GLfctzMfnCkc","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"HAYCYujqL2B62yj0xSm8Y","name":"set","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>initialize the Pointer object using the given Event Object</p>","params":[{"identifier":"event","optional":false,"description":"<p>the original Event object</p>","dataType":{"tokens":[{"value":"Event","kind":"canonical"},{"value":"Event","kind":"canonical"}],"template":"%1"}},{"identifier":"pageX","optional":true,"default":"0","description":"<p>the horizontal coordinate at which the event occurred, relative to the left edge of the entire document</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pageY","optional":true,"default":"0","description":"<p>the vertical coordinate at which the event occurred, relative to the left edge of the entire document</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clientX","optional":true,"default":"0","description":"<p>the horizontal coordinate within the application's client area at which the event occurred</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clientY","optional":true,"default":"0","description":"<p>the vertical coordinate within the application's client area at which the event occurred</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pointerId","optional":true,"default":"1","description":"<p>the Pointer, Touch or Mouse event Id (1)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"5DxyXlnF_Lv6tV8WHGv7a","name":"Polygon","brief":"","type":"ClassDoc","description":"<p>a polygon Object.<br>\nPlease do note that melonJS implements a simple Axis-Aligned Boxes collision algorithm, which requir...","members":[{"id":"CQwGJ7nMTqv42N9Um9Kh9","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"FfXmfkizAThjwddog0eGW","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"hXDTjcPscrwkrgy-jsSx4","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this Polygon</p>","params":[],"returns":[{"description":"<p>new Polygon</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"0V4vARdaiH_vW0l2R3wR8","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>origin point of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>origin point of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"5kDoupqBb_ALbauM9O9qR","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the polygon contains the given point. <br>\n(Note: it is highly recommended to first do a hit test on the c...","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"r-YPh2IOS6UfnEoJTbzfM","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"NILM17p0suOrLjG1qNwJi","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"6wvKh2ZO9fE-5WxcwywpZ","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9WVNs7ElRQE27vmSlyIHI","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"FMorsXpdtNSJzYVrFojHv","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kVf0wB35sT8e7wO63EhRs","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_dzFR6fXGt6Nj7QNsydLC","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"M4pcUhsWA8q4bA8Q-yiWs","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Polygon</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2> | %3<%4>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ZZjbVtUfEZIm3ZYOEZmOJ","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"y1Syq83KWxa5KxM1_whsd","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hs_-jKhuEWr0hT8P_uJ87","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"RMzXcCBfZi2aPbFidjnBU","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"nAcvejvDB5PyHbyx1xX00","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"nQQfAPwDGIAvK-9hR-SA2","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"159mMOuj63lZA471gqYIW","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the polygon contains the given point.\n(Note: it is highly recommended to first do a hit test on the corres...","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"82p-ouoNXeqes9SWTuQHv","name":"shift","brief":"","type":"MethodDoc","description":"<p>Shifts the Polygon to the given position vector.</p>","params":[{"identifier":"position","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"peprGo2yBvyTRhzY7EjvT","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the Polygon by the specified offset</p>","params":[{"identifier":"x","description":"<p>x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this Polygon</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]}]},{"id":"Z2F2MB3BqIHCtZl2ZZh5x","name":"QuadTree","brief":"","see":["game.world.broadphase"],"type":"ClassDoc","description":"<p>a QuadTree implementation in JavaScript, a 2d spatial subdivision algorithm.</p>","members":[{"id":"VqVPuiElDyRr2VckKTwJO","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clear the quadtree</p>","params":[{"identifier":"bounds","optional":true,"default":"this.bounds","description":"<p>the bounds to be cleared</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"BeVhSWj0wg5drH6RDGjCV","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"bounds","optional":false,"description":"<p>bounds of the node</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"max_objects","optional":true,"default":"4","description":"<p>max objects a node can hold before splitting into 4 subnodes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max_levels","optional":true,"default":"4","description":"<p>total max levels inside root Quadtree</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"level","optional":true,"default":"0","description":"<p>deepth level, required for subnodes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hgq8csU88KNjRAEvscZka","name":"hasChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the node has any children</p>","params":[],"returns":[{"description":"<p>true if the node has any children</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7bTndQedWs1sRVE2uA-Us","name":"insert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Insert the given object into the node. If the node\nexceeds the capacity, it will split and add all\nobjects to their corres...","params":[{"identifier":"item","optional":false,"description":"<p>object to be added</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"4zyLemE5MAE3MHGnJl1Kk","name":"insertContainer","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Insert the given object container into the node.</p>","params":[{"identifier":"container","optional":false,"description":"<p>group of objects to be added</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"6zTLz4ImIh2jwPflXgRU8","name":"isPrunable","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the node is prunable</p>","params":[],"returns":[{"description":"<p>true if the node is prunable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"b3ZldVKU3EzwXE2GRERpZ","name":"remove","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Remove the given item from the quadtree.\n(this function won't recalculate the impacted node)</p>","params":[{"identifier":"item","optional":false,"description":"<p>object to be removed</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the item was found and removed.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QYikR0imxd3DVdtZqxBeM","name":"retrieve","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return all objects that could collide with the given object</p>","params":[{"identifier":"item","optional":false,"description":"<p>object to be checked against</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"fn","optional":true,"description":"<p>a sorting function for the returned array</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>array with all detected objects</p>","dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}}]}]},{"id":"s6vjW4-2IIV8rY27M49oV","name":"Rect","brief":"","type":"ClassDoc","description":"<p>a rectangle Object</p>","extends":["Polygon"],"members":[{"id":"Z6SXxinuhaglQjlOeDh3J","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"DLCX2_GoLP_9ssPxPfOtC","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"w5cjHb67gYFvoow6sjJyC","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"XSMX3v0DwD4uIaNMb3xV4","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"fRY8SuUbc9BVCb1UnM_TQ","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"kyXWLf6lINWIpq9fPlp2E","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"bdrEmhkXGSKi9MDy84G04","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"6KZpf9C8T4qHpsN69A1_s","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"DUjUy6AynxAYxkGiTjjNR","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"H4-Q606xNUPGqzmXz7UnH","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"Wy67eL3div0tTKVRHT9l5","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"FKP58vozEAZa-BE4G2IXf","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"i9UfrtcgHKX7u9YFIuWmD","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"v__fOKbzeH_rbjNC1h9D9","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OvIT2OU7lWLF8Qk0i6jSB","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"C--zV1TvVYilAq4bKpqdz","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hebRL9w_Q7K7NKrBqdyfu","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"0G2c3DLJ9t_PPPDMCYhAK","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"DVV5f_LUEoEbvQAh3aus9","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"NvlgJeMOapROcj9k7BwQl","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"mxpZRPW7Ws9a5XO_TdkNa","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fvR6t1UbmKXTUhPUPzGnm","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ZCc5qYW_MqUaBKuxXyR7E","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"z29P3NBZazt7d9ZTGQD9e","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Evh9oeucXq_zAHjZ6oJ7n","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the rectangle</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"37FzFLmesdvEMZNEwqDky","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"U-5Iaqhvrn2KhXVfXW6B5","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"L5hO2i4Coe_KhP4k8-5vp","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"foqatb09B2qiXeWrvZEOk","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"3oJQ8DMRtLuU6o8kMKICp","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"J6Ee9Ex76Ti6surDt0Zv0","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"b-_n__cTixFNEIN6nN2AU","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"I_mWyT6-6pKv-3Wsp6MiT","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OJBjDYehzn80lAFfKpD8v","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"3_u1GA5haHxLKUrgODUie","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"_JsZXx9RU_aMUbSaM3II3","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given rectangle</p>","params":[{"identifier":"rect","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wPGx9NC92a44_V7d2Hgm5","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"LxRy8Sm-4kmjlYgqW3Lbz","name":"Renderable","brief":"","type":"ClassDoc","description":"<p>A base class for renderable objects.</p>","extends":["Rect"],"members":[{"id":"EE-Jzzls8qIKu50GwUIgt","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"-prN4OpzjV_u7CQHfFpno","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"POcBzeIb4GN42KK-GD7NW","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"_V_tWRnLD9f-eVA0umKMQ","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"fSQIxingTYx-oS7kaQfQ4","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"cLygOLjpjmuQhxuC2sQnE","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"xqeTtf9RvrZyGqnfFaJEC","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"QRcHSUNaanAM3qibVwgbL","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"N1HAiKwTT5ogOzJTNFjh4","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"6eiABAZZq9DsOBlXdabRX","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"37fUo1BKIvIuBNQF8QECj","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"uVSFn6_YwYyWjLZNLq10g","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"ZzN6LE0TSuID7c3v6LNSc","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"h7aQVTzS7QRpcXM0rbrom","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"hL7PVcS--GNJXRvgIqgLb","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"gjFdmTxI_KKXDVrh_vlb0","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"ehVkuKedaEf6P21HxRq2L","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"IK0VpJ31pJdNSFcvy68cY","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"JECeoZIqcyXOFr9uDw-7n","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"pZiQ5rBXgK5HsrCwleMGL","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"bhAMVQRr6GSBj0nLLw-VK","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"1eDcf05lDFjws7dPIVYc0","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"F8BCr2PEl0VksL3PPu7qu","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"riE4Aqob80xxjrlCytFHA","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"rTzXvx1m8rIXxao5e3Qis","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"fqjuXNBtqB9Vo3cuEShBO","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"Dd_P8XZqrX9yAKlEho7Vf","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"Q-gsDpC63wiMDM8hOs3aj","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"G_nAcoduXxRzkh_i6hpBA","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"H9zIprHxwIhks_9Ma_tRX","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"M_F3pK85JKEOEbDAe1g9v","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"JBoSpVB78Wu6OctNn_dH1","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"TWuqzQepm_z5twV3Gh9iO","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NBxsxSC6uQMhors0spxq-","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"vvCFfRRtYWIlQWDEUYl6e","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ViovGJeW4yup6m9Nj2-PQ","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the renderable object (accessible through inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the renderable object (accessible through inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>object width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>object height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"PgAUCRmekQn8AKQP74jNT","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Lyb7Cq5HJFXZNxAfgvcQz","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"yfswFnd8XpDrphjhjWo8a","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"tY1qFIMhtXlU0F5JJwblc","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"mj3_HUIy1UdIaP75bxfdH","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9EBVrj4FAiVee8UFZg1vA","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"q12j_8oiQRoa4dVv5exX0","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"b28JuL1waSS8mr6uZIHQY","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"WGLYHf5yAS9a6pvmV0Ipd","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"FWz1r-GBR6oshPopTbya7","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"VlAxkFRkCR0jBUeRQiPKi","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"O2t571xLO3GO5F5DXVw83","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gHqikE0KtP8ufbVcsJ_1W","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"yK59OuMviChtlcFz_HvlR","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Farz9AhGKaMJofWfPy4ly","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"V5N0tc3FgeJb-TCpdTwiE","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KNhBfePF_-J_3D2fbCS5W","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Ud6tmAiESdCKDh93Nimap","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"cfJv-BPxi0-mXYzsQ4Kjv","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"tcPsqj5vHQVs4CzWOwHrP","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ogsKOjFR0SFymRGR3jlW5","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5HzgkmoR3ZykFR0tPZLfW","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"mwOiA0ZCuNggfQen8bz_r","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4Pxavp0g62q0yRvUoBvTT","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4jYzeJmMBqTniFv-9xH59","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"JSRJWJvlnuw9d9X34vNNq","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"CFJAzUG8XBn2IUM-idAHX","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"HGXhvJ87q80WgR4YXORLz","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"aQXLb-VE8cPpXzADXROYF","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"DWDIJftBd3fqryDfd-N5r","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YPmALrrReBtl8BT42vSki","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CG4eIhKs7gC4psP9cfKLG","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Eks0uFyYQrC6t9ACdyxeO","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"hHZL1nZresM_Eb6KOSXam","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"QhTCsB06oZHupKufE_VRQ","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gC6wfryBtIndIW9yk8Ev7","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"-Ye1yRaFmnFQFk56gY2NA","name":"Renderer","brief":"","type":"ClassDoc","description":"<p>a base renderer object</p>","members":[{"id":"w2v3xo0HVMWuZG1107AG1","name":"Texture","brief":"<p>Alias of {@link TextureAtlas}</p>","access":"public","deprecated":"since 10.4.0","see":["TextureAtlas"],"type":"ClassDoc","members":[{"id":"p5cDY29JpUla_ULCNZJwJ","name":"constructor","brief":"<p>Alias of {@link TextureAtlas}</p>","access":"public","scope":"instance","type":"MethodDoc","params":[]}]},{"id":"J4hj46pgfUB-UeNGufEr_","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"bwq9J1OaIHOl19E7lHMcR","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"kxN56SdzwXzfkTJcaLJQd","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"_3cjMDayanF0jXSCA3Ao-","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"ljzZ2JTh3cfRSh4Vm8OW8","name":"clearMask","brief":"","scope":"instance","see":["Renderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"W4QboDlf6gDrWcy_FCast","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"JjRHf4CBIKwJjxaWNB8cG","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing, use false (default) for a pixelated effect.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.blendMode","optional":true,"default":"\"normal\"","description":"<p>the default blend mode to use (&quot;normal&quot;, &quot;multiply&quot;)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel rendering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.verbose","optional":true,"default":"false","description":"<p>Enable the verbose mode that provides additional details as to what the renderer is doing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7Thetp23d8ewM65nAJy1R","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"Qoh_fu5IP_lX0DGTaUaUz","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"gc8agrW2gnQBNnTjFV6YG","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"M8EIktrWDH_SRRwpKiqua","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"4c909PuVfdz3JKvToP-7z","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"YORWLMCgNfaVx0NFJKLqa","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"B4nv4dkHJer01xNlbCTC7","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"FXU9eJhtswGx5VXjcbsUu","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding 2d Context<br>\n(will return buffered context if double buffering is ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"_pTC3NA-WKLC10zbkB7Gb","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"iS7-UzJ_MeNBrbk7G0DyR","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"WjUurfSK_F8Bkru3Yvlyv","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"J6hcdIKA770XMRq_ajSWz","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"MVx5rAX7B8dT3p0sZ5xNz","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"0qZiYj4PbAFAchDHk5arq","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Wam7zH2UHb9Sr5v1g7C-t","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>the shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"zFgaaUizyHXD4wGjh2HbQ","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"H0nI_1RAhWgtkRogVuyVt","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"s9L-yDiKYXHmPi_nFr6LG","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"FO_aJ-u5EwBq3ngA5uA2m","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]}]},{"id":"ByTsxGU2ENY7RH9YbNj_P","name":"ResponseObject","brief":"","access":"public","type":"ClassDoc","description":"<p>An object representing the result of an intersection.</p>","members":[{"id":"cQac7tN-30canEsJkit_a","name":"a","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The first object participating in the intersection</p>"},{"id":"zDnDECXkSep3GugAd59fI","name":"aInB","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Whether the first object is entirely inside the second</p>"},{"id":"UJcW_bkrd_5A6vRcnq5lN","name":"b","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The second object participating in the intersection</p>"},{"id":"sZczBFaPWWfqO3h1hQK-q","name":"bInA","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Whether the second object is entirely inside the first</p>"},{"id":"GqwBZxV0BdUzDKDeriUp2","name":"indexShapeA","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The index of the colliding shape for the object a body</p>"},{"id":"XobuiRxEAxCFCvTh8N1lF","name":"indexShapeB","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The index of the colliding shape for the object b body</p>"},{"id":"6cQShkoAr0FeK_E-x84Ka","name":"overlap","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Magnitude of the overlap on the shortest colliding axis</p>"},{"id":"_rxDyAoe_DdBI19mJUvQY","name":"overlapN","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The shortest colliding axis (unit-vector)</p>"},{"id":"oBjdGisESjCF1U0jxgfJ8","name":"overlapV","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The overlap vector (i.e. <code>overlapN.scale(overlap, overlap)</code>). If this vector is subtracted from the position of..."},{"id":"r6qrcpXmqyqVhg7Aujbgb","name":"clear","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Set some values of the response back to their defaults. <br>\nCall this between tests if you are going to reuse a single <b...","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]}]},{"id":"CkturLaz9DVb-AW9tLM_j","name":"RoundRect","brief":"","type":"ClassDoc","description":"<p>a rectangle object with rounded corners</p>","extends":["Rect"],"members":[{"id":"0bfG4imw6HwaYPGFxCzrB","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"7D71XcXLD04lKhEG8YLq_","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"sfdS9FqQK-0T417Q7LPcs","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"pjnzBkTt6Ur9bDoHqlbAT","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"KxieO9PVA9VZQtbDjcA2X","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"C0hfAICZdydiGgiY1xYuo","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"u8rx0qT3NZUb34cxAoLKy","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"61reOW19RUCRzl1Z8jQmk","name":"radius","brief":"","access":"public","defaultValue":"20","scope":"instance","type":"PropertyDoc","description":"<p>the radius of the rounded corner</p>"},{"id":"0Vpk7eNBMRa05v3U3EaF-","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"ESiAeKnLi8SPqBHKBvf1b","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"NFvUbSltoIjMQL6XDhu68","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"TcjUEh4B3A9qGrD5U1stp","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"iq4YPSL0jv8fMptq4E_mG","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this RoundRect</p>","params":[],"returns":[{"description":"<p>new RoundRect</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}]},{"id":"LbyI_FBx6_7KNaCd1H9Iq","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the rounded rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the rounded rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":true,"default":"20","description":"<p>the radius of the rounded corner</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"eCDlmFtGg0iz7NJujCm3G","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rounded rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"chxJ_My53xdkGGEzcONNY","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position, size and radius of the given rounded rectangle into this one</p>","params":[{"identifier":"rrect","optional":false,"description":"<p>source rounded rectangle</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}]},{"id":"4rNwjEKAIHYeEDBr_eojl","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this RoundRect is identical to the specified one</p>","params":[{"identifier":"rrect","optional":false,"dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OTlGTBuFwosnoKaDnaSw7","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"awGCEhhdsixoDCFT7NNPI","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"6u_sujrTflfNBk7pmYrZf","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zUZUyZYTMpGGbilMNClpS","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VYC9FeoizHKIOColXe6SZ","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OdeAfZE6p7BrUK6byJZkq","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"F24vtGMBxNvmLuAjjHal_","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Oou1hivXAzbT3ftnJyTrw","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BpbhQmD8wkmsBfS1nsIf_","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the rectangle</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"U68Dqzchaisyno3YlTxlK","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"hIVr5gT_OS1whx7FwHOHN","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"XjIx67UHeJaoa1Bykok1A","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zv70F0C-aDRZ4fDvOvW-O","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"n1Hu6XuK8Ckt5MqzxnBZD","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ozW7zb4Hauk0xSi9gowgz","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LXlgJVOR1DiovT2M6kElu","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"E4MSDUp0ROCLz1a1NI1sT","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"r1bGC1Ju6_3Odf2RHdZEN","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"So4aaKR9rUo6-F4VYee-B","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"WGc5N9weP7PcfPWUHZnlx","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rounded rectangle contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"TwDM75v67YG91xFWSec3K","name":"Sprite","brief":"","type":"ClassDoc","description":"<p>An object to display a fixed or animated sprite on screen.</p>","extends":["Renderable"],"members":[{"id":"bNtaFFiw-GZTb-KwbQWVb","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"aLs7zliPDZ1aRvNQbk3PB","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"31RodoRhKLhVl0P-WjRb9","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"9j7eIWpTYdQ5wAUcIPk8F","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"z-MuyL8ObXd8IXH7hFLk1","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"-ZznqSn_A0mJ9E20X1VH-","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"xtwD1I2UgrhQcuRmYMUyY","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"JBCiNf8LALNuTBaNGcgWX","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"pHfiLgVssMc_IHzmmAWQf","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"VqIpT83aljCYTK-Jv3T1a","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"zzFKEN5nhPygafPGTLD07","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"mYivGUKc4yHvUY3KEHwDV","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"efU4UjLoYXJs6-5ZxRkzZ","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"fR7CNwW4hSFiDHeHB0SfO","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"1SQ2DIf9criXk4qVHb2OG","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"7TB0va7bDO7dWNkS1GEu3","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"M8ueyIJoCOnDdddW96_d9","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"70002XfpIugElDrIOPXij","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"_fFuYBx1MfGka2tjmpGXi","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"rulG3X3vR5vz388tiiVJ-","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"5ovS6Rsr2m_BcbPahphd8","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"GPGUQw2tJ65O9z4HA4e-n","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"e38uKVlwxiU6_f2-5iDaY","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"NQDqaQFbtTabp697lrcVr","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"tWDNtoAuC2ViTufDtyY45","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"shqYEhqJzD7oaN__ZMzLA","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"GSOiISfhqMR0SW-lJPMd0","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"yYpXDiMWrR_q9ZP0xtNuX","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"MmxdkbF27K0rcaLB-waRa","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"4hj0GwgVE-v6zuj1FjjG9","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"vhv5ktVHr6Iq4qmzuIDuK","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"Jol6rQvJ2xtwGJkaFQ2mJ","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"G3g3WYH22BmRdy-WTdDr5","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"FE6DR8eimVZ-kXbNRpZ4x","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"9rwLyh4nz93coHu-Kwxx9","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"bZgs4MeGGFw4iGgz7Sok1","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"9jXUIVkSK1msKH2Na1o3C","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"aic9VsDdp0ZTmnxRs6s81","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"mpGT_cX1lAhpVyf8UZx8m","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"7tnXlyFJ51renraf_RulV","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"b8spRqCbzpOc6-YjeLukL","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a single sprite from a standalone image, with anchor in the center\n var sprite = new me.Sprite(0, 0, {\n     image : \"PlayerTexture\",\n     framewidth : 64,\n     frameheight : 64,\n     anchorPoint : new me.Vector2d(0.5, 0.5)\n });\n\n // create a single sprite from a packed texture\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\"),\n     me.loader.getImage(\"texture\")\n );\n var sprite = new me.Sprite(0, 0, {\n     image : game.texture,\n     region : \"npc2.png\",\n });\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Configuration parameters for the Sprite object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.image","description":"<p>reference to spritesheet image, a texture atlas or to a texture atlas</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | TextureAtlas | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1 | %2 | %3 | string"}},{"identifier":"settings.name","optional":true,"default":"\"\"","description":"<p>name of this object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.region","optional":true,"description":"<p>region name of a specific region to use when using a texture atlas, see {@link TextureAtlas}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.framewidth","optional":true,"description":"<p>Width of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"description":"<p>Height of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.tint","optional":true,"description":"<p>a tint to be applied to this sprite</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.flipX","optional":true,"description":"<p>flip the sprite on the horizontal axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.flipY","optional":true,"description":"<p>flip the sprite on the vertical axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.5, y:0.5}","description":"<p>Anchor point to draw the frame at (defaults to the center of the frame).</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"IWmp-lY1aHf3ya7gH11Ye","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"P0L-436bPFNGMzHTrmA87","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"pcSPah1Wg-uEjMBLJr750","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"So6b71Qe68eGJ7D-Ku-pv","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"i86V_dh5V4tDW4QG1fWRM","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"xlfnN4MqcFPzVaIVn0cOm","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"53M0ivGp6FjZoMs98XJB1","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"BY_b91R3YQGW57z9wkIZc","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"7uV0U5DNsYPZkLvuGc3Jl","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"dRhclKTblQ9hLX_9_8I6C","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"QS_B0lGG5dOev5vAYsxTl","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"TNY7EMDgjBdEQ1u9mtSo5","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"4EdEev_D12HStQH-nzhXi","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7a0H7YGSPNqYjXaPrrTG1","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UmaFLRk0L-NziDbJMpehC","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"btl6wTkLRadfTLp9KcMvx","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CJDpJ9TE8GTHgNaaJxBx1","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RK2w8q8X1K2VaJWXybkP4","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zI67-2LRFmVOLwclcr1GS","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"dXADK5EieyBNOq7ejxf6X","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-1CpnrK77KMKV8Z0F2var","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OYwDuAgr4Hg8Taz0OKygY","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"RIVLNeLUYbewZDGpa3s4p","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"ylfhKvZ_CP2rEP4RTMf0j","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"-n_kaKi6DDBmZGF0ghLwj","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"CVHhh93ne5G5d9bGLHHtx","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"TVp39arjybKNjtRx2p0lY","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"IAjEUr4sxOKhUtqRe8xy4","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"MBf1kj2TOzmXpcR_pdN9O","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Z3SjlKh2FILe09cS5LecY","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"md9ZooifRwW83UFtnbpXj","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"OrZDlVDpfjJR5uKIqSZPi","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Bi-eFETiS0135s1qDDsYZ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"pXkgj45C6QL3_cNP3PKP5","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wrWOqjLQXAYn-Pf6HQjP8","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"7brHf3M6AJaPK9uMKoUpa","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OkHt32E7YsfOG-innaVOT","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"93XVeA38tDNiJb3yI07Pa","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OTKgQU8g1G4R3SL62-MZ6","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"jem0OiGFZOYyXgktsugmH","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this srite (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Jg18GxDtxv1dv_MlAiUNZ","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"4S8U18Sc6A5L7MCRlmcDj","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"zxJkYbAtTa2YNbs5T9rod","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"eMjOGv92OVHpzkM7gpqck","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"BeJJDBObojdCPlPbhd7-V","name":"Stage","brief":"","see":["state"],"type":"ClassDoc","description":"<p>a default &quot;Stage&quot; object.\nevery &quot;stage&quot; object (title screen, credits, ingame, etc...) to be managed\nt...","members":[{"id":"nK8pHIS4166cD_YiT3yek","name":"ambientLight","brief":"","access":"public","defaultValue":"\"#000000\"","scope":"instance","see":["Light2d"],"type":"PropertyDoc","description":"<p>an ambient light that will be added to the stage rendering</p>"},{"id":"pdWcp1L-Hw8q6oFTL1OD_","name":"cameras","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The list of active cameras in this stage.\nCameras will be renderered based on this order defined in this list.\nOnly the &q..."},{"id":"sYdb7c3Spnrax6ARKjT6m","name":"lights","brief":"","access":"public","examples":[{"caption":"","code":"\n // create a white spot light\n var whiteLight = new me.Light2d(0, 0, 140, \"#fff\", 0.7);\n // and add the light to this current stage\n this.lights.set(\"whiteLight\", whiteLight);\n // set a dark ambient light\n this.ambientLight.parseCSS(\"#1117\");\n // make the light follow the mouse\n me.input.registerPointerEvent(\"pointermove\", me.game.viewport, (event) => {\n    whiteLight.centerOn(event.gameX, event.gameY);\n });\n"}],"scope":"instance","see":["Light2d","Stage.ambientLight"],"type":"PropertyDoc","description":"<p>The list of active lights in this stage.\n(Note: Canvas Renderering mode will only properly support one light per stage)</p>"},{"id":"7_3zl1nqKODIfyU2kjzem","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"zvr1UQ0mXLQETEa_YVyY1","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"settings","optional":true,"description":"<p>The stage` parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.cameras","optional":true,"default":"[new me.Camera2d()]","description":"<p>a list of cameras (experimental)</p>","dataType":{"tokens":[{"value":"Array<Camera2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"settings.onResetEvent","optional":true,"description":"<p>called by the state manager when reseting the object</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.onDestroyEvent","optional":true,"description":"<p>called by the state manager before switching to another state</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"f86BXd6W7RZK1PRkC1xSa","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDestroyEvent function<br>\ncalled by the state manager before switching to another state</p>","params":[],"returns":[]},{"id":"E4c-743BVDmu0xvgb3RCP","name":"onResetEvent","brief":"","scope":"instance","see":["state#change"],"type":"MethodDoc","description":"<p>onResetEvent function<br>\ncalled by the state manager when reseting the object\nthis is typically where you will load a lev...","params":[{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>optional arguments passed when switching state</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]}]},{"id":"ovYR-U1fMpnPQOhNMQ9Je","name":"Text","brief":"","type":"ClassDoc","description":"<p>a generic system font object.</p>","extends":["Renderable"],"members":[{"id":"AImPlh7qKWtArI6GaUbLS","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"Qc2ikAEetHw50hkaa73by","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"kE6bkRfGwN8PudP8ohI4c","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"Aeqil4vVltncDGQxnIfPV","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"pc6EVI8rE6N9LrxlC50BS","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"EBAY8n31Kyd9s1HSrcjQO","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"6IPia8aRnLaDvFUo6YJzM","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"IzCLfj4fzsF8G4PH7H3cv","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"3BZa52e1devIunzMlX94j","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"M8OPyLRkDaLYyLP8Euc-m","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"05VXrjSVJy7Om6KMWqT__","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"yLvWCihj9WEWdwGiH_iS8","name":"fillStyle","brief":"","access":"public","defaultValue":"black","scope":"instance","type":"PropertyDoc","description":"<p>defines the color used to draw the font.<br></p>"},{"id":"Q64xTlpSqmodTt80E_HOa","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"a44rXOCPPg88nbiyXTCZc","name":"fontSize","brief":"","access":"public","defaultValue":"10","scope":"instance","type":"PropertyDoc","description":"<p>the font size (in px)</p>"},{"id":"ffh-KGcbBi3PJPBPvSWAm","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"7AizJqQfI3Pxj6AjD-R0k","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"zLuhMxZP4_4-smQP59n2b","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"6Eqho0z2gJcuCWpW8mEd-","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"UrS-xRp24pwMT28eHzxTg","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"euh0gytl30Ii9hJRywYKX","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"JLeDiDINucxBLXPgpmBFe","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"CilFu0FSYVzzUSG5JdmwL","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"VtCJYAq7qdgM_CdQUAF04","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"WPJ0FeetJLG66TG8xO_TP","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"6PYWt6xs7ZtY539YoHEPG","name":"lineHeight","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Set the line spacing height (when displaying multi-line strings). <br>\nCurrent font height will be multiplied with this va..."},{"id":"QcPqC3RsfDIy7CxIyS8Db","name":"lineWidth","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>sets the current line width, in pixels, when drawing stroke</p>"},{"id":"Eo4oSSE1hp5T2Kz0Wq9gJ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"GKktcSD5tjGpc1BLxi_xI","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"VJp-QW_DVj51D2goQWMHx","name":"offScreenCanvas","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether to draw the font to a indidividual offscreen canvas texture first <br>\nNote: this will improve performances when u..."},{"id":"sqd_2QAhnCkPFcf59tZCs","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"1KgcylfXLQDuXLG2rC2aj","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"YgAG55N3JONiP17ztJIPr","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"U8cUkQz37g2JXk6yjNdGv","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"VUI9jb1VkZYgFGCY6P1Z7","name":"textAlign","brief":"","access":"public","defaultValue":"\"left\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the default text alignment (or justification),<br>\npossible values are &quot;left&quot;, &quot;right&quot;, and &quot;..."},{"id":"ad-1HmP11ZGA36jIS1L1t","name":"textBaseline","brief":"","access":"public","defaultValue":"\"top\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\npossible values are &quot;top&quot;, &quot;hang..."},{"id":"4mxysaPox3HQ4OagOjA8V","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"VkgLdJ-Fn99KHFxaOKhpg","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"DPxW2q6joXw-IkCYT8NCo","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"hvG_MplvXIFRevVBrR-Qr","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"u3ndq4eqVJe5NyNnpxu-W","name":"wordWrapWidth","brief":"","access":"public","defaultValue":"-1","scope":"instance","type":"PropertyDoc","description":"<p>the maximum length in CSS pixel for a single segment of text.\n(use -1 to disable word wrapping)</p>"},{"id":"MnjQj2peF9ClM8TvpHFY0","name":"_text","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>the text to be displayed</p>"},{"id":"O1eDTjR7RFQsC1o7-UMas","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"nauCHJ2DaKGZTy4__iAfQ","name":"bold","brief":"","scope":"instance","type":"MethodDoc","description":"<p>make the font bold</p>","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"y-q6is9PFlvedMN-IJWzt","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"JtkAwqe6TzCL0unEK5tDa","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"kDJmdPMX2RymXTJTg_MEp","name":"constructor","brief":"","examples":[{"caption":"","code":"\n var font = new me.Text(0, 0, {font: \"Arial\", size: 8, fillStyle: this.color});\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>the text configuration</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.font","description":"<p>a CSS family font name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.size","description":"<p>size, or size + suffix (px, em, pt)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"settings.fillStyle","optional":true,"default":"\"#000000\"","description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.strokeStyle","optional":true,"default":"\"#000000\"","description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.lineWidth","optional":true,"default":"1","description":"<p>line width, in pixels, when drawing stroke</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.textAlign","optional":true,"default":"\"left\"","description":"<p>horizontal text alignment</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.textBaseline","optional":true,"default":"\"top\"","description":"<p>the text baseline</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.lineHeight","optional":true,"default":"1.0","description":"<p>line spacing height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.0, y:0.0}","description":"<p>anchor point to draw the text at</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.offScreenCanvas","optional":true,"default":"false","description":"<p>whether to draw the font to an individual &quot;cache&quot; texture first</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"settings.wordWrapWidth","optional":true,"description":"<p>the maximum length in CSS pixel for a single segment of text</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.text","optional":true,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[]},{"id":"u-srsozKpQyLJVa1FiwyL","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pcQjPD1y-LICdixxQHtrX","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PpKoDUZyBKdZ2duDupqVe","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"WNLl-9Gn1Gd7lYCRdQtaq","name":"draw","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw a text at the specified coord</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"stroke","optional":true,"default":"false","description":"<p>draw stroke the the text if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"-qLxCYQsHuSzFNW3wJplJ","name":"drawStroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw a stroke text at the specified coord, as defined <br>\nby the <code>lineWidth</code> and <code>fillStroke</code> prope...","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DaT9Kk7E3CyCFA4nqjOQl","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"L2DSNMLudqCRZsbRwHeq2","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"g9Ky-44CjbOKhbK95iU0G","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cSSuTr523vNpwHERuR7Lx","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"xlHNT9oCpQ6kZ_fybPA4B","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"BzpkEDFPo8mOa_uJ0MNTN","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"lnMPEIgrJe1P-Oo8DdbwW","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"BXkCUCvl8JxUGOYKSSO8S","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AzdBd3S4bX4z54gV2il2d","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JSfYBUAE88II2IvXOsr03","name":"italic","brief":"","scope":"instance","type":"MethodDoc","description":"<p>make the font italic</p>","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"REtMZvEZUJRJvhvy2L1Lg","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"yU-elks3x9mhlK7OmTjdy","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in pixels</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>reference to the active renderer</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a TextMetrics object defining the dimensions of the given piece of text</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"Smt3Uce47b7WFltQZUL4C","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0lXgUAtqDAS7j8TM-dWp9","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"klheayAFpRNW6cRazsemu","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Mx05bNbVWggQjTVnfkitS","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"UilEj2DDNtS2OW8nlzG8g","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"d2GMhHJkVKTxAdTow5luf","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"m7nR6dBgMSSPc0MfOg-16","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Qsgg_glb3v61s2QSTIROY","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"mq1L5oajw521IkZhGBN52","name":"setFont","brief":"","examples":[{"caption":"","code":"\n font.setFont(\"Arial\", 20);\n font.setFont(\"Arial\", \"1.5em\");\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the font family and size</p>","params":[{"identifier":"font","optional":false,"description":"<p>a CSS font name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"size","optional":true,"default":"10","description":"<p>size in px, or size + suffix (px, em, pt)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"81ArnlRRBFY0vQwqs292g","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"KjA3WSbRteU9J3xu9wDFO","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"oO-otaoGYuG7oSjCXj8i_","name":"setText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the text to be displayed</p>","params":[{"identifier":"value","optional":false,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"number | string | Array<string>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | string | %2<string>"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"OyTa_3cJbdm8QgLfyL5vy","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"m0CKB0X1vfoXmZPer59sX","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"xW36eZ64d7qPbyUpH8Pjz","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YQ4XpihepYudIZAqRreEn","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"v2Rg_VCAzoZg0ndCkQ7To","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ZPk5jSEkBEpb70BaMQyPQ","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"BG91X5RN3OC3ZBhuhIr1T","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PnSG0872Nd_ce9mvqoxNt","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"tnIwB-4j2abqarPq3-p8Y","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"8i7dh-fe90y4LyyX_QnwJ","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"zPEEueZJlBnB3heaJS7n8","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"aeu-rVYvE66lU_gkO0Hh8","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"kkREGaLtTO6PQ-jwcWm_2","name":"TextMetrics","brief":"","type":"ClassDoc","description":"<p>a Text Metrics object that contains helper for text manipulation</p>","extends":["Bounds"],"members":[{"id":"8EKwVVNl5dKg_5U6uNPyS","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this TextMetrics object</p>"},{"id":"lNnqJv-Jg5I-E-Zi30D1F","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"1Fqrxh5I1ITSMxAMjJlNb","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"2qi9YkVl5mZPOlRfxY22R","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"6XvCQwNF6fzSiCynop60g","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"83oFPv4XVHHRNk5z-3Na-","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"SE2Pw0HTXHMmAluCNYx2G","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"xvOp5O07AcsaGNTQ5BuE4","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"8KDBqYFVD9Fc6m35fjHaG","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"mljog7D_KbK9bJgMYsKWV","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"lJ1jjTUmZqG9cVwZmzamr","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"q98AbdLj2Wx8f8tdXh_97","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"M3lDbNobTmUef4jbV-67P","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ibkxsNRIAgotqszryCAzy","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"0VzwHAyET078PczXdN5wB","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"hDjLSKpzeVWVQjrfMYn2u","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"ozD-oEFSm-Swv8HCikDX9","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"O4fFvoajiO-vipnf5jSXo","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"ancestor","optional":false,"description":"<p>the parent object that contains this TextMetrics object</p>","dataType":{"tokens":[{"value":"Text | BitmapText","kind":"canonical"},{"value":"Text","kind":"link"},{"value":"BitmapText","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"bbXgMcuBYvkM97iHZ5fvE","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"o6lnKV0d-gVzm0_BYNaaG","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TvC_5JbnTwLKXvZXuBfVo","name":"lineHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the height of a segment of inline text in CSS pixels.</p>","params":[],"returns":[{"description":"<p>the height of a segment of inline text in CSS pixels.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"tYgAe4ulj87EcTako06hA","name":"lineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the width of the given segment of inline text in CSS pixels.</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the width of the given segment of inline text in CSS pixels.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"KllcAYPC-y9WwN3dsMhB9","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in CSS pixels</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"2MI2xbDCBTiw71v7rvw93","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"W-0REWbHVCko_893zVeis","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-Qj0GqnbnaxHDC9vhHydm","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wIwJUjF1Yg5IwvWOplSv1","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9TFbnn9eZ115MQfcpFUYT","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"4JT0uk9Oryy4cyk6OOU4T","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"qWzOASx8d2jpTSoGhvd-l","name":"wordWrap","brief":"","scope":"instance","type":"MethodDoc","description":"<p>wrap the given text based on the given width</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be wrapped</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}},{"identifier":"width","optional":false,"description":"<p>maximum width of one segment of text in css pixel</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>an array of string representing wrapped text</p>","dataType":{"tokens":[{"value":"Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<string>"}}]}]},{"id":"7mVIekUOgKV7k2drHA4bd","name":"TextureAtlas","brief":"","type":"ClassDoc","description":"<p>A Texture atlas class, currently supports : <br></p>\n<ul>\n<li>[TexturePacker]{@link http://www.codeandweb.com/texturepacke...","members":[{"id":"VZ5SJDphHfHUbGk7gM2D9","name":"addRegion","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add a region to the atlas</p>","params":[{"identifier":"name","optional":false,"description":"<p>region mame</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":false,"description":"<p>x origin of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y origin of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the created region</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"w9yUOHFH_8WYv_hVqs58u","name":"addUVs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add uvs mapping for the given region</p>","params":[{"identifier":"atlas","optional":false,"description":"<p>the atlas dictionnary where the region is define</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"name","optional":false,"description":"<p>region (or frame) name</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"w","optional":false,"description":"<p>the width of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>the height of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the created region UVs</p>","dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"FdS5y9Cc2qEZglgkVkLeS","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a texture atlas from a JSON Object\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\")\n );\n\n // create a texture atlas from a multipack JSON Object\n game.texture = new me.TextureAtlas([\n     me.loader.getJSON(\"texture-0\"),\n     me.loader.getJSON(\"texture-1\"),\n     me.loader.getJSON(\"texture-2\")\n ]);\n\n // create a texture atlas for a spritesheet with an anchorPoint in the center of each frame\n game.texture = new me.TextureAtlas(\n     {\n         framewidth : 32,\n         frameheight : 32,\n         anchorPoint : new me.Vector2d(0.5, 0.5)\n     },\n     me.loader.getImage(\"spritesheet\")\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"atlases","optional":false,"description":"<p>atlas information. See {@link loader.getJSON}</p>","dataType":{"tokens":[{"value":"object | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"object | %1<object>"}},{"identifier":"src","optional":true,"default":"atlas.meta.image","description":"<p>Image source</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | string | Array<HTMLImageElement> | Array<HTMLCanvasElement> | Array<string>","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | %2 | string | %3<%4> | %5<%6> | %7<string>"}},{"identifier":"cache","optional":true,"default":"false","description":"<p>Use true to skip caching this Texture</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"QjCgwME761WG3hhzl81ey","name":"createAnimationFromName","brief":"","examples":[{"caption":"","code":"\n // create a new texture object under the `game` namespace\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\"),\n     me.loader.getImage(\"texture\")\n );\n\n // create a new Animated Sprite\n var sprite = game.texture.createAnimationFromName([\n     \"walk0001.png\", \"walk0002.png\", \"walk0003.png\",\n     \"walk0004.png\", \"walk0005.png\", \"walk0006.png\",\n     \"walk0007.png\", \"walk0008.png\", \"walk0009.png\",\n     \"walk0010.png\", \"walk0011.png\"\n ]);\n\n // define an additional basic walking animation\n sprite.addAnimation (\"simple_walk\", [0,2,1]);\n // you can also use frame name to define your animation\n sprite.addAnimation (\"speed_walk\", [\"walk0007.png\", \"walk0008.png\", \"walk0009.png\", \"walk0010.png\"]);\n // set the default animation\n sprite.setCurrentAnimation(\"simple_walk\");\n // set the renderable position to bottom center\n sprite.anchorPoint.set(0.5, 1.0);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Create an animation object using the first region found using all specified names</p>","params":[{"identifier":"names","optional":false,"description":"<p>list of names for each sprite\n(when manually creating a Texture out of a spritesheet, only numeric values are authorized)</p>","dataType":{"tokens":[{"value":"Array<string> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<string> | %3<%2>"}},{"identifier":"settings","optional":true,"description":"<p>Additional settings passed to the {@link Sprite} contructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"5eWPWftwphANXIl26--RC","name":"createSpriteFromName","brief":"","examples":[{"caption":"","code":"\n // create a new texture object under the `game` namespace\n game.texture = new me.TextureAtlas(\n    me.loader.getJSON(\"texture\"),\n    me.loader.getImage(\"texture\")\n );\n ...\n ...\n // create a new \"coin\" sprite\n var sprite = game.texture.createSpriteFromName(\"coin.png\");\n // set the renderable position to bottom center\n sprite.anchorPoint.set(0.5, 1.0);\n ...\n ...\n // create a 9-slice sprite\n var dialogPanel = game.texture.createSpriteFromName(\n    \"rpg_dialo.png\",\n    // width & height are mandatory for 9-slice sprites\n    { width: this.width, height: this.height },\n    true\n );\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Create a sprite object using the first region found using the specified name</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the sprite</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings","optional":true,"description":"<p>Additional settings passed to the {@link Sprite} contructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"nineSlice","optional":true,"default":"false","description":"<p>if true returns a 9-slice sprite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"Sprite | NineSliceSprite","kind":"canonical"},{"value":"Sprite","kind":"link"},{"value":"NineSliceSprite","kind":"link"}],"template":"%1 | %2"}}]},{"id":"jfrlXMWGcF4ZHEnDtxyhF","name":"getAtlas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the default or specified atlas dictionnary</p>","params":[{"identifier":"name","optional":true,"description":"<p>atlas name in case of multipack textures</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"gi3PF0bMI1SZcSjeOqjXG","name":"getFormat","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the format of the atlas dictionnary</p>","params":[],"returns":[{"description":"<p>will return &quot;texturepacker&quot;, or &quot;ShoeBox&quot;, or &quot;melonJS&quot;, or &quot;Spritesheet (fixed cell si...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"Y0Wjp5yOa3w81-9U8sTKr","name":"getRegion","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a normalized region (or frame) information for the specified sprite name</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the sprite</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"atlas","optional":true,"description":"<p>name of a specific atlas where to search for the region</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"xb0mrCuAKP_nz1SiXDpKJ","name":"getTexture","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the source texture for the given region (or default one if none specified)</p>","params":[{"identifier":"region","optional":true,"description":"<p>region name in case of multipack textures</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"0QQWcaPbscLqDtlyTqI_7","name":"getUVs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the uvs mapping for the given region</p>","params":[{"identifier":"name","optional":false,"description":"<p>region (or frame) name</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>region Uvs</p>","dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]}]},{"id":"FoZ7iAJR_rn2lOHGUI6kA","name":"Tile","brief":"","type":"ClassDoc","description":"<p>a basic tile object</p>","extends":["Bounds"],"members":[{"id":"bOsDPfiVOO2PoT0KcNa4m","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"g8x_QhgN6EhgSbg0jOUcw","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"TQ7RS_3WCP0Ys63mivGdx","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"IKv65b6EDWGVO4adXrn14","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"4GhJZeNPZ4Bw4syrDm-kL","name":"flipped","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Global flag that indicates if the tile is flipped<br></p>"},{"id":"JCI86-jBRhxUN1fJElixK","name":"flippedAD","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped anti-diagonally<br></p>"},{"id":"XE86WZgTnbuNGnvuvnWI2","name":"flippedY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped vertically<br></p>"},{"id":"XMi1sSXbR50H43iCIHDvN","name":"flipX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped horizontally<br></p>"},{"id":"uHJMneEDxc8nPuwjlsW75","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"xDUQfob6AorfLhwX1lXcx","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"YitBCO7Ij6aJ8EKYd8yrk","name":"tileId","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tileId</p>"},{"id":"N8e9HTGSPI8PFIOzAyJZw","name":"tileset","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tileset</p>"},{"id":"ymIytIZnp2-5hd1AViYvI","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"dGhQi6DUgq9CPWgMV48LH","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"g1_eJ3LHBO0N0mVqfIBSj","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"IsAfHu_O4vOyPC_mQIqUQ","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"BN9L5F9l1F3itY25qksGB","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"-FGkE1OSZOsaxO21BOG2B","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"EMnEj6tA6xHlvWXLgIXBb","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"rme5iMSvxEmZXZJRUWBlx","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"0brDBfZy-qL0i1itnFuyP","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"GoGLfJvS-5cOg0hvO8j86","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"flRRxkrK904458wxzWmCp","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x index of the Tile in the map</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y index of the Tile in the map</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"gid","optional":false,"description":"<p>tile gid</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileset","optional":false,"description":"<p>the corresponding tileset object</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"EaCltrpD8qelTD8L6-FgB","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"YA7bb13And3udcBF3cCra","name":"getRenderable","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a renderable object for this Tile object</p>","params":[{"identifier":"settings","optional":true,"description":"<p>see {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>a me.Sprite object</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"NA_sLEppT2-6JMjk4WH-b","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1JiT4NRgr3jUT-Pwm3H7U","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vQyk5DtAckHu7Xi-fpHR_","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"p211W7VnehwZvX3s2xceL","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"qteT83qiqkyTg25awWfKR","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"KfAQkeOAV5Mq4UpcdOSCR","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"cF9BeweZyPyhuzEtYUmjg","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]}]},{"id":"TM_O1fNeNaJkojaP-NYcn","name":"Timer","brief":"","see":["{@link timer} the default global timer instance"],"type":"ClassDoc","description":"<p>a Timer class to manage timing related function (FPS, Game Tick, Time...)</p>"},{"id":"4WAWRm4q-M75g1oRpz8jI","name":"TMXHexagonalRenderer","brief":"","type":"ClassDoc","description":"<p>an Hexagonal Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"Mz3SqOwDP9DvogQ9j3T5F","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"R1ir_RZOhqRj352zGhIJF","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"uvmZyfLb8XnmW-jEaO5V9","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"3dGacykcgCHkc8t0KiAnh","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"J17K8FFVIk5veqQvc0I0u","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"dW2qVTG48uStCpvvNWV12","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"rlGW5TI2wUDLaAk_ylG5t","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"LIYjJu5dm7RHOBKn4sQ1k","name":"TMXIsometricRenderer","brief":"","type":"ClassDoc","description":"<p>an Isometric Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"iivdmTG_Vhw69brxcj-Hn","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"W0O3yyG3D9jo7N8ACd-hh","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"L8PJWibejfOJTV3xHeZdC","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Y8FsI8jdzotgLjF5axHAT","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"FRQzIx2rGXCDGgDqRHUsT","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"K-azVrNW6VG1cwizvdkD-","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4ciCvhGMKC7UPbW9ZWfpG","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"BW4AUOVonLri5pUmzpCQN","name":"TMXLayer","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Layer Object\nTiled QT 0.7.x format</p>","extends":["Renderable"],"members":[{"id":"lgzpbwTDbhNMz_n6f-D_U","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"o1CTuQiRVsPkUR2ez8tBj","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"6UglXK5Nfes25i43WhzLG","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"SfNc900cNOI7o5lBakB32","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"HzuOGeXyk7kVvPRCR-g9r","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"qxut_gctRmkIp9tXH-XVA","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"oE5Z1GMKnElJfOc2MZe9n","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"dQ1_N1VvZSrn6kwtZ68yz","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"m7r9xjzDZJa3lzal-R_Ha","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"tAXY1TFehFUMtRY0w9uoZ","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"bsXNNa2NFOVv5H4ZQC2lJ","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"85z3qmwIk0FcFShRHpSny","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"PugwFC7f6by6Q5hfyXk3y","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"xWoXU38yltFbGhJp8ImMS","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"Dnn2Rizjgg0FdI4St5hZX","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"IC6FR6Ss0ewW2yHQ1xclH","name":"isAnimated","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Layer contains tileset animations</p>"},{"id":"AzUVZ1JIky-Nx1on1av4B","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"d4RUXMMF_ljFeEJM60tjY","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"KwPUaJAODjnOsbxVJ9ims","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"Auu6ae6ajpqmxko4qXzCj","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"a41NHB0MqGew5meLIrlwQ","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"AO4PTVLXLlxBPDwJ4z25T","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"Dv8khDeaoQMAkUggIG5q1","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"lX7w8tyvCs8Ug0rGEKZgu","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"PbWkYtQcoTB2OXgRuzXns","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"vUUGgJNhWOuXc9MWG_58Y","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"MdMwbWgsuhwypWtdW5dYL","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"o1QDmVvaQlxh-jJU90wrW","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"IorA6qOgY70ZoU2JSM1VV","name":"renderorder","brief":"","access":"public","defaultValue":"\"right-down\"","scope":"instance","type":"PropertyDoc","description":"<p>the order in which tiles on orthogonal tile layers are rendered.\n(valid values are &quot;left-down&quot;, &quot;left-up&qu..."},{"id":"c_nXRCQ8XRcc67fbpouXV","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"ue3O5rlcU5Mox4w82aT5c","name":"tilesets","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The Layer corresponding Tilesets</p>"},{"id":"UKY2rSvhvuD0vOnePLXBD","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"Nc1opAvv2h8HivdMGs_qX","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"goLRS09N-MCnFacSzg_-j","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"Xl9g19T-_dYA9NtIw3bny","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"tIxnUuoMJqTumgytgQa-e","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"c4vHzFiY066U-QatHql-k","name":"cellAt","brief":"","access":"public","examples":[{"caption":"","code":"\n // return the first tile at offset 0, 0\n var tile = layer.cellAt(0, 0);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Return the Tile object at the specified tile coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>x position of the tile (in Tile unit)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>x position of the tile (in Tile unit)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"boundsCheck","optional":true,"default":"true","description":"<p>check first if within the layer bounds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tile or null if there is no defined tile at the position or if outside of the layer bounds</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"4SerZkAfC6qcS40eixNvT","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"-XtTaQvXpUURyJnbJVRXV","name":"clearTile","brief":"","access":"public","examples":[{"caption":"","code":"\n me.game.world.getChildByType(me.TMXLayer).forEach(function(layer) {\n     // clear all tiles at the given x,y coordinates\n     layer.clearTile(x, y);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>clear the tile at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in map coordinates: row/column)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in map coordinates: row/column)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_O6NZMU0C1idONkLzk4S3","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Z9OIRbzGrurbTbOezinNa","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>layer data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#layer})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"data","optional":false,"description":"<p>layer data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#layer})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"tilewidth","optional":false,"description":"<p>width of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileheight","optional":false,"description":"<p>height of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"orientation","optional":false,"description":"<p>&quot;isometric&quot; or &quot;orthogonal&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"tilesets","optional":false,"description":"<p>tileset as defined in Tiled</p>","dataType":{"tokens":[{"value":"TMXTilesetGroup","kind":"canonical"},{"value":"TMXTilesetGroup","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":false,"description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"d0qo-4F7d2DwiQIexG3qM","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VojoSP0Ii4dxAwd1B-f1Y","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Z5-Fymo5UB4iL-4YKMlGb","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NRY0VL3AvhcHhqn79IJ6P","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"NGvAdhQSZ0xJqQ_I81uST","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"WxpliUPwZ46zEwvBrO5xa","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"fcP9PufKGYA74Y_DLERIY","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"vwdwU21WmwoNjj0XKO5tg","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"F6W1Ym2RNvcI3EsgcbK7l","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"ddr0p23NkN8lEfqVWS6P7","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dbHos3AOjOrDgjE7jlhqy","name":"getRenderer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the layer current renderer object</p>","params":[],"returns":[{"description":"<p>renderer</p>","dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}]},{"id":"OTs9eAfs4Dr8c1m0IqVLk","name":"getTile","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the TMX Map Layer called \"Front layer\"\n var layer = me.game.world.getChildByName(\"Front Layer\")[0];\n // get the tile object corresponding to the latest pointer position\n var tile = layer.getTile(me.input.pointer.x, me.input.pointer.y);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Return the Tile object at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tile or null if there is no defined tile at the coordinate or if outside of the layer bounds</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"QtY9oqM8ywjzZCBuiiWJw","name":"getTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>assign the given Tile object to the specified position</p>","params":[{"identifier":"tile","optional":false,"description":"<p>the tile object to be assigned</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>x coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the tile object</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"QPZfsR3UF9mC6g5zmVQ4t","name":"getTileId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the TileId of the Tile at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>TileId or null if there is no Tile at the given position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7xbPoHZ794Ph4PYTwLE2y","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4zlR33NhKLc-kCJgLD2NU","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"otePAs7mxw1_RKz7NpdT3","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"azpcuOS66VVdDuLt14HTQ","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5vmvXxH4tovr89Wh5j35O","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"2UYJ4KWeW295HNn6rMyJo","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KLKXyozTiJYZUfbl3IGtr","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-bG0mB1FPQ0WNA7mgSj1_","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"65MzQudwyn0lGSvjoS_Db","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6FSKuIGVptdpnVk48iqg_","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"8_zmgwJab-25eVG_2eW2a","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3jihXcIV_n8xu09xenOpW","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"XViKn9_x5oCzcyRaoFodp","name":"setRenderer","brief":"","access":"public","examples":[{"caption":"","code":"\n // use the parent map default renderer\n var layer = new me.TMXLayer(...);\n layer.setRenderer(map.getRenderer());\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Set the TMX renderer for this layer object</p>","params":[{"identifier":"renderer","optional":false,"dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"c-AaWjaX_Q4aRhB8PAOwd","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ORAgFOFyYz3OzzVp5zog9","name":"setTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a new the Tile object corresponding to the given tile id</p>","params":[{"identifier":"tileId","optional":false,"description":"<p>tileId</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the tile object</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"hgT7JF-KXFv6pNYsrECW4","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BT0rVLlp0UxTHDiw58wCu","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"V8BAnJCps0Itt1fStam2g","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"bd7psBfXw8fX2skuLKgy5","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"FbVffS2vLqn4raCD6GpiY","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PhhPyBxe-WoqPdGrQm5Pg","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"-K6rB0FxfLifUOnQKQ9g_","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"f4kOY6NxXkA-jwBrvD7FB","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"mAhPr0McrIGGBUo8vagEo","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"l_i1a18R1CNnh69q7cbgI","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"r8Vtqv0t5RP74aLnWSjIz","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"soJSu6BN963NqiZ5rNDgi","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WF7RfsLeLNQrf-yayX5Jf","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"JHhPr2d65fICfLMOjz0k6","name":"TMXOrthogonalRenderer","brief":"","type":"ClassDoc","description":"<p>an Orthogonal Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"bFzLGG_p1PQwedlWzTxyd","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SDHQ7igCujVTf2A2x4W4j","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"lHdg00WFxfn-pRF93udBo","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"L8j5GDziA6aFWY5W8WooZ","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"gNYTCaTmHDp2A31c9zxzk","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the map bounding rect</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"qrpx1-P5IHeuzt0qIvIGj","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"GIi5I40ZLQzZS2739fe0R","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"D9qaE6DuGPrUoBnJCmgyc","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"tLTtIO3oJoHBSP8ye8r5e","name":"TMXRenderer","brief":"","type":"ClassDoc","description":"<p>The map renderer base class</p>","members":[{"id":"5OFdJxNTMdz1j0vTSNmp0","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kTToJKgN2fi2Ma-fC8OmL","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"cols","optional":false,"description":"<p>width of the tilemap in tiles</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"rows","optional":false,"description":"<p>height of the tilemap in tiles</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tilewidth","optional":false,"description":"<p>width of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileheight","optional":false,"description":"<p>height of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"aueSW1lEPccBcLqWngVgc","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"I7VwmZaEaS0-8Ldsn_feg","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"MqHilFm3RuuR6haeVQ4G5","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the map bounding rect</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"-MF3AFM_tQwjy5lalCHLu","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"C3ZgCUZA1yflDxW3fI5tv","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"7plPm3ubvYEInKm4zhE1E","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"MiTaWGeFbGCU3-Yrgobxj","name":"TMXStaggeredRenderer","type":"ClassDoc","description":"<p>a Staggered Map Renderder</p>","extends":["TMXHexagonalRenderer"],"members":[{"id":"D_ar_yTthtzV9wJrIlyGm","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MdGwMbNBYiO8Cf_PmSCIv","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[]},{"id":"Bl3O6fPs1G3eL9it0iMPJ","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"1GFF2UdqT6bb8qYQBNyjN","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"AR9Qo3feOenoRamsAuJG7","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"MPirfi7XXfrmpQsNkmvLn","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"dExsbXu-22kN4ZED1kskW","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"d8N6siyzH4TjASrc_5vbp","name":"TMXTileMap","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Map Object\nTiled QT +0.7.x format</p>","members":[{"id":"eJLBwR_kIUB-Ml8yXYHev","name":"cols","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>width of the tilemap in tiles</p>"},{"id":"5mDl2Jzn3aEtEI0GllJSa","name":"infinite","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>is the map an infinite map</p>"},{"id":"GtR3F9pVQqUmQV3aiQkNa","name":"name","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>name of the tilemap</p>"},{"id":"mMCP34kcHnEOmnm3_9Bfx","name":"orientation","brief":"","access":"public","defaultValue":"\"orthogonal\"","scope":"instance","type":"PropertyDoc","description":"<p>the map orientation type. melonJS supports “orthogonal”, “isometric”, “staggered” and “hexagonal”.</p>"},{"id":"CzvpGZaWaqL88ied_glG2","name":"renderorder","brief":"","access":"public","defaultValue":"\"right-down\"","scope":"instance","type":"PropertyDoc","description":"<p>the order in which tiles on orthogonal tile layers are rendered.\n(valid values are &quot;left-down&quot;, &quot;left-up&qu..."},{"id":"Crsh10cGcfkihmYWhl-lQ","name":"rows","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>height of the tilemap in tiles</p>"},{"id":"pBWZ1HO3VDLBLvZnj_eXM","name":"tiledversion","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The Tiled version used to save the file (since Tiled 1.0.1).</p>"},{"id":"4Sw9nb6fKQaX55h3zgC4X","name":"tileheight","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>Tile height</p>"},{"id":"XGAozFbT2eO_f4VKGYnfi","name":"tilewidth","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>Tile width</p>"},{"id":"cWFQTpwVaYTbt1QI9A3_6","name":"version","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the TMX format version</p>"},{"id":"U8v2K1wWB63YOt-EGZ4Jl","name":"addTo","brief":"","access":"public","examples":[{"caption":"","code":"\n // create a new level object based on the TMX JSON object\n var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n // add the level to the game world container\n level.addTo(me.game.world, true, true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>add all the map layers and objects to the given container.\nnote : this will not automatically update the camera viewport</p>","params":[{"identifier":"container","optional":false,"description":"<p>target container</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"flatten","optional":true,"default":"true","description":"<p>if true, flatten all objects into the given container, else a <code>me.Container</code> object will be created for each co...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"setViewportBounds","optional":true,"default":"false","description":"<p>if true, set the viewport bounds to the map size, this should be set to true especially if adding a level to the game worl...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"QExTFUT1Ay35JbeFuHPxJ","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a new level object based on the TMX JSON object\n var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n // add the level to the game world container\n level.addTo(me.game.world, true);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"levelId","optional":false,"description":"<p>name of TMX map</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"data","optional":false,"description":"<p>TMX map in JSON format</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"yM8uB1bQ3Ef1luN3reemj","name":"destroy","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>destroy function, clean all allocated objects</p>","params":[],"returns":[]},{"id":"6F3h1Y7uzJ75TJ9ac-jFQ","name":"getLayers","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all the existing layers</p>","params":[],"returns":[{"description":"<p>Array of Layers</p>","dataType":{"tokens":[{"value":"Array<TMXLayer>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1<%2>"}}]},{"id":"rEsabKT3oQYrRK_24LW3i","name":"getObjects","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return an Array of instantiated objects, based on the map object definition</p>","params":[{"identifier":"flatten","optional":true,"default":"true","description":"<p>if true, flatten all objects into the returned array.\nwhen false, a <code>me.Container</code> object will be created for e...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Array of Objects</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"PBiXm4w8MX-eOjnDR8X5K","name":"getRenderer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the map default renderer</p>","params":[],"returns":[{"description":"<p>a TMX renderer</p>","dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}]}]},{"id":"o1ie7EOwqSKhBoD6ONFQp","name":"TMXTileset","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Set Object</p>","members":[{"id":"lV0n338_QyNvIPOrpnnxl","name":"isAnimated","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Tileset contains animated tiles</p>"},{"id":"1YpwCtkhP2PH5ofdWn5kF","name":"isCollection","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the tileset is a &quot;Collection of Image&quot; Tileset</p>"},{"id":"1_KzieeI1NleXdIOcGNOL","name":"_lastUpdate","brief":"","access":"private","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Remember the last update timestamp to prevent too many animation updates</p>"},{"id":"XG1j6r8HL_8DrquvEYd4X","name":"animations","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>Tileset animations</p>"},{"id":"tZf9KO5Ld_xYDp-Myk06R","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"tileset","optional":false,"description":"<p>tileset data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#tileset})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"En1UNd9_IoeiakYUL5NRz","name":"contains","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the gid belongs to the tileset</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vmJrLuHqbel-UB30BDpMh","name":"getTileImage","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile image from a &quot;Collection of Image&quot; tileset</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding image or undefined</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}}]},{"id":"yXc4t2xqMMdsq8DVnavf8","name":"getTileProperties","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the properties of the specified tile</p>","params":[{"identifier":"tileId","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"ApQpfO90xY6k9QcKo60g3","name":"getViewTileId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Get the view (local) tile ID from a GID, with animations applied</p>","params":[{"identifier":"gid","optional":false,"description":"<p>Global tile ID</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>View tile ID</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"LzZGoc6JNH4yk2WrbOhyx","name":"TMXTilesetGroup","brief":"","type":"ClassDoc","description":"<p>an object containing all tileset</p>","members":[{"id":"wS0azo8YGaE_pUd4hK0nr","name":"add","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>add a tileset to the tileset group</p>","params":[{"identifier":"tileset","optional":false,"dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"f6dHgSmm8FgLxD7VD5yON","name":"getTilesetByGid","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tileset corresponding to the specified id <br>\nwill throw an exception if no matching tileset is found</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tileset</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}]},{"id":"8ebcUTr6CBJ9wgcc1yKgs","name":"getTilesetByIndex","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tileset at the specified index</p>","params":[{"identifier":"i","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tileset</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}]}]},{"id":"OUhqqyqPCH4rPwgC7zw3t","name":"Trigger","brief":"","type":"ClassDoc","description":"<p>trigger an event when colliding with another object</p>","extends":["Renderable"],"members":[{"id":"PcuLlwv51-Qn2ocUtXE2x","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"mJioSqjn7FIYAzWFtG4Nd","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Ik7l_M1wXd7ZWEs0rFUt_","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"rUK2O9BthKsAtoLjzmBlQ","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"bqJykyOzCjzaCbVJM2jGh","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"iLTJq__hdhuCNg1TUts0F","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"A0i-v2Iy1wwDvEViDt3A-","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"duLOdmC38TZ_5qn_MLDwK","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"wvsoW1FHYlDPz2JhJW-iK","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"RqwaagNSffaMpJmYfzmmq","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"1EINKJ2fzTvuQY3r58a6_","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"qYUs-FA-O8bbSNJ4QcJj0","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"a_VQ95CKUgP3HZyikYBIW","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"3bwCunD5PZYTYEuTkfBu-","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"IiaDbz3B34Ood4UZXX7PT","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"onBGhdWMJI5uTzhZxYOMG","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"wP48qkduWjxxuMfExxwl_","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"2NiBzd_q6oRohuI7HwCUB","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"5m2Bo8eMHFMi3vZMlUMEk","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"Qiou5UOQqEX6z6KKCz_qh","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"xE9eWKAt10_uHvBODA6Ru","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"6Oi6CIIDvcmcV6P7zPGX4","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"J56f7ZIihdIwxvB9aVjeZ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"D1NfEmv55sJue7PPstTci","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"o4Jff5jq44uE45TSP56_W","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"Pc-WcKWiYau16hYQ8mnfC","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"E5DHeXMWNuTnW4vRab-kw","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"GRxzr-8WwjCnkZ6OwrFeP","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"mOB8mO9J2OvLQhwxuFEoB","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"JmDJoegarGAalq2Mvvt4w","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"UvVw2xiKWIl5NJcyrLsWm","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"4sZcbql4EPu9olxLyNwJZ","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"XkZhuFHhJQ8lv7A1_NSHn","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"cTlDxVZxPxSB9TgUrC8jf","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"sZAPjJV5k8ba7avyVuetO","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KmVPgs9AJgSs4fyDKPMpp","name":"constructor","brief":"","examples":[{"caption":"","code":"\n me.game.world.addChild(new me.Trigger(\n     x, y, {\n         shapes: [new me.Rect(0, 0, 100, 100)],\n         \"duration\" : 250,\n         \"color\" : \"#000\",\n         \"to\" : \"mymap2\"\n     }\n ));\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.width","optional":true,"description":"<p>width of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","optional":true,"description":"<p>height of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.shapes","optional":true,"description":"<p>collision shape(s) that will trigger the event</p>","dataType":{"tokens":[{"value":"Array<Rect> | Array<Polygon> | Array<Line> | Array<Ellipse>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1<%2> | %3<%4> | %5<%6> | %7<%8>"}},{"identifier":"settings.duration","optional":true,"description":"<p>Fade duration (in ms)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.color","optional":true,"description":"<p>Fade color</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.event","optional":true,"default":"\"level\"","description":"<p>the type of event to trigger (only &quot;level&quot; supported for now)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.to","optional":true,"description":"<p>level to load if level trigger</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.container","optional":true,"description":"<p>Target container. See {@link level.load}</p>","dataType":{"tokens":[{"value":"string | Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.onLoaded","optional":true,"description":"<p>Level loaded callback. See {@link level.load}</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.flatten","optional":true,"description":"<p>Flatten all objects into the target container. See {@link level.load}</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"settings.setViewportBounds","optional":true,"description":"<p>Resize the viewport to match the level. See {@link level.load}</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"77XFtPOlmhLGqiXO-Poy0","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2BGzt9NsADmZfOcU-Xhqq","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"FGZzugiGSdOOvqZ_BF6wm","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"poGrvrHr7ajKM7FJZOEul","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BPuZOlawAOuKk1ojjb-Sh","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"szbY-Cc6klmcfN0fc9TFO","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"aEpD2ICzgKkx9By_9sOl7","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"t4cBkX7QJS4DCtIZs5I6x","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Vf0y1A1u2-ekQhqDli3YT","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"9fHz_ADLBHAV85wkhfTfe","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5_cwa7RY6Y8XVtClYdGgf","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KV9wx-seb3_D3sEyF2Ugz","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Gz61s2-o4vjm793alQQzO","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"JlO5s_AFLbL54QTP8GBHj","name":"onCollision","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision with this trigger</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pym0P6Fj1Y2dMHvW_O3ef","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"RKlDQWF9lLq_QaYpCKw-x","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5PTRqDr9LuZIgkshngVhi","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"139z52wFLSAAJ-BdhBV_y","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"kdHkgIkSP194XFqpInz0z","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"_NL31JoFnaNRVRHVuelLU","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"t49tyn_cIwYSGUlw6pk1t","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zazOXqU9roMV_iPF_Q65t","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5MuoO2OxFwxdxCu2NQjbg","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0v2DHy0P0G_xntvYQVpNi","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"efLZA3zI7_OA1cLdHYOC3","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"MtrVyl48BUe1GFzwiSzcC","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"W2btgnsCQu0vo9bZ2ZEtE","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"p2eMbE8GQyAmScR0sAxei","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8LEPHhg4a-aKjLHB_08MH","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"8t-oM0j-ygKqlC6-bh300","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"mgdqN4xLLorZm7cVO_LrU","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"e3PTs_YF855NYf76hmzvq","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"tzojv8awSJYhxZ0CjidJl","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"NWISQ-EH3HLc3z_HF7ewx","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"-6y6EQJshllD6jwgozHQY","name":"triggerEvent","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>trigger this event</p>","params":[],"returns":[]},{"id":"TZtP-K0_cK86ts1Kyzp-X","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"qpzAR7Etz_zcR8-6k2o6Q","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"K5JZ7WffMBdh6yuV62ny4","name":"Tween","brief":"","type":"ClassDoc","description":"<p>Javascript Tweening Engine<p>\nSuper simple, fast and easy to use tweening engine which incorporates optimised Robert Penne...","members":[{"id":"oYi8h2Rau0cxhSKME7-p4","name":"Easing","brief":"","access":"public","type":"EnumDoc","description":"<p>Easing Function :<br></p>\n <p>\n Easing.Linear.None<br>\n Easing.Quadratic.In<br>\n Easing.Quadratic.Out<br>\n Easing.Quadrati..."},{"id":"zTuu7BZenzshF3zNTsgX-","name":"Interpolation","brief":"","access":"public","type":"EnumDoc","description":"<p>Interpolation Function :<br></p>\n <p>\n Interpolation.Linear<br>\n Interpolation.Bezier<br>\n Interpolation.CatmullRom\n </p>"},{"id":"SIpT8RruDoZ0pfV_4GYZH","name":"chain","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>chain the tween</p>","params":[{"identifier":"chainedTween","description":"<p>Tween(s) to be chained</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"saAPqtYsUPkw4SytOGPj4","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // add a tween to change the object pos.x and pos.y variable to 200 in 3 seconds\n tween = new me.Tween(myObject.pos).to({\n       x: 200,\n       y: 200,\n    }, {\n       duration: 3000,\n       easing: me.Tween.Easing.Bounce.Out,\n       autoStart : true\n }).onComplete(myFunc);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"object","optional":false,"description":"<p>object on which to apply the tween</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"BOm_y1xGGvIVVWSRpvzba","name":"delay","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>delay the tween</p>","params":[{"identifier":"amount","optional":false,"description":"<p>delay amount expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"5Ot6L0G_UOrlO1m_EFjqm","name":"easing","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>set the easing function</p>","params":[{"identifier":"easing","optional":false,"description":"<p>easing function</p>","dataType":{"tokens":[{"value":"Tween.Easing","kind":"canonical"},{"value":"Easing","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"SM-9lY28YmItfzG8fMtgr","name":"interpolation","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>set the interpolation function</p>","params":[{"identifier":"interpolation","optional":false,"description":"<p>interpolation function</p>","dataType":{"tokens":[{"value":"Tween.Interpolation","kind":"canonical"},{"value":"Interpolation","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"fITx9iWscHhEOAqBkvh73","name":"onComplete","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onComplete callback</p>","params":[{"identifier":"onCompleteCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"sYFIrPgyp-HRes-6bgVG3","name":"onStart","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onStart callback</p>","params":[{"identifier":"onStartCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"yNZWQGvhXpqHBRPnQDHOJ","name":"onUpdate","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onUpdate callback</p>","params":[{"identifier":"onUpdateCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"tJNvFp5o7ayc3uXC3Utrx","name":"repeat","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Repeat the tween</p>","params":[{"identifier":"times","optional":false,"description":"<p>amount of times the tween should be repeated</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"k8WvXTnwp481IGEns7ISY","name":"start","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>start the tween</p>","params":[{"identifier":"time","optional":true,"description":"<p>the current time when the tween was started</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"hlxjj6TSaDKXw2v3KGD2f","name":"stop","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>stop the tween</p>","params":[],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"4r7oMZozLN2kZKdVc79w7","name":"to","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>object properties to be updated and duration</p>","params":[{"identifier":"properties","optional":false,"description":"<p>hash of properties</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options","optional":true,"description":"<p>object of tween properties, or a duration if a numeric value is passed</p>","dataType":{"tokens":[{"value":"object | number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"object | %1"}},{"identifier":"options.duration","optional":true,"description":"<p>tween duration</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.easing","optional":true,"description":"<p>easing function</p>","dataType":{"tokens":[{"value":"Tween.Easing","kind":"canonical"},{"value":"Easing","kind":"link"}],"template":"%1"}},{"identifier":"options.delay","optional":true,"description":"<p>delay amount expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.yoyo","optional":true,"description":"<p>allows the tween to bounce back to their original value when finished. To be used together with repeat to create endless l...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.repeat","optional":true,"description":"<p>amount of times the tween should be repeated</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.interpolation","optional":true,"description":"<p>interpolation function</p>","dataType":{"tokens":[{"value":"Tween.Interpolation","kind":"canonical"},{"value":"Interpolation","kind":"link"}],"template":"%1"}},{"identifier":"options.autoStart","optional":true,"description":"<p>allow this tween to start automatically. Otherwise call me.Tween.start().</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"4p17xUbU8v6RC_BO-xYil","name":"yoyo","brief":"","access":"public","scope":"instance","see":["Tween#repeat"],"type":"MethodDoc","description":"<p>Allows the tween to bounce back to their original value when finished.\nTo be used together with repeat to create endless l...","params":[{"identifier":"yoyo","optional":false,"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]}]},{"id":"PVR8Ety4PNcdsXcS7iz0F","name":"Vector2d","brief":"","type":"ClassDoc","description":"<p>a generic 2D Vector Object</p>","members":[{"id":"JMp0dJ9LJwfgjJ7RLGolY","name":"x","brief":"","access":"public","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"gda5XwoDIcuVDV3lFMYOD","name":"y","brief":"","access":"public","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"_y39yW29FdEwU-8OHQngs","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"gf9o5WXXgowlT0ItmLSGL","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"A6IcS3eUJ_uDuJWW42eni","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"siaci5E86bMAD9_vQj7p7","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"3H4rZ64LZpLsUvXcZi7Vm","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"m8BQ6E7jG0UNADiegAWcM","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"cNoAPE0x8o9kaI_52iY1h","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"btbSE7dhJ79hwAsKgea8c","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"GMrVYI-YsKwTOENesKKQf","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gsOIfCVIbFB2jXD60Y_NX","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the x,y values of the passed vector to this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"tAus1gB6C0fFuhNG76l2w","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The cross product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gPUtt73aW999OOWm4fvMN","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"8KfCAe9ii5HM-0qcv5y6y","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"CYk9rGQMoTJG6Hi2jUEtr","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_yO9_xki6ir_zslFSmk9w","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if this vector is equal to the given values</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WclJLhBvd7f5qAhmHhdzU","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"K70I3-SztRzTO08GOaJ-X","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"yWCc-wzEf_jHshZzphP_b","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"W0L2KI8f6ZDjZd7KlcGQC","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vVAxhHdssJWBvh-nygbzy","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"aWOtPBKf99sStxuIz1Lit","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"2AbzHoX0UcMHCL4DKzcjC","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Y_z9tJebzc3ZL8TZlaOp_","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"5l0katei1-4Tk9WSA3WmA","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"WTnHvFXj2TXRiANIZvfeN","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ri4sucH4yWYnOmanHn6DB","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"WX9HvedKMUk6p-sb6ZYFH","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"sWjJt4QAfSVg1DSNSNcw3","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"7AsFf3xPFCFj-IYTLGHFw","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"0qK5zmAd65DJ-irONDjMj","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"_c0ddYqJKLW1hHAN--BaC","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"KXnkKD3fT3PlFyKwyny8u","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"evOqJbem2BfzqkwowjZqk","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"qOraKRAaUlrlYBqucbq1_","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"15oscoo5rQGs2qociBE8-","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"N6Y6AGZ4YEK-q55eDtqQX","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"5sn57qQ41YE5lqqlmNDcg","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"LUTqblBLa4QvMhOjh6FCQ","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"XUdLH-6H1mMDKasgD1pbL","name":"equals","brief":"","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"1HKiAgEiPGCWQsfan6lrL","name":"Vector3d","brief":"","type":"ClassDoc","description":"<p>a generic 3D Vector Object</p>","members":[{"id":"ISefeKGclWYmyqmjxLsEy","name":"x","brief":"","access":"public","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"KHHDmH7OZs4qt8rporYkr","name":"y","brief":"","access":"public","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"g0f7HW4pBsqEUllwLoutn","name":"z","brief":"","access":"public","type":"PropertyDoc","description":"<p>z value of the vector</p>"},{"id":"yJXcfNpWiCafSo8BJguKX","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"SDvb06-cPj0FeBdsbrMJH","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"-adeokCCDUV9HZZG-61M1","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HR6pHd00XDnJXLVChqVqM","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"4HS3LpmhOICR7rsUPi8Ag","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"SCZ9DOvAeOrW3ShsRlirF","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"vdoR6vjQuqqjwVmQ9_Yzn","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"hXMRrt5Yvbn2zOxRK0qUU","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"dM4ULaDIM7EPF8_FtyBFC","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UrzutDTVTb39biLB3ilFM","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the components of the given vector into this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"CIxSjwkGur7bgwN0XVQBq","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>calculate the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"4HsSJxgoL_cPPc9wmiQIB","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-WbXPZdlpR3rpNh29gqu8","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"wHdJBg2DReebPhQ082OPg","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Iocxvf-C1ya0e3B9WU0RO","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if this vector is equal to the given values</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"z4WBbu8ME_R-RgvFJd7aS","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"YoOwUolniFQhQ3t2xzDnV","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"P3ugxB0fdWIzVtQrGiC_T","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1jY8jzJkVM5uVm65i-sgH","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"e5Po2f2cE0WPdjEuqr--r","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"Cwg_FB4HmQBib7ctff8VG","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"gO-dj_mQjjhp4oFkyDqJi","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"fzy4F1LTosvtmPwZYhCSs","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"eSS9RY-KBrkJLv-65xraF","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"fdXLVvhx5tnqb9Z6IhAF0","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"bRrywqoCRnxtp2gmwZSOL","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"GW-RpMAdt0gF89jP-rek9","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"TFPKqW1P_efxzspY4xv4E","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"31n0yNrHN1S5m44ryN8Mc","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians) around the z axis</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around (on the same z axis)</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"4j3jRZFZFHaX-Bjs5aEWe","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"z5W3w0bJRbJK_F3syGD8P","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"1SMnzcBTM1iu93lfwjQ2P","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ttXlbhe028V2scmrDKogl","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"zDzeZ8sMc-JqhjWhtmw3h","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"x1uuWijUZDLmP63qlhOnB","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"T8JxQnCg6lc74E4g11_Gu","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"Yd8wXvEXvP8ZMme8lR0Yc","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"X-zCMQxi-Qzn0cwhhG3ML","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"BX9KjWxVrjSjByrkPxt09","name":"equals","brief":"","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"hns92b7kFbEiRen2K-vCq","name":"WebGLCompositor","brief":"","type":"ClassDoc","description":"<p>A WebGL Compositor object. This class handles all of the WebGL state<br>\nPushes texture regions or shape geometry into Web...","members":[{"id":"wCNjPj3MGbkA8ri2UINwG","name":"activeShader","brief":"","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the active WebGL shader</p>"},{"id":"lsTijz-D8zDFDBqsiO50o","name":"attributes","brief":"","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>an array of vertex attribute properties</p>"},{"id":"sSGZH_dZKgHsijVSLyWdB","name":"mode","brief":"","defaultValue":"gl.TRIANGLES","scope":"instance","see":["WebGLCompositor"],"type":"PropertyDoc","description":"<p>primitive type to render (gl.POINTS, gl.LINE_STRIP, gl.LINE_LOOP, gl.LINES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN, gl.TRIANGL..."},{"id":"-6ZiI6kt8TbBIiiNeIzhc","name":"vertexByteSize","brief":"","defaultValue":"0","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>the size of a single vertex in bytes\n(will automatically be calculated as attributes definitions are added)</p>"},{"id":"zvm4FQt0cA5W3xTPyNwMY","name":"vertexSize","brief":"","defaultValue":"0","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>the size of a single vertex in floats\n(will automatically be calculated as attributes definitions are added)</p>"},{"id":"qyNRargofmeWaRKdObqdi","name":"addAttribute","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add vertex attribute property definition to the compositor</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the attribute in the vertex shader</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"size","optional":false,"description":"<p>number of components per vertex attribute. Must be 1, 2, 3, or 4.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"type","optional":false,"description":"<p>data type of each component in the array</p>","dataType":{"tokens":[{"value":"GLenum","kind":"canonical"},{"value":"GLenum","kind":"canonical"}],"template":"%1"}},{"identifier":"normalized","optional":false,"description":"<p>whether integer data values should be normalized into a certain range when being cast to a float</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"offset","optional":false,"description":"<p>offset in bytes of the first component in the vertex attribute array</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"F6DSaeO3q1rGQ7S5gUTGP","name":"addQuad","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a textured quad</p>","params":[{"identifier":"texture","optional":false,"description":"<p>Source texture atlas</p>","dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>Destination x-coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Destination y-coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>Destination width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>Destination height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"u0","optional":false,"description":"<p>Texture UV (u0) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v0","optional":false,"description":"<p>Texture UV (v0) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"u1","optional":false,"description":"<p>Texture UV (u1) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v1","optional":false,"description":"<p>Texture UV (v1) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tint","optional":false,"description":"<p>tint color to be applied to the texture in UINT32 (argb) format</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"IzD1-re41c9iMWo2Jenqc","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>delete the given WebGL texture</p>","params":[{"identifier":"texture","optional":true,"description":"<p>a WebGL texture to delete</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":true,"description":"<p>Texture unit to delete</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"OxKnWfEkJUpJHPAuTRXp4","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the WebGL texture associated to the given texture unit</p>","params":[{"identifier":"unit","optional":false,"description":"<p>Texture unit to which a texture is bound</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>texture a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}}]},{"id":"WgRnElDQx-NhP5DYi1G9v","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>assign the given WebGL texture to the current batch</p>","params":[{"identifier":"texture","optional":false,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":false,"description":"<p>Texture unit to which the given texture is bound</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UTdOcR11T_99bnJ_P5l3J","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clear the frame buffer</p>","params":[],"returns":[]},{"id":"H-mviI1gbk6G1hmBH_KZl","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Specify the color values used when clearing color buffers. The values are clamped between 0 and 1.</p>","params":[{"identifier":"r","optional":true,"default":"0","description":"<p>the red color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","description":"<p>the green color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"default":"0","description":"<p>the blue color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"a","optional":true,"default":"0","description":"<p>the alpha color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nBmMDLx9WhIXFvNAuCvEm","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"renderer","optional":false,"description":"<p>the current WebGL renderer session</p>","dataType":{"tokens":[{"value":"WebGLRenderer","kind":"canonical"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"oxlKaTr5_EfEY9f3sf7GO","name":"createTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Create a WebGL texture from an image</p>","params":[{"identifier":"unit","optional":false,"description":"<p>Destination texture unit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image | HTMLCanvasElement | ImageData | Array<Uint8Array> | Array<Float32Array>","kind":"canonical"},{"value":"Image","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"ImageData","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Uint8Array","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1 | %2 | %3 | %4<%5> | %6<%7>"}},{"identifier":"filter","optional":false,"description":"<p>gl.LINEAR or gl.NEAREST</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":true,"default":"\"no-repeat\"","description":"<p>Image repeat behavior (see {@link ImageLayer#repeat})</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"w","optional":true,"description":"<p>Source image width (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":true,"description":"<p>Source image height (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"description":"<p>Source image border (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"premultipliedAlpha","optional":true,"default":"true","description":"<p>Multiplies the alpha channel into the other color channels</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"mipmap","optional":true,"default":"true","description":"<p>Whether mipmap levels should be generated for this texture</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}}]},{"id":"FL8Oj4_qu6zqR6N2AtEH_","name":"drawVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw an array of vertices</p>","params":[{"identifier":"mode","optional":false,"description":"<p>primitive type to render (gl.POINTS, gl.LINE_STRIP, gl.LINE_LOOP, gl.LINES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN, gl.TRIANGL...","dataType":{"tokens":[{"value":"GLenum","kind":"canonical"},{"value":"GLenum","kind":"canonical"}],"template":"%1"}},{"identifier":"verts","optional":false,"description":"<p>vertices</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"vertexCount","optional":true,"default":"verts.length","description":"<p>amount of points defined in the points array</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"QkiMfoyXdkooIQKm75B3m","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Flush batched texture operations to the GPU</p>","params":[{"identifier":"mode","optional":true,"default":"gl.TRIANGLES","description":"<p>the GL drawing mode</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"doc0rMAHjO83dicuZBGRk","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"zsQ4WoYFHKjM-wEvhvgap","name":"setViewport","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Sets the viewport</p>","params":[{"identifier":"x","optional":false,"description":"<p>x position of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y position of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jgojNi3PwGMeuxrqou4ek","name":"unbindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>unbind the given WebGL texture, forcing it to be reuploaded</p>","params":[{"identifier":"texture","optional":true,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":true,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>unit the unit number that was associated with the given texture</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"a3b6Qlly3MkfrBFIyoKpY","name":"useShader","brief":"","scope":"instance","see":["GLShader"],"type":"MethodDoc","description":"<p>Select the shader to use for compositing</p>","params":[{"identifier":"shader","optional":false,"description":"<p>a reference to a GLShader instance</p>","dataType":{"tokens":[{"value":"GLShader","kind":"canonical"},{"value":"GLShader","kind":"link"}],"template":"%1"}}],"returns":[]}]},{"id":"TVnC9Y9cxNdYcVBy0WbWH","name":"WebGLRenderer","brief":"","type":"ClassDoc","description":"<p>a WebGL renderer object</p>","extends":["Renderer"],"members":[{"id":"n_QmbB1e4b2YXgQ66LNLw","name":"compositors","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The list of active compositors</p>"},{"id":"dm4q2HjBNsY52y40uH3FT","name":"currentCompositor","brief":"","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The current compositor used by the renderer</p>"},{"id":"ZlZYYvI0Z0AZcn1AGCYeZ","name":"currentTransform","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The current transformation matrix used for transformations on the overall scene</p>"},{"id":"tk50gqGcnTXMZc8wOr4gr","name":"gl","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The WebGL context</p>"},{"id":"zGHwDBI7jD7dU78QNuI2h","name":"GPURenderer","brief":"","defaultValue":"null","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The renderer string of the underlying graphics driver.</p>"},{"id":"fFPTaTuomQ-wzCoLrxsR1","name":"GPUVendor","brief":"","defaultValue":"null","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The vendor string of the underlying graphics driver.</p>"},{"id":"q5JqiQFPIv8dw6Qd5Zewm","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"XKMwz514GSPtbM3Ccfr0h","name":"maxTextures","brief":"","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>Maximum number of texture unit supported under the current context</p>"},{"id":"QRVfLWWej_6_Y46sL0iDe","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"ipO4wQUvu2jRCloWVnweG","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"_U9SPU2dJ2dl5KpL4MbxI","name":"WebGLVersion","brief":"","defaultValue":"1","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The WebGL version used by this renderer (1 or 2)</p>"},{"id":"1MBTENlAQfIc5xLGIh4h0","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"uBDmu8gJz6JE8TZxtwCHt","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the gl context with the given color.</p>","params":[{"identifier":"color","optional":true,"default":"\"#000000\"","description":"<p>CSS color.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"opaque","optional":true,"default":"false","description":"<p>Allow transparency [default] or clear the surface completely [true]</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"FN4o7pdxQXWosci_U_yZp","name":"clearMask","brief":"","scope":"instance","see":["WebGLRenderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"uCikZm9trYKarZEfJ8K7K","name":"clearRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Erase the pixels in the given rectangular area by setting them to transparent black (rgba(0,0,0,0)).</p>","params":[{"identifier":"x","optional":false,"description":"<p>x axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>The rectangle's width.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The rectangle's height.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-ueUMK7w-byA9k9WTHn7G","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"L8WCMgR1GLYRDVsI7kIkA","name":"clipRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clip the given region from the original canvas. Once a region is clipped,\nall future drawing will be limited to the clippe...","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"j6h5F7VArDJV3pmh-m4Sj","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel renderering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.preferWebGL1","optional":true,"default":"false","description":"<p>if true the renderer will only use WebGL 1</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.powerPreference","optional":true,"default":"\"default\"","description":"<p>a hint to the user agent indicating what configuration of GPU is suitable for the WebGL context (&quot;default&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.compositor","optional":true,"description":"<p>A class that implements the compositor API</p>","dataType":{"tokens":[{"value":"WebGLCompositor","kind":"canonical"},{"value":"WebGLCompositor","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ZYC5uuE83XiuR4cuXDhLd","name":"createPattern","brief":"","examples":[{"caption":"","code":"\n var tileable   = renderer.createPattern(image, \"repeat\");\n var horizontal = renderer.createPattern(image, \"repeat-x\");\n var vertical   = renderer.createPattern(image, \"repeat-y\");\n var basic      = renderer.createPattern(image, \"no-repeat\");\n"}],"scope":"instance","see":["ImageLayer#repeat"],"type":"MethodDoc","description":"<p>Create a pattern with the specified repetition</p>","params":[{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":false,"description":"<p>Define how the pattern should be repeated</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}}]},{"id":"7WJlIInHmMjP7JpIiEjS9","name":"drawImage","brief":"","examples":[{"caption":"","code":"\n // Position the image on the canvas:\n renderer.drawImage(image, dx, dy);\n // Position the image on the canvas, and specify width and height of the image:\n renderer.drawImage(image, dx, dy, dWidth, dHeight);\n // Clip the image and position the clipped part on the canvas:\n renderer.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Draw an image to the gl context</p>","params":[{"identifier":"image","optional":false,"description":"<p>An element to draw into the context. The specification permits any canvas image source (CanvasImageSource), specifically, ...","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"sx","optional":false,"description":"<p>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sy","optional":false,"description":"<p>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sw","optional":false,"description":"<p>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rect...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sh","optional":false,"description":"<p>The height of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dx","optional":false,"description":"<p>The X coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dy","optional":false,"description":"<p>The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dw","optional":false,"description":"<p>The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dh","optional":false,"description":"<p>The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the imag...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Qbw1BclXAtJu2jodkE3VL","name":"drawPattern","brief":"","scope":"instance","see":["WebGLRenderer#createPattern"],"type":"MethodDoc","description":"<p>Draw a pattern within the given rectangle.</p>","params":[{"identifier":"pattern","optional":false,"description":"<p>Pattern object</p>","dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"mcCeCKJgYgCvqe3U0ymh8","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"biWq74tlFPxTwAFFGBvdg","name":"fillArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"IKVoeZAU5KBhYON9DxfpQ","name":"fillEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oJ7MZCGSZXMw2MWIXj0yU","name":"fillLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"QIpfD2Jrs_dIIrFJ2rGeL","name":"fillPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"U5-64fmU-8-hwDyroGP6J","name":"fillRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ev0UHis44mmZ1hLbZfcPK","name":"fillRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a rounded filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"IT9fBC1q6uWNv_95jsDyR","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Flush the compositor to the frame buffer</p>","params":[],"returns":[]},{"id":"xA8nQB1Bs9hAk63yTHdTE","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"09WPiS1X5D08F9gOml4iz","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"VyxSu3PKDnk4GgHjWyQXt","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"DxuOWvRhQp5rxZYFr9Sbk","name":"getContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the WebGLContext instance for the renderer\nreturn a reference to the system 2d Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"QuE1_iL-ONKxGs_1pQSxP","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"kYytFYDlvhEB_bgGR6fFU","name":"getContextGL","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the WebGL Context object of the given Canvas</p>","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"qqGuIFWlQeo-8TuxPlOtX","name":"getGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the global alpha</p>","params":[],"returns":[{"description":"<p>global alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dUdvSHvFKhDvT3z6fLygb","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7IDyaCnMWvSOLEbnZ-a7I","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"gWzy0Jn80c6zomkM6AQf4","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding WebGL Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"I8vY-Tpig0ojDdUdL-L0n","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"t6eclARjSRr4o9-I8m68_","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"l-uDgoqW-XCtRp3D4kZMu","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TyXLO1XH_zquhtj0rQU9Y","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"vUkP_bkt3fsEuSOBDO3I9","name":"resetTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the gl transform to identity</p>","params":[],"returns":[]},{"id":"wL9x3nwlf8zWEIPHaEQgf","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"JiXKbSNM1UrtnjDqj9AHf","name":"restore","brief":"","scope":"instance","type":"MethodDoc","description":"<p>restores the canvas context</p>","params":[],"returns":[]},{"id":"ber8UJwA-Hs-gPxFJMElE","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotates the uniform matrix</p>","params":[{"identifier":"angle","optional":false,"description":"<p>in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oTkC_wti3-Uah5Qli2pWx","name":"save","brief":"","scope":"instance","type":"MethodDoc","description":"<p>saves the canvas context</p>","params":[],"returns":[]},{"id":"1wYRe58O4f3DicIgjFnw9","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scales the uniform matrix</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"s2INDdS1FEdqjaSIZwg-C","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"T4TdPyfki3RoedGgfQ964","name":"setBlendMode","brief":"","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"type":"MethodDoc","description":"<p>set a blend mode for the given context. <br>\nSupported blend mode between Canvas and WebGL remderer : <br></p>\n<ul>\n<li>&q...","params":[{"identifier":"mode","optional":true,"default":"\"normal\"","description":"<p>blend mode : &quot;normal&quot;, &quot;multiply&quot;, &quot;lighter&quot;, &quot;additive&quot;, &quot;screen&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"gl","optional":true,"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"yX9jyot5YcGoNhkitqPEa","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the current fill &amp; stroke style color.\nBy default, or upon reset, the value is set to #000000.</p>","params":[{"identifier":"color","optional":false,"description":"<p>css color string.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"8hxA4B_2cmxPCtUNEcfRX","name":"setCompositor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the active compositor for this renderer</p>","params":[{"identifier":"compositor","optional":false,"default":"\"default\"","description":"<p>a compositor name or instance</p>","dataType":{"tokens":[{"value":"WebGLCompositor | string","kind":"canonical"},{"value":"WebGLCompositor","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"R-ZW_knEeqmCQIyYPL6Tl","name":"setGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the global alpha</p>","params":[{"identifier":"alpha","optional":false,"description":"<p>0.0 to 1.0 values accepted.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"X2KJdKwWXAWb9TDYyWKAc","name":"setLineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the line width</p>","params":[{"identifier":"width","optional":false,"description":"<p>Line width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"pXZtKmRvQyDhNWS7pLlas","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>a shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"j_Ry-HvMNvxmzXIhdQvYN","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"8xtWS0ZxiJE9BMax_1xoK","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YU2snRYlS-lkK9j96XMBc","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset (overrides) the renderer transformation matrix to the\nidentity one, and then apply the given transformation matrix.</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"D5NyvzkIhsjU2leZCXLmf","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"JnJU3Upoh6kvAfxyGjPRb","name":"strokeArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"fill","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"KUT-RCbTE7pSGMGZ9L2qC","name":"strokeEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Zoyt1Pw4GOg1-vZt4gI8R","name":"strokeLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"8NyI9PyBqSU74l8jl8bya","name":"strokePolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a me.Polygon on the screen with a specified color</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"95ztHcdJ9VVdZAb4QncRN","name":"strokeRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a stroke rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"3yRWVMMn7RQEoUNifLIQN","name":"strokeRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rounded rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"CTXt9_XFc9Gh80gJInkDC","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"sU1g9Q3b0joDC1K_7-t3F","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply given matrix into the renderer tranformation matrix</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"TWsMr5UhmTYMTft5eBFPO","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the uniform matrix by the given coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"EnXa9_k4RZF_HhHggjmMr","name":"World","brief":"","type":"ClassDoc","description":"<p>an object representing the physic world, and responsible for managing and updating all childs and physics</p>","extends":["Container"],"members":[{"id":"DyBaz0qXH2xeGHPfQ4hGQ","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"Qk4dtoPOH4cSAqWqUq1Zd","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"8ZyXIrzIb_lK7pj7WWP3u","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"NQe05-RCVQeCyLXJR9g9p","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"rfi4kh8HFl4rdgUEZtRnA","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"UETFmoOdxND9dqPL_hJJZ","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"WYZj8ZuLlNeiWyMhXb4N4","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"5f28xByrtsztA4pGNIE_p","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"CSNH7qJm8bSq1osDR9OJL","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"Sb8PnPaNniiX62Q90QYdH","name":"bodies","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the active physic bodies in this simulation</p>"},{"id":"PEBCg04ZqMA1rhBGm1DeN","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"LfvGHxZtI0iP6mvF3Iv1j","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"hzPB4OemsdOJo7PGYpbtM","name":"broadphase","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the instance of the game world quadtree used for broadphase</p>"},{"id":"LWsmroAB99sybmAtJd1Xa","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"KFyvyOqN7XEIENbBzRL9j","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"luyuSzLvpblF-Tmyuqm5w","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"4RhCpJopTo3PI7zUBabIo","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"YZM6y600mdKexP4QiNRom","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"i34jjPfj-4ZiOfSTyLhFO","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"t7W60lz_zN4YqFxMteUz8","name":"fps","brief":"","access":"public","defaultValue":"60","scope":"instance","see":["timer.maxfps"],"type":"PropertyDoc","description":"<p>the rate at which the game world is updated,\nmay be greater than or lower than the display fps</p>"},{"id":"3EFaDV5XxFF4vlIjRm0De","name":"gravity","brief":"","access":"public","defaultValue":"<0,0.98>","scope":"instance","type":"PropertyDoc","description":"<p>world gravity</p>"},{"id":"z9X5xOLkxzJLvpRBHj1pw","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"miXyc7QEwsQE9YA0svVUi","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"bCEt0KdulMdU7BKkrwBn8","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"slD6TW5UI1q_5vgPnUOo7","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"-2dVdwOzU5IVePM4Vi7UW","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"UMpebRwS_5ZueYisrfE3u","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"QjY108JTniZNSmCOUdBm6","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"z0vy4hQCYYLLvfNBWLe1q","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"I79YyIIRThZxAP8zgmX3f","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"BAGhRgctJVthDjLRkeG7p","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"HBurG2bbmoj8dWyUq2J8U","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"LPSjokI0GfL_3Oyx89Wbw","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"DoD_hYoCySeVT2Yks-vlT","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"1LZdWTKJcp4TC0mUItsH2","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"62avI_BCzBzFV7NW6e7sC","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"7Na-ArJx9ZJIHBom3y4Tv","name":"preRender","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify the rendering method for tile layers. <br>\nif false visible part of the layers are rendered dynamically,<br>\nif tr..."},{"id":"cwqgePJV1RTIaL2RQM_Yp","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"8WWJqMnoYYh2cR4nsa3D9","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"7EiqfEG29zQpuYVjl7dkz","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"p-dS2_TAkEg7H00xRtLXX","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"bcXCLE5oor7cZ0T9o0B_T","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"tPsM3yFEsmyKnFWPPrlFC","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"6s7wQ_2WEo68cAoVTCRXk","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"HlOcLJp72j0oZvr3JcW7z","name":"addBody","brief":"","scope":"instance","see":["Container.addChild"],"type":"MethodDoc","description":"<p>Add a physic body to the game world</p>","params":[{"identifier":"body","optional":false,"dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this game world</p>","dataType":{"tokens":[{"value":"World","kind":"canonical"},{"value":"World","kind":"link"}],"template":"%1"}}]},{"id":"n_tL2_mfhf_tVqwwuamE8","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"L7iYEe6Ods8KjPAsrOZxZ","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3ZDkOJwDIdn3ZHZYsYRuo","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"3yFOMvwnppPgnkhtWOH4S","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"C3YOriKGLp9lY5X172SGk","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"xzK_xwgdFuK9UOGAsnuVC","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":true,"default":"game.viewport.width","description":"<p>width of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":true,"default":"game.viewport.height","description":"<p>height of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Ik5pjDH9_Uts6bwVcTupf","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"W0hlDG6z1URhBk7wOsMDn","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"rfX9A_nneVno6oSwbya19","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"yK8FB9YEUCkl1fGOWYVuj","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6pOjI3JZUa91Cl6U3aU_l","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"AwLW-M5MS4i8R_qYz8LR1","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9oX46dLjAcg6h_a9MNiiI","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"en_9AiIIgKhkK7T1wh48D","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"R_p8mi2NEpyfAwe25DMMH","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"o3wiUYTMBo04B4__RQLYF","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"JQCtvQp2hGD0UrrELFuVy","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"xOlkyWSQ9SiFBBoEMoClF","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"r8W3XnJT0V9kPOl5nYn6U","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"XcCZfh15v8RqIMT_m_AZi","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"CdrTnhvRG7vW_VLRqOUIv","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"zYLjt7-V4bYJmd_LWP9Zz","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"Cb-ZRmXyC4d0XcDSbA6ww","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Bx50ayILc0LnfO5cyvZ-_","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UFm9vY0L-Us06nQbXFLFx","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"XrSBsiW7-JsAKiA3iBP0O","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"p0HbzOO5Bud5XtPfYmy0f","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MtpiS_3WoEI1wwmWv6l5g","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6ACjdm03L8OkOfjSHHdY2","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"snw1E6EQFioLaHTAt2Mu9","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ZlzCJum9wgKJQ10RvaU-t","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"9DbE0Sd71KPaQ5-I__veG","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"kCcRrH4PeJqw9FtYIEDbk","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"HNKgfnE4-YyMHHNLzaCkD","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","optional":false,"description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HRpoFoKrcFwudQfsFPrPq","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"ResponseObject","kind":"canonical"},{"value":"ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","optional":false,"description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AyTGycnRr80EMjMYfwjRF","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"7vAz2IMYqd2e0WsL2wZaO","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"iwHtqgiOcPzBFCAC7E3vN","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rn5yEWcZlAFBSDQEdqj48","name":"removeBody","brief":"","scope":"instance","see":["Container.removeChild"],"type":"MethodDoc","description":"<p>Remove a physic body from the game world</p>","params":[{"identifier":"body","optional":false,"dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this game world</p>","dataType":{"tokens":[{"value":"World","kind":"canonical"},{"value":"World","kind":"link"}],"template":"%1"}}]},{"id":"PoX8HlfWPHuwdK7TS9Xun","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"GvEOYEzKPE0LgrBe7Rcdf","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"_AYwCz3y7rW5lBOVftrm1","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the game world</p>","params":[],"returns":[]},{"id":"_d0RYgbl4KJ2ptIm891Wc","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>update the game world</p>","params":[{"identifier":"dt","optional":false,"description":"<p>the time passed since the last frame update</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the word is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-Ubu6G-V0312_5wLXlbXm","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"hfol2_9W8Vsx5YunApHgj","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"F6u1WyxTJQvQVxk3teklF","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"1kjFXySG5mLGyGb65mHcx","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"gtY3eBeLlk56kfOtv-Asn","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Ynewqfn_SEA4aQuL807qs","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"O0k5ilXoUO0oOyXUSvyut","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"_Y3TBegFPbIEzRICy9tdl","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qXVM_VYrIeCR-mOX0MFPZ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5fMGepzK79KMpZrFNKhIE","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"FGmNKRTsA9af8rYGMIbY1","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"NAmPWuDcJrfeCGEo7BWB6","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qwXJIwxSBy7zryxFpZYVn","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"RwSGE0-w9bAQKe_0T4hWl","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6Zlp1_xMdMmMk_xSWZEOs","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9fPXS7vzvB2ZQgmrQiuCF","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"vHVFYmeAjI1SPHoXQZQtf","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KBs-jX87e_P1TDOqdGVhC","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw this renderable (automatically called by melonJS)</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"viewport","optional":true,"description":"<p>the viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"aA6AP6HnOJu5PZyhY7cs8","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Tw5RFTmuimx1UkboIaP1p","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"kgczJn55PSAQplW9-CM9G","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yGFa7qxMCdsS8ZIqXxo7P","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JeNFp4Ptsf1Cl39QBTVpv","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"V68dhKauG4TGrAYLSvm24","name":"version","brief":"","defaultValue":"\"__VERSION__\"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>current melonJS version</p>"},{"id":"OibMcjSXVzuLPIVhdUz6E","name":"initialized","brief":"","defaultValue":"false","readonly":true,"type":"PropertyDoc","description":"<p>a flag indicating that melonJS is fully initialized</p>"},{"id":"48sdp8zeNHy6tO-NsBVrC","name":"skipAutoInit","brief":"","defaultValue":"false","see":["boot"],"type":"PropertyDoc","description":"<p>disable melonJS auto-initialization</p>"},{"id":"HixQwWqAxjfxNkEdzmNkW","name":"boot","brief":"","access":"public","see":["skipAutoInit"],"type":"FunctionDoc","description":"<p>initialize the melonJS library.\nthis is automatically called unless me.skipAutoInit is set to true,\nto allow asynchronous ...","params":[],"returns":[]}]},"registry":{"pkg-lGR7FRJnZ22xFZ7iZ2EdR":{"uri":"/melonJS/docs/melonjs.html"},"7Kx-3ucKjB29k-SJtTLna":{"uri":"/melonJS/docs/melonjs/audio.html"},"AgMW0rpnNMx7tczkTlN4n":{"uri":"/melonJS/docs/melonjs/audio.html#stopOnAudioError"},"qj0H7cyAmUImMdSckdfxP":{"uri":"/melonJS/docs/melonjs/audio/disable.html"},"vOLpXl7hQELl-crSwAYaO":{"uri":"/melonJS/docs/melonjs/audio/enable.html"},"qAVE2Wsb8cwqijp2_krFm":{"uri":"/melonJS/docs/melonjs/audio/fade.html"},"8-T58-otc3NiRnK9Yq8TD":{"uri":"/melonJS/docs/melonjs/audio/getCurrentTrack.html"},"76y5qxk9kau62WK8JyVly":{"uri":"/melonJS/docs/melonjs/audio/getVolume.html"},"q67zXJJ3UYdsfVTEW0Rib":{"uri":"/melonJS/docs/melonjs/audio/hasAudio.html"},"BCivqP5KC0FPBXrdp8tsd":{"uri":"/melonJS/docs/melonjs/audio/hasFormat.html"},"B6ZTO0luVo5bNMpkuX-LV":{"uri":"/melonJS/docs/melonjs/audio/init.html"},"UqVnHKndc6zsP9TC_d8uu":{"uri":"/melonJS/docs/melonjs/audio/mute.html"},"DWr3HupxpX6OObkbbEFlb":{"uri":"/melonJS/docs/melonjs/audio/muteAll.html"},"09Xz9TCV3s8aJGIOGlXhQ":{"uri":"/melonJS/docs/melonjs/audio/muted.html"},"DVhG75xqWFc9t2YuMZX-T":{"uri":"/melonJS/docs/melonjs/audio/pause.html"},"8rzhuAhnT7mIsHjFV9Nhx":{"uri":"/melonJS/docs/melonjs/audio/pauseTrack.html"},"71HhgQQ9rZ49hFE_VGK8O":{"uri":"/melonJS/docs/melonjs/audio/play.html"},"HvHmNRkW0jMQfxgCgGIIx":{"uri":"/melonJS/docs/melonjs/audio/playTrack.html"},"jvMfvkQAXScumXUxUHOGd":{"uri":"/melonJS/docs/melonjs/audio/rate.html"},"cp3T2XYas3_KmBEHUijm0":{"uri":"/melonJS/docs/melonjs/audio/resume.html"},"KgXWokT8maNPRI55eJKPl":{"uri":"/melonJS/docs/melonjs/audio/resumeTrack.html"},"U9SWgSG4lqDvkylQVFadt":{"uri":"/melonJS/docs/melonjs/audio/seek.html"},"I5S4pSpi5uqotrhwz38h-":{"uri":"/melonJS/docs/melonjs/audio/setVolume.html"},"oL2EsJgg60McmcZvTzzqx":{"uri":"/melonJS/docs/melonjs/audio/stop.html"},"MRU3yo83rYvmIlpkQVmZu":{"uri":"/melonJS/docs/melonjs/audio/stopTrack.html"},"fJDuUda4F8VJtoO1ULMdQ":{"uri":"/melonJS/docs/melonjs/audio/unload.html"},"3iObcUB3T4uFTSH-CNPBq":{"uri":"/melonJS/docs/melonjs/audio/unloadAll.html"},"GnLxpMBuICHkIzy6iLku4":{"uri":"/melonJS/docs/melonjs/audio/unmute.html"},"wKWYB4O6mSz9Ebl81NPFJ":{"uri":"/melonJS/docs/melonjs/audio/unmuteAll.html"},"W7QCvRjzjtxO3P3AWFe6_":{"uri":"/melonJS/docs/melonjs/collision.html"},"gFts4OZAXpBBd1L9_xvJG":{"uri":"/melonJS/docs/melonjs/collision/types.html"},"pVVVSu5LChJsjFgjs7c0w":{"uri":"/melonJS/docs/melonjs/collision/types.html#ACTION_OBJECT"},"1KWgbI9PVqnGusi1my_KR":{"uri":"/melonJS/docs/melonjs/collision/types.html#ALL_OBJECT"},"IKwmlAveX0RjTPKAejPj7":{"uri":"/melonJS/docs/melonjs/collision/types.html#COLLECTABLE_OBJECT"},"6cW4Zjm9Q8yRtBbzKkvPr":{"uri":"/melonJS/docs/melonjs/collision/types.html#ENEMY_OBJECT"},"xiFBO56EgOcx7FuDkhmSy":{"uri":"/melonJS/docs/melonjs/collision/types.html#NO_OBJECT"},"1UnTuOXQxj_iPH5s9eR_b":{"uri":"/melonJS/docs/melonjs/collision/types.html#NO_OBJECT"},"y3-Qs3IkplDQfgmNLrgJs":{"uri":"/melonJS/docs/melonjs/collision/types.html#NPC_OBJECT"},"gpPwUTBnEAaHH58lmHqwf":{"uri":"/melonJS/docs/melonjs/collision/types.html#PLAYER_OBJECT"},"gqIc4EpAiz7OIi9GUvWnD":{"uri":"/melonJS/docs/melonjs/collision/types.html#PROJECTILE_OBJECT"},"hvn9ve--f7E80S1XoUgMW":{"uri":"/melonJS/docs/melonjs/collision/types.html#USER"},"NTaDpRAtLfxm-DP9LXJWQ":{"uri":"/melonJS/docs/melonjs/collision/types.html#WORLD_SHAPE"},"WiJyTYlU703nw0azG43Zm":{"uri":"/melonJS/docs/melonjs/collision.html#maxChildren"},"LsSYjuZHeqHBoXhwH2yEA":{"uri":"/melonJS/docs/melonjs/collision.html#maxDepth"},"nmutlh2KfAGvl5YStZDYV":{"uri":"/melonJS/docs/melonjs/collision.html#rayCast"},"HPTN31-2qQ_a3YJ5MVx7v":{"uri":"/melonJS/docs/melonjs/device.html"},"ueN4rLhCnTa-PzWyi2YRT":{"uri":"/melonJS/docs/melonjs/device.html#accelerationX"},"DGQyiFMf0_9CgRXkTxH14":{"uri":"/melonJS/docs/melonjs/device.html#accelerationY"},"21fJV3oQIKEVB9_-0B_pi":{"uri":"/melonJS/docs/melonjs/device.html#accelerationZ"},"229zziFBAPeanK-mDaTLG":{"uri":"/melonJS/docs/melonjs/device.html#alpha"},"U9hMi9VfmHmpAVG8SeWGO":{"uri":"/melonJS/docs/melonjs/device.html#android"},"e2dXWmeJ0pnOA1s65bIeZ":{"uri":"/melonJS/docs/melonjs/device.html#android2"},"uZSTWZyjAG2odqkYRxs0o":{"uri":"/melonJS/docs/melonjs/device.html#autoFocus"},"E5UGIjp2xcOSxvER552qw":{"uri":"/melonJS/docs/melonjs/device.html#beta"},"-eWXGfiuYS7_fdBn5rHrK":{"uri":"/melonJS/docs/melonjs/device.html#BlackBerry"},"8ELQmPec2Hg2SbBFpEj4g":{"uri":"/melonJS/docs/melonjs/device.html#chromeOS"},"rt7mShyZKK096KsSFgLJp":{"uri":"/melonJS/docs/melonjs/device.html#devicePixelRatio"},"AaM8CrUxZQWNfHmbBK7ji":{"uri":"/melonJS/docs/melonjs/device.html#ejecta"},"rSJ9YRF84EDx96u-EWJOd":{"uri":"/melonJS/docs/melonjs/device.html#gamma"},"mOISB7D5BDwHL5JvZWueI":{"uri":"/melonJS/docs/melonjs/device.html#hasAccelerometer"},"mY5OoeGtH5oLPtdKz89VA":{"uri":"/melonJS/docs/melonjs/device.html#hasDeviceOrientation"},"XlngSYqvm-LTW3zofVkhT":{"uri":"/melonJS/docs/melonjs/device.html#hasFullscreenSupport"},"pjyPken9bB2DpxrKDN_Tm":{"uri":"/melonJS/docs/melonjs/device.html#hasPointerLockSupport"},"ckSukJPxSgCswH0W4ThtV":{"uri":"/melonJS/docs/melonjs/device.html#hasWebAudio"},"AUOqLnjFvq8f-9JAcl0jW":{"uri":"/melonJS/docs/melonjs/device.html#iOS"},"YIjDFXFhllgP41ywlzZEE":{"uri":"/melonJS/docs/melonjs/device.html#isFullscreen"},"vbF5iRvcpex84ccEvReVE":{"uri":"/melonJS/docs/melonjs/device.html#isMobile"},"_Ggxk06yWziHI5YL0ZTjA":{"uri":"/melonJS/docs/melonjs/device.html#isWeixin"},"A03ik5FLjtEtxRbJmmhd2":{"uri":"/melonJS/docs/melonjs/device.html#Kindle"},"Uy6IlS4IWgTWzVLZ4Z_Eu":{"uri":"/melonJS/docs/melonjs/device.html#language"},"YrwkKg3wgyFHVmdzqSXpm":{"uri":"/melonJS/docs/melonjs/device.html#linux"},"f-kpAXKiYAhdKcIvSLUQk":{"uri":"/melonJS/docs/melonjs/device.html#localStorage"},"rpsU8OBVLYe2-nThHF8PI":{"uri":"/melonJS/docs/melonjs/device.html#maxTouchPoints"},"5yI921W2J7vDLW3upMw3t":{"uri":"/melonJS/docs/melonjs/device.html#nativeBase64"},"vkcCZpO_CaktbZpnAGrhT":{"uri":"/melonJS/docs/melonjs/device.html#nodeJS"},"DDCZd81E0KualQh88AXGG":{"uri":"/melonJS/docs/melonjs/device.html#OffScreenCanvas"},"VjdBrqMAISJNfdGQk7Ffc":{"uri":"/melonJS/docs/melonjs/device.html#pauseOnBlur"},"siHiTnOJNZmM91GOXj_Zn":{"uri":"/melonJS/docs/melonjs/device.html#resumeOnFocus"},"VNOTnv5uQbIDUOHiNnCTv":{"uri":"/melonJS/docs/melonjs/device.html#ScreenOrientation"},"swMvzuH2UpTS3e00nYqWk":{"uri":"/melonJS/docs/melonjs/device.html#sound"},"p0doIoo4KaS5g_QQCGDSg":{"uri":"/melonJS/docs/melonjs/device.html#stopOnBlur"},"rIGEuEiLKpSmGkmKa8Fby":{"uri":"/melonJS/docs/melonjs/device.html#touch"},"BNrZYqL-22kE7VYbPzUfj":{"uri":"/melonJS/docs/melonjs/device.html#ua"},"ceWMK004e3iWb_oufIjAm":{"uri":"/melonJS/docs/melonjs/device.html#wheel"},"iDNhZ87vetd-JW6zH2SA2":{"uri":"/melonJS/docs/melonjs/device.html#wp"},"TMzIUkOnObpFvj4zYwp8J":{"uri":"/melonJS/docs/melonjs/device.html#turnOffPointerLock"},"4Y0xi8g-Lis-155e6q22M":{"uri":"/melonJS/docs/melonjs/device.html#turnOnPointerLock"},"hODJDgpl1KmSCBX2cyC4p":{"uri":"/melonJS/docs/melonjs/device/enableSwipe.html"},"achnAV6FnbkNStWs3Qr6X":{"uri":"/melonJS/docs/melonjs/device/exitFullscreen.html"},"9rVCbfss_zxvaNH6liiZq":{"uri":"/melonJS/docs/melonjs/device/focus.html"},"8sGEEYur4ISgoVkl7rz-5":{"uri":"/melonJS/docs/melonjs/device/getElement.html"},"RArke9SyYBSf7twZCzz6W":{"uri":"/melonJS/docs/melonjs/device/getElementBounds.html"},"IHh0njdUH1MckhlVYE5eb":{"uri":"/melonJS/docs/melonjs/device/getMaxShaderPrecision.html"},"GL1YxHo1cRR2D3tU1vUZe":{"uri":"/melonJS/docs/melonjs/device/getParentBounds.html"},"SNJFA0jk0X9B2DneVKC_k":{"uri":"/melonJS/docs/melonjs/device/getParentElement.html"},"zUG8IAYpWZ_9UwBxVWRo-":{"uri":"/melonJS/docs/melonjs/device/getScreenOrientation.html"},"JVThahBWm3IOtCpss0Mic":{"uri":"/melonJS/docs/melonjs/device/getStorage.html"},"mdg0NyVbCYNJfTDefqmmp":{"uri":"/melonJS/docs/melonjs/device/isLandscape.html"},"0i0YIRLiR-EcSYrnASg65":{"uri":"/melonJS/docs/melonjs/device/isPortrait.html"},"-6XvOcAXSg_czvHKO4rH7":{"uri":"/melonJS/docs/melonjs/device/isWebGLSupported.html"},"7nIHNs-ozKeE7Zt9E0Hw4":{"uri":"/melonJS/docs/melonjs/device/lockOrientation.html"},"TshAay7wbppSWbpTm6V3W":{"uri":"/melonJS/docs/melonjs/device/onReady.html"},"KZYxGxACEWg0NwTlP_mAO":{"uri":"/melonJS/docs/melonjs/device/requestFullscreen.html"},"d_2UWLzDYP0Qx9cNZEC2-":{"uri":"/melonJS/docs/melonjs/device/unlockOrientation.html"},"_UCn5OQ7QJ26YB2b-39lc":{"uri":"/melonJS/docs/melonjs/device/unwatchAccelerometer.html"},"PajO9dfVqo94XAK_G_IO_":{"uri":"/melonJS/docs/melonjs/device/unwatchDeviceOrientation.html"},"H1TacTpwLmdheJyNr9l2S":{"uri":"/melonJS/docs/melonjs/device/vibrate.html"},"qVK9IY8Lg7Omv1AitVsAg":{"uri":"/melonJS/docs/melonjs/device/watchAccelerometer.html"},"HLlWONTPXFsLueCZ8U_1A":{"uri":"/melonJS/docs/melonjs/device/watchDeviceOrientation.html"},"vjgUJ8FlDsBLvtDBatsle":{"uri":"/melonJS/docs/melonjs/event.html"},"CR4msSLAOOTdGwYX39xiI":{"uri":"/melonJS/docs/melonjs/event.html#BOOT"},"pxCMPmucuCRVIXnIOG9dN":{"uri":"/melonJS/docs/melonjs/event.html#CANVAS_ONRESIZE"},"d39T8cWcG1zSo-dWbZSu4":{"uri":"/melonJS/docs/melonjs/event.html#DRAGEND"},"jHg6g80KrYzaoIo6SXGrL":{"uri":"/melonJS/docs/melonjs/event.html#DRAGSTART"},"1Q4sc0yOhDO7NNgieJW-b":{"uri":"/melonJS/docs/melonjs/event.html#GAME_AFTER_DRAW"},"oAPgl5EVD-IwsKevl_btH":{"uri":"/melonJS/docs/melonjs/event.html#GAME_AFTER_UPDATE"},"zabFDRc1cI1h9RKyRl-6C":{"uri":"/melonJS/docs/melonjs/event.html#GAME_BEFORE_DRAW"},"amvGbQhcyS6W4Lgh2B_oW":{"uri":"/melonJS/docs/melonjs/event.html#GAME_BEFORE_UPDATE"},"Y83-fAk-QmF725EcQ8Xks":{"uri":"/melonJS/docs/melonjs/event.html#GAME_INIT"},"BUMNesomLL8TI0QKs8v-p":{"uri":"/melonJS/docs/melonjs/event.html#GAME_RESET"},"iuD2CJgOz5edMpM95Ioin":{"uri":"/melonJS/docs/melonjs/event.html#GAME_UPDATE"},"yxCWuqPxrweWhpTzFyrUM":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_CONNECTED"},"t5sTGvcvuyZf-tCaPQ4lF":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_DISCONNECTED"},"eF6S-u0-FWy-bz4wbYH3I":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_UPDATE"},"SE4UTkjQZ6xZ-eZKUPXjl":{"uri":"/melonJS/docs/melonjs/event.html#KEYDOWN"},"adUccxUcl4x08jztoo4Ag":{"uri":"/melonJS/docs/melonjs/event.html#KEYUP"},"uhKKI78I8S3ZLSvYan0KZ":{"uri":"/melonJS/docs/melonjs/event.html#LEVEL_LOADED"},"9fMLJRvjgXHyEwj3V67am":{"uri":"/melonJS/docs/melonjs/event.html#LOADER_COMPLETE"},"l6T9MXsjcr6SUFb4puMtX":{"uri":"/melonJS/docs/melonjs/event.html#LOADER_PROGRESS"},"1q_xJ81QR8FMiV9fXp1Jp":{"uri":"/melonJS/docs/melonjs/event.html#ONCONTEXT_RESTORED"},"glgKMTdpRalBWV3rYG6ER":{"uri":"/melonJS/docs/melonjs/event.html#POINTERLOCKCHANGE"},"7PLlIDHklnC24eY7dHV_Y":{"uri":"/melonJS/docs/melonjs/event.html#POINTERMOVE"},"dkUHmcQvMky24MrW2Ao3r":{"uri":"/melonJS/docs/melonjs/event.html#STATE_CHANGE"},"mJzyNC5ObqWcu73V7YPjt":{"uri":"/melonJS/docs/melonjs/event.html#STATE_PAUSE"},"e25jYinaKPJH1aONosEKs":{"uri":"/melonJS/docs/melonjs/event.html#STATE_RESTART"},"lkQ6N-vH3_9T3jAHi2Rmg":{"uri":"/melonJS/docs/melonjs/event.html#STATE_RESUME"},"QofW0enKURjvm2zbWro46":{"uri":"/melonJS/docs/melonjs/event.html#STATE_STOP"},"lH9KEICyG6ehvjV7KvrTh":{"uri":"/melonJS/docs/melonjs/event.html#VIDEO_INIT"},"whaBmuxsfi-Re1n_HrxP4":{"uri":"/melonJS/docs/melonjs/event.html#VIEWPORT_ONCHANGE"},"S5Qht7JVSBLkiH3vaWeit":{"uri":"/melonJS/docs/melonjs/event.html#VIEWPORT_ONRESIZE"},"29BcSQMOqLXtG8c4vAx0c":{"uri":"/melonJS/docs/melonjs/event.html#WEBGL_ONCONTEXT_LOST"},"vaARexyKWuc6N98yDUBXa":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONORIENTATION_CHANGE"},"VBl8lDrMJaH7nLB59Xbkn":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONRESIZE"},"12w37AoEtFSfCmBIYbWp9":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONSCROLL"},"gkkbpC4ldeDrWXLb96RXe":{"uri":"/melonJS/docs/melonjs/event/emit.html"},"5X9BEL8tV2d3dCDHeAinf":{"uri":"/melonJS/docs/melonjs/event/off.html"},"zJ8BvUNRvNFRTTQotHMD_":{"uri":"/melonJS/docs/melonjs/event/on.html"},"e9X2c4SSTPLylYD6OgZFo":{"uri":"/melonJS/docs/melonjs/event/once.html"},"FvA2GK0De6UuE2lxqjPcR":{"uri":"/melonJS/docs/melonjs/game.html"},"YzT4GFStIQd_iOL2dcgkx":{"uri":"/melonJS/docs/melonjs/game.html#lastUpdate"},"U4a2r9xrxGhqOM9iXilzU":{"uri":"/melonJS/docs/melonjs/game.html#mergeGroup"},"OHy_1cBFpoyqBZ6KX-39X":{"uri":"/melonJS/docs/melonjs/game.html#sortOn"},"z7oWfBqYPdpk2uaXY8uj5":{"uri":"/melonJS/docs/melonjs/game.html#viewport"},"JO1W9pV-NZHTdkLxilCiQ":{"uri":"/melonJS/docs/melonjs/game.html#world"},"z6okTUpHfI2TIdLQS8IfD":{"uri":"/melonJS/docs/melonjs/game/getParentContainer.html"},"Ya9zOGdfhR4_I0EnMq_hg":{"uri":"/melonJS/docs/melonjs/game/onLevelLoaded.html"},"8AqP2anLvAmz7qAA6vOiQ":{"uri":"/melonJS/docs/melonjs/game/repaint.html"},"WDN53BncmxiofhAcPPpbZ":{"uri":"/melonJS/docs/melonjs/game/reset.html"},"L6Xi3l4hShwG5mrs_2Re7":{"uri":"/melonJS/docs/melonjs/game/updateFrameRate.html"},"hcYwjE7SuZIu3YBXkldSj":{"uri":"/melonJS/docs/melonjs/input.html"},"pGq0QeeC9OUX0BBoWjjOa":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD.html"},"vFL2GeB3mI9MK9uEcsp97":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD/AXES.html"},"-MjlBkWxIgJZQwIxDAr22":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD/BUTTONS.html"},"bVF0jt7r9v_NPq0LP3G7j":{"uri":"/melonJS/docs/melonjs/input/KEY.html"},"PXi7NC5RNB785s5wuoRZ3":{"uri":"/melonJS/docs/melonjs/input/KEY.html#A"},"xO3RbihcWRR5bDuVC19uh":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ADD"},"UpGYmxW0W-38jRxeX-DBP":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ALT"},"gfqBawo4qa4tJ6fMiLgj6":{"uri":"/melonJS/docs/melonjs/input/KEY.html#B"},"81nHt80VzcwYHmhRzUBMv":{"uri":"/melonJS/docs/melonjs/input/KEY.html#BACK_SLASH"},"jOlOUo4adsKzu67bZ8dzv":{"uri":"/melonJS/docs/melonjs/input/KEY.html#C"},"RIXX-R89meUCe1CtDAdFm":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CAPS_LOCK"},"k0FDGyeeUDuzrz5TmG3x8":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CLOSE_BRACKET"},"noJCK3uqUoe1c2dJzyyfT":{"uri":"/melonJS/docs/melonjs/input/KEY.html#COMMA"},"_wyrRqwenMd_XrAW2hNdV":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CTRL"},"USrux_lWzJW7Itfb_2Qyr":{"uri":"/melonJS/docs/melonjs/input/KEY.html#D"},"ZA6KB19D4ce7eWzrtiNjv":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DECIMAL"},"zMnuydOdTwPEPmm8fvFFg":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DELETE"},"v0c4Sv2qbnW12_N02eG4T":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DIVIDE"},"o_Iw7sEOdMXevLp_6an1X":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DOWN"},"treZipvUdIuHVN19dL3Rj":{"uri":"/melonJS/docs/melonjs/input/KEY.html#E"},"p_ta62O8FPIjS3rI1wft1":{"uri":"/melonJS/docs/melonjs/input/KEY.html#END"},"JXFZy41IJGmq5TWy4gGga":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ENTER"},"ex2OygDtigXT3f_CoDiTo":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ESC"},"oFseSLhZhkfNNYWwCoUzp":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F"},"25Dluu0go_1wHQE7wrH_M":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F1"},"Gw1XnyBnzT7XPzrlrKc5n":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F10"},"gj_OTFkgAqHFOa_JVaBtj":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F11"},"Bp0OPXkREWdd1-8Z7wezR":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F12"},"31laPfhEpruMXsP5foIII":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F2"},"OPutekup8iNDXTkCcd8M9":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F3"},"ol6IvZlNOq0OqM5R4Jn7r":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F4"},"8ofnzgVoK97GS73C26nRH":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F5"},"TuBQrAWhnPLdutxNh3yHh":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F6"},"ggWyz5E5SbQLecWakEMlq":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F7"},"9u21pwWWkZO2HKaSZyX9A":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F8"},"3YPMK2ciDKU63N83l7bec":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F9"},"q5elxjmrELINHAo9QPv7B":{"uri":"/melonJS/docs/melonjs/input/KEY.html#FORWAND_SLASH"},"CmpnnWyR9r13Wjl-kSyVO":{"uri":"/melonJS/docs/melonjs/input/KEY.html#G"},"6sVWTcH63IO5AV0gHmV-c":{"uri":"/melonJS/docs/melonjs/input/KEY.html#GRAVE_ACCENT"},"p2v9xZqsBpKS2-Ns9f1N_":{"uri":"/melonJS/docs/melonjs/input/KEY.html#H"},"M1AJFrShdg2WpLs2pf8cb":{"uri":"/melonJS/docs/melonjs/input/KEY.html#HOME"},"h7d53bXgcPiZemK4r19cx":{"uri":"/melonJS/docs/melonjs/input/KEY.html#I"},"v9UpvXZ8Fy8cjYSu1YRMq":{"uri":"/melonJS/docs/melonjs/input/KEY.html#INSERT"},"EiCVud1RAgXs9uJpSpQCP":{"uri":"/melonJS/docs/melonjs/input/KEY.html#J"},"8Y_R1qP5e3ZEX-f-oDQ9U":{"uri":"/melonJS/docs/melonjs/input/KEY.html#K"},"tiewhkIGEzVC17rOT6hTh":{"uri":"/melonJS/docs/melonjs/input/KEY.html#L"},"KTb3P00vFWxspMZRsUvra":{"uri":"/melonJS/docs/melonjs/input/KEY.html#LEFT"},"VI64C_kS66gvjQmTiB3ee":{"uri":"/melonJS/docs/melonjs/input/KEY.html#M"},"vNOD35Xl5XOm7d01N16kl":{"uri":"/melonJS/docs/melonjs/input/KEY.html#MINUS"},"nVA_PuwmvNCt7nu8fTDAe":{"uri":"/melonJS/docs/melonjs/input/KEY.html#MULTIPLY"},"50sdgqC9uqgdK1WnX3-Qf":{"uri":"/melonJS/docs/melonjs/input/KEY.html#N"},"_alvSdTjakei1buIP3wYa":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM_LOCK"},"y3snCxtpMogleWiom3-wH":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM0"},"O_juglzyq563ZwtWcB_sg":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM1"},"xqSVGMCwhyvxyWoFqVevj":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM2"},"g2kfU9nPZ2O8VIJS0T5AI":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM3"},"M0jcnyGHG6vemDosxxIjp":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM4"},"OcuiOGw-6ffKYxrY-iyLZ":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM5"},"Aqbc-_FKz5ahNptxBxUWe":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM6"},"6T1pYy4FSGvb5FAj2liFK":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM7"},"E9GIIQ7JEtEEB31l0uyk2":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM8"},"op0Nyo-Z3pCwRmaCjU1Pe":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM9"},"LCPoWSF7jzhmZms2RMVS1":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD0"},"FWU11DXZ3dV7yG348I-Iv":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD1"},"iE1AM1uUj04mKctdMWmYK":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD2"},"7Xn21wi0ohhiDxbatvlj6":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD3"},"PMa6csaqnjWvZJVNeGNvy":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD4"},"0Ce9FfLNZV1_HHvwm8tbO":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD5"},"y7746JQEKvc4miAqZ-jwW":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD6"},"HQqC-1a_SsjyW3M_N0p1V":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD7"},"pjvW1gAW3XUf45PAlXw_U":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD8"},"QZDAPajDGt1pK4Pu7vC8Q":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD9"},"bpnlilxbADHuSz10csFQi":{"uri":"/melonJS/docs/melonjs/input/KEY.html#O"},"ljrh96-2g_06dSX3v8wzR":{"uri":"/melonJS/docs/melonjs/input/KEY.html#OPEN_BRACKET"},"dudZeh8NQSTBfQ0FjpoYF":{"uri":"/melonJS/docs/melonjs/input/KEY.html#P"},"YLFt6aQ1lxM85ynXsGMoa":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAGE_DOWN"},"yuXcRyCjFMLpgAjVyBXNu":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAGE_UP"},"4NLFsnGw_YcTHxhiwUhbk":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAUSE"},"_rbNX-0bwyJ7zga4tzcug":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PERIOD"},"tis9X8dSf9zFShCtP8lCi":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PLUS"},"R0_UZaEXYS-_soP1pLwlG":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PRINT_SCREEN"},"EySnS7GNaYbypZB5maM7M":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Q"},"U2BcrJLYnRcS6D4UVFfQ0":{"uri":"/melonJS/docs/melonjs/input/KEY.html#R"},"VVuwawv04A06DN3weGMFa":{"uri":"/melonJS/docs/melonjs/input/KEY.html#RIGHT"},"ehh1sK0h9bkGPyhFYPOME":{"uri":"/melonJS/docs/melonjs/input/KEY.html#S"},"wtQESdFSiIy8glpQCdd9w":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SCROLL_LOCK"},"n-bIEC777N7q1oEeroGcW":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SEMICOLON"},"JPagD-CwrY1CATmoZQkXt":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SHIFT"},"ITLcPq_IDQk9JgQZnsxox":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SINGLE_QUOTE"},"BIEROUSrTbUH-4YCPtjT6":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SPACE"},"VEJbXEOv6Y_ljK9fiZ6z0":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SUBSTRACT"},"oWQMOOB9__XDQUHP16wRO":{"uri":"/melonJS/docs/melonjs/input/KEY.html#T"},"mEsbAfSiymjpiA6-wtwE0":{"uri":"/melonJS/docs/melonjs/input/KEY.html#TAB"},"DCqYVXnYauQiLHtiqQrzO":{"uri":"/melonJS/docs/melonjs/input/KEY.html#TILDE"},"RWjMlcYSElcnxXghrA7cS":{"uri":"/melonJS/docs/melonjs/input/KEY.html#U"},"bwog-QqY656miTRULRaiN":{"uri":"/melonJS/docs/melonjs/input/KEY.html#UP"},"KktaeXcGuYAnAHRyW7NAW":{"uri":"/melonJS/docs/melonjs/input/KEY.html#V"},"HVXGVOcNHnZFrgtgWYcOW":{"uri":"/melonJS/docs/melonjs/input/KEY.html#W"},"oyDSwwRdhQca8Zq1Otsls":{"uri":"/melonJS/docs/melonjs/input/KEY.html#WINDOW_KEY"},"YsBL79fBC8Ph5-pNuTlzC":{"uri":"/melonJS/docs/melonjs/input/KEY.html#X"},"EP28bCNSNrNemzA886mpy":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Y"},"CRThQTkmg-EDwb1oB_uJ6":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Z"},"QkzOXaUQuIJLQ3tgMa9eX":{"uri":"/melonJS/docs/melonjs/input.html#keyBoardEventTarget"},"9jJ2KzVe8Jf-IO9YbnmUy":{"uri":"/melonJS/docs/melonjs/input.html#locked"},"JbmVeCrUYrwSayGVTcDxV":{"uri":"/melonJS/docs/melonjs/input.html#pointer"},"3Yd_N-YHHbP2idaLLEyhk":{"uri":"/melonJS/docs/melonjs/input.html#pointerEventTarget"},"12xWbmAMcuOglhenjFgyr":{"uri":"/melonJS/docs/melonjs/input.html#preventDefault"},"_ReI8fv9PFgjXnd7P0vhC":{"uri":"/melonJS/docs/melonjs/input.html#setGamepadMapping"},"YzaxmN25oQKG9U5En3Jz8":{"uri":"/melonJS/docs/melonjs/input.html#throttlingInterval"},"a6gjGfHt--HL_4ryNAwBM":{"uri":"/melonJS/docs/melonjs/input/bindGamepad.html"},"bGnho0rK1v5Op_ta2BcR4":{"uri":"/melonJS/docs/melonjs/input/bindKey.html"},"mxo2LA8IoPbP948AxsCcn":{"uri":"/melonJS/docs/melonjs/input/bindPointer.html"},"GxZ7cUGZghglqGkVI5oC5":{"uri":"/melonJS/docs/melonjs/input/exitPointerLock.html"},"Ukrc7cmSPgaQCgBpd9EmW":{"uri":"/melonJS/docs/melonjs/input/getBindingKey.html"},"yQ2_609XqSIQdMU3o_4ab":{"uri":"/melonJS/docs/melonjs/input/globalToLocal.html"},"WyYcqled1PEQRzo5fRXyA":{"uri":"/melonJS/docs/melonjs/input/isKeyPressed.html"},"1wIAzm1eMA6xOO8ARobSZ":{"uri":"/melonJS/docs/melonjs/input/keyStatus.html"},"q6OqiTc-t9py9KVey1r6x":{"uri":"/melonJS/docs/melonjs/input/registerPointerEvent.html"},"TrQrC0FvuebPwZNVNgsQK":{"uri":"/melonJS/docs/melonjs/input/releaseAllPointerEvents.html"},"iHk9_U5uMt5O_1UlIMlLx":{"uri":"/melonJS/docs/melonjs/input/releasePointerEvent.html"},"veu2WRN5mQbTWxmCdBFwZ":{"uri":"/melonJS/docs/melonjs/input/requestPointerLock.html"},"p86S8mJecRDDKzJisTKPQ":{"uri":"/melonJS/docs/melonjs/input/setGamepadDeadzone.html"},"xsyW5cAeFwPZBl_KL-YRH":{"uri":"/melonJS/docs/melonjs/input/setTouchAction.html"},"YP0L3a2Ltx_aKH6sjPVMC":{"uri":"/melonJS/docs/melonjs/input/triggerKeyEvent.html"},"pHrmAozObDRFi7ZG0lKgF":{"uri":"/melonJS/docs/melonjs/input/unbindGamepad.html"},"W5d0ENgeZpkmF8xeqNUEc":{"uri":"/melonJS/docs/melonjs/input/unbindKey.html"},"CGXnHiR3EqeH1wVazTInO":{"uri":"/melonJS/docs/melonjs/input/unbindPointer.html"},"EK7C7BIMcF9RJfkJ1yihP":{"uri":"/melonJS/docs/melonjs/input/unlockKey.html"},"TNrfRmV9umyFrr4eVRkyP":{"uri":"/melonJS/docs/melonjs/level.html"},"QAMhN6VAFZwLonUQG3hXP":{"uri":"/melonJS/docs/melonjs/level.html#add"},"FPCg-qSx18YWKHYtmlu8T":{"uri":"/melonJS/docs/melonjs/level.html#getCurrentLevel"},"DE_r1mKtcK0PAeeqtSEYI":{"uri":"/melonJS/docs/melonjs/level.html#getCurrentLevelId"},"gpMFBNPoY707hHVG7biHn":{"uri":"/melonJS/docs/melonjs/level.html#levelCount"},"fjlfTG_gwVjogQuKrAf1k":{"uri":"/melonJS/docs/melonjs/level.html#load"},"voTNN0d24b9lyxTdMO0_G":{"uri":"/melonJS/docs/melonjs/level.html#next"},"kGWyxVez1yKi22Lgdcj9E":{"uri":"/melonJS/docs/melonjs/level.html#previous"},"_d57pnDRGU849qmNAaIZG":{"uri":"/melonJS/docs/melonjs/level.html#reload"},"u4A25oGzg-J0ZahJYcJbT":{"uri":"/melonJS/docs/melonjs/loader.html"},"fxWcSLSQrJvFnBshB8FrS":{"uri":"/melonJS/docs/melonjs/loader.html#crossOrigin"},"SbfwkoJpWn4NNijoMXEa5":{"uri":"/melonJS/docs/melonjs/loader.html#onload"},"KMdSS2BH1dLrZEqSmDrPC":{"uri":"/melonJS/docs/melonjs/loader.html#onProgress"},"63-SPbLfFqksjxE2AJ1lX":{"uri":"/melonJS/docs/melonjs/loader.html#withCredentials"},"q3TDqsL_DnN3B1XsJ3Y2p":{"uri":"/melonJS/docs/melonjs/loader.html#getBinary"},"HP8Oh4WMjbUm8KlsmI6pF":{"uri":"/melonJS/docs/melonjs/loader.html#getImage"},"srTA1fi_rE1a2OS1hUNK1":{"uri":"/melonJS/docs/melonjs/loader.html#getJSON"},"i4eXDnWNyJLoVz2pYVmg3":{"uri":"/melonJS/docs/melonjs/loader.html#getTMX"},"iHafser5Pnv2CIKr8qNhe":{"uri":"/melonJS/docs/melonjs/loader.html#load"},"fXxi-HInexp4YJsjeLDWl":{"uri":"/melonJS/docs/melonjs/loader.html#preload"},"fVkteS8vXxZ07m9tQDPxu":{"uri":"/melonJS/docs/melonjs/loader.html#setBaseURL"},"q1JK9bf3yuA5NlsrWDd0m":{"uri":"/melonJS/docs/melonjs/loader.html#unload"},"mHpRf_-IIfiRRzc6LZJ0_":{"uri":"/melonJS/docs/melonjs/loader.html#unloadAll"},"tVMokfwNHTJ4G9T0mnbxL":{"uri":"/melonJS/docs/melonjs/Math.html"},"2bt6LCYSVr7tMezvi-Ujd":{"uri":"/melonJS/docs/melonjs/Math.html#DEG_TO_RAD"},"eXpXQeqsaqk3bpcvDVVZe":{"uri":"/melonJS/docs/melonjs/Math.html#EPSILON"},"IVloujAsRvZ9EOenAFGhV":{"uri":"/melonJS/docs/melonjs/Math.html#ETA"},"vT0kZc388i178W67hG7sb":{"uri":"/melonJS/docs/melonjs/Math.html#RAD_TO_DEG"},"LjnuI3X-SlO4EnZ8Mw6iH":{"uri":"/melonJS/docs/melonjs/Math.html#TAU"},"nzyn1a4iOHs2Lgx_IGnZn":{"uri":"/melonJS/docs/melonjs/Math/clamp.html"},"NKZz2FR3pYbZQ0hZ-vNMF":{"uri":"/melonJS/docs/melonjs/Math/degToRad.html"},"7T--imNIQsea1dSkaSMdA":{"uri":"/melonJS/docs/melonjs/Math/isPowerOfTwo.html"},"y6p-91hStqF61aUFOozFW":{"uri":"/melonJS/docs/melonjs/Math/nextPowerOfTwo.html"},"s4Jhdj_IgJfSea24zPCRb":{"uri":"/melonJS/docs/melonjs/Math/radToDeg.html"},"Rri7bfhMLDJrVxRh-4XOQ":{"uri":"/melonJS/docs/melonjs/Math/random.html"},"BTd-mXclMurziuwHX8LGN":{"uri":"/melonJS/docs/melonjs/Math/randomFloat.html"},"i2EQAjTcfmWDPlAy9Cmvw":{"uri":"/melonJS/docs/melonjs/Math/round.html"},"Q3ZykUvyUb7RC0q2RCkMN":{"uri":"/melonJS/docs/melonjs/Math/toBeCloseTo.html"},"EZus3WnUyMTx5RwKjXod-":{"uri":"/melonJS/docs/melonjs/Math/weightedRandom.html"},"nLQV84iAic-kJV7TML_Fl":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html"},"cP7S2k6XmR41iPr_U1tQH":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#angle"},"P5_fTwPZVNWBZOYEV5MXp":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#angleVariation"},"AAV4Q2eyPsVDmv_SbMfu-":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#blendMode"},"vsheF5G2uNrwq2UUpQRNR":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#duration"},"NRsuVYFx-ZMKf-1k6zUaP":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#floating"},"FLsXwjMFlV5fOGoTXcKPn":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#followTrajectory"},"ZR4KA2LU3nL8M6GcAzYsW":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#framesToSkip"},"U8iKeeiyM-3J349RLvtGN":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#frequency"},"3xlhsAlHaFfkH7uMt9jBk":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#gravity"},"sRejejaLLQp3hFNJWsIjz":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#height"},"ykEwmH2f4d1nqap0MTYK9":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#image"},"WPUtwvmNukIpgCBxeNcXw":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxEndScale"},"QzK4B8hP9yJiXPWz4yoG4":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxLife"},"pap5AFHO9TbuVRodZB6pg":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxParticles"},"g69W_AO9fbgtA0EoGgfbv":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxRotation"},"JTPnM6Nx9I17A6ar8UMSZ":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxStartScale"},"ilv3X5SJJuRcwR8WXh4UI":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minEndScale"},"9yzWS6YGyXkRoJ_b20x6V":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minLife"},"YOTUUd8LQWcwyig82WaH3":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minRotation"},"5mr2ZHGMSjUivGnLoMGyI":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minStartScale"},"fkMlBizL1xXn3fcpoYbAC":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#onlyInViewport"},"FmHCiCvzIWU56RShmGl7M":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#speed"},"EtRejyh0d-hlpNF48NXKz":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#speedVariation"},"4ffWg1uoFtzeAHMWVKbxp":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#textureAdditive"},"EsY1u6fzaW4oe6PsZjIXF":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#textureSize"},"6S9yfqaJrjbgJKyFZ2LL-":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#tint"},"sDccAcYHH_chhclD3zA0L":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#totalParticles"},"-zXlC9GC3Js-k2FSJRlMC":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#width"},"pAG4PZVI5hG8XFABeRdr5":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#wind"},"DQwjKNu_c3Aq2X_yawRqA":{"uri":"/melonJS/docs/melonjs/plugin.html"},"l4M0CDQ8H62TCJRXrB9Ne":{"uri":"/melonJS/docs/melonjs/plugin/Base.html"},"fRzCw--_FUr2X4OM2s3sZ":{"uri":"/melonJS/docs/melonjs/plugin/Base.html#version"},"y7PLD8GcdUyvfnnYPAFYN":{"uri":"/melonJS/docs/melonjs/plugin/Base.html#constructor"},"CxVERq7Aq8Z5XDrqC6VIm":{"uri":"/melonJS/docs/melonjs/plugin.html#patch"},"eE5atbtv07Heyg3H0o12U":{"uri":"/melonJS/docs/melonjs/plugin.html#register"},"32n26TPe7npMkE_6ik8pY":{"uri":"/melonJS/docs/melonjs/plugins.html"},"oW9RyqwS6a8ygUhY-7a1y":{"uri":"/melonJS/docs/melonjs/pool.html"},"LTvQv0Y_ZVOOZ5A_khx5W":{"uri":"/melonJS/docs/melonjs/save.html"},"-xDbOTzjVMRhsJwt6GD2l":{"uri":"/melonJS/docs/melonjs/save.html#add"},"fCmfySV8Y_DsjblDUDgOs":{"uri":"/melonJS/docs/melonjs/save.html#remove"},"KPBjiOfIWZoFeFdLTOqgp":{"uri":"/melonJS/docs/melonjs/state.html"},"2Bw8zCls-Fdq9DPZCRzRE":{"uri":"/melonJS/docs/melonjs/state.html#CREDITS"},"Cyytwxyxzvi7QpUUlfCol":{"uri":"/melonJS/docs/melonjs/state.html#GAME_END"},"f7MKMETTTfi6XigvuhSm_":{"uri":"/melonJS/docs/melonjs/state.html#GAMEOVER"},"YX-Trry4h6XAEFCqHwkbQ":{"uri":"/melonJS/docs/melonjs/state.html#LOADING"},"17BhFSVEqeI7Ntqi2U0wF":{"uri":"/melonJS/docs/melonjs/state.html#MENU"},"S4mPLwaiG_KsuP1mJRk7W":{"uri":"/melonJS/docs/melonjs/state.html#PLAY"},"ug9m0VIFPPpBGXTyMKKOm":{"uri":"/melonJS/docs/melonjs/state.html#READY"},"gDj0fA0p6l-RXmJbh_LmM":{"uri":"/melonJS/docs/melonjs/state.html#SCORE"},"2_MHGUYlynynxoiTmy8N7":{"uri":"/melonJS/docs/melonjs/state.html#SETTINGS"},"lRRkDD6rRKIoVG_aZH3_e":{"uri":"/melonJS/docs/melonjs/state.html#SETTINGS"},"jTGXRER3IDVN-zqiwqZcE":{"uri":"/melonJS/docs/melonjs/state.html#USER"},"5NTLWWOz6XnfiQ74KX22K":{"uri":"/melonJS/docs/melonjs/state.html#change"},"qz51NG3YP7BsDp54S1drH":{"uri":"/melonJS/docs/melonjs/state.html#current"},"yiWan4etPh8Qs-vJNiJoc":{"uri":"/melonJS/docs/melonjs/state.html#isCurrent"},"3drAaKyQVThTdImcZqZ9F":{"uri":"/melonJS/docs/melonjs/state.html#isPaused"},"HwChSV3p-gfbUYIm_GszJ":{"uri":"/melonJS/docs/melonjs/state.html#isRunning"},"9yVWfgB7YWRdOIQ7sY2pT":{"uri":"/melonJS/docs/melonjs/state.html#pause"},"aEE_KWkR0FCEQ1DOWEcWz":{"uri":"/melonJS/docs/melonjs/state.html#restart"},"GNhZdb9g6WyfURLeooQfq":{"uri":"/melonJS/docs/melonjs/state.html#resume"},"-S_6qmdUTvSDesrPtqrJx":{"uri":"/melonJS/docs/melonjs/state.html#set"},"wNV60RE9DwCtXpEjnvY-_":{"uri":"/melonJS/docs/melonjs/state.html#set"},"TeUK4HRfR3L5NuRiX8RNj":{"uri":"/melonJS/docs/melonjs/state.html#setTransition"},"sUAuTPPenLt2YEXx0_Q10":{"uri":"/melonJS/docs/melonjs/state.html#stop"},"EUHjkrhHkctsa5luka6TF":{"uri":"/melonJS/docs/melonjs/state.html#transition"},"nfrul5mQlf2nj5cMEXemg":{"uri":"/melonJS/docs/melonjs/timer.html"},"2akydFZoyS_QKDQSPWKvV":{"uri":"/melonJS/docs/melonjs/timer.html#fps"},"boTlFkul80_SDgccaCP-I":{"uri":"/melonJS/docs/melonjs/timer.html#interpolation"},"n7D3DhrGdiABLm41xdJKp":{"uri":"/melonJS/docs/melonjs/timer.html#maxfps"},"pTMTnhsxUfKB8ARI2qukL":{"uri":"/melonJS/docs/melonjs/timer.html#tick"},"yr2Debc6lymsyylQ1H_nm":{"uri":"/melonJS/docs/melonjs/timer.html#clearInterval"},"ntvVmP6rdXWS7UJM_rKgh":{"uri":"/melonJS/docs/melonjs/timer.html#clearTimeout"},"AqlXlj-W58vQ6V7C-cojd":{"uri":"/melonJS/docs/melonjs/timer.html#getDelta"},"TJh0gT-DU_8Q0aeW0_Ysf":{"uri":"/melonJS/docs/melonjs/timer.html#getTime"},"lxIi9wpIRs_N2MzzM2aya":{"uri":"/melonJS/docs/melonjs/timer.html#setInterval"},"HsTPgnQjPfkK13EW5vW-Z":{"uri":"/melonJS/docs/melonjs/timer.html#setTimeout"},"86LELpMrPpw-H_UVwl9AZ":{"uri":"/melonJS/docs/melonjs/utils.html"},"6Yqdm2N3Mj_lmHPLoAtvI":{"uri":"/melonJS/docs/melonjs/utils/agent.html"},"vuxGIFAHsirJUtDGLV6ec":{"uri":"/melonJS/docs/melonjs/utils/agent/prefixed.html"},"Np2UByFyAZ6k0R47lLjfF":{"uri":"/melonJS/docs/melonjs/utils/agent/setPrefixed.html"},"G478Nk9W6doijsRYmSONH":{"uri":"/melonJS/docs/melonjs/utils/array.html"},"sjf46wy0tjBUxcZVA6HQ4":{"uri":"/melonJS/docs/melonjs/utils/array/random.html"},"wSe7HDPJ_R39T4Tef5FED":{"uri":"/melonJS/docs/melonjs/utils/array/remove.html"},"kI7L2IIM_Jyc4LjfqIJzI":{"uri":"/melonJS/docs/melonjs/utils/array/weightedRandom.html"},"9NAObm7_AV13FPN8ZJCkt":{"uri":"/melonJS/docs/melonjs/utils/file.html"},"dicb9_A4viXLKk0YN5O4x":{"uri":"/melonJS/docs/melonjs/utils/file/getBasename.html"},"AtMHwS9uk7CiMt7eZnN57":{"uri":"/melonJS/docs/melonjs/utils/file/getExtension.html"},"Yb0vPEJctwWZd8g4SZqXu":{"uri":"/melonJS/docs/melonjs/utils/function.html"},"WXRbMY-U6Tc2Bxz9rcrEo":{"uri":"/melonJS/docs/melonjs/utils/function/defer.html"},"tNc3KG1TrI75MN26xn-T6":{"uri":"/melonJS/docs/melonjs/utils/function/throttle.html"},"DyluoH5lQfZSLr-30bm4-":{"uri":"/melonJS/docs/melonjs/utils/string.html"},"LoKfIu2jagYamig6Rt5hQ":{"uri":"/melonJS/docs/melonjs/utils/string/capitalize.html"},"OF7QizE18TIzxg4lnQI7F":{"uri":"/melonJS/docs/melonjs/utils/string/isBoolean.html"},"4fxwvt7fLZT1eoiCsYBXD":{"uri":"/melonJS/docs/melonjs/utils/string/isNumeric.html"},"1v3C0jzacZDB4UL7U7Fq1":{"uri":"/melonJS/docs/melonjs/utils/string/toHex.html"},"4PFdN33cCsNN59LxdUzZJ":{"uri":"/melonJS/docs/melonjs/utils/string/trimLeft.html"},"ehUBTbDeULaVFn4Hm8yjz":{"uri":"/melonJS/docs/melonjs/utils/string/trimRight.html"},"hhFU1_aLVY6BbaKU2_Q8N":{"uri":"/melonJS/docs/melonjs/utils.html#checkVersion"},"CB4BiFZnmSm4AV25gyRs6":{"uri":"/melonJS/docs/melonjs/utils.html#getPixels"},"rFzHsRZFx7_2amtLmr_Un":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment"},"HZapHjx161oT--k-I36DW":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#debug"},"evwowTf2-VeGE-whS3-qp":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#debugToggleKey"},"jeGOHn-iFZRRljDaIZKm0":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#hitbox"},"mo8omMAaKMLkKGroxs-wd":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#quadtree"},"qFu_4fp5kSohlurcwU2FZ":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#velocity"},"k0Y6zuoGdOjslvzZXYDAT":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#webgl"},"5ZuhrfPF-ftNsEaNShB9U":{"uri":"/melonJS/docs/melonjs/video.html"},"y0FK4r41U252dF9PwRQBI":{"uri":"/melonJS/docs/melonjs/video.html#AUTO"},"vWYO8tkXs_4C5aVCcl_TV":{"uri":"/melonJS/docs/melonjs/video.html#CANVAS"},"beE5u6SrXYe5a5Ssh4WkU":{"uri":"/melonJS/docs/melonjs/video.html#renderer"},"e5TZe6X1g0d3MEGAXZdAt":{"uri":"/melonJS/docs/melonjs/video.html#scaleRatio"},"JiB1OOmi4r5C5KFaLO7jD":{"uri":"/melonJS/docs/melonjs/video.html#WEBGL"},"kPOOJTqCRK13oS387NKL3":{"uri":"/melonJS/docs/melonjs/video/createCanvas.html"},"P2qjDr7YIQDu_2pDpxFhe":{"uri":"/melonJS/docs/melonjs/video/getParent.html"},"AILQaZDv5ydGVp01UzZF8":{"uri":"/melonJS/docs/melonjs/video/init.html"},"JvEKzQ1Rj85gjv7vHzTHS":{"uri":"/melonJS/docs/melonjs/video/scale.html"},"S81hPnHnx0dB2ZBE_VFdC":{"uri":"/melonJS/docs/melonjs/BitmapText.html"},"LxTu52G880TYvFQ06zicY":{"uri":"/melonJS/docs/melonjs/BitmapText.html#alpha"},"MqpnXAwNxx4E39nZESRBK":{"uri":"/melonJS/docs/melonjs/BitmapText.html#alwaysUpdate"},"99UkIsYmfGT8Q1n9MW92o":{"uri":"/melonJS/docs/melonjs/BitmapText.html#ancestor"},"FBO7rmpYKC0o0RQUviYHK":{"uri":"/melonJS/docs/melonjs/BitmapText.html#anchorPoint"},"SqfS8o8hXiaG-cmtTpqJX":{"uri":"/melonJS/docs/melonjs/BitmapText.html#autoTransform"},"sHYZpGw-tFuZZ4Hk1eGHH":{"uri":"/melonJS/docs/melonjs/BitmapText.html#blendMode"},"0C2I4fVlKh0hwz8sfdNHh":{"uri":"/melonJS/docs/melonjs/BitmapText.html#body"},"E-KWv0EyvG1ccY0HeDER_":{"uri":"/melonJS/docs/melonjs/BitmapText.html#bottom"},"mzhXbV5ClfCUdVyFGvG1a":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerX"},"gS9ZcWWDuUxfc4oJED3IU":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerY"},"farf-h4mFmpNL2RIXL0Nk":{"uri":"/melonJS/docs/melonjs/BitmapText.html#currentTransform"},"JiJ8QjiiNc11DCyyQ0238":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fillStyle"},"A2cjo6HfwTdQEgd_6kk3F":{"uri":"/melonJS/docs/melonjs/BitmapText.html#floating"},"BB0MxO5ibfsBjBfpI-5X1":{"uri":"/melonJS/docs/melonjs/BitmapText.html#GUID"},"8iCgaVIx-vqv679RGxU2N":{"uri":"/melonJS/docs/melonjs/BitmapText.html#height"},"sf27UHkwXhFIZpf6wzQGp":{"uri":"/melonJS/docs/melonjs/BitmapText.html#inViewport"},"aZxDUjvXXBBk1pcGwfRIG":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isDirty"},"BI-IpVH9J5pfsbTFQeA52":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFlippedX"},"ownNqS5aZs6J8vrtB2lVv":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFlippedY"},"S1AbytrP_Z9xOIkjbKuOE":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFloating"},"D3ou6StjzJ0zq9TI5cver":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isKinematic"},"njGLgjKHzm8a0Q47QOxkw":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isPersistent"},"KIek9Zq0JP9c4e3yF-bHb":{"uri":"/melonJS/docs/melonjs/BitmapText.html#left"},"wjBFgUXLNdOGv0_TEh0jz":{"uri":"/melonJS/docs/melonjs/BitmapText.html#lineHeight"},"BcxqeklkllwsZQEpLepCF":{"uri":"/melonJS/docs/melonjs/BitmapText.html#mask"},"lHPH77nlSmN8HoAwhmBjt":{"uri":"/melonJS/docs/melonjs/BitmapText.html#name"},"zAVMgpnkEmou3tjHA023O":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onVisibilityChange"},"gDEkySXopEFHIw96kgrRt":{"uri":"/melonJS/docs/melonjs/BitmapText.html#points"},"QUS33LBS-513DelYIJZqZ":{"uri":"/melonJS/docs/melonjs/BitmapText.html#pos"},"sZVybEI4jgKoCYP4uLD9A":{"uri":"/melonJS/docs/melonjs/BitmapText.html#right"},"ABzyqCfAIBVS-5lf2XOtx":{"uri":"/melonJS/docs/melonjs/BitmapText.html#textAlign"},"0TU7HvWZlo0JJRzeu2nhf":{"uri":"/melonJS/docs/melonjs/BitmapText.html#textBaseline"},"N06Y87HMfkNGv0Cb348mA":{"uri":"/melonJS/docs/melonjs/BitmapText.html#tint"},"saW9VrIBCael8uyzgb954":{"uri":"/melonJS/docs/melonjs/BitmapText.html#top"},"W6YGiU00xJBHXqIjfur8k":{"uri":"/melonJS/docs/melonjs/BitmapText.html#updateWhenPaused"},"Q0EX5urZTiEMCILGsLHs5":{"uri":"/melonJS/docs/melonjs/BitmapText.html#width"},"w3fXmkwbbVMtYDID7HQRS":{"uri":"/melonJS/docs/melonjs/BitmapText.html#wordWrapWidth"},"lfD_i0-4xl0U2M46iEEoF":{"uri":"/melonJS/docs/melonjs/BitmapText.html#_text"},"EjXF7IuRNdeP6TAH8kNfm":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontData"},"US_Vcy0gQae9EcprQ8xHH":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontImage"},"RJswgdxyIA2mvARZWhOly":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontScale"},"xQWePpxauZEVthiebH6hJ":{"uri":"/melonJS/docs/melonjs/BitmapText.html#angleTo"},"m3O6yKqBZ3zK00lCs75xz":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerOn"},"DxIYn68mSvpWW-wkE-vBE":{"uri":"/melonJS/docs/melonjs/BitmapText.html#clone"},"Wgv_yWSTbYhyXk3fWWw1Z":{"uri":"/melonJS/docs/melonjs/BitmapText.html#constructor"},"pR7q4o2ZaqPpEY9Z-BFQW":{"uri":"/melonJS/docs/melonjs/BitmapText.html#contains"},"Ucl3NJhAXDgKX5v1BkvNk":{"uri":"/melonJS/docs/melonjs/BitmapText.html#copy"},"AwvDJvNY6LsXnS6oZ8wmP":{"uri":"/melonJS/docs/melonjs/BitmapText.html#distanceTo"},"AAnjjIaaXyyh5M5WFGFny":{"uri":"/melonJS/docs/melonjs/BitmapText.html#draw"},"YlWmij6QYrhkI5Nr74oja":{"uri":"/melonJS/docs/melonjs/BitmapText.html#equals"},"L-YDJNRgdAZDAr3-wlYlG":{"uri":"/melonJS/docs/melonjs/BitmapText.html#flipX"},"2MatbSta0rAa7oMlNOeUS":{"uri":"/melonJS/docs/melonjs/BitmapText.html#flipY"},"W4ORRPa91N55Cpcar4BW5":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getAbsolutePosition"},"olIcC9scpoMOuSPy1l64X":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getBounds"},"GWNonTlys4gnPOh7l8bYr":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getIndices"},"rZQvWqgDf2MFuJQSF6MMn":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getOpacity"},"_LMNGPd0n3flypZtsSJu3":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isConvex"},"HDXifNCYubgmWTGiCk71_":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFinite"},"XQwvsal62FqVMSTNIdpx8":{"uri":"/melonJS/docs/melonjs/BitmapText.html#lookAt"},"10tCnycVIQBkz7PeJ_E_3":{"uri":"/melonJS/docs/melonjs/BitmapText.html#measureText"},"IJTx00tNq1gTPpdGxp2LL":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onCollision"},"fXhRyvqQiYuKbwrC9VVbj":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onDestroyEvent"},"-IXQaTcpiZsB-LgL2X_kW":{"uri":"/melonJS/docs/melonjs/BitmapText.html#overlaps"},"V_6dRvGNHMQVB2vvhuOR-":{"uri":"/melonJS/docs/melonjs/BitmapText.html#recalc"},"-vJZAwjBS-mGjS4WpkkIF":{"uri":"/melonJS/docs/melonjs/BitmapText.html#resize"},"Zv8wZf_9Lv6QiWUZy8u9D":{"uri":"/melonJS/docs/melonjs/BitmapText.html#rotate"},"pLtDXiiSMoknwJMd48ENk":{"uri":"/melonJS/docs/melonjs/BitmapText.html#scale"},"05ni6dBYkcGP7cSPgokU7":{"uri":"/melonJS/docs/melonjs/BitmapText.html#scaleV"},"lcVwOXwiFGSaVsMi5w5gx":{"uri":"/melonJS/docs/melonjs/BitmapText.html#set"},"dZtD-ubiS_Dw11naY0w2p":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setOpacity"},"sabYcbw76A_wmcUkLjcF0":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setShape"},"Xnz2wv2EEdPSJOv1mX3Fh":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setText"},"RgSiaCI8q48fZVifdgx7H":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setVertices"},"PCROOf5XrRAa9Sxjn9kjD":{"uri":"/melonJS/docs/melonjs/BitmapText.html#shift"},"hxpaiH831X9PRBrK7hDcC":{"uri":"/melonJS/docs/melonjs/BitmapText.html#to2d"},"G_ScUohFUKYn3F-zbxl2S":{"uri":"/melonJS/docs/melonjs/BitmapText.html#toIso"},"YiaErhbZlY41Lu6gT93LV":{"uri":"/melonJS/docs/melonjs/BitmapText.html#toPolygon"},"Zo6tgqPCawAo8VlHjY3OD":{"uri":"/melonJS/docs/melonjs/BitmapText.html#transform"},"EolIQbnnQREfY-pIDC4zx":{"uri":"/melonJS/docs/melonjs/BitmapText.html#translate"},"1_E6qFFs1DvHMA8DlHuns":{"uri":"/melonJS/docs/melonjs/BitmapText.html#union"},"MuzMe5LBDrPgYw6RMsIER":{"uri":"/melonJS/docs/melonjs/BitmapText.html#postDraw"},"LHPO2UcfKu-V_wCLT0wYf":{"uri":"/melonJS/docs/melonjs/BitmapText.html#preDraw"},"k49r5bVWeMPcggTyZt0ey":{"uri":"/melonJS/docs/melonjs/BitmapText.html#update"},"HnR3LWt_P4pkC1D9cFtKC":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onAnchorUpdate"},"-dKqAH54WuMq4-dxXfu9U":{"uri":"/melonJS/docs/melonjs/Body.html"},"SmBYiUijmIPCs0OU-tv5r":{"uri":"/melonJS/docs/melonjs/Body.html#ancestor"},"qoPKnp2z_gWEz6oLa-rp1":{"uri":"/melonJS/docs/melonjs/Body.html#bounce"},"Yv9mvY95uuSm1rDnxNiQy":{"uri":"/melonJS/docs/melonjs/Body.html#bounds"},"lOF4YC5_95rN9NEzPPKNX":{"uri":"/melonJS/docs/melonjs/Body.html#collisionType"},"JF5MnJ67lx3d5eUR9GSQR":{"uri":"/melonJS/docs/melonjs/Body.html#falling"},"RFtZghvX-uyzM1uMNQiNf":{"uri":"/melonJS/docs/melonjs/Body.html#force"},"t3voUA8fS9AnSjRZR_YK_":{"uri":"/melonJS/docs/melonjs/Body.html#friction"},"ctk3iee2Zm8OBrIHLkdlP":{"uri":"/melonJS/docs/melonjs/Body.html#gravityScale"},"k8uPu-nIpzQoe3ufiJD2n":{"uri":"/melonJS/docs/melonjs/Body.html#ignoreGravity"},"3-xAwQ1Qh2YNvhF0LkOrs":{"uri":"/melonJS/docs/melonjs/Body.html#isStatic"},"0NZhuhnPSiAgZ7uyahsm1":{"uri":"/melonJS/docs/melonjs/Body.html#jumping"},"4ueai2_FRV1_gP0MVh1J8":{"uri":"/melonJS/docs/melonjs/Body.html#mass"},"HUAtIeqT7oPxWYRdy-4Q3":{"uri":"/melonJS/docs/melonjs/Body.html#maxVel"},"FgoPM8q7X0JY8RwvjhiWo":{"uri":"/melonJS/docs/melonjs/Body.html#vel"},"Z8GUS7MMnDo-M9w8A7dyc":{"uri":"/melonJS/docs/melonjs/Body.html#addShape"},"Zu-2s6tLwmNGW0YkNXh7f":{"uri":"/melonJS/docs/melonjs/Body.html#addVertices"},"3Il3zou2zveO5SFVH7dmg":{"uri":"/melonJS/docs/melonjs/Body.html#constructor"},"dYOTLgt46Kebm7HdkiWQT":{"uri":"/melonJS/docs/melonjs/Body.html#contains"},"5unqOkff5JjztD9oHJE6M":{"uri":"/melonJS/docs/melonjs/Body.html#contains"},"xov79POhf0sRPFbLIw0--":{"uri":"/melonJS/docs/melonjs/Body.html#forEach"},"4iaXucWILLmoNG2eiZUwc":{"uri":"/melonJS/docs/melonjs/Body.html#fromJSON"},"L2AQa_x25kiirrgxwEA6x":{"uri":"/melonJS/docs/melonjs/Body.html#getBounds"},"ZCWAIs_JSC0vZfwa-6Yls":{"uri":"/melonJS/docs/melonjs/Body.html#getShape"},"WlsQM-9CaoR5daB2C6g6r":{"uri":"/melonJS/docs/melonjs/Body.html#removeShape"},"_PEz1d-bCcFK95A-HFU4i":{"uri":"/melonJS/docs/melonjs/Body.html#removeShapeAt"},"MnUhSxxYUOh6gXLDf7ZQp":{"uri":"/melonJS/docs/melonjs/Body.html#respondToCollision"},"yrr3iHnbF-N8mTgHWQ03B":{"uri":"/melonJS/docs/melonjs/Body.html#rotate"},"okFT7fBQgPy8611SIeU1k":{"uri":"/melonJS/docs/melonjs/Body.html#setCollisionMask"},"eQrMY4qOEXJiR9jrrgQd_":{"uri":"/melonJS/docs/melonjs/Body.html#setCollisionType"},"bwd_XnqUCnhE_Y_KidbO9":{"uri":"/melonJS/docs/melonjs/Body.html#setFriction"},"1XJr7UQxwEmr_UjVpS0bd":{"uri":"/melonJS/docs/melonjs/Body.html#setMaxVelocity"},"gGy4wWSLXG0vlWk6yR_We":{"uri":"/melonJS/docs/melonjs/Body.html#setStatic"},"hE9773ZEzmSHmzpxo1sHV":{"uri":"/melonJS/docs/melonjs/Body.html#setVertices"},"qiySD01VNCT_KctuExfva":{"uri":"/melonJS/docs/melonjs/Body.html#update"},"JzJkctfirMvjTvhPpkiW9":{"uri":"/melonJS/docs/melonjs/Bounds.html"},"4l-ffrcS8vfBE_f8cbC1l":{"uri":"/melonJS/docs/melonjs/Bounds.html#bottom"},"BPg57aD1TREgnHwg9M03C":{"uri":"/melonJS/docs/melonjs/Bounds.html#center"},"ZjS8ymtp5TRSlNEGxooLr":{"uri":"/melonJS/docs/melonjs/Bounds.html#centerX"},"BpiVR7b5MtxbfsOYN09Y1":{"uri":"/melonJS/docs/melonjs/Bounds.html#centerY"},"PRsfWSfppsiyCzWQMH9KS":{"uri":"/melonJS/docs/melonjs/Bounds.html#left"},"1LlLeXEdqN8YCmrmPOtv9":{"uri":"/melonJS/docs/melonjs/Bounds.html#right"},"3b_3bTRE0U520RyQynSzP":{"uri":"/melonJS/docs/melonjs/Bounds.html#top"},"ROOZf5ElA051lNAkgpVoq":{"uri":"/melonJS/docs/melonjs/Bounds.html#width"},"uzmVrfjV6sAvGyLniO90u":{"uri":"/melonJS/docs/melonjs/Bounds.html#width"},"URZ4uEGTxKUr8LkuCtobB":{"uri":"/melonJS/docs/melonjs/Bounds.html#x"},"SqHXWQ9JKjTO4R0eMeD2i":{"uri":"/melonJS/docs/melonjs/Bounds.html#y"},"JKJnsnwQsr0vH-xRcsX28":{"uri":"/melonJS/docs/melonjs/Bounds.html#add"},"cIWTDljBLaudQXDx4GkX5":{"uri":"/melonJS/docs/melonjs/Bounds.html#addBounds"},"RtNqPsyVLxt3jcZjmEP0T":{"uri":"/melonJS/docs/melonjs/Bounds.html#addFrame"},"zTQn1b6NMCPh2aUQ7xRmt":{"uri":"/melonJS/docs/melonjs/Bounds.html#addPoint"},"z2cf9n3e6tHV_wAEePHlL":{"uri":"/melonJS/docs/melonjs/Bounds.html#clear"},"vJ0mWPvVoZ-N5Se1er5Q9":{"uri":"/melonJS/docs/melonjs/Bounds.html#clone"},"gyVOJOLjHu64lxYXJQTcF":{"uri":"/melonJS/docs/melonjs/Bounds.html#constructor"},"Kyy9mHiJlDk4UA2Yj-Zi6":{"uri":"/melonJS/docs/melonjs/Bounds.html#contains"},"p8CkpDLYiLQAh-AfyKuKv":{"uri":"/melonJS/docs/melonjs/Bounds.html#isFinite"},"7ORTT5qi51SEq1G4yrDau":{"uri":"/melonJS/docs/melonjs/Bounds.html#overlaps"},"ZlNUFj6wJLhR23AV2CaN_":{"uri":"/melonJS/docs/melonjs/Bounds.html#setMinMax"},"UZXFkgnQCbHVlQ4_cOjfT":{"uri":"/melonJS/docs/melonjs/Bounds.html#shift"},"oF4hkLxd2K-fwm0Tr0o0N":{"uri":"/melonJS/docs/melonjs/Bounds.html#toPolygon"},"1JThieENvlzP2HVdP20tZ":{"uri":"/melonJS/docs/melonjs/Bounds.html#translate"},"ewB1u5Z4Uy0ASNI4Txsga":{"uri":"/melonJS/docs/melonjs/Bounds.html#update"},"El8JohFOZCDJylR9vB7RD":{"uri":"/melonJS/docs/melonjs/Bounds.html#contains"},"B5CeIHQjxFd8cSI7Plntd":{"uri":"/melonJS/docs/melonjs/Bounds.html#shift"},"ThQhSBVudWbSflUwLFNov":{"uri":"/melonJS/docs/melonjs/Bounds.html#translate"},"4XO8eSApdrdHSk00Ts-F3":{"uri":"/melonJS/docs/melonjs/Camera2d.html"},"DVpVP0qLBs-RlzPNyN89r":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html"},"w9TDVi1DlY-wmCA0j5DXO":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#BOTH"},"RlFTtJe8HA9e5rjtT1ZUe":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#HORIZONTAL"},"jlkjwvysMpD2qW5N2YtLw":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#NONE"},"V6zjapt07-98s1-SPxxUm":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#VERTICAL"},"1j0JMzfSE8DgILGjitS3o":{"uri":"/melonJS/docs/melonjs/Camera2d.html#alpha"},"v0s3c3af-6ZLl7Yl7aPQi":{"uri":"/melonJS/docs/melonjs/Camera2d.html#alwaysUpdate"},"kR_H31Y2VRRAMlWZnekzs":{"uri":"/melonJS/docs/melonjs/Camera2d.html#ancestor"},"KeVsd3Dqh5EwLYxFNy8cH":{"uri":"/melonJS/docs/melonjs/Camera2d.html#anchorPoint"},"c9dZ3IwZ40OPkDlFKA79O":{"uri":"/melonJS/docs/melonjs/Camera2d.html#autoTransform"},"6s3W_yz3jnzJLI1oAS-JN":{"uri":"/melonJS/docs/melonjs/Camera2d.html#blendMode"},"jXCct538poCd0coCXGNdt":{"uri":"/melonJS/docs/melonjs/Camera2d.html#body"},"ZpoGhADcHClK8JS2sjhVM":{"uri":"/melonJS/docs/melonjs/Camera2d.html#bottom"},"LHKSpX0qo0jgF_JfBvxKj":{"uri":"/melonJS/docs/melonjs/Camera2d.html#bounds"},"iMu2rK8bdn27ZmeE41DVa":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerX"},"7kO49-xbXZz-rQYBwDIKI":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerY"},"M8Fr1VjZzPyrXQsmaZuDa":{"uri":"/melonJS/docs/melonjs/Camera2d.html#currentTransform"},"_6VythVZUEBgWhEJh3ewE":{"uri":"/melonJS/docs/melonjs/Camera2d.html#damping"},"G_KIzC3CRNAP9TKPTMeGz":{"uri":"/melonJS/docs/melonjs/Camera2d.html#far"},"IbFhR9jxwTT3or7b2Xa5c":{"uri":"/melonJS/docs/melonjs/Camera2d.html#floating"},"sJ1ZJ0aEOJOJXFm6Gdeng":{"uri":"/melonJS/docs/melonjs/Camera2d.html#GUID"},"fL1lov4jW7DRCTly78dZ0":{"uri":"/melonJS/docs/melonjs/Camera2d.html#height"},"au_AyVZvKR9EAWm5beT5l":{"uri":"/melonJS/docs/melonjs/Camera2d.html#inViewport"},"gwciaeA4NxBZfGuhV6jts":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isDirty"},"n5J8HltimInxTXjvgVPuS":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFlippedX"},"RJaGaplNmoPnkuMo1bFuI":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFlippedY"},"IQ_dQX7c3ptlFsK5k-ehi":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFloating"},"mBiVUWZy8saiA0EBTf_1q":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isKinematic"},"JoQaw1eVDAX6ljADDZpJo":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isPersistent"},"I5x5ZIY-kN2cQJ1IlTKpQ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#left"},"o0pq5wInAU5ic3WwABnOG":{"uri":"/melonJS/docs/melonjs/Camera2d.html#mask"},"ZdJNyJabz3ypK139yZ8Oc":{"uri":"/melonJS/docs/melonjs/Camera2d.html#name"},"6Jk3Fi747qqxpQLARkFqb":{"uri":"/melonJS/docs/melonjs/Camera2d.html#near"},"9SuYdmoLZDqViyntr2Yua":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onVisibilityChange"},"TzZWBzellKOGVOpERNRDp":{"uri":"/melonJS/docs/melonjs/Camera2d.html#points"},"Kes7VnJSCDv4hjgAO9QLd":{"uri":"/melonJS/docs/melonjs/Camera2d.html#pos"},"cuwRZJks6_Ypf80F2CA5V":{"uri":"/melonJS/docs/melonjs/Camera2d.html#projectionMatrix"},"ZcApX-d3fArMJ6S1dWCun":{"uri":"/melonJS/docs/melonjs/Camera2d.html#right"},"_KWtZ6ItqoKjXoI9lo6ef":{"uri":"/melonJS/docs/melonjs/Camera2d.html#tint"},"A-3dsa_1HjO22W7C003at":{"uri":"/melonJS/docs/melonjs/Camera2d.html#top"},"ZQQbVqtLDV66XxLW0KeaP":{"uri":"/melonJS/docs/melonjs/Camera2d.html#updateWhenPaused"},"fr1hnbX7WrbBOjiU7aXPD":{"uri":"/melonJS/docs/melonjs/Camera2d.html#width"},"tzleNhiTwJz7luJZSuVTd":{"uri":"/melonJS/docs/melonjs/Camera2d.html#smoothFollow"},"X62eYOeksZ5dA_qptoc2n":{"uri":"/melonJS/docs/melonjs/Camera2d.html#angleTo"},"j7dHzOAlNy1UTvDDddmDg":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerOn"},"mKbAegoNg9iOBWObwtqkn":{"uri":"/melonJS/docs/melonjs/Camera2d.html#clone"},"qtOyffKBxh06F5rvgmkNa":{"uri":"/melonJS/docs/melonjs/Camera2d.html#constructor"},"5-dhfABcvWMc22-F6N16A":{"uri":"/melonJS/docs/melonjs/Camera2d.html#contains"},"a8S97hdu5blwh7e_woDhc":{"uri":"/melonJS/docs/melonjs/Camera2d.html#copy"},"yaEO5pa-Xj9bxKlRgq75Z":{"uri":"/melonJS/docs/melonjs/Camera2d.html#distanceTo"},"rBTCdOeNP6kFVrGNM3g6D":{"uri":"/melonJS/docs/melonjs/Camera2d.html#equals"},"AMO3SmW5JgcvdDEMcl9dW":{"uri":"/melonJS/docs/melonjs/Camera2d.html#fadeIn"},"ZLfGvfCOMvhMsQ0w2ptqg":{"uri":"/melonJS/docs/melonjs/Camera2d.html#fadeOut"},"qaA0C30QxlqugSkcr6gJT":{"uri":"/melonJS/docs/melonjs/Camera2d.html#flipX"},"cvR_ZUow8CQtIUP0absXU":{"uri":"/melonJS/docs/melonjs/Camera2d.html#flipY"},"JCMpfzdHeoiohOaURlt_M":{"uri":"/melonJS/docs/melonjs/Camera2d.html#focusOn"},"0xFhAupShHXMBnT7qyFlf":{"uri":"/melonJS/docs/melonjs/Camera2d.html#follow"},"-gX3ZLxe36E9d_kMIVj-M":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getAbsolutePosition"},"LNn3DMrczegPtvaKxr7XV":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getBounds"},"SqRDnlj1F8NZv53Ilttoi":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getIndices"},"LPb8e-K0P-bXdCmlBzeid":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getOpacity"},"CvJiMgbsIhwwg_lozAmm9":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isConvex"},"-qcajMwRRv-JTjwQFP2X-":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFinite"},"RL1y08sUFXwhwz7ZxKV6h":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isVisible"},"lj3ThZIyrzD5H3YEz6Ref":{"uri":"/melonJS/docs/melonjs/Camera2d.html#localToWorld"},"D-LspmqhnclrooJyNv1o0":{"uri":"/melonJS/docs/melonjs/Camera2d.html#lookAt"},"lG9CHw4TQIrU7rCd2uo2w":{"uri":"/melonJS/docs/melonjs/Camera2d.html#move"},"DBx0FGhbii_Xo-AVHfwB1":{"uri":"/melonJS/docs/melonjs/Camera2d.html#moveTo"},"5vqMQT_iShSpOl8Zrn3Cp":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onCollision"},"z5AAnjBr4z4nunNcdX3X0":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onDestroyEvent"},"YJtbPQp-H9kKbAX9EyZ40":{"uri":"/melonJS/docs/melonjs/Camera2d.html#overlaps"},"1X5FUjfCuUZmtiGznHHUP":{"uri":"/melonJS/docs/melonjs/Camera2d.html#recalc"},"qO4EKQTnIcpdsrWTXSrb4":{"uri":"/melonJS/docs/melonjs/Camera2d.html#reset"},"45yCg4NjPQTj68RCO4P8P":{"uri":"/melonJS/docs/melonjs/Camera2d.html#resize"},"YEI2p36dsUCGBf-EVEOjR":{"uri":"/melonJS/docs/melonjs/Camera2d.html#rotate"},"yuYnz_DgiGSmclih5qftV":{"uri":"/melonJS/docs/melonjs/Camera2d.html#scale"},"Dcfl54cwzkO3dX4GPfDPz":{"uri":"/melonJS/docs/melonjs/Camera2d.html#scaleV"},"_3czbHiiMJf3GW7q079JN":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setBounds"},"CZPZDsAhETkNN3f7GYi3Z":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setDeadzone"},"WEWDCNr9JYb0yRG-SNUfM":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setOpacity"},"g92xP2SUNSVZ2Ly4dlNui":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setShape"},"IhU-x_0_WPke8GUd66HVV":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setVertices"},"kDS53NAyg9-CFy1LX_uYl":{"uri":"/melonJS/docs/melonjs/Camera2d.html#shake"},"dwqA_24VUcKx3-CcE_FWn":{"uri":"/melonJS/docs/melonjs/Camera2d.html#shift"},"ANNF4j-jvFXxU42YcjPwf":{"uri":"/melonJS/docs/melonjs/Camera2d.html#to2d"},"ptpOkwxAB9QBy2qI7ybfR":{"uri":"/melonJS/docs/melonjs/Camera2d.html#toIso"},"DV6-tJ9b367kVRqYim1xG":{"uri":"/melonJS/docs/melonjs/Camera2d.html#toPolygon"},"uL3jxHZtYN6YFiVcy1Tgo":{"uri":"/melonJS/docs/melonjs/Camera2d.html#transform"},"04wW4FtvuaK5IoQy0Gdvw":{"uri":"/melonJS/docs/melonjs/Camera2d.html#translate"},"hKHC5VLjSJPBOMEQhXNVm":{"uri":"/melonJS/docs/melonjs/Camera2d.html#unfollow"},"JAdf6Tb9X5VuESmlIYLGh":{"uri":"/melonJS/docs/melonjs/Camera2d.html#union"},"uSqEFRQjYUyPb_5I5kuK5":{"uri":"/melonJS/docs/melonjs/Camera2d.html#worldToLocal"},"hc9y5ItFJf-b5kM9Tzi7L":{"uri":"/melonJS/docs/melonjs/Camera2d.html#draw"},"nZWSh1aW1u6tf0lUEdemq":{"uri":"/melonJS/docs/melonjs/Camera2d.html#postDraw"},"xj8qc1sAPMG1EPMM80rSa":{"uri":"/melonJS/docs/melonjs/Camera2d.html#preDraw"},"m4DTgqyMmAY8JLVrYhom4":{"uri":"/melonJS/docs/melonjs/Camera2d.html#update"},"xnn6hAglisQ8CWyC1HIP0":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onAnchorUpdate"},"NlylsZ4Di6toQTtKsz2KN":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html"},"t4R_Gaz7jz2ulok3uexU4":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#isContextValid"},"OnPOQ2q2zc3zeClczxEwO":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#path2D"},"Uhcdqu9c4nIu7R-Otc4xQ":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#settings"},"ABvw6Dh9yU__jh4dbxK43":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clear"},"Y060702-PRYmrHCKz2ArB":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearColor"},"TtDaU2cglqyRhG7lt1wQ4":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearMask"},"9iHBQWyQcS6wVjbhqCVUS":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearRect"},"Cy8WxTLKkhjbfiDgh2RgV":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearTint"},"pio9Z5OP5lt1YBwtii9Xk":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clipRect"},"p1w0ldOka-st0pKP_IufT":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#constructor"},"JCEuvDPgiu5HTkKDyLXGD":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#createPattern"},"kck34wcwXikaQZM0Nt2k2":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#drawImage"},"vsthbdwdS8k2aMduET8v5":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#drawPattern"},"seWE5ExYody-Nd4D3fe4P":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fill"},"t5Xy3sZr1ZVMnRxer7svJ":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillArc"},"DQYYRkcafpe3K9LENUR4Z":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillEllipse"},"zyCIwNK-_jvE037-TPsL1":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillLine"},"cPXy00CdE7NtR0-T2NPTS":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillPolygon"},"kA8EpqUAanatzaWE7q9x_":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillRect"},"5yNsaY6llaklpGKggWZaX":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillRoundRect"},"CVPznD33zgwb78s-h9oAZ":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#flush"},"5Y9ONwCOCuLpL86iRlHvM":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getBlendMode"},"6PGZQNjHMbd_K0XqyULWp":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getCanvas"},"SVzdaRSpKZtczfl--SsTC":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getColor"},"YR52eb3e4K9RFMLimpBEk":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getContext"},"Af4MLtC2oqpWsVX-pkv8b":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getContext2d"},"DvEFTwNNoghpNzPBod_IR":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getGlobalAlpha"},"1dIZoHhdGv63ovVCG-dTt":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getHeight"},"YLWu4bxEQqABhDWMOaBd-":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getScreenCanvas"},"J5oaoVBu-CCbzjr8FpeQB":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getScreenContext"},"tV9KlCQ6zuwgdshVmlCTw":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getWidth"},"wjFr_4KkLlnD2sIKuYrWw":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#globalAlpha"},"PZRV91JkfXjlG3ipbv2HP":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#overlaps"},"C08Etqnl9XKcM3CubValq":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#reset"},"BEYvh11J4L4mZxo8lc_gj":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#resetTransform"},"SSkHf2k5O3i3fbf1iV1VU":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#resize"},"_lNne1q9hIrDfHWLtvizL":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#restore"},"wIrjqsiAGGXkjCYRfEAGO":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#rotate"},"rYP_6tvjn42fGqv11HTAK":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#save"},"1ZvOuyX1GWA9htyQcm1EC":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#scale"},"bpajEq0KJCxAvF9ENKB3a":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setAntiAlias"},"M4aYGpIB7XyKahcxUOmwd":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setBlendMode"},"LRoJOp3kwrfew8g-PjnFw":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setColor"},"G17S95mp00jyA8zQIpjc9":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setGlobalAlpha"},"_JXQ2Fo04CapLufbFFHNd":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setLineWidth"},"NuM2pYZKvUMm_rMgo9K01":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setMask"},"pm1gCMA-yxexC8ZYwIggp":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setProjection"},"__de5ZHiLKeN_6ergD1KA":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setTint"},"1d8l-dOr525Jk-dyVZ859":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setTransform"},"T7WkomEVtvY_JNly82aCB":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#stroke"},"ir62pC4P7XZlQzxATqZMc":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeArc"},"lDMyJNfQtCO1QoxIjQPSf":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeEllipse"},"yiXv7ON-H769Ez_2HknEE":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeLine"},"Li8o0DqmB9Ex5-8wQY3rr":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokePolygon"},"0UoPEdCcTVZsTPSZSf-wt":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeRect"},"H3aB2Fn4GshfKHXdihizs":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeRoundRect"},"-G1oVNqT5u9FZFD-5YFBx":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#tint"},"NL4SJ365cnJX6EwPZI6D6":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#transform"},"VZ0pq6bfsHuounhJ6idgs":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#translate"},"kBLJYfHZLN9GrcS4sGr33":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html"},"8yJDhcaAH_ul_WayEEyv9":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#canvas"},"AIo4KFPRuGetRCU-V8IUE":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#context"},"tt8fTRzmEQPsAcRuZy0kG":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#height"},"po6k6PXyScCHCcXer-8dh":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#width"},"_Rlh28JG40TkX9M5hiEYC":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#clear"},"djvSy5zR_zFouBRKMp3y4":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#constructor"},"PhCvdjENhjGyveitb35s4":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#resize"},"IB2dHiadaK7vcFfOGb1Xq":{"uri":"/melonJS/docs/melonjs/Collectable.html"},"NpvQlAa1uREox2pButysz":{"uri":"/melonJS/docs/melonjs/Collectable.html#alpha"},"rWTi_CBYfAYiiryVezGOR":{"uri":"/melonJS/docs/melonjs/Collectable.html#alwaysUpdate"},"KgT0ECjHA5Goy1OlC1dC8":{"uri":"/melonJS/docs/melonjs/Collectable.html#ancestor"},"y-PE8vlk349qIvMpNI9ts":{"uri":"/melonJS/docs/melonjs/Collectable.html#anchorPoint"},"fNVaSNiMmnEA5lQTCDB14":{"uri":"/melonJS/docs/melonjs/Collectable.html#animationpause"},"scPtscCwyy76SPsMLYGa4":{"uri":"/melonJS/docs/melonjs/Collectable.html#animationspeed"},"3MLQwy82sCy6PRaA7VtlY":{"uri":"/melonJS/docs/melonjs/Collectable.html#autoTransform"},"uTe2BrKleBXPlm4nYNEiU":{"uri":"/melonJS/docs/melonjs/Collectable.html#blendMode"},"d8QfSGmGtnlRNMVlsRj_4":{"uri":"/melonJS/docs/melonjs/Collectable.html#body"},"AqwWTJfNEN8KGW4CCNB3w":{"uri":"/melonJS/docs/melonjs/Collectable.html#bottom"},"TrEYGYzYwQKVHtUNJDvgx":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerX"},"ROZNvwFwK8VrJhqcOmJ5Z":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerY"},"jhzMkagnyDsFhKgvgbbWW":{"uri":"/melonJS/docs/melonjs/Collectable.html#currentTransform"},"heyXvMrR6ksOon1CoiSMq":{"uri":"/melonJS/docs/melonjs/Collectable.html#floating"},"7SkOJLmFKPUsw__uZP1Ma":{"uri":"/melonJS/docs/melonjs/Collectable.html#GUID"},"6ILsO_GwHhOmqtsP05WF_":{"uri":"/melonJS/docs/melonjs/Collectable.html#height"},"5os150sIhqJjIuLNxmU4M":{"uri":"/melonJS/docs/melonjs/Collectable.html#inViewport"},"9l9skPTube1dy3XS8ED5R":{"uri":"/melonJS/docs/melonjs/Collectable.html#isDirty"},"s8BiC7dianC0EPHDESVbN":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlippedX"},"04pIVSksH2YWpV0jPpfjv":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlippedY"},"c_dzJbpzdjmeEmsqJ1Iu5":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFloating"},"O-9BNjAlv3NYtkXzp_GN2":{"uri":"/melonJS/docs/melonjs/Collectable.html#isKinematic"},"eipqTV91ORirjyXg-nm_U":{"uri":"/melonJS/docs/melonjs/Collectable.html#isPersistent"},"URX9aSgpHjiB-jG0uuXxJ":{"uri":"/melonJS/docs/melonjs/Collectable.html#left"},"rig3LXhjXTzv-swp6WcwO":{"uri":"/melonJS/docs/melonjs/Collectable.html#mask"},"n_GjoJ8qIkkB494h5nWBC":{"uri":"/melonJS/docs/melonjs/Collectable.html#name"},"K7ED1A8aaw2ZjRtgtpj1z":{"uri":"/melonJS/docs/melonjs/Collectable.html#offset"},"BYbNuDWoFMSVuiDz_VXL3":{"uri":"/melonJS/docs/melonjs/Collectable.html#onVisibilityChange"},"5miVuoattrQI_blxf6Mcx":{"uri":"/melonJS/docs/melonjs/Collectable.html#points"},"Sxov68yCv1aTQi7IotSMI":{"uri":"/melonJS/docs/melonjs/Collectable.html#pos"},"-H2WRby_ZdiXt6Ufh_rjM":{"uri":"/melonJS/docs/melonjs/Collectable.html#right"},"fHa-LFWtO6A7UXSwsCMdJ":{"uri":"/melonJS/docs/melonjs/Collectable.html#source"},"rm3k3ycA9z-_28nxVwIA6":{"uri":"/melonJS/docs/melonjs/Collectable.html#tint"},"yOe_8rTX1fYHDU-i9Q7x-":{"uri":"/melonJS/docs/melonjs/Collectable.html#top"},"ZoaCfkT01W4PHoL4rnrcp":{"uri":"/melonJS/docs/melonjs/Collectable.html#updateWhenPaused"},"HNqLP4e2qKQGFrbRSYUFT":{"uri":"/melonJS/docs/melonjs/Collectable.html#width"},"EeRT98kOybZ8ar03TuOLC":{"uri":"/melonJS/docs/melonjs/Collectable.html#addAnimation"},"rjlGXq_zKvurP6AzH1yBi":{"uri":"/melonJS/docs/melonjs/Collectable.html#angleTo"},"WpGcTSzbjPJGQXfWiDVP7":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerOn"},"IprA3OowrUDKc3ap4atNY":{"uri":"/melonJS/docs/melonjs/Collectable.html#clone"},"7lnBb-TSvMg0jBIEYDupu":{"uri":"/melonJS/docs/melonjs/Collectable.html#constructor"},"yxHhzwRNZ3A-YI0kyNBE9":{"uri":"/melonJS/docs/melonjs/Collectable.html#contains"},"kbH5qWVSg6fBa0EQkoJJi":{"uri":"/melonJS/docs/melonjs/Collectable.html#copy"},"Xi0FblaD2qGTkl8MVoJEm":{"uri":"/melonJS/docs/melonjs/Collectable.html#distanceTo"},"_0NFTOYcBjMrwKWRi6C8w":{"uri":"/melonJS/docs/melonjs/Collectable.html#equals"},"t3amCQVQ0Nk-CL7KbBlsR":{"uri":"/melonJS/docs/melonjs/Collectable.html#flicker"},"Z5iF-KZpNG7mT7z0SP10S":{"uri":"/melonJS/docs/melonjs/Collectable.html#flipX"},"yrvJeMaD0REqt5ci5SdHI":{"uri":"/melonJS/docs/melonjs/Collectable.html#flipY"},"eMnYKz8ftuAGwzS0C9zQz":{"uri":"/melonJS/docs/melonjs/Collectable.html#getAbsolutePosition"},"cW3Qfju_5lprbPclP7j_v":{"uri":"/melonJS/docs/melonjs/Collectable.html#getBounds"},"1MNqx6M5bM41J7rk8XWAY":{"uri":"/melonJS/docs/melonjs/Collectable.html#getCurrentAnimationFrame"},"Dd67JL46AcT5aCjW27Y_l":{"uri":"/melonJS/docs/melonjs/Collectable.html#getIndices"},"hvRDAYgn_5Zw5a7GK8sIF":{"uri":"/melonJS/docs/melonjs/Collectable.html#getOpacity"},"ho6tMr6LkMLxCqjKBJp2E":{"uri":"/melonJS/docs/melonjs/Collectable.html#isConvex"},"JR9Mo3jcuNNgTOUtGBejN":{"uri":"/melonJS/docs/melonjs/Collectable.html#isCurrentAnimation"},"2qKm_cD5Ykminmgj1wYHU":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFinite"},"JTZ8JVNYDJQ21jST0TVRl":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlickering"},"2FGe7oz-_D7t_JUj4xRk3":{"uri":"/melonJS/docs/melonjs/Collectable.html#lookAt"},"RbGq2Rt52sqSUeipEN7fe":{"uri":"/melonJS/docs/melonjs/Collectable.html#onCollision"},"y3n1A2tNRwKPkIVtpV_Dp":{"uri":"/melonJS/docs/melonjs/Collectable.html#onDestroyEvent"},"oK7b8UZGuVxsrlPA5rpVj":{"uri":"/melonJS/docs/melonjs/Collectable.html#overlaps"},"1GZNKHJNWkgDU8efQChsL":{"uri":"/melonJS/docs/melonjs/Collectable.html#recalc"},"FM0BGgT8IRWzONYnScZuN":{"uri":"/melonJS/docs/melonjs/Collectable.html#resize"},"1xaVTDTfpj_tiCuyIQyCB":{"uri":"/melonJS/docs/melonjs/Collectable.html#reverseAnimation"},"Ujj8CEUSP9AHuheOT6tky":{"uri":"/melonJS/docs/melonjs/Collectable.html#rotate"},"chV5OuEbi6Z9iIpMtU5XP":{"uri":"/melonJS/docs/melonjs/Collectable.html#scale"},"1vjWjGWVUTVX6m7iJz7bX":{"uri":"/melonJS/docs/melonjs/Collectable.html#scaleV"},"z3rppJyZpmaPshz00Y4R9":{"uri":"/melonJS/docs/melonjs/Collectable.html#setAnimationFrame"},"PjEOVzXP0270b42C2Kh0-":{"uri":"/melonJS/docs/melonjs/Collectable.html#setCurrentAnimation"},"bkL145moxfvxn5SGnIIWk":{"uri":"/melonJS/docs/melonjs/Collectable.html#setOpacity"},"-_FYIoAY2jQAfVp4KMlsB":{"uri":"/melonJS/docs/melonjs/Collectable.html#setRegion"},"6P22GmyQN7g7MZ-nEKmw9":{"uri":"/melonJS/docs/melonjs/Collectable.html#setShape"},"TVuo0nBmmPZPzRH1hlYin":{"uri":"/melonJS/docs/melonjs/Collectable.html#setVertices"},"INBMhFJy3cSsiVVc8NCFO":{"uri":"/melonJS/docs/melonjs/Collectable.html#shift"},"uw_mf82w3UF9pnBDD6yfS":{"uri":"/melonJS/docs/melonjs/Collectable.html#to2d"},"9WooU_2D10yYhhWtWLi3K":{"uri":"/melonJS/docs/melonjs/Collectable.html#toIso"},"EGyyiYnfkiW6XjiSujkgX":{"uri":"/melonJS/docs/melonjs/Collectable.html#toPolygon"},"HND2903ravBbhLkaNr8F6":{"uri":"/melonJS/docs/melonjs/Collectable.html#transform"},"5x4kGdawvpj0dl09cGmn2":{"uri":"/melonJS/docs/melonjs/Collectable.html#translate"},"i-ZiXz58_cJ2LozkG9GWi":{"uri":"/melonJS/docs/melonjs/Collectable.html#union"},"hsVrmqsbT3spu8EGLlhn-":{"uri":"/melonJS/docs/melonjs/Collectable.html#draw"},"bszjokHZmPC76dylYeWyX":{"uri":"/melonJS/docs/melonjs/Collectable.html#postDraw"},"GerZ86hqj6EZ1TgpLvshu":{"uri":"/melonJS/docs/melonjs/Collectable.html#preDraw"},"lVTn1NYc4ehgSaGPgbwod":{"uri":"/melonJS/docs/melonjs/Collectable.html#update"},"zPAmGvxQjnm9CNWjg3p_r":{"uri":"/melonJS/docs/melonjs/Collectable.html#onAnchorUpdate"},"KAjcK2qUpU3ofIF4zbdgx":{"uri":"/melonJS/docs/melonjs/Color.html"},"01wn-cib5W1l4xcwk22rY":{"uri":"/melonJS/docs/melonjs/Color.html#alpha"},"drB7vdbVKr5UVYjxTohhi":{"uri":"/melonJS/docs/melonjs/Color.html#b"},"uG76TJzVxZk3pfo6oWkz6":{"uri":"/melonJS/docs/melonjs/Color.html#g"},"FYvIZw9ofe4b9OiOZZPHe":{"uri":"/melonJS/docs/melonjs/Color.html#r"},"x6iQ6qEwxYm62u5g093MW":{"uri":"/melonJS/docs/melonjs/Color.html#add"},"Hks6uyJ9sxPR-YFdUzoxR":{"uri":"/melonJS/docs/melonjs/Color.html#clone"},"xAmWIOwvytxMxTWQM4KKe":{"uri":"/melonJS/docs/melonjs/Color.html#constructor"},"nbm_WubwShmmtOsZlVvBO":{"uri":"/melonJS/docs/melonjs/Color.html#copy"},"redX8_8t15pGws4psoGPB":{"uri":"/melonJS/docs/melonjs/Color.html#darken"},"qo8mbw2wuiBiBr9x2d8dy":{"uri":"/melonJS/docs/melonjs/Color.html#equals"},"F897ef5KSqUyO9x_2CLsx":{"uri":"/melonJS/docs/melonjs/Color.html#lerp"},"E33Daw43ipNSa58W3hS4I":{"uri":"/melonJS/docs/melonjs/Color.html#lighten"},"rScgzC5q7fuXMoSDhZugw":{"uri":"/melonJS/docs/melonjs/Color.html#parseCSS"},"MikDuopRzJ4mrT-kQxuSt":{"uri":"/melonJS/docs/melonjs/Color.html#parseHex"},"o0kh0RiGZOljaCfv9STPd":{"uri":"/melonJS/docs/melonjs/Color.html#parseRGB"},"QdSnKsCGDi8Hy90sVdTO1":{"uri":"/melonJS/docs/melonjs/Color.html#random"},"miogw04ln7txENimJfv_p":{"uri":"/melonJS/docs/melonjs/Color.html#setColor"},"3XDsWVgzrgIUQDZfE1CWH":{"uri":"/melonJS/docs/melonjs/Color.html#toArray"},"Tx-xxb4sv-vHJD45c23mv":{"uri":"/melonJS/docs/melonjs/Color.html#toHex"},"TsDk1igu9zzm8ShKFZ-oe":{"uri":"/melonJS/docs/melonjs/Color.html#toHex8"},"1bcPK_s4GZUfkDhItxMwU":{"uri":"/melonJS/docs/melonjs/Color.html#toRGB"},"GFsZBZO9bmiNVo_vL36QE":{"uri":"/melonJS/docs/melonjs/Color.html#toRGBA"},"t9wyAtKx7ZwsFWxFbL5_K":{"uri":"/melonJS/docs/melonjs/Color.html#toUint32"},"t8EXcszzZdfaa88wGuflR":{"uri":"/melonJS/docs/melonjs/ColorLayer.html"},"nrIhhR7Pr6uHZfxuTUcW3":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#alpha"},"9J698lMNk6syaXmXInOhX":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#alwaysUpdate"},"Grd0eDO1MQRbbuSF8_6mr":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#ancestor"},"5-WkGqzqbb3ZGteiASJKo":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#anchorPoint"},"CWMLGFZuuqUuBZU7e4_3D":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#autoTransform"},"WNU0U1TymzqfcVBhkvi-v":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#blendMode"},"PC95KUXv9k-KFsA-R9_nb":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#body"},"44Vc7VDheQ7ujmG-S6w6K":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#bottom"},"vKiQZ65gVSmpzO2yyjP5b":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerX"},"xJKyEZ1LRAwaXMOoGsmDN":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerY"},"n_VZYkL-n7ptWY0rV2QuV":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#color"},"DxiB9CQQwUetACBrAoqn4":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#currentTransform"},"zXTm0pucC6KQ6gIw0B5_m":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#floating"},"aNE2v__I2zZWYMGSoIxvi":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#GUID"},"X2FY_VvHahRvT3_QBDcLk":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#height"},"VxnAx_WgoQZCvzFjffP5a":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#inViewport"},"g1tXPX3DnXKPP8P88gMl3":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isDirty"},"XyBEG4GgBbqea4raMriaO":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFlippedX"},"_I7c98n4B2y2wL6lGlSYI":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFlippedY"},"BQDkF1piOvoJPQb8NicC9":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFloating"},"Gu3Eag69VePLivA0aiHiC":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isKinematic"},"vsvesZixPN7gO9D0npFm_":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isPersistent"},"X0E9KDHBFUk4X3Pa64lZP":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#left"},"y7PO73CXOgSTV2SioNg-x":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#mask"},"yQfv3l7x8q22o3N6wmtSu":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#name"},"EqbVeS-t54r-Mnpd35P8r":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onVisibilityChange"},"CYbUqgcAxKKHzXZq6BDwx":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#points"},"eIjiCijyHemSpXm14oXw4":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#pos"},"glax5fRhsfEFV6zRPE0Ud":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#right"},"QMzskN3_TJdQ4f5onGxj_":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#tint"},"dyaiCYYB9MnijgTt78bLu":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#top"},"GHYqqyKgSmv09nywS2UBC":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#updateWhenPaused"},"S7mEcApHmgf9vtH1ZVNPi":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#width"},"Jec6ba3ZlmVhkm95QSG3O":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#angleTo"},"7I95UndWlwn9cv4PLl_Tq":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerOn"},"QLykqCnzMnPTp6lnYhhxl":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#clone"},"8sYx0YdjSHMms-B_ghqRX":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#constructor"},"-nBd4BsoOhiPGier34GOD":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#contains"},"0e2mAed96kJlDKWj7CaxW":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#copy"},"jauv3vt9RysFJkE3Z-PNl":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#distanceTo"},"ciyoQ2QKJWIq1jgOMYPbb":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#equals"},"YPDqX8aYbnWuGOUR_IMN3":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#flipX"},"qZGvNw0QZ6I6gdql71q0_":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#flipY"},"dG9t5wmzb40ZSgL_hbGBH":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getAbsolutePosition"},"Ct8KW3ctWjaDWnoEZml2F":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getBounds"},"ubXOARMrKg7nwWRvO4exz":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getIndices"},"g0hvGJLkzyvmeqqHmhSc9":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getOpacity"},"60iD6f-oMNKSJ2K5-PSzG":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isConvex"},"jrBPV33bvIm6QhaoLD_i2":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFinite"},"uTpq9A1LWKJyJctG8DYX6":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#lookAt"},"iLoKFP8JmJ_8W2LFLOj-m":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onCollision"},"7C5AytXK3uLjWGlscWgTZ":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onDestroyEvent"},"aBgB7N1n-7ZnldlCssbxV":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#overlaps"},"BKthuHJag0LlOwshDl6VI":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#recalc"},"kF7fD-wukAnhY2rhxzMKR":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#resize"},"BQEY6wtjJqsDFCwJZlIws":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#rotate"},"Gl8mxoxvXCFV8KoNCVGXN":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#scale"},"VdEr7hgyFQnvAP6uM91IB":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#scaleV"},"A962-XIEj7rW_l4FhbLT0":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setOpacity"},"oL_zMoKq3lJR4niOlJ4mo":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setShape"},"KdeKooEK4ADHOCJvACDUv":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setVertices"},"QxilD892r2PEGn4f4SBd8":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#shift"},"LpXKFPm6aun4gB_gHwT4A":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#to2d"},"HyMIzMXUK-J570tOOP0_Z":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#toIso"},"5Niv9w3h9Y1J18DwFQbvN":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#toPolygon"},"MM1D2enDpvxuc3TnEFnAp":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#transform"},"gUWS-rCNz9NqXDrxpLx0t":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#translate"},"bsL_ujYabxZBvkARbfSK2":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#union"},"sVwBkCE6OfqplOiqjdN88":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#draw"},"Kkl97WmBmslDA-mtMHqfo":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#postDraw"},"F1BHfprf2sdHhIfBreK2n":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#preDraw"},"cQnxBS_oGGHUVssFAyWLc":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#update"},"UJx6DRVuv_pOmk-A6kdEc":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onAnchorUpdate"},"BFe4Hmzv3IKGRHjVUH_1k":{"uri":"/melonJS/docs/melonjs/Container.html"},"lRGrpMOxsOhYVAp0X-s6Z":{"uri":"/melonJS/docs/melonjs/Container.html#alpha"},"BwD5z8euISIf3V_LzZmBN":{"uri":"/melonJS/docs/melonjs/Container.html#alwaysUpdate"},"kMyTsCQ04lFiLxwvR6keQ":{"uri":"/melonJS/docs/melonjs/Container.html#ancestor"},"lU9zR4fC88d5cQqKccEQM":{"uri":"/melonJS/docs/melonjs/Container.html#anchorPoint"},"5RuORfo0z6iYgWB3cwDZL":{"uri":"/melonJS/docs/melonjs/Container.html#autoDepth"},"EFEo5bBmDJdvqJktNG09u":{"uri":"/melonJS/docs/melonjs/Container.html#autoSort"},"RrKwrOrpn_yGyKlmRP4g2":{"uri":"/melonJS/docs/melonjs/Container.html#autoTransform"},"kCEGvgPrAoryyCTRCuTJr":{"uri":"/melonJS/docs/melonjs/Container.html#backgroundColor"},"MzOMNulrjiFrr1x2TEFCx":{"uri":"/melonJS/docs/melonjs/Container.html#blendMode"},"puxWrZFo8aZjwo_K8cneT":{"uri":"/melonJS/docs/melonjs/Container.html#body"},"Eq9nZIyxA_eQtXNQfYZrZ":{"uri":"/melonJS/docs/melonjs/Container.html#bottom"},"NE5RjFAxPmUPNrsar007n":{"uri":"/melonJS/docs/melonjs/Container.html#centerX"},"GLbE_8WB1T-9CaA1F9p9q":{"uri":"/melonJS/docs/melonjs/Container.html#centerY"},"CY3_c0wptWjSJCnsNq2t6":{"uri":"/melonJS/docs/melonjs/Container.html#clipping"},"iA0Hz-qLLc2jGDSHW2c8l":{"uri":"/melonJS/docs/melonjs/Container.html#currentTransform"},"POwj0GIQJCE2xd5ysMczP":{"uri":"/melonJS/docs/melonjs/Container.html#enableChildBoundsUpdate"},"rQ2m98tcViIw8JN9zZ1vU":{"uri":"/melonJS/docs/melonjs/Container.html#floating"},"SHa2ayOD6Nat2xcIwH4pS":{"uri":"/melonJS/docs/melonjs/Container.html#GUID"},"vZO08bsX1wcfIXC_SDzvr":{"uri":"/melonJS/docs/melonjs/Container.html#height"},"lYynNuPQYLckSOtAzYoTt":{"uri":"/melonJS/docs/melonjs/Container.html#inViewport"},"Q2Y1JelWklx2XVbAXAaU1":{"uri":"/melonJS/docs/melonjs/Container.html#isDirty"},"QtE9tfeHA6pU9pXFAWpu8":{"uri":"/melonJS/docs/melonjs/Container.html#isFlippedX"},"EIjrCdAiqaBdp3qlCQswY":{"uri":"/melonJS/docs/melonjs/Container.html#isFlippedY"},"NEtxQhMRQmI7pGtzwaOy-":{"uri":"/melonJS/docs/melonjs/Container.html#isFloating"},"TLpc0KrmNMl_hbCbQbN2R":{"uri":"/melonJS/docs/melonjs/Container.html#isKinematic"},"JYBHd2Eg7PHCSgN9YC9Fo":{"uri":"/melonJS/docs/melonjs/Container.html#isPersistent"},"7a06VeBrDlcdURhrHU_S7":{"uri":"/melonJS/docs/melonjs/Container.html#left"},"1YPfngg769mZq1FHsEAxZ":{"uri":"/melonJS/docs/melonjs/Container.html#mask"},"AyscGIKSFaVM83dDgOJNb":{"uri":"/melonJS/docs/melonjs/Container.html#name"},"JeMpWMNuHsKQD0WjEMO3g":{"uri":"/melonJS/docs/melonjs/Container.html#onVisibilityChange"},"ZNl_x0mZii8TJ7FTHi4_K":{"uri":"/melonJS/docs/melonjs/Container.html#points"},"5kXgu_tuYChrY-NhRZol6":{"uri":"/melonJS/docs/melonjs/Container.html#pos"},"4eIZ97IobmcbwHxAo0cfc":{"uri":"/melonJS/docs/melonjs/Container.html#right"},"xWpgGy-AopAYG_MVFcPmH":{"uri":"/melonJS/docs/melonjs/Container.html#root"},"UFyMJRgYEiQEEmxQha3Eg":{"uri":"/melonJS/docs/melonjs/Container.html#sortOn"},"9JGADn_6_8l7Infsj_mbq":{"uri":"/melonJS/docs/melonjs/Container.html#tint"},"XmAWZtnYfJUNECgsL-UFX":{"uri":"/melonJS/docs/melonjs/Container.html#top"},"uRhIPzDCPKW56L3_LsHcQ":{"uri":"/melonJS/docs/melonjs/Container.html#updateWhenPaused"},"y8jMz-TwyJsqeURueZToE":{"uri":"/melonJS/docs/melonjs/Container.html#width"},"X02ofyQnJ01FHYm3wQhFf":{"uri":"/melonJS/docs/melonjs/Container.html#addChild"},"SX78YMq4rJQQkli-S3-y8":{"uri":"/melonJS/docs/melonjs/Container.html#addChildAt"},"Se43yUEm9w6HVTqJbmFw0":{"uri":"/melonJS/docs/melonjs/Container.html#angleTo"},"F7XFmswX2OavSLa97onJ0":{"uri":"/melonJS/docs/melonjs/Container.html#centerOn"},"g4QhFcX1RL_o1zA582hNt":{"uri":"/melonJS/docs/melonjs/Container.html#clone"},"oDBfhq0cqA4mTf8kwKGZ0":{"uri":"/melonJS/docs/melonjs/Container.html#constructor"},"ErA0_MY2ezmaZr83bYF7f":{"uri":"/melonJS/docs/melonjs/Container.html#contains"},"rkJ3tAO5qVLYkhLyddrec":{"uri":"/melonJS/docs/melonjs/Container.html#copy"},"PTGZRrNn7POlwHBiDtT9R":{"uri":"/melonJS/docs/melonjs/Container.html#distanceTo"},"1YrFvk-nTLGsWmx3rgyE5":{"uri":"/melonJS/docs/melonjs/Container.html#equals"},"WrgVSu-hFiwAnZmFuKyj5":{"uri":"/melonJS/docs/melonjs/Container.html#flipX"},"5A2kQcNNOxn_372BERalD":{"uri":"/melonJS/docs/melonjs/Container.html#flipY"},"oZ5Oxboex8eTub-V4OBRf":{"uri":"/melonJS/docs/melonjs/Container.html#forEach"},"CMbg59iQ8XLa-SDR8TYiM":{"uri":"/melonJS/docs/melonjs/Container.html#getAbsolutePosition"},"ECJc-JfhLCGIxRqueSaVY":{"uri":"/melonJS/docs/melonjs/Container.html#getBounds"},"GJUijH7GpNde0F25vDrOn":{"uri":"/melonJS/docs/melonjs/Container.html#getChildAt"},"WivhKVMkoZch5yQIHTyYg":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByGUID"},"-CAIIpH0xRAVUKcCJDrpk":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByName"},"jgINPtSo-3LzEYNpKUdYd":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByProp"},"bi8UYjWfO-3WYnxZook97":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByType"},"oloCD7_bklYBHd3QUlnq1":{"uri":"/melonJS/docs/melonjs/Container.html#getChildIndex"},"7eE0r7hn_H9rOwx5Zm7eW":{"uri":"/melonJS/docs/melonjs/Container.html#getChildren"},"Lrh2UdrGcqVh3DxQuruVR":{"uri":"/melonJS/docs/melonjs/Container.html#getIndices"},"3D5DSBt1jJoMB_-8Bk7kU":{"uri":"/melonJS/docs/melonjs/Container.html#getNextChild"},"9tFcZ3cKfJpDmQ8Z8hjo5":{"uri":"/melonJS/docs/melonjs/Container.html#getOpacity"},"_QKS0LDEauu26nS0ENgET":{"uri":"/melonJS/docs/melonjs/Container.html#hasChild"},"A00a1k_B7bH69eHJ5Rn6o":{"uri":"/melonJS/docs/melonjs/Container.html#isConvex"},"_zoUPpYbgs7N_O99dxhBv":{"uri":"/melonJS/docs/melonjs/Container.html#isFinite"},"gpyjfV4xllOJSL9MHmNRS":{"uri":"/melonJS/docs/melonjs/Container.html#lookAt"},"LMSHAKUTN_2SmQ_hnHgvJ":{"uri":"/melonJS/docs/melonjs/Container.html#moveDown"},"Siw9uzJZh-Ri2p-UpKVeO":{"uri":"/melonJS/docs/melonjs/Container.html#moveToBottom"},"8TCz8nPF5ukSEfciOyOpg":{"uri":"/melonJS/docs/melonjs/Container.html#moveToTop"},"uhTWE54oXcQ50meFoTTg3":{"uri":"/melonJS/docs/melonjs/Container.html#moveUp"},"5s1-XYvUrrCWX7Q2WhRTV":{"uri":"/melonJS/docs/melonjs/Container.html#onChildChange"},"pa5UgHzF7eOH6US70qkUp":{"uri":"/melonJS/docs/melonjs/Container.html#onCollision"},"hMflHNdRb-Ler-MNNqdML":{"uri":"/melonJS/docs/melonjs/Container.html#onDestroyEvent"},"hRoxfHqhg5S0sEybVIKu_":{"uri":"/melonJS/docs/melonjs/Container.html#overlaps"},"jOVetazhVccDzDzTcg1RP":{"uri":"/melonJS/docs/melonjs/Container.html#recalc"},"whjN4jzJj03Y3Xqry4_SL":{"uri":"/melonJS/docs/melonjs/Container.html#removeChild"},"6FfQ-PVfzpr7g0HI9c_a8":{"uri":"/melonJS/docs/melonjs/Container.html#removeChildNow"},"jD5W1pGHrmylqWC-fFtwo":{"uri":"/melonJS/docs/melonjs/Container.html#reset"},"hRBA-0RzvmSmXv7XNUzq3":{"uri":"/melonJS/docs/melonjs/Container.html#resize"},"m_QjvsHqOPnsq8EHQrCMT":{"uri":"/melonJS/docs/melonjs/Container.html#rotate"},"tmoDbk52KW6RV9G0P3Qky":{"uri":"/melonJS/docs/melonjs/Container.html#scale"},"ZW_uKZ1jWrSxCZNin_Q7Z":{"uri":"/melonJS/docs/melonjs/Container.html#scaleV"},"JZ92PdFwfFo_8hnAHRcoy":{"uri":"/melonJS/docs/melonjs/Container.html#setChildsProperty"},"hazs0osVSf42IZSfel3ps":{"uri":"/melonJS/docs/melonjs/Container.html#setOpacity"},"0cHveiUXvUuDLHXPZIKaO":{"uri":"/melonJS/docs/melonjs/Container.html#setShape"},"8MKXrH0tuEWZBq-2ZsFno":{"uri":"/melonJS/docs/melonjs/Container.html#setVertices"},"ASfPB6cuVIcB8_efQQZ4O":{"uri":"/melonJS/docs/melonjs/Container.html#shift"},"wU4AgHGS7fTvtLJ_2TA3p":{"uri":"/melonJS/docs/melonjs/Container.html#sort"},"MKMjNQ7ifADFdgoSInBr8":{"uri":"/melonJS/docs/melonjs/Container.html#swapChildren"},"qH4JqfTNnLHiY3yCyx-Su":{"uri":"/melonJS/docs/melonjs/Container.html#to2d"},"nbxP0lUOCymfvr3t3uK5e":{"uri":"/melonJS/docs/melonjs/Container.html#toIso"},"dLwyCd-6dzFEXo_fyGzjm":{"uri":"/melonJS/docs/melonjs/Container.html#toPolygon"},"b_UrthdWQ8bVWBqK119Q7":{"uri":"/melonJS/docs/melonjs/Container.html#transform"},"yhwJjVvbe-sq7y-Ahb2jY":{"uri":"/melonJS/docs/melonjs/Container.html#translate"},"by2JwCXOEaW8rXp-AVeQt":{"uri":"/melonJS/docs/melonjs/Container.html#union"},"miqIIMg7UhiVyMC0nJcha":{"uri":"/melonJS/docs/melonjs/Container.html#draw"},"N3J-ynxeZwSGaoQlXYjrq":{"uri":"/melonJS/docs/melonjs/Container.html#postDraw"},"CBPC70hl2HabBt7yc4jHd":{"uri":"/melonJS/docs/melonjs/Container.html#preDraw"},"lRhlCfb5GxJ9It4WCcKAv":{"uri":"/melonJS/docs/melonjs/Container.html#update"},"KfGK5H9FC8viHilRzfS9C":{"uri":"/melonJS/docs/melonjs/Container.html#isAttachedToRoot"},"CQptiTDri_6Qzg4Tn3DtD":{"uri":"/melonJS/docs/melonjs/Container.html#onAnchorUpdate"},"f_UHsCbrlUjKKaGKUXYMR":{"uri":"/melonJS/docs/melonjs/Draggable.html"},"vLqJzPMbxFzBKbjfqZBB0":{"uri":"/melonJS/docs/melonjs/Draggable.html#alpha"},"4CRu0WJf1OwMxs3RSdqRo":{"uri":"/melonJS/docs/melonjs/Draggable.html#alwaysUpdate"},"wgOVWl8RlnNTpA1MSrZjR":{"uri":"/melonJS/docs/melonjs/Draggable.html#ancestor"},"3PaCpnmNuIlSn6R9m56OS":{"uri":"/melonJS/docs/melonjs/Draggable.html#anchorPoint"},"ODTBcY2MR3Btv91G1rT90":{"uri":"/melonJS/docs/melonjs/Draggable.html#autoTransform"},"soaQ5L26QVdbXmX9GEUrp":{"uri":"/melonJS/docs/melonjs/Draggable.html#blendMode"},"NQXQ9CWDFgaW65hAxcjMC":{"uri":"/melonJS/docs/melonjs/Draggable.html#body"},"XKbeHN9nxt7NCW3n_f3mn":{"uri":"/melonJS/docs/melonjs/Draggable.html#bottom"},"G_GgCiyuR1YPHVnex9MrG":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerX"},"QHMxE7bTxCXDjOcVnzUWV":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerY"},"r5MnCLPcnUK61C423BAH-":{"uri":"/melonJS/docs/melonjs/Draggable.html#currentTransform"},"8HugKQjy0qGcyFgF5fgyp":{"uri":"/melonJS/docs/melonjs/Draggable.html#floating"},"N8YlNkSMdC6Hxu_MgSyhl":{"uri":"/melonJS/docs/melonjs/Draggable.html#GUID"},"hcnqvOCCrJHn3H2F5nkDD":{"uri":"/melonJS/docs/melonjs/Draggable.html#height"},"q3l1l4LnmNv_BlD9Iucb_":{"uri":"/melonJS/docs/melonjs/Draggable.html#inViewport"},"XOD7TGi_-CoG8rxvMBZ4W":{"uri":"/melonJS/docs/melonjs/Draggable.html#isDirty"},"lHZlcr-4Du-_ajoxXiBd-":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFlippedX"},"0W5wfmDhxktG6gAjUgL6G":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFlippedY"},"R65wJo2C4nCsCDq40F-5U":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFloating"},"ldZpnmyVFyA8v8PZ7PZTT":{"uri":"/melonJS/docs/melonjs/Draggable.html#isKinematic"},"EAMgCuqpRsRx7I_tYFsPY":{"uri":"/melonJS/docs/melonjs/Draggable.html#isPersistent"},"827WbZC8_Yrw4DOWMuUOj":{"uri":"/melonJS/docs/melonjs/Draggable.html#left"},"dh1RZuX7aGteFxICAOQAf":{"uri":"/melonJS/docs/melonjs/Draggable.html#mask"},"8pNFUkuzrS5p4l_7rsGf4":{"uri":"/melonJS/docs/melonjs/Draggable.html#name"},"Bzzd4bWo2vgHQLgn4D8xl":{"uri":"/melonJS/docs/melonjs/Draggable.html#onVisibilityChange"},"MyW8hrJ-JBUEN9Ww2x5bt":{"uri":"/melonJS/docs/melonjs/Draggable.html#points"},"ZvNsCwmLLn6lfqIBYicTp":{"uri":"/melonJS/docs/melonjs/Draggable.html#pos"},"2edZ2Kdc25lyaUfYG1wMP":{"uri":"/melonJS/docs/melonjs/Draggable.html#right"},"1s5tqrO39nd_dntzIYCpH":{"uri":"/melonJS/docs/melonjs/Draggable.html#tint"},"wyaCW7CqFRZV0VWLoBJdZ":{"uri":"/melonJS/docs/melonjs/Draggable.html#top"},"K-9i9AlpCn8dor8Q1jYVx":{"uri":"/melonJS/docs/melonjs/Draggable.html#updateWhenPaused"},"kr2kvuB4JzlGWXT2bszGC":{"uri":"/melonJS/docs/melonjs/Draggable.html#width"},"MNg6aEgJhRYC-JFH6gm_M":{"uri":"/melonJS/docs/melonjs/Draggable.html#angleTo"},"83NnDPPwhSYGqFSKG8Kz0":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerOn"},"r3FCbJGP1fSWY4zysYK_7":{"uri":"/melonJS/docs/melonjs/Draggable.html#clone"},"CJGEDbJHDFDemJE985NF0":{"uri":"/melonJS/docs/melonjs/Draggable.html#constructor"},"qqVa3iOqx7oTKlMIqBiXu":{"uri":"/melonJS/docs/melonjs/Draggable.html#contains"},"3x-2KSyPkxCPXYaw6-Otc":{"uri":"/melonJS/docs/melonjs/Draggable.html#copy"},"6I9uRh6IIVWk7ixF0r2ag":{"uri":"/melonJS/docs/melonjs/Draggable.html#distanceTo"},"ohjhAVkwKi7jxw6lLcE-N":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragEnd"},"5DS5VA9Rq-PnpTm2p8azI":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragMove"},"7jpfiv-J8rtUlNX8EFGRz":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragStart"},"LdoKHu7umUOg6umGdhnTp":{"uri":"/melonJS/docs/melonjs/Draggable.html#equals"},"rxjYZSagpjeIwoC7jUZuM":{"uri":"/melonJS/docs/melonjs/Draggable.html#flipX"},"haCwgPCZqdPz6CUpQo6EH":{"uri":"/melonJS/docs/melonjs/Draggable.html#flipY"},"f8GJSixLZxvBU8kB8opJy":{"uri":"/melonJS/docs/melonjs/Draggable.html#getAbsolutePosition"},"zIfb3sJiRFvroTSHp8a20":{"uri":"/melonJS/docs/melonjs/Draggable.html#getBounds"},"mkdli4YyqgHlN3fvDstJm":{"uri":"/melonJS/docs/melonjs/Draggable.html#getIndices"},"_jC8ln4bEV62oAFIAbxWP":{"uri":"/melonJS/docs/melonjs/Draggable.html#getOpacity"},"dyVne3JQ3cFdPYzbaEgSv":{"uri":"/melonJS/docs/melonjs/Draggable.html#isConvex"},"8XEdISTIcQmL3PAik7iSw":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFinite"},"apz00BW3BuXywfnjQZOnz":{"uri":"/melonJS/docs/melonjs/Draggable.html#lookAt"},"N1ZO15Cq6SHjz_LX2Ya3F":{"uri":"/melonJS/docs/melonjs/Draggable.html#onCollision"},"Ib3T0InfZgpA8PRjqRmnU":{"uri":"/melonJS/docs/melonjs/Draggable.html#onDestroyEvent"},"EFWZlIm5h3htybnDnvC35":{"uri":"/melonJS/docs/melonjs/Draggable.html#overlaps"},"JzikSrJFSeUGjqbe5_vNZ":{"uri":"/melonJS/docs/melonjs/Draggable.html#recalc"},"rn8o1Rcxi-6dmKiBaRNjK":{"uri":"/melonJS/docs/melonjs/Draggable.html#resize"},"bqWIqxm2OLIad_h1dslfr":{"uri":"/melonJS/docs/melonjs/Draggable.html#rotate"},"ZWpX-GVSNz2hi6DnW5JF1":{"uri":"/melonJS/docs/melonjs/Draggable.html#scale"},"KW9B2ih0yaeUqJbWPeyb7":{"uri":"/melonJS/docs/melonjs/Draggable.html#scaleV"},"ZMqOMhiCG8KcHNRa2owxG":{"uri":"/melonJS/docs/melonjs/Draggable.html#setOpacity"},"fO8m6Fr97-jXiZXigQrZ3":{"uri":"/melonJS/docs/melonjs/Draggable.html#setShape"},"VdUKbxicFXhjpnDKVOk2s":{"uri":"/melonJS/docs/melonjs/Draggable.html#setVertices"},"pNoVj-X75CT5TtOle5ByD":{"uri":"/melonJS/docs/melonjs/Draggable.html#shift"},"gYwfwFsug0Exj0MWyk1zd":{"uri":"/melonJS/docs/melonjs/Draggable.html#to2d"},"l8O5Z9co09MlGZu4DGvC3":{"uri":"/melonJS/docs/melonjs/Draggable.html#toIso"},"mdVekfv4jUyrkI31zZOdl":{"uri":"/melonJS/docs/melonjs/Draggable.html#toPolygon"},"1-thocepFCSvXOmkzM-wq":{"uri":"/melonJS/docs/melonjs/Draggable.html#transform"},"HpEXS-qxxjmJgLdmNxjRa":{"uri":"/melonJS/docs/melonjs/Draggable.html#translate"},"o9r-DGQwllNDRRiozcG2F":{"uri":"/melonJS/docs/melonjs/Draggable.html#union"},"bShoIy93JwrOelnMcPcpX":{"uri":"/melonJS/docs/melonjs/Draggable.html#draw"},"Evshbr7xTY1wchP462qrt":{"uri":"/melonJS/docs/melonjs/Draggable.html#postDraw"},"zgGbzC63VHULlhvbJeQ4Y":{"uri":"/melonJS/docs/melonjs/Draggable.html#preDraw"},"F6p9coVSf9b_zjhMSCjto":{"uri":"/melonJS/docs/melonjs/Draggable.html#update"},"LFA7Fi507PyXBfz1_os2A":{"uri":"/melonJS/docs/melonjs/Draggable.html#initEvents"},"z4dqwcaSrlC4mM1SD1EAz":{"uri":"/melonJS/docs/melonjs/Draggable.html#onAnchorUpdate"},"Rm706kcgBu1sKwP63GY8Q":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html"},"lVLbbsxXeUWekamtDEkhM":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alive"},"56ee_0wFD5G0G8LBGVFEL":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alpha"},"AGSnGlNaLJuTyYuRaSU-9":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alwaysUpdate"},"Ao7TLAxhvsWiIlV_-qoLa":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#ancestor"},"uuMF1rVOW-bYm_8WbbvEt":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#anchorPoint"},"Sf0DYmrsOkwIHBrMedyhv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#autoTransform"},"SFD4Rt7M8QsqJ918XA_c5":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#blendMode"},"iy-VfXPbS5u9beEfRpGem":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#bottom"},"BvAAYOouKTqnAcWldDU-G":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerX"},"lVHecuI9kVBADzVI0vZJv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerY"},"fO47QJNz_J_iW4jDIPQoy":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#currentTransform"},"_s8QN-GYAlQ8BatyM3hHL":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#floating"},"RlC8Fb8vG64wERH4IKooS":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#GUID"},"RNCUJDF4fdcY5WZKkddxK":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#height"},"tE5tyRnJ9Y2o5y1TljSAt":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#id"},"Ubit_oZAk0-BzLuTj0fVZ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#inViewport"},"qELSip8csdAmCRAsyPL_u":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isDirty"},"UkgfUawjb6e2WqoBdKgsu":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFlippedX"},"mgPzi2OdHym0Hd1NPenb2":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFlippedY"},"YW0JixTXqpDYDy-8ktNCy":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFloating"},"aHj4DDMR-w6pf9WT9AcMv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isKinematic"},"wA9mbZeS5ODUORnhj4MNi":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isPersistent"},"Vp42XFQ6SThOdlg-qTNJs":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#left"},"OASZfyZoVxyFwlcEA1LYv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#mask"},"nSz_Xk3NmmEaFg_iOJZ7H":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#name"},"5r5VIvKe6SR2PEoAxOFcI":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onVisibilityChange"},"79XC5_p4xDKemh5FLWMbS":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#points"},"Np6cvV9rvp2fs-R1x2gWq":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#pos"},"38yTT6rc-sLsylC_RnIlt":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#renderable"},"WUMPGYMqJdGAcA46c0KTT":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#right"},"57__GDlhvLsNvcj3eG5ZH":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#tint"},"jp8sKv3V8PgcUWe9vUxYy":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#top"},"JaxoFFjl1AhvqIIMI-fHK":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#type"},"OzOuZ0D6PFv0uayW0KtWQ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#updateWhenPaused"},"DfacxCrsvLfvBY8VZ5KKv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#width"},"sR3bnWRYiLF48KHcyIY35":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#angleTo"},"dfziwDNOhMhDM-xWiQHt1":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerOn"},"b7vOst5xTyE8sSE2nM64F":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#clone"},"CWkrnjIQ5FunrvlNL7vzB":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#constructor"},"stovkp4SBsIESe4iVWYRQ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#contains"},"tUKVFQ6D0A2pJIWVraYsx":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#copy"},"0jMcn8M8HdHz5nRLPTlzb":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#distanceTo"},"a8ZraH1doFXyMxTflTR89":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#equals"},"GNvuS06L_nOlHcLzFtoB6":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#flipX"},"TKXYLAtDWS5L3GXb2ky0G":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#flipY"},"rndjjUfr7636SUrTG6UC8":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getAbsolutePosition"},"3BWnvPhZ69cvTZ1W1Bus1":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getBounds"},"Erd1w2PlWGr4Kq9ixyFLd":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getIndices"},"XlwnNOGQPvubJ9BdCmFV4":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getOpacity"},"tuXWVQTR-flfLhFadwqjk":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isConvex"},"o1rTEG6EMx2Et9uCj7zOn":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFinite"},"vB-zT0OJBzbjAVwZDCwMo":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#lookAt"},"aXnHewVMv68hIdJW8WFwV":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onCollision"},"zJyXt4KihGLLvO_UQgyXL":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onDeactivateEvent"},"dYKhHhfFjk6Ll8sNaisHz":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onDestroyEvent"},"Z-AD-cIn0F7NV6gX2yRZv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#overlaps"},"w-oNcU8WNatVRyi9uKv_S":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#recalc"},"6zLSMin6J5PwuMdx_wwBm":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#resize"},"sueU7YfN7Y-lqEwhT2dDm":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#rotate"},"KyMTtaV3DACtuMuwEFz6C":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#scale"},"nPXEh-arN4HgJ11aHvjIL":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#scaleV"},"uvyKm3-rDrILD8_I3rI-m":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setOpacity"},"CoOmJhxk0Kv1b849RnQT-":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setShape"},"tAxT1wwsrPwGaPMzjJ0TP":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setVertices"},"K0eTEWPGe8s6OhVnGhZAQ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#shift"},"XfURS6alhD346yb3XI7GT":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#to2d"},"s-4516IQMrGlmTamqj8ld":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#toIso"},"Gjs0vMCrB9op0EIh_Kpl3":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#toPolygon"},"A7BBI2Hk_DmIVmHp6N0D6":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#transform"},"H8l7CNr92DnUX4GDTWg_d":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#translate"},"NLknvz7QvWCnxEt3_KHCk":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#union"},"BX14lBrJZOtpTGPqUOP7r":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#draw"},"vk3HL7f4Y6eKtnFzIYDIq":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#postDraw"},"uAIWOBRz77_CULpS-Nltp":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#preDraw"},"iCV0LOEMeDNhkKoQvfVpk":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#update"},"3-_3aSRCL5oe3OfTm3aIY":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onAnchorUpdate"},"yxbAd2NcMd4bdcgeiEVZv":{"uri":"/melonJS/docs/melonjs/DropTarget.html"},"qElaIOCDn8tXiwZ5bLQcR":{"uri":"/melonJS/docs/melonjs/DropTarget.html#alpha"},"8uNelUeVNaOtewI2XH6C3":{"uri":"/melonJS/docs/melonjs/DropTarget.html#alwaysUpdate"},"z9z7TegTUInLkysNLa3vj":{"uri":"/melonJS/docs/melonjs/DropTarget.html#ancestor"},"AR1jlxI7RdVqKYp_NZNGk":{"uri":"/melonJS/docs/melonjs/DropTarget.html#anchorPoint"},"Y8W7zGp04Zl_jhrdHh4SR":{"uri":"/melonJS/docs/melonjs/DropTarget.html#autoTransform"},"ad0GaVw5lH6qrl5-FR3h1":{"uri":"/melonJS/docs/melonjs/DropTarget.html#blendMode"},"FMPvokAOHlj6rLuajDnHt":{"uri":"/melonJS/docs/melonjs/DropTarget.html#body"},"OrcnjAM5Cl42Ko2jFP83E":{"uri":"/melonJS/docs/melonjs/DropTarget.html#bottom"},"4JfGSdOEQoju5BJI372UI":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerX"},"8KZpvk-VkjTRuD3XCGi-J":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerY"},"M9vhRFvDCH8-FQKHbZCjL":{"uri":"/melonJS/docs/melonjs/DropTarget.html#checkMethod"},"Q5TP8SZTii5pc_DVVPTnz":{"uri":"/melonJS/docs/melonjs/DropTarget.html#CHECKMETHOD_CONTAINS"},"_wi0T75slCkyLXMfLA5_t":{"uri":"/melonJS/docs/melonjs/DropTarget.html#CHECKMETHOD_OVERLAP"},"4sBDq5KqrvSfGpeyzTgeh":{"uri":"/melonJS/docs/melonjs/DropTarget.html#currentTransform"},"oJtVKoNOFFgs9H00sG3u5":{"uri":"/melonJS/docs/melonjs/DropTarget.html#floating"},"AEmYJCwTCZ9FNahJL0n-9":{"uri":"/melonJS/docs/melonjs/DropTarget.html#GUID"},"ueNTyrtuP7EdU0GhfMYUa":{"uri":"/melonJS/docs/melonjs/DropTarget.html#height"},"Jwrz4wELPNJ2oyTw1dS-A":{"uri":"/melonJS/docs/melonjs/DropTarget.html#inViewport"},"9U229hqWF-PxRudukkVWu":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isDirty"},"A4ubjQOOumtShREG-fOIe":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFlippedX"},"efBGmSKWw0NePaqkm6i_T":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFlippedY"},"dKauQ1OvrnT1irRr1tdzU":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFloating"},"JJUZY4z7GD_sKsfiDP6fs":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isKinematic"},"RtQzRf-juGZ5yG9x5Grcc":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isPersistent"},"DQuKCsHbGBRIJiRlSHy7x":{"uri":"/melonJS/docs/melonjs/DropTarget.html#left"},"ShSnLrJmib4PJsDjBwLEa":{"uri":"/melonJS/docs/melonjs/DropTarget.html#mask"},"P5DgvaecKgDAL7sz5Ef0Y":{"uri":"/melonJS/docs/melonjs/DropTarget.html#name"},"vrPooRne1E7Rhqy6391Sl":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onVisibilityChange"},"C2CAoKz03ylmxn78aFID_":{"uri":"/melonJS/docs/melonjs/DropTarget.html#points"},"KeOxF8CRLPQK6Yc-WvXEn":{"uri":"/melonJS/docs/melonjs/DropTarget.html#pos"},"29ts1iHJv2ZUuDHQT1CqY":{"uri":"/melonJS/docs/melonjs/DropTarget.html#right"},"g6hVMUsNaY5yy0HF5Ty5v":{"uri":"/melonJS/docs/melonjs/DropTarget.html#tint"},"bcTujxUAGIl6kZXkFoI37":{"uri":"/melonJS/docs/melonjs/DropTarget.html#top"},"Mudw4pz7WJFqKHrWN9oxx":{"uri":"/melonJS/docs/melonjs/DropTarget.html#updateWhenPaused"},"jFZbTh4gn5ICpVPEwmlkh":{"uri":"/melonJS/docs/melonjs/DropTarget.html#width"},"LgLud1L1z0X4VRpMh1DB_":{"uri":"/melonJS/docs/melonjs/DropTarget.html#angleTo"},"UJopHdJHedJl-jsUqmfnB":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerOn"},"hMyC_pKrhmR3u4T5yC2Us":{"uri":"/melonJS/docs/melonjs/DropTarget.html#checkOnMe"},"iYU9ItlRbpkFQ8nonn-uk":{"uri":"/melonJS/docs/melonjs/DropTarget.html#clone"},"JdHTMD4G3x4ElfhGj0gQn":{"uri":"/melonJS/docs/melonjs/DropTarget.html#constructor"},"YhLTpbzALI9kVwSFnVO5N":{"uri":"/melonJS/docs/melonjs/DropTarget.html#contains"},"aTEPGdyJdiJxr1j8-eXgM":{"uri":"/melonJS/docs/melonjs/DropTarget.html#copy"},"898fZiFRJZ_k35ZD7d99m":{"uri":"/melonJS/docs/melonjs/DropTarget.html#distanceTo"},"pWKlOrvkAUM0-H6kcyzZW":{"uri":"/melonJS/docs/melonjs/DropTarget.html#drop"},"ov51WM-lphdOc9JSuhRou":{"uri":"/melonJS/docs/melonjs/DropTarget.html#equals"},"M4le377j8kLYIOT-iEC-r":{"uri":"/melonJS/docs/melonjs/DropTarget.html#flipX"},"wVzIa5ojbT4sXfxcuZ9Oc":{"uri":"/melonJS/docs/melonjs/DropTarget.html#flipY"},"ekOcQ__UuwTU8U9cpNO-5":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getAbsolutePosition"},"59vgsUwfgZEWB7Bc_n7fQ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getBounds"},"L9AS2z3NTlUiue9Y6_MPD":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getIndices"},"iYIaqAJ6e9q2gRt1Dfnu9":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getOpacity"},"yXKjsbN_GzEU7ZYSQYUFM":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isConvex"},"CFH0vZY0FgUYuqcMfk-Dt":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFinite"},"mu-Z2cqzYbjhvoIzPmhmo":{"uri":"/melonJS/docs/melonjs/DropTarget.html#lookAt"},"42Jn5khMF4DCLTeuOidPg":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onCollision"},"PaPu67B8U6maQIEzLY5Yj":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onDestroyEvent"},"vkPpn3bMB1xpyXgt_yxQF":{"uri":"/melonJS/docs/melonjs/DropTarget.html#overlaps"},"wyYMFKnwLzWK2rHWwNkHp":{"uri":"/melonJS/docs/melonjs/DropTarget.html#recalc"},"44qnemqniKHNWa5SfZDfB":{"uri":"/melonJS/docs/melonjs/DropTarget.html#resize"},"X-r6RBkKGt7aovgcIOZg-":{"uri":"/melonJS/docs/melonjs/DropTarget.html#rotate"},"spytQN_0u6Pe29F7n_zxG":{"uri":"/melonJS/docs/melonjs/DropTarget.html#scale"},"G_00ncWRZA7UDD3gZnMhQ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#scaleV"},"9Lfwc64ereJB6ThD7VObu":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setCheckMethod"},"yVCuNLfkQbnC2bM8rmxul":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setOpacity"},"TWbArlDiN9dolyZV_ZC1_":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setShape"},"2oxNM1Iy-cMQAhQMUbfZc":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setVertices"},"esRRC6bPX_bTbwVmVdQF_":{"uri":"/melonJS/docs/melonjs/DropTarget.html#shift"},"wqkifmRaoY0oC7rHoDl95":{"uri":"/melonJS/docs/melonjs/DropTarget.html#to2d"},"LDBrl-m5FB3x-C--9XvI3":{"uri":"/melonJS/docs/melonjs/DropTarget.html#toIso"},"AGJZUa81U_eIKm6bbOqrE":{"uri":"/melonJS/docs/melonjs/DropTarget.html#toPolygon"},"e17Rf7yrAFgEkf5wlqxtz":{"uri":"/melonJS/docs/melonjs/DropTarget.html#transform"},"5Hyww45Ubc5ssMy4uvl1l":{"uri":"/melonJS/docs/melonjs/DropTarget.html#translate"},"VR16fbeuux9bxQHLL2L3N":{"uri":"/melonJS/docs/melonjs/DropTarget.html#union"},"IWRA0Q9-kH7Y93_P2K7jV":{"uri":"/melonJS/docs/melonjs/DropTarget.html#draw"},"zeSJ4m_o30alLTPHrxrm5":{"uri":"/melonJS/docs/melonjs/DropTarget.html#postDraw"},"Nhx05JIP7UvSxjvaW-ayO":{"uri":"/melonJS/docs/melonjs/DropTarget.html#preDraw"},"6GIA0RapTnWVUikISyhWF":{"uri":"/melonJS/docs/melonjs/DropTarget.html#update"},"foOzUC9xC3fW2wxno64Qw":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onAnchorUpdate"},"JYJgmqFi0tw5NGiOO-s6I":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html"},"zsQjKg5QBoieHb-zI7KpH":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alive"},"KhiiM1-21ARTaNvOMnM7B":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alpha"},"3vjXgEYJYDCGNLbBp1E8q":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alwaysUpdate"},"HN5VdK8hL3J_z0MIaY2N5":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#ancestor"},"hCaSX27Gd30sy2FZaK2g1":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#anchorPoint"},"d8pWQSrmlk_rNx5GD10jm":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#autoTransform"},"GxwQw_PIOiYZfsKsEqper":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#blendMode"},"pS6mUaETFcvVpXXlaJHh3":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#bottom"},"KNzSzy-eMAhy_835d2DLW":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerX"},"3vieW122IPut6gp2fA4Jr":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerY"},"ZI-dqNe9T5X_cUM2Q_WH9":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#currentTransform"},"HXOv7l2LyeoS1TvwvPHEf":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#floating"},"emNsZ8tfcG1Ky7SbUDtth":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#GUID"},"usW7Qjd_vJH0-QvIURD5W":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#height"},"F-9fOblVWFCdsHc_14nxA":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#id"},"eVQmMGCFK5GDgJb1C3oAu":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#inViewport"},"ie4KXuOw_kbHkre5ke-dK":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isDirty"},"Jl8kYIiAgawOBrxfjL3ow":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFlippedX"},"WSkyQWbItCVLSwaJ2zKIS":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFlippedY"},"27iKSQwcG68nb5vc_gJ78":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFloating"},"LGnsLdkCPz4hxR6m1rSYU":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isKinematic"},"E8ehDoko9_S9OTu0TbnED":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isPersistent"},"QGhElryHCTcDdYH2TBUkh":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#left"},"gi9ufa2oHIUjHN6cE4jfO":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#mask"},"D5xONnwIcZnWL5Jz_QTPc":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#name"},"q2v2IJ0V2SjWSL3P15DSf":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onVisibilityChange"},"-4_3gk4w16Mq8aIMHmWBM":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#points"},"e3dZM9wHcOksr7e7oNtud":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#pos"},"_2mbSOofJYQCd4uEVfybz":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#renderable"},"tVhjh1zdN-h0c90fAdL_v":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#right"},"QHs4pWKk_4kdektuIZUru":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#tint"},"MYO2b7gKfH7-17wWpszZN":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#top"},"p6Gf-_jhvL49sI2ukv02R":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#type"},"4eqBrPyUeeyCSefB6xeLs":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#updateWhenPaused"},"xVRd93ct-10I8GrWdplG_":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#width"},"fKmO-TghuOLlbvHZrWVk2":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#angleTo"},"HRwmx6tVBk-4aD1HMe-m0":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerOn"},"PM2e72Hx70tuuwZu2t2zu":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#clone"},"LfwRSlJWGLar0QWjMR8i7":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#constructor"},"WFiBdbPIgfGlOjyFnEpXK":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#contains"},"sevmsBt0c3NZxOakPkPCU":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#copy"},"BaphQABVTls9qDaXAySGQ":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#distanceTo"},"mS7cXAt5OcfloNuXpnE9m":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#equals"},"oWDSYLHRa73YPVa8AVmgG":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#flipX"},"aVt-SLrm0Yjh4J7GVJChS":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#flipY"},"bi8UocrcovAZdF8v6XDiG":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getAbsolutePosition"},"GsDLDb509vgbP4mTnud7n":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getBounds"},"_orykjJma8v4R8TU8W0VT":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getIndices"},"wEwpVT2tc2eHYRhlVTqhH":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getOpacity"},"A6a1hytAyXhqX8vUwnSMr":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isConvex"},"i4jiJT-MqnN5UvzUm7VTF":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFinite"},"7m0Ny-BLWX3FXzF2WO-Fp":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#lookAt"},"-UvgcPvLlk_neduTgo84M":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onCollision"},"SB1ap4R9DTX4SUwt6w1yv":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onDeactivateEvent"},"mDUyjgoKfjSN2SeCt05g-":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onDestroyEvent"},"IE8Q2peckZ3YdQ_7QBVDe":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#overlaps"},"fXCVISBVJAYs4PqA862JQ":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#recalc"},"Mf_5dxHHC02o7OhBAHM_Y":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#resize"},"PaqmRo8DIYuYaUZ0jzU6p":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#rotate"},"GQfYIbOTFIAjnxqixSpKq":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#scale"},"3WOR-djeqZ3c2IYiieGlD":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#scaleV"},"f_fqC79hiPik-0bTUFB6q":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setOpacity"},"H1_o-yLCW8-E3UkEzeyMv":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setShape"},"TNiUMTQJmS0MhA_YknKry":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setVertices"},"f-W4NHGkTWVRUYJUinjS7":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#shift"},"j9DKpuMJyZKLQckLpoIJt":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#to2d"},"j5yJx_el5WkjXDr5PFn-n":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#toIso"},"_oQqzu5F-Gd0cTxKSVu1-":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#toPolygon"},"LEyyk0rJjISDpmggpLlQr":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#transform"},"eK6fiThmn9iJgfZhJ0yr_":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#translate"},"qAlyUYasiZaHzt7Q9F_05":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#union"},"PyMg39l0piau3ImE2iIS9":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#draw"},"SyHzzJnfSKWPy-Ljqbd2h":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#postDraw"},"Nkdc9tbDeopSodl9bE4X_":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#preDraw"},"kV0JrfnJ_Hqxtp8pXEhhZ":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#update"},"4USkkhLwSqJawhcINBCTY":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onAnchorUpdate"},"BfC1D5Ek4IiXCoE05ThMq":{"uri":"/melonJS/docs/melonjs/Ellipse.html"},"pjFoCQDPsDV6bM5NBAhIR":{"uri":"/melonJS/docs/melonjs/Ellipse.html#pos"},"epuAEAcb__Y6BskIksC_G":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radius"},"6ipzoulDiRH17-T08XTzn":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radiusSq"},"qE2MvwOMZSMJcPS1zNJgg":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radiusV"},"mdSUT_VLlMB9bx0XVX_Ye":{"uri":"/melonJS/docs/melonjs/Ellipse.html#ratio"},"t9x2C5xeCN3UMtDo7OXxS":{"uri":"/melonJS/docs/melonjs/Ellipse.html#_bounds"},"Cjy99luLsfErlUR5H-aES":{"uri":"/melonJS/docs/melonjs/Ellipse.html#clone"},"Zowg8vhPQP21igrqHs9Mt":{"uri":"/melonJS/docs/melonjs/Ellipse.html#constructor"},"hDUlY6UC0S9XEYjWkcL4f":{"uri":"/melonJS/docs/melonjs/Ellipse.html#contains"},"WeJ46m37De9d_ILkJxpc5":{"uri":"/melonJS/docs/melonjs/Ellipse.html#getBounds"},"uBkpNZsJzjnplSfzlDgV0":{"uri":"/melonJS/docs/melonjs/Ellipse.html#rotate"},"PatVO7mHgDlJSKvmKUhhP":{"uri":"/melonJS/docs/melonjs/Ellipse.html#scale"},"92j2XCoBUEeN1YA9f1jyq":{"uri":"/melonJS/docs/melonjs/Ellipse.html#scale"},"Oz5qlQypQvVHz62bCwqSh":{"uri":"/melonJS/docs/melonjs/Ellipse.html#setShape"},"XFCtl5Q7o8YftNL5xUNaz":{"uri":"/melonJS/docs/melonjs/Ellipse.html#transform"},"wAODlNBSBKUXiMIp52i1S":{"uri":"/melonJS/docs/melonjs/Ellipse.html#translate"},"Thi4VBn1kQO9MmYG3DyCz":{"uri":"/melonJS/docs/melonjs/Ellipse.html#contains"},"kkigD3ywGVsO9UZguPUri":{"uri":"/melonJS/docs/melonjs/Ellipse.html#translate"},"hqYYmRjK1RK8v-1yWwlUQ":{"uri":"/melonJS/docs/melonjs/Entity.html"},"9lnM_541OljXWgBrjx93m":{"uri":"/melonJS/docs/melonjs/Entity.html#alive"},"LEGfLobdgTe2Ud3yNs3UV":{"uri":"/melonJS/docs/melonjs/Entity.html#alpha"},"FuUtnWrbZeNLGiAJIGCGi":{"uri":"/melonJS/docs/melonjs/Entity.html#alwaysUpdate"},"yC_N2SMdx2gWE1wst3T9i":{"uri":"/melonJS/docs/melonjs/Entity.html#ancestor"},"PHutFip1UQh24sZRIDuFm":{"uri":"/melonJS/docs/melonjs/Entity.html#anchorPoint"},"jhp5IwELWMF6e7eN-Zke6":{"uri":"/melonJS/docs/melonjs/Entity.html#autoTransform"},"x_6LU-bCrc2P-jYofstCL":{"uri":"/melonJS/docs/melonjs/Entity.html#blendMode"},"MrVirIQqN4AgTaHCie_OY":{"uri":"/melonJS/docs/melonjs/Entity.html#bottom"},"3bHeU4PLhfFGWDH8nB6xE":{"uri":"/melonJS/docs/melonjs/Entity.html#centerX"},"Ba5kqJAGgkDJ6CK2eZfVo":{"uri":"/melonJS/docs/melonjs/Entity.html#centerY"},"CL0Yb4S1PdbrrY0mb2J4q":{"uri":"/melonJS/docs/melonjs/Entity.html#currentTransform"},"Yy9vx1JCRvkiGC0GUeQEu":{"uri":"/melonJS/docs/melonjs/Entity.html#floating"},"msXY46VLLfzKvS8191JcM":{"uri":"/melonJS/docs/melonjs/Entity.html#GUID"},"axfFKI7_cqJIQNwezTm0j":{"uri":"/melonJS/docs/melonjs/Entity.html#height"},"4OSGy-bJH03qfyyjy3QQ9":{"uri":"/melonJS/docs/melonjs/Entity.html#id"},"bG9lK1-LW9ZNsf5Sp2Uvg":{"uri":"/melonJS/docs/melonjs/Entity.html#inViewport"},"wSs07qGxA8XF6tHtijH73":{"uri":"/melonJS/docs/melonjs/Entity.html#isDirty"},"fwW67cK8x7jspxUj-fGvz":{"uri":"/melonJS/docs/melonjs/Entity.html#isFlippedX"},"RfbZUVFlPDup87OtB5dXQ":{"uri":"/melonJS/docs/melonjs/Entity.html#isFlippedY"},"s9GhpCW731ER0jT7k71fl":{"uri":"/melonJS/docs/melonjs/Entity.html#isFloating"},"q-Q7B0lFrRd37RdZVZCDH":{"uri":"/melonJS/docs/melonjs/Entity.html#isKinematic"},"Jh504XFCcK_XAIXfOUxZq":{"uri":"/melonJS/docs/melonjs/Entity.html#isPersistent"},"6B_wu5M2DwdDxpeVjBKO6":{"uri":"/melonJS/docs/melonjs/Entity.html#left"},"us3M6U5firoSMn-blhy3d":{"uri":"/melonJS/docs/melonjs/Entity.html#mask"},"oknZNWsRI6VtOS5KrdZKr":{"uri":"/melonJS/docs/melonjs/Entity.html#name"},"EsC78QWzgMQNBTZzVyOQU":{"uri":"/melonJS/docs/melonjs/Entity.html#onVisibilityChange"},"jc3eJcCXTP-QaO8z71JAT":{"uri":"/melonJS/docs/melonjs/Entity.html#points"},"fIooO0ujHXmK_wCqTZIrH":{"uri":"/melonJS/docs/melonjs/Entity.html#pos"},"q9Rx3SO3669UOGXsIpeQz":{"uri":"/melonJS/docs/melonjs/Entity.html#renderable"},"Xi-3IjvK4T9Yhtt634HoZ":{"uri":"/melonJS/docs/melonjs/Entity.html#right"},"eQ4lyviZDrN98uF3zzssO":{"uri":"/melonJS/docs/melonjs/Entity.html#tint"},"ln-hzE5HSSwf4EEBIdTSj":{"uri":"/melonJS/docs/melonjs/Entity.html#top"},"Zk6H6FNyffqET0YzLu0WI":{"uri":"/melonJS/docs/melonjs/Entity.html#type"},"Astxjl6cQhRvjKEzgT1jZ":{"uri":"/melonJS/docs/melonjs/Entity.html#updateWhenPaused"},"UbdUBOX2ccqr1FrTajgwo":{"uri":"/melonJS/docs/melonjs/Entity.html#width"},"xA_tjoIF4O6ps4WilP751":{"uri":"/melonJS/docs/melonjs/Entity.html#body"},"gb3cVZZ4aViWKIiuFW-jV":{"uri":"/melonJS/docs/melonjs/Entity.html#angleTo"},"9E0mJ2BoeyZNmKdPsHDaP":{"uri":"/melonJS/docs/melonjs/Entity.html#centerOn"},"HpC-2j1xEA2lJuUqc9lgJ":{"uri":"/melonJS/docs/melonjs/Entity.html#clone"},"kwDqbly7MfTd_ACZ8e1w5":{"uri":"/melonJS/docs/melonjs/Entity.html#constructor"},"P5yaG00g_6wP1ZgrL6Ojk":{"uri":"/melonJS/docs/melonjs/Entity.html#contains"},"x3syVek06IheEhRBLSOhV":{"uri":"/melonJS/docs/melonjs/Entity.html#copy"},"nqtqoDn0FSU3XD6Q0zape":{"uri":"/melonJS/docs/melonjs/Entity.html#distanceTo"},"WtduJhPEuIfTna-S1NlXI":{"uri":"/melonJS/docs/melonjs/Entity.html#equals"},"U9MFjsRyRs-xY6l_CP-GV":{"uri":"/melonJS/docs/melonjs/Entity.html#flipX"},"X0kAGRQHvzzeSSNMuYg5q":{"uri":"/melonJS/docs/melonjs/Entity.html#flipY"},"oxR7nkVYYWNpDl-1YtQVE":{"uri":"/melonJS/docs/melonjs/Entity.html#getAbsolutePosition"},"sJmt1rQlpmmh4TMCS9-KV":{"uri":"/melonJS/docs/melonjs/Entity.html#getBounds"},"xIZmZhfd4FIuAA28W4SJY":{"uri":"/melonJS/docs/melonjs/Entity.html#getIndices"},"EVlQbnWYx8Sq0FVtcdURl":{"uri":"/melonJS/docs/melonjs/Entity.html#getOpacity"},"y-r_gVHc2QE0dQuHWiNwR":{"uri":"/melonJS/docs/melonjs/Entity.html#isConvex"},"gy_qwtEckgrIjcKkiLfuW":{"uri":"/melonJS/docs/melonjs/Entity.html#isFinite"},"VPebFjRkp7-KkxUmKRuX1":{"uri":"/melonJS/docs/melonjs/Entity.html#lookAt"},"vQdZS1fdfXTG6m2U8VUou":{"uri":"/melonJS/docs/melonjs/Entity.html#onCollision"},"XAiGADm5k89dLxZ7TxQhS":{"uri":"/melonJS/docs/melonjs/Entity.html#onDeactivateEvent"},"XCCsyL8MuD1EWNhNRYnKQ":{"uri":"/melonJS/docs/melonjs/Entity.html#onDestroyEvent"},"LZAVwsfXtRd0v4yPR4fic":{"uri":"/melonJS/docs/melonjs/Entity.html#overlaps"},"likKCbI0iNTZqiMbzl5AJ":{"uri":"/melonJS/docs/melonjs/Entity.html#recalc"},"bIYFE8rVnJ_ScoAiy7b44":{"uri":"/melonJS/docs/melonjs/Entity.html#resize"},"5qZQzUVgJByc-yG9u2HTI":{"uri":"/melonJS/docs/melonjs/Entity.html#rotate"},"6cB-G0KTNYirFQ9maHDrs":{"uri":"/melonJS/docs/melonjs/Entity.html#scale"},"UFrMXVEUAJd7uyaK6LTTl":{"uri":"/melonJS/docs/melonjs/Entity.html#scaleV"},"1jcAwroSy4XejFl6WnD99":{"uri":"/melonJS/docs/melonjs/Entity.html#setOpacity"},"7W_f-O8yYz9xKli2tJMNY":{"uri":"/melonJS/docs/melonjs/Entity.html#setShape"},"n6Y-HKh1jl7hvt_SnIUn5":{"uri":"/melonJS/docs/melonjs/Entity.html#setVertices"},"ZC2piHaSclcG5xspaD4I-":{"uri":"/melonJS/docs/melonjs/Entity.html#shift"},"UoUW7qhnuzm81gUvM0g_o":{"uri":"/melonJS/docs/melonjs/Entity.html#to2d"},"NsuR54wnEKJdgcV1stcqk":{"uri":"/melonJS/docs/melonjs/Entity.html#toIso"},"AcmB2rYYWVcKOL9F7eni5":{"uri":"/melonJS/docs/melonjs/Entity.html#toPolygon"},"wSAgyEjaoAITBHx7vt96i":{"uri":"/melonJS/docs/melonjs/Entity.html#transform"},"U3avvglNKiF7nKuLscKyK":{"uri":"/melonJS/docs/melonjs/Entity.html#translate"},"S5E_2gIlVhtwXlje-P8Mb":{"uri":"/melonJS/docs/melonjs/Entity.html#union"},"IexKkN0oPBcOxr9ssn7vU":{"uri":"/melonJS/docs/melonjs/Entity.html#draw"},"XcbHu-whqvibcZF22vJaf":{"uri":"/melonJS/docs/melonjs/Entity.html#postDraw"},"fdGrYoQQWqPOrxVvZZW98":{"uri":"/melonJS/docs/melonjs/Entity.html#preDraw"},"ZWuXK-OLr6H3WuqSG-VvV":{"uri":"/melonJS/docs/melonjs/Entity.html#update"},"VhyXPKGYrBM9xB5y6OYvl":{"uri":"/melonJS/docs/melonjs/Entity.html#onAnchorUpdate"},"E1w25lKLLGk-b-OvQf9sx":{"uri":"/melonJS/docs/melonjs/GLShader.html"},"7Qvdu1pL6WRYkm9PPGfQD":{"uri":"/melonJS/docs/melonjs/GLShader.html#attributes"},"TPhOZzrGSlfgl9f9VqfA9":{"uri":"/melonJS/docs/melonjs/GLShader.html#gl"},"wk-DmAmKg9cA3-Brzw5xd":{"uri":"/melonJS/docs/melonjs/GLShader.html#program"},"_akANNOHSG7cVN78toh31":{"uri":"/melonJS/docs/melonjs/GLShader.html#uniforms"},"gavVfCcTS5uDBnQaMYhD3":{"uri":"/melonJS/docs/melonjs/GLShader.html#vertex"},"_32kYwBx20gKVzgPPnh1T":{"uri":"/melonJS/docs/melonjs/GLShader.html#vertex"},"Bi9CCxeY0aL5zwWC767SR":{"uri":"/melonJS/docs/melonjs/GLShader.html#bind"},"r_U2ZNnKg2qQrBxk0T2NX":{"uri":"/melonJS/docs/melonjs/GLShader.html#constructor"},"oVrCfZUoey4vEUNStAzrB":{"uri":"/melonJS/docs/melonjs/GLShader.html#destroy"},"JkERPA-c9XsPK2p1sunW4":{"uri":"/melonJS/docs/melonjs/GLShader.html#getAttribLocation"},"oMelBnviwVBoI833IRE8C":{"uri":"/melonJS/docs/melonjs/GLShader.html#setUniform"},"hkSHrn_KgyyMbQ9mn978K":{"uri":"/melonJS/docs/melonjs/GLShader.html#setVertexAttributes"},"Bfkw2xpbsYQGU0SxmShFx":{"uri":"/melonJS/docs/melonjs/GUI_Object.html"},"dnHxxP8PCFdDtXYaTCBHj":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#alpha"},"cw9KprnjICyj3sxAZoBbf":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#alwaysUpdate"},"2yDxsksdSZ48WEKzJOuJP":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#ancestor"},"T-zJNEO8gu0x0J2mzxPTp":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#anchorPoint"},"keKABD0Pf-1JzWAnaV3A0":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#animationpause"},"6gibIAS1KxzICaxW3yUB1":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#animationspeed"},"IsweLTnAoH9caZkbMeKvt":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#autoTransform"},"ZDyNJQOPyfhqFxzKQ2Qwe":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#blendMode"},"o-QNg7S3SlFEb376692Wa":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#body"},"_2gghJxa7jdkIpeGv0P6L":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#bottom"},"MUxfyIGeW0pQGs0bm1klG":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerX"},"y-nxiiaOvNlned-RiOVJN":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerY"},"oDhS5BK4ZBJXSM3tycs-R":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#currentTransform"},"z3jYCZDQ4l_SSCjc_XheA":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#floating"},"PbybQZGbNjQZ7oclwEI-w":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#GUID"},"gWn2EQl_L6iGzXvfhng39":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#height"},"lo7IbEoGY4hA5ocT3lZqX":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#holdThreshold"},"1bdqtHCldW1oRB5jR5z3A":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#hover"},"8p6M4CbZfOmgD6aY_AiUw":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#inViewport"},"tOccOw-SgwxUNKMvO2cYI":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isClickable"},"Qr6gsobEEIK_BiK6Cq622":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isDirty"},"AkFrMdx3i4hgJVJYvoA8u":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlippedX"},"ktHcOXGSTURUg_aTBEgFd":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlippedY"},"nQvY-SlYrExsFv73yNlfP":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFloating"},"O7INHutxx4uPWCrUGOofk":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isHoldable"},"4RgHgMblKB6Gi8DF2X-up":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isKinematic"},"5IyRnvsEv3ziFXIfD5izE":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isPersistent"},"PWmCX4e3JDjNNLOSy7aJk":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#left"},"u5Qc95Su3lhKfT8xyBvia":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#mask"},"BYz21PVdl58EVrwHE9pgn":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#name"},"VI1FoNK6y6VbmpKYXZC9X":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#offset"},"0NXN9aIswxQSOvIv3YZo0":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onVisibilityChange"},"sSEfC9lBeusVKtWs8Imot":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#points"},"DEMnMBbWqAY34MH32Pwhi":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#pos"},"vc52t1JpUgONlCGovYhB_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#right"},"z6bEbh3HV_X_eoR14gqxV":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#source"},"egoczA_oAN2QNwbs3kOvl":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#tint"},"qNrKk7qQbQdXX2-nkjQCj":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#top"},"MfSg7Cm89Qgfg4sX0Q4kR":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#updateWhenPaused"},"vAXEksrw-qQN94RUQWekU":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#width"},"KjqCZYaD8O1BGmuvDfFTX":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#addAnimation"},"hU0iI4W5baI3pFhOwJqqi":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#angleTo"},"sYRoK61hR9AQZE2PYfv5e":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerOn"},"KQWqe0THMnan23nk5OVgM":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#clone"},"Td207t6yH7HWC0SobKzdw":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#constructor"},"8S-4RP2AAm3mrsbPANyST":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#contains"},"p_ieYBObh9JPiKUH36OPh":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#copy"},"Tp2bC4Cn_r-Qw9OSzi2fd":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#distanceTo"},"KvrJTJWylgC2gz5bXyplJ":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#equals"},"XDXO9QujQT49KlbrDExjN":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flicker"},"jhjhAr3-mJfnKIDFZ3HpL":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flipX"},"CR7EJ_q5XWaANUahUewHe":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flipY"},"_A55S7-7UxvcZGzgedntL":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getAbsolutePosition"},"kRIdTPk0biOss3Kd7RQwi":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getBounds"},"_jmtDyWCHdH82GZKdBMQ7":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getCurrentAnimationFrame"},"tNmatNN4iNj6_JmIqd87w":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getIndices"},"iUgMWHnNV6NQOa1PDpkFy":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getOpacity"},"YXRvWnearu_9Ik53goKRe":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isConvex"},"vQURGzVbEnCqaXqjc19a3":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isCurrentAnimation"},"_DUr4E2ywyVU7AB6bJGcg":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFinite"},"E256pLTl2VfMM-XjV4SZG":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlickering"},"7bhYUKAi1E5LYxDf7euAc":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#lookAt"},"60Vi5Gn_o1IkUROOg_dLP":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onClick"},"XiF2kEC2_eyDI6G5E5KPJ":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onCollision"},"Z68GUV347A43SizAvh4Bi":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onDestroyEvent"},"_idIVvntP3ICnIotsW8W4":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onHold"},"G2Ypy4Ut8duz18eEwA6h5":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onOut"},"xKJ5CXTWimybd8qJJ9r84":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onOver"},"IyYDKIXxxH7BU0D1hDMZ_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onRelease"},"aXXD_5fB8WVHzcVYOOtAz":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#overlaps"},"xF3kmH54pocZAsa4EnWCH":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#recalc"},"rIkHrXxHnAC2-ZsO1OAfa":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#resize"},"uL3ISEn_--MRR3tHd5sCr":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#reverseAnimation"},"v7XJhceM9RR0vq9Q98sxM":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#rotate"},"kyW-oFHru2cON0OQi3osE":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#scale"},"yAoXIlv1FClTL3zb7QuVq":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#scaleV"},"QHW52ifwdUxlW-2G8-yV5":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setAnimationFrame"},"qCR3RsouN8Vkl9SA2yVKc":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setCurrentAnimation"},"usTkUx9pbY4lPfSuS6rFM":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setOpacity"},"xSoDqx9hn5EKL7xXgnA7i":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setRegion"},"mmAHd8oYoS6pXkasJgiRz":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setShape"},"On6m6nnxx7wgpa4b-o5OF":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setVertices"},"BcOLcYsgn_mVltpQ01jMu":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#shift"},"A7LUxQdyMT0bBAFhtAjb2":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#to2d"},"DGWcjM49nTh033lB1yfDG":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#toIso"},"ijQalnzNDlH5Ca9UeVV-1":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#toPolygon"},"DGpfaPEdFtd_jN4o7eIU6":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#transform"},"NkDFCkPNb6U24SrQfy6en":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#translate"},"Lwko4iNnkoAmX5Fm3WKA2":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#union"},"CYVm5P3gUrLpW1_yubLQ_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#draw"},"Q1dbIRCRZcHNBFlF73Jt4":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#postDraw"},"vDwVCl2ngTBV9g1TTsiwn":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#preDraw"},"ok9b_pL6ydkSwcnveMbGu":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#update"},"obeOGyNDQWHKjk88FP6Ux":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onAnchorUpdate"},"4riB_dtQSpuRXL1IeUTIx":{"uri":"/melonJS/docs/melonjs/ImageLayer.html"},"ScuvIJb86ZBWW8_lUjXuV":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#alpha"},"uM-y0DKBWLXmvf6rv51rN":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#alwaysUpdate"},"bjfhkJ9VCI_NVL01CquaH":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#ancestor"},"V33keB7OuJNT39shDvOzE":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#anchorPoint"},"9siIDWfur20vQIC-MUsl8":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#autoTransform"},"qA3PmAADDIwiqQichfsXR":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#blendMode"},"pZhiozuOPTj-YNBV6tOWC":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#body"},"5Xzyb4fIeeRXZ9gCA8P6O":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#bottom"},"InJCNuEIETixtz4NsZXOu":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerX"},"wVoOQGFJxbfa3OHWhIFN9":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerY"},"f8cn5-5NaL47wifX7EHEM":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#currentTransform"},"2feg5uELlP9R8t1i9xMpj":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#floating"},"jshDG5Iizh63PZ9uwegvx":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#GUID"},"Zr7Zmh2aQE4BHDtifADGI":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#height"},"hfvkTdI-KDLXjvMAh6wIM":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#inViewport"},"g9DDrP4R2bvr8dKM2gPhx":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isDirty"},"SDYbHWjomYIh1GsiG4qyF":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFlippedX"},"DLZnPZJPn3JjLAUgnQN8y":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFlippedY"},"tclWhlFIrawdTeNRJbv9C":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFloating"},"0UiGwNwYeVIGKm2HaSR_H":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isKinematic"},"NRI9Own3KJ3mc_1DlKk2K":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isPersistent"},"HkkocQQ9r45Rb8kaTXwP7":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#left"},"JJxAahhLg9yy7Kpj-LUqM":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#mask"},"xY3BJ2pqHTmv1IP_GAqzQ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#name"},"GMGFGI2b8IY8FOYgZZ5-D":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onVisibilityChange"},"83G69-r5s4E6PfTX6kL10":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#points"},"uvv6siF7UnpiW_dlqF7tJ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#pos"},"45Jnw8x0vUMKOee_xPJhr":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#ratio"},"h15OQqAczC5hYL8wiXJcS":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#repeat"},"z5OQPati_4YVZvvFszI6T":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#right"},"VQHn_7F5mKgfyG7jx-vIM":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#tint"},"2d5h8DCx3p3qiue8Hohyf":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#top"},"jSZyNfbmAOKLD4utorDMQ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#updateWhenPaused"},"QzPxCGgQhDX2v0dG_0KVX":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#width"},"J4L2HHbUzA1wh_w7vQhcX":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#angleTo"},"V7Ixhl9NTOuHYI38MYRku":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerOn"},"U8suBlJglaMU2MoW4PCzD":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#clone"},"vhznu7Z0Lx2k4H3xq0gGa":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#constructor"},"ZZLV8s8-AFeUMvLErgaSs":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#contains"},"TKBXUl5pVTzcCI8z5wZFJ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#copy"},"C14zJ8hVuuhgacn4z3fbr":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#distanceTo"},"4yOJ1XX9raliZvZ9eY1bl":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#equals"},"btCKKCCQidJZelikPBYm0":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#flipX"},"ic90XseTdjrbjdO8JfUrH":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#flipY"},"nD--gRgJ1E-CWtH0v4VLq":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getAbsolutePosition"},"s9wy6tzePRW-a7PvZkCx_":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getBounds"},"Pt0PXUIBRTAm_E2yrnJ_A":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getIndices"},"wgMNtCugkRs3xG8tM82kZ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getOpacity"},"9UCshcPUgRqpL2F78UkG-":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isConvex"},"KyWTArgcwrCjD3rAILeUh":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFinite"},"S1tqjHinMPuMRjQx6KZ9R":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#lookAt"},"efW3fz3iu7RBvxr2Hbv2r":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onCollision"},"z6GI_oSvDchJwcMy-jbPw":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onDestroyEvent"},"rfGydCCIFDh7EY0L4MXjh":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#overlaps"},"kxHadmC-P9-yNW15q0PC4":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#recalc"},"awGHMaP4-mvCBTR0dLw4U":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#resize"},"HNdKk13_n44aNGMTG7s3b":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#rotate"},"k7mbvGDbjY5Jz_xrKQLDj":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#scale"},"xpUh9vwLUKqHfjWfUSiJJ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#scaleV"},"jKovD5VuoGO6zLOPO2oEL":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setOpacity"},"E7DULgwoLoTL8R0oJWe32":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setShape"},"BkK6oRC5cXS75KsJwgFtV":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setVertices"},"pckoNTsuGegtQsCf9Fshs":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#shift"},"HX2RN0Vwv8TEavfXKc35Y":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#to2d"},"ValcaUDFQHJCat_kvv747":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#toIso"},"O4CeBUSzHaQFgnefbvNef":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#toPolygon"},"U03PsHPQocKiFQei5fdX3":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#transform"},"5e6s5GUsQ9POVN8bzf1n0":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#translate"},"cBZD0CI1glybAj0sTuYU4":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#union"},"JSmCKUwD3PtYm9mpyif1u":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#draw"},"Ml9qELIxbHaWOmckv6pTF":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#postDraw"},"aMGi-jpROZp3eLb0LJD_a":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#preDraw"},"eh5xaNQLRcW-oDIfwnlgE":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#update"},"IT80k14Y_z5VbOzspg1xL":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onAnchorUpdate"},"yoFw0Qqx4O-kj86auYhk-":{"uri":"/melonJS/docs/melonjs/Light2d.html"},"s7qSd1SNSW3x1k9o0ld4a":{"uri":"/melonJS/docs/melonjs/Light2d.html#alpha"},"fIHLzUcVB7ImVxi4txFZS":{"uri":"/melonJS/docs/melonjs/Light2d.html#alwaysUpdate"},"TXVFeFryemMxCP8MXgDuN":{"uri":"/melonJS/docs/melonjs/Light2d.html#ancestor"},"tkxBqPfV9B40i90gzL_Jm":{"uri":"/melonJS/docs/melonjs/Light2d.html#anchorPoint"},"te_5SpowV1yTl8Dm0MsX3":{"uri":"/melonJS/docs/melonjs/Light2d.html#autoTransform"},"y-aRQVQ8jEEADfuSc18G4":{"uri":"/melonJS/docs/melonjs/Light2d.html#blendMode"},"t3N0gA3t3okT4zTQR-1h6":{"uri":"/melonJS/docs/melonjs/Light2d.html#body"},"cLSSM-O2zTwsxDsutstOI":{"uri":"/melonJS/docs/melonjs/Light2d.html#bottom"},"PT4xtYacfwywwNsK1K8rT":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerX"},"WB7MedgERGGxT-x2Bk1Mx":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerY"},"t5YrzUBw1_vr_8BxOUJ1X":{"uri":"/melonJS/docs/melonjs/Light2d.html#color"},"1OZnjC7YM5x5uQWXiZPRy":{"uri":"/melonJS/docs/melonjs/Light2d.html#currentTransform"},"WNBOL5K8-HlIkFTnftAZD":{"uri":"/melonJS/docs/melonjs/Light2d.html#floating"},"Zs9iE8U0KqJRCOg4m2E22":{"uri":"/melonJS/docs/melonjs/Light2d.html#GUID"},"lHA83IYRYj25NS7VzjpXj":{"uri":"/melonJS/docs/melonjs/Light2d.html#height"},"-fDi0I2buNwkuxgrMRQfU":{"uri":"/melonJS/docs/melonjs/Light2d.html#intensity"},"4UqhKu-Ambnh27C-W0jOI":{"uri":"/melonJS/docs/melonjs/Light2d.html#inViewport"},"Sji5QeJznx-_YZ2I2E8-Q":{"uri":"/melonJS/docs/melonjs/Light2d.html#isDirty"},"sZFzzKpP8AyMNYEE6nxSV":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFlippedX"},"wTRyWN2MWCsjFsw3au6CQ":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFlippedY"},"WL-lU-G0e4sumnuSadfKy":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFloating"},"gYozxWT2UZqwIWlXoI2cz":{"uri":"/melonJS/docs/melonjs/Light2d.html#isKinematic"},"Ga-dAPGKjI-VxHo1lmWXL":{"uri":"/melonJS/docs/melonjs/Light2d.html#isPersistent"},"DrXMmTrVnyAwW_MVrgsqd":{"uri":"/melonJS/docs/melonjs/Light2d.html#left"},"aXSH8y11sKinEtRsd42N_":{"uri":"/melonJS/docs/melonjs/Light2d.html#mask"},"IrXz5Ur5J-5kT07zkgDGN":{"uri":"/melonJS/docs/melonjs/Light2d.html#name"},"aePbpYXHRUwwHyCHMKwrf":{"uri":"/melonJS/docs/melonjs/Light2d.html#onVisibilityChange"},"ojihqZTN49W5SEggoYQ2U":{"uri":"/melonJS/docs/melonjs/Light2d.html#points"},"ruLWksR4hwGakuVQxDbyG":{"uri":"/melonJS/docs/melonjs/Light2d.html#pos"},"qHJ_IXgxyEfZ5P_tykYXk":{"uri":"/melonJS/docs/melonjs/Light2d.html#radius"},"W8qsTFNXmvOWsiMo3S9dZ":{"uri":"/melonJS/docs/melonjs/Light2d.html#right"},"Ieyhzi1OIE6WD67dbahm6":{"uri":"/melonJS/docs/melonjs/Light2d.html#tint"},"ztNTijfHmdJaFGtjCdSPO":{"uri":"/melonJS/docs/melonjs/Light2d.html#top"},"rV8dhf37EUm5VXKMj4iqV":{"uri":"/melonJS/docs/melonjs/Light2d.html#updateWhenPaused"},"OZOF8FG0AhAys4FVj18jy":{"uri":"/melonJS/docs/melonjs/Light2d.html#width"},"yZFOYkj6T1YHkUTmiNxzE":{"uri":"/melonJS/docs/melonjs/Light2d.html#angleTo"},"dmaGRBrL4dwNP45VsRxgq":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerOn"},"5t1kY0W8s5lfDKkrbimdJ":{"uri":"/melonJS/docs/melonjs/Light2d.html#clone"},"PTUsWLxaDcGKegeh-LCl7":{"uri":"/melonJS/docs/melonjs/Light2d.html#constructor"},"w1OQBmne2nK03m7nj1AZO":{"uri":"/melonJS/docs/melonjs/Light2d.html#contains"},"vXwb-TQY23GDoW1RhZR7q":{"uri":"/melonJS/docs/melonjs/Light2d.html#copy"},"AC_D-VegQIEawDMAd2DC3":{"uri":"/melonJS/docs/melonjs/Light2d.html#distanceTo"},"_HgXJZvc3x7OTgvQLrRNm":{"uri":"/melonJS/docs/melonjs/Light2d.html#equals"},"0mP6riNWUbat07RjScJQr":{"uri":"/melonJS/docs/melonjs/Light2d.html#flipX"},"VJOOjP5pj4dJQt5ar3gPk":{"uri":"/melonJS/docs/melonjs/Light2d.html#flipY"},"lOxGsnmmgmzhFuTMCXMS6":{"uri":"/melonJS/docs/melonjs/Light2d.html#getAbsolutePosition"},"YxSD6Sjdu9C1bN7SXAzvc":{"uri":"/melonJS/docs/melonjs/Light2d.html#getBounds"},"ygjRkXEhcXAEPZDzwbJzE":{"uri":"/melonJS/docs/melonjs/Light2d.html#getIndices"},"9XsFMiYdf8b8HT2eB0lCx":{"uri":"/melonJS/docs/melonjs/Light2d.html#getOpacity"},"YYSZDyvoAz0WtBSvz45er":{"uri":"/melonJS/docs/melonjs/Light2d.html#getVisibleArea"},"W8PcvT6ZlYlmU4ntZt-Nj":{"uri":"/melonJS/docs/melonjs/Light2d.html#isConvex"},"vqUSZozzp1Ax7X3PSb2pP":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFinite"},"4gKmTDDz7IMEbObru5nMo":{"uri":"/melonJS/docs/melonjs/Light2d.html#lookAt"},"My9OR5xdhoUAuocU1Mvvq":{"uri":"/melonJS/docs/melonjs/Light2d.html#onCollision"},"jaVigmwQbf9wHEj_n1V4x":{"uri":"/melonJS/docs/melonjs/Light2d.html#onDestroyEvent"},"RPBt3UtZQ8Dgtw9IA8cF8":{"uri":"/melonJS/docs/melonjs/Light2d.html#overlaps"},"S4qAdxVOXIcBh3HNl8nSi":{"uri":"/melonJS/docs/melonjs/Light2d.html#recalc"},"X5nW-RNpbg5N0gt2f11Jo":{"uri":"/melonJS/docs/melonjs/Light2d.html#resize"},"E0IS7lwg8hNkIHwNenvSP":{"uri":"/melonJS/docs/melonjs/Light2d.html#rotate"},"D0BwhidtFvin-zSIRvu-h":{"uri":"/melonJS/docs/melonjs/Light2d.html#scale"},"B4s6aQQc4JbFrRiICH4Ha":{"uri":"/melonJS/docs/melonjs/Light2d.html#scaleV"},"Cvw3mA2LS4jbAfrJQWa30":{"uri":"/melonJS/docs/melonjs/Light2d.html#setOpacity"},"Gh9h4cSMwKnzTmo1mx_Aq":{"uri":"/melonJS/docs/melonjs/Light2d.html#setShape"},"bkW7gZPBpL_6uzKA-JYzF":{"uri":"/melonJS/docs/melonjs/Light2d.html#setVertices"},"dPMmaBg8ITyZM8RM6Z2cS":{"uri":"/melonJS/docs/melonjs/Light2d.html#shift"},"dmiV9_qCo2kn0E79P_gNI":{"uri":"/melonJS/docs/melonjs/Light2d.html#to2d"},"EqGyiP6SkHlc5tVz6CKes":{"uri":"/melonJS/docs/melonjs/Light2d.html#toIso"},"5GhbZD5LfIUuMfWalJfe0":{"uri":"/melonJS/docs/melonjs/Light2d.html#toPolygon"},"4geGVQYFXf8j1D1V8N7BN":{"uri":"/melonJS/docs/melonjs/Light2d.html#transform"},"WbLWK7s9QQ0wxtWYTx4xL":{"uri":"/melonJS/docs/melonjs/Light2d.html#translate"},"WnyEvvmOI4QpmDwgBfJIM":{"uri":"/melonJS/docs/melonjs/Light2d.html#union"},"S43wdkrYzaITLu8cTpdQj":{"uri":"/melonJS/docs/melonjs/Light2d.html#draw"},"2G7msi8oHVFmcAN421bX6":{"uri":"/melonJS/docs/melonjs/Light2d.html#postDraw"},"pezurljxxBAclU3WQYNpd":{"uri":"/melonJS/docs/melonjs/Light2d.html#preDraw"},"75iJBZQhvBEmXiXT5M30E":{"uri":"/melonJS/docs/melonjs/Light2d.html#update"},"E_IgKV_rsj2Gcxf4xWoaQ":{"uri":"/melonJS/docs/melonjs/Light2d.html#onAnchorUpdate"},"wCHYHencjAMQd0SayIbok":{"uri":"/melonJS/docs/melonjs/Line.html"},"v_pE0-yMXBuHMQSOkaLHw":{"uri":"/melonJS/docs/melonjs/Line.html#points"},"5nIhIFSRNpw690yZRCfa0":{"uri":"/melonJS/docs/melonjs/Line.html#pos"},"e-BF0YebRiNpiyAONeqB7":{"uri":"/melonJS/docs/melonjs/Line.html#clone"},"XIzPqA5ZxYo2NB3xJZ9nV":{"uri":"/melonJS/docs/melonjs/Line.html#constructor"},"P2zk4e53xTPNaRX09Hk8n":{"uri":"/melonJS/docs/melonjs/Line.html#contains"},"N2gw1IilNPfeeD32Xy7JI":{"uri":"/melonJS/docs/melonjs/Line.html#getBounds"},"Kt03_R3eExiQVu_FJMtvh":{"uri":"/melonJS/docs/melonjs/Line.html#getIndices"},"VSZ6_dkiZNJCDho32kHWR":{"uri":"/melonJS/docs/melonjs/Line.html#isConvex"},"v-CE8PKieje9MW6LecJVR":{"uri":"/melonJS/docs/melonjs/Line.html#recalc"},"FvhcePzSR0vl2lpKLMRLc":{"uri":"/melonJS/docs/melonjs/Line.html#rotate"},"Z96rqSbadYxIMQ0mDyVdA":{"uri":"/melonJS/docs/melonjs/Line.html#scale"},"mhpkiqHDd4MvDdI4wKXjG":{"uri":"/melonJS/docs/melonjs/Line.html#scaleV"},"4-xf3kcLCT94i2dK6g3Dc":{"uri":"/melonJS/docs/melonjs/Line.html#setShape"},"sHVdEntB3zalbtdxT76H-":{"uri":"/melonJS/docs/melonjs/Line.html#setVertices"},"PesnsAStylHfZEK13mSRh":{"uri":"/melonJS/docs/melonjs/Line.html#shift"},"ibVR5JPplFKKi0_F96rAQ":{"uri":"/melonJS/docs/melonjs/Line.html#to2d"},"Zm3Q9UKg9xfr_rxaJFHpE":{"uri":"/melonJS/docs/melonjs/Line.html#toIso"},"EFP1yqKAc8390a7G1Wxt3":{"uri":"/melonJS/docs/melonjs/Line.html#transform"},"_-vNYjN2jN_I3tYJsdHTo":{"uri":"/melonJS/docs/melonjs/Line.html#translate"},"NoaIFWo4hjBl5e4FbjXrs":{"uri":"/melonJS/docs/melonjs/Line.html#contains"},"nZbhHYP1vBX_fmT1V4Ffm":{"uri":"/melonJS/docs/melonjs/Matrix2d.html"},"vR-PI6QvjkGS4-AH4aCSP":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#tx"},"GCALqsT6nCoVPnPFE_EF_":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#ty"},"Xgqf7PCS9mIe7m2LXKKIU":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#apply"},"IAJb8TmL5HIW9SA9Nmv5c":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#applyInverse"},"1UjNL9k9e3G0QMGDX7COb":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#clone"},"wKDfRfuJjAm4NIn6Cdicy":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#constructor"},"IcUC0Bq9OB02ogZ6EGYd_":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#copy"},"QHi83mVItMKGUKQZErqRb":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#equals"},"W1ZAyUbc1KKETYDAhVC07":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#fromMat3d"},"-Se9maTr453gtwHJbImYy":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#identity"},"Y7Prufltz1DcXRY0rszNS":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#invert"},"_ib2XKohk-udf9TyOh7Rx":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#isIdentity"},"Rzo6yr7roVVuDzYSO5DSp":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#multiply"},"C90wbLyiwN6nt9G06jMOW":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#rotate"},"XhYeLiTsb398nfSvpCpAo":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scale"},"vUA_w3b7aZaEKVlXCBHYJ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleV"},"zpqqSR6ypyth7qdwA4R0N":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleX"},"EyVz_PyeIs_OqjZGa75iR":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleY"},"rqjHhpJKp2AvlLjUSMpOZ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#setTransform"},"QZuIRJtAAZ83XGCyEUF8q":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#toArray"},"3A6xkOf9L4NOyFc9N120Z":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#toString"},"STr0I53TrI0RTbxUy1TK1":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#translateV"},"7nEK4oFJZXhbcLL_JkdfJ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#transpose"},"hE9FntxFZ3D3rEZDeLbb9":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#translate"},"1Gx5WxjbCpvnRPO_W2GQL":{"uri":"/melonJS/docs/melonjs/Matrix3d.html"},"XSOEy7VvtGZVSpNJRdqv8":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#tx"},"-66yBz6IyRsc1T7ZORbHE":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#ty"},"8qbzDpYpvm_DgNqOhsTiA":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#tz"},"NwazLtZdTAqho3-3uV4Wf":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#apply"},"8dShVzl_PieO7Pzjh5ZYm":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#applyInverse"},"G-B5CfZp2JA5hIo7lfbHR":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#clone"},"RpofXWbLDuyq0rkVjhvct":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#constructor"},"WSvKlmaJSexhyjF7FYGF5":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#copy"},"f0acOzGMYWlc49q4T4t7v":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#equals"},"PcRJ8rnD6OxEOY3TsWePJ":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#fromMat2d"},"xKR3sTyeo5gpqsmJ3vqzn":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#identity"},"DThSdyYCodqHKWd1ukJ34":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#invert"},"5sNVlShFPpDTXswO0cNV7":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#isIdentity"},"6huhrYnKrr6xO3ELMVEKb":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#multiply"},"rO1WjO9_p3Bo0e3N9javY":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#ortho"},"TONVLX0tHFfytKigKLA9B":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#rotate"},"mQJp6OwaA6fSiLDZ08yL7":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scale"},"MG82eg94AL5_gXsZpg51f":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleV"},"wZrLT4tcAwYFi4X_bwlkt":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleX"},"_iAFzs3ghwinupPQTmdob":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleY"},"qoIRDbZSi4vROjGVSfM7H":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#setTransform"},"EZURISE6Ifh4S7oH9lev5":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#toArray"},"3PeRXQ_LbalkQ2kG3X6aW":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#toString"},"IwNjzRPk8QcjpCy-6fRGr":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#translateV"},"i8WMLKs_85Qvt8CAgzf1q":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#transpose"},"4v576eilrN0EmZi1KFexj":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#translate"},"dIX1xCwXlxl5LNX7WQYhJ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html"},"FwQ-QXm8711jbmpJjV08M":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#alpha"},"xpJygYvVw2zT1GDmE9tjD":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#alwaysUpdate"},"bRV0w5EU1htr7Dk8vdAqM":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#ancestor"},"2FKB-3zEPlz7rdkJ8RUVp":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#anchorPoint"},"9BnKCu8DIJKz2KIHw1DpF":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#animationpause"},"2Z9hskx_tKwj9b7_WWRmx":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#animationspeed"},"13he1BVT9-XRetOWd5SAN":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#autoTransform"},"x6lH7wxXmnGU6Uum6_bxT":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#blendMode"},"UbgdHqekyS9FctLA9h4wp":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#body"},"ASLiEfJG9YWD5-E9vD7IQ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#bottom"},"hL40aNReBW-spnFUeCbTZ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerX"},"LbTLm-04n7cnBb5GDbb-f":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerY"},"3IgYyuksW4K8Qtyb918-o":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#currentTransform"},"3HFD9TV-KA5p_zq6J0a7c":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#floating"},"wDYj5SV4Kqq_LPgqgUwI3":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#GUID"},"DOJHQXFcpKs-NLpqCJcVC":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#height"},"ZFXm_z-LiWLYVChDoZ_tc":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#inViewport"},"6l-scjRp2erVa48cgjKFA":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isDirty"},"7mavTdbb8UCaz6RU5Xq27":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlippedX"},"R8usTzkpJ7269t299mOn7":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlippedY"},"N5taKvWJVcq7iGzNDDUB1":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFloating"},"oyhnYZXDtEfhwidylNqrS":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isKinematic"},"xR6EcCoCSVhKLFwbeYS7J":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isPersistent"},"X6hhUo0pU8k2-Ve1AI6SP":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#left"},"P5pif_VARH1VUTm7wqAh0":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#mask"},"UNRpLhoXJY7ben48TWGm1":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#name"},"tHYFHo0SBOaOqA_EgilFO":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#offset"},"TIgwmsashLkoBl20ANGDO":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onVisibilityChange"},"b4mlVu84TiPrRtzH5M-ko":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#points"},"Wfd-VGrPSpn-VTx2bVtaw":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#pos"},"X9DVtsqw8a8Vt79CQuiHP":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#right"},"CPueAvyM6ghk6R2BuKiqv":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#source"},"ELpRAhdY3mV5oDq7yWvPy":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#tint"},"YR0a7aXlC61rrZUHKub_-":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#top"},"47ZUt-yJTl1nwsOyTkDxU":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#updateWhenPaused"},"TNuilCSVki8ryCsOmxzW9":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#width"},"3H5ZWwGYRH3p2C6oVGS4m":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#addAnimation"},"w6SywxcpWsJaXMZCJ44SB":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#angleTo"},"Rm9lGmTMdkhFUkjuJsBOJ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerOn"},"KemolvGje6DkB2rh1vj3A":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#clone"},"oVz5wOFi0-pPkOzeCB-OC":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#constructor"},"FLusxk7CN_NT_7WRtRyei":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#contains"},"6mTTWmzR8V0tGQn8Gl9HE":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#copy"},"n_5wA9ggqputs5XDhyPdg":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#distanceTo"},"A3F0XxAqIVjukiPjCddby":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#equals"},"9bOyoBMVRtTL7XZVHgT2M":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flicker"},"zRrA6OT5pJL-zRsmPBY2b":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flipX"},"gIFiSvCdgJZS7ib5JaROr":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flipY"},"oaAPv_LiXKXd8bIkkTZRY":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getAbsolutePosition"},"mmCbfc_VWy4AJark-j0G_":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getBounds"},"Rfo2wcsMjjPE5ZCW1_asM":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getCurrentAnimationFrame"},"K3BFwYwU7Nqy9_6P_u0SK":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getIndices"},"ib52wbCAPU-8dKVmiOiiN":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getOpacity"},"sCUkQ2ZIkm4uvAprk6H6n":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isConvex"},"WENhMc2o2roDgOkibcKHI":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isCurrentAnimation"},"vXCx2MKmSSPT-ZV6jadvJ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFinite"},"akdQgZxOZxEmxyvrtY2FG":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlickering"},"1D0ZG0LGYCu2xppRvFuv_":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#lookAt"},"I9IzgZ9HKh0-e4WQ9DcuW":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onCollision"},"CqVxlddeEFfSfW6MVeC9H":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onDestroyEvent"},"d9CR8jgCIhSFO5UlsNLVX":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#overlaps"},"AGrhelKA5LQXYKTqoz1zU":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#recalc"},"PIpCWSnvWTpxde4kB73Fl":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#resize"},"xtYEM3jXwqUXggUfkyVnU":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#reverseAnimation"},"BnU-uUgBgz3r5ObxEvbsa":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#rotate"},"wb-nEp0KkDZGRNp-ednJN":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#scale"},"9Fj2wcrXk1C3cOZm2H4WV":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#scaleV"},"GzD4q6c4bUbWi-8iJCLl9":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setAnimationFrame"},"t3GMcouXfFeOp9sHLJLkz":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setCurrentAnimation"},"bgRYtI4ZssTNDGTd08mUI":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setOpacity"},"f-ybQbpm3rSi1-GnDeu2f":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setRegion"},"vYsLnopdApt_2nc0HtCqL":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setShape"},"BGI6Ri6MJeMqO5GLcQ6e8":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setVertices"},"JuYztQPNgvIwgxbx9Eabj":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#shift"},"vnj0tYMFsLnXKz0i9eNSp":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#to2d"},"7PNfw1Z5AJuB2wCwm3HKt":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#toIso"},"8P1Q3MdKWUBTcOUhI54aZ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#toPolygon"},"kn0xpJCfnnA8bCtkUeN2g":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#transform"},"ezBZ1DY_yeYeeraAkIqwF":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#translate"},"N6NEhx43fciiu4iIQZEzZ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#union"},"4rtHevIgqEicMsKfzGC0M":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#draw"},"QITBa8yIziSMv-ZwPa03E":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#postDraw"},"cytKrqE0WlYBUcnTuz9sc":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#preDraw"},"WoVyOXfVTdyJal9dtwhMj":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#update"},"jVcQV-SHNo6k7aiQLlgIJ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onAnchorUpdate"},"I7Ic2zP9tfz_-nPitUI5L":{"uri":"/melonJS/docs/melonjs/ObjectPool.html"},"zSzDZoey9dHIyIdngnUYG":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#exists"},"KKpBUEXy0rNJD5d3rIlm_":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#getInstanceCount"},"qi5JbvcBCovF-AjqoY29f":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#poolable"},"dL35saryEEPbD9xBOKILL":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#pull"},"i6ilZjRj5oX1iRxxIlT6j":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#purge"},"uG4G30-iNurMhTPXfkkxI":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#push"},"lsUVsqb8S_UL_UXJIzp8M":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#register"},"oqAnkLsht_7HPcArkUTJW":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html"},"VzUHFKFU95eJh-SK52S2x":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#x"},"X-goxESrVBL5sDfbj462D":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#y"},"jHai_zJakn_uGy5lLMRW9":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#abs"},"_x-aLBLr4JWVW8PUNw-_T":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#add"},"2cmyHWXb_hJwm9lOdeqg0":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#angle"},"dfQSLreYyAP1YDdSEmd3e":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#ceil"},"94fshGnA6CywqUoJz8V1i":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#ceilSelf"},"ZA-n7SgT3DT33o9rUXYKq":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clamp"},"tZBSZ_nxHIneVGhjYTJL2":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clampSelf"},"Gqovu7mqoQjUNRUqACk5q":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clone"},"obqusUfz_kdaYzUe5orNW":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#constructor"},"ewGXXUXZvhEfB3TE_R739":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#copy"},"UJ_LaCGxzsBWnsJElAe7J":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#cross"},"VCqzOYovFhgltSZRezkt2":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#distance"},"iIxSZjJVsk3B1QE03PilU":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#div"},"qLXwEXZ3IOn4hr9Xax1q3":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#dot"},"EpjIRMRNk8soB60irEWtg":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#equals"},"b8JqKbBOsJLD24QR758s6":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#floor"},"XinyLxHgA4AKViIgJynH2":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#floorSelf"},"KpMdS3-5JMm1v4QUVMzDA":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#length"},"vjWtPqYFvBTF43jH3Nv12":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#length2"},"Vo165kJB3yLZGS552297V":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#lerp"},"9fKFA3wlI_w7Exf6NKZdC":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#maxV"},"8hXXLjsDVWQ2QXFjL9RKV":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#minV"},"zxhtOxf99-4jgJ5yIyefP":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#negate"},"Y4IIQbbvcr3JyHgYow0hS":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#negateSelf"},"D5QYHnGUGTw3byJ6M6uGq":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#normalize"},"am2CW6rQCrPRYBaWXwVQN":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#perp"},"vkNcK0u4DZPIVjJ09kzR4":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#project"},"8ruameYpQLyqSQ7D8Kw_8":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#projectN"},"LK9SJxqIRLUzv9Pay9mQb":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#rotate"},"JomUw2qFnjszshyFzsMQK":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#scale"},"r9F2hjEFw80DYbgwWHNad":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#scaleV"},"LT2WeOy1veB6pDK8dt4Wi":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#set"},"H8USRCGu5PWg1vlTCyM7Z":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setCallback"},"EaQQJVwcy1ikyABvaTSJD":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setMuted"},"lJgyARkwR5VEZH7M071aq":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setV"},"d8yNrbHIUgR6D70yyCVIG":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setZero"},"xiASx8S5KYYUq8YIYm9Qx":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#sub"},"YGlb9mwIePGrT6odAc2QC":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#to2d"},"4yxbOtEYDdkGVDU37I1kA":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toIso"},"3BTkQsNVUzErZJRo7TqdH":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toString"},"xJaUUkgx03nxiG4z6db98":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toVector2d"},"QuciHl77aHcb_a-E98SGj":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html"},"jjwX8SGoQc-G3c5k95Ij_":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#x"},"i3nq8k9QsOjg_pFjRtrLo":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#y"},"VPhbjauemHYAxmxUBq69f":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#z"},"wc-ajxza_Pf_4j1Q0vYHb":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#abs"},"rDODjZSZ-HBTAMBe3yury":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#add"},"256LevXPDTOTAv-ci9fql":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#angle"},"74GxmElD11cwhByIXvcqR":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#ceil"},"igQmSF74umSs4MfCQQaGV":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#ceilSelf"},"Ahk28aeN7fKXn-vE92c5I":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clamp"},"aT03hE4ehodoeoOom0aNK":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clampSelf"},"o0JZMXtz9jTAWUTy25s9d":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clone"},"6gKH3ldCLrYOGvT1bJz_v":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#constructor"},"TxIGbLIRpeiTmF9rDVo1X":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#copy"},"A-oU2T17idL6AKSlpvHLM":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#cross"},"45CHKWgoidJAN9AyzS2-z":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#distance"},"H1MusvhGYZN_fJtVXjRsp":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#div"},"4cZDsPD8QNsHEAwv8I7o1":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#dot"},"dTiDz6fIOjhOo4lHh9G4r":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#equals"},"pw3Tvz8bmwsb3EwQSY2-t":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#floor"},"4NxpIq12miSVxvxglzGw1":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#floorSelf"},"FxJSYa_6B6Gm1c-Ga4RRD":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#length"},"pIrYtWhzHQl4Bmt_sMY2d":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#length2"},"F1arTdk7AdFRTNFOfoXWx":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#lerp"},"w-6z4IidJssQJ2TJnilGb":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#maxV"},"321KddL-olPZ0-q3rlXIc":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#minV"},"Hagcj33KPD5V6XoR1ck1-":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#negate"},"s4hJEgTl2v1TbOIhHab57":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#negateSelf"},"hcGJ5HduylEjp9c8537wn":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#normalize"},"ESuqZGkQmf4WCc1erDSuq":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#perp"},"N3JpTAWlECSX0smyFPdzJ":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#project"},"PWoRm2BM-yAsUu4S3o4ii":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#projectN"},"2obJMMVmQqU1RlZZYjZUw":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#rotate"},"Wtms9jjJh8Grac8ifR0n9":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#scale"},"uQ7R68RtVEOEisF-uE7l_":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#scaleV"},"EdirAeb1gOwPLhqmIrsL7":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#set"},"6YdXv_lrilO7u2SP9nlWY":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setCallback"},"01REQVWifAEwbeco50C20":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setMuted"},"0LS5JLJz1tY5jTNJgohmg":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setV"},"xyP0-dHJSh1EqqqGFsksT":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setZero"},"3yxwE2uZwMgh2LvOrVUrZ":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#sub"},"NEtHYsG3x51TgKM8xz5sV":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#to2d"},"3qqkHNajKw68gAG9DZXEK":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toIso"},"dpN9YRuR8CBI2Mlt-8HNj":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toString"},"8ymJ_uq5fE3f6nkf5i6qt":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toVector3d"},"0b62hQOu9AgTjUq8SoqDw":{"uri":"/melonJS/docs/melonjs/Particle.html"},"BMDpELZyiGbkqZJSwqW54":{"uri":"/melonJS/docs/melonjs/Particle.html#alpha"},"X_XNB9wV7Ia9RvxJzQN4K":{"uri":"/melonJS/docs/melonjs/Particle.html#alwaysUpdate"},"E890wxaWsj_hrdyGYdIfa":{"uri":"/melonJS/docs/melonjs/Particle.html#ancestor"},"_KPTAbNAWT7mS9HfAj0wj":{"uri":"/melonJS/docs/melonjs/Particle.html#anchorPoint"},"XJlxpP56KoixBL7pXAw58":{"uri":"/melonJS/docs/melonjs/Particle.html#autoTransform"},"AugaQTjn4wHTeeGwJggz-":{"uri":"/melonJS/docs/melonjs/Particle.html#blendMode"},"78BFKEo5tRtOpkk0N6zu3":{"uri":"/melonJS/docs/melonjs/Particle.html#body"},"A_A0bnNbaVjmPwIIsDlYx":{"uri":"/melonJS/docs/melonjs/Particle.html#bottom"},"fbuwHLFaZ7YUyo9AbCr6U":{"uri":"/melonJS/docs/melonjs/Particle.html#centerX"},"QIOWb84Z_CJnM1fjfRsCx":{"uri":"/melonJS/docs/melonjs/Particle.html#centerY"},"DLeykqxTwCPJRKBnWMToy":{"uri":"/melonJS/docs/melonjs/Particle.html#currentTransform"},"oKkJbM34MQSI4fH8LzKjE":{"uri":"/melonJS/docs/melonjs/Particle.html#floating"},"pbULgbiocICbELtDy_A0Y":{"uri":"/melonJS/docs/melonjs/Particle.html#GUID"},"tgnaG5xLW0Qg6R771peTA":{"uri":"/melonJS/docs/melonjs/Particle.html#height"},"n0RLKmGPaBoh29KahKVjY":{"uri":"/melonJS/docs/melonjs/Particle.html#inViewport"},"3pwq0qdXJsKlyQQSVPTGP":{"uri":"/melonJS/docs/melonjs/Particle.html#isDirty"},"RqHqIeJ1aD1-l9p3rZNE9":{"uri":"/melonJS/docs/melonjs/Particle.html#isFlippedX"},"FGzRvQsubwWJvflUx3O9L":{"uri":"/melonJS/docs/melonjs/Particle.html#isFlippedY"},"HubuPufOvI9k7UqNMTvtQ":{"uri":"/melonJS/docs/melonjs/Particle.html#isFloating"},"dWWrmOZT9JK23PU5XIxO0":{"uri":"/melonJS/docs/melonjs/Particle.html#isKinematic"},"qwBAAsDPU41xV5U29fqoH":{"uri":"/melonJS/docs/melonjs/Particle.html#isPersistent"},"Rm-bBpILP7clB_kiDD50r":{"uri":"/melonJS/docs/melonjs/Particle.html#left"},"ye_RMmGNnBi-ujKdtTR5w":{"uri":"/melonJS/docs/melonjs/Particle.html#mask"},"0Av788XWaJa5GW6h0ZFKf":{"uri":"/melonJS/docs/melonjs/Particle.html#name"},"pqK95OUtoW1XmeLANOG-u":{"uri":"/melonJS/docs/melonjs/Particle.html#onVisibilityChange"},"gyoMON4SDJVWzo1lncMoY":{"uri":"/melonJS/docs/melonjs/Particle.html#points"},"g3O0JNYrkI0PPSBsCqL6F":{"uri":"/melonJS/docs/melonjs/Particle.html#pos"},"Q5oHre8VT_5l7L-beR9z6":{"uri":"/melonJS/docs/melonjs/Particle.html#right"},"UolL_e-Edt4pWLE_BqpyR":{"uri":"/melonJS/docs/melonjs/Particle.html#tint"},"nhLT4m0U6dvGwNEOdPwzz":{"uri":"/melonJS/docs/melonjs/Particle.html#top"},"g1YtSHyN5iXrYXe4qM7Hj":{"uri":"/melonJS/docs/melonjs/Particle.html#updateWhenPaused"},"32DdAGtMnCw2lZuvM4Cbp":{"uri":"/melonJS/docs/melonjs/Particle.html#width"},"uJr3bxz3fKm0ssa_1fRSB":{"uri":"/melonJS/docs/melonjs/Particle.html#angleTo"},"gK1qY0mYWgTpspB1UwzX4":{"uri":"/melonJS/docs/melonjs/Particle.html#centerOn"},"X4Ns7_IH1tH0pX3WOCHJU":{"uri":"/melonJS/docs/melonjs/Particle.html#clone"},"9PQBVINXZg4iheURcZ-Me":{"uri":"/melonJS/docs/melonjs/Particle.html#constructor"},"4Suxa-a8fBZb6rabTxbNN":{"uri":"/melonJS/docs/melonjs/Particle.html#contains"},"ncxK8bP6_1eDnNzThLP64":{"uri":"/melonJS/docs/melonjs/Particle.html#copy"},"Z5xiu8tTCGwzP4ukB3WZB":{"uri":"/melonJS/docs/melonjs/Particle.html#distanceTo"},"70zfUmHdM2X5CD8JL-CVY":{"uri":"/melonJS/docs/melonjs/Particle.html#equals"},"nX0pPD6xk6j0eC-Hce6LL":{"uri":"/melonJS/docs/melonjs/Particle.html#flipX"},"L42YwtwSouU4YcaV0wwv0":{"uri":"/melonJS/docs/melonjs/Particle.html#flipY"},"28fNC5sp1R6XyyQxbfoeJ":{"uri":"/melonJS/docs/melonjs/Particle.html#getAbsolutePosition"},"7Gcwfoeg761vXC1iE9a1C":{"uri":"/melonJS/docs/melonjs/Particle.html#getBounds"},"NnoWbGQtLo0nX88u6eymE":{"uri":"/melonJS/docs/melonjs/Particle.html#getIndices"},"D0ANdeVPcxiUl_lmJGgCK":{"uri":"/melonJS/docs/melonjs/Particle.html#getOpacity"},"wVGjfLJCsn3CrWDGc4qHD":{"uri":"/melonJS/docs/melonjs/Particle.html#isConvex"},"lpsveIpi4JrBVAZo5aLQO":{"uri":"/melonJS/docs/melonjs/Particle.html#isFinite"},"4sdgCxxJR-LfyuqeODBxt":{"uri":"/melonJS/docs/melonjs/Particle.html#lookAt"},"OHOTOgoNwXVEsoV0xqOvZ":{"uri":"/melonJS/docs/melonjs/Particle.html#onCollision"},"GkL9pfiHvqXYLHf5zbCVP":{"uri":"/melonJS/docs/melonjs/Particle.html#onDestroyEvent"},"xdnGwysMpqDOsqjdyIhw5":{"uri":"/melonJS/docs/melonjs/Particle.html#overlaps"},"fuf4HPqzzYyO6w8blA_4o":{"uri":"/melonJS/docs/melonjs/Particle.html#recalc"},"XB7j4BcmdPOGYNRz0ZQMw":{"uri":"/melonJS/docs/melonjs/Particle.html#resize"},"bsZbCu42S1i9XZ_kWKFQZ":{"uri":"/melonJS/docs/melonjs/Particle.html#rotate"},"HFC8QBxlC4n84mbkkc5YL":{"uri":"/melonJS/docs/melonjs/Particle.html#scale"},"Gf7sXuij6XxcNzlftvd1r":{"uri":"/melonJS/docs/melonjs/Particle.html#scaleV"},"a6PuyFpTRSRqueeLVBVrm":{"uri":"/melonJS/docs/melonjs/Particle.html#setOpacity"},"wS1bRO65IDmpDW1IC0LA6":{"uri":"/melonJS/docs/melonjs/Particle.html#setShape"},"n8PqOoQuoE9euXB7oA0bs":{"uri":"/melonJS/docs/melonjs/Particle.html#setVertices"},"XxD15CuyQwLOYi35w66pi":{"uri":"/melonJS/docs/melonjs/Particle.html#shift"},"duvcfPcP5ZbU-KypVlNmp":{"uri":"/melonJS/docs/melonjs/Particle.html#to2d"},"6_ncBV-IxWrW18vminHfP":{"uri":"/melonJS/docs/melonjs/Particle.html#toIso"},"B14SX90a3-Sq4ykaQmxCl":{"uri":"/melonJS/docs/melonjs/Particle.html#toPolygon"},"AJerTtE0SsjwHBwC1_ycr":{"uri":"/melonJS/docs/melonjs/Particle.html#transform"},"Q7V7K1VvVfhU7b9rohfdX":{"uri":"/melonJS/docs/melonjs/Particle.html#translate"},"EQE9yRJE0cOnD-B30SweQ":{"uri":"/melonJS/docs/melonjs/Particle.html#union"},"PjZYfR9FAlA4K7temDreY":{"uri":"/melonJS/docs/melonjs/Particle.html#draw"},"XhX22pXiKwPoEHPCR0FLU":{"uri":"/melonJS/docs/melonjs/Particle.html#postDraw"},"C9FORwPJzcbumFB5f848W":{"uri":"/melonJS/docs/melonjs/Particle.html#preDraw"},"UtTvjdLR0ldc6vrxwIEHn":{"uri":"/melonJS/docs/melonjs/Particle.html#update"},"WAg6frf84tcxzV_j6BiIr":{"uri":"/melonJS/docs/melonjs/Particle.html#onAnchorUpdate"},"BnXRiEu4JZSx7cqaHaile":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html"},"0mliCNHqtOfzKPlEUNu5Z":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#alpha"},"8Z_i4TtyvhTA1mNW_JR-C":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#alwaysUpdate"},"SWbBd4RRAtzRSxl4qMcgs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#ancestor"},"m74TUucRl0a9yInvjMA8z":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#anchorPoint"},"1IoOCpOPXnXkE2Qi4cFvh":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoDepth"},"unsR8pPAAg2DgT8-qCQrS":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoSort"},"2yQbajRkOyeig5HPelYT_":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoTransform"},"CDxOfkA3-nRl8oIe0Xa2Z":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#backgroundColor"},"9h-4Feb9TxGsdRfCd1czv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#blendMode"},"DoA0-tsMDv3TKqDTcJMcr":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#body"},"GuTEftv1kmH15W60KK2my":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#bottom"},"kYqyWKxrwVMHqtxes29kK":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerX"},"kSyPyWPH6rAXTO-qSky3a":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerY"},"WqtDpV56ixY_c3AnfxCAv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#clipping"},"GbjdWWccnt24Ly_R3l4s7":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#currentTransform"},"fo8I9fFY1u__rUrVFkPyP":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#enableChildBoundsUpdate"},"TXsy0qzml0PpZ4pemR3--":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#floating"},"rDA6aXR8ODOcSQCLSQ5sM":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#GUID"},"amz9AVjmSVoXFk2Hhu6lV":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#height"},"77HxbPHPQrtEdKehRFWAG":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#inViewport"},"CNhGq2qtnbttZCn0ShNcA":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isDirty"},"8WqmFTpDv6njVxe9hh7M2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFlippedX"},"KlSp9BdTT8EESPjKUGLo7":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFlippedY"},"kn-BBfhoV6oNWGLFpUgb8":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFloating"},"f2H6xwYMN44TjTOrEueEs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isKinematic"},"noaibsjHvoojwnY1vS_3M":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isPersistent"},"SEjp-3SvI-jHy-003zcg1":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#left"},"mtztQ_2eOluxYUfuqnqKU":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#mask"},"bj_TZde5jJS81Bon6ruMs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#name"},"EtI9MHtpUW5Tog9d4QMr4":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onVisibilityChange"},"RTZ1igJ55uZYnv-NrOXPu":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#points"},"3HMrvqgIt-8saA1pbGhAj":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#pos"},"fU8Qms4JUupKS2d91vRlk":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#right"},"8KqnKgpKZcDjLZMuUKlhz":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#root"},"5eJsk_R5WEieHzLH2duSM":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#settings"},"wwuQ_equc5vWpw-9_yB1N":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#sortOn"},"NRI4GAbigXDutNsYGhMza":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#tint"},"1sFl3AlE9MT0M9k2zJIa0":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#top"},"2LLPuixACw8fvScyPhIVo":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#updateWhenPaused"},"FQZzDDIuM7j-oKvvT6q_V":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#width"},"2jsOhDWf3XltItLwg3Ql9":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#addChild"},"TKGz3z5LNgBp6Eue31Fi-":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#addChildAt"},"bckMW4pn5soHPC0PTinZd":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#angleTo"},"j0kNYvkIy8fpABlXwFT7M":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#burstParticles"},"cmwEYOVxZuPDV7pJdH3ti":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerOn"},"8hm6UBxsUPuTO4gHqmuSa":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#clone"},"HoGUYB_HTSxywEF9MgJgQ":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#constructor"},"WvxaQzTfq1EH1iLFjeK8_":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#contains"},"iesYAbsPPfE6M97GYIaYe":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#copy"},"atWEdmUsie421X2cJDir8":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#distanceTo"},"qhRLUinuQ_cRA23hKYRQ2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#equals"},"ra2sveroc0ehOwKu1ujIk":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#flipX"},"0Fb0CQKnQ4nGwfjU6HdVs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#flipY"},"Ngs27IsDm9Ea7rxSa5n_5":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#forEach"},"iqrkb0VqHyD0FTdja-wMk":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getAbsolutePosition"},"ZbmheQafC9-hceeViuyEF":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getBounds"},"6dvVtKcAKOAHyE7g1HxvF":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildAt"},"CEtReG_r-Spj7GVOcbfee":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByGUID"},"EvBu2Fkk9rAb-rlTVD6rz":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByName"},"xBs72kkz7XDKy7X0HEY4N":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByProp"},"RFjZoRrLAMpNwU9aEqq8V":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByType"},"YHyLxrGGTJu1I_BM31At8":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildIndex"},"ohqF8ijfYq13JyQ6ksR0r":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildren"},"XzLf56q7PY2pLk6CkGxg6":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getIndices"},"MAYVh7wRTIz6HKqs2hrNC":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getNextChild"},"-K6uwKFKndxF2pZRbGZC2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getOpacity"},"5-xmpspdw2pKDqnraoOy2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getRandomPointX"},"7LlsISkfg_T8kud4rXiWA":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getRandomPointY"},"3uzv8j5loHrY_A968OgA5":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#hasChild"},"U8OJJXjFfC5D3hFiB-Gxn":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isConvex"},"2rAaWns7kTcP0InluhCyD":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFinite"},"6468JlNp7P2jDdj2GZNhj":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isRunning"},"JnMfp8uCJARLgg-cy6qgA":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#lookAt"},"2Glf_GQlfxXdSfwae0O8E":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveDown"},"iaZLgucCX77eMhHLKG9ij":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveToBottom"},"IzQymUBxhmiV7Ef_sLNjR":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveToTop"},"5vLwJFpCV6Qght1c-yVmq":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveUp"},"DbLE3_e9UFqXtEHkfeRLx":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onChildChange"},"CYnbOzhFxHYwLuX2zskYl":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onCollision"},"bFk7ebqbs7p_Z66L0hq09":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onDestroyEvent"},"Nnaz6TX3VyPS7bu5pn0Vh":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#overlaps"},"7huQ3QJe0Qa1B6yOV-PWs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#recalc"},"4ud6yKaxc4QFV7VInUJrS":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#removeChild"},"7gr_BUmezwReLDdvB3EdH":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#removeChildNow"},"uNd8_9TK3l6M1FN247jRo":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#reset"},"Grj4TyxQR9B2o9dc-wFhK":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#resize"},"3HDxw-gOGBck1Jc-Dd8xh":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#rotate"},"ZQm3jI3kYz5hXph4T4asz":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#scale"},"app4I0dHzVMLw57QuDN_n":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#scaleV"},"wBlXR-WEAtlkhe-UAeRiR":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setChildsProperty"},"HgRKVT5mED0Rk4C2UsQDU":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setOpacity"},"2ORDeEyrnlWPmJ8ssAao7":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setShape"},"eIz5HjfS6fBL7wv1A6Ayw":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setVertices"},"ET2aAaO1iC18_mnSt7kdY":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#shift"},"Ckg5wnRbw1uVKN_3mNQcP":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#sort"},"R7U8z3fYIJpdDnqwqA0yr":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#stopStream"},"9TsfTg08ML3kiZI0_0c11":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#streamParticles"},"wxCROcS6r0P6adIgCBrOS":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#swapChildren"},"HJYX58AbGVGG7iFNNeOD3":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#to2d"},"ptwyZt_06Zpa2Bphlq8hX":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#toIso"},"kDNQeVWfzw1HxndTAgLZC":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#toPolygon"},"tZLV92QHynQYBDEkHwNsc":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#transform"},"ifEug9MnvlMVVTfAgKKan":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#translate"},"kvg5ujfWhFnLObesUheai":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#union"},"tnINWPs3tgEwoPBI-3Soo":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#draw"},"X1LiBFAesNpWOrFNeYglW":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#postDraw"},"mfobCMfx-VtWn-fIiUL9c":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#preDraw"},"4y9AD2v5qfoqg-n64a1ev":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#update"},"VUy2HyYIfAlf7BR7Z5TR_":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isAttachedToRoot"},"6VfOSU-5JGoh-IMKA4uYG":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onAnchorUpdate"},"hU39sZhYBHmYFJxTqkiDG":{"uri":"/melonJS/docs/melonjs/Path2D.html"},"YWH2qE_L7eTEbDhXAcIKR":{"uri":"/melonJS/docs/melonjs/Path2D.html#arcResolution"},"AA6ZjRklMa3mCe7wVEhvq":{"uri":"/melonJS/docs/melonjs/Path2D.html#points"},"1W1jr3d6n5L6d2SZYMQfg":{"uri":"/melonJS/docs/melonjs/Path2D.html#arc"},"A8lNjlW5d5hznHaM3c259":{"uri":"/melonJS/docs/melonjs/Path2D.html#arcTo"},"WEGz9aXBLhNdAlQuc7RTn":{"uri":"/melonJS/docs/melonjs/Path2D.html#beginPath"},"XOGu-RWQ_SV7pnk_e8j0I":{"uri":"/melonJS/docs/melonjs/Path2D.html#closePath"},"DBBWF6e_xRlJCinsH0aXc":{"uri":"/melonJS/docs/melonjs/Path2D.html#ellipse"},"Y7PgkWGtICnjXNXgmG0yg":{"uri":"/melonJS/docs/melonjs/Path2D.html#lineTo"},"Uk1QGNTK2Ebr05h_IHWJB":{"uri":"/melonJS/docs/melonjs/Path2D.html#moveTo"},"HSEkpYZVVHPDjaIWu_Ad7":{"uri":"/melonJS/docs/melonjs/Path2D.html#rect"},"Ip97UrvXmtJM-BV4qJSSe":{"uri":"/melonJS/docs/melonjs/Path2D.html#roundRect"},"7HoDpq2qXokCV4uFyXO08":{"uri":"/melonJS/docs/melonjs/Path2D.html#triangulatePath"},"2rA66njC6Lu9VSlJdnYeE":{"uri":"/melonJS/docs/melonjs/Pointer.html"},"ngEfT8f9zh2DcqrigekBL":{"uri":"/melonJS/docs/melonjs/Pointer.html#bottom"},"RaUd0tR6Rity0tIhCMyit":{"uri":"/melonJS/docs/melonjs/Pointer.html#button"},"xshmZvuKvxO1j7gJb9bzl":{"uri":"/melonJS/docs/melonjs/Pointer.html#center"},"g8n1ZloBC5BOHArU9oht_":{"uri":"/melonJS/docs/melonjs/Pointer.html#centerX"},"PTAqcU_LYx-4LOgpxf32b":{"uri":"/melonJS/docs/melonjs/Pointer.html#centerY"},"S1bxy9WuUDitgTxefiLVE":{"uri":"/melonJS/docs/melonjs/Pointer.html#clientX"},"ID9wK6CDm5BRIAlqJFyRz":{"uri":"/melonJS/docs/melonjs/Pointer.html#clientY"},"GBldohyXT4z9m4X-ut_7F":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaMode"},"sh7aMKoqTde0n8Ee547Zn":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaX"},"a-2ZqGmBKcqA7cqxe2xvx":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaY"},"T6vfwDsNRvvZdADe3HhjH":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaZ"},"fWo2oxdtjKuDarFHGxZ8O":{"uri":"/melonJS/docs/melonjs/Pointer.html#event"},"FinWtwz_oEGxqgM9wc6GQ":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameLocalX"},"GzNOndQPcdlLj6Bc4g3aU":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameLocalY"},"tc9RSUsrV-4UJJQBWTrhr":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameScreenX"},"ST3ei0R1_zAUJRJkcE54v":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameScreenY"},"J5Mcl7hp8NdRRlpuBrS5A":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameWorldX"},"S6hNKvW_XEx6TYPCVh9Kr":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameWorldY"},"HmXXTqaQh1pmyMELj5YFP":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameX"},"ynf2GoLvqIhsuYjIg14S-":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameY"},"dJ5S8cmTly2c05CXl2dUo":{"uri":"/melonJS/docs/melonjs/Pointer.html#isNormalized"},"10FZ0AJvlj0UBZ0snM87Z":{"uri":"/melonJS/docs/melonjs/Pointer.html#isPrimary"},"MhNoNIY3VKqam--z9EgQ7":{"uri":"/melonJS/docs/melonjs/Pointer.html#left"},"6Dnrqq5JfMZw1vaaPaxgX":{"uri":"/melonJS/docs/melonjs/Pointer.html#LEFT"},"r_0bKYJpWbgDKO5CIiZEF":{"uri":"/melonJS/docs/melonjs/Pointer.html#locked"},"qzc-iZ7xPUXFHKoj3OdBf":{"uri":"/melonJS/docs/melonjs/Pointer.html#MIDDLE"},"mT1D3LMZ0uPbdcpJSaj-r":{"uri":"/melonJS/docs/melonjs/Pointer.html#movementX"},"2KYMbOZg8bgNLuTjKZYUf":{"uri":"/melonJS/docs/melonjs/Pointer.html#movementY"},"EPyjjW45uX6Dwze1EzGIA":{"uri":"/melonJS/docs/melonjs/Pointer.html#pageX"},"S-luDPmFNnEocKx4C1DxH":{"uri":"/melonJS/docs/melonjs/Pointer.html#pageY"},"M-0sbtC4U_gjHWHqWv1f0":{"uri":"/melonJS/docs/melonjs/Pointer.html#pointerId"},"Z8w7bBuQKk8E-Ueoix9--":{"uri":"/melonJS/docs/melonjs/Pointer.html#right"},"sniGkDrZfAHgc0hZAybIZ":{"uri":"/melonJS/docs/melonjs/Pointer.html#RIGHT"},"fz0GrpedyKi_WIL1G_wQz":{"uri":"/melonJS/docs/melonjs/Pointer.html#top"},"723r0R8GL152iljgYQahN":{"uri":"/melonJS/docs/melonjs/Pointer.html#type"},"xKSNjfdq7hGFCwUU3AjZu":{"uri":"/melonJS/docs/melonjs/Pointer.html#width"},"XGLsQTaChJ9lyGhDp8Vki":{"uri":"/melonJS/docs/melonjs/Pointer.html#x"},"0xkGH5KUuZRfjM5jOFHKc":{"uri":"/melonJS/docs/melonjs/Pointer.html#y"},"vJiIKr_-gjY5uFVZHJQ7H":{"uri":"/melonJS/docs/melonjs/Pointer.html#add"},"nVbJofpKmLRWmcmUPUrDe":{"uri":"/melonJS/docs/melonjs/Pointer.html#addBounds"},"75gHg_Jp9zntsVH9ipeqn":{"uri":"/melonJS/docs/melonjs/Pointer.html#addFrame"},"SH93RbuNf_V54ij-tHaO5":{"uri":"/melonJS/docs/melonjs/Pointer.html#addPoint"},"wcfJc9wdPuOLFinqngC_f":{"uri":"/melonJS/docs/melonjs/Pointer.html#clear"},"AmUjtJrSfeKeWzF-g0T8Y":{"uri":"/melonJS/docs/melonjs/Pointer.html#clone"},"mr8eve2DKtYuyK7xata7P":{"uri":"/melonJS/docs/melonjs/Pointer.html#contains"},"5rGYhw_xus5Ar7jE66Lnb":{"uri":"/melonJS/docs/melonjs/Pointer.html#isFinite"},"hA1_lU4Vc_MXbllRWzbw3":{"uri":"/melonJS/docs/melonjs/Pointer.html#overlaps"},"RsV8mXOleJFeDZvhfOIiG":{"uri":"/melonJS/docs/melonjs/Pointer.html#setMinMax"},"P9-VjHyXTmVv-BMDSzvGW":{"uri":"/melonJS/docs/melonjs/Pointer.html#shift"},"NXnovkuyuMmfKlDcfNENs":{"uri":"/melonJS/docs/melonjs/Pointer.html#toPolygon"},"2JE_36Z9zeFmvG_mU9EA-":{"uri":"/melonJS/docs/melonjs/Pointer.html#translate"},"tqTiKI963GLfctzMfnCkc":{"uri":"/melonJS/docs/melonjs/Pointer.html#update"},"HAYCYujqL2B62yj0xSm8Y":{"uri":"/melonJS/docs/melonjs/Pointer.html#set"},"5DxyXlnF_Lv6tV8WHGv7a":{"uri":"/melonJS/docs/melonjs/Polygon.html"},"CQwGJ7nMTqv42N9Um9Kh9":{"uri":"/melonJS/docs/melonjs/Polygon.html#points"},"FfXmfkizAThjwddog0eGW":{"uri":"/melonJS/docs/melonjs/Polygon.html#pos"},"hXDTjcPscrwkrgy-jsSx4":{"uri":"/melonJS/docs/melonjs/Polygon.html#clone"},"0V4vARdaiH_vW0l2R3wR8":{"uri":"/melonJS/docs/melonjs/Polygon.html#constructor"},"5kDoupqBb_ALbauM9O9qR":{"uri":"/melonJS/docs/melonjs/Polygon.html#contains"},"r-YPh2IOS6UfnEoJTbzfM":{"uri":"/melonJS/docs/melonjs/Polygon.html#getBounds"},"NILM17p0suOrLjG1qNwJi":{"uri":"/melonJS/docs/melonjs/Polygon.html#getIndices"},"6wvKh2ZO9fE-5WxcwywpZ":{"uri":"/melonJS/docs/melonjs/Polygon.html#isConvex"},"9WVNs7ElRQE27vmSlyIHI":{"uri":"/melonJS/docs/melonjs/Polygon.html#recalc"},"FMorsXpdtNSJzYVrFojHv":{"uri":"/melonJS/docs/melonjs/Polygon.html#rotate"},"kVf0wB35sT8e7wO63EhRs":{"uri":"/melonJS/docs/melonjs/Polygon.html#scale"},"_dzFR6fXGt6Nj7QNsydLC":{"uri":"/melonJS/docs/melonjs/Polygon.html#scaleV"},"M4pcUhsWA8q4bA8Q-yiWs":{"uri":"/melonJS/docs/melonjs/Polygon.html#setShape"},"ZZjbVtUfEZIm3ZYOEZmOJ":{"uri":"/melonJS/docs/melonjs/Polygon.html#setVertices"},"y1Syq83KWxa5KxM1_whsd":{"uri":"/melonJS/docs/melonjs/Polygon.html#shift"},"hs_-jKhuEWr0hT8P_uJ87":{"uri":"/melonJS/docs/melonjs/Polygon.html#to2d"},"RMzXcCBfZi2aPbFidjnBU":{"uri":"/melonJS/docs/melonjs/Polygon.html#toIso"},"nAcvejvDB5PyHbyx1xX00":{"uri":"/melonJS/docs/melonjs/Polygon.html#transform"},"nQQfAPwDGIAvK-9hR-SA2":{"uri":"/melonJS/docs/melonjs/Polygon.html#translate"},"159mMOuj63lZA471gqYIW":{"uri":"/melonJS/docs/melonjs/Polygon.html#contains"},"82p-ouoNXeqes9SWTuQHv":{"uri":"/melonJS/docs/melonjs/Polygon.html#shift"},"peprGo2yBvyTRhzY7EjvT":{"uri":"/melonJS/docs/melonjs/Polygon.html#translate"},"Z2F2MB3BqIHCtZl2ZZh5x":{"uri":"/melonJS/docs/melonjs/QuadTree.html"},"VqVPuiElDyRr2VckKTwJO":{"uri":"/melonJS/docs/melonjs/QuadTree.html#clear"},"BeVhSWj0wg5drH6RDGjCV":{"uri":"/melonJS/docs/melonjs/QuadTree.html#constructor"},"hgq8csU88KNjRAEvscZka":{"uri":"/melonJS/docs/melonjs/QuadTree.html#hasChildren"},"7bTndQedWs1sRVE2uA-Us":{"uri":"/melonJS/docs/melonjs/QuadTree.html#insert"},"4zyLemE5MAE3MHGnJl1Kk":{"uri":"/melonJS/docs/melonjs/QuadTree.html#insertContainer"},"6zTLz4ImIh2jwPflXgRU8":{"uri":"/melonJS/docs/melonjs/QuadTree.html#isPrunable"},"b3ZldVKU3EzwXE2GRERpZ":{"uri":"/melonJS/docs/melonjs/QuadTree.html#remove"},"QYikR0imxd3DVdtZqxBeM":{"uri":"/melonJS/docs/melonjs/QuadTree.html#retrieve"},"s6vjW4-2IIV8rY27M49oV":{"uri":"/melonJS/docs/melonjs/Rect.html"},"Z6SXxinuhaglQjlOeDh3J":{"uri":"/melonJS/docs/melonjs/Rect.html#bottom"},"DLCX2_GoLP_9ssPxPfOtC":{"uri":"/melonJS/docs/melonjs/Rect.html#centerX"},"w5cjHb67gYFvoow6sjJyC":{"uri":"/melonJS/docs/melonjs/Rect.html#centerY"},"XSMX3v0DwD4uIaNMb3xV4":{"uri":"/melonJS/docs/melonjs/Rect.html#height"},"fRY8SuUbc9BVCb1UnM_TQ":{"uri":"/melonJS/docs/melonjs/Rect.html#left"},"kyXWLf6lINWIpq9fPlp2E":{"uri":"/melonJS/docs/melonjs/Rect.html#points"},"bdrEmhkXGSKi9MDy84G04":{"uri":"/melonJS/docs/melonjs/Rect.html#pos"},"6KZpf9C8T4qHpsN69A1_s":{"uri":"/melonJS/docs/melonjs/Rect.html#right"},"DUjUy6AynxAYxkGiTjjNR":{"uri":"/melonJS/docs/melonjs/Rect.html#top"},"H4-Q606xNUPGqzmXz7UnH":{"uri":"/melonJS/docs/melonjs/Rect.html#width"},"Wy67eL3div0tTKVRHT9l5":{"uri":"/melonJS/docs/melonjs/Rect.html#centerOn"},"FKP58vozEAZa-BE4G2IXf":{"uri":"/melonJS/docs/melonjs/Rect.html#clone"},"i9UfrtcgHKX7u9YFIuWmD":{"uri":"/melonJS/docs/melonjs/Rect.html#constructor"},"v__fOKbzeH_rbjNC1h9D9":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"OvIT2OU7lWLF8Qk0i6jSB":{"uri":"/melonJS/docs/melonjs/Rect.html#copy"},"C--zV1TvVYilAq4bKpqdz":{"uri":"/melonJS/docs/melonjs/Rect.html#equals"},"hebRL9w_Q7K7NKrBqdyfu":{"uri":"/melonJS/docs/melonjs/Rect.html#getBounds"},"0G2c3DLJ9t_PPPDMCYhAK":{"uri":"/melonJS/docs/melonjs/Rect.html#getIndices"},"DVV5f_LUEoEbvQAh3aus9":{"uri":"/melonJS/docs/melonjs/Rect.html#isConvex"},"NvlgJeMOapROcj9k7BwQl":{"uri":"/melonJS/docs/melonjs/Rect.html#isFinite"},"mxpZRPW7Ws9a5XO_TdkNa":{"uri":"/melonJS/docs/melonjs/Rect.html#overlaps"},"fvR6t1UbmKXTUhPUPzGnm":{"uri":"/melonJS/docs/melonjs/Rect.html#recalc"},"ZCc5qYW_MqUaBKuxXyR7E":{"uri":"/melonJS/docs/melonjs/Rect.html#resize"},"z29P3NBZazt7d9ZTGQD9e":{"uri":"/melonJS/docs/melonjs/Rect.html#rotate"},"Evh9oeucXq_zAHjZ6oJ7n":{"uri":"/melonJS/docs/melonjs/Rect.html#scale"},"37FzFLmesdvEMZNEwqDky":{"uri":"/melonJS/docs/melonjs/Rect.html#scaleV"},"U-5Iaqhvrn2KhXVfXW6B5":{"uri":"/melonJS/docs/melonjs/Rect.html#setShape"},"L5hO2i4Coe_KhP4k8-5vp":{"uri":"/melonJS/docs/melonjs/Rect.html#setVertices"},"foqatb09B2qiXeWrvZEOk":{"uri":"/melonJS/docs/melonjs/Rect.html#shift"},"3oJQ8DMRtLuU6o8kMKICp":{"uri":"/melonJS/docs/melonjs/Rect.html#to2d"},"J6Ee9Ex76Ti6surDt0Zv0":{"uri":"/melonJS/docs/melonjs/Rect.html#toIso"},"b-_n__cTixFNEIN6nN2AU":{"uri":"/melonJS/docs/melonjs/Rect.html#toPolygon"},"I_mWyT6-6pKv-3Wsp6MiT":{"uri":"/melonJS/docs/melonjs/Rect.html#transform"},"OJBjDYehzn80lAFfKpD8v":{"uri":"/melonJS/docs/melonjs/Rect.html#translate"},"3_u1GA5haHxLKUrgODUie":{"uri":"/melonJS/docs/melonjs/Rect.html#union"},"_JsZXx9RU_aMUbSaM3II3":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"wPGx9NC92a44_V7d2Hgm5":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"LxRy8Sm-4kmjlYgqW3Lbz":{"uri":"/melonJS/docs/melonjs/Renderable.html"},"EE-Jzzls8qIKu50GwUIgt":{"uri":"/melonJS/docs/melonjs/Renderable.html#alpha"},"-prN4OpzjV_u7CQHfFpno":{"uri":"/melonJS/docs/melonjs/Renderable.html#alwaysUpdate"},"POcBzeIb4GN42KK-GD7NW":{"uri":"/melonJS/docs/melonjs/Renderable.html#ancestor"},"_V_tWRnLD9f-eVA0umKMQ":{"uri":"/melonJS/docs/melonjs/Renderable.html#anchorPoint"},"fSQIxingTYx-oS7kaQfQ4":{"uri":"/melonJS/docs/melonjs/Renderable.html#autoTransform"},"cLygOLjpjmuQhxuC2sQnE":{"uri":"/melonJS/docs/melonjs/Renderable.html#blendMode"},"xqeTtf9RvrZyGqnfFaJEC":{"uri":"/melonJS/docs/melonjs/Renderable.html#body"},"QRcHSUNaanAM3qibVwgbL":{"uri":"/melonJS/docs/melonjs/Renderable.html#bottom"},"N1HAiKwTT5ogOzJTNFjh4":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerX"},"6eiABAZZq9DsOBlXdabRX":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerY"},"37fUo1BKIvIuBNQF8QECj":{"uri":"/melonJS/docs/melonjs/Renderable.html#currentTransform"},"uVSFn6_YwYyWjLZNLq10g":{"uri":"/melonJS/docs/melonjs/Renderable.html#floating"},"ZzN6LE0TSuID7c3v6LNSc":{"uri":"/melonJS/docs/melonjs/Renderable.html#GUID"},"h7aQVTzS7QRpcXM0rbrom":{"uri":"/melonJS/docs/melonjs/Renderable.html#height"},"hL7PVcS--GNJXRvgIqgLb":{"uri":"/melonJS/docs/melonjs/Renderable.html#inViewport"},"gjFdmTxI_KKXDVrh_vlb0":{"uri":"/melonJS/docs/melonjs/Renderable.html#isDirty"},"ehVkuKedaEf6P21HxRq2L":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFlippedX"},"IK0VpJ31pJdNSFcvy68cY":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFlippedY"},"JECeoZIqcyXOFr9uDw-7n":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFloating"},"pZiQ5rBXgK5HsrCwleMGL":{"uri":"/melonJS/docs/melonjs/Renderable.html#isKinematic"},"bhAMVQRr6GSBj0nLLw-VK":{"uri":"/melonJS/docs/melonjs/Renderable.html#isPersistent"},"1eDcf05lDFjws7dPIVYc0":{"uri":"/melonJS/docs/melonjs/Renderable.html#left"},"F8BCr2PEl0VksL3PPu7qu":{"uri":"/melonJS/docs/melonjs/Renderable.html#mask"},"riE4Aqob80xxjrlCytFHA":{"uri":"/melonJS/docs/melonjs/Renderable.html#name"},"rTzXvx1m8rIXxao5e3Qis":{"uri":"/melonJS/docs/melonjs/Renderable.html#onVisibilityChange"},"fqjuXNBtqB9Vo3cuEShBO":{"uri":"/melonJS/docs/melonjs/Renderable.html#points"},"Dd_P8XZqrX9yAKlEho7Vf":{"uri":"/melonJS/docs/melonjs/Renderable.html#pos"},"Q-gsDpC63wiMDM8hOs3aj":{"uri":"/melonJS/docs/melonjs/Renderable.html#right"},"G_nAcoduXxRzkh_i6hpBA":{"uri":"/melonJS/docs/melonjs/Renderable.html#tint"},"H9zIprHxwIhks_9Ma_tRX":{"uri":"/melonJS/docs/melonjs/Renderable.html#top"},"M_F3pK85JKEOEbDAe1g9v":{"uri":"/melonJS/docs/melonjs/Renderable.html#updateWhenPaused"},"JBoSpVB78Wu6OctNn_dH1":{"uri":"/melonJS/docs/melonjs/Renderable.html#width"},"TWuqzQepm_z5twV3Gh9iO":{"uri":"/melonJS/docs/melonjs/Renderable.html#angleTo"},"NBxsxSC6uQMhors0spxq-":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerOn"},"vvCFfRRtYWIlQWDEUYl6e":{"uri":"/melonJS/docs/melonjs/Renderable.html#clone"},"ViovGJeW4yup6m9Nj2-PQ":{"uri":"/melonJS/docs/melonjs/Renderable.html#constructor"},"PgAUCRmekQn8AKQP74jNT":{"uri":"/melonJS/docs/melonjs/Renderable.html#contains"},"Lyb7Cq5HJFXZNxAfgvcQz":{"uri":"/melonJS/docs/melonjs/Renderable.html#copy"},"yfswFnd8XpDrphjhjWo8a":{"uri":"/melonJS/docs/melonjs/Renderable.html#distanceTo"},"tY1qFIMhtXlU0F5JJwblc":{"uri":"/melonJS/docs/melonjs/Renderable.html#equals"},"mj3_HUIy1UdIaP75bxfdH":{"uri":"/melonJS/docs/melonjs/Renderable.html#flipX"},"9EBVrj4FAiVee8UFZg1vA":{"uri":"/melonJS/docs/melonjs/Renderable.html#flipY"},"q12j_8oiQRoa4dVv5exX0":{"uri":"/melonJS/docs/melonjs/Renderable.html#getAbsolutePosition"},"b28JuL1waSS8mr6uZIHQY":{"uri":"/melonJS/docs/melonjs/Renderable.html#getBounds"},"WGLYHf5yAS9a6pvmV0Ipd":{"uri":"/melonJS/docs/melonjs/Renderable.html#getIndices"},"FWz1r-GBR6oshPopTbya7":{"uri":"/melonJS/docs/melonjs/Renderable.html#getOpacity"},"VlAxkFRkCR0jBUeRQiPKi":{"uri":"/melonJS/docs/melonjs/Renderable.html#isConvex"},"O2t571xLO3GO5F5DXVw83":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFinite"},"gHqikE0KtP8ufbVcsJ_1W":{"uri":"/melonJS/docs/melonjs/Renderable.html#lookAt"},"yK59OuMviChtlcFz_HvlR":{"uri":"/melonJS/docs/melonjs/Renderable.html#onCollision"},"Farz9AhGKaMJofWfPy4ly":{"uri":"/melonJS/docs/melonjs/Renderable.html#onDestroyEvent"},"V5N0tc3FgeJb-TCpdTwiE":{"uri":"/melonJS/docs/melonjs/Renderable.html#overlaps"},"KNhBfePF_-J_3D2fbCS5W":{"uri":"/melonJS/docs/melonjs/Renderable.html#recalc"},"Ud6tmAiESdCKDh93Nimap":{"uri":"/melonJS/docs/melonjs/Renderable.html#resize"},"cfJv-BPxi0-mXYzsQ4Kjv":{"uri":"/melonJS/docs/melonjs/Renderable.html#rotate"},"tcPsqj5vHQVs4CzWOwHrP":{"uri":"/melonJS/docs/melonjs/Renderable.html#scale"},"ogsKOjFR0SFymRGR3jlW5":{"uri":"/melonJS/docs/melonjs/Renderable.html#scaleV"},"5HzgkmoR3ZykFR0tPZLfW":{"uri":"/melonJS/docs/melonjs/Renderable.html#setOpacity"},"mwOiA0ZCuNggfQen8bz_r":{"uri":"/melonJS/docs/melonjs/Renderable.html#setShape"},"4Pxavp0g62q0yRvUoBvTT":{"uri":"/melonJS/docs/melonjs/Renderable.html#setVertices"},"4jYzeJmMBqTniFv-9xH59":{"uri":"/melonJS/docs/melonjs/Renderable.html#shift"},"JSRJWJvlnuw9d9X34vNNq":{"uri":"/melonJS/docs/melonjs/Renderable.html#to2d"},"CFJAzUG8XBn2IUM-idAHX":{"uri":"/melonJS/docs/melonjs/Renderable.html#toIso"},"HGXhvJ87q80WgR4YXORLz":{"uri":"/melonJS/docs/melonjs/Renderable.html#toPolygon"},"aQXLb-VE8cPpXzADXROYF":{"uri":"/melonJS/docs/melonjs/Renderable.html#transform"},"DWDIJftBd3fqryDfd-N5r":{"uri":"/melonJS/docs/melonjs/Renderable.html#translate"},"YPmALrrReBtl8BT42vSki":{"uri":"/melonJS/docs/melonjs/Renderable.html#union"},"CG4eIhKs7gC4psP9cfKLG":{"uri":"/melonJS/docs/melonjs/Renderable.html#draw"},"Eks0uFyYQrC6t9ACdyxeO":{"uri":"/melonJS/docs/melonjs/Renderable.html#postDraw"},"hHZL1nZresM_Eb6KOSXam":{"uri":"/melonJS/docs/melonjs/Renderable.html#preDraw"},"QhTCsB06oZHupKufE_VRQ":{"uri":"/melonJS/docs/melonjs/Renderable.html#update"},"gC6wfryBtIndIW9yk8Ev7":{"uri":"/melonJS/docs/melonjs/Renderable.html#onAnchorUpdate"},"-Ye1yRaFmnFQFk56gY2NA":{"uri":"/melonJS/docs/melonjs/Renderer.html"},"w2v3xo0HVMWuZG1107AG1":{"uri":"/melonJS/docs/melonjs/Renderer/Texture.html"},"p5cDY29JpUla_ULCNZJwJ":{"uri":"/melonJS/docs/melonjs/Renderer/Texture.html#constructor"},"J4hj46pgfUB-UeNGufEr_":{"uri":"/melonJS/docs/melonjs/Renderer.html#isContextValid"},"bwq9J1OaIHOl19E7lHMcR":{"uri":"/melonJS/docs/melonjs/Renderer.html#path2D"},"kxN56SdzwXzfkTJcaLJQd":{"uri":"/melonJS/docs/melonjs/Renderer.html#settings"},"_3cjMDayanF0jXSCA3Ao-":{"uri":"/melonJS/docs/melonjs/Renderer.html#clear"},"ljzZ2JTh3cfRSh4Vm8OW8":{"uri":"/melonJS/docs/melonjs/Renderer.html#clearMask"},"W4QboDlf6gDrWcy_FCast":{"uri":"/melonJS/docs/melonjs/Renderer.html#clearTint"},"JjRHf4CBIKwJjxaWNB8cG":{"uri":"/melonJS/docs/melonjs/Renderer.html#constructor"},"7Thetp23d8ewM65nAJy1R":{"uri":"/melonJS/docs/melonjs/Renderer.html#fill"},"Qoh_fu5IP_lX0DGTaUaUz":{"uri":"/melonJS/docs/melonjs/Renderer.html#getBlendMode"},"gc8agrW2gnQBNnTjFV6YG":{"uri":"/melonJS/docs/melonjs/Renderer.html#getCanvas"},"M8EIktrWDH_SRRwpKiqua":{"uri":"/melonJS/docs/melonjs/Renderer.html#getColor"},"4c909PuVfdz3JKvToP-7z":{"uri":"/melonJS/docs/melonjs/Renderer.html#getContext2d"},"YORWLMCgNfaVx0NFJKLqa":{"uri":"/melonJS/docs/melonjs/Renderer.html#getHeight"},"B4nv4dkHJer01xNlbCTC7":{"uri":"/melonJS/docs/melonjs/Renderer.html#getScreenCanvas"},"FXU9eJhtswGx5VXjcbsUu":{"uri":"/melonJS/docs/melonjs/Renderer.html#getScreenContext"},"_pTC3NA-WKLC10zbkB7Gb":{"uri":"/melonJS/docs/melonjs/Renderer.html#getWidth"},"iS7-UzJ_MeNBrbk7G0DyR":{"uri":"/melonJS/docs/melonjs/Renderer.html#globalAlpha"},"WjUurfSK_F8Bkru3Yvlyv":{"uri":"/melonJS/docs/melonjs/Renderer.html#overlaps"},"J6hcdIKA770XMRq_ajSWz":{"uri":"/melonJS/docs/melonjs/Renderer.html#reset"},"MVx5rAX7B8dT3p0sZ5xNz":{"uri":"/melonJS/docs/melonjs/Renderer.html#resize"},"0qZiYj4PbAFAchDHk5arq":{"uri":"/melonJS/docs/melonjs/Renderer.html#setAntiAlias"},"Wam7zH2UHb9Sr5v1g7C-t":{"uri":"/melonJS/docs/melonjs/Renderer.html#setMask"},"zFgaaUizyHXD4wGjh2HbQ":{"uri":"/melonJS/docs/melonjs/Renderer.html#setProjection"},"H0nI_1RAhWgtkRogVuyVt":{"uri":"/melonJS/docs/melonjs/Renderer.html#setTint"},"s9L-yDiKYXHmPi_nFr6LG":{"uri":"/melonJS/docs/melonjs/Renderer.html#stroke"},"FO_aJ-u5EwBq3ngA5uA2m":{"uri":"/melonJS/docs/melonjs/Renderer.html#tint"},"ByTsxGU2ENY7RH9YbNj_P":{"uri":"/melonJS/docs/melonjs/ResponseObject.html"},"cQac7tN-30canEsJkit_a":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#a"},"zDnDECXkSep3GugAd59fI":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#aInB"},"UJcW_bkrd_5A6vRcnq5lN":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#b"},"sZczBFaPWWfqO3h1hQK-q":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#bInA"},"GqwBZxV0BdUzDKDeriUp2":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#indexShapeA"},"XobuiRxEAxCFCvTh8N1lF":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#indexShapeB"},"6cQShkoAr0FeK_E-x84Ka":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#overlap"},"_rxDyAoe_DdBI19mJUvQY":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#overlapN"},"oBjdGisESjCF1U0jxgfJ8":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#overlapV"},"r6qrcpXmqyqVhg7Aujbgb":{"uri":"/melonJS/docs/melonjs/ResponseObject.html#clear"},"CkturLaz9DVb-AW9tLM_j":{"uri":"/melonJS/docs/melonjs/RoundRect.html"},"0bfG4imw6HwaYPGFxCzrB":{"uri":"/melonJS/docs/melonjs/RoundRect.html#bottom"},"7D71XcXLD04lKhEG8YLq_":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerX"},"sfdS9FqQK-0T417Q7LPcs":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerY"},"pjnzBkTt6Ur9bDoHqlbAT":{"uri":"/melonJS/docs/melonjs/RoundRect.html#height"},"KxieO9PVA9VZQtbDjcA2X":{"uri":"/melonJS/docs/melonjs/RoundRect.html#left"},"C0hfAICZdydiGgiY1xYuo":{"uri":"/melonJS/docs/melonjs/RoundRect.html#points"},"u8rx0qT3NZUb34cxAoLKy":{"uri":"/melonJS/docs/melonjs/RoundRect.html#pos"},"61reOW19RUCRzl1Z8jQmk":{"uri":"/melonJS/docs/melonjs/RoundRect.html#radius"},"0Vpk7eNBMRa05v3U3EaF-":{"uri":"/melonJS/docs/melonjs/RoundRect.html#right"},"ESiAeKnLi8SPqBHKBvf1b":{"uri":"/melonJS/docs/melonjs/RoundRect.html#top"},"NFvUbSltoIjMQL6XDhu68":{"uri":"/melonJS/docs/melonjs/RoundRect.html#width"},"TcjUEh4B3A9qGrD5U1stp":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerOn"},"iq4YPSL0jv8fMptq4E_mG":{"uri":"/melonJS/docs/melonjs/RoundRect.html#clone"},"LbyI_FBx6_7KNaCd1H9Iq":{"uri":"/melonJS/docs/melonjs/RoundRect.html#constructor"},"eCDlmFtGg0iz7NJujCm3G":{"uri":"/melonJS/docs/melonjs/RoundRect.html#contains"},"chxJ_My53xdkGGEzcONNY":{"uri":"/melonJS/docs/melonjs/RoundRect.html#copy"},"4rNwjEKAIHYeEDBr_eojl":{"uri":"/melonJS/docs/melonjs/RoundRect.html#equals"},"OTlGTBuFwosnoKaDnaSw7":{"uri":"/melonJS/docs/melonjs/RoundRect.html#getBounds"},"awGCEhhdsixoDCFT7NNPI":{"uri":"/melonJS/docs/melonjs/RoundRect.html#getIndices"},"6u_sujrTflfNBk7pmYrZf":{"uri":"/melonJS/docs/melonjs/RoundRect.html#isConvex"},"zUZUyZYTMpGGbilMNClpS":{"uri":"/melonJS/docs/melonjs/RoundRect.html#isFinite"},"VYC9FeoizHKIOColXe6SZ":{"uri":"/melonJS/docs/melonjs/RoundRect.html#overlaps"},"OdeAfZE6p7BrUK6byJZkq":{"uri":"/melonJS/docs/melonjs/RoundRect.html#recalc"},"F24vtGMBxNvmLuAjjHal_":{"uri":"/melonJS/docs/melonjs/RoundRect.html#resize"},"Oou1hivXAzbT3ftnJyTrw":{"uri":"/melonJS/docs/melonjs/RoundRect.html#rotate"},"BpbhQmD8wkmsBfS1nsIf_":{"uri":"/melonJS/docs/melonjs/RoundRect.html#scale"},"U68Dqzchaisyno3YlTxlK":{"uri":"/melonJS/docs/melonjs/RoundRect.html#scaleV"},"hIVr5gT_OS1whx7FwHOHN":{"uri":"/melonJS/docs/melonjs/RoundRect.html#setShape"},"XjIx67UHeJaoa1Bykok1A":{"uri":"/melonJS/docs/melonjs/RoundRect.html#setVertices"},"zv70F0C-aDRZ4fDvOvW-O":{"uri":"/melonJS/docs/melonjs/RoundRect.html#shift"},"n1Hu6XuK8Ckt5MqzxnBZD":{"uri":"/melonJS/docs/melonjs/RoundRect.html#to2d"},"ozW7zb4Hauk0xSi9gowgz":{"uri":"/melonJS/docs/melonjs/RoundRect.html#toIso"},"LXlgJVOR1DiovT2M6kElu":{"uri":"/melonJS/docs/melonjs/RoundRect.html#toPolygon"},"E4MSDUp0ROCLz1a1NI1sT":{"uri":"/melonJS/docs/melonjs/RoundRect.html#transform"},"r1bGC1Ju6_3Odf2RHdZEN":{"uri":"/melonJS/docs/melonjs/RoundRect.html#translate"},"So4aaKR9rUo6-F4VYee-B":{"uri":"/melonJS/docs/melonjs/RoundRect.html#union"},"WGc5N9weP7PcfPWUHZnlx":{"uri":"/melonJS/docs/melonjs/RoundRect.html#contains"},"TwDM75v67YG91xFWSec3K":{"uri":"/melonJS/docs/melonjs/Sprite.html"},"bNtaFFiw-GZTb-KwbQWVb":{"uri":"/melonJS/docs/melonjs/Sprite.html#alpha"},"aLs7zliPDZ1aRvNQbk3PB":{"uri":"/melonJS/docs/melonjs/Sprite.html#alwaysUpdate"},"31RodoRhKLhVl0P-WjRb9":{"uri":"/melonJS/docs/melonjs/Sprite.html#ancestor"},"9j7eIWpTYdQ5wAUcIPk8F":{"uri":"/melonJS/docs/melonjs/Sprite.html#anchorPoint"},"z-MuyL8ObXd8IXH7hFLk1":{"uri":"/melonJS/docs/melonjs/Sprite.html#animationpause"},"-ZznqSn_A0mJ9E20X1VH-":{"uri":"/melonJS/docs/melonjs/Sprite.html#animationspeed"},"xtwD1I2UgrhQcuRmYMUyY":{"uri":"/melonJS/docs/melonjs/Sprite.html#autoTransform"},"JBCiNf8LALNuTBaNGcgWX":{"uri":"/melonJS/docs/melonjs/Sprite.html#blendMode"},"pHfiLgVssMc_IHzmmAWQf":{"uri":"/melonJS/docs/melonjs/Sprite.html#body"},"VqIpT83aljCYTK-Jv3T1a":{"uri":"/melonJS/docs/melonjs/Sprite.html#bottom"},"zzFKEN5nhPygafPGTLD07":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerX"},"mYivGUKc4yHvUY3KEHwDV":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerY"},"efU4UjLoYXJs6-5ZxRkzZ":{"uri":"/melonJS/docs/melonjs/Sprite.html#currentTransform"},"fR7CNwW4hSFiDHeHB0SfO":{"uri":"/melonJS/docs/melonjs/Sprite.html#floating"},"1SQ2DIf9criXk4qVHb2OG":{"uri":"/melonJS/docs/melonjs/Sprite.html#GUID"},"7TB0va7bDO7dWNkS1GEu3":{"uri":"/melonJS/docs/melonjs/Sprite.html#height"},"M8ueyIJoCOnDdddW96_d9":{"uri":"/melonJS/docs/melonjs/Sprite.html#inViewport"},"70002XfpIugElDrIOPXij":{"uri":"/melonJS/docs/melonjs/Sprite.html#isDirty"},"_fFuYBx1MfGka2tjmpGXi":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlippedX"},"rulG3X3vR5vz388tiiVJ-":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlippedY"},"5ovS6Rsr2m_BcbPahphd8":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFloating"},"GPGUQw2tJ65O9z4HA4e-n":{"uri":"/melonJS/docs/melonjs/Sprite.html#isKinematic"},"e38uKVlwxiU6_f2-5iDaY":{"uri":"/melonJS/docs/melonjs/Sprite.html#isPersistent"},"NQDqaQFbtTabp697lrcVr":{"uri":"/melonJS/docs/melonjs/Sprite.html#left"},"tWDNtoAuC2ViTufDtyY45":{"uri":"/melonJS/docs/melonjs/Sprite.html#mask"},"shqYEhqJzD7oaN__ZMzLA":{"uri":"/melonJS/docs/melonjs/Sprite.html#name"},"GSOiISfhqMR0SW-lJPMd0":{"uri":"/melonJS/docs/melonjs/Sprite.html#offset"},"yYpXDiMWrR_q9ZP0xtNuX":{"uri":"/melonJS/docs/melonjs/Sprite.html#onVisibilityChange"},"MmxdkbF27K0rcaLB-waRa":{"uri":"/melonJS/docs/melonjs/Sprite.html#points"},"4hj0GwgVE-v6zuj1FjjG9":{"uri":"/melonJS/docs/melonjs/Sprite.html#pos"},"vhv5ktVHr6Iq4qmzuIDuK":{"uri":"/melonJS/docs/melonjs/Sprite.html#right"},"Jol6rQvJ2xtwGJkaFQ2mJ":{"uri":"/melonJS/docs/melonjs/Sprite.html#source"},"G3g3WYH22BmRdy-WTdDr5":{"uri":"/melonJS/docs/melonjs/Sprite.html#tint"},"FE6DR8eimVZ-kXbNRpZ4x":{"uri":"/melonJS/docs/melonjs/Sprite.html#top"},"9rwLyh4nz93coHu-Kwxx9":{"uri":"/melonJS/docs/melonjs/Sprite.html#updateWhenPaused"},"bZgs4MeGGFw4iGgz7Sok1":{"uri":"/melonJS/docs/melonjs/Sprite.html#width"},"9jXUIVkSK1msKH2Na1o3C":{"uri":"/melonJS/docs/melonjs/Sprite.html#addAnimation"},"aic9VsDdp0ZTmnxRs6s81":{"uri":"/melonJS/docs/melonjs/Sprite.html#angleTo"},"mpGT_cX1lAhpVyf8UZx8m":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerOn"},"7tnXlyFJ51renraf_RulV":{"uri":"/melonJS/docs/melonjs/Sprite.html#clone"},"b8spRqCbzpOc6-YjeLukL":{"uri":"/melonJS/docs/melonjs/Sprite.html#constructor"},"IWmp-lY1aHf3ya7gH11Ye":{"uri":"/melonJS/docs/melonjs/Sprite.html#contains"},"P0L-436bPFNGMzHTrmA87":{"uri":"/melonJS/docs/melonjs/Sprite.html#copy"},"pcSPah1Wg-uEjMBLJr750":{"uri":"/melonJS/docs/melonjs/Sprite.html#distanceTo"},"So6b71Qe68eGJ7D-Ku-pv":{"uri":"/melonJS/docs/melonjs/Sprite.html#equals"},"i86V_dh5V4tDW4QG1fWRM":{"uri":"/melonJS/docs/melonjs/Sprite.html#flicker"},"xlfnN4MqcFPzVaIVn0cOm":{"uri":"/melonJS/docs/melonjs/Sprite.html#flipX"},"53M0ivGp6FjZoMs98XJB1":{"uri":"/melonJS/docs/melonjs/Sprite.html#flipY"},"BY_b91R3YQGW57z9wkIZc":{"uri":"/melonJS/docs/melonjs/Sprite.html#getAbsolutePosition"},"7uV0U5DNsYPZkLvuGc3Jl":{"uri":"/melonJS/docs/melonjs/Sprite.html#getBounds"},"dRhclKTblQ9hLX_9_8I6C":{"uri":"/melonJS/docs/melonjs/Sprite.html#getCurrentAnimationFrame"},"QS_B0lGG5dOev5vAYsxTl":{"uri":"/melonJS/docs/melonjs/Sprite.html#getIndices"},"TNY7EMDgjBdEQ1u9mtSo5":{"uri":"/melonJS/docs/melonjs/Sprite.html#getOpacity"},"4EdEev_D12HStQH-nzhXi":{"uri":"/melonJS/docs/melonjs/Sprite.html#isConvex"},"7a0H7YGSPNqYjXaPrrTG1":{"uri":"/melonJS/docs/melonjs/Sprite.html#isCurrentAnimation"},"UmaFLRk0L-NziDbJMpehC":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFinite"},"btl6wTkLRadfTLp9KcMvx":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlickering"},"CJDpJ9TE8GTHgNaaJxBx1":{"uri":"/melonJS/docs/melonjs/Sprite.html#lookAt"},"RK2w8q8X1K2VaJWXybkP4":{"uri":"/melonJS/docs/melonjs/Sprite.html#onCollision"},"zI67-2LRFmVOLwclcr1GS":{"uri":"/melonJS/docs/melonjs/Sprite.html#onDestroyEvent"},"dXADK5EieyBNOq7ejxf6X":{"uri":"/melonJS/docs/melonjs/Sprite.html#overlaps"},"-1CpnrK77KMKV8Z0F2var":{"uri":"/melonJS/docs/melonjs/Sprite.html#recalc"},"OYwDuAgr4Hg8Taz0OKygY":{"uri":"/melonJS/docs/melonjs/Sprite.html#resize"},"RIVLNeLUYbewZDGpa3s4p":{"uri":"/melonJS/docs/melonjs/Sprite.html#reverseAnimation"},"ylfhKvZ_CP2rEP4RTMf0j":{"uri":"/melonJS/docs/melonjs/Sprite.html#rotate"},"-n_kaKi6DDBmZGF0ghLwj":{"uri":"/melonJS/docs/melonjs/Sprite.html#scale"},"CVHhh93ne5G5d9bGLHHtx":{"uri":"/melonJS/docs/melonjs/Sprite.html#scaleV"},"TVp39arjybKNjtRx2p0lY":{"uri":"/melonJS/docs/melonjs/Sprite.html#setAnimationFrame"},"IAjEUr4sxOKhUtqRe8xy4":{"uri":"/melonJS/docs/melonjs/Sprite.html#setCurrentAnimation"},"MBf1kj2TOzmXpcR_pdN9O":{"uri":"/melonJS/docs/melonjs/Sprite.html#setOpacity"},"Z3SjlKh2FILe09cS5LecY":{"uri":"/melonJS/docs/melonjs/Sprite.html#setRegion"},"md9ZooifRwW83UFtnbpXj":{"uri":"/melonJS/docs/melonjs/Sprite.html#setShape"},"OrZDlVDpfjJR5uKIqSZPi":{"uri":"/melonJS/docs/melonjs/Sprite.html#setVertices"},"Bi-eFETiS0135s1qDDsYZ":{"uri":"/melonJS/docs/melonjs/Sprite.html#shift"},"pXkgj45C6QL3_cNP3PKP5":{"uri":"/melonJS/docs/melonjs/Sprite.html#to2d"},"wrWOqjLQXAYn-Pf6HQjP8":{"uri":"/melonJS/docs/melonjs/Sprite.html#toIso"},"7brHf3M6AJaPK9uMKoUpa":{"uri":"/melonJS/docs/melonjs/Sprite.html#toPolygon"},"OkHt32E7YsfOG-innaVOT":{"uri":"/melonJS/docs/melonjs/Sprite.html#transform"},"93XVeA38tDNiJb3yI07Pa":{"uri":"/melonJS/docs/melonjs/Sprite.html#translate"},"OTKgQU8g1G4R3SL62-MZ6":{"uri":"/melonJS/docs/melonjs/Sprite.html#union"},"jem0OiGFZOYyXgktsugmH":{"uri":"/melonJS/docs/melonjs/Sprite.html#draw"},"Jg18GxDtxv1dv_MlAiUNZ":{"uri":"/melonJS/docs/melonjs/Sprite.html#postDraw"},"4S8U18Sc6A5L7MCRlmcDj":{"uri":"/melonJS/docs/melonjs/Sprite.html#preDraw"},"zxJkYbAtTa2YNbs5T9rod":{"uri":"/melonJS/docs/melonjs/Sprite.html#update"},"eMjOGv92OVHpzkM7gpqck":{"uri":"/melonJS/docs/melonjs/Sprite.html#onAnchorUpdate"},"BeJJDBObojdCPlPbhd7-V":{"uri":"/melonJS/docs/melonjs/Stage.html"},"nK8pHIS4166cD_YiT3yek":{"uri":"/melonJS/docs/melonjs/Stage.html#ambientLight"},"pdWcp1L-Hw8q6oFTL1OD_":{"uri":"/melonJS/docs/melonjs/Stage.html#cameras"},"sYdb7c3Spnrax6ARKjT6m":{"uri":"/melonJS/docs/melonjs/Stage.html#lights"},"7_3zl1nqKODIfyU2kjzem":{"uri":"/melonJS/docs/melonjs/Stage.html#settings"},"zvr1UQ0mXLQETEa_YVyY1":{"uri":"/melonJS/docs/melonjs/Stage.html#constructor"},"f86BXd6W7RZK1PRkC1xSa":{"uri":"/melonJS/docs/melonjs/Stage.html#onDestroyEvent"},"E4c-743BVDmu0xvgb3RCP":{"uri":"/melonJS/docs/melonjs/Stage.html#onResetEvent"},"ovYR-U1fMpnPQOhNMQ9Je":{"uri":"/melonJS/docs/melonjs/Text.html"},"AImPlh7qKWtArI6GaUbLS":{"uri":"/melonJS/docs/melonjs/Text.html#alpha"},"Qc2ikAEetHw50hkaa73by":{"uri":"/melonJS/docs/melonjs/Text.html#alwaysUpdate"},"kE6bkRfGwN8PudP8ohI4c":{"uri":"/melonJS/docs/melonjs/Text.html#ancestor"},"Aeqil4vVltncDGQxnIfPV":{"uri":"/melonJS/docs/melonjs/Text.html#anchorPoint"},"pc6EVI8rE6N9LrxlC50BS":{"uri":"/melonJS/docs/melonjs/Text.html#autoTransform"},"EBAY8n31Kyd9s1HSrcjQO":{"uri":"/melonJS/docs/melonjs/Text.html#blendMode"},"6IPia8aRnLaDvFUo6YJzM":{"uri":"/melonJS/docs/melonjs/Text.html#body"},"IzCLfj4fzsF8G4PH7H3cv":{"uri":"/melonJS/docs/melonjs/Text.html#bottom"},"3BZa52e1devIunzMlX94j":{"uri":"/melonJS/docs/melonjs/Text.html#centerX"},"M8OPyLRkDaLYyLP8Euc-m":{"uri":"/melonJS/docs/melonjs/Text.html#centerY"},"05VXrjSVJy7Om6KMWqT__":{"uri":"/melonJS/docs/melonjs/Text.html#currentTransform"},"yLvWCihj9WEWdwGiH_iS8":{"uri":"/melonJS/docs/melonjs/Text.html#fillStyle"},"Q64xTlpSqmodTt80E_HOa":{"uri":"/melonJS/docs/melonjs/Text.html#floating"},"a44rXOCPPg88nbiyXTCZc":{"uri":"/melonJS/docs/melonjs/Text.html#fontSize"},"ffh-KGcbBi3PJPBPvSWAm":{"uri":"/melonJS/docs/melonjs/Text.html#GUID"},"7AizJqQfI3Pxj6AjD-R0k":{"uri":"/melonJS/docs/melonjs/Text.html#height"},"zLuhMxZP4_4-smQP59n2b":{"uri":"/melonJS/docs/melonjs/Text.html#inViewport"},"6Eqho0z2gJcuCWpW8mEd-":{"uri":"/melonJS/docs/melonjs/Text.html#isDirty"},"UrS-xRp24pwMT28eHzxTg":{"uri":"/melonJS/docs/melonjs/Text.html#isFlippedX"},"euh0gytl30Ii9hJRywYKX":{"uri":"/melonJS/docs/melonjs/Text.html#isFlippedY"},"JLeDiDINucxBLXPgpmBFe":{"uri":"/melonJS/docs/melonjs/Text.html#isFloating"},"CilFu0FSYVzzUSG5JdmwL":{"uri":"/melonJS/docs/melonjs/Text.html#isKinematic"},"VtCJYAq7qdgM_CdQUAF04":{"uri":"/melonJS/docs/melonjs/Text.html#isPersistent"},"WPJ0FeetJLG66TG8xO_TP":{"uri":"/melonJS/docs/melonjs/Text.html#left"},"6PYWt6xs7ZtY539YoHEPG":{"uri":"/melonJS/docs/melonjs/Text.html#lineHeight"},"QcPqC3RsfDIy7CxIyS8Db":{"uri":"/melonJS/docs/melonjs/Text.html#lineWidth"},"Eo4oSSE1hp5T2Kz0Wq9gJ":{"uri":"/melonJS/docs/melonjs/Text.html#mask"},"GKktcSD5tjGpc1BLxi_xI":{"uri":"/melonJS/docs/melonjs/Text.html#name"},"VJp-QW_DVj51D2goQWMHx":{"uri":"/melonJS/docs/melonjs/Text.html#offScreenCanvas"},"sqd_2QAhnCkPFcf59tZCs":{"uri":"/melonJS/docs/melonjs/Text.html#onVisibilityChange"},"1KgcylfXLQDuXLG2rC2aj":{"uri":"/melonJS/docs/melonjs/Text.html#points"},"YgAG55N3JONiP17ztJIPr":{"uri":"/melonJS/docs/melonjs/Text.html#pos"},"U8cUkQz37g2JXk6yjNdGv":{"uri":"/melonJS/docs/melonjs/Text.html#right"},"VUI9jb1VkZYgFGCY6P1Z7":{"uri":"/melonJS/docs/melonjs/Text.html#textAlign"},"ad-1HmP11ZGA36jIS1L1t":{"uri":"/melonJS/docs/melonjs/Text.html#textBaseline"},"4mxysaPox3HQ4OagOjA8V":{"uri":"/melonJS/docs/melonjs/Text.html#tint"},"VkgLdJ-Fn99KHFxaOKhpg":{"uri":"/melonJS/docs/melonjs/Text.html#top"},"DPxW2q6joXw-IkCYT8NCo":{"uri":"/melonJS/docs/melonjs/Text.html#updateWhenPaused"},"hvG_MplvXIFRevVBrR-Qr":{"uri":"/melonJS/docs/melonjs/Text.html#width"},"u3ndq4eqVJe5NyNnpxu-W":{"uri":"/melonJS/docs/melonjs/Text.html#wordWrapWidth"},"MnjQj2peF9ClM8TvpHFY0":{"uri":"/melonJS/docs/melonjs/Text.html#_text"},"O1eDTjR7RFQsC1o7-UMas":{"uri":"/melonJS/docs/melonjs/Text.html#angleTo"},"nauCHJ2DaKGZTy4__iAfQ":{"uri":"/melonJS/docs/melonjs/Text.html#bold"},"y-q6is9PFlvedMN-IJWzt":{"uri":"/melonJS/docs/melonjs/Text.html#centerOn"},"JtkAwqe6TzCL0unEK5tDa":{"uri":"/melonJS/docs/melonjs/Text.html#clone"},"kDJmdPMX2RymXTJTg_MEp":{"uri":"/melonJS/docs/melonjs/Text.html#constructor"},"u-srsozKpQyLJVa1FiwyL":{"uri":"/melonJS/docs/melonjs/Text.html#contains"},"pcQjPD1y-LICdixxQHtrX":{"uri":"/melonJS/docs/melonjs/Text.html#copy"},"PpKoDUZyBKdZ2duDupqVe":{"uri":"/melonJS/docs/melonjs/Text.html#distanceTo"},"WNLl-9Gn1Gd7lYCRdQtaq":{"uri":"/melonJS/docs/melonjs/Text.html#draw"},"-qLxCYQsHuSzFNW3wJplJ":{"uri":"/melonJS/docs/melonjs/Text.html#drawStroke"},"DaT9Kk7E3CyCFA4nqjOQl":{"uri":"/melonJS/docs/melonjs/Text.html#equals"},"L2DSNMLudqCRZsbRwHeq2":{"uri":"/melonJS/docs/melonjs/Text.html#flipX"},"g9Ky-44CjbOKhbK95iU0G":{"uri":"/melonJS/docs/melonjs/Text.html#flipY"},"cSSuTr523vNpwHERuR7Lx":{"uri":"/melonJS/docs/melonjs/Text.html#getAbsolutePosition"},"xlHNT9oCpQ6kZ_fybPA4B":{"uri":"/melonJS/docs/melonjs/Text.html#getBounds"},"BzpkEDFPo8mOa_uJ0MNTN":{"uri":"/melonJS/docs/melonjs/Text.html#getIndices"},"lnMPEIgrJe1P-Oo8DdbwW":{"uri":"/melonJS/docs/melonjs/Text.html#getOpacity"},"BXkCUCvl8JxUGOYKSSO8S":{"uri":"/melonJS/docs/melonjs/Text.html#isConvex"},"AzdBd3S4bX4z54gV2il2d":{"uri":"/melonJS/docs/melonjs/Text.html#isFinite"},"JSfYBUAE88II2IvXOsr03":{"uri":"/melonJS/docs/melonjs/Text.html#italic"},"REtMZvEZUJRJvhvy2L1Lg":{"uri":"/melonJS/docs/melonjs/Text.html#lookAt"},"yU-elks3x9mhlK7OmTjdy":{"uri":"/melonJS/docs/melonjs/Text.html#measureText"},"Smt3Uce47b7WFltQZUL4C":{"uri":"/melonJS/docs/melonjs/Text.html#onCollision"},"0lXgUAtqDAS7j8TM-dWp9":{"uri":"/melonJS/docs/melonjs/Text.html#onDestroyEvent"},"klheayAFpRNW6cRazsemu":{"uri":"/melonJS/docs/melonjs/Text.html#overlaps"},"Mx05bNbVWggQjTVnfkitS":{"uri":"/melonJS/docs/melonjs/Text.html#recalc"},"UilEj2DDNtS2OW8nlzG8g":{"uri":"/melonJS/docs/melonjs/Text.html#resize"},"d2GMhHJkVKTxAdTow5luf":{"uri":"/melonJS/docs/melonjs/Text.html#rotate"},"m7nR6dBgMSSPc0MfOg-16":{"uri":"/melonJS/docs/melonjs/Text.html#scale"},"Qsgg_glb3v61s2QSTIROY":{"uri":"/melonJS/docs/melonjs/Text.html#scaleV"},"mq1L5oajw521IkZhGBN52":{"uri":"/melonJS/docs/melonjs/Text.html#setFont"},"81ArnlRRBFY0vQwqs292g":{"uri":"/melonJS/docs/melonjs/Text.html#setOpacity"},"KjA3WSbRteU9J3xu9wDFO":{"uri":"/melonJS/docs/melonjs/Text.html#setShape"},"oO-otaoGYuG7oSjCXj8i_":{"uri":"/melonJS/docs/melonjs/Text.html#setText"},"OyTa_3cJbdm8QgLfyL5vy":{"uri":"/melonJS/docs/melonjs/Text.html#setVertices"},"m0CKB0X1vfoXmZPer59sX":{"uri":"/melonJS/docs/melonjs/Text.html#shift"},"xW36eZ64d7qPbyUpH8Pjz":{"uri":"/melonJS/docs/melonjs/Text.html#to2d"},"YQ4XpihepYudIZAqRreEn":{"uri":"/melonJS/docs/melonjs/Text.html#toIso"},"v2Rg_VCAzoZg0ndCkQ7To":{"uri":"/melonJS/docs/melonjs/Text.html#toPolygon"},"ZPk5jSEkBEpb70BaMQyPQ":{"uri":"/melonJS/docs/melonjs/Text.html#transform"},"BG91X5RN3OC3ZBhuhIr1T":{"uri":"/melonJS/docs/melonjs/Text.html#translate"},"PnSG0872Nd_ce9mvqoxNt":{"uri":"/melonJS/docs/melonjs/Text.html#union"},"tnIwB-4j2abqarPq3-p8Y":{"uri":"/melonJS/docs/melonjs/Text.html#postDraw"},"8i7dh-fe90y4LyyX_QnwJ":{"uri":"/melonJS/docs/melonjs/Text.html#preDraw"},"zPEEueZJlBnB3heaJS7n8":{"uri":"/melonJS/docs/melonjs/Text.html#update"},"aeu-rVYvE66lU_gkO0Hh8":{"uri":"/melonJS/docs/melonjs/Text.html#onAnchorUpdate"},"kkREGaLtTO6PQ-jwcWm_2":{"uri":"/melonJS/docs/melonjs/TextMetrics.html"},"8EKwVVNl5dKg_5U6uNPyS":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#ancestor"},"lNnqJv-Jg5I-E-Zi30D1F":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#bottom"},"1Fqrxh5I1ITSMxAMjJlNb":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#center"},"2qi9YkVl5mZPOlRfxY22R":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#centerX"},"6XvCQwNF6fzSiCynop60g":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#centerY"},"83oFPv4XVHHRNk5z-3Na-":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#left"},"SE2Pw0HTXHMmAluCNYx2G":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#right"},"xvOp5O07AcsaGNTQ5BuE4":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#top"},"8KDBqYFVD9Fc6m35fjHaG":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#width"},"mljog7D_KbK9bJgMYsKWV":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#x"},"lJ1jjTUmZqG9cVwZmzamr":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#y"},"q98AbdLj2Wx8f8tdXh_97":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#add"},"M3lDbNobTmUef4jbV-67P":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addBounds"},"ibkxsNRIAgotqszryCAzy":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addFrame"},"0VzwHAyET078PczXdN5wB":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addPoint"},"hDjLSKpzeVWVQjrfMYn2u":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#clear"},"ozD-oEFSm-Swv8HCikDX9":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#clone"},"O4fFvoajiO-vipnf5jSXo":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#constructor"},"bbXgMcuBYvkM97iHZ5fvE":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#contains"},"o6lnKV0d-gVzm0_BYNaaG":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#isFinite"},"TvC_5JbnTwLKXvZXuBfVo":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#lineHeight"},"tYgAe4ulj87EcTako06hA":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#lineWidth"},"KllcAYPC-y9WwN3dsMhB9":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#measureText"},"2MI2xbDCBTiw71v7rvw93":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#overlaps"},"W-0REWbHVCko_893zVeis":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#setMinMax"},"-Qj0GqnbnaxHDC9vhHydm":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#shift"},"wIwJUjF1Yg5IwvWOplSv1":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#toPolygon"},"9TFbnn9eZ115MQfcpFUYT":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#translate"},"4JT0uk9Oryy4cyk6OOU4T":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#update"},"qWzOASx8d2jpTSoGhvd-l":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#wordWrap"},"7mVIekUOgKV7k2drHA4bd":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html"},"VZ5SJDphHfHUbGk7gM2D9":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#addRegion"},"w9yUOHFH_8WYv_hVqs58u":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#addUVs"},"FdS5y9Cc2qEZglgkVkLeS":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#constructor"},"QjCgwME761WG3hhzl81ey":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#createAnimationFromName"},"5eWPWftwphANXIl26--RC":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#createSpriteFromName"},"jfrlXMWGcF4ZHEnDtxyhF":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getAtlas"},"gi3PF0bMI1SZcSjeOqjXG":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getFormat"},"Y0Wjp5yOa3w81-9U8sTKr":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getRegion"},"xb0mrCuAKP_nz1SiXDpKJ":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getTexture"},"0QQWcaPbscLqDtlyTqI_7":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getUVs"},"FoZ7iAJR_rn2lOHGUI6kA":{"uri":"/melonJS/docs/melonjs/Tile.html"},"bOsDPfiVOO2PoT0KcNa4m":{"uri":"/melonJS/docs/melonjs/Tile.html#bottom"},"g8x_QhgN6EhgSbg0jOUcw":{"uri":"/melonJS/docs/melonjs/Tile.html#center"},"TQ7RS_3WCP0Ys63mivGdx":{"uri":"/melonJS/docs/melonjs/Tile.html#centerX"},"IKv65b6EDWGVO4adXrn14":{"uri":"/melonJS/docs/melonjs/Tile.html#centerY"},"4GhJZeNPZ4Bw4syrDm-kL":{"uri":"/melonJS/docs/melonjs/Tile.html#flipped"},"JCI86-jBRhxUN1fJElixK":{"uri":"/melonJS/docs/melonjs/Tile.html#flippedAD"},"XE86WZgTnbuNGnvuvnWI2":{"uri":"/melonJS/docs/melonjs/Tile.html#flippedY"},"XMi1sSXbR50H43iCIHDvN":{"uri":"/melonJS/docs/melonjs/Tile.html#flipX"},"uHJMneEDxc8nPuwjlsW75":{"uri":"/melonJS/docs/melonjs/Tile.html#left"},"xDUQfob6AorfLhwX1lXcx":{"uri":"/melonJS/docs/melonjs/Tile.html#right"},"YitBCO7Ij6aJ8EKYd8yrk":{"uri":"/melonJS/docs/melonjs/Tile.html#tileId"},"N8e9HTGSPI8PFIOzAyJZw":{"uri":"/melonJS/docs/melonjs/Tile.html#tileset"},"ymIytIZnp2-5hd1AViYvI":{"uri":"/melonJS/docs/melonjs/Tile.html#top"},"dGhQi6DUgq9CPWgMV48LH":{"uri":"/melonJS/docs/melonjs/Tile.html#width"},"g1_eJ3LHBO0N0mVqfIBSj":{"uri":"/melonJS/docs/melonjs/Tile.html#x"},"IsAfHu_O4vOyPC_mQIqUQ":{"uri":"/melonJS/docs/melonjs/Tile.html#y"},"BN9L5F9l1F3itY25qksGB":{"uri":"/melonJS/docs/melonjs/Tile.html#add"},"-FGkE1OSZOsaxO21BOG2B":{"uri":"/melonJS/docs/melonjs/Tile.html#addBounds"},"EMnEj6tA6xHlvWXLgIXBb":{"uri":"/melonJS/docs/melonjs/Tile.html#addFrame"},"rme5iMSvxEmZXZJRUWBlx":{"uri":"/melonJS/docs/melonjs/Tile.html#addPoint"},"0brDBfZy-qL0i1itnFuyP":{"uri":"/melonJS/docs/melonjs/Tile.html#clear"},"GoGLfJvS-5cOg0hvO8j86":{"uri":"/melonJS/docs/melonjs/Tile.html#clone"},"flRRxkrK904458wxzWmCp":{"uri":"/melonJS/docs/melonjs/Tile.html#constructor"},"EaCltrpD8qelTD8L6-FgB":{"uri":"/melonJS/docs/melonjs/Tile.html#contains"},"YA7bb13And3udcBF3cCra":{"uri":"/melonJS/docs/melonjs/Tile.html#getRenderable"},"NA_sLEppT2-6JMjk4WH-b":{"uri":"/melonJS/docs/melonjs/Tile.html#isFinite"},"1JiT4NRgr3jUT-Pwm3H7U":{"uri":"/melonJS/docs/melonjs/Tile.html#overlaps"},"vQyk5DtAckHu7Xi-fpHR_":{"uri":"/melonJS/docs/melonjs/Tile.html#setMinMax"},"p211W7VnehwZvX3s2xceL":{"uri":"/melonJS/docs/melonjs/Tile.html#shift"},"qteT83qiqkyTg25awWfKR":{"uri":"/melonJS/docs/melonjs/Tile.html#toPolygon"},"KfAQkeOAV5Mq4UpcdOSCR":{"uri":"/melonJS/docs/melonjs/Tile.html#translate"},"cF9BeweZyPyhuzEtYUmjg":{"uri":"/melonJS/docs/melonjs/Tile.html#update"},"TM_O1fNeNaJkojaP-NYcn":{"uri":"/melonJS/docs/melonjs/Timer.html"},"4WAWRm4q-M75g1oRpz8jI":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html"},"Mz3SqOwDP9DvogQ9j3T5F":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#canRender"},"R1ir_RZOhqRj352zGhIJF":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#constructor"},"uvmZyfLb8XnmW-jEaO5V9":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#drawTile"},"3dGacykcgCHkc8t0KiAnh":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#drawTileLayer"},"J17K8FFVIk5veqQvc0I0u":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#getBounds"},"dW2qVTG48uStCpvvNWV12":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#pixelToTileCoords"},"rlGW5TI2wUDLaAk_ylG5t":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#tileToPixelCoords"},"LIYjJu5dm7RHOBKn4sQ1k":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html"},"iivdmTG_Vhw69brxcj-Hn":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#canRender"},"W0O3yyG3D9jo7N8ACd-hh":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#constructor"},"L8PJWibejfOJTV3xHeZdC":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#drawTile"},"Y8FsI8jdzotgLjF5axHAT":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#drawTileLayer"},"FRQzIx2rGXCDGgDqRHUsT":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#getBounds"},"K-azVrNW6VG1cwizvdkD-":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#pixelToTileCoords"},"4ciCvhGMKC7UPbW9ZWfpG":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#tileToPixelCoords"},"BW4AUOVonLri5pUmzpCQN":{"uri":"/melonJS/docs/melonjs/TMXLayer.html"},"lgzpbwTDbhNMz_n6f-D_U":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#alpha"},"o1CTuQiRVsPkUR2ez8tBj":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#alwaysUpdate"},"6UglXK5Nfes25i43WhzLG":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#ancestor"},"SfNc900cNOI7o5lBakB32":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#anchorPoint"},"HzuOGeXyk7kVvPRCR-g9r":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#autoTransform"},"qxut_gctRmkIp9tXH-XVA":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#blendMode"},"oE5Z1GMKnElJfOc2MZe9n":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#body"},"dQ1_N1VvZSrn6kwtZ68yz":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#bottom"},"m7r9xjzDZJa3lzal-R_Ha":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerX"},"tAXY1TFehFUMtRY0w9uoZ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerY"},"bsXNNa2NFOVv5H4ZQC2lJ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#currentTransform"},"85z3qmwIk0FcFShRHpSny":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#floating"},"PugwFC7f6by6Q5hfyXk3y":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#GUID"},"xWoXU38yltFbGhJp8ImMS":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#height"},"Dnn2Rizjgg0FdI4St5hZX":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#inViewport"},"IC6FR6Ss0ewW2yHQ1xclH":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isAnimated"},"AzUVZ1JIky-Nx1on1av4B":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isDirty"},"d4RUXMMF_ljFeEJM60tjY":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFlippedX"},"KwPUaJAODjnOsbxVJ9ims":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFlippedY"},"Auu6ae6ajpqmxko4qXzCj":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFloating"},"a41NHB0MqGew5meLIrlwQ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isKinematic"},"AO4PTVLXLlxBPDwJ4z25T":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isPersistent"},"Dv8khDeaoQMAkUggIG5q1":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#left"},"lX7w8tyvCs8Ug0rGEKZgu":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#mask"},"PbWkYtQcoTB2OXgRuzXns":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#name"},"vUUGgJNhWOuXc9MWG_58Y":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onVisibilityChange"},"MdMwbWgsuhwypWtdW5dYL":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#points"},"o1QDmVvaQlxh-jJU90wrW":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#pos"},"IorA6qOgY70ZoU2JSM1VV":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#renderorder"},"c_nXRCQ8XRcc67fbpouXV":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#right"},"ue3O5rlcU5Mox4w82aT5c":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#tilesets"},"UKY2rSvhvuD0vOnePLXBD":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#tint"},"Nc1opAvv2h8HivdMGs_qX":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#top"},"goLRS09N-MCnFacSzg_-j":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#updateWhenPaused"},"Xl9g19T-_dYA9NtIw3bny":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#width"},"tIxnUuoMJqTumgytgQa-e":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#angleTo"},"c4vHzFiY066U-QatHql-k":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#cellAt"},"4SerZkAfC6qcS40eixNvT":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerOn"},"-XtTaQvXpUURyJnbJVRXV":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#clearTile"},"_O6NZMU0C1idONkLzk4S3":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#clone"},"Z9OIRbzGrurbTbOezinNa":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#constructor"},"d0qo-4F7d2DwiQIexG3qM":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#contains"},"VojoSP0Ii4dxAwd1B-f1Y":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#copy"},"Z5-Fymo5UB4iL-4YKMlGb":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#distanceTo"},"NRY0VL3AvhcHhqn79IJ6P":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#equals"},"NGvAdhQSZ0xJqQ_I81uST":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#flipX"},"WxpliUPwZ46zEwvBrO5xa":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#flipY"},"fcP9PufKGYA74Y_DLERIY":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getAbsolutePosition"},"vwdwU21WmwoNjj0XKO5tg":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getBounds"},"F6W1Ym2RNvcI3EsgcbK7l":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getIndices"},"ddr0p23NkN8lEfqVWS6P7":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getOpacity"},"dbHos3AOjOrDgjE7jlhqy":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getRenderer"},"OTs9eAfs4Dr8c1m0IqVLk":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTile"},"QtY9oqM8ywjzZCBuiiWJw":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTile"},"QPZfsR3UF9mC6g5zmVQ4t":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTileId"},"7xbPoHZ794Ph4PYTwLE2y":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isConvex"},"4zlR33NhKLc-kCJgLD2NU":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFinite"},"otePAs7mxw1_RKz7NpdT3":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#lookAt"},"azpcuOS66VVdDuLt14HTQ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onCollision"},"5vmvXxH4tovr89Wh5j35O":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onDestroyEvent"},"2UYJ4KWeW295HNn6rMyJo":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#overlaps"},"KLKXyozTiJYZUfbl3IGtr":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#recalc"},"-bG0mB1FPQ0WNA7mgSj1_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#resize"},"65MzQudwyn0lGSvjoS_Db":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#rotate"},"6FSKuIGVptdpnVk48iqg_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#scale"},"8_zmgwJab-25eVG_2eW2a":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#scaleV"},"3jihXcIV_n8xu09xenOpW":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setOpacity"},"XViKn9_x5oCzcyRaoFodp":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setRenderer"},"c-AaWjaX_Q4aRhB8PAOwd":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setShape"},"ORAgFOFyYz3OzzVp5zog9":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setTile"},"hgT7JF-KXFv6pNYsrECW4":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setVertices"},"BT0rVLlp0UxTHDiw58wCu":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#shift"},"V8BAnJCps0Itt1fStam2g":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#to2d"},"bd7psBfXw8fX2skuLKgy5":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#toIso"},"FbVffS2vLqn4raCD6GpiY":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#toPolygon"},"PhhPyBxe-WoqPdGrQm5Pg":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#transform"},"-K6rB0FxfLifUOnQKQ9g_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#translate"},"f4kOY6NxXkA-jwBrvD7FB":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#union"},"mAhPr0McrIGGBUo8vagEo":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#draw"},"l_i1a18R1CNnh69q7cbgI":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#postDraw"},"r8Vtqv0t5RP74aLnWSjIz":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#preDraw"},"soJSu6BN963NqiZ5rNDgi":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#update"},"WF7RfsLeLNQrf-yayX5Jf":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onAnchorUpdate"},"JHhPr2d65fICfLMOjz0k6":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html"},"bFzLGG_p1PQwedlWzTxyd":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#canRender"},"SDHQ7igCujVTf2A2x4W4j":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#constructor"},"lHdg00WFxfn-pRF93udBo":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#drawTile"},"L8j5GDziA6aFWY5W8WooZ":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#drawTileLayer"},"gNYTCaTmHDp2A31c9zxzk":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#getBounds"},"qrpx1-P5IHeuzt0qIvIGj":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#getBounds"},"GIi5I40ZLQzZS2739fe0R":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#pixelToTileCoords"},"D9qaE6DuGPrUoBnJCmgyc":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#tileToPixelCoords"},"tLTtIO3oJoHBSP8ye8r5e":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html"},"5OFdJxNTMdz1j0vTSNmp0":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#canRender"},"kTToJKgN2fi2Ma-fC8OmL":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#constructor"},"aueSW1lEPccBcLqWngVgc":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#drawTile"},"I7VwmZaEaS0-8Ldsn_feg":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#drawTileLayer"},"MqHilFm3RuuR6haeVQ4G5":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#getBounds"},"-MF3AFM_tQwjy5lalCHLu":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#getBounds"},"C3ZgCUZA1yflDxW3fI5tv":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#pixelToTileCoords"},"7plPm3ubvYEInKm4zhE1E":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#tileToPixelCoords"},"MiTaWGeFbGCU3-Yrgobxj":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html"},"D_ar_yTthtzV9wJrIlyGm":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#canRender"},"MdGwMbNBYiO8Cf_PmSCIv":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#constructor"},"Bl3O6fPs1G3eL9it0iMPJ":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#drawTile"},"1GFF2UdqT6bb8qYQBNyjN":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#drawTileLayer"},"AR9Qo3feOenoRamsAuJG7":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#getBounds"},"MPirfi7XXfrmpQsNkmvLn":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#pixelToTileCoords"},"dExsbXu-22kN4ZED1kskW":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#tileToPixelCoords"},"d8N6siyzH4TjASrc_5vbp":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html"},"eJLBwR_kIUB-Ml8yXYHev":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#cols"},"5mDl2Jzn3aEtEI0GllJSa":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#infinite"},"GtR3F9pVQqUmQV3aiQkNa":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#name"},"mMCP34kcHnEOmnm3_9Bfx":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#orientation"},"CzvpGZaWaqL88ied_glG2":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#renderorder"},"Crsh10cGcfkihmYWhl-lQ":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#rows"},"pBWZ1HO3VDLBLvZnj_eXM":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tiledversion"},"4Sw9nb6fKQaX55h3zgC4X":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tileheight"},"XGAozFbT2eO_f4VKGYnfi":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tilewidth"},"cWFQTpwVaYTbt1QI9A3_6":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#version"},"U8v2K1wWB63YOt-EGZ4Jl":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#addTo"},"QExTFUT1Ay35JbeFuHPxJ":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#constructor"},"yM8uB1bQ3Ef1luN3reemj":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#destroy"},"6F3h1Y7uzJ75TJ9ac-jFQ":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getLayers"},"rEsabKT3oQYrRK_24LW3i":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getObjects"},"PBiXm4w8MX-eOjnDR8X5K":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getRenderer"},"o1ie7EOwqSKhBoD6ONFQp":{"uri":"/melonJS/docs/melonjs/TMXTileset.html"},"lV0n338_QyNvIPOrpnnxl":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#isAnimated"},"1YpwCtkhP2PH5ofdWn5kF":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#isCollection"},"1_KzieeI1NleXdIOcGNOL":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#_lastUpdate"},"XG1j6r8HL_8DrquvEYd4X":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#animations"},"tZf9KO5Ld_xYDp-Myk06R":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#constructor"},"En1UNd9_IoeiakYUL5NRz":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#contains"},"vmJrLuHqbel-UB30BDpMh":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getTileImage"},"yXc4t2xqMMdsq8DVnavf8":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getTileProperties"},"ApQpfO90xY6k9QcKo60g3":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getViewTileId"},"LzZGoc6JNH4yk2WrbOhyx":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html"},"wS0azo8YGaE_pUd4hK0nr":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#add"},"f6dHgSmm8FgLxD7VD5yON":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#getTilesetByGid"},"8ebcUTr6CBJ9wgcc1yKgs":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#getTilesetByIndex"},"OUhqqyqPCH4rPwgC7zw3t":{"uri":"/melonJS/docs/melonjs/Trigger.html"},"PcuLlwv51-Qn2ocUtXE2x":{"uri":"/melonJS/docs/melonjs/Trigger.html#alpha"},"mJioSqjn7FIYAzWFtG4Nd":{"uri":"/melonJS/docs/melonjs/Trigger.html#alwaysUpdate"},"Ik7l_M1wXd7ZWEs0rFUt_":{"uri":"/melonJS/docs/melonjs/Trigger.html#ancestor"},"rUK2O9BthKsAtoLjzmBlQ":{"uri":"/melonJS/docs/melonjs/Trigger.html#anchorPoint"},"bqJykyOzCjzaCbVJM2jGh":{"uri":"/melonJS/docs/melonjs/Trigger.html#autoTransform"},"iLTJq__hdhuCNg1TUts0F":{"uri":"/melonJS/docs/melonjs/Trigger.html#blendMode"},"A0i-v2Iy1wwDvEViDt3A-":{"uri":"/melonJS/docs/melonjs/Trigger.html#body"},"duLOdmC38TZ_5qn_MLDwK":{"uri":"/melonJS/docs/melonjs/Trigger.html#bottom"},"wvsoW1FHYlDPz2JhJW-iK":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerX"},"RqwaagNSffaMpJmYfzmmq":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerY"},"1EINKJ2fzTvuQY3r58a6_":{"uri":"/melonJS/docs/melonjs/Trigger.html#currentTransform"},"qYUs-FA-O8bbSNJ4QcJj0":{"uri":"/melonJS/docs/melonjs/Trigger.html#floating"},"a_VQ95CKUgP3HZyikYBIW":{"uri":"/melonJS/docs/melonjs/Trigger.html#GUID"},"3bwCunD5PZYTYEuTkfBu-":{"uri":"/melonJS/docs/melonjs/Trigger.html#height"},"IiaDbz3B34Ood4UZXX7PT":{"uri":"/melonJS/docs/melonjs/Trigger.html#inViewport"},"onBGhdWMJI5uTzhZxYOMG":{"uri":"/melonJS/docs/melonjs/Trigger.html#isDirty"},"wP48qkduWjxxuMfExxwl_":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFlippedX"},"2NiBzd_q6oRohuI7HwCUB":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFlippedY"},"5m2Bo8eMHFMi3vZMlUMEk":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFloating"},"Qiou5UOQqEX6z6KKCz_qh":{"uri":"/melonJS/docs/melonjs/Trigger.html#isKinematic"},"xE9eWKAt10_uHvBODA6Ru":{"uri":"/melonJS/docs/melonjs/Trigger.html#isPersistent"},"6Oi6CIIDvcmcV6P7zPGX4":{"uri":"/melonJS/docs/melonjs/Trigger.html#left"},"J56f7ZIihdIwxvB9aVjeZ":{"uri":"/melonJS/docs/melonjs/Trigger.html#mask"},"D1NfEmv55sJue7PPstTci":{"uri":"/melonJS/docs/melonjs/Trigger.html#name"},"o4Jff5jq44uE45TSP56_W":{"uri":"/melonJS/docs/melonjs/Trigger.html#onVisibilityChange"},"Pc-WcKWiYau16hYQ8mnfC":{"uri":"/melonJS/docs/melonjs/Trigger.html#points"},"E5DHeXMWNuTnW4vRab-kw":{"uri":"/melonJS/docs/melonjs/Trigger.html#pos"},"GRxzr-8WwjCnkZ6OwrFeP":{"uri":"/melonJS/docs/melonjs/Trigger.html#right"},"mOB8mO9J2OvLQhwxuFEoB":{"uri":"/melonJS/docs/melonjs/Trigger.html#tint"},"JmDJoegarGAalq2Mvvt4w":{"uri":"/melonJS/docs/melonjs/Trigger.html#top"},"UvVw2xiKWIl5NJcyrLsWm":{"uri":"/melonJS/docs/melonjs/Trigger.html#updateWhenPaused"},"4sZcbql4EPu9olxLyNwJZ":{"uri":"/melonJS/docs/melonjs/Trigger.html#width"},"XkZhuFHhJQ8lv7A1_NSHn":{"uri":"/melonJS/docs/melonjs/Trigger.html#angleTo"},"cTlDxVZxPxSB9TgUrC8jf":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerOn"},"sZAPjJV5k8ba7avyVuetO":{"uri":"/melonJS/docs/melonjs/Trigger.html#clone"},"KmVPgs9AJgSs4fyDKPMpp":{"uri":"/melonJS/docs/melonjs/Trigger.html#constructor"},"77XFtPOlmhLGqiXO-Poy0":{"uri":"/melonJS/docs/melonjs/Trigger.html#contains"},"2BGzt9NsADmZfOcU-Xhqq":{"uri":"/melonJS/docs/melonjs/Trigger.html#copy"},"FGZzugiGSdOOvqZ_BF6wm":{"uri":"/melonJS/docs/melonjs/Trigger.html#distanceTo"},"poGrvrHr7ajKM7FJZOEul":{"uri":"/melonJS/docs/melonjs/Trigger.html#equals"},"BPuZOlawAOuKk1ojjb-Sh":{"uri":"/melonJS/docs/melonjs/Trigger.html#flipX"},"szbY-Cc6klmcfN0fc9TFO":{"uri":"/melonJS/docs/melonjs/Trigger.html#flipY"},"aEpD2ICzgKkx9By_9sOl7":{"uri":"/melonJS/docs/melonjs/Trigger.html#getAbsolutePosition"},"t4cBkX7QJS4DCtIZs5I6x":{"uri":"/melonJS/docs/melonjs/Trigger.html#getBounds"},"Vf0y1A1u2-ekQhqDli3YT":{"uri":"/melonJS/docs/melonjs/Trigger.html#getIndices"},"9fHz_ADLBHAV85wkhfTfe":{"uri":"/melonJS/docs/melonjs/Trigger.html#getOpacity"},"5_cwa7RY6Y8XVtClYdGgf":{"uri":"/melonJS/docs/melonjs/Trigger.html#isConvex"},"KV9wx-seb3_D3sEyF2Ugz":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFinite"},"Gz61s2-o4vjm793alQQzO":{"uri":"/melonJS/docs/melonjs/Trigger.html#lookAt"},"JlO5s_AFLbL54QTP8GBHj":{"uri":"/melonJS/docs/melonjs/Trigger.html#onCollision"},"pym0P6Fj1Y2dMHvW_O3ef":{"uri":"/melonJS/docs/melonjs/Trigger.html#onDestroyEvent"},"RKlDQWF9lLq_QaYpCKw-x":{"uri":"/melonJS/docs/melonjs/Trigger.html#overlaps"},"5PTRqDr9LuZIgkshngVhi":{"uri":"/melonJS/docs/melonjs/Trigger.html#recalc"},"139z52wFLSAAJ-BdhBV_y":{"uri":"/melonJS/docs/melonjs/Trigger.html#resize"},"kdHkgIkSP194XFqpInz0z":{"uri":"/melonJS/docs/melonjs/Trigger.html#rotate"},"_NL31JoFnaNRVRHVuelLU":{"uri":"/melonJS/docs/melonjs/Trigger.html#scale"},"t49tyn_cIwYSGUlw6pk1t":{"uri":"/melonJS/docs/melonjs/Trigger.html#scaleV"},"zazOXqU9roMV_iPF_Q65t":{"uri":"/melonJS/docs/melonjs/Trigger.html#setOpacity"},"5MuoO2OxFwxdxCu2NQjbg":{"uri":"/melonJS/docs/melonjs/Trigger.html#setShape"},"0v2DHy0P0G_xntvYQVpNi":{"uri":"/melonJS/docs/melonjs/Trigger.html#setVertices"},"efLZA3zI7_OA1cLdHYOC3":{"uri":"/melonJS/docs/melonjs/Trigger.html#shift"},"MtrVyl48BUe1GFzwiSzcC":{"uri":"/melonJS/docs/melonjs/Trigger.html#to2d"},"W2btgnsCQu0vo9bZ2ZEtE":{"uri":"/melonJS/docs/melonjs/Trigger.html#toIso"},"p2eMbE8GQyAmScR0sAxei":{"uri":"/melonJS/docs/melonjs/Trigger.html#toPolygon"},"8LEPHhg4a-aKjLHB_08MH":{"uri":"/melonJS/docs/melonjs/Trigger.html#transform"},"8t-oM0j-ygKqlC6-bh300":{"uri":"/melonJS/docs/melonjs/Trigger.html#translate"},"mgdqN4xLLorZm7cVO_LrU":{"uri":"/melonJS/docs/melonjs/Trigger.html#union"},"e3PTs_YF855NYf76hmzvq":{"uri":"/melonJS/docs/melonjs/Trigger.html#draw"},"tzojv8awSJYhxZ0CjidJl":{"uri":"/melonJS/docs/melonjs/Trigger.html#postDraw"},"NWISQ-EH3HLc3z_HF7ewx":{"uri":"/melonJS/docs/melonjs/Trigger.html#preDraw"},"-6y6EQJshllD6jwgozHQY":{"uri":"/melonJS/docs/melonjs/Trigger.html#triggerEvent"},"TZtP-K0_cK86ts1Kyzp-X":{"uri":"/melonJS/docs/melonjs/Trigger.html#update"},"qpzAR7Etz_zcR8-6k2o6Q":{"uri":"/melonJS/docs/melonjs/Trigger.html#onAnchorUpdate"},"K5JZ7WffMBdh6yuV62ny4":{"uri":"/melonJS/docs/melonjs/Tween.html"},"oYi8h2Rau0cxhSKME7-p4":{"uri":"/melonJS/docs/melonjs/Tween/Easing.html"},"zTuu7BZenzshF3zNTsgX-":{"uri":"/melonJS/docs/melonjs/Tween/Interpolation.html"},"SIpT8RruDoZ0pfV_4GYZH":{"uri":"/melonJS/docs/melonjs/Tween.html#chain"},"saAPqtYsUPkw4SytOGPj4":{"uri":"/melonJS/docs/melonjs/Tween.html#constructor"},"BOm_y1xGGvIVVWSRpvzba":{"uri":"/melonJS/docs/melonjs/Tween.html#delay"},"5Ot6L0G_UOrlO1m_EFjqm":{"uri":"/melonJS/docs/melonjs/Tween.html#easing"},"SM-9lY28YmItfzG8fMtgr":{"uri":"/melonJS/docs/melonjs/Tween.html#interpolation"},"fITx9iWscHhEOAqBkvh73":{"uri":"/melonJS/docs/melonjs/Tween.html#onComplete"},"sYFIrPgyp-HRes-6bgVG3":{"uri":"/melonJS/docs/melonjs/Tween.html#onStart"},"yNZWQGvhXpqHBRPnQDHOJ":{"uri":"/melonJS/docs/melonjs/Tween.html#onUpdate"},"tJNvFp5o7ayc3uXC3Utrx":{"uri":"/melonJS/docs/melonjs/Tween.html#repeat"},"k8WvXTnwp481IGEns7ISY":{"uri":"/melonJS/docs/melonjs/Tween.html#start"},"hlxjj6TSaDKXw2v3KGD2f":{"uri":"/melonJS/docs/melonjs/Tween.html#stop"},"4r7oMZozLN2kZKdVc79w7":{"uri":"/melonJS/docs/melonjs/Tween.html#to"},"4p17xUbU8v6RC_BO-xYil":{"uri":"/melonJS/docs/melonjs/Tween.html#yoyo"},"PVR8Ety4PNcdsXcS7iz0F":{"uri":"/melonJS/docs/melonjs/Vector2d.html"},"JMp0dJ9LJwfgjJ7RLGolY":{"uri":"/melonJS/docs/melonjs/Vector2d.html#x"},"gda5XwoDIcuVDV3lFMYOD":{"uri":"/melonJS/docs/melonjs/Vector2d.html#y"},"_y39yW29FdEwU-8OHQngs":{"uri":"/melonJS/docs/melonjs/Vector2d.html#abs"},"gf9o5WXXgowlT0ItmLSGL":{"uri":"/melonJS/docs/melonjs/Vector2d.html#add"},"A6IcS3eUJ_uDuJWW42eni":{"uri":"/melonJS/docs/melonjs/Vector2d.html#angle"},"siaci5E86bMAD9_vQj7p7":{"uri":"/melonJS/docs/melonjs/Vector2d.html#ceil"},"3H4rZ64LZpLsUvXcZi7Vm":{"uri":"/melonJS/docs/melonjs/Vector2d.html#ceilSelf"},"m8BQ6E7jG0UNADiegAWcM":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clamp"},"cNoAPE0x8o9kaI_52iY1h":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clampSelf"},"btbSE7dhJ79hwAsKgea8c":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clone"},"GMrVYI-YsKwTOENesKKQf":{"uri":"/melonJS/docs/melonjs/Vector2d.html#constructor"},"gsOIfCVIbFB2jXD60Y_NX":{"uri":"/melonJS/docs/melonjs/Vector2d.html#copy"},"tAus1gB6C0fFuhNG76l2w":{"uri":"/melonJS/docs/melonjs/Vector2d.html#cross"},"gPUtt73aW999OOWm4fvMN":{"uri":"/melonJS/docs/melonjs/Vector2d.html#distance"},"8KfCAe9ii5HM-0qcv5y6y":{"uri":"/melonJS/docs/melonjs/Vector2d.html#div"},"CYk9rGQMoTJG6Hi2jUEtr":{"uri":"/melonJS/docs/melonjs/Vector2d.html#dot"},"_yO9_xki6ir_zslFSmk9w":{"uri":"/melonJS/docs/melonjs/Vector2d.html#equals"},"WclJLhBvd7f5qAhmHhdzU":{"uri":"/melonJS/docs/melonjs/Vector2d.html#floor"},"K70I3-SztRzTO08GOaJ-X":{"uri":"/melonJS/docs/melonjs/Vector2d.html#floorSelf"},"yWCc-wzEf_jHshZzphP_b":{"uri":"/melonJS/docs/melonjs/Vector2d.html#length"},"W0L2KI8f6ZDjZd7KlcGQC":{"uri":"/melonJS/docs/melonjs/Vector2d.html#length2"},"vVAxhHdssJWBvh-nygbzy":{"uri":"/melonJS/docs/melonjs/Vector2d.html#lerp"},"aWOtPBKf99sStxuIz1Lit":{"uri":"/melonJS/docs/melonjs/Vector2d.html#maxV"},"2AbzHoX0UcMHCL4DKzcjC":{"uri":"/melonJS/docs/melonjs/Vector2d.html#minV"},"Y_z9tJebzc3ZL8TZlaOp_":{"uri":"/melonJS/docs/melonjs/Vector2d.html#negate"},"5l0katei1-4Tk9WSA3WmA":{"uri":"/melonJS/docs/melonjs/Vector2d.html#negateSelf"},"WTnHvFXj2TXRiANIZvfeN":{"uri":"/melonJS/docs/melonjs/Vector2d.html#normalize"},"ri4sucH4yWYnOmanHn6DB":{"uri":"/melonJS/docs/melonjs/Vector2d.html#perp"},"WX9HvedKMUk6p-sb6ZYFH":{"uri":"/melonJS/docs/melonjs/Vector2d.html#project"},"sWjJt4QAfSVg1DSNSNcw3":{"uri":"/melonJS/docs/melonjs/Vector2d.html#projectN"},"7AsFf3xPFCFj-IYTLGHFw":{"uri":"/melonJS/docs/melonjs/Vector2d.html#rotate"},"0qK5zmAd65DJ-irONDjMj":{"uri":"/melonJS/docs/melonjs/Vector2d.html#scale"},"_c0ddYqJKLW1hHAN--BaC":{"uri":"/melonJS/docs/melonjs/Vector2d.html#scaleV"},"KXnkKD3fT3PlFyKwyny8u":{"uri":"/melonJS/docs/melonjs/Vector2d.html#set"},"evOqJbem2BfzqkwowjZqk":{"uri":"/melonJS/docs/melonjs/Vector2d.html#setV"},"qOraKRAaUlrlYBqucbq1_":{"uri":"/melonJS/docs/melonjs/Vector2d.html#setZero"},"15oscoo5rQGs2qociBE8-":{"uri":"/melonJS/docs/melonjs/Vector2d.html#sub"},"N6Y6AGZ4YEK-q55eDtqQX":{"uri":"/melonJS/docs/melonjs/Vector2d.html#to2d"},"5sn57qQ41YE5lqqlmNDcg":{"uri":"/melonJS/docs/melonjs/Vector2d.html#toIso"},"LUTqblBLa4QvMhOjh6FCQ":{"uri":"/melonJS/docs/melonjs/Vector2d.html#toString"},"XUdLH-6H1mMDKasgD1pbL":{"uri":"/melonJS/docs/melonjs/Vector2d.html#equals"},"1HKiAgEiPGCWQsfan6lrL":{"uri":"/melonJS/docs/melonjs/Vector3d.html"},"ISefeKGclWYmyqmjxLsEy":{"uri":"/melonJS/docs/melonjs/Vector3d.html#x"},"KHHDmH7OZs4qt8rporYkr":{"uri":"/melonJS/docs/melonjs/Vector3d.html#y"},"g0f7HW4pBsqEUllwLoutn":{"uri":"/melonJS/docs/melonjs/Vector3d.html#z"},"yJXcfNpWiCafSo8BJguKX":{"uri":"/melonJS/docs/melonjs/Vector3d.html#abs"},"SDvb06-cPj0FeBdsbrMJH":{"uri":"/melonJS/docs/melonjs/Vector3d.html#add"},"-adeokCCDUV9HZZG-61M1":{"uri":"/melonJS/docs/melonjs/Vector3d.html#angle"},"HR6pHd00XDnJXLVChqVqM":{"uri":"/melonJS/docs/melonjs/Vector3d.html#ceil"},"4HS3LpmhOICR7rsUPi8Ag":{"uri":"/melonJS/docs/melonjs/Vector3d.html#ceilSelf"},"SCZ9DOvAeOrW3ShsRlirF":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clamp"},"vdoR6vjQuqqjwVmQ9_Yzn":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clampSelf"},"hXMRrt5Yvbn2zOxRK0qUU":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clone"},"dM4ULaDIM7EPF8_FtyBFC":{"uri":"/melonJS/docs/melonjs/Vector3d.html#constructor"},"UrzutDTVTb39biLB3ilFM":{"uri":"/melonJS/docs/melonjs/Vector3d.html#copy"},"CIxSjwkGur7bgwN0XVQBq":{"uri":"/melonJS/docs/melonjs/Vector3d.html#cross"},"4HsSJxgoL_cPPc9wmiQIB":{"uri":"/melonJS/docs/melonjs/Vector3d.html#distance"},"-WbXPZdlpR3rpNh29gqu8":{"uri":"/melonJS/docs/melonjs/Vector3d.html#div"},"wHdJBg2DReebPhQ082OPg":{"uri":"/melonJS/docs/melonjs/Vector3d.html#dot"},"Iocxvf-C1ya0e3B9WU0RO":{"uri":"/melonJS/docs/melonjs/Vector3d.html#equals"},"z4WBbu8ME_R-RgvFJd7aS":{"uri":"/melonJS/docs/melonjs/Vector3d.html#floor"},"YoOwUolniFQhQ3t2xzDnV":{"uri":"/melonJS/docs/melonjs/Vector3d.html#floorSelf"},"P3ugxB0fdWIzVtQrGiC_T":{"uri":"/melonJS/docs/melonjs/Vector3d.html#length"},"1jY8jzJkVM5uVm65i-sgH":{"uri":"/melonJS/docs/melonjs/Vector3d.html#length2"},"e5Po2f2cE0WPdjEuqr--r":{"uri":"/melonJS/docs/melonjs/Vector3d.html#lerp"},"Cwg_FB4HmQBib7ctff8VG":{"uri":"/melonJS/docs/melonjs/Vector3d.html#maxV"},"gO-dj_mQjjhp4oFkyDqJi":{"uri":"/melonJS/docs/melonjs/Vector3d.html#minV"},"fzy4F1LTosvtmPwZYhCSs":{"uri":"/melonJS/docs/melonjs/Vector3d.html#negate"},"eSS9RY-KBrkJLv-65xraF":{"uri":"/melonJS/docs/melonjs/Vector3d.html#negateSelf"},"fdXLVvhx5tnqb9Z6IhAF0":{"uri":"/melonJS/docs/melonjs/Vector3d.html#normalize"},"bRrywqoCRnxtp2gmwZSOL":{"uri":"/melonJS/docs/melonjs/Vector3d.html#perp"},"GW-RpMAdt0gF89jP-rek9":{"uri":"/melonJS/docs/melonjs/Vector3d.html#project"},"TFPKqW1P_efxzspY4xv4E":{"uri":"/melonJS/docs/melonjs/Vector3d.html#projectN"},"31n0yNrHN1S5m44ryN8Mc":{"uri":"/melonJS/docs/melonjs/Vector3d.html#rotate"},"4j3jRZFZFHaX-Bjs5aEWe":{"uri":"/melonJS/docs/melonjs/Vector3d.html#scale"},"z5W3w0bJRbJK_F3syGD8P":{"uri":"/melonJS/docs/melonjs/Vector3d.html#scaleV"},"1SMnzcBTM1iu93lfwjQ2P":{"uri":"/melonJS/docs/melonjs/Vector3d.html#set"},"ttXlbhe028V2scmrDKogl":{"uri":"/melonJS/docs/melonjs/Vector3d.html#setV"},"zDzeZ8sMc-JqhjWhtmw3h":{"uri":"/melonJS/docs/melonjs/Vector3d.html#setZero"},"x1uuWijUZDLmP63qlhOnB":{"uri":"/melonJS/docs/melonjs/Vector3d.html#sub"},"T8JxQnCg6lc74E4g11_Gu":{"uri":"/melonJS/docs/melonjs/Vector3d.html#to2d"},"Yd8wXvEXvP8ZMme8lR0Yc":{"uri":"/melonJS/docs/melonjs/Vector3d.html#toIso"},"X-zCMQxi-Qzn0cwhhG3ML":{"uri":"/melonJS/docs/melonjs/Vector3d.html#toString"},"BX9KjWxVrjSjByrkPxt09":{"uri":"/melonJS/docs/melonjs/Vector3d.html#equals"},"hns92b7kFbEiRen2K-vCq":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html"},"wCNjPj3MGbkA8ri2UINwG":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#activeShader"},"lsTijz-D8zDFDBqsiO50o":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#attributes"},"sSGZH_dZKgHsijVSLyWdB":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#mode"},"-6ZiI6kt8TbBIiiNeIzhc":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#vertexByteSize"},"zvm4FQt0cA5W3xTPyNwMY":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#vertexSize"},"qyNRargofmeWaRKdObqdi":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#addAttribute"},"F6DSaeO3q1rGQ7S5gUTGP":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#addQuad"},"IzD1-re41c9iMWo2Jenqc":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"OxKnWfEkJUpJHPAuTRXp4":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"WgRnElDQx-NhP5DYi1G9v":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"UTdOcR11T_99bnJ_P5l3J":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#clear"},"H-mviI1gbk6G1hmBH_KZl":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#clearColor"},"nBmMDLx9WhIXFvNAuCvEm":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#constructor"},"oxlKaTr5_EfEY9f3sf7GO":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#createTexture2D"},"FL8Oj4_qu6zqR6N2AtEH_":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#drawVertices"},"QkiMfoyXdkooIQKm75B3m":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#flush"},"doc0rMAHjO83dicuZBGRk":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#setProjection"},"zsQ4WoYFHKjM-wEvhvgap":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#setViewport"},"jgojNi3PwGMeuxrqou4ek":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#unbindTexture2D"},"a3b6Qlly3MkfrBFIyoKpY":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#useShader"},"TVnC9Y9cxNdYcVBy0WbWH":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html"},"n_QmbB1e4b2YXgQ66LNLw":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#compositors"},"dm4q2HjBNsY52y40uH3FT":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#currentCompositor"},"ZlZYYvI0Z0AZcn1AGCYeZ":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#currentTransform"},"tk50gqGcnTXMZc8wOr4gr":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#gl"},"zGHwDBI7jD7dU78QNuI2h":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#GPURenderer"},"fFPTaTuomQ-wzCoLrxsR1":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#GPUVendor"},"q5JqiQFPIv8dw6Qd5Zewm":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#isContextValid"},"XKMwz514GSPtbM3Ccfr0h":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#maxTextures"},"QRVfLWWej_6_Y46sL0iDe":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#path2D"},"ipO4wQUvu2jRCloWVnweG":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#settings"},"_U9SPU2dJ2dl5KpL4MbxI":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#WebGLVersion"},"1MBTENlAQfIc5xLGIh4h0":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clear"},"uBDmu8gJz6JE8TZxtwCHt":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearColor"},"FN4o7pdxQXWosci_U_yZp":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearMask"},"uCikZm9trYKarZEfJ8K7K":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearRect"},"-ueUMK7w-byA9k9WTHn7G":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearTint"},"L8WCMgR1GLYRDVsI7kIkA":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clipRect"},"j6h5F7VArDJV3pmh-m4Sj":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#constructor"},"ZYC5uuE83XiuR4cuXDhLd":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#createPattern"},"7WJlIInHmMjP7JpIiEjS9":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#drawImage"},"Qbw1BclXAtJu2jodkE3VL":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#drawPattern"},"mcCeCKJgYgCvqe3U0ymh8":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fill"},"biWq74tlFPxTwAFFGBvdg":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillArc"},"IKVoeZAU5KBhYON9DxfpQ":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillEllipse"},"oJ7MZCGSZXMw2MWIXj0yU":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillLine"},"QIpfD2Jrs_dIIrFJ2rGeL":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillPolygon"},"U5-64fmU-8-hwDyroGP6J":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillRect"},"ev0UHis44mmZ1hLbZfcPK":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillRoundRect"},"IT9fBC1q6uWNv_95jsDyR":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#flush"},"xA8nQB1Bs9hAk63yTHdTE":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getBlendMode"},"09WPiS1X5D08F9gOml4iz":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getCanvas"},"VyxSu3PKDnk4GgHjWyQXt":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getColor"},"DxuOWvRhQp5rxZYFr9Sbk":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContext"},"QuE1_iL-ONKxGs_1pQSxP":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContext2d"},"kYytFYDlvhEB_bgGR6fFU":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContextGL"},"qqGuIFWlQeo-8TuxPlOtX":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getGlobalAlpha"},"dUdvSHvFKhDvT3z6fLygb":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getHeight"},"7IDyaCnMWvSOLEbnZ-a7I":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getScreenCanvas"},"gWzy0Jn80c6zomkM6AQf4":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getScreenContext"},"I8vY-Tpig0ojDdUdL-L0n":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getWidth"},"t6eclARjSRr4o9-I8m68_":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#globalAlpha"},"l-uDgoqW-XCtRp3D4kZMu":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#overlaps"},"TyXLO1XH_zquhtj0rQU9Y":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#reset"},"vUkP_bkt3fsEuSOBDO3I9":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#resetTransform"},"wL9x3nwlf8zWEIPHaEQgf":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#resize"},"JiXKbSNM1UrtnjDqj9AHf":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#restore"},"ber8UJwA-Hs-gPxFJMElE":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#rotate"},"oTkC_wti3-Uah5Qli2pWx":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#save"},"1wYRe58O4f3DicIgjFnw9":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#scale"},"s2INDdS1FEdqjaSIZwg-C":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setAntiAlias"},"T4TdPyfki3RoedGgfQ964":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setBlendMode"},"yX9jyot5YcGoNhkitqPEa":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setColor"},"8hxA4B_2cmxPCtUNEcfRX":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setCompositor"},"R-ZW_knEeqmCQIyYPL6Tl":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setGlobalAlpha"},"X2KJdKwWXAWb9TDYyWKAc":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setLineWidth"},"pXZtKmRvQyDhNWS7pLlas":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setMask"},"j_Ry-HvMNvxmzXIhdQvYN":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setProjection"},"8xtWS0ZxiJE9BMax_1xoK":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setTint"},"YU2snRYlS-lkK9j96XMBc":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setTransform"},"D5NyvzkIhsjU2leZCXLmf":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#stroke"},"JnJU3Upoh6kvAfxyGjPRb":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeArc"},"KUT-RCbTE7pSGMGZ9L2qC":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeEllipse"},"Zoyt1Pw4GOg1-vZt4gI8R":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeLine"},"8NyI9PyBqSU74l8jl8bya":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokePolygon"},"95ztHcdJ9VVdZAb4QncRN":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeRect"},"3yRWVMMn7RQEoUNifLIQN":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeRoundRect"},"CTXt9_XFc9Gh80gJInkDC":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#tint"},"sU1g9Q3b0joDC1K_7-t3F":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#transform"},"TWsMr5UhmTYMTft5eBFPO":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#translate"},"EnXa9_k4RZF_HhHggjmMr":{"uri":"/melonJS/docs/melonjs/World.html"},"DyBaz0qXH2xeGHPfQ4hGQ":{"uri":"/melonJS/docs/melonjs/World.html#alpha"},"Qk4dtoPOH4cSAqWqUq1Zd":{"uri":"/melonJS/docs/melonjs/World.html#alwaysUpdate"},"8ZyXIrzIb_lK7pj7WWP3u":{"uri":"/melonJS/docs/melonjs/World.html#ancestor"},"NQe05-RCVQeCyLXJR9g9p":{"uri":"/melonJS/docs/melonjs/World.html#anchorPoint"},"rfi4kh8HFl4rdgUEZtRnA":{"uri":"/melonJS/docs/melonjs/World.html#autoDepth"},"UETFmoOdxND9dqPL_hJJZ":{"uri":"/melonJS/docs/melonjs/World.html#autoSort"},"WYZj8ZuLlNeiWyMhXb4N4":{"uri":"/melonJS/docs/melonjs/World.html#autoTransform"},"5f28xByrtsztA4pGNIE_p":{"uri":"/melonJS/docs/melonjs/World.html#backgroundColor"},"CSNH7qJm8bSq1osDR9OJL":{"uri":"/melonJS/docs/melonjs/World.html#blendMode"},"Sb8PnPaNniiX62Q90QYdH":{"uri":"/melonJS/docs/melonjs/World.html#bodies"},"PEBCg04ZqMA1rhBGm1DeN":{"uri":"/melonJS/docs/melonjs/World.html#body"},"LfvGHxZtI0iP6mvF3Iv1j":{"uri":"/melonJS/docs/melonjs/World.html#bottom"},"hzPB4OemsdOJo7PGYpbtM":{"uri":"/melonJS/docs/melonjs/World.html#broadphase"},"LWsmroAB99sybmAtJd1Xa":{"uri":"/melonJS/docs/melonjs/World.html#centerX"},"KFyvyOqN7XEIENbBzRL9j":{"uri":"/melonJS/docs/melonjs/World.html#centerY"},"luyuSzLvpblF-Tmyuqm5w":{"uri":"/melonJS/docs/melonjs/World.html#clipping"},"4RhCpJopTo3PI7zUBabIo":{"uri":"/melonJS/docs/melonjs/World.html#currentTransform"},"YZM6y600mdKexP4QiNRom":{"uri":"/melonJS/docs/melonjs/World.html#enableChildBoundsUpdate"},"i34jjPfj-4ZiOfSTyLhFO":{"uri":"/melonJS/docs/melonjs/World.html#floating"},"t7W60lz_zN4YqFxMteUz8":{"uri":"/melonJS/docs/melonjs/World.html#fps"},"3EFaDV5XxFF4vlIjRm0De":{"uri":"/melonJS/docs/melonjs/World.html#gravity"},"z9X5xOLkxzJLvpRBHj1pw":{"uri":"/melonJS/docs/melonjs/World.html#GUID"},"miXyc7QEwsQE9YA0svVUi":{"uri":"/melonJS/docs/melonjs/World.html#height"},"bCEt0KdulMdU7BKkrwBn8":{"uri":"/melonJS/docs/melonjs/World.html#inViewport"},"slD6TW5UI1q_5vgPnUOo7":{"uri":"/melonJS/docs/melonjs/World.html#isDirty"},"-2dVdwOzU5IVePM4Vi7UW":{"uri":"/melonJS/docs/melonjs/World.html#isFlippedX"},"UMpebRwS_5ZueYisrfE3u":{"uri":"/melonJS/docs/melonjs/World.html#isFlippedY"},"QjY108JTniZNSmCOUdBm6":{"uri":"/melonJS/docs/melonjs/World.html#isFloating"},"z0vy4hQCYYLLvfNBWLe1q":{"uri":"/melonJS/docs/melonjs/World.html#isKinematic"},"I79YyIIRThZxAP8zgmX3f":{"uri":"/melonJS/docs/melonjs/World.html#isPersistent"},"BAGhRgctJVthDjLRkeG7p":{"uri":"/melonJS/docs/melonjs/World.html#left"},"HBurG2bbmoj8dWyUq2J8U":{"uri":"/melonJS/docs/melonjs/World.html#mask"},"LPSjokI0GfL_3Oyx89Wbw":{"uri":"/melonJS/docs/melonjs/World.html#name"},"DoD_hYoCySeVT2Yks-vlT":{"uri":"/melonJS/docs/melonjs/World.html#onVisibilityChange"},"1LZdWTKJcp4TC0mUItsH2":{"uri":"/melonJS/docs/melonjs/World.html#points"},"62avI_BCzBzFV7NW6e7sC":{"uri":"/melonJS/docs/melonjs/World.html#pos"},"7Na-ArJx9ZJIHBom3y4Tv":{"uri":"/melonJS/docs/melonjs/World.html#preRender"},"cwqgePJV1RTIaL2RQM_Yp":{"uri":"/melonJS/docs/melonjs/World.html#right"},"8WWJqMnoYYh2cR4nsa3D9":{"uri":"/melonJS/docs/melonjs/World.html#root"},"7EiqfEG29zQpuYVjl7dkz":{"uri":"/melonJS/docs/melonjs/World.html#sortOn"},"p-dS2_TAkEg7H00xRtLXX":{"uri":"/melonJS/docs/melonjs/World.html#tint"},"bcXCLE5oor7cZ0T9o0B_T":{"uri":"/melonJS/docs/melonjs/World.html#top"},"tPsM3yFEsmyKnFWPPrlFC":{"uri":"/melonJS/docs/melonjs/World.html#updateWhenPaused"},"6s7wQ_2WEo68cAoVTCRXk":{"uri":"/melonJS/docs/melonjs/World.html#width"},"HlOcLJp72j0oZvr3JcW7z":{"uri":"/melonJS/docs/melonjs/World.html#addBody"},"n_tL2_mfhf_tVqwwuamE8":{"uri":"/melonJS/docs/melonjs/World.html#addChild"},"L7iYEe6Ods8KjPAsrOZxZ":{"uri":"/melonJS/docs/melonjs/World.html#addChildAt"},"3ZDkOJwDIdn3ZHZYsYRuo":{"uri":"/melonJS/docs/melonjs/World.html#angleTo"},"3yFOMvwnppPgnkhtWOH4S":{"uri":"/melonJS/docs/melonjs/World.html#centerOn"},"C3YOriKGLp9lY5X172SGk":{"uri":"/melonJS/docs/melonjs/World.html#clone"},"xzK_xwgdFuK9UOGAsnuVC":{"uri":"/melonJS/docs/melonjs/World.html#constructor"},"Ik5pjDH9_Uts6bwVcTupf":{"uri":"/melonJS/docs/melonjs/World.html#contains"},"W0hlDG6z1URhBk7wOsMDn":{"uri":"/melonJS/docs/melonjs/World.html#copy"},"rfX9A_nneVno6oSwbya19":{"uri":"/melonJS/docs/melonjs/World.html#distanceTo"},"yK8FB9YEUCkl1fGOWYVuj":{"uri":"/melonJS/docs/melonjs/World.html#equals"},"6pOjI3JZUa91Cl6U3aU_l":{"uri":"/melonJS/docs/melonjs/World.html#flipX"},"AwLW-M5MS4i8R_qYz8LR1":{"uri":"/melonJS/docs/melonjs/World.html#flipY"},"9oX46dLjAcg6h_a9MNiiI":{"uri":"/melonJS/docs/melonjs/World.html#forEach"},"en_9AiIIgKhkK7T1wh48D":{"uri":"/melonJS/docs/melonjs/World.html#getAbsolutePosition"},"R_p8mi2NEpyfAwe25DMMH":{"uri":"/melonJS/docs/melonjs/World.html#getBounds"},"o3wiUYTMBo04B4__RQLYF":{"uri":"/melonJS/docs/melonjs/World.html#getChildAt"},"JQCtvQp2hGD0UrrELFuVy":{"uri":"/melonJS/docs/melonjs/World.html#getChildByGUID"},"xOlkyWSQ9SiFBBoEMoClF":{"uri":"/melonJS/docs/melonjs/World.html#getChildByName"},"r8W3XnJT0V9kPOl5nYn6U":{"uri":"/melonJS/docs/melonjs/World.html#getChildByProp"},"XcCZfh15v8RqIMT_m_AZi":{"uri":"/melonJS/docs/melonjs/World.html#getChildByType"},"CdrTnhvRG7vW_VLRqOUIv":{"uri":"/melonJS/docs/melonjs/World.html#getChildIndex"},"zYLjt7-V4bYJmd_LWP9Zz":{"uri":"/melonJS/docs/melonjs/World.html#getChildren"},"Cb-ZRmXyC4d0XcDSbA6ww":{"uri":"/melonJS/docs/melonjs/World.html#getIndices"},"Bx50ayILc0LnfO5cyvZ-_":{"uri":"/melonJS/docs/melonjs/World.html#getNextChild"},"UFm9vY0L-Us06nQbXFLFx":{"uri":"/melonJS/docs/melonjs/World.html#getOpacity"},"XrSBsiW7-JsAKiA3iBP0O":{"uri":"/melonJS/docs/melonjs/World.html#hasChild"},"p0HbzOO5Bud5XtPfYmy0f":{"uri":"/melonJS/docs/melonjs/World.html#isConvex"},"MtpiS_3WoEI1wwmWv6l5g":{"uri":"/melonJS/docs/melonjs/World.html#isFinite"},"6ACjdm03L8OkOfjSHHdY2":{"uri":"/melonJS/docs/melonjs/World.html#lookAt"},"snw1E6EQFioLaHTAt2Mu9":{"uri":"/melonJS/docs/melonjs/World.html#moveDown"},"ZlzCJum9wgKJQ10RvaU-t":{"uri":"/melonJS/docs/melonjs/World.html#moveToBottom"},"9DbE0Sd71KPaQ5-I__veG":{"uri":"/melonJS/docs/melonjs/World.html#moveToTop"},"kCcRrH4PeJqw9FtYIEDbk":{"uri":"/melonJS/docs/melonjs/World.html#moveUp"},"HNKgfnE4-YyMHHNLzaCkD":{"uri":"/melonJS/docs/melonjs/World.html#onChildChange"},"HRpoFoKrcFwudQfsFPrPq":{"uri":"/melonJS/docs/melonjs/World.html#onCollision"},"AyTGycnRr80EMjMYfwjRF":{"uri":"/melonJS/docs/melonjs/World.html#onDestroyEvent"},"7vAz2IMYqd2e0WsL2wZaO":{"uri":"/melonJS/docs/melonjs/World.html#overlaps"},"iwHtqgiOcPzBFCAC7E3vN":{"uri":"/melonJS/docs/melonjs/World.html#recalc"},"rn5yEWcZlAFBSDQEdqj48":{"uri":"/melonJS/docs/melonjs/World.html#removeBody"},"PoX8HlfWPHuwdK7TS9Xun":{"uri":"/melonJS/docs/melonjs/World.html#removeChild"},"GvEOYEzKPE0LgrBe7Rcdf":{"uri":"/melonJS/docs/melonjs/World.html#removeChildNow"},"_AYwCz3y7rW5lBOVftrm1":{"uri":"/melonJS/docs/melonjs/World.html#reset"},"_d0RYgbl4KJ2ptIm891Wc":{"uri":"/melonJS/docs/melonjs/World.html#reset"},"-Ubu6G-V0312_5wLXlbXm":{"uri":"/melonJS/docs/melonjs/World.html#resize"},"hfol2_9W8Vsx5YunApHgj":{"uri":"/melonJS/docs/melonjs/World.html#rotate"},"F6u1WyxTJQvQVxk3teklF":{"uri":"/melonJS/docs/melonjs/World.html#scale"},"1kjFXySG5mLGyGb65mHcx":{"uri":"/melonJS/docs/melonjs/World.html#scaleV"},"gtY3eBeLlk56kfOtv-Asn":{"uri":"/melonJS/docs/melonjs/World.html#setChildsProperty"},"Ynewqfn_SEA4aQuL807qs":{"uri":"/melonJS/docs/melonjs/World.html#setOpacity"},"O0k5ilXoUO0oOyXUSvyut":{"uri":"/melonJS/docs/melonjs/World.html#setShape"},"_Y3TBegFPbIEzRICy9tdl":{"uri":"/melonJS/docs/melonjs/World.html#setVertices"},"qXVM_VYrIeCR-mOX0MFPZ":{"uri":"/melonJS/docs/melonjs/World.html#shift"},"5fMGepzK79KMpZrFNKhIE":{"uri":"/melonJS/docs/melonjs/World.html#sort"},"FGmNKRTsA9af8rYGMIbY1":{"uri":"/melonJS/docs/melonjs/World.html#swapChildren"},"NAmPWuDcJrfeCGEo7BWB6":{"uri":"/melonJS/docs/melonjs/World.html#to2d"},"qwXJIwxSBy7zryxFpZYVn":{"uri":"/melonJS/docs/melonjs/World.html#toIso"},"RwSGE0-w9bAQKe_0T4hWl":{"uri":"/melonJS/docs/melonjs/World.html#toPolygon"},"6Zlp1_xMdMmMk_xSWZEOs":{"uri":"/melonJS/docs/melonjs/World.html#transform"},"9fPXS7vzvB2ZQgmrQiuCF":{"uri":"/melonJS/docs/melonjs/World.html#translate"},"vHVFYmeAjI1SPHoXQZQtf":{"uri":"/melonJS/docs/melonjs/World.html#union"},"KBs-jX87e_P1TDOqdGVhC":{"uri":"/melonJS/docs/melonjs/World.html#draw"},"aA6AP6HnOJu5PZyhY7cs8":{"uri":"/melonJS/docs/melonjs/World.html#postDraw"},"Tw5RFTmuimx1UkboIaP1p":{"uri":"/melonJS/docs/melonjs/World.html#preDraw"},"kgczJn55PSAQplW9-CM9G":{"uri":"/melonJS/docs/melonjs/World.html#update"},"yGFa7qxMCdsS8ZIqXxo7P":{"uri":"/melonJS/docs/melonjs/World.html#isAttachedToRoot"},"JeNFp4Ptsf1Cl39QBTVpv":{"uri":"/melonJS/docs/melonjs/World.html#onAnchorUpdate"},"V68dhKauG4TGrAYLSvm24":{"uri":"global.html#version"},"OibMcjSXVzuLPIVhdUz6E":{"uri":"global.html#initialized"},"48sdp8zeNHy6tO-NsBVrC":{"uri":"global.html#skipAutoInit"},"HixQwWqAxjfxNkEdzmNkW":{"uri":"/melonJS/docs/melonjs/boot.html"}}}