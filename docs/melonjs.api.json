{"version":"1.0.0","metadata":{"linker":"(unsigned)","siteRoot":"melonJS/docs"},"root":{"id":"root-EiuKQfJJisrkgsXJKWRjY","name":"","type":"RootDoc","members":[{"id":"_o9U6Ul0XfKWznHMDjzWj","name":"audio","brief":"","type":"NSDoc","members":[{"id":"U3vuVe0CuGVeKapt5YkGG","name":"stopOnAudioError","brief":"","defaultValue":"true","type":"PropertyDoc","description":"<p>Specify either to stop on audio loading error or not<br>\nif true, melonJS will throw an exception and stop loading<br>\nif ..."},{"id":"v-6gntcbDk4I3Et5tSog8","name":"disable","brief":"","scope":"static","type":"FunctionDoc","description":"<p>disable audio output</p>","params":[],"returns":[]},{"id":"QFXa6AkE3rExtYmyRC055","name":"enable","brief":"","scope":"static","see":["audio#disable"],"type":"FunctionDoc","description":"<p>enable audio output <br>\nonly useful if audio supported and previously disabled through</p>","params":[],"returns":[]},{"id":"bFQxDNA1NLf94SmIb4jhh","name":"fade","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Fade a currently playing sound between two volumee.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"from","optional":false,"description":"<p>Volume to fade from (0.0 to 1.0).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"to","optional":false,"description":"<p>Volume to fade to (0.0 to 1.0).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"duration","optional":false,"description":"<p>Time in milliseconds to fade.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will fade.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DFd1WnKr4CVlMa6oVwH4Y","name":"getCurrentTrack","brief":"","scope":"static","type":"FunctionDoc","description":"<p>returns the current track Id</p>","params":[],"returns":[{"description":"<p>audio track name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"JvQLfjSO0n9QNu9imo3xK","name":"getVolume","brief":"","scope":"static","type":"FunctionDoc","description":"<p>get the default global volume</p>","params":[],"returns":[{"description":"<p>current volume value in Float [0.0 - 1.0] .</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"w9g4UEZ5N4YoJYRdyyFIq","name":"hasAudio","brief":"","scope":"static","type":"FunctionDoc","description":"<p>check if audio (HTML5 or WebAudio) is supported</p>","params":[],"returns":[{"description":"<p>return true if audio (HTML5 or WebAudio) is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PK6_cdCZ7-AUumamrwJt-","name":"hasFormat","brief":"","scope":"static","type":"FunctionDoc","description":"<p>check if the given audio format is supported</p>","params":[{"identifier":"codec","optional":false,"description":"<p>audio format : &quot;mp3&quot;, &quot;mpeg&quot;, opus&quot;, &quot;ogg&quot;, &quot;oga&quot;, &quot;wav&quot;, &quot;aac...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>return true if the given audio format is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KoWt203s8rHJrTTuwmO4x","name":"init","brief":"","examples":[{"caption":"","code":"\n // initialize the \"sound engine\", giving \"webm\" as default desired audio format, and \"mp3\" as a fallback\n if (!me.audio.init(\"webm,mp3\")) {\n     alert(\"Sorry but your browser does not support html 5 audio !\");\n     return;\n }\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Initialize and configure the audio support.<br>\nmelonJS supports a wide array of audio codecs that have varying browser su...","params":[{"identifier":"format","optional":true,"default":"\"mp3\"","description":"<p>audio format to prioritize</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Indicates whether audio initialization was successful</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AhT4S11YT_3RapupPlwSy","name":"mute","brief":"","examples":[{"caption":"","code":"\n // mute the background music\n me.audio.mute(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>mute or unmute the specified sound, but does not pause the playback.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will mute.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"mute","optional":true,"default":"true","description":"<p>True to mute and false to unmute</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"zNHmcxzuOvC944E_cbOq4","name":"muteAll","brief":"","scope":"static","type":"FunctionDoc","description":"<p>mute all audio</p>","params":[],"returns":[]},{"id":"mwnUplCVox5aQCde_IH1l","name":"muted","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Returns true if audio is muted globally.</p>","params":[],"returns":[{"description":"<p>true if audio is muted globally</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_neOt76-glav-4AnqcCea","name":"pause","brief":"","examples":[{"caption":"","code":"\n me.audio.pause(\"cling\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>pause the specified sound on all channels<br>\nthis function does not reset the currentTime property</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will pause.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"NWure2oU7-Qr_spIx1VqF","name":"pauseTrack","brief":"","examples":[{"caption":"","code":"\n me.audio.pauseTrack();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>pause the current audio track</p>","params":[],"returns":[]},{"id":"nv2m9rA0ssEphuI_xlfpj","name":"play","brief":"","examples":[{"caption":"","code":"\n // play the \"cling\" audio clip\n me.audio.play(\"cling\");\n // play & repeat the \"engine\" audio clip\n me.audio.play(\"engine\", true);\n // play the \"gameover_sfx\" audio clip and call myFunc when finished\n me.audio.play(\"gameover_sfx\", false, myFunc);\n // play the \"gameover_sfx\" audio clip with a lower volume level\n me.audio.play(\"gameover_sfx\", false, null, 0.5);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>play the specified sound</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"loop","optional":true,"default":"false","description":"<p>loop audio</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onend","optional":true,"description":"<p>Function to call when sound instance ends playing.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"volume","optional":true,"default":"default","description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the sound instance ID.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qjetuexEv0cUAeURWURLy","name":"playTrack","brief":"","examples":[{"caption":"","code":"\n me.audio.playTrack(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>play the specified audio track<br>\nthis function automatically set the loop property to true<br>\nand keep track of the cur...","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio track name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"volume","optional":true,"default":"default","description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the sound instance ID.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"adZAUThjpMK3VfYFoAF2g","name":"rate","brief":"","examples":[{"caption":"","code":"\n // get the playback rate of the background music\n var rate = me.audio.rate(\"dst-gameforest\");\n // speed up the playback of the background music\n me.audio.rate(\"dst-gameforest\", 2.0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>get or set the rate of playback for a sound.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"rate","optional":true,"variadic":true,"description":"<p>playback rate : 0.5 to 4.0, with 1.0 being normal speed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will be changed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>return the current playback rate (if no extra parameters were given)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"v2W9rgPWgkSKhk94iD1e1","name":"resume","brief":"","examples":[{"caption":"","code":"\n // play a audio clip\n var id = me.audio.play(\"myClip\");\n ...\n // pause it\n me.audio.pause(\"myClip\", id);\n ...\n // resume\n me.audio.resume(\"myClip\", id);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>resume the specified sound on all channels<br></p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will resume.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"PXzu4BVf-m96d9htI1cr5","name":"resumeTrack","brief":"","examples":[{"caption":"","code":"\n // play an awesome music\n me.audio.playTrack(\"awesome_music\");\n // pause the audio track\n me.audio.pauseTrack();\n // resume the music\n me.audio.resumeTrack();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>resume the previously paused audio track</p>","params":[],"returns":[]},{"id":"yU51Cgxpw5sHiNS8AdrgF","name":"seek","brief":"","examples":[{"caption":"","code":"\n // return the current position of the background music\n var current_pos = me.audio.seek(\"dst-gameforest\");\n // set back the position of the background music to the beginning\n me.audio.seek(\"dst-gameforest\", 0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>get/set the position of playback for a sound.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"seek","optional":true,"variadic":true,"description":"<p>the position to move current playback to (in seconds).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will changed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>return the current seek position (if no extra parameters were given)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HKXXRxAA8DBdgRsHhHDzc","name":"setVolume","brief":"","scope":"static","type":"FunctionDoc","description":"<p>set the default global volume</p>","params":[{"identifier":"volume","optional":false,"description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Qs4_FVm6oRzSVNf-hIZaD","name":"stop","brief":"","examples":[{"caption":"","code":"\n me.audio.stop(\"cling\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>stop the specified sound on all channels</p>","params":[{"identifier":"sound_name","optional":true,"description":"<p>audio clip name (case sensitive). If none is passed, all sounds are stopped.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will stop.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"NhsXZRzO6iB1lj5l867yC","name":"stopTrack","brief":"","examples":[{"caption":"","code":"\n // play a awesome music\n me.audio.playTrack(\"awesome_music\");\n // stop the current music\n me.audio.stopTrack();\n"}],"scope":"static","see":["audio#playTrack"],"type":"FunctionDoc","description":"<p>stop the current audio track</p>","params":[],"returns":[]},{"id":"XlmP4lyIMzHkPNwqsOErn","name":"unload","brief":"","examples":[{"caption":"","code":"\n me.audio.unload(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>unload specified audio track to free memory</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio track name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if unloaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"qwWFsKF2oFBnab0N5TIQl","name":"unloadAll","brief":"","examples":[{"caption":"","code":"\n me.audio.unloadAll();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>unload all audio to free memory</p>","params":[],"returns":[]},{"id":"S75VBc77AnIWLKpc3kVv2","name":"unmute","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unmute the specified sound</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will unmute.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zsCsOL1xAStL9jeKRPhed","name":"unmuteAll","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unmute all audio</p>","params":[],"returns":[]}]},{"id":"JhLHUvATaYpLyNPLHrq0V","name":"collision","brief":"","type":"NSDoc","description":"<p>Collision detection (and projection-based collision response) of 2D shapes.<br>\nBased on the Separating Axis Theorem and s...","members":[{"id":"zxow2MQUCRTugdvTL5kCF","name":"ResponseObject","brief":"","access":"public","type":"ClassDoc","description":"<p>An object representing the result of an intersection.</p>","members":[{"id":"pZA4P74Gm70lB-aTp2EWd","name":"a","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The first object participating in the intersection</p>"},{"id":"JDgVaN3AYKfw8ehjDOAMi","name":"aInB","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Whether the first object is entirely inside the second</p>"},{"id":"eF_fzYfBgisLploxVfW3x","name":"b","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The second object participating in the intersection</p>"},{"id":"YO9DU5rvcfGCr_tllP_lh","name":"bInA","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Whether the second object is entirely inside the first</p>"},{"id":"04rpy3_Uqpj68ukjMjHcQ","name":"indexShapeA","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The index of the colliding shape for the object a body</p>"},{"id":"nrhEdd96QLoaNGNah6Is8","name":"indexShapeB","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The index of the colliding shape for the object b body</p>"},{"id":"PJJM7j30h_B9fKmqZqCBZ","name":"overlap","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Magnitude of the overlap on the shortest colliding axis</p>"},{"id":"rTUPjOz2oS0ui-9Bu3cRz","name":"overlapN","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The shortest colliding axis (unit-vector)</p>"},{"id":"rmmi7MOIpG6Uj3iboKQo-","name":"overlapV","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The overlap vector (i.e. <code>overlapN.scale(overlap, overlap)</code>). If this vector is subtracted from the position of..."},{"id":"VjPRer7X90DDnRBw0pmbx","name":"clear","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Set some values of the response back to their defaults. <br>\nCall this between tests if you are going to reuse a single <b...","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]}]},{"id":"O5_Ff-ubKyc4uJr2qoEKj","name":"types","brief":"","examples":[{"caption":"","code":"\n // set the body collision type\n myEntity.body.collisionType = me.collision.types.PLAYER_OBJECT;\n\n // filter collision detection with collision shapes, enemies and collectables\n myEntity.body.setCollisionMask(\n     me.collision.types.WORLD_SHAPE |\n     me.collision.types.ENEMY_OBJECT |\n     me.collision.types.COLLECTABLE_OBJECT\n );\n\n // User-defined collision types are defined using BITWISE LEFT-SHIFT:\n game.collisionTypes = {\n     LOCKED_DOOR : me.collision.types.USER << 0,\n     OPEN_DOOR   : me.collision.types.USER << 1,\n     LOOT        : me.collision.types.USER << 2,\n };\n\n // Set collision type for a door entity\n myDoorEntity.body.collisionType = game.collisionTypes.LOCKED_DOOR;\n\n // Set collision mask for the player entity, so it collides with locked doors and loot\n myPlayerEntity.body.setCollisionMask(\n     me.collision.types.ENEMY_OBJECT |\n     me.collision.types.WORLD_SHAPE |\n     game.collisionTypes.LOCKED_DOOR |\n     game.collisionTypes.LOOT\n );\n"}],"readonly":true,"scope":"static","see":["Body.setCollisionMask","Body.collisionType"],"type":"EnumDoc","description":"<p>Enum for collision type values.</p>","members":[{"id":"f2BeN2A2VBwBIBnYgTsX7","name":"ACTION_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. doors</p>"},{"id":"Ba8d5LsY8X1LdlwMJH7Tv","name":"ALL_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>all of the above (including user-defined types)</p>"},{"id":"Z3ijilnxe-p7o5pdsDFe1","name":"COLLECTABLE_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>collectable objects</p>"},{"id":"Cq6vqKHxTCVYh3XbWC6as","name":"ENEMY_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>enemies objects</p>"},{"id":"jpDBiJubPC2qOfi5erOkU","name":"NO_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>to disable collision check</p>"},{"id":"DglVmzmTP2BdE3VrTOVhq","name":"NO_OBJECT","brief":"<p>to disable collision check</p>","defaultValue":"0","scope":"static","type":"PropertyDoc"},{"id":"h5WTB_S2oVqM1OJyqbIL9","name":"NPC_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>non playable characters</p>"},{"id":"hDZq_fgd6LpfTSU91ypCs","name":"PLAYER_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>playbable characters</p>"},{"id":"LCC7FfGDOeXrFM84Hwoya","name":"PROJECTILE_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. missiles</p>"},{"id":"hHN2x21VPo1q9iBO8kDet","name":"USER","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>user-defined collision types (see example)</p>"},{"id":"fui0GxTfM3FgELIPj1iMl","name":"WORLD_SHAPE","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. walls; for map collision shapes</p>"}]},{"id":"HleAcD1i1AXPCU0m0n9Td","name":"maxChildren","brief":"","access":"public","defaultValue":"8","scope":"static","see":["game.world.broadphase"],"type":"PropertyDoc","description":"<p>The maximum number of children that a quadtree node can contain before it is split into sub-nodes.</p>"},{"id":"xZOFGyYEG1gcbb4PsNez1","name":"maxDepth","brief":"","access":"public","defaultValue":"4","scope":"static","see":["game.world.broadphase"],"type":"PropertyDoc","description":"<p>The maximum number of levels that the quadtree will create.</p>"},{"id":"fRIzQL0zUwgv425ePBrzB","name":"response","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>a global instance of a response object used for collision detection <br>\nthis object will be reused amongst collision dete..."},{"id":"t7IpS9uS4md_5MqQQB5nY","name":"rayCast","brief":"","access":"public","examples":[{"caption":"","code":"\n    // define a line accross the viewport\n    var ray = new me.Line(\n        // absolute position of the line\n        0, 0, [\n        // starting point relative to the initial position\n        new me.Vector2d(0, 0),\n        // ending point\n        new me.Vector2d(me.game.viewport.width, me.game.viewport.height)\n    ]);\n\n    // check for collition\n    result = me.collision.rayCast(ray);\n\n    if (result.length > 0) {\n        // ...\n    }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Checks for object colliding with the given line</p>","params":[{"identifier":"line","optional":false,"description":"<p>line to be tested for collision</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}},{"identifier":"result","optional":true,"description":"<p>a user defined array that will be populated with intersecting physic objects.</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>an array of intersecting physic objects</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]}]},{"id":"63RjSU6IJQYK5CNDHyXEt","name":"device","brief":"<p>The device capabilities and specific events</p>","type":"NSDoc","members":[{"id":"gmMaKWBx7BpODb6da_-gT","name":"accelerationX","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the x-axis.</p>"},{"id":"cLUHh5iC-KAQ8mQPMfqX2","name":"accelerationY","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the y-axis.</p>"},{"id":"I6bUWc4SC-qTpjMiA1_-F","name":"accelerationZ","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the z-axis.</p>"},{"id":"KXwLSjn-eZ_Lt0_GUwANf","name":"alpha","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Alpha property. Gives angle based on the rotation of the phone around its z axis.\nThe z-axis is perpend..."},{"id":"kDTWip8l49rOxw_OC80y6","name":"android","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an Android platform.</p>"},{"id":"WEyDeglyYv6RG11JxSI2y","name":"android2","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an Android 2.x platform.</p>"},{"id":"wMmltaoZM8DNbI9WsBokS","name":"autoFocus","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to automatically bring the window to the front</p>"},{"id":"V6BP2LhUHJ_XJ7-NUrYy5","name":"beta","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Beta property. Gives angle on tilting a portrait held phone forward or backward</p>"},{"id":"3bLCcbzWmup73b5XGuo6S","name":"BlackBerry","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a BlackBerry platform.</p>"},{"id":"aFbGW5VrxP4F5M1VjlVg2","name":"chromeOS","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is running on ChromeOS.</p>"},{"id":"DZQZz0RQuy5Dp1h2K_Zm4","name":"devicePixelRatio","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Ratio of the resolution in physical pixels to the resolution in CSS pixels for the current display device.</p>","returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"JHCP3MOQln3BflSSdMc1r","name":"ejecta","brief":"","defaultValue":"false","readonly":true,"scope":"static","see":["http://impactjs.com/ejecta"],"type":"PropertyDoc","description":"<p>equals to true if the game is running under Ejecta.</p>"},{"id":"xMC0_m5SNpjbTd2GgDjQK","name":"gamma","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Gamma property. Gives angle on tilting a portrait held phone left or right</p>"},{"id":"ys2NQOmlBrtVhdu7Jviaj","name":"hasAccelerometer","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser accelerometer capabilities</p>"},{"id":"zke_tNpHRURSGyKbP5a4W","name":"hasDeviceOrientation","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser device orientation</p>"},{"id":"WDFnIyR3AyskgVmLtzega","name":"hasFullscreenSupport","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser full screen support</p>"},{"id":"Z9lsCoIzRuFI6OLAW19oP","name":"hasPointerLockSupport","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser pointerlock api support</p>"},{"id":"T-svzI0g963_7F5b-Abb0","name":"hasWebAudio","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Device WebAudio Support</p>"},{"id":"Gcah0TZmRRbbCNZ6N7hfV","name":"iOS","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an iOS platform.</p>"},{"id":"hPnd9AZ-KYXFTseYLPm7y","name":"isFullscreen","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Returns true if the browser/device is in full screen mode.</p>","returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XRQ7_ABXuvpMnE6u9yGdF","name":"isMobile","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if a mobile device <br>\n(Android | iPhone | iPad | iPod | BlackBerry | Windows Phone | Kindle)</p>"},{"id":"aHZ9X1JdtCH2xj3o4UJnc","name":"isWeixin","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the  is running under Wechat.</p>"},{"id":"29wwkzm6BKfcL5-ysoVoK","name":"Kindle","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Kindle platform.</p>"},{"id":"jOiYp2ZEYws8jN96_vcXX","name":"language","brief":"","access":"public","readonly":true,"scope":"static","see":["http://www.w3schools.com/tags/ref_language_codes.asp"],"type":"PropertyDoc","description":"<p>a string representing the preferred language of the user, usually the language of the browser UI.\n(will default to &quot;e..."},{"id":"ohkceYyfQUhgh6uh7l3ih","name":"linux","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Linux platform.</p>"},{"id":"xtSHiYbybzss0QuEuXIdX","name":"localStorage","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser Local Storage capabilities <br>\n(this flag will be set to false if cookies are blocked)</p>"},{"id":"UvpJhMYl78dB9whj_I4WV","name":"maxTouchPoints","brief":"","defaultValue":"1","examples":[{"caption":"","code":"\n if (me.device.maxTouchPoints > 1) {\n     // device supports multi-touch\n }\n"}],"readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Return the maximum number of simultaneous touch contact points are supported by the current device.</p>"},{"id":"E5jOGrtLKTn08ZB0CXyO2","name":"nativeBase64","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser Base64 decoding capability</p>"},{"id":"jhN12vEe8tklabkHNwyft","name":"nodeJS","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if running under node.js</p>"},{"id":"FiaQfW7LAkWjK98KgXyD6","name":"OffScreenCanvas","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device browser supports OffScreenCanvas.</p>"},{"id":"JmzlLuhELgAe3zsVpkvB3","name":"pauseOnBlur","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to pause the game when losing focus</p>"},{"id":"7c5Z_jp8XXjyhnCOMfR99","name":"resumeOnFocus","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to unpause the game when gaining focus</p>"},{"id":"KMuC1dzdRjuxSGRl0r9cD","name":"ScreenOrientation","brief":"","defaultValue":"false","readonly":true,"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation/onchange"],"type":"PropertyDoc","description":"<p>Supports the ScreenOrientation API</p>"},{"id":"atJMVtCszaoltPaG5Y51j","name":"sound","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Returns true if the browser/device has audio capabilities.</p>","returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Zi63U6MqzEO9dIhLNNhmR","name":"stopOnBlur","brief":"","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to stop the game when losing focus or not.\nThe engine restarts on focus if this is enabled.</p>"},{"id":"RRqMutKsBkfwIK8VJg9bb","name":"touch","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Touch capabilities</p>"},{"id":"CPjUG9wy0tjlMmd6-VCoH","name":"ua","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>the <code>ua</code> read-only property returns the user agent string for the current browser.</p>"},{"id":"HLan6EX9YGx9h7f6DjQxz","name":"wheel","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>W3C standard wheel events</p>"},{"id":"GJdwyhYYmfv_P6LojA2Bc","name":"wp","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Windows Phone platform.</p>"},{"id":"9Sz8x4gGzDMzzfkxZqkLI","name":"turnOffPointerLock","brief":"","access":"public","deprecated":"since 10.3.0","scope":"instance","see":["input.exitPointerLock"],"type":"MethodDoc","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ulh7mvfOJf5oK25z3PxPc","name":"turnOnPointerLock","brief":"","access":"public","deprecated":"since 10.3.0","scope":"instance","see":["input.requestPointerLock"],"type":"MethodDoc","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EHfcfnVfIEvEs2TM0Aj1M","name":"enableSwipe","brief":"","scope":"static","type":"FunctionDoc","description":"<p>enable/disable swipe on WebView.</p>","params":[{"identifier":"enable","optional":true,"default":"true","description":"<p>enable or disable swipe.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"7icnv_VWLlyhwnr79DdFH","name":"exitFullscreen","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Exit fullscreen mode. Requires fullscreen support from the browser/device.</p>","params":[],"returns":[]},{"id":"ln3mEH9DCV0v7O1qa7sWi","name":"focus","brief":"","examples":[{"caption":"","code":"\n  if (clicked) {\n    me.device.focus();\n  }\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Makes a request to bring this device window to the front.</p>","params":[],"returns":[]},{"id":"u9a54DPHi25yOgVgrN-yy","name":"getElement","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the DOM element for the given element name or HTMLElement object</p>","params":[{"identifier":"element","optional":false,"description":"<p>the parent element name or a HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the corresponding DOM Element or null if not existing</p>","dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"RgrRz6YJWe2B0TVJBjwMz","name":"getElementBounds","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/DOMRect"],"type":"FunctionDoc","description":"<p>returns the size of the given HTMLElement and its position relative to the viewport\n<br><img src=\"images/element-box-diagr...","params":[{"identifier":"element","optional":false,"description":"<p>an HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the size and position of the element relatively to the viewport</p>","dataType":{"tokens":[{"value":"DOMRect","kind":"canonical"},{"value":"DOMRect","kind":"canonical"}],"template":"%1"}}]},{"id":"Ej5F3DlHYv1BGJvIrd49Q","name":"getMaxShaderPrecision","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the highest precision format supported by this device for GL Shaders</p>","params":[{"identifier":"gl","optional":false,"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>&quot;lowp&quot;, &quot;mediump&quot;, or &quot;highp&quot;</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"usRnTbaI78-Z_Bx3_oAW0","name":"getParentBounds","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/DOMRect"],"type":"FunctionDoc","description":"<p>returns the size of the given HTMLElement Parent and its position relative to the viewport\n<br><img src=\"images/element-bo...","params":[{"identifier":"element","optional":false,"description":"<p>an HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the size and position of the given element parent relative to the viewport</p>","dataType":{"tokens":[{"value":"DOMRect","kind":"canonical"},{"value":"DOMRect","kind":"canonical"}],"template":"%1"}}]},{"id":"GRrvrtt7LunRlKOY8U064","name":"getParentElement","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the parent DOM element for the given parent name or HTMLElement object</p>","params":[{"identifier":"element","optional":false,"description":"<p>the parent element name or a HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the parent Element</p>","dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"Qbyz1YyIwY8ypKP_Hp0h2","name":"getScreenOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation"],"type":"FunctionDoc","description":"<p>Return a string representing the orientation of the device screen.\nIt can be &quot;any&quot;, &quot;natural&quot;, &quot;l...","params":[],"returns":[{"description":"<p>the screen orientation</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"EGlkdhG18SQj7wG0iCDS-","name":"getStorage","brief":"","scope":"static","see":["save"],"type":"FunctionDoc","description":"<p>return the device storage</p>","params":[{"identifier":"type","optional":true,"default":"\"local\"","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a reference to the device storage</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"JgzBCNReX8_Ny2HwT26wd","name":"isLandscape","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return true if the device screen orientation is in Portrait mode</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kpeDnLRrMIxQfkKSC64kv","name":"isPortrait","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return true if the device screen orientation is in Portrait mode</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zITAZry73bg60wWhVQt8A","name":"isWebGLSupported","brief":"","scope":"static","type":"FunctionDoc","description":"<p>returns true if the device supports WebGL</p>","params":[{"identifier":"options","optional":true,"description":"<p>context creation options</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if WebGL is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TfgRkp7Vc-mySL18r9SVF","name":"lockOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation"],"type":"FunctionDoc","description":"<p>locks the device screen into the specified orientation.<br>\nThis method only works for installed Web apps or for Web pages...","params":[{"identifier":"orientation","optional":false,"description":"<p>The orientation into which to lock the screen.</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[{"description":"<p>true if the orientation was unsuccessfully locked</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vZCdKCy7oBmwaCUbnAQX8","name":"onReady","brief":"","examples":[{"caption":"","code":"\n // small game skeleton\n var game = {\n    // called by the me.device.onReady function\n    onload : function () {\n       // init video\n       if (!me.video.init('screen', 640, 480, true)) {\n          alert(\"Sorry but your browser does not support html 5 canvas.\");\n          return;\n       }\n\n       // initialize the \"audio\"\n       me.audio.init(\"mp3,ogg\");\n\n       // set callback for ressources loaded event\n       me.loader.onload = this.loaded.bind(this);\n\n       // set all ressources to be loaded\n       me.loader.preload(game.assets);\n\n       // load everything & display a loading screen\n       me.state.change(me.state.LOADING);\n    },\n\n    // callback when everything is loaded\n    loaded : function () {\n       // define stuff\n       // ....\n\n       // change to the menu screen\n       me.state.change(me.state.PLAY);\n    }\n }, // game\n\n // \"bootstrap\"\n me.device.onReady(function () {\n    game.onload();\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>specify a function to execute when the Device is fully loaded and ready</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to be executed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"KiEyU6prM1wgf_ea-nUpl","name":"requestFullscreen","brief":"","examples":[{"caption":"","code":"\n // add a keyboard shortcut to toggle Fullscreen mode on/off\n me.input.bindKey(me.input.KEY.F, \"toggleFullscreen\");\n me.event.on(me.event.KEYDOWN, function (action, keyCode, edge) {\n    // toggle fullscreen on/off\n    if (action === \"toggleFullscreen\") {\n       if (!me.device.isFullscreen) {\n          me.device.requestFullscreen();\n       } else {\n          me.device.exitFullscreen();\n       }\n    }\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Triggers a fullscreen request. Requires fullscreen support from the browser/device.</p>","params":[{"identifier":"element","optional":true,"default":"default canvas object","description":"<p>the element to be set in full-screen mode.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"b5U7VdAQWkkZuEgAVFPtw","name":"unlockOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation"],"type":"FunctionDoc","description":"<p>unlocks the device screen into the specified orientation.<br>\nThis method only works for installed Web apps or for Web pag...","params":[],"returns":[{"description":"<p>true if the orientation was unsuccessfully unlocked</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LBl8bhpKhkwz_xm_wY3oT","name":"unwatchAccelerometer","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unwatch Accelerometor event</p>","params":[],"returns":[]},{"id":"t5o9FueNzDsP5HY0bIrT1","name":"unwatchDeviceOrientation","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unwatch Device orientation event</p>","params":[],"returns":[]},{"id":"rpWaxpi7mys_OvYK3x1Bd","name":"vibrate","brief":"","examples":[{"caption":"","code":"\n // vibrate for 1000 ms\n me.device.vibrate(1000);\n // or alternatively\n me.device.vibrate([1000]);\n // vibrate for 50 ms, be still for 100 ms, and then vibrate for 150 ms:\n me.device.vibrate([50, 100, 150]);\n // cancel any existing vibrations\n me.device.vibrate(0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>the vibrate method pulses the vibration hardware on the device, <br>\nIf the device doesn't support vibration, this method ...","params":[{"identifier":"pattern","optional":false,"description":"<p>pattern of vibration and pause intervals</p>","dataType":{"tokens":[{"value":"number | Array<number>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | %3<%2>"}}],"returns":[]},{"id":"LBni3n7v0Hmvn3DR6ppWr","name":"watchAccelerometer","brief":"","examples":[{"caption":"","code":"\n // try to enable device accelerometer event on user gesture\n me.input.registerPointerEvent(\"pointerleave\", me.game.viewport, function() {\n     if (me.device.watchAccelerometer() === true) {\n         // Success\n         me.input.releasePointerEvent(\"pointerleave\", me.game.viewport);\n     } else {\n         // ... fail at enabling the device accelerometer event\n     }\n });\n"}],"scope":"static","see":["device.accelerationX","device.accelerationY","device.accelerationZ"],"type":"FunctionDoc","description":"<p>Enable monitor of the device accelerator to detect the amount of physical force of acceleration the device is receiving.\n(...","params":[],"returns":[{"description":"<p>false if not supported or permission not granted by the user</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"H4WuRTf0PXvtZ7pe10SCw","name":"watchDeviceOrientation","brief":"","examples":[{"caption":"","code":"\n // try to enable device orientation event on user gesture\n me.input.registerPointerEvent(\"pointerleave\", me.game.viewport, function() {\n     if (me.device.watchDeviceOrientation() === true) {\n         // Success\n         me.input.releasePointerEvent(\"pointerleave\", me.game.viewport);\n     } else {\n         // ... fail at enabling the device orientation event\n     }\n });\n"}],"scope":"static","see":["device.alpha","device.beta","device.gamma"],"type":"FunctionDoc","description":"<p>Enable monitor of the device orientation to detect the current orientation of the device as compared to the Earth coordina...","params":[],"returns":[{"description":"<p>false if not supported or permission not granted by the user</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"3vuBJ30Dzju14oG4nXefz","name":"event","brief":"","type":"NSDoc","description":"<p>an event system based on nodeJS EventEmitter interface</p>","members":[{"id":"bj6xwaESO6wearOOuq5Uv","name":"BOOT","brief":"","access":"public","defaultValue":"\"me.boot\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the system is booting</p>"},{"id":"CL6-KCsTlTZkTUNsUuNPZ","name":"CANVAS_ONRESIZE","brief":"","access":"public","defaultValue":"\"canvas.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the canvas is resized <br>\n(this usually follows a WINDOW_ONRESIZE event).<br>\nData passed : {number} canva..."},{"id":"Ub5V5Ya1v-hE_8VsrCkxY","name":"DRAGEND","brief":"","access":"public","defaultValue":"\"me.game.dragend\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for dragend events on a Draggable entity <br>\nData passed:\n{object} the drag event <br>\n{object} the Draggable entit..."},{"id":"J9Puu487V04uEcqG7wyZ3","name":"DRAGSTART","brief":"","access":"public","defaultValue":"\"me.game.dragstart\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for dragstart events on a Draggable entity <br>\nData passed:\n{object} the drag event <br>\n{object} the Draggable ent..."},{"id":"0D1F_Q2CiUlMV3SBNc5RQ","name":"GAME_AFTER_DRAW","brief":"","access":"public","defaultValue":"\"me.game.afterDraw\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for the start of the draw loop\nData passed : {number} time the current time stamp</p>"},{"id":"1WYhBkYJCdpXUOlZQL81V","name":"GAME_AFTER_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.afterUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for the end of the update loop\nData passed : {number} time the current time stamp</p>"},{"id":"LV8pTmbwML7CKtvt25zOe","name":"GAME_BEFORE_DRAW","brief":"","access":"public","defaultValue":"\"me.game.beforeDraw\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for the end of the draw loop\nData passed : {number} time the current time stamp</p>"},{"id":"0ckvTWNgp_xpcjwEvFig2","name":"GAME_BEFORE_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.beforeUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the engine is about to start a new game loop\nData passed : {number} time the current time stamp</p>"},{"id":"nNldLk4GFPLmdUZvltKss","name":"GAME_INIT","brief":"","access":"public","defaultValue":"\"me.game.onInit\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game manager is initialized <br>\nData passed : none <br></p>"},{"id":"9ruYHqKuWe8hNDvTWinQZ","name":"GAME_RESET","brief":"","access":"public","defaultValue":"\"me.game.onReset\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game manager is resetted <br>\nData passed : none <br></p>"},{"id":"lHrW7yuQsYcRWju0QPxOj","name":"GAME_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.onUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the game is updated (will be impacted by frame skip, frame interpolation and pause/resume state) <br>\nData ..."},{"id":"nDt2sE4LfvgUVVmqYTZ0J","name":"GAMEPAD_CONNECTED","brief":"","access":"public","defaultValue":"\"gamepad.connected\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a gamepad is connected <br>\nData passed : {object} gamepad object</p>"},{"id":"gATD4SvlJ2-4ovWYYYIN8","name":"GAMEPAD_DISCONNECTED","brief":"","access":"public","defaultValue":"\"gamepad.disconnected\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a gamepad is disconnected <br>\nData passed : {object} gamepad object</p>"},{"id":"TH-OUBdWFPTHje0pWbwQa","name":"GAMEPAD_UPDATE","brief":"","access":"public","defaultValue":"\"gamepad.update\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when gamepad button/axis state is updated <br>\nData passed : {number} index <br>\nData passed : {string} type : &..."},{"id":"webI2UHTcEdwrvgMBtuqP","name":"KEYDOWN","brief":"","access":"public","defaultValue":"\"me.input.keydown\"","examples":[{"caption":"","code":"\n me.input.bindKey(me.input.KEY.X, \"jump\", true); // Edge-triggered\n me.input.bindKey(me.input.KEY.Z, \"shoot\"); // Level-triggered\n me.event.on(me.event.KEYDOWN, (action, keyCode, edge) => {\n   // Checking bound keys\n   if (action === \"jump\") {\n       if (edge) {\n           this.doJump();\n       }\n\n       // Make character fall slower when holding the jump key\n       this.vel.y = this.body.gravity;\n   }\n });\n"}],"readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for pressing a binded key <br>\nData passed : {string} user-defined action, {number} keyCode,\n{boolean} edge state <b..."},{"id":"pmLDJZ80ZNrXizkhAWITN","name":"KEYUP","brief":"","access":"public","defaultValue":"\"me.input.keyup\"","examples":[{"caption":"","code":"\n me.event.on(me.event.KEYUP, (action, keyCode) => {\n   // Checking unbound keys\n   if (keyCode == me.input.KEY.ESC) {\n       if (me.state.isPaused()) {\n           me.state.resume();\n       }\n       else {\n           me.state.pause();\n       }\n   }\n });\n"}],"readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for releasing a binded key <br>\nData passed : {string} user-defined action, {number} keyCode</p>"},{"id":"UbVBlm2hLv4bhsQD6EifR","name":"LEVEL_LOADED","brief":"","access":"public","defaultValue":"\"me.game.onLevelLoaded\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a level is loaded <br>\nData passed : {string} Level Name</p>"},{"id":"RbsFwq7ZK3TsugmguDlkr","name":"LOADER_COMPLETE","brief":"","access":"public","defaultValue":"\"me.loader.onload\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when everything has loaded <br>\nData passed : none <br></p>"},{"id":"27McZMloELajQpw8bafxT","name":"LOADER_PROGRESS","brief":"","access":"public","defaultValue":"\"me.loader.onProgress\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for displaying a load progress indicator <br>\nData passed : {number} [0 .. 1], {Resource} resource object<br></p>"},{"id":"_JsXnJlJ9FfEPfH8dpw7C","name":"ONCONTEXT_RESTORED","brief":"","access":"public","defaultValue":"\"renderer.contextrestored\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the current context is restored <br>\nData passed : {me.Renderer} the current renderer instance`</p>"},{"id":"1GacH5UZpjRVFbDR1TJMv","name":"POINTERLOCKCHANGE","brief":"","access":"public","defaultValue":"\"me.event.pointerlockChange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for onPointerLockChange event <br>\nData passed : {boolean} pointer lock status (true/false)</p>"},{"id":"WFMLVAYyuQNplohqxvqU1","name":"POINTERMOVE","brief":"","access":"public","defaultValue":"\"me.event.pointermove\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for pointermove events on the screen area <br>\nData passed : {me.Pointer} a Pointer object</p>"},{"id":"rvYW0LpNcVMsgniF9dRRz","name":"STATE_CHANGE","brief":"","access":"public","defaultValue":"\"me.state.onChange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the changing to a different stage</p>"},{"id":"YgPw8OjzlPmPDSAVymfXp","name":"STATE_PAUSE","brief":"","access":"public","defaultValue":"\"me.state.onPause\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the game is paused <br>\nData passed : none <br></p>"},{"id":"8FacjtAK3-36TTFGpTmd5","name":"STATE_RESTART","brief":"","access":"public","defaultValue":"\"me.state.onRestart\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game is restarted <br>\nData passed : {number} time in ms the game was stopped</p>"},{"id":"JWrXY7ks8HNiAqTdKIdlP","name":"STATE_RESUME","brief":"","access":"public","defaultValue":"\"me.state.onResume\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game is resumed <br>\nData passed : {number} time in ms the game was paused</p>"},{"id":"xqGcJUfFtSQreUmuhpINH","name":"STATE_STOP","brief":"","access":"public","defaultValue":"\"me.state.onStop\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the game is stopped <br>\nData passed : none <br></p>"},{"id":"0N-Wjp0CNNAWAZ788p2_o","name":"VIDEO_INIT","brief":"","access":"public","defaultValue":"\"me.video.onInit\"","readonly":true,"see":["video.init","event.on"],"type":"PropertyDoc","description":"<p>event for when the video is initialized<br>\nData passed : none <br></p>"},{"id":"ydKsRRxzcROzFfL4VnBk3","name":"VIEWPORT_ONCHANGE","brief":"","access":"public","defaultValue":"\"viewport.onchange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the viewport position is updated <br>\nData passed : {me.Vector2d} viewport position vector</p>"},{"id":"nimjbSUjgqCtRM0WkT6zV","name":"VIEWPORT_ONRESIZE","brief":"","access":"public","defaultValue":"\"viewport.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the viewport is resized <br>\n(this usually follows a WINDOW_ONRESIZE event, when using the <code>flex</code..."},{"id":"mvUS-7nFrl8eI02clWxCB","name":"WEBGL_ONCONTEXT_LOST","brief":"","access":"public","defaultValue":"\"renderer.contextlost\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the current context is lost <br>\nData passed : {me.Renderer} the current renderer instance</p>"},{"id":"HkyhJWmFjOTLWamQviX-d","name":"WINDOW_ONORIENTATION_CHANGE","brief":"","access":"public","defaultValue":"\"globalThis.orientationchange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the device is rotated <br>\nData passed : {Event} Event object <br></p>"},{"id":"iW9aXf2CutCFtkazvAvFn","name":"WINDOW_ONRESIZE","brief":"","access":"public","defaultValue":"\"globalThis.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the (browser) window is resized <br>\nData passed : {Event} Event object</p>"},{"id":"GOE8cM39_wfSNRKRN4vEh","name":"WINDOW_ONSCROLL","brief":"","access":"public","defaultValue":"\"globalThis.onscroll\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the (browser) window is scrolled <br>\nData passed : {Event} Event object</p>"},{"id":"-ymkLT1WtoEu_Uo_BZQcZ","name":"emit","brief":"","examples":[{"caption":"","code":"\n me.event.emit(\"event-name\", a, b, c);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>calls each of the listeners registered for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>arguments to be passed to all listeners</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the event had listeners, false otherwise.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cLqQWgD11MISGgE8NWMET","name":"off","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.off(\"event-name\", myFunction);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>remove the given listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]},{"id":"IBHx4MdDC2uE_bg6X8rv1","name":"on","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.on(\"event-name\", myFunction, this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Add a listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"context","optional":true,"default":"this","description":"<p>The context to invoke the listener with.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]},{"id":"Gg_rGREZ7juCQZKeBNu3l","name":"once","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.once(\"event-name\", myFunction, this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Add a one-time listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"context","optional":true,"default":"this","description":"<p>The context to invoke the listener with.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]}]},{"id":"8RnWUvb3HxXBDj-YFORrX","name":"game","brief":"","defaultValue":"true","type":"NSDoc","description":"<p>game represents your current game, it contains all the objects,\ntilemap layers, current viewport, collision map, etc...<br...","members":[{"id":"KhzCXSJWmEZRaRhJBsaYb","name":"lastUpdate","brief":"","access":"public","type":"PropertyDoc","description":"<p>Last time the game update loop was executed. <br>\nUse this value to implement frame prediction in drawing events,\nfor crea..."},{"id":"BR1plmLwv1Wfb1yHFUpXB","name":"mergeGroup","brief":"","access":"public","defaultValue":"true","type":"PropertyDoc","description":"<p>when true, all objects will be added under the root world container.<br>\nWhen false, a <code>me.Container</code> object wi..."},{"id":"4RRMjiVwjGywQRbCDCAaJ","name":"sortOn","brief":"","access":"public","defaultValue":"\"z\"","type":"PropertyDoc","description":"<p>Specify the property to be used when sorting entities.\nAccepted values : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"ScaxZcPE9BmalaCPvm00b","name":"viewport","brief":"","access":"public","type":"PropertyDoc","description":"<p>a reference to the current active stage &quot;default&quot; camera</p>"},{"id":"A7SQTwxoa9tSp9B8bawG5","name":"world","brief":"","access":"public","type":"PropertyDoc","description":"<p>a reference to the game world, <br>\na world is a virtual environment containing all the game objects</p>"},{"id":"k-fZv5RYHYu0dJKZW5NUB","name":"getParentContainer","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Returns the parent container of the specified Child in the game world</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}}]},{"id":"DrRnnCqe0W8ssxbbRpaLu","name":"onLevelLoaded","brief":"","examples":[{"caption":"","code":"\n // call myFunction () everytime a level is loaded\n me.game.onLevelLoaded = this.myFunction.bind(this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Fired when a level is fully loaded and all entities instantiated. <br>\nAdditionnaly the level id will also be passed to th...","params":[],"returns":[]},{"id":"jeJ0DZey2Qs8ZkLDea6KV","name":"repaint","brief":"","scope":"static","type":"FunctionDoc","description":"<p>force the redraw (not update) of all objects</p>","params":[],"returns":[]},{"id":"eWJpxFeF93HtX6NYYUOPI","name":"reset","brief":"","scope":"static","type":"FunctionDoc","description":"<p>reset the game Object manager<br>\ndestroy all current objects</p>","params":[],"returns":[]},{"id":"rx8lfVbSkTSSkf0Zdbnfb","name":"updateFrameRate","brief":"","scope":"static","see":["timer.maxfps","World.fps"],"type":"FunctionDoc","description":"<p>Update the renderer framerate using the system config variables.</p>","params":[],"returns":[]}]},{"id":"HfYfeXxALM_XB4a8iavQK","name":"input","brief":"","type":"NSDoc","members":[{"id":"eVoBzp1EPBIftOuKTkXNh","name":"GAMEPAD","brief":"","access":"public","type":"NSDoc","description":"<p>Namespace for standard gamepad mapping constants</p>","members":[{"id":"5gUWSx-XcCrZdzy6rlDz7","name":"AXES","brief":"","access":"public","scope":"static","see":["https://w3c.github.io/gamepad/#remapping"],"type":"EnumDoc","description":"<p>Standard gamepad mapping information for axes<br></p>\n <ul>\n   <li>Left control stick: <code>LX</code> (horizontal), <code..."},{"id":"Q9Zhup816f8zIzCxE_Ms_","name":"BUTTONS","brief":"","access":"public","scope":"static","see":["https://w3c.github.io/gamepad/#remapping"],"type":"EnumDoc","description":"<p>Standard gamepad mapping information for buttons<br></p>\n <ul>\n   <li>Face buttons: <code>FACE_1</code>, <code>FACE_2</cod..."}]},{"id":"a1VzZ5H_mN5lEBRaB2NUy","name":"KEY","brief":"","access":"public","readonly":true,"type":"EnumDoc","description":"<p>standard keyboard constants</p>","members":[{"id":"7oisKPpGJy0ODNn2O6yBE","name":"A","brief":"","defaultValue":"65","scope":"static","type":"PropertyDoc"},{"id":"wznCfr1g4SG19A9DfzzrC","name":"ADD","brief":"","defaultValue":"107","scope":"static","type":"PropertyDoc"},{"id":"-2nhQ3f0D2t4RBkK6UVgx","name":"ALT","brief":"","defaultValue":"18","scope":"static","type":"PropertyDoc"},{"id":"3hZb5GvDFl3jLwTUCdG9M","name":"B","brief":"","defaultValue":"66","scope":"static","type":"PropertyDoc"},{"id":"MTwGifTQJX6TvX08mMrJY","name":"BACK_SLASH","brief":"","defaultValue":"220","scope":"static","type":"PropertyDoc"},{"id":"SVSca6RXGhMUjhFcQOqYU","name":"C","brief":"","defaultValue":"67","scope":"static","type":"PropertyDoc"},{"id":"L4P2W2qnr5XVd_f59KX8-","name":"CAPS_LOCK","brief":"","defaultValue":"20","scope":"static","type":"PropertyDoc"},{"id":"thyh2dUKhgIa7t5YTQlLz","name":"CLOSE_BRACKET","brief":"","defaultValue":"221","scope":"static","type":"PropertyDoc"},{"id":"Hj4D4u1onwNVGrHJuheS7","name":"COMMA","brief":"","defaultValue":"188","scope":"static","type":"PropertyDoc"},{"id":"h_GJ2sf_dIQMfKBbIMcEP","name":"CTRL","brief":"","defaultValue":"17","scope":"static","type":"PropertyDoc"},{"id":"5hR1h2GVMXTEG8bpz6SiS","name":"D","brief":"","defaultValue":"68","scope":"static","type":"PropertyDoc"},{"id":"cyvF8hI1QVWjUMEAUCQTV","name":"DECIMAL","brief":"","defaultValue":"110","scope":"static","type":"PropertyDoc"},{"id":"kmsoEY-vqrQRTfGVwEwGA","name":"DELETE","brief":"","defaultValue":"46","scope":"static","type":"PropertyDoc"},{"id":"L05u28I0P6kpsOPB3qe8Y","name":"DIVIDE","brief":"","defaultValue":"111","scope":"static","type":"PropertyDoc"},{"id":"vsFSiiCvD7y7-Gx1lLz0q","name":"DOWN","brief":"","defaultValue":"40","scope":"static","type":"PropertyDoc"},{"id":"k2lax3fuLNKb6l8nDEWhS","name":"E","brief":"","defaultValue":"69","scope":"static","type":"PropertyDoc"},{"id":"neUD2F72rShPf_wIxCaSR","name":"END","brief":"","defaultValue":"35","scope":"static","type":"PropertyDoc"},{"id":"LTu6-Vs0_psyzfacjr6RH","name":"ENTER","brief":"","defaultValue":"13","scope":"static","type":"PropertyDoc"},{"id":"Ts4bCeJBN4SxXUDwG7uEr","name":"ESC","brief":"","defaultValue":"27","scope":"static","type":"PropertyDoc"},{"id":"Urvj11BkT4dLefBvbaTiQ","name":"F","brief":"","defaultValue":"70","scope":"static","type":"PropertyDoc"},{"id":"rndNaTkqCcZg1OmJw9qZX","name":"F1","brief":"","defaultValue":"112","scope":"static","type":"PropertyDoc"},{"id":"cPvjTyakbZiBBqCCurFIF","name":"F10","brief":"","defaultValue":"121","scope":"static","type":"PropertyDoc"},{"id":"NskJusPX7eY4cWCZHLv79","name":"F11","brief":"","defaultValue":"122","scope":"static","type":"PropertyDoc"},{"id":"mHeowhVhz3axkVGzkpOIk","name":"F12","brief":"","defaultValue":"123","scope":"static","type":"PropertyDoc"},{"id":"-fvAIlyKpejG-I39s2GiB","name":"F2","brief":"","defaultValue":"113","scope":"static","type":"PropertyDoc"},{"id":"K09nZUIvwMc4t_dvXOwJC","name":"F3","brief":"","defaultValue":"114","scope":"static","type":"PropertyDoc"},{"id":"KOkpKNr7Ik5UyFe2Vm3Rf","name":"F4","brief":"","defaultValue":"115","scope":"static","type":"PropertyDoc"},{"id":"6SBlrp0oJ5XM2rREx7LKa","name":"F5","brief":"","defaultValue":"116","scope":"static","type":"PropertyDoc"},{"id":"ajac-1AfWE5ePlxygQqVS","name":"F6","brief":"","defaultValue":"117","scope":"static","type":"PropertyDoc"},{"id":"exyoFVB7b8dUIDQ07uLk0","name":"F7","brief":"","defaultValue":"118","scope":"static","type":"PropertyDoc"},{"id":"BbHd67aHK4QnFasGbqcG4","name":"F8","brief":"","defaultValue":"119","scope":"static","type":"PropertyDoc"},{"id":"yVokLIAXgTxFjXNmQNlLR","name":"F9","brief":"","defaultValue":"120","scope":"static","type":"PropertyDoc"},{"id":"Uc9gKggZkGCz-y3Sgbs1a","name":"FORWAND_SLASH","brief":"","defaultValue":"191","scope":"static","type":"PropertyDoc"},{"id":"wdST3Vs_UnBUsRw-KTauE","name":"G","brief":"","defaultValue":"71","scope":"static","type":"PropertyDoc"},{"id":"tMQlQq46TlQ5VBHlZJtRr","name":"GRAVE_ACCENT","brief":"","defaultValue":"192","scope":"static","type":"PropertyDoc"},{"id":"BbrKKkWxHpW9RYtLysWs5","name":"H","brief":"","defaultValue":"72","scope":"static","type":"PropertyDoc"},{"id":"Nux6gcYtrjEMaUuf-s1PF","name":"HOME","brief":"","defaultValue":"36","scope":"static","type":"PropertyDoc"},{"id":"1l5vEH0TuMXTnPDrLvBSY","name":"I","brief":"","defaultValue":"73","scope":"static","type":"PropertyDoc"},{"id":"mEvOs27Fwk_7jjJwywpBF","name":"INSERT","brief":"","defaultValue":"45","scope":"static","type":"PropertyDoc"},{"id":"Gzw3fuAxIByas_obq7Lzh","name":"J","brief":"","defaultValue":"74","scope":"static","type":"PropertyDoc"},{"id":"i9f1RSyibR1UE-aAmv04a","name":"K","brief":"","defaultValue":"75","scope":"static","type":"PropertyDoc"},{"id":"U-i7dVjmGcICcQ8xK2dZT","name":"L","brief":"","defaultValue":"76","scope":"static","type":"PropertyDoc"},{"id":"c9Rx0jZNfiLGIdhZrZPMe","name":"LEFT","brief":"","defaultValue":"37","scope":"static","type":"PropertyDoc"},{"id":"1WBtJjYYzOjdNuu3gKc9A","name":"M","brief":"","defaultValue":"77","scope":"static","type":"PropertyDoc"},{"id":"1ygay2KFjY-A8QNRTgVn6","name":"MINUS","brief":"","defaultValue":"189","scope":"static","type":"PropertyDoc"},{"id":"cV8G-Bsh-vjxGLVe8D8R9","name":"MULTIPLY","brief":"","defaultValue":"106","scope":"static","type":"PropertyDoc"},{"id":"TZpVblBGWgSaS2OAfW1PA","name":"N","brief":"","defaultValue":"78","scope":"static","type":"PropertyDoc"},{"id":"C9v7iBGM8NBM6UycTFrwI","name":"NUM_LOCK","brief":"","defaultValue":"144","scope":"static","type":"PropertyDoc"},{"id":"ZqgAgQjJqRlCfR2BLL2mJ","name":"NUM0","brief":"","defaultValue":"48","scope":"static","type":"PropertyDoc"},{"id":"Kc01HMu4CJL8NFGL1pRsy","name":"NUM1","brief":"","defaultValue":"49","scope":"static","type":"PropertyDoc"},{"id":"q8YL-SCH5XDH7qNXuxuh0","name":"NUM2","brief":"","defaultValue":"50","scope":"static","type":"PropertyDoc"},{"id":"TSA3n1ob6W0ajrY3cQf8a","name":"NUM3","brief":"","defaultValue":"51","scope":"static","type":"PropertyDoc"},{"id":"xMP1XTdMv51mFYcxtW0tc","name":"NUM4","brief":"","defaultValue":"52","scope":"static","type":"PropertyDoc"},{"id":"1oiI8TOVrOhXdOEeuw622","name":"NUM5","brief":"","defaultValue":"53","scope":"static","type":"PropertyDoc"},{"id":"a9-TpFC4_2B0HiiFbgEj2","name":"NUM6","brief":"","defaultValue":"54","scope":"static","type":"PropertyDoc"},{"id":"mLk5FN58rlgA3cVAutrsG","name":"NUM7","brief":"","defaultValue":"55","scope":"static","type":"PropertyDoc"},{"id":"O_OWrx8d9cpxSEU4AbHL2","name":"NUM8","brief":"","defaultValue":"56","scope":"static","type":"PropertyDoc"},{"id":"JxCQLF-0ZaaK7tK2MIZ0D","name":"NUM9","brief":"","defaultValue":"57","scope":"static","type":"PropertyDoc"},{"id":"FAY8v608Mk8aH9b0CFn00","name":"NUMPAD0","brief":"","defaultValue":"96","scope":"static","type":"PropertyDoc"},{"id":"DQVNPb1US-AVu0QaXhknz","name":"NUMPAD1","brief":"","defaultValue":"97","scope":"static","type":"PropertyDoc"},{"id":"ZO1_xewBT1XoS2jmbND4H","name":"NUMPAD2","brief":"","defaultValue":"98","scope":"static","type":"PropertyDoc"},{"id":"G-dtOsWDmq-3IIvpvQ8KE","name":"NUMPAD3","brief":"","defaultValue":"99","scope":"static","type":"PropertyDoc"},{"id":"RUTECo3aeD512RM1sqL9D","name":"NUMPAD4","brief":"","defaultValue":"100","scope":"static","type":"PropertyDoc"},{"id":"g48V-nZ6YQ2vCqa3MFsZV","name":"NUMPAD5","brief":"","defaultValue":"101","scope":"static","type":"PropertyDoc"},{"id":"5yUb-3EYezTV9C0iQ2WN3","name":"NUMPAD6","brief":"","defaultValue":"102","scope":"static","type":"PropertyDoc"},{"id":"vLfGaUoJIqsOrxVZiVEvN","name":"NUMPAD7","brief":"","defaultValue":"103","scope":"static","type":"PropertyDoc"},{"id":"uK-UvK6E9AQbC6eCx251n","name":"NUMPAD8","brief":"","defaultValue":"104","scope":"static","type":"PropertyDoc"},{"id":"z9ZOApl_0MvaaSesx_hJT","name":"NUMPAD9","brief":"","defaultValue":"105","scope":"static","type":"PropertyDoc"},{"id":"1olxh6VL4mv2DEeRwQgpb","name":"O","brief":"","defaultValue":"79","scope":"static","type":"PropertyDoc"},{"id":"hQ493oTTLZCZFR9KNvYfr","name":"OPEN_BRACKET","brief":"","defaultValue":"219","scope":"static","type":"PropertyDoc"},{"id":"aqx7Fg6Zpe3ruUUc2WW6C","name":"P","brief":"","defaultValue":"80","scope":"static","type":"PropertyDoc"},{"id":"lnYduX6Toen51dZSDmN3E","name":"PAGE_DOWN","brief":"","defaultValue":"34","scope":"static","type":"PropertyDoc"},{"id":"L7x7Bps9cix3ickneX_3Z","name":"PAGE_UP","brief":"","defaultValue":"33","scope":"static","type":"PropertyDoc"},{"id":"ClVg52VHh91sMaxg0olF7","name":"PAUSE","brief":"","defaultValue":"19","scope":"static","type":"PropertyDoc"},{"id":"RpJowE-tdIjzRqmbF_Qvf","name":"PERIOD","brief":"","defaultValue":"190","scope":"static","type":"PropertyDoc"},{"id":"TaBqzJLnZrMtoHUCWSouu","name":"PLUS","brief":"","defaultValue":"187","scope":"static","type":"PropertyDoc"},{"id":"EOSCymQpmArDk22B1SXA-","name":"PRINT_SCREEN","brief":"","defaultValue":"42","scope":"static","type":"PropertyDoc"},{"id":"hcjU8e2Ann2aHVGC1uCxh","name":"Q","brief":"","defaultValue":"81","scope":"static","type":"PropertyDoc"},{"id":"Md9S3hKyJc0zWmkFQ8y4p","name":"R","brief":"","defaultValue":"82","scope":"static","type":"PropertyDoc"},{"id":"sKWjBc0UWlihSyCGb8P-h","name":"RIGHT","brief":"","defaultValue":"39","scope":"static","type":"PropertyDoc"},{"id":"-d9J1efE7FL3IqkMZ8JTN","name":"S","brief":"","defaultValue":"83","scope":"static","type":"PropertyDoc"},{"id":"zTGKRoeAjxqo22hAJAC70","name":"SCROLL_LOCK","brief":"","defaultValue":"145","scope":"static","type":"PropertyDoc"},{"id":"ZivMrX_dXqlVF8y79FtlY","name":"SEMICOLON","brief":"","defaultValue":"186","scope":"static","type":"PropertyDoc"},{"id":"KxOXB9c2w3xD8kYe-SxGV","name":"SHIFT","brief":"","defaultValue":"16","scope":"static","type":"PropertyDoc"},{"id":"m3T6ORMbNR4v0rMSf9nq8","name":"SINGLE_QUOTE","brief":"","defaultValue":"222","scope":"static","type":"PropertyDoc"},{"id":"TD6JEK065dQRX2l0_QteJ","name":"SPACE","brief":"","defaultValue":"32","scope":"static","type":"PropertyDoc"},{"id":"zHDXFamds9j9jOdGpHAjN","name":"SUBSTRACT","brief":"","defaultValue":"109","scope":"static","type":"PropertyDoc"},{"id":"WD-AiWFw6pNMH5rBp8MNd","name":"T","brief":"","defaultValue":"84","scope":"static","type":"PropertyDoc"},{"id":"CmdoK5TyWl_R_I6Qhz-Ch","name":"TAB","brief":"","defaultValue":"9","scope":"static","type":"PropertyDoc"},{"id":"w5xzsOewm5MGx_kcPUYyr","name":"TILDE","brief":"","defaultValue":"126","scope":"static","type":"PropertyDoc"},{"id":"RZG8JMLHHBX1XiqzOGGfv","name":"U","brief":"","defaultValue":"85","scope":"static","type":"PropertyDoc"},{"id":"JQmPZyMoq17OlHdm3TW9k","name":"UP","brief":"","defaultValue":"38","scope":"static","type":"PropertyDoc"},{"id":"_xZ-MfLCEdKTYluCgxiMy","name":"V","brief":"","defaultValue":"86","scope":"static","type":"PropertyDoc"},{"id":"qTAeosnrcoc9YuCO0FGG0","name":"W","brief":"","defaultValue":"87","scope":"static","type":"PropertyDoc"},{"id":"7NmOSMEnmvbfIZ9BXQAfS","name":"WINDOW_KEY","brief":"","defaultValue":"91","scope":"static","type":"PropertyDoc"},{"id":"0wEnXzSrxn53Xp1J4UhKE","name":"X","brief":"","defaultValue":"88","scope":"static","type":"PropertyDoc"},{"id":"7icPLUGmmaZovBKXDXA9V","name":"Y","brief":"","defaultValue":"89","scope":"static","type":"PropertyDoc"},{"id":"j2eX0lK2ESuZKom1wPnI1","name":"Z","brief":"","defaultValue":"90","scope":"static","type":"PropertyDoc"}]},{"id":"NYlhzj7knC9zC8GTpSBtR","name":"keyBoardEventTarget","brief":"","access":"public","defaultValue":"undefined","type":"PropertyDoc","description":"<p>the default target element for keyboard events (usually the window element in which the game is running)</p>"},{"id":"17b9w8Lqi4ccaf6u1EEnD","name":"locked","brief":"","access":"public","defaultValue":"false","type":"PropertyDoc","description":"<p>indicates if the pointer is currently locked</p>"},{"id":"n5e50yUPoN_b1H8HO5qOE","name":"pointer","brief":"","access":"public","type":"PropertyDoc","description":"<p>Pointer information (current position and size)</p>"},{"id":"LyqcjRM48Y7KDKmpvpoya","name":"pointerEventTarget","brief":"","access":"public","defaultValue":"undefined","type":"PropertyDoc","description":"<p>the default target element for pointer events (usually the canvas element in which the game is rendered)</p>"},{"id":"wVSRZLw5fIdIR39B3wRo-","name":"preventDefault","brief":"","access":"public","defaultValue":"true","type":"PropertyDoc","description":"<p>specify if melonJS should prevent all default browser action on registered events.</p>"},{"id":"Qa0Zypu5FuLmwL-R1M4uA","name":"setGamepadMapping","brief":"","access":"public","examples":[{"caption":"","code":"\n // A weird controller that has its axis mappings reversed\n me.input.setGamepadMapping(\"Generic USB Controller\", {\n   \"axes\" : [ 3, 2, 1, 0 ],\n   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]\n });\n\n // Mapping extra axes to analog buttons\n me.input.setGamepadMapping(\"Generic Analog Controller\", {\n   \"axes\" : [ 0, 1, 2, 3 ],\n   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ],\n\n   // Raw axis 4 is mapped to GAMEPAD.BUTTONS.FACE_1\n   // Raw axis 5 is mapped to GAMEPAD.BUTTONS.FACE_2\n   // etc...\n   // Also maps left and right triggers\n   \"analog\" : [ 4, 5, 6, 7, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],\n\n   // Normalize the value of button L2: [-1.0..1.0] => [0.0..1.0]\n   \"normalize_fn\" : function (value, axis, button) {\n     return ((button === me.input.GAMEPAD.BUTTONS.L2) ? ((value + 1) / 2) : value) || 0;\n   }\n });\n"}],"type":"PropertyDoc","description":"<p>specify a custom mapping for a specific gamepad id<br>\nsee below for the default mapping : <br></p>\n <center><img src=\"ima...","params":[{"identifier":"id","description":"<p>Gamepad id string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"mapping","description":"<p>A hash table</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"mapping.axes","description":"<p>Standard analog control stick axis locations</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.buttons","description":"<p>Standard digital button locations</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.analog","optional":true,"description":"<p>Analog axis locations for buttons</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.normalize_fn","optional":true,"description":"<p>a function that returns a normalized value in range [-1.0..1.0] for the given value, axis and button</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}]},{"id":"sQv190ue2JSHn4_a8dsQ1","name":"throttlingInterval","brief":"","access":"public","type":"PropertyDoc","description":"<p>time interval for event throttling in milliseconds<br>\ndefault value : &quot;1000/me.timer.maxfps&quot; ms<br>\nset to 0 ms..."},{"id":"kcozQloWCztVuNvBAMKpU","name":"bindGamepad","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.X, \"shoot\");\n ...\n // map the lower face button on the first gamepad to the X key\n me.input.bindGamepad(0, {type:\"buttons\", code: me.input.GAMEPAD.BUTTONS.FACE_1}, me.input.KEY.X);\n // map the left axis value on the first gamepad to the LEFT key\n me.input.bindGamepad(0, {type:\"axes\", code: me.input.GAMEPAD.AXES.LX, threshold: -0.5}, me.input.KEY.LEFT);\n"}],"type":"FunctionDoc","description":"<p>Associate a gamepad event to a keycode</p>","params":[{"identifier":"index","optional":false,"description":"<p>Gamepad index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button","optional":false,"description":"<p>Button/Axis definition</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"button.type","description":"<p>&quot;buttons&quot; or &quot;axes&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"button.code","description":"<p>button or axis code id (See {@link input.GAMEPAD.BUTTONS}, {@link input.GAMEPAD.AXES})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button.threshold","optional":true,"default":"1","description":"<p>value indicating when the axis should trigger the keycode (e.g. -0.5 or 0.5)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"keyCode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"2HsO0X_bOGpRL4B3a5riR","name":"bindKey","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.LEFT,  \"left\");\n me.input.bindKey(me.input.KEY.RIGHT, \"right\");\n me.input.bindKey(me.input.KEY.X,     \"jump\", true);\n me.input.bindKey(me.input.KEY.F1,    \"options\", true, true);\n"}],"type":"FunctionDoc","description":"<p>associate a user defined action to a keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"lock","optional":true,"default":"false","description":"<p>cancel the keypress event once read</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"preventDefault","optional":true,"default":"input.preventDefault","description":"<p>prevent default browser action</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"UWcGW9Dw97JfiaGKaC3Tb","name":"bindPointer","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.X, \"shoot\");\n // map the left button click on the X key (default if the button is not specified)\n me.input.bindPointer(me.input.KEY.X);\n // map the right button click on the X key\n me.input.bindPointer(me.input.pointer.RIGHT, me.input.KEY.X);\n"}],"type":"FunctionDoc","description":"<p>Associate a pointer event to a keycode<br>\nLeft button – 0\nMiddle button – 1\nRight button – 2</p>","params":[{"identifier":"button","optional":true,"default":"input.pointer.LEFT","description":"<p>(accordingly to W3C values : 0,1,2 for left, middle and right buttons)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"keyCode","dataType":{"tokens":[{"value":"input.KEY","kind":"canonical"},{"value":"input.KEY","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"U97N3N4Xbflv_r6nwPDc1","name":"exitPointerLock","brief":"","access":"public","type":"FunctionDoc","description":"<p>Initiates an exit from pointer lock state</p>","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5BP7n-OEbTilgm-eG8xBi","name":"getBindingKey","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the action associated with the given keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>user defined associated action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"Al3sJSHCCEssO7HQoC6xW","name":"globalToLocal","brief":"","access":"public","examples":[{"caption":"","code":"\n onMouseEvent : function (pointer) {\n    // convert the given into local (viewport) relative coordinates\n    var pos = me.input.globalToLocal(pointer.clientX, pointer.clientY);\n    // do something with pos !\n };\n"}],"type":"FunctionDoc","description":"<p>Translate the specified x and y values from the global (absolute)\ncoordinate to local (viewport) relative coordinate.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the global x coordinate to be translated.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the global y coordinate to be translated.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the translated coordinates</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>A vector object with the corresponding translated coordinates</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"KJLun9plbbBmNvgNhvceI","name":"isKeyPressed","brief":"","access":"public","examples":[{"caption":"","code":"\n if (me.input.isKeyPressed('left')) {\n    //do something\n }\n else if (me.input.isKeyPressed('right')) {\n    //do something else...\n }\n"}],"type":"FunctionDoc","description":"<p>return the key press status of the specified action</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if pressed</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QsudAGnEvkAtDF_CXrtES","name":"keyStatus","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the key status of the specified action</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>down (true) or up(false)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7cEoSYNGARa2Wd97xA3Vn","name":"registerPointerEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n  // onActivate function\n  onActivateEvent: function () {\n     // register on the 'pointerdown' event\n     me.input.registerPointerEvent('pointerdown', this, this.pointerDown.bind(this));\n  },\n\n  // pointerDown event callback\n  pointerDown: function (pointer) {\n    // do something\n    ....\n    // don\"t propagate the event to other objects\n    return false;\n  },\n"}],"see":["Pointer","{@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}"],"type":"FunctionDoc","description":"<p>allows registration of event listeners on the object target. <br>\nmelonJS will pass a me.Pointer object to the defined cal...","params":[{"identifier":"eventType","optional":false,"description":"<p>The event type for which the object is registering <br>\nmelonJS currently supports: <br></p>\n <ul>\n   <li><code>\"pointermo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"region","optional":false,"description":"<p>a shape representing the region to register on</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}},{"identifier":"callback","optional":false,"description":"<p>methods to be called when the event occurs.\nReturning <code>false</code> from the defined callback will prevent the event ...","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"B2JvVQqLnqIKmAFAcwn1Z","name":"releaseAllPointerEvents","brief":"","access":"public","examples":[{"caption":"","code":"\n // release all registered event on the\n me.input.releaseAllPointerEvents(this);\n"}],"type":"FunctionDoc","description":"<p>allows the removal of all registered event listeners from the object target.</p>","params":[{"identifier":"region","optional":false,"description":"<p>the registered region to release event from</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[]},{"id":"QLKKf2FVeZUjT0yV5R-xa","name":"releasePointerEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n // release the registered region on the 'pointerdown' event\n me.input.releasePointerEvent('pointerdown', this);\n"}],"see":["{@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}"],"type":"FunctionDoc","description":"<p>allows the removal of event listeners from the object target.</p>","params":[{"identifier":"eventType","optional":false,"description":"<p>The event type for which the object was registered. See {@link input.registerPointerEvent}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"region","optional":false,"description":"<p>the registered region to release for this event</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}},{"identifier":"callback","optional":true,"default":"\"all\"","description":"<p>if specified unregister the event only for the specific callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"XMeqM7fnrQWHdc7gVfll9","name":"requestPointerLock","brief":"","access":"public","examples":[{"caption":"","code":"\n // register on the pointer lock change event\n event.on(event.POINTERLOCKCHANGE, (locked)=> {\n     console.log(\"pointer lock: \" + locked);\n });\n // request for pointer lock\n me.input.requestPointerLock();\n"}],"type":"FunctionDoc","description":"<p>request for the pointer to be locked on the parent DOM element.\n(Must be called in a click event or an event that requires...","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XcI2FIX-i9bKdbQIOb1NQ","name":"setGamepadDeadzone","brief":"","access":"public","type":"FunctionDoc","description":"<p>Set deadzone for analog gamepad inputs<br>\nThe default deadzone is 0.1 (10%) Analog values less than this will be ignored</p>","params":[{"identifier":"value","optional":false,"description":"<p>Deadzone value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"16is4NcdqqC6__rZv9pJG","name":"setTouchAction","brief":"","access":"public","see":["https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action"],"type":"FunctionDoc","description":"<p>enable/disable all gestures on the given element.<br>\nby default melonJS will disable browser handling of all panning and ...","params":[{"identifier":"element","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"value","optional":true,"default":"\"none\"","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"n4nYCC_Ri7gtxHmB5lyYL","name":"triggerKeyEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n // trigger a key press\n me.input.triggerKeyEvent(me.input.KEY.LEFT, true);\n"}],"type":"FunctionDoc","description":"<p>trigger the specified key (simulated) event <br></p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"status","optional":true,"default":"false","description":"<p>true to trigger a key down event, or false for key up event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"mouseButton","optional":true,"description":"<p>the mouse button to trigger</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wj1Onjen4vUJrJx9IBNzE","name":"unbindGamepad","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindGamepad(0, me.input.GAMEPAD.BUTTONS.FACE_1);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"index","optional":false,"description":"<p>Gamepad index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button","optional":false,"description":"<p>(See {@link input.GAMEPAD.BUTTONS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"T-oXyZwkxXfYvtyimFE4S","name":"unbindKey","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindKey(me.input.KEY.LEFT);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lNJYy6LvkahtCg4Wr2qcc","name":"unbindPointer","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindPointer(me.input.pointer.LEFT);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"button","optional":true,"default":"input.pointer.LEFT","description":"<p>(accordingly to W3C values : 0,1,2 for left, middle and right buttons)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"RzgseBQzvwaNaIndDK97E","name":"unlockKey","brief":"","access":"public","examples":[{"caption":"","code":"\n // Unlock jump when touching the ground\n if (!this.falling && !this.jumping) {\n     me.input.unlockKey(\"jump\");\n }\n"}],"type":"FunctionDoc","description":"<p>unlock a key manually</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]}]},{"id":"AfxTL4ASXOdMxp0fQSDph","name":"level","brief":"","type":"NSDoc","description":"<p>a level manager. once ressources loaded, the level manager contains all references of defined levels.</p>","members":[{"id":"9EkDVbsEwXF_eZtva0zS3","name":"add","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>add a level into the game manager (usually called by the preloader)</p>","params":[{"identifier":"format","optional":false,"description":"<p>level format (only &quot;tmx&quot; supported)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"levelId","optional":false,"description":"<p>the level id (or name)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"callback","optional":true,"description":"<p>a function to be called once the level is loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>true if the level was loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"uRCOKEOcpoCQD9O90rwau","name":"getCurrentLevel","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the current level definition.\nfor a reference to the live instantiated level,\nrather use the container in which it ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}]},{"id":"c8ZXOgWWta4O8gKzWSrpB","name":"getCurrentLevelId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the current level id<br></p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"Y-eYP4DAwtVeAudM-VObZ","name":"levelCount","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the amount of level preloaded</p>","params":[],"returns":[{"description":"<p>the amount of level preloaded</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"pUEbJyRjvqS3uhEDtCWVR","name":"load","brief":"","access":"public","examples":[{"caption":"","code":"\n // the game assets to be be preloaded\n // TMX maps\n var resources = [\n     {name: \"a4_level1\",   type: \"tmx\",   src: \"data/level/a4_level1.tmx\"},\n     {name: \"a4_level2\",   type: \"tmx\",   src: \"data/level/a4_level2.tmx\"},\n     {name: \"a4_level3\",   type: \"tmx\",   src: \"data/level/a4_level3.tmx\"},\n     // ...\n ];\n\n // ...\n\n // load a level into the game world\n me.level.load(\"a4_level1\");\n ...\n ...\n // load a level into a specific container\n var levelContainer = new me.Container();\n me.level.load(\"a4_level2\", {container:levelContainer});\n // add a simple transformation\n levelContainer.currentTransform.translate(levelContainer.width / 2, levelContainer.height / 2 );\n levelContainer.currentTransform.rotate(0.05);\n levelContainer.currentTransform.translate(-levelContainer.width / 2, -levelContainer.height / 2 );\n // add it to the game world\n me.game.world.addChild(levelContainer);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>load a level into the game manager<br>\n(will also create all level defined entities, etc..)</p>","params":[{"identifier":"levelId","optional":false,"description":"<p>level id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"ame.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.setViewportBounds","optional":true,"default":"true","description":"<p>if true, set the viewport bounds to the map size</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"L_W4VgkRicIAuTv3WVCv1","name":"next","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>load the next level</p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the next level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WTaFiFIhS73AZJiWFQAaO","name":"previous","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>load the previous level<br></p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the previous level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kWzOUlLWFPZ5oUXjP024s","name":"reload","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>reload the current level</p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>the current level</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]}]},{"id":"VRnpqM2iFruhf40fXMJuX","name":"loader","brief":"","type":"NSDoc","description":"<p>a small class to manage loading of stuff and manage resources</p>","members":[{"id":"simssmIdtVIqFIiZ5YSZK","name":"crossOrigin","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n  // allow for cross-origin texture loading in WebGL\n me.loader.crossOrigin = \"anonymous\";\n\n // set all ressources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes"],"type":"PropertyDoc","description":"<p>crossOrigin attribute to configure the CORS requests for Image data element.\nBy default (that is, when the attribute is no..."},{"id":"uOi3U6VH2O4Oc0tkWTKrZ","name":"onload","brief":"","access":"public","examples":[{"caption":"","code":"\n // set a callback when everything is loaded\n me.loader.onload = this.loaded.bind(this);\n"}],"scope":"static","type":"PropertyDoc","description":"<p>onload callback</p>"},{"id":"SUUhVrU6x9uprrXX2pAjE","name":"onProgress","brief":"","access":"public","examples":[{"caption":"","code":"\n // set a callback for progress notification\n me.loader.onProgress = this.updateProgress.bind(this);\n"}],"scope":"static","type":"PropertyDoc","description":"<p>onProgress callback<br>\neach time a resource is loaded, the loader will fire the specified function,\ngiving the actual pro..."},{"id":"4Alpfka1--dPtWB3i7YkP","name":"withCredentials","brief":"","access":"public","defaultValue":"false","examples":[{"caption":"","code":"\n  // enable withCredentials\n me.loader.withCredentials = true;\n\n // set all ressources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials"],"type":"PropertyDoc","description":"<p>indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies,\nauthorizatio..."},{"id":"vQsXXYomVXg7wCD2x6ZeJ","name":"getBinary","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified Binary object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the binary object (&quot;ymTrack&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"FbBmZAOYBNXpeXOd92_pf","name":"getImage","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified Image Object</p>","params":[{"identifier":"image","optional":false,"description":"<p>name of the Image element (&quot;tileset-platformer&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"}],"template":"%1"}}]},{"id":"r6nyU_aKscRrg2VW7fQRz","name":"getJSON","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified JSON Object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the json file to load</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"yr6q3pGaRaFOE_DWjWZkC","name":"getTMX","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified TMX/TSX object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the tmx/tsx element (&quot;map1&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"Uk3K8tr4pRwy-rfmYUh4q","name":"load","brief":"","access":"public","examples":[{"caption":"","code":"\n // load an image asset\n me.loader.load({name: \"avatar\",  type:\"image\",  src: \"data/avatar.png\"}, this.onload.bind(this), this.onerror.bind(this));\n\n // start loading music\n me.loader.load({\n     name   : \"bgmusic\",\n     type   : \"audio\",\n     src    : \"data/audio/\"\n }, function () {\n     me.audio.play(\"bgmusic\");\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Load a single resource (to be used if you need to load additional resource during the game)</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;tmx&quot;, &quot;tsx&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.src","description":"<p>path and/or file name of the resource (for audio assets only the path is required)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.stream","optional":true,"description":"<p>Set to true to force HTML5 Audio, which allows not to wait for large file to be downloaded before playing.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onload","optional":false,"description":"<p>function to be called when the resource is loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"onerror","optional":false,"description":"<p>function to be called in case of error</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>the amount of corresponding resource to be preloaded</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"0WH-e4FCPDqeUSKdHwL6b","name":"preload","brief":"","access":"public","examples":[{"caption":"","code":"\n game_resources = [\n   // PNG tileset\n   {name: \"tileset-platformer\", type: \"image\",  src: \"data/map/tileset.png\"},\n   // PNG packed texture\n   {name: \"texture\", type:\"image\", src: \"data/gfx/texture.png\"}\n   // TSX file\n   {name: \"meta_tiles\", type: \"tsx\", src: \"data/map/meta_tiles.tsx\"},\n   // TMX level (XML & JSON)\n   {name: \"map1\", type: \"tmx\", src: \"data/map/map1.json\"},\n   {name: \"map2\", type: \"tmx\", src: \"data/map/map2.tmx\"},\n   {name: \"map3\", type: \"tmx\", format: \"json\", data: {\"height\":15,\"layers\":[...],\"tilewidth\":32,\"version\":1,\"width\":20}},\n   {name: \"map4\", type: \"tmx\", format: \"xml\", data: {xml representation of tmx}},\n   // audio resources\n   {name: \"bgmusic\", type: \"audio\",  src: \"data/audio/\"},\n   {name: \"cling\",   type: \"audio\",  src: \"data/audio/\"},\n   // binary file\n   {name: \"ymTrack\", type: \"binary\", src: \"data/audio/main.ym\"},\n   // JSON file (used for texturePacker)\n   {name: \"texture\", type: \"json\", src: \"data/gfx/texture.json\"},\n   // JavaScript file\n   {name: \"plugin\", type: \"js\", src: \"data/js/plugin.js\"},\n   // Font Face\n   { name: \"'kenpixel'\", type: \"fontface\",  src: \"url('data/font/kenvector_future.woff2')\" }\n ];\n ...\n // set all resources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set all the specified game resources to be preloaded.</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;,&quot;js&quot;, &quot;tmx&quot;, &quot;tsx&quot;, &qu...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.src","description":"<p>path and/or file name of the resource (for audio assets only the path is required)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.stream","optional":true,"description":"<p>Set to true to force HTML5 Audio, which allows not to wait for large file to be downloaded before playing.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onload","optional":true,"default":"loader.onload","description":"<p>function to be called when all resources are loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"switchToLoadState","optional":true,"default":"true","description":"<p>automatically switch to the loading screen</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"FURUzm51LFZoYhEi_MtxE","name":"setBaseURL","brief":"","access":"public","examples":[{"caption":"","code":"\n // change the base URL relative address for audio assets\n me.loader.setBaseURL(\"audio\", \"data/audio/\");\n // change the base URL absolute address for all object types\n me.loader.setBaseURL(\"*\", \"http://myurl.com/\")\n"}],"scope":"instance","type":"MethodDoc","description":"<p>change the default baseURL for the given asset type.<br>\n(this will prepend the asset URL and must finish with a '/')</p>","params":[{"identifier":"type","optional":false,"description":"<p>&quot;*&quot;, &quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;js&quot;, &quot;tmx&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"url","optional":true,"default":"\"./\"","description":"<p>default base URL</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"2LWNQcfRk4gHfwKFGcXqU","name":"unload","brief":"","access":"public","examples":[{"caption":"","code":"me.loader.unload({name: \"avatar\",  type:\"image\"});\n"}],"scope":"instance","type":"MethodDoc","description":"<p>unload specified resource to free memory</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;tmx&quot;, &quot;tsx&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if unloaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yvadkQDCKVjPkcgq0hNbk","name":"unloadAll","brief":"","access":"public","examples":[{"caption":"","code":"me.loader.unloadAll();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>unload all resources to free memory</p>","params":[],"returns":[]}]},{"id":"1SZJA7ruGInxURlhu6CRa","name":"Math","brief":"","type":"NSDoc","description":"<p>a collection of math utility functions</p>","members":[{"id":"6eYnFfLhggAXNFH0SNT0l","name":"DEG_TO_RAD","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant to convert from degrees to radians</p>"},{"id":"lFUzSB1KXbz9WUOjID_L1","name":"EPSILON","brief":"","access":"public","defaultValue":"0.000001","readonly":true,"type":"PropertyDoc","description":"<p>the difference between 1 and the smallest floating point number greater than 1</p>"},{"id":"a7l7EUz_y19C5HaGde_17","name":"ETA","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant equals to half pi</p>"},{"id":"e04VSTlYmHBiU59LZcg3S","name":"RAD_TO_DEG","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant to convert from radians to degrees</p>"},{"id":"fkvx-qOVmAeWZQwUd1MBQ","name":"TAU","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant equals to 2 times pi</p>"},{"id":"dnKukznOD7huV37dgl8hc","name":"clamp","brief":"","access":"public","type":"FunctionDoc","description":"<p>clamp the given value</p>","params":[{"identifier":"val","optional":false,"description":"<p>the value to clamp</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"low","optional":false,"description":"<p>lower limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"description":"<p>higher limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>clamped value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"GTQouQ-evv_XMGXcktYSV","name":"degToRad","brief":"","access":"public","examples":[{"caption":"","code":"\n // convert a specific angle\n me.Math.degToRad(60); // return 1.0471...\n"}],"type":"FunctionDoc","description":"<p>Converts an angle in degrees to an angle in radians</p>","params":[{"identifier":"angle","optional":false,"description":"<p>angle in degrees</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Ie4whid3PLeEu68XcKJ1H","name":"isPowerOfTwo","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given value is a power of two</p>","params":[{"identifier":"val","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KXuG_sUiY0xp17z-Z3_Xs","name":"nextPowerOfTwo","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the next power of two for the given value</p>","params":[{"identifier":"val","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ACSJKu6ZH3D5Dtf9nVCOg","name":"radToDeg","brief":"","access":"public","examples":[{"caption":"","code":"\n // convert a specific angle\n me.Math.radToDeg(1.0471975511965976); // return 60\n"}],"type":"FunctionDoc","description":"<p>Converts an angle in radians to an angle in degrees.</p>","params":[{"identifier":"radians","optional":false,"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding angle in degrees</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"xUrpxT_nwD-z9sv-VsNsl","name":"random","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.random(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a random integer between min (included) and max (excluded)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2auwgoilTG4NaDFvP1Qlm","name":"randomFloat","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.randomFloat(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a random float between min, max (exclusive)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"fthrUDOxGKY1nTPTiypLM","name":"round","brief":"","access":"public","examples":[{"caption":"","code":"\n // round a specific value to 2 digits\n me.Math.round(10.33333, 2); // return 10.33\n"}],"type":"FunctionDoc","description":"<p>round a value to the specified number of digit</p>","params":[{"identifier":"num","optional":false,"description":"<p>value to be rounded.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dec","optional":true,"default":"0","description":"<p>number of decimal digit to be rounded to.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>rounded value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"bIwvnXztxrxxIH_mKrheH","name":"toBeCloseTo","brief":"","access":"public","examples":[{"caption":"","code":"\n // test if the given value is close to 10\n if (me.Math.toBeCloseTo(10, value)) {\n     // do something\n }\n"}],"type":"FunctionDoc","description":"<p>check if the given value is close to the expected one</p>","params":[{"identifier":"expected","optional":false,"description":"<p>value to be compared with.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"actual","optional":false,"description":"<p>actual value to compare</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"precision","optional":true,"default":"2","description":"<p>float precision for the comparison</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>if close to</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Pzw0uXBZP5g21a5UU9y8-","name":"weightedRandom","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.weightedRandom(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a weighted random between min, max (exclusive)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"Z3npULrjQ16NNysB8gwkS","name":"ParticleEmitterSettings","brief":"","readonly":true,"see":["ParticleEmitter"],"type":"NSDoc","description":"<p>ParticleEmitterSettings contains the default settings for ParticleEmitter</p>","members":[{"id":"vw5Kt7ENL4XM-Hzu4n2wx","name":"angle","brief":"","access":"public","defaultValue":"Math.PI / 2","scope":"static","type":"PropertyDoc","description":"<p>Start angle for particle launch in Radians</p>"},{"id":"EFP-5ye9ATwZNdXFMndhI","name":"angleVariation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Variation in the start angle for particle launch in Radians.</p>"},{"id":"0Vv-HZszQ6hmIrnmC7Wtj","name":"blendMode","brief":"","access":"public","defaultValue":"normal","scope":"static","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied when rendering particles.\n(note: this will superseed the <code>textureAdditive</code> setting..."},{"id":"k5FuIPBDrB1yq_koOKzHx","name":"duration","brief":"","access":"public","defaultValue":"Infinity","scope":"static","type":"PropertyDoc","description":"<p>Duration that the emitter releases particles in ms (used only if emitter is Stream).\nAfter this period, the emitter stop t..."},{"id":"gwOkHaLbuGd-CHhgJcJGQ","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Render particles in screen space.</p>"},{"id":"QyULDZHBKriHJAibyVdTu","name":"followTrajectory","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Update the rotation of particle in accordance the particle trajectory.<br>\nThe particle sprite should aim at zero angle (d..."},{"id":"NdQVKqJcMlZeqfiZHcIPQ","name":"framesToSkip","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Skip n frames after updating the particle system once.\nThis can be used to reduce the performance impact of emitters with ..."},{"id":"01DYku9qonVjahXC1jRUt","name":"frequency","brief":"","access":"public","defaultValue":"100","scope":"static","type":"PropertyDoc","description":"<p>How often a particle is emitted in ms (used only if emitter is a Stream).</p>"},{"id":"dMjUBPL_-ItljGaF0OWaz","name":"gravity","brief":"","access":"public","defaultValue":"0","scope":"static","see":["game.world.gravity"],"type":"PropertyDoc","description":"<p>Vertical force (Gravity) for each particle</p>"},{"id":"0pELut8CAwOZ6zuBdPs3a","name":"height","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Height of the particle spawn area</p>"},{"id":"Gjm1Wd0aF3Eb8XNbryQ8l","name":"image","brief":"","access":"public","defaultValue":"undefined","scope":"static","see":["ParticleEmitterSettings.textureSize"],"type":"PropertyDoc","description":"<p>image used for particles texture\n(by default melonJS will create an white 8x8 texture image)</p>"},{"id":"W4wnUQIgpUlTQ6Jp0edeq","name":"maxEndScale","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Maximum end scale ratio for particles</p>"},{"id":"kTLpAnOdeoHo1MHKazEZw","name":"maxLife","brief":"","access":"public","defaultValue":"3000","scope":"static","type":"PropertyDoc","description":"<p>Maximum time each particle lives once it is emitted in ms.</p>"},{"id":"sYba1K3y9INUNJlC5oJ0l","name":"maxParticles","brief":"","access":"public","defaultValue":"10","scope":"static","type":"PropertyDoc","description":"<p>Maximum number of particles launched each time in this emitter (used only if emitter is Stream).</p>"},{"id":"mnyQNXuN1Cy4zGDKkqWLm","name":"maxRotation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Maximum start rotation for particles sprites in Radians</p>"},{"id":"35SjMFSqa5Je1kvWYrwLx","name":"maxStartScale","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Maximum start scale ratio for particles (1 = no scaling)</p>"},{"id":"5fpGW6DhLE6ST_S73MFE5","name":"minEndScale","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Minimum end scale ratio for particles</p>"},{"id":"5ifA67RDz9DgAv-7GLg_n","name":"minLife","brief":"","access":"public","defaultValue":"1000","scope":"static","type":"PropertyDoc","description":"<p>Minimum time each particle lives once it is emitted in ms.</p>"},{"id":"w2vE5o8RJu4TBJ9sNESRu","name":"minRotation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Minimum start rotation for particles sprites in Radians</p>"},{"id":"tCYL5bMo_xjwaOCadeBMD","name":"minStartScale","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Minimum start scale ratio for particles (1 = no scaling)</p>"},{"id":"bIWUtnE2c1ZfVhEWvltgv","name":"onlyInViewport","brief":"","access":"public","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Update particles only in the viewport, remove it when out of viewport.</p>"},{"id":"dAwX5L1Tv0Hns9ls0hE7a","name":"speed","brief":"","access":"public","defaultValue":"2","scope":"static","type":"PropertyDoc","description":"<p>Start speed of particles.<br></p>"},{"id":"Zbg8s6w1nooU1bSiZap74","name":"speedVariation","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Variation in the start speed of particles</p>"},{"id":"vRXZdhdu2dkj36DHwqcgt","name":"textureAdditive","brief":"","access":"public","defaultValue":"false","scope":"static","see":["ParticleEmitterSettings.blendMode"],"type":"PropertyDoc","description":"<p>Enable the Texture Additive by composite operation (&quot;additive&quot; blendMode)</p>"},{"id":"Nj3CbF8Gl3b6f6ejExnog","name":"textureSize","brief":"","access":"public","defaultValue":"8","scope":"static","see":["ParticleEmitterSettings.image"],"type":"PropertyDoc","description":"<p>default texture size used for particles if no image is specified\n(by default melonJS will create an white 8x8 texture imag..."},{"id":"OlUlny8tIjXok7fR9-KLG","name":"tint","brief":"","access":"public","defaultValue":"\"#fff\"","scope":"static","type":"PropertyDoc","description":"<p>tint to be applied to particles</p>"},{"id":"6bz3oj8dAVobW-yD7FV6j","name":"totalParticles","brief":"","access":"public","defaultValue":"50","scope":"static","type":"PropertyDoc","description":"<p>Total number of particles in the emitter</p>"},{"id":"qLUHO57dThHrJb0lrH2YW","name":"width","brief":"","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Width of the particle spawn area.</p>"},{"id":"ax15zdBm6W7Nby7ylJnP-","name":"wind","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Horizontal force (like a Wind) for each particle</p>"}]},{"id":"4LDu2zfZQTs_TnLN1SGoh","name":"plugin","brief":"","type":"NSDoc","members":[{"id":"ilRpGSOJ7Ya3xovNNHXJQ","name":"Base","brief":"","scope":"static","see":["plugin"],"type":"ClassDoc","description":"<p>a base Object for plugin <br>\nplugin must be installed using the register function</p>","members":[{"id":"qWaAm67ErlQHEUR89t11l","name":"version","brief":"","access":"public","defaultValue":"\"__VERSION__\"","scope":"instance","type":"PropertyDoc","description":"<p>define the minimum required version of melonJS<br>\nthis can be overridden by the plugin</p>"},{"id":"U0E5xj4pqjCILTS_wDUUg","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[]}]},{"id":"cGnDeKHfVH7tfKAD2NDLR","name":"patch","brief":"","access":"public","examples":[{"caption":"","code":"\n // redefine the me.game.update function with a new one\n me.plugin.patch(me.game, \"update\", function () {\n   // display something in the console\n   console.log(\"duh\");\n   // call the original me.game.update function\n   this._patched();\n });\n"}],"scope":"static","type":"MethodDoc","description":"<p>patch a melonJS function</p>","params":[{"identifier":"proto","optional":false,"description":"<p>target object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"name","optional":false,"description":"<p>target function</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"fn","optional":false,"description":"<p>replacement function</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"1s4DJSL3yiP5NinIBnxid","name":"register","brief":"","access":"public","examples":[{"caption":"","code":"\n // register a new plugin\n me.plugin.register(TestPlugin, \"testPlugin\");\n // the plugin then also become available\n // under then me.plugins namespace\n me.plugins.testPlugin.myfunction ();\n"}],"scope":"static","see":["Base"],"type":"MethodDoc","description":"<p>Register a plugin.</p>","params":[{"identifier":"pluginObj","optional":false,"description":"<p>Plugin object to instantiate and register</p>","dataType":{"tokens":[{"value":"plugin.Base","kind":"canonical"},{"value":"plugin.Base","kind":"link"}],"template":"%1"}},{"identifier":"name","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>all extra parameters will be passed to the plugin constructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]}]},{"id":"CIpgVKnRAlPEDmsZwBowy","name":"plugins","brief":"","see":["plugin.register"],"type":"NSDoc","description":"<p>This namespace is a container for all registered plugins.</p>"},{"id":"oGZa7mXdAwklBJMCLrQfF","name":"pool","brief":"","examples":[{"caption":"","code":"\n // register our bullet object into the object pool\n pool.register(\"bullet\", BulletEntity, true);\n // ...\n // when we need to manually create a new bullet:\n var bullet = pool.pull(\"bullet\", x, y, direction, velocity);\n // ...\n // when we want to destroy existing object, the remove\n // function will ensure the object can then be reallocated later\n game.world.removeChild(bullet);\n"}],"see":["ObjectPool"],"type":"NSDoc","description":"<p>a default global ObjectPool instance</p>"},{"id":"_gAOZsvhuo22k-1ZduZLI","name":"save","brief":"","examples":[{"caption":"","code":"\n // Initialize \"score\" and \"lives\" with default values\n // This loads the properties from localStorage if they exist, else it sets the given defaults\n me.save.add({ score : 0, lives : 3 });\n\n // Print all\n // On first load, this prints { score : 0, lives : 3 }\n // On further reloads, it prints { score : 31337, lives : 3, complexObject : ... }\n // Because the following changes will be saved to localStorage\n console.log(JSON.stringify(me.save));\n\n // Save score\n me.save.score = 31337;\n\n // Also supports complex objects thanks to the JSON backend\n me.save.add({ complexObject : {} })\n me.save.complexObject = { a : \"b\", c : [ 1, 2, 3, \"d\" ], e : { f : [{}] } };\n\n // WARNING: Do not set any child properties of complex objects directly!\n // Changes made that way will not save. Always set the entire object value at once.\n // If you cannot live with this limitation, there's a workaround:\n me.save.complexObject.c.push(\"foo\"); // Modify a child property\n me.save.complexObject = me.save.complexObject; // Save the entire object!\n\n // Remove \"lives\" from localStorage\n me.save.remove(\"lives\");"}],"type":"NSDoc","description":"<p>allow to access and manage the device localStorage</p>","members":[{"id":"4QJPKyRwtjFkYWswI7-2J","name":"add","brief":"","examples":[{"caption":"","code":"\n // Initialize \"score\" and \"lives\" with default values\n me.save.add({ score : 0, lives : 3 });\n // get or set the value through me.save\n me.save.score = 1000;\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Add new keys to localStorage and set them to the given default values if they do not exist</p>","params":[{"identifier":"props","optional":false,"description":"<p>key and corresponding values</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"vO9JX_ZNjktXPDas7XEt_","name":"remove","brief":"","examples":[{"caption":"","code":"\n // Remove the \"score\" key from localStorage\n me.save.remove(\"score\");\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Remove a key from localStorage</p>","params":[{"identifier":"key","optional":false,"description":"<p>key to be removed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]}]},{"id":"hv8EB1hicXSOld1YVzJTd","name":"state","brief":"","type":"NSDoc","description":"<p>a State Manager (state machine)</p>","members":[{"id":"jQnDddzcWD9L9k8-5woib","name":"CREDITS","brief":"","defaultValue":"7","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Credits Stage</p>"},{"id":"LjTaRRwletwalfvCWXHV8","name":"GAME_END","brief":"","defaultValue":"5","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Game End Stage</p>"},{"id":"MiUM3hXT4Uyp_O978FxyN","name":"GAMEOVER","brief":"","defaultValue":"4","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Game Over Stage</p>"},{"id":"2Z1X_83Bm4q5z7voKbosZ","name":"LOADING","brief":"","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Loading Stage</p>"},{"id":"Jyym5qsCekb_x_XhZA-w6","name":"MENU","brief":"","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Menu Stage</p>"},{"id":"m98FVEu10-bzl03SB0oOq","name":"PLAY","brief":"","defaultValue":"3","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Play Stage</p>"},{"id":"rG7IedApXDD6nJwif1wPI","name":"READY","brief":"","defaultValue":"2","scope":"static","type":"PropertyDoc","description":"<p>default state ID for &quot;Ready&quot; Stage</p>"},{"id":"eVOYXWvedYWNQFnXULFMn","name":"SCORE","brief":"","defaultValue":"6","scope":"static","type":"PropertyDoc","description":"<p>default state ID for High Score Stage</p>"},{"id":"tU-zAfnwSKPcEp1vih7FS","name":"SETTINGS","brief":"","defaultValue":"8","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Settings Stage</p>"},{"id":"665bKnuehUyfYQnuuchMi","name":"SETTINGS","brief":"","defaultValue":"9","scope":"static","type":"PropertyDoc","description":"<p>default state ID for the default Stage\n(the default stage is the one running as soon as melonJS is started)</p>"},{"id":"nCEQvqz0G799kTLldBeAb","name":"USER","brief":"","defaultValue":"100","examples":[{"caption":"","code":"\n var STATE_INFO = me.state.USER + 0;\n var STATE_WARN = me.state.USER + 1;\n var STATE_ERROR = me.state.USER + 2;\n var STATE_CUTSCENE = me.state.USER + 3;\n"}],"scope":"static","type":"PropertyDoc","description":"<p>default state ID for user defined constants<br></p>"},{"id":"KstmUCAyf8MF0giGEwboL","name":"change","brief":"","access":"public","examples":[{"caption":"","code":"\n // The onResetEvent method on the play screen will receive two args:\n // \"level_1\" and the number 3\n me.state.change(me.state.PLAY, \"level_1\", 3);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>change the game/app state</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"forceChange","optional":false,"description":"<p>if true the state will be changed immediately</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>extra arguments to be passed to the reset functions</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"pNN8VWlkg1c7rNysvJBWA","name":"current","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the current stage<br>\nuseful to call a object specific method</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}}]},{"id":"XY3uU1nv9YGcGqsvbP2iS","name":"isCurrent","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the specified state is the current one</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the specified state is the current one</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zl6laXf2YyTPzLOpkp87I","name":"isPaused","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the pause state of the state manager</p>","params":[],"returns":[{"description":"<p>true if the game is paused</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"sextK4d_M1rjfWNy89uPd","name":"isRunning","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the running state of the state manager</p>","params":[],"returns":[{"description":"<p>true if a &quot;process is running&quot;</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"aoqtJK3Efpcond-8CDVJA","name":"pause","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>pause the current stage</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>pause current music track on screen pause</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"IxMb6Y4E0yDDW9UsDc-rk","name":"restart","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Restart the current stage from a full stop.</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>resume current music track on screen resume</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"4bGpEpsdMtJbrSdXl3deG","name":"resume","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>resume the current stage</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>resume current music track on screen resume</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"qsAe43OY2DsBOlIWoksD8","name":"set","brief":"","access":"public","examples":[{"caption":"","code":"\n class MenuButton extends me.GUI_Object {\n     onClick() {\n         // Change to the PLAY state when the button is clicked\n         me.state.change(me.state.PLAY);\n         return true;\n     }\n };\n\n class MenuScreen extends me.Stage {\n     onResetEvent() {\n         // Load background image\n         me.game.world.addChild(\n             new me.ImageLayer(0, 0, {\n                 image : \"bg\",\n                 z: 0 // z-index\n             }\n         );\n\n         // Add a button\n         me.game.world.addChild(\n             new MenuButton(350, 200, { \"image\" : \"start\" }),\n             1 // z-index\n         );\n\n         // Play music\n         me.audio.playTrack(\"menu\");\n     }\n\n     onDestroyEvent() {\n         // Stop music\n         me.audio.stopTrack();\n     }\n };\n\n me.state.set(me.state.MENU, new MenuScreen());\n"}],"scope":"instance","type":"MethodDoc","description":"<p>associate the specified state with a Stage</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"stage","optional":false,"description":"<p>Instantiated Stage to associate with state ID</p>","dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}},{"identifier":"start ","optional":true,"default":" false","description":"<p>if true the state will be changed immediately after adding it.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"mk6v90hx7xdhThMNVuAWS","name":"setTransition","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>enable/disable transition for a specific state (by default enabled for all)</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":false,"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"MD-8ONXICsN183x8_AvPK","name":"stop","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Stop the current stage.</p>","params":[{"identifier":"pauseTrack","optional":true,"default":"false","description":"<p>pause current track on screen stop.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"hZEmIZesvwYkkWVpJFgtM","name":"transition","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>specify a global transition effect</p>","params":[{"identifier":"effect","optional":false,"description":"<p>(only &quot;fade&quot; is supported for now)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"mBFcp1RrbIJ556dGwiIJH","name":"timer","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" after 1000ms\n timer.setTimeout(myFunction, 1000);\n // set a timer to call \"myFunction\" after 1000ms (respecting the pause state) and passing param1 and param2\n timer.setTimeout(myFunction, 1000, true, param1, param2);\n // set a timer to call \"myFunction\" every 1000ms\n timer.setInterval(myFunction, 1000);\n // set a timer to call \"myFunction\" every 1000ms (respecting the pause state) and passing param1 and param2\n timer.setInterval(myFunction, 1000, true, param1, param2);\n"}],"readonly":true,"see":["Timer"],"type":"NSDoc","description":"<p>the default global Timer instance</p>","members":[{"id":"uWh5gzbX-dNGD4FWB2biS","name":"fps","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Last measured fps rate.<br/>\nThis feature is disabled by default, unless the debugPanel is enabled/visible</p>"},{"id":"HnE5snplokGJ5MabkYl0q","name":"interpolation","brief":"","defaultValue":"false","scope":"instance","see":["timer.tick"],"type":"PropertyDoc","description":"<p>Enable/disable frame interpolation</p>"},{"id":"WQUVwsaxgUBpoLt-ACz5F","name":"maxfps","brief":"","access":"public","defaultValue":"60","scope":"instance","see":["timer.tick"],"type":"PropertyDoc","description":"<p>Set the maximum target display frame per second</p>"},{"id":"1sMdCwcrUya4FowdzOwNa","name":"tick","brief":"","access":"public","defaultValue":"1","scope":"instance","see":["timer.interpolation"],"type":"PropertyDoc","description":"<p>Last game tick value.<br/>\nUse this value to scale velocities during frame drops due to slow\nhardware or when setting an F..."},{"id":"l8W-LfZNAVO9Y1lEVRUGR","name":"clearInterval","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the Interval set by me.timer.setInterval().</p>","params":[{"identifier":"intervalID","optional":false,"description":"<p>ID of the interval to be cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"uyQKcHP8BXsfW6nWKkg_b","name":"clearTimeout","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the delay set by me.timer.setTimeout().</p>","params":[{"identifier":"timeoutID","optional":false,"description":"<p>ID of the timeout to be cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"K9z-IYZ_dHwxCVMkPXecJ","name":"getDelta","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return elapsed time in milliseconds since the last update</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"VzRqL0S1JUJJGmhxW0OPI","name":"getTime","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the current timestamp in milliseconds <br>\nsince the game has started or since linux epoch (based on browser suppor...","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"GCvUTrtrUMWdmA80406Kl","name":"setInterval","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" every 1000ms\n me.timer.setInterval(myFunction, 1000);\n // set a timer to call \"myFunction\" every 1000ms (respecting the pause state) and passing param1 and param2\n me.timer.setInterval(myFunction, 1000, true, param1, param2);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Calls a function continously at the specified interval.  See setTimeout to call function a single time.</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to execute</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>the number of milliseconds (thousandths of a second) on how often to execute the function</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pauseable","optional":true,"default":"true","description":"<p>respects the pause state of the engine.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>optional parameters which are passed through to the function specified by fn once the timer expires.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>The numerical ID of the timer, which can be used later with me.timer.clearInterval().</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"q0rNdywVx31TnTKXNk55e","name":"setTimeout","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" after 1000ms\n me.timer.setTimeout(myFunction, 1000);\n // set a timer to call \"myFunction\" after 1000ms (respecting the pause state) and passing param1 and param2\n me.timer.setTimeout(myFunction, 1000, true, param1, param2);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Calls a function once after a specified delay. See me.timer.setInterval to repeativly call a function.</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function you want to execute after delay milliseconds.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>the number of milliseconds (thousandths of a second) that the function call should be delayed by.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pauseable","optional":true,"default":"true","description":"<p>respects the pause state of the engine.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>optional parameters which are passed through to the function specified by fn once the timer expires.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>The numerical ID of the timer, which can be used later with me.timer.clearTimeout().</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"ryC84fPsIi-vX8aVnXhg5","name":"utils","brief":"","defaultValue":"\"\"","type":"NSDoc","description":"<p>a collection of utility functions</p>","members":[{"id":"2WM7ZTD9oxvKxLFi9UGEG","name":"agent","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of utility functons to ease porting between different user agents.</p>","members":[{"id":"EVs2mIRaK1EzUoqij0dXJ","name":"prefixed","brief":"","access":"public","type":"FunctionDoc","description":"<p>Get a vendor-prefixed property</p>","params":[{"identifier":"name","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"obj","optional":true,"default":"globalThis","description":"<p>Object or element reference to access</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Value of property</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"25BXaBrm9eiGWNiUcsqX4","name":"setPrefixed","brief":"","access":"public","type":"FunctionDoc","description":"<p>Set a vendor-prefixed property</p>","params":[{"identifier":"name","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Property value</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"obj","optional":true,"default":"globalThis","description":"<p>Object or element reference to access</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if one of the vendor-prefixed property was found</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"2lPqSk_NfXbFAvVRKl60t","name":"array","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of array utility functions</p>","members":[{"id":"TwlMlWfCyu-tjuStIINbu","name":"random","brief":"","access":"public","examples":[{"caption":"","code":"\n // Select a random array element\n var arr = [ \"foo\", \"bar\", \"baz\" ];\n console.log(me.utils.array.random(arr));\n"}],"type":"FunctionDoc","description":"<p>return a random array element</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array to pick a element</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random member of array</p>","dataType":{"tokens":[{"value":"any","kind":"canonical"}],"template":"any"}}]},{"id":"_teBsiCXcv964GXASvlHf","name":"remove","brief":"","access":"public","type":"FunctionDoc","description":"<p>Remove the specified object from the given Array</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array from which to remove an object</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}},{"identifier":"obj","optional":false,"description":"<p>to be removed</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the modified Array\nvar arr = [ &quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot; ];\n// remove &quot;foo&quot; from the arr...","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"lm9uI7Yt80PZk76eSZASR","name":"weightedRandom","brief":"","access":"public","type":"FunctionDoc","description":"<p>return a weighted random array element, favoring the earlier entries</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array to pick a element</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random member of array</p>","dataType":{"tokens":[{"value":"any","kind":"canonical"}],"template":"any"}}]}]},{"id":"yehrAwz1cFuQLi6TnC_7A","name":"file","brief":"","defaultValue":"undefined","readonly":true,"scope":"static","type":"NSDoc","description":"<p>a collection of file utility functions</p>","members":[{"id":"WeBUd40ekDthmeaek54iw","name":"getBasename","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the base name of the file without path info</p>","params":[{"identifier":"path","optional":false,"description":"<p>path containing the filename</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the base name without path information.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"C4FrDdDVg7-2vd10RQUJh","name":"getExtension","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the extension of the file in the given path</p>","params":[{"identifier":"path","optional":false,"description":"<p>path containing the filename</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>filename extension.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]}]},{"id":"jh9favoufFvHyANUD0r4J","name":"function","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of utility functions</p>","members":[{"id":"mB4lHctsfH1n-NRxNwIUt","name":"defer","brief":"","access":"public","examples":[{"caption":"","code":"\n // execute myFunc() when the stack is empty,\n // with the current context and [1, 2, 3] as parameter\n me.utils.function.defer(myFunc, this, 1, 2, 3);\n"}],"type":"FunctionDoc","description":"<p>Executes a function as soon as the interpreter is idle (stack empty).</p>","params":[{"identifier":"func","optional":false,"description":"<p>The function to be deferred.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":false,"description":"<p>The value to be passed as the this parameter to the target function when the deferred function is called</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>Optional additional arguments to carry for the function.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>id that can be used to clear the deferred function using\nclearTimeout</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"MUMLICYH27lwT49e8EAs2","name":"throttle","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns a function that, when invoked will only be triggered at most\nonce during a given window of time</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to be throttled.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>The delay in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"no_trailing","optional":false,"description":"<p>disable the execution on the trailing edge</p>","dataType":{"tokens":[{"value":"no_trailing","kind":"canonical"},{"value":"no_trailing","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the function that will be throttled</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}]}]},{"id":"dRUN6QnIxEq3jaZAj5PCn","name":"string","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of string utility functions</p>","members":[{"id":"LV6G0jMfTZLd2zpFzR0vU","name":"capitalize","brief":"","access":"public","type":"FunctionDoc","description":"<p>converts the first character of the given string to uppercase</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be capitalized</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the capitalized string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"hfFftd0ugq2nIaJ5_V4jc","name":"isBoolean","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given string contains a true or false</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be tested</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if the string is either true or false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bJpP5fwDHy8gD_AvKTyi4","name":"isNumeric","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given string contains a numeric integer or float value</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be tested</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if string contains only digits</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4bTu56KjVaBDEaBvBsaUB","name":"toHex","brief":"","access":"public","type":"FunctionDoc","description":"<p>convert a string to the corresponding hexadecimal value</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be converted</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the converted hexadecimal value</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"XFfHdHidAleG6ExteMVpI","name":"trimLeft","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the string stripped of whitespace from the left.</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be trimmed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>trimmed string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"3DpYlRsU0H7keegNj1nPe","name":"trimRight","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the string stripped of whitespace from the right.</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be trimmed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>trimmed string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]}]},{"id":"A4vh0JBBDw_2NTuUQQlWE","name":"checkVersion","brief":"","access":"public","examples":[{"caption":"","code":"\n if (me.utils.checkVersion(\"7.0.0\") > 0) {\n     console.error(\n         \"melonJS is too old. Expected: 7.0.0, Got: 6.3.0\"\n     );\n }\n"}],"scope":"static","type":"MethodDoc","description":"<p>Compare two version strings</p>","params":[{"identifier":"first","optional":false,"description":"<p>First version string to compare</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"second","optional":true,"default":"version","description":"<p>Second version string to compare</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>comparison result <br>&lt; 0 : first &lt; second<br>\n0 : first == second<br>\n&gt; 0 : first &gt; second</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5FyIB1VBs4sgZKAtn2tMs","name":"getPixels","brief":"","access":"public","scope":"static","type":"MethodDoc","description":"<p>Get image pixels</p>","params":[{"identifier":"image","optional":false,"description":"<p>Image to read</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>ImageData object</p>","dataType":{"tokens":[{"value":"ImageData","kind":"canonical"},{"value":"ImageData","kind":"canonical"}],"template":"%1"}}]},{"id":"HebIEiVvr5rrjdj75Jwwa","name":"getUriFragment","brief":"","access":"public","examples":[{"caption":"","code":"\n // http://www.example.com/index.html#debug&hitbox=true&mytag=value\n var UriFragment = me.utils.getUriFragment();\n console.log(UriFragment[\"mytag\"]); //> \"value\"\n"}],"scope":"static","type":"MethodDoc","description":"<p>parse the fragment (hash) from a URL and returns them into</p>","params":[{"identifier":"url","optional":true,"default":"document.location","description":"<p>an optional params string or URL containing fragment (hash) params to be parsed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>an object representing the deserialized params string.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"members":[{"id":"Z2FMKkcXbZM7pxhYaNdLk","name":"debug","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>display the debug panel (if preloaded)</p>"},{"id":"TWnmOiy1bydS41FgKe9A4","name":"debugToggleKey","brief":"","access":"public","defaultValue":"\"s\"","scope":"static","type":"PropertyDoc","description":"<p>show/hide the debug panel (if preloaded)</p>"},{"id":"dUIHh5NZ-wIm9mlTQFwa_","name":"hitbox","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the hitbox in the debug panel (if enabled)</p>"},{"id":"9pRLm8ErBp-HMVuz4FSBM","name":"quadtree","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the quadtree in the debug panel (if enabled)</p>"},{"id":"TknFyXzeaXO-XG7307_k8","name":"velocity","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the entities velocity in the debug panel (if enabled)</p>"},{"id":"5dHBzqxbOdDKSISlmxFLv","name":"webgl","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>force the renderer to WebGL</p>"}]}]},{"id":"UaLEITNzls5C_zfLuyqh3","name":"video","brief":"","defaultValue":"1","type":"NSDoc","description":"<p>video functions</p>","members":[{"id":"lvTHTxpYtZ3CXeEiICXyA","name":"AUTO","brief":"","defaultValue":"2","readonly":true,"type":"PropertyDoc","description":"<p>Auto-select the renderer (Attempt WebGL first, with fallback to Canvas)</p>"},{"id":"ifLR8oehn2zlnQVyVT7zx","name":"CANVAS","brief":"","defaultValue":"0","readonly":true,"type":"PropertyDoc","description":"<p>Select the HTML5 Canvas renderer</p>"},{"id":"1KbkWiCuMVkCVbjKsqMD4","name":"renderer","brief":"","defaultValue":"undefined","type":"PropertyDoc","description":"<p>A reference to the active Canvas or WebGL active renderer renderer</p>"},{"id":"4pjak5BPFLcwvbSJ950CX","name":"scaleRatio","brief":"","defaultValue":"<1,1>","type":"PropertyDoc","description":"<p>the scaling ratio to be applied to the display canvas</p>"},{"id":"N3asNl1VW3ZzOzyIcyzVQ","name":"WEBGL","brief":"","defaultValue":"1","readonly":true,"type":"PropertyDoc","description":"<p>Select the WebGL renderer</p>"},{"id":"KnvdrRh62ez-_M70G7SyD","name":"createCanvas","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Create and return a new Canvas element</p>","params":[{"identifier":"width","optional":false,"description":"<p>width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"offscreenCanvas","optional":true,"default":"false","description":"<p>will return an OffscreenCanvas if supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"3aBcLlFurjcisNQ7Kethk","name":"getParent","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return a reference to the parent DOM element holding the main canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"fDDS_9RU0P0kkacnpID3y","name":"init","brief":"","examples":[{"caption":"","code":"\n // init the video with a 640x480 canvas\n me.video.init(640, 480, {\n     parent : \"screen\",\n     renderer : me.video.AUTO,\n     scale : \"auto\",\n     scaleMethod : \"fit\",\n     doubleBuffering : true\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Initialize the &quot;video&quot; system (create a canvas based on the given arguments, and the related renderer). <br>\nmel...","params":[{"identifier":"width","optional":false,"description":"<p>The width of the canvas viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The height of the canvas viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options","optional":true,"description":"<p>The optional video/renderer parameters.<br> (see Renderer(s) documentation for further specific options)</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.parent","optional":true,"default":"document.body","description":"<p>the DOM parent element to hold the canvas in the HTML file</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}},{"identifier":"options.renderer","optional":true,"default":"video.AUTO","description":"<p>renderer to use (me.video.CANVAS, me.video.WEBGL, me.video.AUTO)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>enable/disable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.scale","optional":true,"default":"1.0","description":"<p>enable scaling of the canvas ('auto' for automatic scaling)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"options.scaleMethod","optional":true,"default":"\"fit\"","description":"<p>screen scaling modes ('fit','fill-min','fill-max','flex','flex-width','flex-height','stretch')</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.preferWebGL1","optional":true,"default":"false","description":"<p>if true the renderer will only use WebGL 1</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.powerPreference","optional":true,"default":"\"default\"","description":"<p>a hint to the user agent indicating what configuration of GPU is suitable for the WebGL context (&quot;default&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>whether to allow transparent pixels in the front buffer (screen).</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>whether to enable or not video scaling interpolation</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.consoleHeader","optional":true,"default":"true","description":"<p>whether to display melonJS version and basic device information in the console</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>false if initialization failed (canvas not supported)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1uYmBh3a_WPH5LadMCWML","name":"scale","brief":"","scope":"static","see":["video.init"],"type":"FunctionDoc","description":"<p>scale the &quot;displayed&quot; canvas by the given scalar.\nthis will modify the size of canvas element directly.\nOnly use...","params":[{"identifier":"x","optional":false,"description":"<p>x scaling multiplier</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y scaling multiplier</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"0SK26crbExJF6t-zoCMQZ","name":"BitmapText","brief":"","type":"ClassDoc","description":"<p>a bitmap font object</p>","extends":["Renderable"],"members":[{"id":"ztmpo5-lF2ScKkpwrYfAH","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"VDWK4qxnP5ZtU-C8CbqMt","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"iUyLkax0j6cBFZSiQDTtQ","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"zLz3Z1-3ZTYiPFkG5WMpZ","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"qeG7Oxnzh6Rz3y-OukmP_","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"9NgwM3D6NtEMCngr0Ekw6","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"pSX3QqfwqMNI25sry2RZb","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"jYivkUNo5ReTFxJ6sQxSf","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"IpxNtvvcHcZgk9mgGv0iT","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"TcgW-AvLWIIH4qTWzLMCk","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"JYhOAbFyyAwqAwOY-HqpI","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"VOt30JcbNk6h4gqd2fy0C","name":"fillStyle","brief":"","access":"public","scope":"instance","see":["Renderable#tint"],"type":"PropertyDoc","description":"<p>defines the color used to tint the bitmap text</p>"},{"id":"q6kA-zf8CdiYk9DHbuuKi","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"vhFl8n9H4j-vYZka5vaRe","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"BKLcqYldmQL5jFrBbk2Wt","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"16BWmyPD4kIxKG44xwC4D","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"mbmKnnLOCgJZoRN_chIyh","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"g813GxjAAAt3gPuUrFZmp","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"NPgrOTEAd3P-xYNh8aCUM","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"X4wp1Clvd39WYUHEEjzhg","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"Pc4mnz64pH5sUO137HjoU","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"YKRsiBErxY3FmhN93wddp","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"k99II8OjkMygzhtMt1DSN","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"Gh2rtzgCIqlAbuQljJzS7","name":"lineHeight","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Set the line spacing height (when displaying multi-line strings). <br>\nCurrent font height will be multiplied with this va..."},{"id":"ydl-DsVxf_kd0BA7JjBZH","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"Nx0FG9Jnp5L4BthtLiJjM","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"njZImZj3frcSUvCw72ZnI","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"lRAV431Dc64gqLYaLD3R_","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"gP-bdmZ8VLNsn28oPstzb","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"AQz0GDFxssPqIpcqxr--1","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"htEb2QWHTiqls4lvKaqCR","name":"textAlign","brief":"","access":"public","defaultValue":"\"left\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the default text alignment (or justification),<br>\npossible values are &quot;left&quot;, &quot;right&quot;, and &quot;..."},{"id":"-DgnhibdJ-7K8jta1KezC","name":"textBaseline","brief":"","access":"public","defaultValue":"\"top\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\npossible values are &quot;top&quot;, &quot;hang..."},{"id":"-_rtgsV0YWNHqP5FrkFzx","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"JSsJwmvf2ns9z9UomD36J","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"HTpSgIPBOu-0MZcjRpH_G","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"8ZlxqDoK06A1IpFFc9xpQ","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"K5hq0eulCq0kVxjf-XZ7P","name":"wordWrapWidth","brief":"","access":"public","defaultValue":"-1","scope":"instance","type":"PropertyDoc","description":"<p>the maximum length in CSS pixel for a single segment of text.\n(use -1 to disable word wrapping)</p>"},{"id":"HUMGk5W85XeEvvtr2VGqh","name":"_text","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>the text to be displayed</p>"},{"id":"aUWMTQ05is1iudx-jlAUF","name":"fontData","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>font data</p>"},{"id":"oy2k0irSdql3KbKxPfXW-","name":"fontImage","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>font image</p>"},{"id":"Mh787VeJ-hUg2jNL0dM-x","name":"fontScale","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>scaled font size</p>"},{"id":"faRrgIl3JfoxE0pYz2hWo","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UbznnSRl3IDD1M2jhF8hq","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"fsWEGTnWtNxEwAks08M-6","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Zp_Kid2mSpXHfLqMctLxc","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // Use me.loader.preload or me.loader.load to load assets\n me.loader.preload([\n     { name: \"arial\", type: \"binary\" src: \"data/font/arial.fnt\" },\n     { name: \"arial\", type: \"image\" src: \"data/font/arial.png\" },\n ])\n // Then create an instance of your bitmap font:\n var myFont = new me.BitmapText(x, y, {font:\"arial\", text:\"Hello\"});\n // two possibilities for using \"myFont\"\n // either call the draw function from your Renderable draw function\n myFont.draw(renderer, \"Hello!\", 0, 0);\n // or just add it to the word container\n me.game.world.addChild(myFont);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>the text configuration</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.font","description":"<p>a font name to identify the corresponing source image</p>","dataType":{"tokens":[{"value":"string | Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"string | %1"}},{"identifier":"settings.fontData","optional":true,"default":"settings.font","description":"<p>the bitmap font data corresponding name, or the bitmap font data itself</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.size","optional":true,"description":"<p>size a scaling ratio</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.fillStyle","optional":true,"description":"<p>a CSS color value used to tint the bitmapText (@see BitmapText.tint)</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.lineWidth","optional":true,"default":"1","description":"<p>line width, in pixels, when drawing stroke</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.textAlign","optional":true,"default":"\"left\"","description":"<p>horizontal text alignment</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.textBaseline","optional":true,"default":"\"top\"","description":"<p>the text baseline</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.lineHeight","optional":true,"default":"1.0","description":"<p>line spacing height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.0, y:0.0}","description":"<p>anchor point to draw the text at</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.wordWrapWidth","optional":true,"description":"<p>the maximum length in CSS pixel for a single segment of text</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.text","optional":true,"description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[]},{"id":"AnhuzvVmx_mdK5PrHKTei","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"I7-FfRsjLPd-tQQCVh7g6","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"w3KTPNdfPLRc7zYM-V5uo","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UmisjZtadz4GGgrYk-MMd","name":"draw","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw the bitmap font</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"1be5F8zGGSgLGD6ux27WT","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IIFtvX6oTXZCoyo8JXxXU","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"iJNJtdSEEo641Zd-L8CXq","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GeX8RSaweyi9cyv2N1XY3","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"vaMI-kN8CRSjEyHvllVWc","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"DtwfRUVHYBhzUAQVfQqZR","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"ipYOTLqD7BTyOAzeii-tt","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"XgL_PPtXQ0ZyiGxUZaQJ0","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GSI6Pt5-KnJBSyRECWPD8","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tkEUSMQIMFS3kN1fDlu_h","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"4dCcjSyLAn2VtWYGiXWa8","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in pixels</p>","params":[{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a TextMetrics object with two properties: <code>width</code> and <code>height</code>, defining the output dimensions</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"cZvCXKAl4Q-9ACSq29lMd","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GNWkRIFvAU51hcMFNhEPh","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"UnvkTBfVBC3eYtOAC6of-","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dOpTnyIb00FOl30wNSFbW","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ClFG5-PMLnlaM9CigH2yk","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the font display size</p>","params":[{"identifier":"scale","optional":false,"description":"<p>ratio</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"2lSTb0BjeMtGAAeYzhfAb","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XYeF-4e7FC9Svn9UUeD63","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Nan3K8T9oongG-LAu1wVr","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"InZSxz2a-YilhDEAuiHTM","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the font settings</p>","params":[{"identifier":"textAlign","optional":false,"description":"<p>(&quot;left&quot;, &quot;center&quot;, &quot;right&quot;)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"scale","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"ySYg2Tvfl-UNmI5FyxD2N","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vRtPTqVk1SkptW4tUnDpc","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"j8bMaQQHn9dpDMAAx-O0G","name":"setText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the text to be displayed</p>","params":[{"identifier":"value","optional":false,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"number | string | Array<string>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | string | %2<string>"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"9fiTbaEQoe_-H3vY27pO0","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9Pn8aTTpc57ZwdD0w8b-A","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_H2qUEc3kS9iH6q-aOQXc","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"p8IVB_x1etqtauFZ5c_rO","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qzgazsNiLxVoLu9YxPfu5","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6IdbzWg2miH7ly13WBW7A","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"vfV7bGSpeJ1sCGicix07c","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ERdno6WSDhIXoLDjDsOXY","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"8ks4pMN_wUBtOJBkZMfig","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"VweksrDCdZ45vD8SXu9_0","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ahu-hGtZPvJEN_FKOep0G","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"oas_BPm_7gszFo5k7werG","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"a09M27FbcbcGZeiY2hw-U","name":"Body","brief":"","type":"ClassDoc","description":"<p>a Generic Physic Body Object with some physic properties and behavior functionality, to as a member of a Renderable.</p>","members":[{"id":"AHxNsQuEHgv2smPUgKEwB","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this body,\nor undefined if it has not been added to one.</p>"},{"id":"omCH4FqZxxjZB0TVJdhFP","name":"bounce","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>the body bouciness level when colliding with other solid bodies :\na value of 0 will not bounce, a value of 1 will fully re..."},{"id":"6lXJoKcAgeT6_9UPRzlWb","name":"bounds","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The AABB bounds box reprensenting this body</p>"},{"id":"O_V6MCL26EKB_nigQwwWz","name":"collisionType","brief":"","access":"public","defaultValue":"collision.types.ENEMY_OBJECT","examples":[{"caption":"","code":"\n // set the body collision type\n body.collisionType = me.collision.types.PLAYER_OBJECT;\n"}],"scope":"instance","see":["collision.types"],"type":"PropertyDoc","description":"<p>define the collision type of the body for collision filtering</p>"},{"id":"n44vsYGjVsv09GWWKA0aU","name":"falling","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>falling state of the body<br>\ntrue if the object is falling<br>\nfalse if the object is standing on something<br></p>"},{"id":"qwH7mlM_NkDAaRIBoOyv2","name":"force","brief":"","access":"public","defaultValue":"<0,0>","examples":[{"caption":"","code":"\n // define a default maximum acceleration, initial force and friction\n this.body.force.set(0, 0);\n this.body.friction.set(0.4, 0);\n this.body.setMaxVelocity(3, 15);\n\n // apply a postive or negative force when pressing left of right key\n update(dt) {\n     if (me.input.isKeyPressed(\"left\"))    {\n          this.body.force.x = -this.body.maxVel.x;\n      } else if (me.input.isKeyPressed(\"right\")) {\n         this.body.force.x = this.body.maxVel.x;\n     } else {\n         this.body.force.x = 0;\n     }\n }\n"}],"scope":"instance","see":["Body.setMaxVelocity"],"type":"PropertyDoc","description":"<p>body force or acceleration (automatically) applied to the body.\nwhen defining a force, user should also define a max veloc..."},{"id":"EILgt8iNzhg0ybcbSMpwR","name":"friction","brief":"","access":"public","defaultValue":"<0,0>","scope":"instance","type":"PropertyDoc","description":"<p>body friction</p>"},{"id":"kpR-XhjhB1CB4vSBUOuBM","name":"gravityScale","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["World.gravity"],"type":"PropertyDoc","description":"<p>The degree to which this body is affected by the world gravity</p>"},{"id":"TFIXGHBpVjv4JJ87vM99_","name":"ignoreGravity","brief":"","access":"public","defaultValue":"false","scope":"instance","see":["World.gravity"],"type":"PropertyDoc","description":"<p>If true this body won't be affected by the world gravity</p>"},{"id":"ly4ANReTAoiUdrY7wV0IB","name":"isStatic","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>Either this body is a static body or not.\nA static body is completely fixed and can never change position or angle.</p>"},{"id":"xCPxgD28B0Q2niGJAJsdE","name":"jumping","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>jumping state of the body<br>\nequal true if the body is jumping<br></p>"},{"id":"8hIdMOUb8FkjvYJ2I8cgg","name":"mass","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>the body mass</p>"},{"id":"oZnyq1HGuretgV6EQ1uYW","name":"maxVel","brief":"","access":"public","defaultValue":"<490,490>","scope":"instance","type":"PropertyDoc","description":"<p>max velocity (to limit body velocity)</p>"},{"id":"j-XV3stWmljyszxeev68w","name":"vel","brief":"","access":"public","defaultValue":"<0,0>","scope":"instance","type":"PropertyDoc","description":"<p>body velocity</p>"},{"id":"Qw4x4Yz_aQ_uBloH_qx3p","name":"addShape","brief":"","examples":[{"caption":"","code":"\n // add a rectangle shape\n this.body.addShape(new me.Rect(0, 0, image.width, image.height));\n // add a shape from a JSON object\n this.body.addShape(me.loader.getJSON(\"shapesdef\").banana);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>add a collision shape to this body <br>\n(note: me.Rect objects will be converted to me.Polygon before being added)</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape or JSON object</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse | Bounds | object","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5 | object"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NcSarwiDQ5GV75cEYRBUe","name":"addVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the body shape</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points defining a convex hull</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object for which to set the vertices</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lqk9nbseHYAOWUoLvYGuO","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"ancestor","optional":false,"description":"<p>the parent object this body is attached to</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"shapes","optional":true,"description":"<p>a initial shape, list of shapes, or JSON object defining the body</p>","dataType":{"tokens":[{"value":"Rect | Array<Rect> | Polygon | Array<Polygon> | Line | Array<Line> | Ellipse | Array<Ellipse> | Bounds | Array<Bounds> | object","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"},{"value":"Bounds","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1 | %3<%2> | %4 | %5<%6> | %7 | %8<%9> | %10 | %11<%12> | %13 | %14<%15> | object"}},{"identifier":"onBodyUpdate","optional":true,"description":"<p>callback for when the body is updated (e.g. add/remove shapes)</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"juTOMcPX8ghzBpffo6xV_","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the any of the shape composing the body contains the given point.</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3mRltpdgq85I-US_SvBVv","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the any of the shape composing the body contains the given point.</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6petd2FnOBXW9cdUueYRa","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all shapes of the physic body\n mySprite.body.forEach((shape) => {\n    shape.doSomething();\n });\n mySprite.body.forEach((shape, index) => { ... });\n mySprite.body.forEach((shape, index, array) => { ... });\n mySprite.body.forEach((shape, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per body shape element. <br>\nthe callback function is invoked with ...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"W_Hm77HbkeAJiiOqHP889","name":"fromJSON","brief":"","examples":[{"caption":"","code":"\n // define the body based on the banana shape\n this.body.fromJSON(me.loader.getJSON(\"shapesdef\").banana);\n // or ...\n this.body.fromJSON(me.loader.getJSON(\"shapesdef\"), \"banana\");\n"}],"scope":"instance","see":["https://www.codeandweb.com/physicseditor"],"type":"MethodDoc","description":"<p>add collision mesh based on a JSON object\n(this will also apply any physic properties defined in the given JSON file)</p>","params":[{"identifier":"json","optional":false,"description":"<p>a JSON object as exported from a Physics Editor tool</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"id","optional":true,"description":"<p>an optional shape identifier within the given the json object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>how many shapes were added to the body</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"WVbRgvCIIYBt_i-zV5usX","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the AABB bounding box for this body</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"5_KkkfARrYbJYotxu-_7B","name":"getShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the collision shape at the given index</p>","params":[{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object at the specified index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>shape a shape object if defined</p>","dataType":{"tokens":[{"value":"Polygon | Line | Ellipse","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3"}}]},{"id":"YYW5dxl8318QIzeU7CUor","name":"removeShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>remove the specified shape from the body shape list</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object</p>","dataType":{"tokens":[{"value":"Polygon | Line | Ellipse","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ftkEbuQ7Sps0CPGN1Om7h","name":"removeShapeAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>remove the shape at the given index from the body shape list</p>","params":[{"identifier":"index","optional":false,"description":"<p>the shape object at the specified index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_ccX6cLLVik9Kau0KLjyw","name":"respondToCollision","brief":"","scope":"instance","type":"MethodDoc","description":"<p>the built-in function to solve the collision response</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object (see {@link collision.ResponseObject})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"mWX5xZ8c-yyn5NAc7hDHf","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this body (counter-clockwise) by the specified angle (in radians).\nUnless specified the body will be rotated around...","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"default":"Body.getBounds().center","description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}]},{"id":"OsljmnCPRbXYqXZo3GWjA","name":"setCollisionMask","brief":"","examples":[{"caption":"","code":"\n // filter collision detection with collision shapes, enemies and collectables\n body.setCollisionMask(me.collision.types.WORLD_SHAPE | me.collision.types.ENEMY_OBJECT | me.collision.types.COLLECTABLE_OBJECT);\n ...\n // disable collision detection with all other objects\n body.setCollisionMask(me.collision.types.NO_OBJECT);\n"}],"scope":"instance","see":["collision.types"],"type":"MethodDoc","description":"<p>By default all physic bodies are able to collide with all other bodies, <br>\nbut it's also possible to specify 'collision ...","params":[{"identifier":"bitmask ","optional":true,"default":" collision.types.ALL_OBJECT","description":"<p>the collision mask</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"KBmgC6OPmwMEn3px43Fui","name":"setCollisionType","brief":"","examples":[{"caption":"","code":"\n // set the body collision type\n body.collisionType = me.collision.types.PLAYER_OBJECT;\n"}],"scope":"instance","see":["collision.types"],"type":"MethodDoc","description":"<p>define the collision type of the body for collision filtering</p>","params":[{"identifier":"type","optional":false,"description":"<p>the collision type</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"MMdyybsI5WoOQx0o2va2f","name":"setStatic","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body as a static body\nstatic body do not move automatically and do not check againt collision with others</p>","params":[{"identifier":"isStatic","optional":true,"default":"true","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"e_eng8U-UuAzorMNddIs8","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body vertices to the given one</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points defining a convex hull</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object for which to set the vertices</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"true","description":"<p>either to reset the body definition before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"J7zqdYxLrhC5_VnOK7N1P","name":"setFriction","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>set the body default friction</p>","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>horizontal friction</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>vertical friction</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"QjaX1Z0hNnqESKWs6y86x","name":"setMaxVelocity","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>cap the body velocity (body.maxVel property) to the specified value<br></p>","params":[{"identifier":"x","optional":false,"description":"<p>max velocity on x axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>max velocity on y axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"9WutEVpCqnSDQsoybj6V7","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>Updates the parent's position as well as computes the new body's velocity based\non the values of force/friction/gravity.  ...","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if resulting velocity is different than 0</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"s_kHOTEf8oVZ7Ur2d1yvg","name":"Bounds","brief":"","type":"ClassDoc","description":"<p>a bound object contains methods for creating and manipulating axis-aligned bounding boxes (AABB).</p>","members":[{"id":"r9F_25qZ6iB2Lm5KkzDc9","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"Z5JPpAXEIq9Dc3PqutOng","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"GWZlVpK9vFOxKqxrHfpq2","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"WbGHUHDXiKhheJIAtTbLF","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"BukfW2Y-2_495Ru01h4dg","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"r7rPRUX5JlUrJ-D1a0-DZ","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"SX9UiXUa-c9ZaV4fCsSN9","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"y_j25hNH8fzlnWZMIJOhr","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"LbaupsYb0C_kkfKQtOSwq","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"FixX1v3_C9kdXiocrt96H","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"1w4s6kVllulUJ6TJXSaPE","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"5AO1SOkb29nWYFE9aaw69","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"xVepvwejnWXwA0DHAqbyT","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"xkrgK6qzyx9-f2pa9epY7","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"wenAqnkF-6OwLrybcLFXL","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"agnE3jEZJWXpf3pKeqgDG","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"DFrrQcnDw74UZcPr8Ir9c","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"ZMeYRrvROOQhyqx01PIz7","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"vertices","optional":true,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"uTIH9vB2LdaU5EkuNbIsU","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fx0xF8fMRm91uaMeKcING","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_ZKt4lrhdiI9WgAVhkHdT","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TYhNF9yQ7xctFgzW_JGyr","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"q6YywiT_6_P8BjP1hRTJQ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"prv_8XGUymCBlR_6sQ1i1","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8t_YUFhm-GRoLGP7itvW3","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"aSstS-ST-cGAxteZ7aEa-","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"S8rl5pejk8SVxid1kEKiD","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ksX5YnhqeU8EP6_GsjyoC","name":"shift","brief":"","type":"MethodDoc","description":"<p>Shifts the bounds to the given position vector.</p>","params":[{"identifier":"position","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"1K32INE0RMBwriRhjRAKH","name":"translate","brief":"","type":"MethodDoc","description":"<p>Translates the bounds by the given vector.</p>","params":[{"identifier":"vector","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"yHz3J_8ke8jQ19S0eoEnj","name":"Camera2d","brief":"","type":"ClassDoc","description":"<p>a 2D orthographic camera</p>","extends":["Renderable"],"members":[{"id":"j79e40EtjpCQdlkeqTkoJ","name":"AXIS","brief":"","readonly":true,"type":"EnumDoc","description":"<p>Axis definition</p>","members":[{"id":"miwT0FzpOVT1TusiYvICD","name":"BOTH","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>both axis</p>"},{"id":"iCk7THt1lOwBBlaF23fzt","name":"HORIZONTAL","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>horizontal axis only</p>"},{"id":"5iIpctciwWfvUgDr5Izjx","name":"NONE","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>no axis</p>"},{"id":"LDT2IBeja_6t6ocEOC2u-","name":"VERTICAL","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>vertical axis only</p>"}]},{"id":"QD4H-HfgXMyCUH-A8ZsF5","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"n5HVm1uCD7_BwhJCBiupq","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"ZV3FTkSpkQyhE8i4BW-rL","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"fqUDVcWg652Hcsw9ms8sS","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"L5y3Nx4pd4L6aPNDV3Zkm","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"_aVbSSGqR-eRAy-sgZ8mN","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"zAHJoo-_P3jynVgUT63yK","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Emo7Tdz2OIHhW34QgfUBa","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"pgRLiAB2VwZiEKjwxn6RZ","name":"bounds","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Camera bounds</p>"},{"id":"QwzfjD0uMRXqA7h2RLRTc","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"A6czHnll3205HIe8Yi7ux","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"_cAleH6w4dXw4E2Tp_ZDG","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"XDRuWWV63kSSYmZMm3HAL","name":"damping","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Camera damping for smooth transition [0 .. 1].\n1 being the maximum value and will snap the camera to the target position</p>"},{"id":"K3uOCJnafybEt3PeKBF4l","name":"far","brief":"","access":"public","defaultValue":"1000","scope":"instance","type":"PropertyDoc","description":"<p>the furthest point relative to the camera.</p>"},{"id":"FTfkITm1__i0I2LZ_qxsG","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"HhCYNNT0FV9xHABTnw6rT","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"riHSppWxAlZ3_UfEdTfwi","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"AtLVYKFUaeaHxPhgNAoUC","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"9ixGjZsCrDqmaw3-OzFon","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"GAKcaSWR_bt3kNpTrPmQF","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"PEcFq8ap--wQ5drW0YMAC","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"Nmo0gOOzFryLUI7c90ZZ4","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"oA6YdzBwuIZYSaf4FV0Z3","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"Pjvfysb25HyYGmM32q2jT","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"tFSRITNcQEuFDpcuiXPog","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"6kK0qBvojNj4W8Etkcx5a","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"dxokz0qDqTJysQM6-3nxY","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"grRNARn_Var1Ub0GxNwwZ","name":"near","brief":"","access":"public","defaultValue":"-1000","scope":"instance","type":"PropertyDoc","description":"<p>the closest point relative to the camera</p>"},{"id":"1x4qOWvkPYVGAmLgvke9g","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"ZKiiQgYxTwY_qonTohUEa","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"BZ66YypEpdGBf7GYMvUsZ","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"R_RHGlHB0uyr73w8eXda-","name":"projectionMatrix","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the default camera projection matrix\n(2d cameras use an orthographic projection by default).</p>"},{"id":"9ZrtUcDChUQT-vleYgpyf","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"2QtuGoyMkK7mNeqKL9Mgy","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"erPyc0HRdqSCYyqATh-wH","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"Z3h55WPLPVxhZaHWDjhkO","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"FBSW442AE7cVKqfV4kp3v","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"E6pejwqkgdeNA5-cxpl9o","name":"smoothFollow","brief":"","access":"private","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>enable or disable damping</p>"},{"id":"mwIOa-ti5BSqL3ndmtn1j","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"o0Tj9RBZqbGh1Zg4JSyIt","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"uM-j5_StRp_StXxSEulVU","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"fDk7Z3mVx05kb8SkFVsVp","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"minX","optional":false,"description":"<p>start x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"description":"<p>start y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"description":"<p>end x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"description":"<p>end y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"WeVB3uRmzE2qjJObUCCgH","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hQeJ3LU1sB1E3qAD89YeN","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"MC7zy6dddDvYeH-6ET4Yv","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NLzrylPFpYUQWawfMTDmW","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MVzWgGil_1IvlDxBMs69i","name":"fadeIn","brief":"","examples":[{"caption":"","code":"\n // flash the camera to white for 75ms\n me.game.viewport.fadeIn(\"#FFFFFF\", 75);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>fadeIn effect <p>\nfade to the specified color</p>","params":[{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"Brj_UnD7l68P8ZkUjpsnW","name":"fadeOut","brief":"","examples":[{"caption":"","code":"\n // fade the camera to white upon dying, reload the level, and then fade out back\n me.game.viewport.fadeIn(\"#fff\", 150, function() {\n     me.audio.play(\"die\", false);\n     me.level.reload();\n     me.game.viewport.fadeOut(\"#fff\", 150);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>fadeOut(flash) effect<p>\nscreen is filled with the specified color and slowly goes back to normal</p>","params":[{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"bkIqLXyz0zAB0AXZHqh1h","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6tepK7_ydKWYhyfO5pydU","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"stv_6dLN-LJ3UbiUdc0Cc","name":"focusOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the camera position around the specified object</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable to focus the camera on</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"dTmY9KamkaOrkofSAF_CL","name":"follow","brief":"","examples":[{"caption":"","code":"\n // set the camera to follow this renderable on both axis, and enable damping\n me.game.viewport.follow(this, me.game.viewport.AXIS.BOTH, 0.1);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the camera to follow the specified renderable. <br>\n(this will put the camera center around the given target)</p>","params":[{"identifier":"target","optional":false,"description":"<p>renderable or position vector to follow</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"axis","optional":true,"default":"me.game.viewport.AXIS.BOTH","description":"<p>Which axis to follow (see {@link Camera2d.AXIS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"damping","optional":true,"default":"1","description":"<p>default damping value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"3dJ1wCrV8mwDwgGAr-CJA","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"aNmKNyOj-7jUGEa0qG1lx","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"P0EQEte3ftUCUGo4pe_6-","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"MNhhtftyR6EBESd3LE7tA","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"y4I5I44qlo4MHyaj4CKob","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cCyck4-HqmdK2hFbfyk13","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VZTHAqW-3J-vqi3dIBwfR","name":"isVisible","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the specified renderable is in the camera</p>","params":[{"identifier":"obj","optional":false,"description":"<p>to be checked against</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"floating ","optional":true,"default":" obj.floating","description":"<p>if visibility check should be done against screen coordinates</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8sl-D9bl8gx8cuYVXuJ9V","name":"localToWorld","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the given &quot;local&quot; (screen) coordinates into world coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the\nconverted value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"hbUEtjz3L6vbPWf7F_ubf","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"xN6nGo1PPodgHTEeqQW5E","name":"move","brief":"","examples":[{"caption":"","code":"\n // Move the camera up by four pixels\n me.game.viewport.move(0, -4);\n"}],"scope":"instance","see":["Camera2d.focusOn"],"type":"MethodDoc","description":"<p>move the camera upper-left position by the specified offset.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"LxV6qRQd7PUv0lidmkzJV","name":"moveTo","brief":"","scope":"instance","see":["Camera2d.focusOn"],"type":"MethodDoc","description":"<p>move the camera upper-left position to the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YyVsliTOMOhzECO8alvtT","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Wr_qdO6bWJ5nIK35ywSAJ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"GynFLUHN6btOUpKg4IPqg","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lh8nCtZdRsoVd-zNQGips","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"AGsylwZRtZG5KKGlHs3QN","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the camera position to specified coordinates</p>","params":[{"identifier":"x","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"xBDCi7WAbGoFNJV_otLX9","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the camera</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the camera</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the camera</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this camera</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}]},{"id":"RDAVLq-XKcqJbbSOm1N-l","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"B4bVwgRpmYbyjbn6gaXu_","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"SobD6gpzf4IX_7OTXlhHV","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"khmS7VHmZGcXMRzLcFTug","name":"setBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the camera boundaries (set to the world limit by default).\nthe camera is bound to the given coordinates and cannot mov...","params":[{"identifier":"x","optional":false,"description":"<p>world left limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>world top limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>world width limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>world height limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"t17WPHs0Z0oLpsI-IcuoT","name":"setDeadzone","brief":"","scope":"instance","see":["Camera2d.follow"],"type":"MethodDoc","description":"<p>change the deadzone settings.\nthe &quot;deadzone&quot; defines an area within the current camera in which\nthe followed ren...","params":[{"identifier":"w","optional":false,"description":"<p>deadzone width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>deadzone height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"BtMz-BKlBBcM6NCEkY6ug","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Men3ubkb8g0XSk7U9EamN","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"lcdRpU-7V95hWOWtkp2aR","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zEDvAFFdFSgMrvHsFe9xU","name":"shake","brief":"","examples":[{"caption":"","code":"\n // shake it baby !\n me.game.viewport.shake(10, 500, me.game.viewport.AXIS.BOTH);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>shake the camera</p>","params":[{"identifier":"intensity","optional":false,"description":"<p>maximum offset that the screen can be moved\nwhile shaking</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"axis","optional":true,"default":"me.game.viewport.AXIS.BOTH","description":"<p>specify on which axis to apply the shake effect (see {@link Camera2d.AXIS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once shaking effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"force","optional":true,"description":"<p>if true this will override the current effect</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"SV_G54Musahzb_JgfgAX5","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ejMSwYxeqv03xstoDymEH","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"5VkaOYfwz-oiFYwCZ0aes","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"P3GdB_VquYaPs3WssNk07","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1j-epdWR3j6GPb7WagpQs","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"_lTNDu0J-dWSXa5pH5Wk1","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"b3gocyLL6Qch3geFwiL35","name":"unfollow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>unfollow the current target</p>","params":[],"returns":[]},{"id":"nrN95jDv3atH-QpCBlhGW","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"mJRwQKqmwFGbWHlwzIKM4","name":"worldToLocal","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the given world coordinates into &quot;local&quot; (screen) coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the\nconverted value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"1JaAyQZZWeIjcfWxhM0Oq","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"EY1ZvOwXHd-8FP_WpUIcz","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"oBXKcVwjEXByb9-kPiLe_","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"XyUlYCLseS6bWrqzQtU3q","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Xtr0Ku7TF_LNRXBORQ5n9","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"aSrjoyfFd_Mhk3JIcHptx","name":"CanvasRenderer","brief":"","type":"ClassDoc","description":"<p>a canvas renderer object</p>","extends":["Renderer"],"members":[{"id":"ZJm8qu4f0fYZoQQdx6A-l","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"2T_mB4OcnnbXgT2fW_3MY","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"PVb254oiLlZfnnmjQPQ_k","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"6TCRfJOD3uqHOmWgNJFqN","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"DlYkqAgzj0rDZ1o3WmmC3","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the main framebuffer with the given color</p>","params":[{"identifier":"color","optional":true,"default":"\"#000000\"","description":"<p>CSS color.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"opaque","optional":true,"default":"false","description":"<p>Allow transparency [default] or clear the surface completely [true]</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ng1Vs3CT4Tqm6pCN5X1CC","name":"clearMask","brief":"","scope":"instance","see":["CanvasRenderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"mRX31KvUTJKUiZ9pL6z-q","name":"clearRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Erase the pixels in the given rectangular area by setting them to transparent black (rgba(0,0,0,0)).</p>","params":[{"identifier":"x","optional":false,"description":"<p>x axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>The rectangle's width.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The rectangle's height.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"P1lEIVwDeQCJSw34Tcex1","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"yuvmxyiuiGYBlcfPYeQTd","name":"clipRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clip the given region from the original canvas. Once a region is clipped,\nall future drawing will be limited to the clippe...","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"GAifThY_AZwTJqGs7uFuE","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel renderering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.textureSeamFix","optional":true,"default":"true","description":"<p>enable the texture seam fix when rendering Tile when antiAlias is off for the canvasRenderer</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"C38gv7vltBiQx74K9gTeT","name":"createPattern","brief":"","examples":[{"caption":"","code":"\n var tileable   = renderer.createPattern(image, \"repeat\");\n var horizontal = renderer.createPattern(image, \"repeat-x\");\n var vertical   = renderer.createPattern(image, \"repeat-y\");\n var basic      = renderer.createPattern(image, \"no-repeat\");\n"}],"scope":"instance","see":["ImageLayer#repeat"],"type":"MethodDoc","description":"<p>Create a pattern with the specified repetition</p>","params":[{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":false,"description":"<p>Define how the pattern should be repeated</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasPattern","kind":"canonical"},{"value":"CanvasPattern","kind":"canonical"}],"template":"%1"}}]},{"id":"ul4cctYC2t-nLYs0BuDCL","name":"drawImage","brief":"","examples":[{"caption":"","code":"\n // Position the image on the canvas:\n renderer.drawImage(image, dx, dy);\n // Position the image on the canvas, and specify width and height of the image:\n renderer.drawImage(image, dx, dy, dWidth, dHeight);\n // Clip the image and position the clipped part on the canvas:\n renderer.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Draw an image onto the main using the canvas api</p>","params":[{"identifier":"image","optional":false,"description":"<p>An element to draw into the context. The specification permits any canvas image source (CanvasImageSource), specifically, ...","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"sx","optional":false,"description":"<p>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sy","optional":false,"description":"<p>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sw","optional":false,"description":"<p>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rect...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sh","optional":false,"description":"<p>The height of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dx","optional":false,"description":"<p>The X coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dy","optional":false,"description":"<p>The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dw","optional":false,"description":"<p>The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dh","optional":false,"description":"<p>The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the imag...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"rj1VGTL8a1566Xxgf4kt3","name":"drawPattern","brief":"","scope":"instance","see":["CanvasRenderer#createPattern"],"type":"MethodDoc","description":"<p>Draw a pattern within the given rectangle.</p>","params":[{"identifier":"pattern","optional":false,"description":"<p>Pattern object</p>","dataType":{"tokens":[{"value":"CanvasPattern","kind":"canonical"},{"value":"CanvasPattern","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zJheftFHf2LT1j4tQw3BP","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"jzoIsO2Qbn02eVixuBDad","name":"fillArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"YXwxvW_HXScsFOen0ydPp","name":"fillEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Kr70K2_nWCPNsphYvC_Q3","name":"fillLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"BSyI83oDC4YudSFIdGanY","name":"fillPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill the given me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"OgOONP34ei_07mLKO-3hu","name":"fillRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7trqt1DPJ45-ziHf1iw85","name":"fillRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a rounded filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DjG6ELhEPcEvGSec65H_h","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>render the main framebuffer on screen</p>","params":[],"returns":[]},{"id":"YxCiGuPaD0Rl4Z9b1Mlyc","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"43m9tfCU5xDS2zCQf4Y0L","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"Rgdmj26V8BGnx4vzb4QP1","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"k1SKFb42kd1afrJGL3rBN","name":"getContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system 2d Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"0Oz7XnliLYisoOTZx9kPB","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"y9iYBFfDBPWfX4yzSLUxk","name":"getGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the global alpha</p>","params":[],"returns":[{"description":"<p>global alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"o7Qt4TherSTPWJCD46YzR","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Rqgyr3jl5B9CQIkiSheGg","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"6o0kBL1z7iA6sTOVr7eYD","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding 2d Context<br>\n(will return buffered context if double buffering is ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"aeaWFJCuUSNgSPgIGYGwg","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qYIobk7lDNetlr3dxTLb2","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"m8FJNFNenceqtcqO5Noqy","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ewbh3-PCBXoF5Pu3A6nnj","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"Au1BKbTsWKl0ttENasW8v","name":"resetTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the canvas transform to identity</p>","params":[],"returns":[]},{"id":"eSpto99YUHkJ2xzfY7ehG","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ZGn_mT8aY35tvLlob6pk0","name":"restore","brief":"","scope":"instance","type":"MethodDoc","description":"<p>restores the canvas context</p>","params":[],"returns":[]},{"id":"Z22N42vkhNnh3DyxmVEoq","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotates the canvas context</p>","params":[{"identifier":"angle","optional":false,"description":"<p>in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CeidKFeodhTrpOYWKjlqz","name":"save","brief":"","scope":"instance","type":"MethodDoc","description":"<p>save the canvas context</p>","params":[],"returns":[]},{"id":"6hd9ERR7xDWyOqt443WON","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scales the canvas context</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"iD_bmQ9OnGsdSleKsVhAa","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Qc1vdHg7cnbu0zekXao5R","name":"setBlendMode","brief":"","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"type":"MethodDoc","description":"<p>set a blend mode for the given context. <br>\nSupported blend mode between Canvas and WebGL remderer : <br></p>\n<ul>\n<li>&q...","params":[{"identifier":"mode","optional":true,"default":"\"normal\"","description":"<p>blend mode : &quot;normal&quot;, &quot;multiply&quot;, &quot;lighter, &quot;additive&quot;, &quot;screen&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jZsdlAxo2UwPIQdqbEHdR","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the current fill &amp; stroke style color.\nBy default, or upon reset, the value is set to #000000.</p>","params":[{"identifier":"color","optional":false,"description":"<p>css color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"F1FF8gQAqjuEv7V3KqMiP","name":"setGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the global alpha</p>","params":[{"identifier":"alpha","optional":false,"description":"<p>0.0 to 1.0 values accepted.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"0Xwvkgb7Xcp8vNLN1KUfo","name":"setLineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the line width on the context</p>","params":[{"identifier":"width","optional":false,"description":"<p>Line width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5ZMo2zYXRzHxS6vuSG3Hu","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>the shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"MzWUTmcNZ2nlUXdUh0iaO","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"QM5VPU8k5B3e1YoiRyK1c","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_NO6Ba0f5-LwtpWyYZdQR","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset (overrides) the renderer transformation matrix to the\nidentity one, and then apply the given transformation matrix.</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"f9Yv7cInCHqpjw0q_swlP","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"D2GTx6vSYYguwuIOn6TnB","name":"strokeArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Do3JZOIIzo3c07ZaBZxXC","name":"strokeEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"jXgQvgimgxXImmcoz_8B3","name":"strokeLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"c0ep7Cn-gIfmZCPz-PuHR","name":"strokePolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke the given me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"c647hNgmlubvR4cxK68W6","name":"strokeRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"sb-fCWrmlmQsMQxvy-4e0","name":"strokeRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rounded rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"1dXT_JG5RoFDPEXAYmr-E","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"oMa0neoKmXYGteCF1BaMI","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply given matrix into the renderer tranformation matrix</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"jfXiOgOeqSWAuUQZCJhGD","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the context to the given position</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"ar1QxRS_7Nl0C1iPUw1zu","name":"CanvasTexture","brief":"<p>Creates a Canvas Texture of the given size</p>","type":"ClassDoc","members":[{"id":"IAfwU27x0-Bnp5KQ9mKfY","name":"canvas","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>the canvas created for this CanvasTexture</p>"},{"id":"C-XcSPnPkg2ipBQqcwfRT","name":"context","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>the rendering context of this CanvasTexture</p>"},{"id":"_8d_skefoxvGDun3bTFz8","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The height of this canvas texture in pixels</p>"},{"id":"CZkP18T9HA9qhwcklqco2","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The width of this canvas texture in pixels</p>"},{"id":"Jq9egbLIFKZdVO1Q7pUMO","name":"clear","brief":"<p>Clears the content of the canvas texture</p>","scope":"instance","type":"MethodDoc","params":[],"returns":[]},{"id":"mvD7MdZvJHAJGCXyLq5qe","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"width","optional":false,"description":"<p>the desired width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the desired height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"attributes","optional":false,"description":"<p>The attributes to create both the canvas and 2d context</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"attributes.offscreenCanvas","optional":true,"default":"false","description":"<p>will create an offscreenCanvas if true instead of a standard canvas</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"attributes.willReadFrequently","optional":true,"default":"false","description":"<p>Indicates whether or not a lot of read-back operations are planned</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"PO4uLCGdY2C3p1Gku2gWE","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Resizes the canvas texture to the given width and height.</p>","params":[{"identifier":"width","optional":false,"description":"<p>the desired width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the desired height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"UpA7O0-HV60BLN621FA-a","name":"Collectable","brief":"","type":"ClassDoc","description":"<p>a basic collectable helper class for immovable object (e.g. a coin)</p>","extends":["Sprite"],"members":[{"id":"9yEI49UdRHNwpCz5W7JwH","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"xDAu2YvaSm0JTdeRuICmD","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"HPgroZuE43hY7Z9UFYUtI","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"Ma05IyW29t8fM1acbuJAS","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"1zG-kGuprRArCCETMot39","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"EnCNMsW_7wefYBNQdS_4X","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"2jsHCN3MBTjcjU30awnCq","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"-OhMioO0opQnCSn1op_CR","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"yoBdSV9Jvj0hFWawOQTFi","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"TTjoT94AcwOmkXBuGOY4W","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"B-icRy8tg02CtqZlG0Ryh","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Gcye3nixDXd17v2-noyG1","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"NgBQeEOdV7Y5GXEJ1GSMw","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"TlZC5bgD3rZJX-M8c6Gvp","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"4Skh49E0sjKQsNGncuZ86","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"53fkWBczJcuBJ9PKZCJiR","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"Wv6YQkm-FDgNUWIBl6crS","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"aUCuvnvaXRdhxRd9A2fxg","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"hTTIC8SHQAkCAEWCL1p7k","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"AIkIxLt-N5n8InTn2YERC","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"hlAC8DcEPCI3Ef6kpUd_1","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"idBbA-O--TcZxEbMlYp2e","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"wTeLM49-rlgmP1F5X-dpp","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"sbsyJsEftRtWIWTg4Yh0b","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"tQtHqfxLIVGp5LMUFmcfo","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"DQNWejATtwbH2FQotn5_f","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"d2OUdiCAh4WLNKd3vZJ3G","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"6MCBg2Z_ZthQHI6CsNYB7","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"1kM6GTX0BqwiJ_NS-2aqN","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"x468jXYMaprU0gafieqtI","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"lyZrr7fsyuqbrQzSPDekY","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"HmvulwwvholK6Y-Z58CUW","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"fQIVvp4AL9ogBnvR_Yzv9","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"ndJjJX1KmdoUlisx9EPY-","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"ZqTDYIVpO1XpP4V7j6mgT","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"Ey7NLIvLozy8NpA08Di3q","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"VwTum1ZrQmGQTPT-PbawR","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vyWaTdHgvQNYpNjnjHR2B","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-kXCtF-izi8iQmiwnbRRH","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"OhYDTn63rRzyXpINC6Sc5","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9fNzwpIXTUBLOKC-_Uu9T","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the collectable</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the collectable</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>See {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"HTDzHVgDZuBcJ8ibh5jiN","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-6C1__DrM1TI48j4idQ7v","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ZamXUMEhdef-zTREx_KLC","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"SqMShnEUvyiAliVBiMEjA","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rvhMHbXNZcbce2tmRuzzc","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"i0mctCVlom2snJbaKWWkV","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"YTYhCJSQpn58PF3S8HKqZ","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7pmnEyYhM8AaBjLf3-fKr","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"cFLS8aEcak3UR9V_BmNCI","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"epgk46s8VmqiRqDEnsBMl","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vk2caeBRe7AsHFudlxMHr","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"X4cMGJ0f-0vMel4B-Dgj0","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ckIJ9QrPlxYshtLnS4sFf","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OSAGn1gJ7K7Ixms4LnhgN","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5bphhe763tng9Lqlq6w4j","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ij1VuOTMQf02sKkGmvENC","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"S1kdag5mX-S7csKtiQHKB","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"b5Xqo_IRKCoNqeq2HXSqW","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PnyPhDYvOd8o_zswqvUyZ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"TmOcF-wB9cdCj2hlGN3jl","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CQatusxHLS_rafuWWfP5L","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"xUJsRrgcOwPPOLJijeAs9","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"FCx_Cp-kRm3j4TZ0xBm54","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"X1p0dE2dlJ8aXKDJRknHf","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"98nch1WUPD6oGTVw_7LA0","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5ODfsfIIuWPUwX3bsAZVc","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"J_yAkAqAIbYOG-o9eO9eM","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"KroH7YqP_BHpRxUnU3Gxd","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"nHj4iCg6FtJ53ozJK5R_Z","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"PJCwHZzmK7eNk93gsclFo","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"WF7XpjahX89VdkBI5VUpw","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"u08YQCRtcfP0A73yExFQJ","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"TNI8rsNzULqYNsAuYavpG","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YXtoLMzRFDBFoEcgK8WtS","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"TlYs0tKyHOIjqGqNQZfEY","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"U5LcaEHU2kysUogY0SIIJ","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"2jpi5sHNVscUTK33KuFx0","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"k2T9bD-h62jBK7zqjKe9Q","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yobzuB6x1VICzC9Lj9reo","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"tcS3llhHH08w1JI9gsJ0K","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"dJgP1Wzmcx9LLS-mF3pSv","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"vcG5ZL9QYbuCZh5v1WlS8","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"dWB2rKysOIUaA8nXZu8CH","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"k9WksLRZFUwkPZQ7tqKon","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"PDw8Iel_9bsXkJI4sTBQi","name":"Color","brief":"","type":"ClassDoc","description":"<p>A color manipulation object.</p>","members":[{"id":"CTB1J5nvXWrypqY2Pg3RD","name":"alpha","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Alpha Component [0.0 .. 1.0]</p>"},{"id":"a6xpBKF0SkFbz-YLd5yUg","name":"b","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Blue Component [0 .. 255]</p>"},{"id":"lWwqbKApghpwzVerj4JTd","name":"g","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Green Component [0 .. 255]</p>"},{"id":"AVVBWDBU4yRw8rm6IVpP4","name":"r","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Red Component [0 .. 255]</p>"},{"id":"T_DT2iroJsT_bzUT_tdFi","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Blend this color with the given one using addition.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"I_9_0fFiI3sQVJbVO-o75","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Create a new copy of this color object.</p>","params":[],"returns":[{"description":"<p>Reference to the newly cloned object</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"VeS21VdtwOHG4TTEGaQaX","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"r","optional":true,"default":"0","description":"<p>red component or array of color components</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","description":"<p>green component</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"default":"0","description":"<p>blue component</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"4RV_09n0NgjLdrSUQnTrf","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy a color object or CSS color into this one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"qZ9-xLcbfWDQhxeXwkvb6","name":"darken","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Darken this color value by 0..1</p>","params":[{"identifier":"scale","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"GlNO0q5KG3fDLz9pbVX90","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return true if the r,g,b,a values of this color are equal with the\ngiven one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gGMozKm9RnwhDop8yP_64","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this color and the given one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>with alpha = 0 being this color, and alpha = 1 being the given one.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"ATTG1bmdBCIylaXVjacoR","name":"lighten","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Lighten this color value by 0..1</p>","params":[{"identifier":"scale","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"q_IsF4H4JNSBEtr8lJqls","name":"parseCSS","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse a CSS color string and set this color to the corresponding\nr,g,b values</p>","params":[{"identifier":"cssColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"usWO5VNT4bHO4Uk2GbUqC","name":"parseHex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse a Hex color (&quot;#RGB&quot;, &quot;#RGBA&quot; or &quot;#RRGGBB&quot;, &quot;#RRGGBBAA&quot; format) and set this ...","params":[{"identifier":"hexColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"argb ","optional":true,"default":" false","description":"<p>true if format is #ARGB, or #AARRGGBB (as opposed to #RGBA or #RGGBBAA)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"TT8-tcs5qNW8weIdSmlC2","name":"parseRGB","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse an RGB or RGBA CSS color string</p>","params":[{"identifier":"rgbColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"eaE0GM5Mj233FiaMrXL_L","name":"random","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Generate random r,g,b values for this color object</p>","params":[{"identifier":"min","optional":true,"default":"0","description":"<p>minimum value for the random range</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":true,"default":"255","description":"<p>maxmium value for the random range</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"HiVUBRTwR_aKVoTLC3jDO","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set this color to the specified value.</p>","params":[{"identifier":"r","optional":false,"description":"<p>red component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":false,"description":"<p>green component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":false,"description":"<p>blue component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"6jYEmMHc3v-xi153ekJ3T","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"NZB5Ej5fO-G41K1cxw_kR","name":"toHex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;#RRGGBB&quot; format</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"gYsNOmgVPc7yG0G6hwLaD","name":"toHex8","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;#RRGGBBAA&quot; format</p>","params":[{"identifier":"alpha","optional":false}],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"42pdD56vzCnYxVwO8Pb1y","name":"toRGB","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;rgb(R,G,B)&quot; format</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"pRucdDp3THrmuvT7IjLDQ","name":"toRGBA","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;rgba(R,G,B,A)&quot; format</p>","params":[{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"IMyS7A6yTq0HcYF50MzYC","name":"toUint32","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Pack this color into a Uint32 ARGB representation</p>","params":[{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"VWOg9GX8JV_ou8cdV5WkH","name":"ColorLayer","brief":"","type":"ClassDoc","description":"<p>a generic Color Layer Object.  Fills the entire Canvas with the color not just the container the object belongs to.</p>","extends":["Renderable"],"members":[{"id":"KiOmh5wVn7IRJ1877Igym","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"pvov_f7LVWJbLdSS6ef_v","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"L_EpBtDPRDIyFSrNdBQLX","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"GiOD2PBjIHj75vEYMmTza","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"mRnoKpJHNUNxdSgNSs-xz","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"gbJ032EbWO0t1Qfi4AB4V","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"D559TRq6mgxaDoG-Hy8h0","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"i5EXoQ_pQOgdP9tCGd-Bt","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"K__91zz7vSMwitcZE0j-1","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"qyHxAeH5AwNwHVtb_jpZs","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"ZNNqGhr8LA5MN_2RtKdLM","name":"color","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the layer color component</p>"},{"id":"gJQEiEAK5i1hDF0uqbWOs","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"3OAFqAhbBTdCikPH4EohB","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"riJopXk6Cko4jGeuAZzLt","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"NWJFbyTx2JsNzWyCk8oRj","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"cAi6MKjV_toBC7CddyghG","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"3URWu6iMVvuoXJsmpOoEp","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"uSTHpRLl3upnMdLN1FsQX","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"wzuh75UmRY7Qs9o4ooeSe","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"hETSEFopnqpUcKGtlUDeJ","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"I7-prOOzSqzQgOHOuOiq0","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"Cccq35YtYosWmo-RmQ68i","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"qsxD9Tf4tKCuO7h5gOowM","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"xInKZ9-_ErrMKTYUwZ7pz","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"tAjXlvher9p0ijLirxIkR","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"DTF6ixMLpE-QlZtQvunuU","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"3oKpQWoDjKNTgz03Ffu4j","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"3g20hzfAU3SNbcfdL0Ggo","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"pnq0o7vD7lIBu5xZ1ypSH","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"71puKTgiBXfEjwL64LvXw","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"kyIOQ20uSVeXYgpTHGz2L","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"RamcJ9uvRNKOfe2Rjp7uh","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"cw_mm1biJUlGGkmAlKovT","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"l2sIUBgPqJNDl__hbSzMM","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"KXJDfvYIjCniZ61ZClzQW","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"UArBDe7H_M2PN-jldHW0r","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"XSZCyMOymzhj2cJP_X0iX","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"name","optional":false,"description":"<p>Layer name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"color","optional":false,"description":"<p>CSS color</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"z ","optional":true,"default":" 0","description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"p6O4aGt-ZtnHD2ZzhaIbg","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Kg8BMx7W2loGhmK_i_j_o","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"oeeomCQFckCLUzDYcZSZL","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jnR5JXv-s21dyr88DqOsY","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3p_FAum0RqAKI2hu7r7WI","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"FlpASsH5nHu17BjweIFDH","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"SgehuKIu7CRtRrPrgMCfJ","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"jwsiGp_Uh3NDUY9JxB35q","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"qRjtgCMJOX2VYWVwPOm8e","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Q04ko2MLf5-MoY9iMoDDK","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"YCHbY8rqSmLqbuqZC_KY-","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1pDfX_k7Jpn3wx6JSTF05","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"R9RoDBhrmoNczj1QHTJVG","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"AUuQ3ZMePX2yibvsgMryC","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ie3vDyUw1r9coyYN2m4H1","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"0XgapZVpNxJhCHmdsNkkE","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tmyNHkarGBiTTnWichNEh","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PJXW5dEefmEkFTs9XZIu2","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"IWdnnPqQvGN52N30LyUJa","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UDTLzlbCvUIyIkvUjsBR-","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5xpvpdWFO1dlVlgoxTZ-O","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"BU8o5gggotwLcmJpH6APM","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YJweYwv0Nwb_wSmxJl4yG","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"FYuH-dfA7w4Tl74TLszrf","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"SZp7ajZZNZzCZ8fymCcYN","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zKxl0N7e3lhov24pg-fgP","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"VaPYAKSv9vRaZhWKpQott","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"cXQoITQGzpEo7MbgJNggt","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"0_bfWmX8qtCrNPmGJb4e-","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"dW4S04a_QAYpcB5El6jxq","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OVcByp5mJh-hZj5xx19GR","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"U6J_wwAtUyTLV6wXwFB6e","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"41od4ke3Y_LBNQfbUW6Dm","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"T6vXk49EHyzwuxfX0S4FL","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"kaDasMzEX2ytngmYZo7ko","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LQtbrZQSUwAnVvPJt8iPL","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"1fEzy0bijDDV9AAhX38zj","name":"Container","brief":"","type":"ClassDoc","description":"<p>Container represents a collection of child objects</p>","extends":["Renderable"],"members":[{"id":"8MDuhxBF7jZFM19adiyRv","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"Hj9kgvIDeXFdHqlg6Hpvl","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Ax1u1mYWGKN9QALW5__v6","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"aB-plZSYfJFbtYXTBppeg","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"de7kBRsjRbtzn1ZRvUsxy","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"BYMspAOOA6McLRXJ6C97g","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"ys4P34P4u8dhXN9qIVjT_","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"nuDd7OK_OsFLVgGhIgcCd","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"fzzoz90pQNQ49U4yuPy-p","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"VdaJ-WP2cEKIJ6U-GiWBH","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"nyO40V4SYwY11t97BxT2j","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"iEC_wx9pqWb8DjgSA-OEP","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"DIq_Esc4s_GWVpgigj7oU","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"6iY8PsIoa7BdxhRpRThVp","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"rXWBKnn-0x6St53B04NU0","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"-A5qt_2-d9J4sl7IOW-xr","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"6_J5UCmuPXUQxVN2bIZ_A","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"dslEcW3lXGaIB8GaKSnuL","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"uEL5mZTlyPYpPQs6Vn9qT","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"wAk9O2H-vjxD-ThuXm1xk","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"vqPtR87qFsWhl085mRC2l","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"Tq9XPLRH3VeDDfr-Sp8vs","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"ixHVxwzruvTuTN-bi2WtF","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"KP8q0kYPzx_uCPuAWPbBt","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"9OhyYraHurvcQ5Z35gZ7j","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"Pko42jqdCvyg_MTdUleI9","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"c1WpytaDFLfXz53xU3w_n","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"GsW5oXBoieGfmB9lfLOvu","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"jUOk2ov5zKfHiKEGUxepd","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"BjnyPZJ3n3F2Kvbx6alsI","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"RIqx_0fynypdRZOnVy4EA","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"BhFHJ1oYENxzvUdkHmzOO","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"Ak6yCx4AcwuzZxe4kDzEW","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"0NAeydkzbrRQZRpCG9unP","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"6kvoFkqI_in6Pv1evWiTQ","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"2VcXn0JN152wq-N9Ly3r6","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"Tbdpa2HnXC_Gri2Doi_xC","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"smyVTlbTgbn-idTLJ4WWJ","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"SbM1mWkNXyuNdc2x83Krd","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"PyUHeKDF3-Es9Ltv28QgC","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"PYZzPzInDi5rsMAPLPtWo","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"R-dq-lW9AbdC2MH1snzKN","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"4aCMxHbhnp0U05iLPkZo4","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"lTXutwoIfH24IcBnlGxOK","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Qjsh9rHUwbnX5BBEc0cUi","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":true,"default":"game.viewport.width","description":"<p>width of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":true,"default":"game.viewport.height","description":"<p>height of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"16m50utaKs0wPsy7jXVc5","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Tq3QoK7JzqrHVnxxJKTlo","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"chdTtzc0ZZr87JMsoWj9K","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ayYnYk3rbZZL-VKv6-pdd","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6ZQDO3aEuo6JLm3rV7rQz","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"uAusWgGXwkrxDGfbGkcQ8","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VMt7EifeHDQMpEPmKB-r0","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"LSsrx1uU78FaZSS3wjS8X","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"76ZuQ9JVRILIlsp31_mFx","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"_JwCTYWHRNHbsdZ_4PqkD","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XFQ44bAdoeMNnlMg4GcqL","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"PKGKT3uxwh6Un59pIUq9m","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"_iUH-QrxAMbb-VybvIXoi","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"NLKl4Vzm5EQ5kU0HsW3Ka","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"oaktq9IbSS18u5fwpj4nG","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qZSqzlzf-EAgPpVIwAJ8N","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"E1omV8zNDlwsOGamuU2Nw","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"KmBvKtl5eSe3vK9VemoVC","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"8hDcAgQRSG0DvqTGlaz4i","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"BhrD6-I6RkMac5dl07-o9","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"B3OQjAiz_rAb2CFW7ZYtp","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6PGqkr8CMz5nOL3BMCtP4","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"nkBaaz8O70x8DZQVFjbHS","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ylQVnYEwCP-unH5IljxPc","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"NdFFFXA3UUWd5tfKAmbIx","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"FFXR_3CM3bIDQHbiFncRH","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"lDlue58Znx43RNGjX8lNK","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"zALW-HU6roGNb70TjjH8r","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"GhSYnHb8AEjrDoeO_r_j-","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8zF65jwZXtELlUCASbXul","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"sLdzVqEjIUGe-Tcrn8acQ","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"M8Pqn9TuFQG2nAUKF29Ec","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"c88rWvkE2lnyg3qBslDy-","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"76KYbIMx1hy2iS9POJlkf","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"dSX2GxzTnt-nSYC8ID41W","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the container, removing all childrens, and reseting transforms.</p>","params":[],"returns":[]},{"id":"AIP2WKsllAUwVLhH0GCgx","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"lPHwy-8Afen6_6kb-TTxY","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"hG3g5pgvu3D0U3lcDMv3V","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"rPL7bt9Hlt96PxMDH7uFY","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"gf8K7kTeSDf1AYpyWPXzn","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"nCqKDOI4rjy6alPbwZNSZ","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"IYqsbvBwiRGoXgHLn1958","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"vLbZwRp_5Gh_7nzu9qDoE","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"3SMy9fJimWTaCA-jmEeAZ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"sf8zwkhUBYgEQDKtJyGuA","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"X-Vy1ydK1NflwBprdyzj3","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"UUanz-hgZi6rtJyl9vcdi","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6jTu7qtgqZ7Y43tvZdauo","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yZAhfgoB147QXvW0r7Dfj","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"VrNZYuHvQVCH2pu3P3AHq","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"hy9azsXvZC79Mu9wypTmE","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_IN9sXHxzJG4KQV8XROXw","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Xu-_F0fkqIqZcuh-QXftS","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"VcbbMHeJCj5ofambEr3Gi","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"LVWkzkcv2GofVV707rlaf","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"4U8CKMBGddn8Q-SivELaA","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"d__T4gog0ag5Cx4PhANV0","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GrvI_Eii6kz7OhfzyLmF3","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"9SrByhJSLXxhgkmPmUsVl","name":"Draggable","brief":"","see":["DropTarget"],"type":"ClassDoc","description":"<p>A Draggable base object</p>","extends":["Renderable"],"members":[{"id":"IPNwtHcVgTvdGdpA-jH3a","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"J2IAW6yYGOdGnD186aubY","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"vNHYuIB4DvDSsQEgA-5I1","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"xGEOSlmYv4-mNa-GsN2U8","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"T60CdGrrQQ0_ryebrhwly","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"CJIrwBIoZETiF_3OQhx7b","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"MwRmBs2Po3R5t-nbWkQK4","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"jsfcZrUQQtJ0p1-Ge-ja7","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"jMlqLOkbb9QmQFLlraSsq","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Glm9YTFNHoJHs9w2BmWyK","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"ctQhbNiu-aVoB_2gbh4sy","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"QyMtkMU7g4dRI0X7EqbJL","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"l2oNkyownVDU0OMGPSCS_","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"5Ja7aqZ_eSZd0CXS1yL1h","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"n1cGSOykQkeQQqW5fKbzf","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"GrbdBDW3w0CV12zzvJ9_5","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"AA9Wku6X65Cx6kJbKemum","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"N-CrgidgeKUL7KgG90s1d","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"KQkuiWCP0sBLIAOzOvH3v","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"F0s5vZxtmPhAFPzyRWLwz","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"OheS1EBNW6qE7jcCFXUiR","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"i8AoF4aclef3yT235hKnB","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"D_vHlM930kLN1sp3SNLVe","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"bJBfTaGImuMXhM6rj3x7e","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"EHyoUTgxG1GpbT6MWuAP0","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"AKbBJXJugSYJACKQsCztB","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"v5Yl2ddrj_4ggrtfHJ1iH","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"9oWlQZh0SGOAD6V29Mi2o","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"EM02h-eET8Y9CrMS89LEZ","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"6bg3d5TQ_tGH2mSB5VbrO","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"D3aQpIubeiLwcWbkUn8Lg","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"0XXVnet4fxniNVW49jAVh","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"wMuhw0JKW_Hb_bwmNIBe9","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"FzMMVwMMw-3knEtgIS4ab","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ci8D-QsiYPwo2cukIbqaC","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"EPz2uKcj8MkftGnAbELrV","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>draggable object width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>draggable object height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vgE8ZnlCiy5zwM1K30xFE","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Gx6C8NMtXojFWaBGL5vnS","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0RyqaMaBhogA41Qtzo6W9","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HNC2IDi-rghwtpsYimKuI","name":"dragEnd","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user stops dragging the entity</p>","params":[],"returns":[{"description":"<p>false if the object stopped being dragged</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"uV9arghvJQf9nHxrgQrpI","name":"dragMove","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user drags this entity around</p>","params":[{"identifier":"e","optional":false,"description":"<p>the pointer event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"jKV7VXxY9DwNtwJUiXgio","name":"dragStart","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user starts dragging the entity</p>","params":[{"identifier":"e","optional":false,"description":"<p>the pointer event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>false if the object is being dragged</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4hDOgdKFOyPiUhRfSbo3C","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AkxUKexLx08Q8zEgMYoLC","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zgXF5lupILORHeL-BlLCU","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"fn6zMeP2rwJ2eZrhP-0dC","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"1VcoPhIgFKdC08CoZsEHl","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"6kofOqL_tj8Ybyz8usH_3","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"p8EAUpzELfj8DJA7ADAwa","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"aGmlmZxOsthjmYbIxYyeA","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lyky1yW7IcmcdSXHqG99R","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Q-W5ygu-r4TndB6-wHVDO","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Ps_9hw0aeLAAiNuU8sWl8","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Z8IHhqOa_IjtrQVFbMAhX","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"AmuyoPgBR5doOCfTHlbGA","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UiNwInXV1tDbCS_349IQY","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QLg5HgSS7DDtA8Gi9eJN5","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"j2gO7eWgef8KNjQljvGrV","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Tlt0erW4HOw8hvJiklq57","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UM0QcTppZjhjL9mrqDTJu","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"YiDMpEXwv8-rxcK-iOqzA","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nX3Zg6Fr9_FFLbFmSaYSW","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"VK6YbFLltihGZDQdoqFm9","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yK2hueFOaqpOlColcXvrL","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5Hj5NIThMZDONJ6VCvfPL","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"JAmY8_0xr0UL1ltGP4IUC","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rT_nwoWq-bnWKSjzGJ8xZ","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Ieaq7ZFvdHYhm90PoHRCk","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"xZXXE4lqoVt5Qly_K6N3h","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Kj0ZMLw55Sq-sjFCCiQqv","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"vXIIzFX2-yFO5xmgTYRRZ","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Ahb75FHXTIneHJxFa62ep","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"48Jihg0mW0XiyMed94roF","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"-Qyj2D713dsvlZ2r_QCwt","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jEL6HaKn-iYPJDaqxlJtk","name":"initEvents","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Initializes the events the modules needs to listen to\nIt translates the pointer events to me.events\nin order to make them ...","params":[],"returns":[]},{"id":"x6s_EJJKQ68Dhm0yhGt9g","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"M3rKan6RbCs7uuqCe5PI_","name":"DraggableEntity","brief":"","deprecated":"since 10.5.0","see":["Draggable"],"type":"ClassDoc","description":"<p>Used to make a game entity draggable</p>","extends":["Entity"],"members":[{"id":"aCxuZMutvNZKtiiVIF_Kd","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"vWhRYj_D0p41igmM2q8P-","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"z66iIcUR-ivGuBSx29Xqi","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"FlWzSlsElZspVcNnB5Daz","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"vqytaUaKwWMZWq3JhuKTD","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"BjB4N-1A7MoBppZgiKhaU","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"GnI5qUe3hT_HCm84WlNjU","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"j1g8LBnDEwA8TgUCP8_ql","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"On17sCTBelbDvWXBt_S7X","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"ro43VaJ3fKANCT_kvuKce","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"wkSb99mNEmGJrpcaL5JHv","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"68Sfhx77kX2cwUoKDe4yZ","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"QwEFr92NXTxKmwqbg3FgE","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"_FeePknnHF861h-krIbNx","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"yL40mFmnF22IJ8V4ayMyy","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"1AKsEIZr3XXHQKAT-4-t6","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"d1N8dxE8E1Q6HKc_NagXP","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"N-IJ8rKt_UHRd9SzrKgou","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"F3JAiQqFSQbmBqW2cf7y1","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"leEB04feCAaxmVDy4Ybwx","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"a80hoAOpeCIDpQM_6x3is","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"0KnfBS9C3XTp8BImMcVZo","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"YE3Toj5IYnkVl7UbeT0R4","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"SYaIDMr9MyA_fvWwDIIFo","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"dygX3Vf3QgP4F8atdsWZA","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"UAesLzt9FJ4ENv9vwA8nv","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"nZib7u7rgIMBptbyAZpcr","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"d5VKw_8VcBpsMLJEuSNeL","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"EE47y7ZfNegEZ-N0iJTV-","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"j2G9S11bCdA4PUp5lVF_l","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"RvwvA9si3QRTUuWFnnScu","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"-3MpD5iI_BotJVA-2GaFy","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"saoj8t8WEe8x654VuHG-6","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"jUtc9P1YHHQT-FF-qRXXk","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"UAtWtwmiYfyxih-A7ytKP","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"NZ2E8-Umguj-2_VPylQRX","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"tmxEAIbLLHy5FEmpsEhIP","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Kl1ePhzdKAwyj82yx5i47","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"8jdxzDZJqwhK8vgsl6AzK","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties (see {@link Entity})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"Sc3kI49NFacc0RCXAiTM0","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AfYQn_gtK4Xq_KalnzSp3","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"y2NECKtCAPm9Xn_Llqucn","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"LPD4U3SC04gMt5FBBY3CO","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gPb8oXK8rqmis0hVLg8ha","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"LgYfLhG22c1abNGf_dGKE","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"yFGSAlSNO2ZCBQWUs0mX8","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"3wEUb5hUsr3MaHnKYV9mK","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"KjOIVBXNsQus5LZPgYAiA","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"3TA44PylMVNfoNvnzKWSd","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"xy-r7012N0S-iXVfx-YQo","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gVk_gTt88u-zGG8STLiFw","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rBTNn7Pm94tSLJbSh8x39","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6GciX5m9iV91pQZbKZo1g","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0qQfLMTYfeqI4p4yDXSA1","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"HQvwYdcWciyhfB5amhe3T","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"8NdNyA44iUN5cJBp62Km7","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"j3uaMJqZ5U32It4Dj-dih","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Ev504E2Vb9G0lCBYYxV_J","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"jLvdAn22B0deGc4sYrOvQ","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6x-56KKes1_AaNv51ijp3","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pHBcHMWNswTCE9iBXfruU","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"IPcOhVXchg59OnSIqp56y","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HxWHTi3ChGWACrDerbLYp","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ZSbhPqOr5Ovyy0g33YN27","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"r6eLZVDwDlS5twVzRq_6H","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"18XXh5QaGfiVztUBX9QHb","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QfATqKqMCAxoH-QcqwI0H","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"EltmfBhAyulBm-9J0bdSJ","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"oE58VrAVskEdSaMotPkIn","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"QQ4uSl-a1a6iC0GGEF2hn","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"osvHxfOyhMl9CDVhWp933","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"eHDicXFlUDE-YMWmuyd8x","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"mPh57yWinaJkgAV169J9Y","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"OaR21jxmyeq4S6BXRWGCm","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"EicdP28NibORwgGsbQdiO","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3AyEFs0jAZ_sbA5UGvX3e","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"8hiFzoC3vB4pA9WJU8asm","name":"DropTarget","brief":"","see":["Draggable"],"type":"ClassDoc","description":"<p>a base drop target object</p>","extends":["Renderable"],"members":[{"id":"dhRbDtTFGsi7Zu82kWMCg","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"Nf4IeLHQZiHawQA_nN_MW","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"xWTMl6Ye95erCHXqbDmeR","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"4pKnE6FxztoCaSDNIfVL5","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"e5naUCGHepk5ZGcGmZyj5","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"JNU-2cAe46t0gJvnoyXls","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"wETORr4qFQKRmzCyfGlE3","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"ZEeXR1-_5IYedYprfQ5Ol","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"ZU5Btw2UbafQfF9N8B5Pe","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"ZyAZtY4aqqqAVrSzqTs90","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"Jj8NL2DyCSZmC2vo-OV3c","name":"checkMethod","brief":"","access":"public","defaultValue":"\"overlaps\"","scope":"instance","type":"PropertyDoc","description":"<p>the checkmethod we want to use</p>"},{"id":"GBPIgxhhIk3iBI5OGFsrk","name":"CHECKMETHOD_CONTAINS","brief":"","access":"public","defaultValue":"\"contains\"","scope":"instance","type":"PropertyDoc","description":"<p>constant for the contains method</p>"},{"id":"q3lrQ8AnlcheyDtwgHYbg","name":"CHECKMETHOD_OVERLAP","brief":"","access":"public","defaultValue":"\"overlaps\"","scope":"instance","type":"PropertyDoc","description":"<p>constant for the overlaps method</p>"},{"id":"GEuR5PyiJOSDDzRLQygyK","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"wk2zzBgbz31TpKCMa_UKf","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"yLPwx4PxyyiRT9jghdOns","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"olhKT2DgrI3p22mEGdC4N","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"t_fvUVVodPoj10Yg2_nAg","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"GPxbBO7pzTHCNKFqvqEOZ","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"ni01i-SpNX1b-9A2_-i1C","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"f7u_guX-5stFYY3yhNkWw","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"vIa7C2-ld-945Bt_NkEWL","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"-DT-kS61iRRHthLjwPHkD","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"oYRPL64iHmGJmAMtJ_G_T","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"kwMwDIHO_7cZKArZGP--h","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"gT2vS2gn_g8kRoZ1q75sP","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"EMntlophGOSDVNZhlJc-A","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"b6k-TbQCJylpf0bgG5svz","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"-2qHCcEnEGBudaUMa2r4k","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"r3zdDGD2y25I8AJ3XDILf","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"0muqETCgAjedM-9Pm9tTf","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"rfR_nJoi82RKT3ke4XtUV","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"nsRM3gS78l-wekHI-3keX","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"LrTcI6w2-anKG8BU0OmAH","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"0ikImZZ9t4JcfbjEU7omB","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"terJ8CHcuu5EYCE2ZdYe4","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"aQ9VNY-VxPFpmoiHPqANw","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"k4sFdSpA1ItdY7cs9uPNr","name":"checkOnMe","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Checks if a dropped entity is dropped on the current entity</p>","params":[{"identifier":"e","optional":false,"description":"<p>the triggering event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"draggable","optional":false,"description":"<p>the draggable object that is dropped</p>","dataType":{"tokens":[{"value":"Draggable","kind":"canonical"},{"value":"Draggable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"H2oy4DcMFVTD63_FBGyOI","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"1c3xPkDBlrVrxgXSW5M18","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the drop target</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the drop target</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>drop target width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>drop target height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"y1OqphPo8aHAhdpZBaEw9","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"miohOQD8F-2boMH751lKc","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"S7jVEBL64RlnEKHsWy_Eu","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"J3ZDUObL5IJtHnGHENHAR","name":"drop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when a draggable entity is dropped on the current entity</p>","params":[{"identifier":"draggable","description":"<p>the draggable object that is dropped</p>","dataType":{"tokens":[{"value":"Draggable","kind":"canonical"},{"value":"Draggable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ExSrHhafGE0YIii9vJbWQ","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yiSREkIe6XDE07XccUOQt","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Si4zTJx0eCJZyvgLKv60f","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"AvUEQirVqsyvJMPbVIriq","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"NG8UzN0I_B_sKvSO1vI4_","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"V0UUaUmsSIQR4wXECB8mQ","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"mwL-wEk5zWzvzlfgOjvrC","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gmSVYyr4CjBXDwi0hzq-C","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZqaqBjBT1IqTcL8ZTQots","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"30XrJndMgGsi-bfDxDcxq","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VQA2r0AZVwVNudJvjYohR","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"m9V9PWwdhmFQMmUOIR_HT","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"3d_WAlwhPYMguRNdF1f0e","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"D16ybkwTy89PPv92bfY6f","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"VVFMQ9AlWq8RFtQvIa7o-","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Tbz9zBnHdhd5N8uSDzTcZ","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0PB0IOGk3ArPcOuTqL1ld","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"11PFcW3AzdaxlD-54tH_1","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6vBJ-fs-Im-TLwhWxSv4j","name":"setCheckMethod","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Sets the collision method which is going to be used to check a valid drop</p>","params":[{"identifier":"checkMethod","optional":false,"description":"<p>the checkmethod (defaults to CHECKMETHOD_OVERLAP)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"pE2NqBLo6QCYzdP6iNQ2K","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"8c9-69Hz1wcj7ywHKa0HC","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"qj5JWsxts_ApLcw8A6QCF","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_d0OZPJvZYTICU5xfGeFp","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gooH6xw2GL7-2mEIDB2vO","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YCgFbXjSKKCIwjfLQ4V0B","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"C73HwtxBslctVs1n-V49y","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kSDHhFtYXlOBXh6Pve70n","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"1oJzh2bfkhi02Z3AD8LFB","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"P5R02nQAT3y22PRVLzn_W","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"u2QX07Qxsbm3ZbALez0Zt","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"7xsAZOwTdhJmEeszqAY8C","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"-XbEviljaKq_J5qXrzziY","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"2YmRnLtJGQjjrTpd6Yal2","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KHSr6FX9vSnaHUHBtZRGD","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"9JNXeQ9jI7lZXTII7_VKR","name":"DroptargetEntity","brief":"","deprecated":"since 10.5.0","see":["DropTarget"],"type":"ClassDoc","description":"<p>Used to make a game entity a droptarget</p>","extends":["Entity"],"members":[{"id":"ZMMo26s1a5OX0h7Ug0jaB","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"fM-Y_k8rqrrK8N28I25kf","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"dtWeYDaJaEcEiC7by8sy9","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"vWNOu3IuVkyj2MhnDaArj","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"S6yGWjpds6omthF47NmaP","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"JZ2Uu-XPrDguqs70CvE-J","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"RbCmstiRsFzn8ir0uvxmy","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"fd4nq1-KFYuPXzmQFk1V6","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"BvOc3UElmPBQC-E-V1Z0_","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"CJyUl6zuKZ0ymobE8xrTc","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"wKqEO97gLvaDq1-grwUVU","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"sYDAL9nZwUNe52TmUEvx4","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"I6A2Dok2EoJwFJjnI4saK","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"NIwXnoF2zt3x2d6heAGyv","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"FVsGyxsMp3BWl67IxembC","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"KG47RTRCa1a7OhQV6APTE","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"n_GvLP6z9zLwUlpBHMQQN","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"GSek9wIQEMGbj-0UDgaRf","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"LgQO8ZQJtCEWVKET8ZyTz","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"GXYIByBPQ4n6N6ISw40pn","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"vdzwCHUQ5qNWEZ1504Rb0","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"T_90MhZn_xCE0RiJq4hIa","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"u_P1ItAnZ3Ek1_2Xx5BNg","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"e0xIPdNr-s1A5DkcQo84N","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"U_3w46v_D6eC2vmp3V98Z","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"KSVtQ0NOYB7XzgladFfKf","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"qBhK4mCRB7upgCqjeo1KV","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"wbfgPaEmc1fdvCN-wIzET","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"MlvSGGDK9jDAIeKxZsmoq","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"-KbdVrNy1GoecjYhdQfU8","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"w6Jx6KQbsYVCKVfEYL45J","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"P0UKFQQKgKBk7OjUBNBp3","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"QMgj9KLH56d_zlkZYYadh","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"-dEjr6ysQ_GGejsAFnI9a","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"56-zX9T-2Gd2XOp1BNMQg","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"m5_Y2gAH9kJZOSKozqIGt","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"0wTQeSUwl0e1IcYNEHlNQ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ur4qrlTlwcfMtqaDUiIg8","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ciUdOzSKkjLDNsPEgyXP3","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties (see {@link Entity})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"pc939GYqQ3GvKZhzkQZXk","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"NyreEIO6huLIwlXXSLJ8S","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"W77szlPafl9kUHPkOQ4D6","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"N1dsb_9kP-rV5fiT6Q4PU","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gte1s5uHFLDX-tiLw0Tdj","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UAV1HPmk4i4TEQhnVL4cP","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"AY4wMYR-qOaihq7Kf-hi5","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"34dhK1_sYziBic7eTmLBB","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"h2uRb4j2a6uEM2ay4Nl_I","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"kMapNyJ7Fc8v3zuYp5yWm","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"GR8UKjBn6f8vPnSlV7K5a","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BVWJVR_VPFuH3MaOlIA7y","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"g3klr3fW5KuVJdr1Nwsp6","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"8ibTEzDjKvCbGltq_aIak","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bAhH0F_FqqD7nj7TL5KUl","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"ZDMeFmKmlzg-k_sHEfSNX","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"_iVV6WqJztLSli_dIqRCx","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Od4pdBOC8_xh6PnddNBCh","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PcHcghn7aPxTEcTh6l2a4","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"L1WuqBIvQDopvIjtxMxmg","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Y3sj5Vu4yqWoQzmU7yg-d","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"NO-aHS1pVHzNygviJ5d3n","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Qlg9f5OmAkO2er55jITz7","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DZOEdtUhJLfwNtrJQcoki","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"wpF1c3jqhIEy1FJbXVwB2","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"FS29XIcPzHmvJ5B-maP7B","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wKcURP18xsqHdFdP8h7py","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QDsryoa_-QI131NffkXK9","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_zdqlFLZILZ6QswcCuKkz","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"nPjChjay36LqFPwrOBhX0","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"BlXgJ5JzqbVsofltQAWeW","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"de9BGW-y4VHJz-U486oxE","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"XaRg1iqZGCfN36-4D0XWJ","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"28dfFNhjY3DAVD_7MpPZ-","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"-n4tlhiklgNXN13Cibib7","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"gHtZP6x7Qmrz_rmXe27MK","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dmJS2b-iUdrTyMjxvd3Iv","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"mrWc8YjAQ62pGLaw_42f8","name":"Ellipse","brief":"","type":"ClassDoc","description":"<p>an ellipse Object</p>","members":[{"id":"3Z11Glw2fJvFm3U2ZVY51","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the center coordinates of the ellipse</p>"},{"id":"BcqhmL5WcZJAQe9TCUR9N","name":"radius","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Maximum radius of the ellipse</p>"},{"id":"mCdQQBb2DAAGAuJS7XBdp","name":"radiusSq","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Radius squared, for pythagorean theorom</p>"},{"id":"bMB-hDSBrxLWUX8HFpIAJ","name":"radiusV","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Pre-scaled radius vector for ellipse</p>"},{"id":"D3wgXKfQ5asqfCzyJkc7R","name":"ratio","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x/y scaling ratio for ellipse</p>"},{"id":"jf2yM_1qa9r4n3LOgF4lP","name":"_bounds","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>The bounding rectangle for this shape</p>"},{"id":"hUTUYxd20ld7Ua45exKKj","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this Ellipse</p>","params":[],"returns":[{"description":"<p>new Ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"54Tq3tHS75cw3NccjUpOx","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the center x coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the center y coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5LmDQCOYmPgpsEo8iMEeR","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this circle/ellipse contains the specified point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TLNd7GYTpXPYWVSFvGC65","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"4-AOQhjtQXtHryKw74QPT","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Ellipse (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"hP4f50IB49xq2xaV5qOe-","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Ellipse by the specified scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"Uq3uaX0esLCXS3hfSIVnk","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Ellipse by the specified vector.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"f4VESvCH0yeFLBcNLdTIj","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Ellipse shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>the center x coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the center y coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"crFDjVXJrqcoH3fuCc8bT","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this ellipse</p>","params":[{"identifier":"matrix","description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"x49vfTJmT-x_7eBjooWvp","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the circle/ellipse by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"abBp1BUvbKDRuSmOC0Gw6","name":"contains","brief":"","type":"MethodDoc","description":"<p>check if this circle/ellipse contains the specified point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"FnREs14YZO7Ct0IP1KN20","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the circle/ellipse by the specified offset</p>","params":[{"identifier":"x","description":"<p>x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]}]},{"id":"EC-eHVAIk9p87EO4cj4cP","name":"Entity","brief":"","see":["Renderable"],"type":"ClassDoc","description":"<p>a Generic Object Entity</p>","extends":["Renderable"],"members":[{"id":"Ms2jZ7zD9Bo3dNpfjZbVX","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"VM2ivnIHAzi4TArCi72z0","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"0V4p0PZGUdwIlleG6RGRK","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"4KfaYT8Cki6yazc8gl-KG","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"KQZWmaDWFX2K2Iq1UgIST","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"xLUPo8vnHOAoSBIz2MdAR","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"MqyMkM1gaFryynElxNXar","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"77OW1WVyrd54br_7QhhvW","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"K8OQV16dgtofZdovzUKVu","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"VZ31ZGiICF_oRg0viLr63","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"FqnZu7xE06U5rFvrN9gWQ","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"z3Q5UbyuWsNO7eig7lnT6","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"Q6dO00zV-pP6-52qRqv37","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"fO7YP8mhb2RgvXA6LcOqZ","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"C9ds9m25Dld1e5y3OfEIR","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"VPNMis8mF5wn_aLKH-3ZY","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"vet0wfGqWThdXi0gFJ6NU","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"4D3kOk_9F2ael4RGxTWvO","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"hQIg6BXIMNas28mKdosyZ","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"IAf9VChEfdfPUqGAwhTM9","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"T0HjoFe5nPY_C_YNQBNYZ","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"o5LpUqEVdb8R_-lMEJNYw","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"SOIX1qvhHNUZADCjc3T1M","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"DvIepapW3OX37Nrn2nnsg","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"ObyyLdtKNUPrzT5Hr20Ve","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"cupmcreRkmwyHnN0orXh_","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"vEUh4Gdp0JJd_51U2HMCB","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"epyJEtbd3FnmaIfqfb44U","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"CVV2aPIepRon2AWmcXg7O","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"aaE9wboiZuHOc33HuYPu5","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"fOxrPvU9jqJ3qoaGkbeVa","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"ke8FxlMa7h8SiwdvWJz1p","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"KjM6MsW1IiZ_G50Uc9kYW","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"ziH4ldtCEab2RxIKs7fIT","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"qlEMzgLLHzxLH2-r9bVdy","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"kJQ5GlcfY17iRyFFihCt4","name":"body","brief":"","access":"public","type":"PropertyDoc","description":"<p>the entity body object</p>"},{"id":"k-9hNLgcCAg_Ipp3P8Lc0","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NNe6FBRb-RGV4ALb1KDJd","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Sd81_iwpQ2_HMznAQAf6O","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9UpywaB0M5klsH541qN_4","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the entity object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the entity object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties, to be defined through Tiled or when calling the entity constructor\n<img src=\"images/object_properties.p...","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.width","description":"<p>the physical width the entity takes up in game</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","description":"<p>the physical height the entity takes up in game</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.name","optional":true,"description":"<p>object entity name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.id","optional":true,"description":"<p>object unique IDs</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.image","optional":true,"description":"<p>resource name of a spritesheet to use for the entity renderable component</p>","dataType":{"tokens":[{"value":"Image | string","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"settings.anchorPoint","optional":true,"default":"0.0","description":"<p>Entity anchor point</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.framewidth","optional":true,"default":"settings.width","description":"<p>width of a single frame in the given spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"default":"settings.width","description":"<p>height of a single frame in the given spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.type","optional":true,"description":"<p>object type</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.collisionMask","optional":true,"description":"<p>Mask collision detection for this object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.shapes","optional":true,"description":"<p>the initial list of collision shapes (usually populated through Tiled)</p>","dataType":{"tokens":[{"value":"Array<Rect> | Array<Polygon> | Array<Line> | Array<Ellipse>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1<%2> | %3<%4> | %5<%6> | %7<%8>"}}],"returns":[]},{"id":"KV9bZBRDJz1XFMlrcLWd2","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lsnNNxk1W4KnBJHQiUTZS","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"TYZfj5_KJxK10D1aF6JNm","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"eeSqyCl0ozt2l7PFPmNsg","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7qr2ID-BDfnqlqhLlG-An","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"PX7QZceabvdnfrG7ZenaK","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lEyezMXqi97X6_Box_Q3w","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"8VGN17tBadwWJ9et0kn_E","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"107A_u35uAVsXY1Dk2D9c","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"mEQalo7R2oACxgp8cRBKK","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"EVHhsKoPu3tFlk9KHepfI","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EzsFSQMqSGamzXMQdLf16","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ugQnDnY_xF9upe33ztsfh","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"d-C4aXm6-_ThqxwUK78YW","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fKLkHL5LbJdTC1e1v0yl9","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"IUXG5MRjO_BRDjMlXbUCK","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"-9Bg9Q2GhKz4X1Zf7l367","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cbnNZhOhRbsjqsG9XC5Yf","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"IQ_iHplBOcDq0mZSADY-c","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"frtlvLp1ffj1ktjT68js_","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"8Bl-bfZPTo7WfK70_hoIF","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Jl_CLzP8BWfQGl_bHNt0R","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"MtkoqHP16mbz4qLpdMh-7","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"cc3qXoRbZvMfZNyYb9-gB","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"kOMyjLBthjvVbmb6ivpPk","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"oZA-qrivwWQudJaXFjDo6","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"2BlLB3FpUKLWEGkujbf8R","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1K4GFl_B4rUx2pbIPbGJi","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"199dqxSL2xcflib3G1e-r","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"c2P85qPMAp7Z88GOPywir","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pRo8C9PbWULRUqqx-Mnjb","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6t7IU176fZzGpWbVtLOq_","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"EXoZp3FwkzWydh5XyEPI9","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"YF4XYkTEqGB2tWjLL9mzA","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"an4ertI-UWio_v1lRRCOQ","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"JLqFKsoCOqXKGrzWYMmPX","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9pI1oL8CpdrlzoWCiidgQ","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"3SZoKG_ZO6KuxDbrFOqPn","name":"GLShader","brief":"","type":"ClassDoc","description":"<p>a base GL Shader object</p>","members":[{"id":"nzqNTac1v7wIPMPdsLJSO","name":"attributes","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the location attributes of the shader</p>"},{"id":"JYNNInQ_46FTjYGjcj_-P","name":"gl","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the active gl rendering context</p>"},{"id":"hjr49yu6B2vK4boMFfrTK","name":"program","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the shader program (once compiled)</p>"},{"id":"K6zUPt8wdfXGZZhoe6k1T","name":"uniforms","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the uniforms of the shader</p>"},{"id":"oMZ8WuY5-NVsPBcVx532h","name":"vertex","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the vertex shader source code</p>"},{"id":"NLYQx1n6JZiCig5CkM8kY","name":"vertex","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the fragment shader source code</p>"},{"id":"FtXMbTJTSOw0fEsk3lteR","name":"bind","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Installs this shader program as part of current rendering state</p>","params":[],"returns":[]},{"id":"ZcMvEJC08ruuWxUGoiECv","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a basic shader\n var myShader = new me.GLShader(\n    // WebGL rendering context\n    gl,\n    // vertex shader\n    [\n        \"void main() {\",\n        \"    gl_Position = doMathToMakeClipspaceCoordinates;\",\n        \"}\"\n    ].join(\"\\n\"),\n    // fragment shader\n    [\n        \"void main() {\",\n        \"    gl_FragColor = doMathToMakeAColor;\",\n        \"}\"\n    ].join(\"\\n\")\n  )\n // use the shader\n myShader.bind();\n"}],"scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/GLSL_Shaders"],"type":"MethodDoc","params":[{"identifier":"gl","optional":false,"description":"<p>the current WebGL rendering context</p>","dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}},{"identifier":"vertex","optional":false,"description":"<p>a string containing the GLSL source code to set</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"fragment","optional":false,"description":"<p>a string containing the GLSL source code to set</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"precision","optional":true,"default":"auto detected","description":"<p>float precision ('lowp', 'mediump' or 'highp').</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"4J6uxjjUoODkIqPSkvirJ","name":"destroy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>destroy this shader objects resources (program, attributes, uniforms)</p>","params":[],"returns":[]},{"id":"aeMnUJOoqQf4pgOgDO7ms","name":"getAttribLocation","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the location of an attribute variable in this shader program</p>","params":[{"identifier":"name","optional":false,"description":"<p>the name of the attribute variable whose location to get.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>number indicating the location of the variable name if found. Returns -1 otherwise</p>","dataType":{"tokens":[{"value":"GLint","kind":"canonical"},{"value":"GLint","kind":"canonical"}],"template":"%1"}}]},{"id":"bvjXSH7jW55XElMEVfEf-","name":"setUniform","brief":"","examples":[{"caption":"","code":"\n myShader.setUniform(\"uProjectionMatrix\", this.projectionMatrix);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Set the uniform to the given value</p>","params":[{"identifier":"name","optional":false,"description":"<p>the uniform name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>the value to assign to that uniform</p>","dataType":{"tokens":[{"value":"object | Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"object | %1"}}],"returns":[]},{"id":"Tu-3r20vKSN1KkrLEljf_","name":"setVertexAttributes","brief":"","scope":"instance","type":"MethodDoc","description":"<p>activate the given vertex attribute for this shader</p>","params":[{"identifier":"gl","optional":false,"description":"<p>the current WebGL rendering context</p>","dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}},{"identifier":"attributes","optional":false,"description":"<p>an array of vertex attributes</p>","dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}},{"identifier":"vertexByteSize","optional":false,"description":"<p>the size of a single vertex in bytes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"AZHkFvTvMwDlP6qiu69-H","name":"GUI_Object","brief":"","type":"ClassDoc","description":"<p>GUI Object<br>\nA very basic object to manage GUI elements <br>\nThe object simply register on the &quot;pointerdown&quot; <...","extends":["Sprite"],"members":[{"id":"Gk2bwHyIuOpMbTRzGyo2W","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"UmYtxQoa59EvarBpJNOPP","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"uieGENu8-qoj1MSiAsGto","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"dYBosCNWNWqX7U96cfbt9","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"bwFyATdQ_o3N9T_FZBFqj","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"zxc3Zu7r7OJ0JXm67oZLq","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"bPUXu3_bSCixVeHKeylW8","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"7L3GgVzB7XpGE1Nl8E0L4","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"izkFssgYJA5JEIJTfd8na","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"jN1JFhNxgUCySbjX37rkN","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"c_iyZuoOfWDplSZz0uHpi","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"RD68bXmh64X1Wn3N54e5L","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"-k-1PpcyxEq67duv0BVJh","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"A5t7WejKYNvpkQaAdi93F","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"yM_RZtEtfGZEjkTP9d10U","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"35viE9u24LFH9QU40s90F","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"oB6Qb9CPrhB74Pv7Hmhvk","name":"holdThreshold","brief":"","defaultValue":"250","scope":"instance","type":"PropertyDoc","description":"<p>Tap and hold threshold timeout in ms</p>"},{"id":"f-3ttz5eSdokArVz-b4Ur","name":"hover","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the pointer is over the object</p>"},{"id":"FsSksC9q7Gw8Gv0qyZMcn","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"dip-FnxwFje4NNCVTSlZr","name":"isClickable","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>object can be clicked or not</p>"},{"id":"Av87VjFdQSF6mAfw9B64u","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"0To8gsxJW1OZFqbun7bIb","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"Y5AcxeXMQFhzbAp29lI-3","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"HOQA87agHbrHHfcL3rXVN","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"7vJ_M4wrcnqADVxvR6opA","name":"isHoldable","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>object can be tap and hold</p>"},{"id":"FQ3xabRv6OsNX04pYL48e","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"WnxIgLXy4lu1jtJsmcgV9","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"lOFj82f1Z5uJR9xjwbTWs","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"Itb1byH57j8e4yQLkCHHL","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"ChVwnqSC65nE0evH5mstV","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"HqsljzlyTElUNoWq8QWm_","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"Gzw3dAxhWfk7jF9w1l2bk","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"saMpNretxnIwunriTWdVu","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"CQmLQSnY5UlN3G3B79G7m","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"cmvHYMNDpJg7M_Ub-LdBg","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"oTRPxM9VCYTLlO_01238z","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"ySCouDKxjzQvLZl_9HDi2","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"0Dj-cjY8kc95eLMpIwOf3","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"rjhQDWVhGilsqTDYTsA5y","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"P3LKzc6FEZXWUrJbCm9WW","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"FfPJl2kct6bPXWAdiGCkZ","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"d7g995rsgpnSna55I_vr7","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"9oHh-01bD57aguy99irUz","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"2tDJ8zLk-TgoO3y5sK2yF","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"G0CTvyzFjwxN2J01miYQ0","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a basic GUI Object\n class myButton extends GUI_Object {\n    constructor(x, y) {\n       var settings = {}\n       settings.image = \"button\";\n       settings.framewidth = 100;\n       settings.frameheight = 50;\n       // super constructor\n       super(x, y, settings);\n       // define the object z order\n       this.pos.z = 4;\n    }\n\n    // output something in the console\n    // when the object is clicked\n    onClick:function (event) {\n       console.log(\"clicked!\");\n       // don't propagate the event\n       return false;\n    }\n });\n\n // add the object at pos (10,10)\n me.game.world.addChild(new myButton(10,10));\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate of the GUI Object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate of the GUI Object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>See {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"kYqiw1YwA6srPHPD8YMEP","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CV_TsBFiQG-NlXWoYxwKF","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"aJi-tK8rtFYxe6KuWyBZE","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"f75qrBtPK_xfM373r3_Pt","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AUKZKeHXywB5ewrir_rmC","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"BuvdkxzGxMNs3_S9_LYuG","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6xjtyNvnL2v-T3fKIN-9M","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"jlJt0G9z3oSpbjcW3GTpc","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ypG2z3A-H1LCSKRCTio6-","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Ko9Vdj5pwfoOkWB4Wfq4W","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1Cs9J1PUizvCCi5Tg-Ygp","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"YTsyqN3B9YZDcTw_svbh_","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"GPO0fkMrA6XCybQXy-qUI","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6_n7gYA7E5Tp77EFDdKGm","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"h0ZEXHJigME-MQQnfspSB","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hZOnB9A36_V1fHwv60s7z","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"oe5WWXLROS2vGOKmQQ5b7","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6QEZ_XDExR7ydTbxHbEXc","name":"onClick","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed (to be extended)</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>return false if we need to stop propagating the event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1wbfC4YDKsrhwEhBOh7b8","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"E0XvXz3M_An5YORjPKey8","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"A85h1C9q69CTOpYIrE3Dw","name":"onHold","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed and held<br>\nto be extended <br></p>","params":[],"returns":[]},{"id":"H_HzuA4iViNJvu8CenvsY","name":"onOut","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the pointer is leaving the object area</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"GKE39gXtt0gRwwUrYmiaE","name":"onOver","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the pointer is over the object</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"m87dNN-C0jVJpIyx-JEv7","name":"onRelease","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed and released (to be extended)</p>","params":[],"returns":[{"description":"<p>return false if we need to stop propagating the event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Q-mf0x1y5q7F4FMLLM9oQ","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"02oRmDbWNlpH1rBstlgCH","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"cL0_W6c-9WAuxt077G9FW","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"a1vwgzECFQ5pdAnTMqQHn","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"TR5LupIP_WZ2YSXxwYJm1","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ueU_LCeQIQnFj-UiX4p2a","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VT9zsNq7dqs9XXauLbZdm","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"jMC01drKUdHKGetpyQBB7","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"k8pS2eIvM5Ua7r6cAdqvu","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"xQTTDs1ljLY8Mlk-bU0JG","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"IkUezlkLIp7qvvpmumf-p","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"wlEAhM5FsOosL-oyUPymw","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"t31iKrATLIMHGZ457zjQr","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"g6guujP3UyDVi9bGK8T8n","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"3l0E6AgwKy2sNZboCZUbW","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"WW6Tqi7i7-ol2brXo1sF1","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"gsCVrZDYoR74HMM82q9TW","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zJCI-NRCWxftqUAyCbwUt","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"bgSuFYVR3wFnrnkXHuxFC","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"A8krDEar38n-LAA8gLkLM","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"WpROGx958CFWP4CS8OaMI","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"K_pypP-GYOD-0Yj3Frr3_","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"QwIHJaXoLpf2ERGD-JlHP","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"g5HemChT2nkO1T4gLiluc","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"X-m1Wd4wyJ6ysxkjXoxSB","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"F9vXhWwnPnlO6WCO5J0Uk","name":"ImageLayer","brief":"","type":"ClassDoc","description":"<p>a generic Image Layer Object</p>","extends":["Renderable"],"members":[{"id":"PIvnEQzk5sQU3n0Sni88O","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"wmcZkofCYZ3C_dpLTjM0-","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Q9STzh_VOT9O-JSpKuXaD","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"YFbMoI1lUDOKwSSqLmydm","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>Define how the image is anchored to the viewport bounds<br>\nBy default, its upper-left corner is anchored to the viewport ..."},{"id":"qqOXJiUpGrmKv07xOcfHJ","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"Mz_oBq1o8_rX-WbXXwozx","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"Q8JIvPS4MgbGHF8ztZXBm","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"ASxROSScMmqyhOZUXbhcD","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"VOqPR8rPdzHKbzpG8FodQ","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"cDnfgYLnbiFnfktJIevsW","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"jBVVqZ7CLatPhY8qUOL1z","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"4eUE_qw0bgAZVRGldLaTa","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"gRUzklfQvUF08TW3g0jk-","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"Gx2sCG8MyhMMxNYEI4x4G","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"zJ_Oo_JX3-vbogUqxDwCE","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"H5Tin77IaAVQ-3N_HRzWt","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"ogeWcHk9K3zeWv7-XtZVE","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"icyjNSzEFrQElJQFeRJSf","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"7t1UWKr7ITqlS2TZm7ZRm","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"CF5qAzooSa0-01b37B4Gi","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"7RT_GG4dOgVfFOntvu178","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"zI6J2iteGGxJp5sX7kied","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"g1jVtP88shaguOQHP4FHz","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"vSO7HeCS7xj1Hw_gGW1mw","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"StMFeGqf7dK4Ck281nChT","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"YJChDALRbbRNo87PCC4ZS","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"tCgJF2Mm5sbyvRaNyPngn","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"-_OZiUQ1eiRPEjeZt3OEn","name":"ratio","brief":"","access":"public","defaultValue":"<1.0,1.0>","scope":"instance","type":"PropertyDoc","description":"<p>Define the image scrolling ratio<br>\nScrolling speed is defined by multiplying the viewport delta position by the specifie..."},{"id":"wue8sbgvscgqkez_k85ca","name":"repeat","brief":"","access":"public","defaultValue":"'repeat'","scope":"instance","type":"PropertyDoc","description":"<p>Define if and how an Image Layer should be repeated.<br>\nBy default, an Image Layer is repeated both vertically and horizo..."},{"id":"Jx1vIXO2SS1rPhZLV_Bxu","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"IoV8tzExHKpfcSMkQezhr","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"3iRT0yz_7FsQwSJsGhuQL","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"4oJd9hnc0zwxk2_1ieDrZ","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"FuF-dOvaTVwJIMAgR0nM3","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"aSXXCS5fgbvEK-Ar8Zz9p","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"JnotZH23GxCw53wm-Z3MQ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"WdJS4kyMmHHHCtPVr-Udo","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"nsLgKhrRSUK_RKoE8QUYM","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a repetitive background pattern on the X axis using the citycloud image asset\n me.game.world.addChild(new me.ImageLayer(0, 0, {\n     image:\"citycloud\",\n     repeat :\"repeat-x\"\n }), 1);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>ImageLayer properties</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.image","description":"<p>Image reference. See {@link loader.getImage}</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2 | string"}},{"identifier":"settings.name","optional":true,"default":"\"me.ImageLayer\"","description":"<p>layer name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.z","optional":true,"default":"0","description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.ratio","optional":true,"default":"1.0","description":"<p>Scrolling ratio to be applied. See {@link ImageLayer#ratio}</p>","dataType":{"tokens":[{"value":"number | Vector2d","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"settings.repeat","optional":true,"default":"'repeat'","description":"<p>define if and how an Image Layer should be repeated (accepted values are 'repeat', 'repeat-x', 'repeat-y', 'no-repeat'). S...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.anchorPoint","optional":true,"default":"0.0","description":"<p>Image origin. See {@link ImageLayer#anchorPoint}</p>","dataType":{"tokens":[{"value":"number | Vector2d","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"KoceSkERHPVEUGjkmiPZJ","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8B74C_Ouy9ALe6J2rOMli","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"QmNO53Dvi7Dwy3X2VUsZ6","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"3_kMN52-IPB77Isjyr_T0","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Sb1Wg4TENhcFjbwHcg8RW","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RdIONxJoPekSjF01vuxhV","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"HMRYOdcr6krzIP-bc-m4x","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Ad5a8sl-sBVhjIOw3VfDD","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"4Q-sGv8uosahgv4VdA6W8","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"r5087_qyrEXE6AChhhHD7","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"zeltq4TYHZfHdOB9T2pZC","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0CO3O0BXrGamHIMMLwPfN","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hMvo6zCz1nnjc7VLej3H3","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Y2daNcKb5FDkXXtwGBngr","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"i3nWdU0RlhPIckMiKzV4a","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"DFyzDigBAiZfKi7ithNSo","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yleEGGqMZnwwwRAQnm4wn","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4SuNuEFNMuFZO-0EBQoaz","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the Image Layer to match the given size</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"iUpAoZd-g1-1RMA_fY_3M","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"rnWUmF6mAmIIhOCEQJ6FA","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"EcMZa1YHmzcjJKMzI8f80","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"eYATGg8u1k1coPqeDCBtV","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"eqe7eVC9qgRwLH2EqAUDU","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"zc6ObRegy6R0mU4kZldB9","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Bs6kSivNPQMnBHU7tx4W9","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jm6Lo9PcAlPIiHwgeKV13","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"AbMPwQ42lr3FWZMz41K5u","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"q7Yqpc-BkvQJzo40nIa4j","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"KvWRssHa8flF-EH5PeUtH","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"roux7XWXlqDp1HeMHLueF","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ReaN7utRWgAgzOoglljgM","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"rUaz5x0FguJ8eXkJX1QUY","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the ImageLayer. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"qxdapzzgAETJAddOJa4hr","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"jXVuepvzw7ONH3lxuZUOh","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"IvMmS6DvzavSurh-3Q2MA","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PSj0JM6Q79xL3nfQFj0tM","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"VAsSNobKrhwwoRcMv2nTt","name":"Light2d","brief":"","see":["stage.lights"],"type":"ClassDoc","description":"<p>A 2D point light.\nNote: this is a very experimental and work in progress feature, that provides a simple spot light effect...","extends":["Renderable"],"members":[{"id":"G4a2IGKwkHqcvuKFc2WUD","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"ZGiHUFr6QmhUiQVFe8bN_","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"m8CBaJh0oI0TjZd0Tuloa","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"C49KwXb6BXYvltvQiGb1d","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"bMILKEmNIjZ9Ipo94DmQC","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"oiRQRbVtkTpmU_S0A13gE","name":"blendMode","brief":"","defaultValue":"\"lighter\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the default blend mode to be applied when rendering this light</p>"},{"id":"DHW4IRhJh7kIlD-Hma5TR","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"oouTYeP9CTnnWJVxAfV8R","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"GDJjLj6mufVnnB_fDzZCF","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"WQv3N5T444Dhpdwfe-IuB","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"TcOuXGl7wA9HskUBO-0Bw","name":"color","brief":"","defaultValue":"\"#FFF\"","scope":"instance","type":"PropertyDoc","description":"<p>the color of the light</p>"},{"id":"XU9UoVFMRbsEx1DN2BwIh","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"4ZcDAHGuplhV5elXf85mL","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"YetdCD_C4DFf00NoodvKv","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"i_zHaP07NH9_CBhpGMlEr","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"rpV1mvQzTidFcqH1fiJf8","name":"intensity","brief":"","defaultValue":"0.7","scope":"instance","type":"PropertyDoc","description":"<p>The intensity of the light</p>"},{"id":"KW5q3dFWRFXBrcTs-HzLl","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"5ijMBApoEs3WxuAJfe-JK","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"FrioE8H9TY8v_23JUhjpL","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"quiXF925ULliGU5Gvq3oj","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"krN-wsA_kcJi2Qxbtb1sm","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"miFGkiyyrP4uYQJs30581","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"E4pvfAJ_wMVxamL7Z2r5m","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"5jY3v-4KckdLIzTOdoAuA","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"4qdHsEl7lG4EvUZA4pF-3","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"7La9nnPhOTljqxwgMiVjZ","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"RqoruEZo7-GZUo_UEtikJ","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"fWf_JCnm5_m7YEvLML05b","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"eDPJJfFVLC-UpuCFfeTzT","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"AdPkXBVGZ2I83dlEc24_7","name":"radius","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The radius of the light</p>"},{"id":"2U8Hiyo_2IomvbLP--FQt","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"uC8kCOAS0OO0TFocfbz74","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"Rg0lHtpiTJiT3kKc2tNzR","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"TnQBaGAGvYEupd1K46CIP","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"wukRUGctwz3WT9zXt_T37","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"Uw3ukhahSBjYzInUSJSlT","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"SHRIGpLJE131WGf5q-9av","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"dlIQO_DK4CfKlHf5s5pqS","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"SnN1sH_ZNHYssCkQ1BXds","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>The horizontal position of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>The vertical position of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>The radius of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"color","optional":true,"default":"\"#FFF\"","description":"<p>the color of the light</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"intensity","optional":true,"default":"0.7","description":"<p>The intensity of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tLUU1gg9m-vGNkB0yJ5vy","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MFveORTcEwpTb9nSAW11n","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"dwdWPzOs57zyOAlqtJJ5c","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vTtF4EFTlTcX-t-2kxcD_","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-r1TEjIX00XGeXAZQs50V","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Tf-9mUjtRI62_HzPiBPZf","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"NwCPMOP00NsDcagMGNLCx","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"XfoAha1om94HbsHt0CWqq","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"sRdARTs2t--TVOJAzH2BH","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"gi-nLWPHW2mSxqEk4ATGX","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"r1x-3H5a1PxSvIT3xzPWe","name":"getVisibleArea","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a geometry representing the visible area of this light</p>","params":[],"returns":[{"description":"<p>the light visible mask</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"d94JAmtH9v2b4Bs_jRnnD","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pGtDWzge8SwPJ6MJiCUv0","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CK_7K8dSUDfxAWJy0JRxT","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"YvLcZwlIJkAGtcA1K_SvL","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"r6n7vw2y61gf8bQ6lXIbS","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"BWIXPbipP9Lffzp2SBDjS","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IhLE7-JMHV5f3wAv_NIgk","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ybXwpg7VxC2Y4QwpnCGSw","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"2GcZt28d6s1YcZC9hsWHp","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ms-88X7u6OypdI-1XIUhS","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Xgnn8scM4Hdv6aKzrT9KX","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"sEK04ohOif1zmMogwzOEk","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CvUdlTm_r7_HkjHyPNfXB","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"fsJMk4IjtwG86LdUO7kPr","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Q52TNksCq7Gh_y913i1T7","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DBrHyyb7P6NBfVnMEWfOT","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"vtnvYdJbZCzRkW8YwOMVR","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"MLxRRrLfwHaCSSqAjbfqK","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"l0w3L8efv2v8E_niMQDw3","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"FBiUDcePVpLTv7u9b9uxp","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uVKaqFNNGsIJ_lrFbRW0T","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"w20aCJTev9YQ1FeqixjmA","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"SfBG4v4h8dsQscTVvezbP","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Q4Y6wHHqV9EPUziw0tdH8","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"2HuL7fh0vN3G_EdyIoNey","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dNoXVY_vf-MYRAK5oaB1Q","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"Ph9kmq3uQRvrym9Rpall8","name":"Line","type":"ClassDoc","description":"<p>a line segment Object</p>","params":[{"identifier":"x","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","description":"<p>array of vectors defining the Line</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"extends":["Polygon"],"members":[{"id":"vM-qhjTSW7TkzMPXZStJa","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"DmKjUKSV_E9H2kosxsPMT","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"CvvTu3s28QmJDQ_uK71Hx","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this line segment</p>","params":[],"returns":[{"description":"<p>new Line</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}}]},{"id":"tjEerk0Wvju0Sl1_xZXdw","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","description":"<p>array of vectors defining the Line</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}]},{"id":"0Ro972byiLOVKPrQd1tdq","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the Line contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zwoN_Uh0FTgE9KYL5C89J","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"6cSQsQo76WsRs7Wf3Z_Um","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"lCXzKCM3u9LsX1bmiGpUA","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5eK2UXRYjczBJVTCVBc2f","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision edges and normals.\nThis <strong>must</strong> be called if the <code>points</code> array...","params":[],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}}]},{"id":"-zJUwf7j3fMW8E4YFlzZh","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-pZvkXdkXEDQ-TnJN6yYO","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"F5w8QeEsHA7_XniuNbk6g","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jyOZPcdZE6Qy6Hkb2YwHH","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Polygon</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2> | %3<%4>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"cTvJOJl73IjEufeU6XQXt","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"my1JTo4V-1pSmy3R4UAWb","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"PikJhF3FW4PfcaUt-IiVE","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"WccWajqHRS3oWYb869eKL","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uXeAeTcibiz6uTIEBGCbd","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"k2RT4_qWPBuMDbeYASu0d","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"nksnNdfq4f2pfjTg6xkV1","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the Line contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"JdSe9NbAYhqS6IuXricsQ","name":"Matrix2d","brief":"","type":"ClassDoc","description":"<p>a Matrix2d Object.<br>\nthe identity matrix and parameters position : <br>\n<img src=\"images/identity-matrix_2x.png\"/></p>","members":[{"id":"Pjb6ZFmERiTA12PIV5Pnh","name":"tx","brief":"","access":"public","scope":"instance","see":["Matrix2d.translate"],"type":"PropertyDoc","description":"<p>tx component of the matrix</p>"},{"id":"5yBiWQcUvsdy_W-TUSGta","name":"ty","brief":"","access":"public","scope":"instance","see":["Matrix2d.translate"],"type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"dhz7hipdrFhC3g9MOvuYw","name":"apply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"94Z9aPufVWOMiSgJuL0fJ","name":"applyInverse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the inverted current transform to the given 2d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"DtFyOcmKOex7GpBVQjN4h","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clone the Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"tHvbqOYWUyqdl6jwTVn5X","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"args","optional":false,"variadic":true,"description":"<p>an instance of me.Matrix2d or me.Matrix3d to copy from, or individual matrix components (See {@link Matrix2d.setTransform}...","dataType":{"tokens":[{"value":"Matrix2d | Matrix3d | number","kind":"canonical"},{"value":"Matrix2d","kind":"link"},{"value":"Matrix3d","kind":"link"},{"value":"number","kind":"canonical"}],"template":"%1 | %2 | %3"}}],"returns":[]},{"id":"OSGYct1WkSJiqsEoWkGCK","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the values from another me.Matrix2d.</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"qNjvCdkI7ZUDHvEFL4u_b","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two matrices are identical</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if both are equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2525YiXYPh_WLKqo8tt2t","name":"fromMat3d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the upper-left 3x3 values from the given me.Matrix3d</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"wALEuyhEfiw78_w7_U1qU","name":"identity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the transformation matrix to the identity matrix (no transformation).<br>\nthe identity matrix and parameters positio...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"21MLMdVuOxdKIRaU2hgMv","name":"invert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>invert this matrix, causing it to apply the opposite transformation.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"_9rtmEXLjCEX9NxsMAQqL","name":"isIdentity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns true if the matrix is an identity matrix.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cnRSoakDGLnojOM7dXgWX","name":"multiply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>multiply both matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"kviG1YLv4otQojkOe6Uk_","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotate the matrix (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>Rotation angle in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"imPIxYp7LLTkYw-DJshho","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the matrix</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"0NwvN5SaLwiCVh6QyRT06","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a 2D scaling transformation.</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"LzFiZIu_ftMpwWypay4z9","name":"scaleX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [sx, 1] scaling vector</p>","params":[{"identifier":"x","optional":false,"description":"<p>x scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"VaOd93hO0--004eIcbWcL","name":"scaleY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [1,sy] scaling vector</p>","params":[{"identifier":"y","optional":false,"description":"<p>y scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"0YyioXtRSE9rHV9hrrJF9","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the matrix to the specified value</p>","params":[{"identifier":"a","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"c","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"d","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"e","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"f","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"i","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"GRszaXIDqlJcB4dT1XZQf","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"3bCWBWniuG9NcFIF61aBu","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"-ErolrPuKeeCY7vg_fAjJ","name":"translateV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the matrix by a vector on the horizontal and vertical axis</p>","params":[{"identifier":"v","description":"<p>the vector to translate the matrix by</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"v9RG_T9L-buwFPxXF9RqE","name":"transpose","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Transpose the value of this matrix.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"Xdufvcn_6BPYYOTVdAUKb","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the matrix position on the horizontal and vertical axis</p>","params":[{"identifier":"x","description":"<p>the x coordindates to translate the matrix by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>the y coordindates to translate the matrix by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]}]},{"id":"wxyLp25rouJD87QK933UJ","name":"Matrix3d","brief":"","type":"ClassDoc","description":"<p>a 4x4 Matrix3d Object</p>","members":[{"id":"Bu14o2qI-_OygsMtmOyp_","name":"tx","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tx component of the matrix</p>"},{"id":"Kbwh4NUZekdXkvvBbboW-","name":"ty","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"SWETkvWWTJToAokmkjtXa","name":"tz","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"5llDnjwc2ymDFbqOPOC5P","name":"apply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"gXxKbslrAVPyWX1OXywE4","name":"applyInverse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the inverted current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"KGd4g7D61eLd7S8Ug2z9y","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clone the Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"MixVqbr7Rtgb_Sj8wcZpv","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"args","optional":false,"variadic":true,"description":"<p>An instance of me.Matrix3d to copy from, or individual Matrix components (See {@link Matrix3d.setTransform}). If not argum...","dataType":{"tokens":[{"value":"Matrix3d | number","kind":"canonical"},{"value":"Matrix3d","kind":"link"},{"value":"number","kind":"canonical"}],"template":"%1 | %2"}}],"returns":[]},{"id":"u_zvidwDuMlm4EzdPa7-w","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the values from another me.Matrix3d.</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"_CzS0MAO9x4vW5VJZJdMw","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two matrices are identical</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if both are equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"mR5357JNpP_mQ_VN_IoI0","name":"fromMat2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the upper-left 2x2 values from the given me.Matrix2d</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"2erspjI0daT8XwxyD8Sgj","name":"identity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the transformation matrix to the identity matrix (no transformation).<br>\nthe identity matrix and parameters positio...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"rRVsRwXHTV24FSlTgp4-1","name":"invert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>invert this matrix, causing it to apply the opposite transformation.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"LdQfsP8VXEoSLZTJe5E5L","name":"isIdentity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns true if the matrix is an identity matrix.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4tJQn0VLAaVeIfC-DUJ9j","name":"multiply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>multiply both matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>Other matrix</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"IOeWARRn-v6JtKs1ZYI9K","name":"ortho","brief":"","scope":"instance","type":"MethodDoc","description":"<p>generate an orthogonal projection matrix, with the result replacing the current matrix\n<img src=\"images/glOrtho.gif\"/><br>...","params":[{"identifier":"left","optional":false,"description":"<p>farthest left on the x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"right","optional":false,"description":"<p>farthest right on the x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"bottom","optional":false,"description":"<p>farthest down on the y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"top","optional":false,"description":"<p>farthest up on the y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"near","optional":false,"description":"<p>distance to the near clipping plane along the -Z axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"far","optional":false,"description":"<p>distance to the far clipping plane along the -Z axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"02AUYGCAgfuYN_VEBveDg","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotate this matrix (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>Rotation angle in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":false,"description":"<p>the axis to rotate around</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"eZlmKRzRaYbj1G76qXimi","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the matrix</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>a number representing the depth vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"wwDIqQI7Hvo3pdHca0V9r","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a 2D scaling transformation.</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"RDBGotlmbdG_8KWN_yfLR","name":"scaleX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [sx, 1] scaling vector</p>","params":[{"identifier":"x","optional":false,"description":"<p>x scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"1GDi0BUFhKM3iBUddgU0f","name":"scaleY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [1,sy] scaling vector</p>","params":[{"identifier":"y","optional":false,"description":"<p>y scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"J2RLy8fz52LHoEpF6RQrX","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the matrix to the specified value</p>","params":[{"identifier":"m00","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m01","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m02","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m03","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m10","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m11","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m12","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m13","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m20","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m21","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m22","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m23","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m30","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m31","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m32","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m33","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"Kh2OjGhcv9IEsrM2eaqE0","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"xcuQaa5-Vev8KcvoWE596","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"tkKhUsBgjus3QreIt9Zdy","name":"translateV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the matrix by a vector on the horizontal and vertical axis</p>","params":[{"identifier":"v","description":"<p>the vector to translate the matrix by</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"eLhZnQoO3bitSVwNQSnvZ","name":"transpose","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Transpose the value of this matrix.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"6cODW5NGy0c0Krg6oyCWz","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the matrix position using the given vector</p>","params":[{"identifier":"x","description":"<p>a number representing the abscissa of the vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>a number representing the depth of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]}]},{"id":"brfR366D4VKE_ge90s1iB","name":"NineSliceSprite","brief":"","see":["https://en.wikipedia.org/wiki/9-slice_scaling"],"type":"ClassDoc","description":"<p>A NineSliceSprite is similar to a Sprite, but it uses 9-slice scaling to strech its inner area to fit the size of the Rend...","extends":["Sprite"],"members":[{"id":"AicXghka8vjZy4kY2dNsn","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"w7umUjnqiTc5V4C9HyrB-","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"pAgku9QmaZwbofMv-hDxM","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"L06T3ZKsOVmwWnMzBhtJZ","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"yczxi7ky8QihbEq3Ha4QS","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"DKYnmVoERfu5LLK_1imTq","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"PE3DZ4S8hooBF_00IOXEn","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"4u7Q3hYjnw91SxWMqXIwh","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"3ZNo5mQmg7HDBDQ3xzXur","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"1I-IIKZ9sLsTlYyJnXU0O","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"pPplpUXUgZyX_tnIySyJe","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"qfps956orNgAr57KSGTZc","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"XQ-MlSgxBMBlog9Wb3gu2","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"_-J01IRx5K2hFHKjCDRMy","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"ZG8Fry6HsfjQok2CETW_P","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"x3yAQ5PzETJKytoi_cxi3","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"T4O9qiEd81ICQTMzoVRtn","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"K6kc-Q8h48PR1Fefkhc9T","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"Z7pbPDXq8iMU5HW03ZfWj","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"gUWFDvxEfN6PB3IWeSoBM","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"5K6QYQcmpwtz3WuxM1tve","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"XOAGrN-rZ6bktdORS2dnE","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"f8r8bj2gdF0N1vCJY7G3h","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"EwS-Ea1l286kbCgizsRE3","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"OKgJsAw3RHziVmjizSvXi","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"HyuG-__X7Aq9uW9YrOI28","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"fUZnfI1ha1k_fnUkp5jLc","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"ZrSu0w_uU5U1PE3PLKAf_","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"5GBSP3s52O4TPietPERO8","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"vIpvhqKG1VtfZ5u6YBiTi","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"T5KrWKXSCh4RhtsdjMgOB","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"i3x3SRjhja6tiQq7iId1W","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"-02k-WoX1cWo5I7PJ08XD","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"H88q03oD6ZZYx2yzucdbP","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"roJrs5sC1OCXwCWKCQMPe","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"-HZ3Z2_3_VX9g0gwV_v9B","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"hEbrofoy1DwIfnNMO1GH_","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-O9Y8F56Q0FHC3D2Cv47X","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dIVgQDG7WXPAKDUmvPIN1","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"OmLUmRWZSKj4fLf7YcrLI","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"sNpvvkzH9E72iX3Cm4LEg","name":"constructor","brief":"","examples":[{"caption":"","code":"\n this.panelSprite = new me.NineSliceSprite(0, 0, {\n     image : game.texture,\n     region : \"grey_panel\",\n     width : this.width,\n     height : this.height\n });\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Configuration parameters for the Sprite object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.width","description":"<p>the width of the Renderable over which the sprite needs to be stretched</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","description":"<p>the height of the Renderable over which the sprite needs to be stretched</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.insetx","optional":true,"description":"<p>the width of a corner over which the sprite is unscaled (default is a quarter of the sprite width)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.insety","optional":true,"description":"<p>the height of a corner over which the sprite is unscaled (default is a quarter of the sprite height)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.image","description":"<p>reference to spritesheet image, a texture atlas or to a texture atlas</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | TextureAtlas | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1 | %2 | %3 | string"}},{"identifier":"settings.name","optional":true,"default":"\"\"","description":"<p>name of this object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.region","optional":true,"description":"<p>region name of a specific region to use when using a texture atlas, see {@link TextureAtlas}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.framewidth","optional":true,"description":"<p>Width of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"description":"<p>Height of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.tint","optional":true,"description":"<p>a tint to be applied to this sprite</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.flipX","optional":true,"description":"<p>flip the sprite on the horizontal axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.flipY","optional":true,"description":"<p>flip the sprite on the vertical axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.5, y:0.5}","description":"<p>Anchor point to draw the frame at (defaults to the center of the frame).</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"hS6yaVQJI8L3KaSrj39aG","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Z8B6dO_PwX7zckSouHaSM","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ifLIwwSizMqyuqEanqTRF","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Eq7rp-1cdcvqgJICiREvk","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2JerGGYdPuYHVafKvZH8y","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"pPfL0d1sOmSSIWL36mOP8","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GpdrXTeXaWM8EMJjVRVHa","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"YNrAvV3mwU-HnRbI9DVjB","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"yRBexY_m8LxQo829yxiqF","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Tsj01K1nWrBfQW6EAjD0k","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"kX7V1udZq9_YKTEf-WlmH","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"3twJcREpWnj428gzv4zEG","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"TsQlYyqlB9n6AQOjEohld","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"b9_bA3Cco9KRorwUtfrWk","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2iGvKGW-Xt5c8k2JDRMhB","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rMcbcBHC_dV31JAwE2iLX","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0-NX674RMmRn-v0WEZRw1","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"nTAPhQ1Nru9_v3HzhEFuu","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WiOkWwB1juaApm9IK1zxi","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"RIM08MuCbu-UALVn6hRPy","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IbpZ2q3BduUPJEElwjc7g","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"454oeSC5XP3ykkrHDGTNq","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Sioscs5u2zdj9XoPWiD_D","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"6PK9r_K-wkbRr6QHOE5yq","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UHZUj-aSCLebnMcUuK4jn","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"o7FA228zW5RVBun61uHGz","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Q8c7Z_FnfNIuEYUUavpXa","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"tnSFKijK-A6x_ZQe0_uUo","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"PcblG_bbW4JmYFL8gnRTQ","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lfJ5TqI_iJie1mYQqZkJy","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"uN-zG7nl9YRnpoK1QcPY1","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PpWM3bPvzGQJPTirsT2fm","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NOTFyxmLtpuSvQSpgIgHc","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"GC-kDl9n3Rrnri1omeZ2u","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"--ljncYP1YyhpVPhjDWwH","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"FDORqbPoo7U31keZbaQJP","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"WFTBTq2oFNwdHX6xcRMD5","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cyrRUPctx3orkj9oNV0u8","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"e7iYuaA35rchctINOsRCc","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"QM6XyW6WlrIMSmGJ2mMxy","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"_Ha1gw1sCih3i9tZayDCY","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"fodNh2HgOUc2TTwZZYeBM","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"MLJzSZI4CPepImy8ltvn2","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZX7Md1qrhoXoD2iljOMBW","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"Bsx-32ZegG8P6TuWVyj2E","name":"ObjectPool","brief":"","see":["{@link pool} the default global instance of ObjectPool"],"type":"ClassDoc","description":"<p>Object pooling - a technique that might speed up your game if used properly.<br>\nIf some of your classes will be instantia...","members":[{"id":"fbc_8aWYUcZJwb0qnTGIe","name":"exists","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Check if an object with the provided name is registered</p>","params":[{"identifier":"name","optional":false,"description":"<p>of the registered object class</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if the classname is registered</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7RkwlTta-4kIg-y4HEcQC","name":"getInstanceCount","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the amount of object instance currently in the pool</p>","params":[],"returns":[{"description":"<p>amount of object instance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"aBshWkEB_hOZCBFfG8nhV","name":"poolable","brief":"","examples":[{"caption":"","code":"\n if (!me.pool.poolable(myCherryEntity)) {\n     // object was not properly registered\n }\n"}],"scope":"instance","see":["register"],"type":"MethodDoc","description":"<p>Check if an object is poolable\n(was properly registered with the recycling feature enable)</p>","params":[{"identifier":"obj","optional":false,"description":"<p>object to be checked</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the object is poolable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"epDsarz34jAuu3b4O50SJ","name":"pull","brief":"","examples":[{"caption":"","code":"\n me.pool.register(\"bullet\", BulletEntity, true);\n me.pool.register(\"enemy\", EnemyEntity, true);\n // ...\n // when we need to manually create a new bullet:\n var bullet = me.pool.pull(\"bullet\", x, y, direction);\n // ...\n // params aren't a fixed number\n // when we need new enemy we can add more params, that the object construct requires:\n var enemy = me.pool.pull(\"enemy\", x, y, direction, speed, power, life);\n // ...\n // when we want to destroy existing object, the remove\n // function will ensure the object can then be reallocated later\n me.game.world.removeChild(enemy);\n me.game.world.removeChild(bullet);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Pull a new instance of the requested object (if added into the object pool)</p>","params":[{"identifier":"name","optional":false,"description":"<p>as used in {@link pool.register}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>arguments to be passed when instantiating/reinitializing the object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the instance of the requested object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"NNcLgsMO-fDjYb8vk5Dgs","name":"purge","brief":"","scope":"instance","type":"MethodDoc","description":"<p>purge the object pool from any inactive object <br>\nObject pooling must be enabled for this function to work<br>\nnote: thi...","params":[],"returns":[]},{"id":"4mUrHadLBoS-idzarF6Rs","name":"push","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Push back an object instance into the object pool <br>\nObject pooling for the object class must be enabled,\nand object mus...","params":[{"identifier":"obj","optional":false,"description":"<p>instance to be recycled</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"throwOnError","optional":true,"default":"true","description":"<p>throw an exception if the object cannot be recycled</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the object was successfully recycled in the object pool</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fsecRba6QynLTe6OoH-8U","name":"register","brief":"","examples":[{"caption":"","code":"\n // implement CherryEntity\n class CherryEntity extends Spritesheet {\n    onResetEvent() {\n        // reset object mutable properties\n        this.lifeBar = 100;\n    }\n };\n // add our users defined entities in the object pool and enable object recycling\n me.pool.register(\"cherryentity\", CherryEntity, true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>register an object to the pool. <br>\nPooling must be set to true if more than one such objects will be created. <br>\n(Note...","params":[{"identifier":"className","optional":false,"description":"<p>as defined in the Name field of the Object Properties (in Tiled)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"classObj","optional":false,"description":"<p>corresponding Class to be instantiated</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recycling","optional":true,"default":"false","description":"<p>enables object recycling for the specified class</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]}]},{"id":"sjyUcS8Hy9cO5Xe4PtBOR","name":"ObservableVector2d","brief":"","type":"ClassDoc","description":"<p>A Vector2d object that provide notification by executing the given callback when the vector is changed.</p>","extends":["Vector2d"],"members":[{"id":"GQbxzMfD6bhUx02tXSTGI","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"8O9DCGxUaMuV3nUlQL2hy","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"pEms5MJskEw8LjLcmIMl6","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"MXzQjtpTIZsZjcfLbRzXJ","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"hE6E-A1KWqu3SdUVQHmjL","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"OUujn_iTsmYo6V-VqlERk","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"hKLFBfr4F07NXu-Pnearf","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"XpWhCADR07AuUBWEm5_Mq","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"umostT-OT9T3bBvu25JAY","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"As5-tnht-uZdMzCrSpxuX","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"jlsoOIztdQMo9-tovCcq_","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>additional required parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.onUpdate","description":"<p>the callback to be executed when the vector is changed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.scope","optional":true,"description":"<p>the value to use as this when calling onUpdate</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"SNswRSRYcCyutbRbC2Gr2","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the x,y values of the passed vector to this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"7nIZrTCGClrnQvR-uUKV_","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The cross product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"PewWn3M9qzM8OoVNrb0ZO","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"PzF7zWVl02nsfB_PGeZei","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"HVBdiYtjwhdUiRm0vAStr","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"iDZ9aU6FjQGMDkFRuSRbX","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IZKjBUwCqWG4YJf3jpcTD","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"a9ljiNO0nM2pz2IXrVdRw","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"ySsamJeJve3Ru5LPya3s1","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qEMNRi8sVsWfPgAZXq2u9","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Uo9GNkoNZhcBgITu8Rw_h","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"pnrpa0Azl5Y_EgdtvPWYz","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"-3tzB_GewTkM98rcT26Re","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"DSwEe7Rg3HJi8uHXhGaJO","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"PjKZL3YAGWlETegLWycKJ","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"T352Pj_ibTdfNfnZ8b_Np","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"TT9Q8TckjJpMS9YCpPySF","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"9UMl9Ch7hucbp8y5G5GKx","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"yYd2d6q7eworjAZTlMGkn","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"rRnfwBf87RZ8-ypwrvlpj","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"tZ36gY7Zi-YXc-H4Ia9gH","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"PX3gPPgAduviDT8u-qamy","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"NE26rGczoPwu3la76lLTP","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"x91R6SeHOutn8IkNyZeu9","name":"setCallback","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the callback to be executed when the vector is changed</p>","params":[{"identifier":"fn","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"scope","optional":true,"default":"null","description":"<p>scope</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"btAty_fxbHd7YbCPmSkGM","name":"setMuted","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vector value without triggering the callback</p>","params":[{"identifier":"x","optional":false,"description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"BjCgI83qWn73cnaS4cgf9","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"xmmw_7NhsMcoCCFfrfkxY","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"lpGOGM2d2L-JwKt4_JOXd","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"v2wPSEM0ce5SBkYR5krZC","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"wmj2DHLb_oiYewFQLWZBL","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"y0E4WhQ5VuSW7w95Xr-7C","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"yn1j1wsH1gOUGXAAUfDBe","name":"toVector2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a <code>me.Vector2d</code> copy of this <code>me.ObservableVector2d</code> object</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"RaqPLARGtjEZ4nAaAQpAV","name":"ObservableVector3d","brief":"","type":"ClassDoc","description":"<p>A Vector3d object that provide notification by executing the given callback when the vector is changed.</p>","extends":["Vector3d"],"members":[{"id":"KiYMytQn_zohCLHzJU8ie","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"VLLZ-72dPHAdjh_fYai5l","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"LgYq_CvZKPnk8iogGHTMK","name":"z","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>z value of the vector</p>"},{"id":"VDoD6D2DIxIYjLMztAX0Q","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"D0Rg3-R9DLlcZQSj5HvG-","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"2_8xF8ysi6Ut5MaIbK8vp","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7pTb2FeUyZtqD-u9RuSHk","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"Vw_Psv3iRDu-SFkA5SgfG","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"No1-JAkAWvtr7lN3p6hmt","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"Ofi7wtO5DtrgDzRhG9gaz","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"CvvBoJ21s9xmpaA0_Pw3W","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"4nq5x_GtOCFZfv9T-NHa8","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":false,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>additional required parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.onUpdate","description":"<p>the callback to be executed when the vector is changed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.scope","optional":true,"description":"<p>the value to use as this when calling onUpdate</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"9ovBVOfcbDqUyXms5hSth","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the components of the given vector into this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"5sG1MXTGKFvrDasPdn3Xc","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>calculate the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d | ObservableVector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"SbAYY8Ew8JSYYfLrKQbjn","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ScXb0xEPTS6c55HEo1zGI","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"vvwLrRuJg5wwz2gskv86G","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"G5CVOdvZ1IWg41G6nEKmv","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"puj_Jwc7j40OyYkCdF2JB","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"ipAn7omo5GnU_rjupi09k","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"PRbdqdS-K27aWJXX3i7D_","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7AMCp_diB6YD2fS0zFAFp","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vTmZ_ENnm6uOXByD1W4yF","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d | ObservableVector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"0RFqcfSx2X-3LpI5faaho","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"xI-I9PlDOaT7TKOmopYzV","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"VRlKR2jyDZqVuDGk9nUzC","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"InDwQcv0dEG_HtUfEP_Zz","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"IMRQj9JNds3UNqg-NPOd-","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"2KeZai5rGYWPwRKE9mZE_","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"aLxsQZN8wNbya_XObbf0r","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"3_p7IygMWmvxLfsd4nVU4","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"aWx4AtXhje3SnM_xJkDXA","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around (on the same z axis)</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"8qCO1wHBvyYOopM4K2qmb","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"DwSpd0PgGyJylgdr9eQ2i","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"RwATnUMteMgXIVIqG0Aer","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"UgFXJpisArUnKVELP0uQi","name":"setCallback","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the callback to be executed when the vector is changed</p>","params":[{"identifier":"fn","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"scope","optional":true,"default":"null","description":"<p>scope</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"ika8QeOzhKLq-cizhNglx","name":"setMuted","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vector value without triggering the callback</p>","params":[{"identifier":"x","optional":false,"description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"cdWl0bezvrSfnWSPsnzCB","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"iUyjl2LFVTUUaWbbhy9-2","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"L1rOViflCwVdHf-hokfNc","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"lvReYLZVKDGd4E9aoYXsM","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"BnezQ23XW3Uiq4qi54SR6","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"eYRPylSs3Iw2Ai5IMbBrX","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"fhIJKemLgkOzSykUV7oK1","name":"toVector3d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a <code>me.Vector3d</code> copy of this <code>me.ObservableVector3d</code> object</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]}]},{"id":"eaMWDgGvQzi4ZQwPIwNpp","name":"Particle","brief":"","type":"ClassDoc","description":"<p>Single Particle Object.</p>","extends":["Renderable"],"members":[{"id":"bqsVhtDspzFWOteQI-nMW","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"8ddJIflYvcM6cOBQF8O3g","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"eK58U1PhrAl90eJMGgZ3H","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"yG0Bo3wXXktUR2Kbywuye","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"CwUwxwAHb0OkVHhHuhX-L","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"KuE81MQgVOsIxDvmP4YNL","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"_q7xrRv0OY11RmJu_X09G","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"dQiAXZV0BUIz0ykzpkM_O","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"FNlabOGBnbc8WEtNQf-rU","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"AO-1hjcILA2rSXMqh2k49","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"0ZerOvoDDpRgAmTy9IThz","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"fij3SBNSEoZk4bxBqS5GK","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"0t2An9E_0LjWjJZNkZ0JF","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"ZWRWzMIgHhAy-pgA_FpJ3","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"YHS7ySIYEF4TfBQbXx0Ou","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"sdcdVw4VWbABVutOpJBNH","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"lpMZixwIp6x6O8tXsttUM","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"i1u6WO3Ex5knu9DnpS6rW","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"VTU245DxkA3yBZtjl4Cfp","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"SP_J7IX7iVjUV_9tJIz6S","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"Hd9MhJCwSC2_KHFt9KFfa","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"eMbIn0k_6OuLO2SU7o_5E","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"W3NKUmPiGGgDS7XTxkQyr","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"2p1cbwoykD_7WmSu76IBx","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"Gkwtj0NMWGChnqjZZ5AyA","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"En9-M2j-fd9mF9ue92IMO","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"0j2_cueTONEDuf6HLL8mD","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"JdTP2p7sY_qt7PXPtMohO","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"zGuypKBDaUwIvncFDFGPs","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"j0BwB7Pfnhq4uCDjdEcTZ","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"yBmt6IaWHx70ObiVVfTiG","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"jfO-Hl4cmA_rDMZsTR81X","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"pVuICEE0nuIh5mibCMDWT","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"EGZZ889vrugXcExeSLaSr","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Kq2N7uTjoWAOdpKijl_gU","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"R__d5adoACQm3I1I-vde3","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"emitter","optional":false,"description":"<p>the particle emitter</p>","dataType":{"tokens":[{"value":"ParticleEmitter","kind":"canonical"},{"value":"ParticleEmitter","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"_CuqpoXjkPXPCo-yFR2ZB","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vTlb-U4qcdd-yv8c-2XWU","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"qSUMWlsRZoHCw36qXGLl0","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"9JX8Sg1U-j43BLXKIp-oW","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8qENM_qXhG7blpMs5_edr","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"acnp44886rjeDQETEwRf-","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"BZ3zHY-YYOwXLQbdK64AQ","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"rAnyphLdsi9Txccp_L2yE","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"AYqSbWl3xv1ulBRLWEJN7","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"bfNSNgpNKqNazy71nxDtF","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"laymc3InndMlGERY3kU_e","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-2wKv2LXDfSn67foF2YQr","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bV9UPKsWyB1EDP5thJZQA","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"itK1MZpftO6zG0q7bAhny","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"o0VFRLRiyn9pwt9Yz-iEy","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"CqKv-BMh_ZqefRDlR2pUa","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Vrp5UyqAI9XpOQJeQYkhm","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"lKvagDs7x7xCu0dShqQtv","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"yyHJSoHC5TodpFxGfaoZ9","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"uT5VjTBbgiIH9GBICqWBJ","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"eV-YKj8Q-yeobqDLQPIbE","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"OeS7uI6i_gxhBd-WTsUn9","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"JdYnsktcEfG01LemVQr1y","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"TdhtzPaOCoEd72ahAg9bQ","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"aU7taK9fj4-feNOmVCMg9","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"WHeWd82mY9tOIBbMMpojA","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"A9Dcyhr7nm1jgIhzZ21-j","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"efIbd6CefFq2P7f4i88lT","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OvIeTj6RJGGgqVAGCD3_-","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Irp3_29atZHH6kviWEbB4","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"dNVNmKK_Lj-TPL6QJQK0N","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"jj9ggPm5kl92QjPCVCkRr","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"D6nCnnPdhMGKujY4kqsRA","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"WeSZcSp9ZtUv6geh5DN79","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"svlOmPAXxDIh9r5pcXxyz","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RqCNQ6J44qgdk6cK0wXRu","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"Mm_-h1B0pgGDzNEHjQQf8","name":"ParticleEmitter","brief":"","type":"ClassDoc","description":"<p>Particle Emitter Object.</p>","extends":["Container"],"members":[{"id":"sPpESXfi8ohCu9zZMXFF3","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"eaizI-7If05btSeYPj2e6","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"4BTqS5hHGq4i1Md9M0Y4c","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"V7cUbQisVBcKX8zZi2Crf","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"t0mpxSH4_xJV-IFl35A26","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"s99Vr7BgBSnxEz79Z8D48","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"Tjk4_cc77Eu0g6bmdlM_2","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"mXOxnx09vFgU44qwOpQtD","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"_Cd6cQYjjJI0zr62da4xo","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"nLTKsglUWLH-C_zGJ-GDW","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"eEd-kbthsqwMabuXRI0Fo","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"UkWGtneq9PXWjTZCDw7LY","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Xe4Z5ehwNz4xkke8TEOjv","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"DZHO5n6avawd1XmJE68rO","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"xIIxmfemiluqdjzT6cchY","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"BiocCgRqPk9EuZCmotFCD","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"F12eLy4TNKY5zX0Yt_fS-","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"K9sDooBBdP5TIIeDYw6tv","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"Zj57A6nASJv32cN0krKqq","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"zvwdFQOxll8MYbfKEoxjq","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"E_kNGFF6i9n5bNQhudGbe","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"TuYDdTc2UoB6fMoqWYGiy","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"BEAbgdIfeQNGuNARPhVkZ","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"LVSG4v2QG8y_y9HVORAvO","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"-VqCjJrUKGKZkkPYO1Vpj","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"N4CIA1Zji_Ev15g3vreKm","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"nHmXW8MwdGfr6kZ0Ub1Ny","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"B8dr-wHlor34R9z6MBqrN","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"K0U_WsKZaQhLw-d8syZ58","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"URHODlPAmwUsJEerMtcUC","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"XME4paef1ffDaMHQxhMAa","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"zoXYeubHdVFF4Ibjc6GfN","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"hXVXLO4L9fdKbyM0fLkLP","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"d9wJsdPvJyQ30Lm_SWt8j","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"DRp2FdBEVmXJ2aZcAI5dx","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the current (active) emitter settings</p>"},{"id":"w0uJmAx0CcV3xn9LrHcc7","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"rUi6eFaxqtLR2v45oFfgM","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"wKGohGG5Cx6qhuBH8ICH6","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"fxTK8RokMYaqLiWqjTGU7","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"MakABv_WzLVuE9fc5K07e","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"l5Qb1Q2Yc7cHcDLJElKgq","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"boAdKFfJyOLDq44bbaegZ","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"FyuXRK_DIQap7ctEWeOqd","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"zuXDXYx21jQwCRNXRP21b","name":"burstParticles","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Launch all particles from emitter and stop (e.g. for explosion)</p>","params":[{"identifier":"total","optional":false,"description":"<p>[optional] number of particles to launch</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"E9zv_sh0duan872bS1Ujs","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"euLvbDzrjvAv7k8EPVDW2","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9h9rwYF3KiCvYRAHDiMbJ","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // Create a particle emitter at position 100, 100\n var emitter = new ParticleEmitter(100, 100, {\n     width: 16,\n     height : 16,\n     tint: \"#f00\",\n     totalParticles: 32,\n     angle: 0,\n     angleVariation: 6.283185307179586,\n     maxLife: 5,\n     speed: 3\n });\n\n // Add the emitter to the game world\n me.game.world.addChild(emitter);\n\n // Launch all particles one time and stop, like a explosion\n emitter.burstParticles();\n\n // Launch constantly the particles, like a fountain\n emitter.streamParticles();\n\n // At the end, remove emitter from the game world\n // call this in onDestroyEvent function\n me.game.world.removeChild(emitter);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x position of the particle emitter</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y position of the particle emitter</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":true,"default":"ParticleEmitterSettings","description":"<p>the settings for the particle emitter.</p>","dataType":{"tokens":[{"value":"ParticleEmitterSettings","kind":"canonical"},{"value":"ParticleEmitterSettings","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"_qDAOWUbsgqI7KYlS2Sls","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"B12jTyaUGl-diTBn6GSde","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"MxWfHrOkQPT0s1vAEtS7P","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"C05b0MiPDZNsWhG11k6nC","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ba9D8eRcagpCqP2mQcYEE","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"qFyXFg7GyVQYNPyPiZ1d7","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"oTmM-bQipVKikA15Hk7Eb","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"vnjZAmW6ioORTf8J_vZcX","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"3JDyyTjHytGpDXc32Uler","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Khvy8W-OknSyX32pg1sLK","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"WXgw1KEcX3VXv35UHaJ1b","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"YEqWveuN7_hmaelLoTeA4","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"xkqVP63OYf2VxpXMc_sVC","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"kamBtiyBmaU8XHuXeU1XD","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"EHY0DXODX7_xipJr3m9gr","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vDqOI63TprF8Pb4LvKMkU","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"bZ_5OEN0Ktb3UEyQQtFKs","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"pABxf1TmzeONTtkGvFXcT","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"G_savDiIUAHXveWLqD9f2","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"kxYn-GQa_ZaThElwa3xyg","name":"getRandomPointX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a random point on the x axis within the bounds of this emitter</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Sv-z0aE_BmbpddkXotMdw","name":"getRandomPointY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a random point on the y axis within the bounds this emitter</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qWKmw6Hgn4xDrQSKJysM1","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"z3-M4h-wa_TfrZzVQVbIw","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lSBgCq_nBOZyBNGCumKC5","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2A6NOF0bPFhq4Wag3vpWl","name":"isRunning","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Emitter is of type stream and is launching particles</p>","params":[],"returns":[{"description":"<p>Emitter is Stream and is launching particles</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jYEY0tQlfBQlvyvjJyh7H","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"11Cdm82ZEB_jxLLafHf_X","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"VrGWCLzkIxYruHfWgboob","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"cxD-kg5kM3lUbEyt9fszn","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"vA_2-fL3hJS63svQp2n0q","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"QYf8zcCBvDMBENGqnJDMd","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VjU0tpQvyTYw4HxseI3ci","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kPLLpszoZpqiLsKBLmERD","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"E8yoHyaMmcFY_JlMGwxeb","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KwE4En9PQ6fmRSDPKMsO1","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BOU203jt-5cckA6SHHc4u","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"RTmek1hyYuqemP1_Jy-8I","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Hojb9DymoIA99Xh8gOpZC","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the emitter with particle emitter settings.</p>","params":[{"identifier":"settings","optional":false,"description":"<p>[optional] object with emitter settings. See {@link ParticleEmitterSettings}</p>","dataType":{"tokens":[{"value":"ParticleEmitterSettings","kind":"canonical"},{"value":"ParticleEmitterSettings","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"vAvKIIyHisjNaf2LLcu2z","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"q6V-8RAkSA-RKQOBChLJr","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Q6WJeqVDlzMpzq3SlopcS","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"N2MjAUtRzCAFSFFCRota-","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"d3DhS5rJqco2CiRwEybpv","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"1pWt3mD1YdeSBP3i4MAfa","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zVL2rv95Az6u-03SYfDXs","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"NjuXQedjPyVCbXOoQANBj","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Nm5L8bNacA8y6K-RFhb0s","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"C_ph_uE5Iqt2RNVYW4GRc","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"oX4DZHKFfO0tOHho0k-3p","name":"stopStream","brief":"<p>Stop the emitter from generating new particles (used only if emitter is Stream)</p>","scope":"instance","type":"MethodDoc","params":[],"returns":[]},{"id":"u_ifBjtuZ85f_oTsRByPx","name":"streamParticles","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Launch particles from emitter constantly (e.g. for stream)</p>","params":[{"identifier":"duration","optional":false,"description":"<p>[optional] time that the emitter releases particles in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"yVsleGU3rW8Vink6vGgCO","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"P-aAHf1Zkho8JGu9T6B2H","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"br_SuhdpNmey0YpdYM3_I","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"s7Ey1X7GNrxurzqAVUmlT","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"TYzqyHYKnszprCxDFjjOt","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"hWkeY3DYrg50vajxlJ1JD","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"IOgzsAxzYu728V9KBmElb","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Kc7my3mHhlCD1eMuPzL_z","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"bwEngf_DbQUQZROiqhW-C","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"NNvPjlb9hZTs3N_KzJUJv","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"QYdaheT2oDNDDRMdMnc9z","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"W_tWFIKzJRS7HZX-Sn6vc","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"beqvkP3VerjxhxKXTRnya","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"aoWrGTvuF5HU2rBXK7dgZ","name":"Path2D","brief":"","type":"ClassDoc","description":"<p>a simplified path2d implementation, supporting only one path</p>","members":[{"id":"mNZGNhuHul615ZgHcWpgi","name":"arcResolution","brief":"","access":"public","defaultValue":"5","scope":"instance","type":"PropertyDoc","description":"<p>space between interpolated points for quadratic and bezier curve approx. in pixels.</p>"},{"id":"gt7BOYwPCqaIDednTfmaf","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the points defining the current path</p>"},{"id":"dmOkpMssBRQZq78wITweQ","name":"arc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an arc to the current path which is centered at (x, y) position with the given radius,\nstarting at startAngle and end...","params":[{"identifier":"x","optional":false,"description":"<p>the horizontal coordinate of the arc's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the vertical coordinate of the arc's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startAngle","optional":false,"description":"<p>the angle at which the arc starts in radians, measured from the positive x-axis.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endAngle","optional":false,"description":"<p>the angle at which the arc ends in radians, measured from the positive x-axis.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"anticlockwise","optional":true,"default":"false","description":"<p>an optional boolean value. If true, draws the arc counter-clockwise between the start and end angles.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"1g3T9dPkfXEs4Ds5dk6ki","name":"arcTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a circular arc to the path with the given control points and radius, connected to the previous point by a straight li...","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the first control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the first control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the second control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the second control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7_f2GisVHIJhdQsHrKj3l","name":"beginPath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>begin a new path</p>","params":[],"returns":[]},{"id":"Xgih0x2oHLiDYbXDTGgJK","name":"closePath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>causes the point of the pen to move back to the start of the current path.\nIt tries to draw a straight line from the curre...","params":[],"returns":[]},{"id":"FyYxh5ZlPSwyokosZ7mqq","name":"ellipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an elliptical arc to the path which is centered at (x, y) position with the radii radiusX and radiusY\nstarting at sta...","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis (horizontal) coordinate of the ellipse's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the  y-axis (vertical) coordinate of the ellipse's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radiusX","optional":false,"description":"<p>the ellipse's major-axis radius. Must be non-negative.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radiusY","optional":false,"description":"<p>the ellipse's minor-axis radius. Must be non-negative.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"rotation","optional":false,"description":"<p>the rotation of the ellipse, expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startAngle","optional":false,"description":"<p>the angle at which the ellipse starts, measured clockwise from the positive x-axis and expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endAngle","optional":false,"description":"<p>the angle at which the ellipse ends, measured clockwise from the positive x-axis and expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"anticlockwise","optional":true,"default":"false","description":"<p>an optional boolean value which, if true, draws the ellipse counterclockwise (anticlockwise).</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"9rKTVILP47GQ8-hlSZWhE","name":"lineTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>connects the last point in the current patch to the (x, y) coordinates with a straight line.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the line's end point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the line's end point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"IgbffZPmK3kEdZ59G_TLY","name":"moveTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>moves the starting point of the current path to the (x, y) coordinates.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis (horizontal) coordinate of the point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis (vertical) coordinate of the point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"sfXqK4gPVuOeEE1sgGMjs","name":"rect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>creates a path for a rectangle at position (x, y) with a size that is determined by width and height.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle's width. Positive values are to the right, and negative to the left.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle's height. Positive values are down, and negative are up.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wQ_x4VqTiAzRpNedKybzd","name":"roundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an rounded rectangle to the current path.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle's width. Positive values are to the right, and negative to the left.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle's height. Positive values are down, and negative are up.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius to draw the borders. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VzebU6ew2gXmj4TbktXL0","name":"triangulatePath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>triangulate the shape defined by this path into an array of triangles</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}]}]},{"id":"njH5uMqv7xRwDgTq0Wf9l","name":"Pointer","brief":"","type":"ClassDoc","description":"<p>a pointer object, representing a single finger on a touch enabled device.</p>","extends":["Bounds"],"members":[{"id":"6yceeJRVOt3JU_hE3F4sw","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"0no-ELOkHNmdj1sjF9j_-","name":"button","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button"],"type":"PropertyDoc","description":"<p>the button property indicates which button was pressed on the mouse to trigger the event.</p>"},{"id":"MB_icgpbAbA9hHNZ7K_bt","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"A247L0CIFcPAOr-tgxRBt","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"tPhIMFLEhxlDaJtf6DtF_","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"SB8ey8cqwBhTSZf-fgT0j","name":"clientX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX"],"type":"PropertyDoc","description":"<p>the horizontal coordinate within the application's client area at which the event occurred</p>"},{"id":"vVQlOA24c0ZcUsDbw8IMX","name":"clientY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientY"],"type":"PropertyDoc","description":"<p>the vertical coordinate within the application's client area at which the event occurred</p>"},{"id":"hxUOxHcSm4Saa8da2sUUU","name":"deltaMode","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaMode"],"type":"PropertyDoc","description":"<p>an unsigned long representing the unit of the delta values scroll amount</p>"},{"id":"yevkBpdHo-ZQm-7F1DMm7","name":"deltaX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaX"],"type":"PropertyDoc","description":"<p>a double representing the horizontal scroll amount in the Wheel Event deltaMode unit.</p>"},{"id":"QMg-j5yn-O38HHhR3rEda","name":"deltaY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaY"],"type":"PropertyDoc","description":"<p>a double representing the vertical scroll amount in the Wheel Event deltaMode unit.</p>"},{"id":"POqPkblX9gBbVPkj-wUhO","name":"deltaZ","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaZ"],"type":"PropertyDoc","description":"<p>a double representing the scroll amount in the z-axis, in the Wheel Event deltaMode unit.</p>"},{"id":"J1JwyCKVVbrrTm78Jaqms","name":"event","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent","https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent","https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent"],"type":"PropertyDoc","description":"<p>the originating Event Object</p>"},{"id":"M36ro2pa8iI_BtAjI2_iD","name":"gameLocalX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the holding container</p>"},{"id":"iZdRG7oBf9aU_Z27ZhaUj","name":"gameLocalY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the holding container</p>"},{"id":"rPCgWuLjCAVh6ytWM_Kbi","name":"gameScreenX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the viewport</p>"},{"id":"Iv75DzFP-qterEFyxdpn4","name":"gameScreenY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the viewport</p>"},{"id":"tm0PFLUga2114PJjEIqgq","name":"gameWorldX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the map</p>"},{"id":"FMAZXUFiIPnf7EqshhcKW","name":"gameWorldY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the map</p>"},{"id":"Uj8mUVsQdtKkaU9jOw1iH","name":"gameX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event normalized X coordinate within the game canvas itself<br>\n<img src=\"images/event_coord.png\"/></p>"},{"id":"hhJe_9qvkOPYFpXajv6B0","name":"gameY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event normalized Y coordinate within the game canvas itself<br>\n<img src=\"images/event_coord.png\"/></p>"},{"id":"0jTYnagZvEsLO1Xzo5GIY","name":"isNormalized","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if not originally a pointer event</p>"},{"id":"5i56p_OLlGzUrUYbVHwPs","name":"isPrimary","brief":"","access":"public","defaultValue":"false","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary"],"type":"PropertyDoc","description":"<p>indicates whether or not the pointer device that created the event is the primary pointer.</p>"},{"id":"Wg_C6jahwV46q_bF_Aget","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"cIsZHCHH-R-k-b-nQwVNn","name":"LEFT","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>constant for left button</p>"},{"id":"KBHq416fx1zPwasAAftq2","name":"locked","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the pointer is currently locked</p>"},{"id":"K8YBTbgswH6_OYGIfHyjA","name":"MIDDLE","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>constant for middle button</p>"},{"id":"_juWfKKm6V8L04r7fVjiv","name":"movementX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX"],"type":"PropertyDoc","description":"<p>the difference in the X coordinate of the pointer since the previous move event</p>"},{"id":"gkV0_U_trm6nq6oRlmeJ-","name":"movementY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementY"],"type":"PropertyDoc","description":"<p>the difference in the Y coordinate of the pointer since the previous move event</p>"},{"id":"t6v3cu_T9pm0bodt_sniz","name":"pageX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageX"],"type":"PropertyDoc","description":"<p>the horizontal coordinate at which the event occurred, relative to the left edge of the entire document.</p>"},{"id":"NeY9CvnMDOryg4uJd4HOn","name":"pageY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageY"],"type":"PropertyDoc","description":"<p>the vertical coordinate at which the event occurred, relative to the left edge of the entire document.</p>"},{"id":"Mj9sIYd4RPq_4iZiaEkTe","name":"pointerId","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerId"],"type":"PropertyDoc","description":"<p>The unique identifier of the contact for a touch, mouse or pen</p>"},{"id":"LMGCgBLijYdlRlYsHYu7t","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"YcHsD1sZAfkH3XLerZdI8","name":"RIGHT","brief":"","access":"public","defaultValue":"2","scope":"instance","type":"PropertyDoc","description":"<p>constant for right button</p>"},{"id":"CNbrHE30uaJ8Z8S8x8X7h","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"pdUNADFwnCeYmlh4j9DXv","name":"type","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/Event/type"],"type":"PropertyDoc","description":"<p>a string containing the event's type.</p>"},{"id":"u1dV8gwDkfxEnElSfoJRK","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"g0SEXHSI06LbGNN3sp1-g","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"fcJ_nG2YA6bRGFhidGsCJ","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"QrbUrwZSzf9IHEO8yY_H9","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"T0Wa8lRf1SG9gEshuTNRN","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"rkNkgssNIjFaenCqCwbCz","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"qhiam-qPKnoMVYAZ75jZy","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"POWYGftDD6FDOH526D1YT","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"xhwvV_T86NrvtNHt-CV4-","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"7WOctC-EK_NQ_mMaYEa6O","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Pi2rwQpOJso8A1C-as0iu","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pO3FmLMiGnBEjeXGWdJny","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HX-Enl7hx4DhYUtp1McF1","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"am-_MvPV6IGERjYCvhVBM","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jjK3lC_i1deqS1qGpmP3e","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"CT4EVc_8GgOgE-ih2_KQN","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"BCeeNU8yYZOx1ZXRvOQE5","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"S9vEIDHVt-Poj-Xtcl4nZ","name":"set","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>initialize the Pointer object using the given Event Object</p>","params":[{"identifier":"event","optional":false,"description":"<p>the original Event object</p>","dataType":{"tokens":[{"value":"Event","kind":"canonical"},{"value":"Event","kind":"canonical"}],"template":"%1"}},{"identifier":"pageX","optional":true,"default":"0","description":"<p>the horizontal coordinate at which the event occurred, relative to the left edge of the entire document</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pageY","optional":true,"default":"0","description":"<p>the vertical coordinate at which the event occurred, relative to the left edge of the entire document</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clientX","optional":true,"default":"0","description":"<p>the horizontal coordinate within the application's client area at which the event occurred</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clientY","optional":true,"default":"0","description":"<p>the vertical coordinate within the application's client area at which the event occurred</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pointerId","optional":true,"default":"1","description":"<p>the Pointer, Touch or Mouse event Id (1)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"HeKjvl0mkookljGjH1pT9","name":"Polygon","brief":"","type":"ClassDoc","description":"<p>a polygon Object.<br>\nPlease do note that melonJS implements a simple Axis-Aligned Boxes collision algorithm, which requir...","members":[{"id":"wBQwa1n4vWCRJk-ZYKnGX","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"nQhiRYfcuCaZZc605nNlx","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"_QEdvkajUF_RGIlnbimTM","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this Polygon</p>","params":[],"returns":[{"description":"<p>new Polygon</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"dEgmh0RyeZyha4RohgyI5","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>origin point of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>origin point of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"Ygr4ttOJOVULTEXi-k0MO","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the polygon contains the given point. <br>\n(Note: it is highly recommended to first do a hit test on the c...","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"86Yum-Ws2PjyOgTUNlVzi","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"EE8X-Fsg_JpphWYRGOO0u","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"e-GkGEQI38x5JI3Zl8QlZ","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"c5KymQG1_GQrabgsaba2o","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"UfwA2PNlrScVK9HOrvZhQ","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"H2IOsV7mRmc6jUaIT3wS-","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"XGLVb0RwQ73DZ5FuHe7Fi","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-jn53OBLxBPuFRE1sQWiI","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Polygon</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2> | %3<%4>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"cwq3DePdFd8a2rUGr3Hgw","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Bg8oBY1hM0mKHZ4DCPxow","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oMQj1dQxTt2T2ZdEaFfxi","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"hIxODqmguWXxpIQCUR9NK","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"CABtDajrl-rBZezcGT2Ro","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ugRvrzdnI-YBCP_LgDvu7","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BhsCdnJkz4jWjL4B-VLgw","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the polygon contains the given point.\n(Note: it is highly recommended to first do a hit test on the corres...","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lqolnaF15qIPJlPGzVkXm","name":"shift","brief":"","type":"MethodDoc","description":"<p>Shifts the Polygon to the given position vector.</p>","params":[{"identifier":"position","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"WMdpeiSpsB1mtlYhZVWBM","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the Polygon by the specified offset</p>","params":[{"identifier":"x","description":"<p>x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this Polygon</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]}]},{"id":"BYrhxPzU_99BszcUnDQVg","name":"QuadTree","brief":"","see":["game.world.broadphase"],"type":"ClassDoc","description":"<p>a QuadTree implementation in JavaScript, a 2d spatial subdivision algorithm.</p>","members":[{"id":"17VmS9nsv2aHzfJTwwmJ_","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clear the quadtree</p>","params":[{"identifier":"bounds","optional":true,"default":"this.bounds","description":"<p>the bounds to be cleared</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"36no7sL-1s6oQ0dCs0icr","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"bounds","optional":false,"description":"<p>bounds of the node</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"max_objects","optional":true,"default":"4","description":"<p>max objects a node can hold before splitting into 4 subnodes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max_levels","optional":true,"default":"4","description":"<p>total max levels inside root Quadtree</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"level","optional":true,"default":"0","description":"<p>deepth level, required for subnodes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"S1wLfHZxlz-Qyt_VlTWqf","name":"hasChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the node has any children</p>","params":[],"returns":[{"description":"<p>true if the node has any children</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CcczHE3NyDMD3RSOAoMH0","name":"insert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Insert the given object into the node. If the node\nexceeds the capacity, it will split and add all\nobjects to their corres...","params":[{"identifier":"item","optional":false,"description":"<p>object to be added</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"lSDGPn-OIIj8ySD8i0SpT","name":"insertContainer","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Insert the given object container into the node.</p>","params":[{"identifier":"container","optional":false,"description":"<p>group of objects to be added</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"gYEALmywdG-jJGiNUsOvw","name":"isPrunable","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the node is prunable</p>","params":[],"returns":[{"description":"<p>true if the node is prunable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VdVlfAsF27l_6lar68U8Q","name":"remove","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Remove the given item from the quadtree.\n(this function won't recalculate the impacted node)</p>","params":[{"identifier":"item","optional":false,"description":"<p>object to be removed</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the item was found and removed.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pDS4xVVBtKNVe4BtJdltd","name":"retrieve","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return all objects that could collide with the given object</p>","params":[{"identifier":"item","optional":false,"description":"<p>object to be checked against</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"fn","optional":true,"description":"<p>a sorting function for the returned array</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>array with all detected objects</p>","dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}}]}]},{"id":"5DRHoZaIRhAG3B6Tip9ge","name":"Rect","brief":"","type":"ClassDoc","description":"<p>a rectangle Object</p>","extends":["Polygon"],"members":[{"id":"L2mlZLUkpHDuCiq_uc3uy","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"GC7gzglJDVaPufzOQPM6R","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"IesLNHi6hSupAEnH1C9yR","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"AMMdTqNUn44NF7rOr9aqy","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"FAKRjQWkl2t8uYRWLW8GO","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"k1qIbTv-Y7wjd5roqhtGo","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"c3ZDQMFwQhSRMZ4z5HDbe","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"dkjn2cUlpzWzTrWRTxfGV","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"ziIaWuV9Kfl692IbfzPyi","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"TToPlAL3nojbXrTQRdXII","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"k57aqxD18eOGbzMfisS_J","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"sSjXv1Y7UgxkMeS37UvNu","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"-wlfSOFneYs7ogyOLBiyr","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UcgGG8-cLhjx4Wpc58u01","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BmYbisANQDy3LaE2Gha_V","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"LIqwkanIJKXpI3AhxOswm","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fv91xbaGaWWCBLoTnAcHS","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"BDKJNqTgaKiOadWghXD-5","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"AuqjSwjh1lTqpyEJVhJK1","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Wa1VFFV0rab8WtVXxoz5l","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OWG2k9B8GBV9dpnPe8E5T","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jv0bZvbkWD3Ybvpur0zle","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"XnTmdea7nUq_imbr11S8H","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"_jmSM9gpiDLQg8sTm-lnx","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8k4skmx-r6I_BZ_RnVaId","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the rectangle</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"JZ3z3aPTrn115H5-tLorK","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6D_6E7AexwrXofNlK63J1","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"-1eNov4DCelIOjCtDkPey","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"87yxXp46AVwWImnDBVh3F","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lsnFn38sujqBJh_X38chA","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"dyCFygTdk7HsMY6K_LphK","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"fmRNjLwkDDB_dftVJsFWP","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"A17O6prBnkdNu7FEOW0YJ","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"npIj6z2Vxozrrv-IzmTwx","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"D6wtpNu_bcpUqKiNNuHb6","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ReQNzlF0H7HexbmZqoSKa","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given rectangle</p>","params":[{"identifier":"rect","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ggaNawdRGjxtidl2bIm-_","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"7Y1pUZc7D3wKaDHJSOh3r","name":"Renderable","brief":"","type":"ClassDoc","description":"<p>A base class for renderable objects.</p>","extends":["Rect"],"members":[{"id":"SORHoUhwlHleJC6AoaaXC","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"boL-iDwFbF-5soUedpq2K","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"OJGaNFpRJaU5kftizUspQ","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"JRYk4Vl1a_iqlTugRKcGb","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"1PZTHBE50bJFNBdbGS96X","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"bJRuC0-c7E6a9CqG_-ACk","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"i1plLbabUxeHsCfzRo1yG","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"WJRqlLM-HDjL1brr3wgmp","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"WVZyW_mstoKYi6ARg6Pbf","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"o2mJIbLQaJyznNPHnbUgR","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"xcl_Ies8P5kj-JTHn3lKT","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"xXRakNpE-UGT9OC4h4WBZ","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"bG-EWX9xxRzxMBh4RdpAX","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"jC9S4iR_06CCUY42Zjb36","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"4pPal5wqX7tPtF7xJIgxF","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"MhDKpXWCc6eFcGSSc1XfX","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"T3SNjjABsji_4jW21tN0t","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"SPg4A5zQAtBFRpTdBbahm","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"DRQWW3kE-c8QwsTy-KYsT","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"IedgGbfElJjrr2UGXvs64","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"fKUbHZZESaEx71wLb0vUI","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"cZwhifo1i9TQzShgsDI4S","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"hmJ54AYMLzA1xz8ljHGmX","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"e91mtO1z9xPSe_OOPaiGu","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"F2wbj4VhdGG1A4ph4CWJM","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"BllEWpBfbnB3jNdLOOjH3","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"FDD1lIoSmwLg9QIDm5w--","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"4MNFQMO9wiKhA8Xn3t-ah","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"geQ2myuNoJN7-AC7pQHK7","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"rdPSh3_DM2gyAnlXxsdiS","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"EBZA5KX2vdfVJUdJA7NUg","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"ZJbEc_e36W3icMJlmDdi7","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"hYTdd1V_S2su620bfIUmh","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Bsu25m1HtcHMKxCqiomTV","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Pv0Z8fZEPSMlEPCQFKb6u","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"q2JOZ3I_dQyFnks9MdbmC","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the renderable object (accessible through inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the renderable object (accessible through inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>object width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>object height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bBbf7clMS15XN0JLJ4DP4","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RTOZmaK0eaRsMPeQhCsoY","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"h502sHxVm6BvG74M9uCKR","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"D48VU-YrMEr-Qf4yoFGLr","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wKsJ324Wl_fxugAbalera","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7ySO958cXhsYdNkjdpIAZ","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"TiHoJuOnDrplIMPMwCqko","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Zg31r9Hq43zRA4qa_28Sj","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"gNUqPMB5pvi7CK_96YPYi","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"0jARq91YViwjBS_wot0i4","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"RwW6ePAZYk70mq93AfGvU","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"W8gOE_Q-yCipDeziV9Bj0","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QKXGvPdDJJGwxN84l-6Nk","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lP68oxkZZTxWs0kfconF6","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5MP3PhsFb4SigHfs66-M3","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"PzBh6XcReRNM9cG0Wf_yN","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tUN9pNLuwQNX9S71RpI_6","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"00_P_4Cq4RJJDTQxnC6na","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"XIPDx4e9PGcdibfr5YCqS","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5-2ep7gQ4qADkfZdLaLAE","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"NZkf0_i-uSt5JVZb8t15G","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"58yFJwNJiHFfeS7zKwcvH","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nBlRgiYKnyNLazwCfwbBy","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"g1Z_t24Ubn2V2kOvnXzFl","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"KfdMoMQwTAE_g_qEDLZpT","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"22DRc4LVUZWRXC6LlVi1Q","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"EI2p2guH9ypt5-XIzbLZH","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"TkJGSyG9k6eyJ_HBsFLZx","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OlynXKu5IC1-DiJC--IuD","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VXs8LqmxGEcVLT-Qc5JZn","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"s-vmwuH6_wJc6aAUpzVOF","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"rQ7AsOrTlKnlubG-2is_l","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"HUSlMpfMtFyo5VJK_dw-O","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ZNTWe_ui29mVlJvfjBChA","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"hoiQschhC03qVJ4AF7l5J","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DtcBUeVNifwH0JPSPXCZO","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"PMQbiqu2yxPjmH6iYAwru","name":"Renderer","brief":"","type":"ClassDoc","description":"<p>a base renderer object</p>","members":[{"id":"UFTW56r1k1GKt9MAC6Mqf","name":"Texture","brief":"<p>Alias of {@link TextureAtlas}</p>","access":"public","deprecated":"since 10.4.0","see":["TextureAtlas"],"type":"ClassDoc","members":[{"id":"CUX7wZIQIeRK0Abf0h3Sw","name":"constructor","brief":"<p>Alias of {@link TextureAtlas}</p>","access":"public","scope":"instance","type":"MethodDoc","params":[]}]},{"id":"xgowrDSjpFLwDTI1VJbi1","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"RMY0EiXcshidKZ3bdjxAy","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"xFAlKeQy0Btby0DBPEYPR","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"Vl7DB2jpdxLBZg-WfOxq-","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"WOrFyWNhmN4MwrsvTjU7w","name":"clearMask","brief":"","scope":"instance","see":["Renderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"gtM8J5wcD7dtff7_7C6Fu","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"QIuYEAKEdOPKNbX7qNbXn","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing, use false (default) for a pixelated effect.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.blendMode","optional":true,"default":"\"normal\"","description":"<p>the default blend mode to use (&quot;normal&quot;, &quot;multiply&quot;)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel rendering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.verbose","optional":true,"default":"false","description":"<p>Enable the verbose mode that provides additional details as to what the renderer is doing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"IJakHFJCIb4DiinGlwklJ","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"PgatKuE5EyiQDqZu6XZzT","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"SadveD0W6ot4IjYZQi-eK","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"uHSO4nrWQ8eMXP9DrqoaP","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"8TDTEUJOyCBQ71XVIAmSz","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"nZfgvEOs6CGEvIYJYyG0J","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"L4qxIvfTz4bGdkX-edMkC","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"HQRbNoYhV0VUqO-1yEzr9","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding 2d Context<br>\n(will return buffered context if double buffering is ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"kFVx7FVJFQalZNF9pygnM","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"51Gos9R5TFDUPS87EEi_5","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"oT1N5iuNr5hDp8vSQwjC2","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HF6HAy6k1OeX4leVbz9gm","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"eGWOxDgNb5qUmDtZOE7ua","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VZanP9mSgXx1elaERAEz9","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"de7uzzFMQA9vpo4uyFD0v","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>the shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"9VaQqDOnzTpuDlW3Rb6Ct","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"4ikdOzPSARYBpbx1zuO1r","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"PFXuZ6pxBZiRErBmyBWPK","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"xEfschZZFW-p3fa3Yj_cY","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]}]},{"id":"Oh0NxvpKIbUgTEAWEkSmN","name":"RoundRect","brief":"","type":"ClassDoc","description":"<p>a rectangle object with rounded corners</p>","extends":["Rect"],"members":[{"id":"YCM4lZaIg-x4_5I1qPEQ_","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"XILKUA2D-trgg3Fvk0aBj","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"rtLGBopkDj5hx2wDPtSmM","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"vTP34ynfUGwzwIt66qp48","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"W2e9QCJOU1IHAPYcXFGs2","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"s_8s8u1dhRNElUD5uBQTE","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"IgBLNRWtGEQWokqY1Ia1_","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"qp3KncC0fdsg12GID9T1m","name":"radius","brief":"","access":"public","defaultValue":"20","scope":"instance","type":"PropertyDoc","description":"<p>the radius of the rounded corner</p>"},{"id":"6_OmOcRTLs1rkVpmStKuM","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"iC-5VQTKDQqNPP2HlcvAG","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"_V2gqScbEloR952VeH99o","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"MT-LMntUHITOM6Vu_Fc23","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"g5oekzn9bEkYrky545duF","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this RoundRect</p>","params":[],"returns":[{"description":"<p>new RoundRect</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}]},{"id":"xW7U4loLX3KC3IH_5zJnk","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the rounded rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the rounded rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":true,"default":"20","description":"<p>the radius of the rounded corner</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"kgWaerSoPOGWTfFw_4Dga","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rounded rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Jnq3lJNhq9VbHHU2YlOlS","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position, size and radius of the given rounded rectangle into this one</p>","params":[{"identifier":"rrect","optional":false,"description":"<p>source rounded rectangle</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}]},{"id":"web5PSW20y5_7DlU8sTt0","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this RoundRect is identical to the specified one</p>","params":[{"identifier":"rrect","optional":false,"dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CAdkjKTyFpZ7gzIv8yz2F","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"JOkFo93xSdbp7Weaw_yku","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"MhDfYTGD-EixHkRQgv9_C","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QbbJRhe6D40xbyZb7iiw2","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kTn6TZq8ZCFU6fZMTATHz","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bEEF3KZIq3vF7mmqhSM9y","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"bk8D4btDHJ2aOKWtYApbF","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"JyShhvMOEi9Ta-884uG1A","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BqMfI2nQl_qmC1XDBsRKY","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the rectangle</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"vsprZD8Z4J1WOns1sJXS_","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"gb-CH0U7bc4-D8GarMq_U","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"bOY6Oc6OO2-csMQgC7XEn","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9xegkKPHt_OTMA8OEfGI1","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oH0L6a4-rmMLvPNBM88Hg","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jrNirXBxhf3vQzS74g0JT","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"omwzxG1mER5bhTUM5pf2w","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"xDPtfWGFbLNJedV6be9jr","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"z9uDD1lVQYDvSUQy4fPRp","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QvPX9Km-auGutxWQBpK4V","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"QBvbkqL6m_OD3IjqpEIR4","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rounded rectangle contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"Qz06s0V2CArCK3m9je1u4","name":"Sprite","brief":"","type":"ClassDoc","description":"<p>An object to display a fixed or animated sprite on screen.</p>","extends":["Renderable"],"members":[{"id":"5gZJ6iULfOzE82ReRiXS4","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"cAn1v3kxswoyluHJwjPRR","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"3wI8ZBxy1e2Khv2SVpLgC","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"VDCw8aFR9kXagOizKItad","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"Pg-IbW7_zdmU_FE1pvP1i","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"VCwzq6MvSjc1HLyGnbTWN","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"DXG6eigZC1zhVOlxRXpnH","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"5fS7h1cohk7DD8IvvyGkk","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"zdtqnxGw2XiTO8lW9CyLJ","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"3ATm0whLF5gBupVk2piqW","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"rU-vUxFpi3ssV4rVQSrFe","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"vxZWSqNSYxPYbAKbifrPR","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"B6IOd2uRdWFyUkaxgB-o-","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"u37fAv58GdatJpk4U0KLZ","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"FO3abem46RpmJa_IetxKq","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"HZrb92QrkEbiYkG63nb6l","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"ZjOsA2Pq4zbvRMuq-OYzb","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"4InCMvmIViCCTSmNr6MuB","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"XbQc3haP_5fKk6px-YdxV","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"64jty9UZX8iD0TLbNVoPe","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"Vb_H217dK7R19qCulf91E","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"uiCLw0vWGwT7mSw_Ab46Y","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"SyhlnAuPko5iOzMeEynLo","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"7M2pNiQb7sD1HKLOb6lRN","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"gUQwOu63FcY7LfO1LcgVB","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"N_Mua3fW4h4Di2S4DB5Id","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"kTN1PMyS1hC2twQrCjZSA","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"XqXYOVBVR8lyE9Ts5dbcT","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"BR3xbXamoECryHHeLAr-F","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"H7CgM7LtS3h4ujrkaaDnZ","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"k5HTU_zQXfRcL066hO5jp","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"n-vjOBTUUG4qgYPa5CKC5","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"ftvZ1rJqmevqkzg8EXVUO","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"Yz1d4uNF85TqGq6fgfqi5","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"wwTaRj9RrYLL-vg_wY-YT","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"3PuE9psGNQpwSmvLcDDSF","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"ZRX6Bh0Aj53euFOEN3kaX","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"AL3tpWb87Ij67_9Ic5xW3","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gdq-WFHfoL1eYs6pkNTAq","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"MIc-QEGqmICr_AVy5rTiu","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"pIWLv6xmJYZXcYe3Le7WW","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a single sprite from a standalone image, with anchor in the center\n var sprite = new me.Sprite(0, 0, {\n     image : \"PlayerTexture\",\n     framewidth : 64,\n     frameheight : 64,\n     anchorPoint : new me.Vector2d(0.5, 0.5)\n });\n\n // create a single sprite from a packed texture\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\"),\n     me.loader.getImage(\"texture\")\n );\n var sprite = new me.Sprite(0, 0, {\n     image : game.texture,\n     region : \"npc2.png\",\n });\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Configuration parameters for the Sprite object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.image","description":"<p>reference to spritesheet image, a texture atlas or to a texture atlas</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | TextureAtlas | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1 | %2 | %3 | string"}},{"identifier":"settings.name","optional":true,"default":"\"\"","description":"<p>name of this object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.region","optional":true,"description":"<p>region name of a specific region to use when using a texture atlas, see {@link TextureAtlas}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.framewidth","optional":true,"description":"<p>Width of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"description":"<p>Height of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.tint","optional":true,"description":"<p>a tint to be applied to this sprite</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.flipX","optional":true,"description":"<p>flip the sprite on the horizontal axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.flipY","optional":true,"description":"<p>flip the sprite on the vertical axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.5, y:0.5}","description":"<p>Anchor point to draw the frame at (defaults to the center of the frame).</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"emHWiEjyZvY4MKn6KYmPY","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_3QsWglAE09F_4DPrh0N-","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"q7VeFCOzeHSjBb0sX02dA","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vHhQcLn6slBjgWC6lLKvY","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xHNKyf9v7vxxF7QFsZC9Q","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"64AT0WyzYS131_SSl6tAU","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"U8jGd5KBysEiBhQVJJILO","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Pf5IxsGbZy4nwxCDZrw96","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ILfMevvs5WX-YyoSouLR3","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Vj5EGqw0gm1m0d1dKgV2J","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"fEtdII1BlOqfUk11blU6m","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"qTHC9uqGJr4aruATC0vzA","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"sdoS5Ae252zPfTP3ka_oF","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"djuVN4ENJS7L_6Sf92VxJ","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IvVFz4LeBIu0Vtw5tNT2x","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Wxmwx9869kxarJmk_1ZQy","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"z6XYkK5lCgZkPxcDPwdY_","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"raMbT1UXPEJY4Q_bUqHhC","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KfRnPOPW5AnwzXZzqGC3n","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"e-VaejCakLdmaVM9vDQ2r","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lFHkcm33Ikgk7D57XAW0S","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Sgb-_W6Z3Wtas4vBWtRy7","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"kDdtLjBNgEHa6E1dYdM1x","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"E0nVCW2FPrYpK_fC0yBRa","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZC5-E1jlwSozOb_12S_7V","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"DeHbTRmatNZKxL5aQcUlt","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"JKYLfO8_h6KK86byUjMRF","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"g-2LNkYCMlgSnmEynEo-F","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"di50_9I2U7KcFZig7Z0Iq","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"XF_55HfkQthsAZUzKmSVR","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"_GEVpJOSFVJiPfmccx9T1","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"79QgRZEQi8ImrntX5bAOK","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9ls-SQyGX5gV7cKirTo8R","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nKi6nTmGUQj-1aOFzrxpn","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"I1RuJRWJQPx6uhaHIMW_O","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"KT4-68Jn5bg5oKo4b-XCV","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1UqSrCX7pLeaP9rkgSqAB","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZQAZOp7ANzlOnsjoZPRwD","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"GAvmG0ZBq18lLGTIuhB7T","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"gm_WKJqyNlXl_IKTY_WxR","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"sbdQS9SM_jEytKUuXZnF0","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"4mNLcRFhqFjOBbIbImQMD","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"dtkzGDGj8MEO-g9_5yYWz","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dIODsS37ZKZik8wwSLOSZ","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"G6YyhMaWaMcakA5zSO4tf","name":"Stage","brief":"","see":["state"],"type":"ClassDoc","description":"<p>a default &quot;Stage&quot; object.\nevery &quot;stage&quot; object (title screen, credits, ingame, etc...) to be managed\nt...","members":[{"id":"GxPOwZ7PzTWkR3Lv57GSK","name":"ambientLight","brief":"","access":"public","defaultValue":"\"#000000\"","scope":"instance","see":["Light2d"],"type":"PropertyDoc","description":"<p>an ambient light that will be added to the stage rendering</p>"},{"id":"vvknaoii-vpJKulXLmP-5","name":"cameras","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The list of active cameras in this stage.\nCameras will be renderered based on this order defined in this list.\nOnly the &q..."},{"id":"ee8FfzI9LBZwZIYs063Mr","name":"lights","brief":"","access":"public","examples":[{"caption":"","code":"\n // create a white spot light\n var whiteLight = new me.Light2d(0, 0, 140, \"#fff\", 0.7);\n // and add the light to this current stage\n this.lights.set(\"whiteLight\", whiteLight);\n // set a dark ambient light\n this.ambientLight.parseCSS(\"#1117\");\n // make the light follow the mouse\n me.input.registerPointerEvent(\"pointermove\", me.game.viewport, (event) => {\n    whiteLight.centerOn(event.gameX, event.gameY);\n });\n"}],"scope":"instance","see":["Light2d","Stage.ambientLight"],"type":"PropertyDoc","description":"<p>The list of active lights in this stage.\n(Note: Canvas Renderering mode will only properly support one light per stage)</p>"},{"id":"2AKRW_Z6b9b_5e05DEoOt","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"xH_IAbSJ3YNiXRKjgNqIq","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"settings","optional":true,"description":"<p>The stage` parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.cameras","optional":true,"default":"[new me.Camera2d()]","description":"<p>a list of cameras (experimental)</p>","dataType":{"tokens":[{"value":"Array<Camera2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"settings.onResetEvent","optional":true,"description":"<p>called by the state manager when reseting the object</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.onDestroyEvent","optional":true,"description":"<p>called by the state manager before switching to another state</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"uDKibTpijXKV47N4aRAbI","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDestroyEvent function<br>\ncalled by the state manager before switching to another state</p>","params":[],"returns":[]},{"id":"Nwsj19Qd6vQ7tKsID8Z6-","name":"onResetEvent","brief":"","scope":"instance","see":["state#change"],"type":"MethodDoc","description":"<p>onResetEvent function<br>\ncalled by the state manager when reseting the object\nthis is typically where you will load a lev...","params":[{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>optional arguments passed when switching state</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]}]},{"id":"l0GEzMMpGBh14cMpKSoi8","name":"Text","brief":"","type":"ClassDoc","description":"<p>a generic system font object.</p>","extends":["Renderable"],"members":[{"id":"7xtlncA2RZXPpjUzQKF_Y","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"ATML2KCc40f5W6Bv7LPz0","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"TeIiyv1rgVNzWbQX4Qqwi","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"RTgMTo78Yz28Zm7DeRsNv","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"ofX1C8WX4vTmf7U22xQx8","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"jyd0l36v_ScwURON89ygI","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"mUYOY-Bk02r3Sv0qrHJKF","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Aq2I4Xtqswu4rgYucPDLp","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"a9aalDYMF5KoQ9IgQBNaI","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"4IvHmb06BlSls5L6ucues","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"CBQFysx0AYXex5op9IJmx","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"BsZ5v4spf6O_vp0SfFjKV","name":"fillStyle","brief":"","access":"public","defaultValue":"black","scope":"instance","type":"PropertyDoc","description":"<p>defines the color used to draw the font.<br></p>"},{"id":"VKARa83oKi-_oCi742UeV","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"Gg3epPHoF9o_FNvFIcz_l","name":"fontSize","brief":"","access":"public","defaultValue":"10","scope":"instance","type":"PropertyDoc","description":"<p>the font size (in px)</p>"},{"id":"6X3A-DPVntCdaBTpL_028","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"PPDL7bW620q2BLmhnVSlg","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"pqa0LdO_qS8iCasmCY7DI","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"_XMqAGythUpzWaJiNo2eP","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"DHKUEcIrlmneNtqSvrgBa","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"Kkqp5osLeMFnPF33wLFxP","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"pUvVhFwf8aWd8c06bN6qR","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"vghBYWQ6o93c-pS695HtW","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"PiKeyHSIxbjatcUwaFPPD","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"jB9JaxQDUgBGPPZNl1qTi","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"cHo_h7wyqTl4jiUSZUkbn","name":"lineHeight","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Set the line spacing height (when displaying multi-line strings). <br>\nCurrent font height will be multiplied with this va..."},{"id":"RVGI1JgU91CseSxGYpxQa","name":"lineWidth","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>sets the current line width, in pixels, when drawing stroke</p>"},{"id":"o2-cIWZtIOLTRMtJDPYnO","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"0zdcjBbd4oJLPcGMNMYyL","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"HfaNaxuiE8jVztJYmOcKd","name":"offScreenCanvas","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether to draw the font to a indidividual offscreen canvas texture first <br>\nNote: this will improve performances when u..."},{"id":"drhOwmrBnDhi4xuamY4sL","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"JS6Iz58IergDjgMrmORgs","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"bb-X9M7xjrwsdZcY9lWbQ","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"U2CgNZJdnLzEScHvpU4Zp","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"GPpx1rYUYV4e17hZY7Ew6","name":"textAlign","brief":"","access":"public","defaultValue":"\"left\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the default text alignment (or justification),<br>\npossible values are &quot;left&quot;, &quot;right&quot;, and &quot;..."},{"id":"Mp1L0hbD74DVd8Ef_uz71","name":"textBaseline","brief":"","access":"public","defaultValue":"\"top\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\npossible values are &quot;top&quot;, &quot;hang..."},{"id":"bj3gc2TzVDkJDKRs71iOS","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"zDXTmXJ7LUMwXU8ERnrrG","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"uOvihiIyVLvTeRe48XNQ-","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"BLxFLuKM9g9ovS8b97TBI","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"ltiEHoeb_I6bH5n4RtvC9","name":"wordWrapWidth","brief":"","access":"public","defaultValue":"-1","scope":"instance","type":"PropertyDoc","description":"<p>the maximum length in CSS pixel for a single segment of text.\n(use -1 to disable word wrapping)</p>"},{"id":"Jqsz_4Ky6E3f8PhVIWgsf","name":"_text","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>the text to be displayed</p>"},{"id":"pDU89FWVjyy0Z-a3jwqqL","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"wPPKjbSRxO0ZRTdGVPDfO","name":"bold","brief":"","scope":"instance","type":"MethodDoc","description":"<p>make the font bold</p>","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"L9oL32AhbWaI7tyiMNblw","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"nIq9IKZ7fhbveOXEKPbNi","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"FBxDPzTr3TIgO-LGoNmrC","name":"constructor","brief":"","examples":[{"caption":"","code":"\n var font = new me.Text(0, 0, {font: \"Arial\", size: 8, fillStyle: this.color});\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>the text configuration</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.font","description":"<p>a CSS family font name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.size","description":"<p>size, or size + suffix (px, em, pt)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"settings.fillStyle","optional":true,"default":"\"#000000\"","description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.strokeStyle","optional":true,"default":"\"#000000\"","description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.lineWidth","optional":true,"default":"1","description":"<p>line width, in pixels, when drawing stroke</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.textAlign","optional":true,"default":"\"left\"","description":"<p>horizontal text alignment</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.textBaseline","optional":true,"default":"\"top\"","description":"<p>the text baseline</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.lineHeight","optional":true,"default":"1.0","description":"<p>line spacing height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.0, y:0.0}","description":"<p>anchor point to draw the text at</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.offScreenCanvas","optional":true,"default":"false","description":"<p>whether to draw the font to an individual &quot;cache&quot; texture first</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"settings.wordWrapWidth","optional":true,"description":"<p>the maximum length in CSS pixel for a single segment of text</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.text","optional":true,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[]},{"id":"IJT0EJKRQ1-4DN8VAYpKI","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"k9bf66fnZvRKI5tPmZ0yA","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ibIsiZIgvZlfrlj2xGU0_","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"VO_furos5MDkqtGSQA-ms","name":"draw","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw a text at the specified coord</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"stroke","optional":true,"default":"false","description":"<p>draw stroke the the text if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"HwfzZ3cDIorL87MzFkQAY","name":"drawStroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw a stroke text at the specified coord, as defined <br>\nby the <code>lineWidth</code> and <code>fillStroke</code> prope...","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tHAtdf0xn-GFfaKr3Fa4C","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MVKbmCmJLHmLYBzSUo4YE","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"u2shFJMkuDwkH6hqHJCyr","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"uMys4-1x8E_6DugmSgz9p","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ajG29ivxf8RXcE1BaOH2Y","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"YUYnkppT75Bn_eZD6h8fW","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Z86rjexbdhsjXPYE5MZbC","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5kBFE6pNF_OI2YjdaFGTe","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"nHF1KpwsxM73FD74wTiCC","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"nfPA46Oiqh0-3LySLYy5i","name":"italic","brief":"","scope":"instance","type":"MethodDoc","description":"<p>make the font italic</p>","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"phDSmrWqQDo4MkH0RZ1mA","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"f1Y7oqzbzBGRvCI-DmY20","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in pixels</p>","params":[{"identifier":"renderer","optional":true,"description":"<p>reference to the active renderer</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a TextMetrics object defining the dimensions of the given piece of text</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"J6Ws-zypbe6tK88OQyt3s","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"A32dFCVT44a3i5oqzjstD","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"quGXJ-xcItzxbNjJQCI1f","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WbXPj5DZAlfx50FW2R17N","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"dWNLsEzELxczJjik7hCl8","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0Kn8dJnb9O0wePlnZXlIo","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ck_bPKezpiVDEzjLXr5pF","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"odumzcnSxg3LNr5iNMxv9","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"4ZyBLCymhWC-Q28BvQ0dC","name":"setFont","brief":"","examples":[{"caption":"","code":"\n font.setFont(\"Arial\", 20);\n font.setFont(\"Arial\", \"1.5em\");\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the font family and size</p>","params":[{"identifier":"font","optional":false,"description":"<p>a CSS font name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"size","optional":true,"default":"10","description":"<p>size in px, or size + suffix (px, em, pt)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"KZmstOhlpt0-W-nxpETl_","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"j3BspGQJjoi2N4pZTOkR2","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"s2vGIKArUYeZiyMmcp8D8","name":"setText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the text to be displayed</p>","params":[{"identifier":"value","optional":false,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"number | string | Array<string>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | string | %2<string>"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"vkU8TqXn2Sy7fnKGsYQmY","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"P-3lqLSQGGBJIATwNk3SZ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gP_4PD_k3rNATE53ft3Bp","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"MAMqSFHLs-ED2BiSZzyb7","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wTu7oiKOa0AlWDssU-CkE","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"3-4AsMOy1cnXvhzg_F69C","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9jXq1qZBxURVYYr9esGV4","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rkGWbk8zIkkLm5Pfp2JA4","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KT1_joMgSCN7Og5Bo5m-r","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"mYuGIPLdrjBxhfN-y8lIb","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"LfvwqS0AdmJGdsqOFdL3U","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VdXUmQ0s8wzrBMLOYTyBV","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"MtJbE51uDorfEMviADjjM","name":"TextMetrics","brief":"","type":"ClassDoc","description":"<p>a Text Metrics object that contains helper for text manipulation</p>","extends":["Bounds"],"members":[{"id":"lvBpYZn0-IPN56zHeYphd","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this TextMetrics object</p>"},{"id":"sd1o9Mc2AOwK4zevkiBJt","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"SMkBRi_g0A_zjGFbsjrpE","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"ORT6dNWbkKvXSUOY6se1D","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"BB-vH3X8FBTXlq6xcfeOL","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"r6XF1u8JmVRl-UVnyHz_B","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"tpPp_OMe7hM1c2FtuExJj","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"giCGXA5QrVohhmTuhcTlA","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"yVjrR9gYMrMJpX2atwEFQ","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"dhQzN1e0QLetR_Rw9W56k","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"9L8OFcKmhFruz3-TWxlHu","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"Qk1pBr-Axq85Ws4BZnUCJ","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"xLmQsHHAuaepsdyTIzwB4","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"pdlI4Izt_AuEBfgJlP2Nu","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"aU7zeuxovaWOQYmsO-kmn","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"cHPQNWXNXhv9QBBkCWed9","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"0HieCaHBJl1_t86TVSRGA","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"qdtSzE-7SpH_jzBiMIXCO","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"ancestor","optional":false,"description":"<p>the parent object that contains this TextMetrics object</p>","dataType":{"tokens":[{"value":"Text | BitmapText","kind":"canonical"},{"value":"Text","kind":"link"},{"value":"BitmapText","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"JzQnVNmW-ZcJ9i58TJlvb","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fIqysU_qaQvzc6i27aQN5","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"d_3MMXUSg-9m1fgnAEmiH","name":"lineHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the height of a segment of inline text in CSS pixels.</p>","params":[],"returns":[{"description":"<p>the height of a segment of inline text in CSS pixels.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Iy-AdAyxkec1jcevEQRsq","name":"lineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the width of the given segment of inline text in CSS pixels.</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the width of the given segment of inline text in CSS pixels.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Hi-yf_nXsMipLoNw03-TC","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in CSS pixels</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"FSXSkfqoOC71uKUx1o7EI","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-xR-0EHw_eIryIQgQP88j","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"mZua6yElB4HwM4Z7AL34e","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"N-N5gr5LXzbGD2Xehqepq","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wZf-n1R4532P88AxSmwqE","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DmendmKhso3XmXi28N3YB","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"2srJ-lxlKLDZiA4K6bs9u","name":"wordWrap","brief":"","scope":"instance","type":"MethodDoc","description":"<p>wrap the given text based on the given width</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be wrapped</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}},{"identifier":"width","optional":false,"description":"<p>maximum width of one segment of text in css pixel</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>an array of string representing wrapped text</p>","dataType":{"tokens":[{"value":"Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<string>"}}]}]},{"id":"Z7hHr8Fmx8D_-AqOTx1kw","name":"TextureAtlas","brief":"","type":"ClassDoc","description":"<p>A Texture atlas class, currently supports : <br></p>\n<ul>\n<li>[TexturePacker]{@link http://www.codeandweb.com/texturepacke...","members":[{"id":"waBndEVhN9jqX-hp0H0Vd","name":"addRegion","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add a region to the atlas</p>","params":[{"identifier":"name","optional":false,"description":"<p>region mame</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":false,"description":"<p>x origin of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y origin of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the created region</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"Y6aBp_O3z8ugS5U_86zO8","name":"addUVs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add uvs mapping for the given region</p>","params":[{"identifier":"atlas","optional":false,"description":"<p>the atlas dictionnary where the region is define</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"name","optional":false,"description":"<p>region (or frame) name</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the created region UVs</p>","dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"LiVt839pIt7GZwoNHRVDn","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a texture atlas from a JSON Object\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\")\n );\n\n // create a texture atlas from a multipack JSON Object\n game.texture = new me.TextureAtlas([\n     me.loader.getJSON(\"texture-0\"),\n     me.loader.getJSON(\"texture-1\"),\n     me.loader.getJSON(\"texture-2\")\n ]);\n\n // create a texture atlas for a spritesheet with an anchorPoint in the center of each frame\n game.texture = new me.TextureAtlas(\n     {\n         framewidth : 32,\n         frameheight : 32,\n         anchorPoint : new me.Vector2d(0.5, 0.5)\n     },\n     me.loader.getImage(\"spritesheet\")\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"atlases","optional":false,"description":"<p>atlas information. See {@link loader.getJSON}</p>","dataType":{"tokens":[{"value":"object | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"object | %1<object>"}},{"identifier":"src","optional":true,"default":"atlas.meta.image","description":"<p>Image source</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | string | Array<HTMLImageElement> | Array<HTMLCanvasElement> | Array<string>","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | %2 | string | %3<%4> | %5<%6> | %7<string>"}},{"identifier":"cache","optional":true,"default":"false","description":"<p>Use true to skip caching this Texture</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"AfAaINlzFFTn2gheJVuk9","name":"createAnimationFromName","brief":"","examples":[{"caption":"","code":"\n // create a new texture object under the `game` namespace\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\"),\n     me.loader.getImage(\"texture\")\n );\n\n // create a new Animated Sprite\n var sprite = game.texture.createAnimationFromName([\n     \"walk0001.png\", \"walk0002.png\", \"walk0003.png\",\n     \"walk0004.png\", \"walk0005.png\", \"walk0006.png\",\n     \"walk0007.png\", \"walk0008.png\", \"walk0009.png\",\n     \"walk0010.png\", \"walk0011.png\"\n ]);\n\n // define an additional basic walking animation\n sprite.addAnimation (\"simple_walk\", [0,2,1]);\n // you can also use frame name to define your animation\n sprite.addAnimation (\"speed_walk\", [\"walk0007.png\", \"walk0008.png\", \"walk0009.png\", \"walk0010.png\"]);\n // set the default animation\n sprite.setCurrentAnimation(\"simple_walk\");\n // set the renderable position to bottom center\n sprite.anchorPoint.set(0.5, 1.0);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Create an animation object using the first region found using all specified names</p>","params":[{"identifier":"names","optional":false,"description":"<p>list of names for each sprite\n(when manually creating a Texture out of a spritesheet, only numeric values are authorized)</p>","dataType":{"tokens":[{"value":"Array<string> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<string> | %3<%2>"}},{"identifier":"settings","optional":true,"description":"<p>Additional settings passed to the {@link Sprite} contructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"FCRuVVWkCb9aEQS25iz3G","name":"createSpriteFromName","brief":"","examples":[{"caption":"","code":"\n // create a new texture object under the `game` namespace\n game.texture = new me.TextureAtlas(\n    me.loader.getJSON(\"texture\"),\n    me.loader.getImage(\"texture\")\n );\n ...\n ...\n // create a new \"coin\" sprite\n var sprite = game.texture.createSpriteFromName(\"coin.png\");\n // set the renderable position to bottom center\n sprite.anchorPoint.set(0.5, 1.0);\n ...\n ...\n // create a 9-slice sprite\n var dialogPanel = game.texture.createSpriteFromName(\n    \"rpg_dialo.png\",\n    // width & height are mandatory for 9-slice sprites\n    { width: this.width, height: this.height },\n    true\n );\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Create a sprite object using the first region found using the specified name</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the sprite</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings","optional":true,"description":"<p>Additional settings passed to the {@link Sprite} contructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"nineSlice","optional":true,"default":"false","description":"<p>if true returns a 9-slice sprite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"Sprite | NineSliceSprite","kind":"canonical"},{"value":"Sprite","kind":"link"},{"value":"NineSliceSprite","kind":"link"}],"template":"%1 | %2"}}]},{"id":"RwnSrkAaUfXwz87aCIXPI","name":"getAtlas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the default or specified atlas dictionnary</p>","params":[{"identifier":"name","optional":true,"description":"<p>atlas name in case of multipack textures</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"dtKKCJ0dxeSiQj8Kpfszd","name":"getFormat","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the format of the atlas dictionnary</p>","params":[],"returns":[{"description":"<p>will return &quot;texturepacker&quot;, or &quot;ShoeBox&quot;, or &quot;melonJS&quot;, or &quot;Spritesheet (fixed cell si...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"axYBvJku6ot9T_5hJ4vZg","name":"getRegion","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a normalized region (or frame) information for the specified sprite name</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the sprite</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"atlas","optional":true,"description":"<p>name of a specific atlas where to search for the region</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"ZEe2YuddlOrtCNAvdH4DV","name":"getTexture","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the source texture for the given region (or default one if none specified)</p>","params":[{"identifier":"region","optional":true,"description":"<p>region name in case of multipack textures</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"Ol8MNd0tdeXaazVkC4wX0","name":"getUVs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the uvs mapping for the given region</p>","params":[{"identifier":"name","optional":false,"description":"<p>region (or frame) name</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>region Uvs</p>","dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]}]},{"id":"mkpDm9kVOASG4z_qwPDpH","name":"Tile","brief":"","type":"ClassDoc","description":"<p>a basic tile object</p>","extends":["Bounds"],"members":[{"id":"oBB9ZQQuH5Vl6g2X4hs4C","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"Yw2hEP91WHjiJlCvH0zzU","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"YNFuxfgfBjlhNSqOmzM35","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"iCOrn1F0BtYIH-FKdv01s","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"7fwlrPiA-ipV_dKMYoVtM","name":"flipped","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Global flag that indicates if the tile is flipped<br></p>"},{"id":"G23MNptWKJlbVZpviXqrw","name":"flippedAD","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped anti-diagonally<br></p>"},{"id":"aLC08RhIONmv-Qj6MMO1S","name":"flippedY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped vertically<br></p>"},{"id":"3Y-vRbjvT5VIlPst3xbgd","name":"flipX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped horizontally<br></p>"},{"id":"GqZvWIxu-OFWRV8Md7Peu","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"rN-Js-xZs0IV8jb9qLZZU","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"LLlICWYwSoLihvQZdF8j2","name":"tileId","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tileId</p>"},{"id":"ZAX0wLceyoY0jIHy4APTD","name":"tileset","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tileset</p>"},{"id":"S2j3gnKtNGWP5fs_Ts5OI","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"rAQOwEs1dx1t6EQ3ty4fx","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"k61yVRqg1pMEibDbtP5Mc","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"RvwfjnzwkqvbY6Y-xulaX","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"6ycuS0vpEjfXTRxdOzEcC","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"cEjtDuuxAqsDJferXPNiH","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"RYW8R8fJDYwav3AvLGOV5","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"SORSbb900kBdAL7VU1WXK","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"uB7EY6Q36y3iSOzl2Q8hS","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"lFshLXEXucn1pzYum4r-G","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"1ya2qrA9mNATpEF5WS1CN","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x index of the Tile in the map</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y index of the Tile in the map</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"gid","optional":false,"description":"<p>tile gid</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileset","optional":false,"description":"<p>the corresponding tileset object</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"8xhI9wheGsKO6OQjSn3hZ","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"D5vxKxUI8UfjnwAKTTk6-","name":"getRenderable","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a renderable object for this Tile object</p>","params":[{"identifier":"settings","optional":true,"description":"<p>see {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>a me.Sprite object</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RbWmdbY-2QcUyLtL7N5td","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"nR-K4ViTwD8U4HX5Iwxyn","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KeADp9yvivbb9_d9S5nMj","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"XWfRjZTF6y3Ur9jM18GeT","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-bMT1QKgARsB_yz2vtGP3","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"i88c1phvmybb9ky0u-YNb","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"u8nh7jUkC6YXawsTnDibA","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]}]},{"id":"1WizOZxhYzNEjdrQ3-96a","name":"Timer","brief":"","see":["{@link timer} the default global timer instance"],"type":"ClassDoc","description":"<p>a Timer class to manage timing related function (FPS, Game Tick, Time...)</p>"},{"id":"vRaZiJ3NL4PGslfU1eu3q","name":"TMXHexagonalRenderer","brief":"","type":"ClassDoc","description":"<p>an Hexagonal Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"JXLQM8iIellmBOOn_uK_a","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"YP47sjlXdZS0ycFDsqyaS","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"gyy3jciahVG-MlHPCAXht","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"VYG5ZsX5W2KqNyMlI35kT","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"dcsSeYPEH8EA-CXzrZPLj","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Yr-lSP3sEJAiRomajqQaj","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Ho6ix-28UZWpBy7oCjOlQ","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"0e6UWgqXCmiHE4GV4KJM9","name":"TMXIsometricRenderer","brief":"","type":"ClassDoc","description":"<p>an Isometric Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"ZpEXU201rqz6DlYBznlaK","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Cz27-2noS-sXXTqPrP9GA","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"6ZxYjfVzTPa7did4IHSMc","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"XY7Q-6lXhItoN3MVN2MpA","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"jHmRcDWcdkM3CfIW2BLEo","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"oMm1KfCMOEGX9s4fYCWSB","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"d0XIyUWiD2tPXsTgHmf52","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"ztH4JgwSJeErLlc92GPH8","name":"TMXLayer","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Layer Object\nTiled QT 0.7.x format</p>","extends":["Renderable"],"members":[{"id":"2spnFP8ERkOZt5dYb66Xy","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"9mWEw8RI9tRiUDJrj9GnY","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"VXL03NUTC5FJNkKLTo2Ni","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"vuYHKZAIZ3BhhtiQ66ryS","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"CL65IRRkQtLvJtfNmCojr","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"Y5mHEI4LO7FXDz2Kvhd-y","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"VpYYTIFQY7RJZXgjs5LCJ","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"h4tOF2gWNYuK1JyySbPPM","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"i9bBLiHOaPlXxJ5nS_9Nm","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Z8fJZA647c-5qFHqhOg0p","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"-MblTDyoTjPN-lcbgrSG4","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"MDKFJzM5bhFE8CiYib1zZ","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"szIZT4d_VT2sFKV1QZTxX","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"TyAdo9mDrSOOjRGW4TnQ_","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"5d2U37x3pjix0EWHLSu39","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"8WtmVpW2UQlyulRHUuweo","name":"isAnimated","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Layer contains tileset animations</p>"},{"id":"ZqxkICtjrJZAzICQRA_ZS","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"8mpfqd1lzABFR5WJjOI_6","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"gtZj7stDFrDs3p49w1YOs","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"kt9S2wOjpmQPZOZPBjz7n","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"yPggRoVltEvGMUX2L-XLr","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"2FcbCWA40Q2XXrygiEZJ0","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"t0aK3CwWtMEhIzsWVZPca","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"7Fil9P2SZFag9K_So6x-D","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"0VpxdlK0EMXYLSxIafqJf","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"uuTtVl_ETZo85uI444WmB","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"Qx72NxYm1OdqM18O-We2a","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"OA3kSC6fwt7cAkjCJybcs","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"4oYpjuBywqChcdEUR4Exa","name":"renderorder","brief":"","access":"public","defaultValue":"\"right-down\"","scope":"instance","type":"PropertyDoc","description":"<p>the order in which tiles on orthogonal tile layers are rendered.\n(valid values are &quot;left-down&quot;, &quot;left-up&qu..."},{"id":"OhiEU3KbBsILUDXsfeoRM","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"00Bgx9uJGcZc6L8aRpsHD","name":"tilesets","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The Layer corresponding Tilesets</p>"},{"id":"D8_S79gI69Zew5sTyaT0N","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"tEuMWzl4PfygoFXAoa8RS","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"isTEJb21nGTyL36ewShkY","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"XWW88pZ1rKSOhB-wVxOpd","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"OYdAMgs076_8bqklzzLAL","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"tqw7xrabjYeroGU9RlkKN","name":"cellAt","brief":"","access":"public","examples":[{"caption":"","code":"\n // return the first tile at offset 0, 0\n var tile = layer.cellAt(0, 0);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Return the Tile object at the specified tile coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>x position of the tile (in Tile unit)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>x position of the tile (in Tile unit)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"boundsCheck","optional":true,"default":"true","description":"<p>check first if within the layer bounds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tile or null if there is no defined tile at the position or if outside of the layer bounds</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"sAPZJ_6L3rwRrSbBrfD-m","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"YfuGyKro3AZ12xFOaI-Gu","name":"clearTile","brief":"","access":"public","examples":[{"caption":"","code":"\n me.game.world.getChildByType(me.TMXLayer).forEach(function(layer) {\n     // clear all tiles at the given x,y coordinates\n     layer.clearTile(x, y);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>clear the tile at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in map coordinates: row/column)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in map coordinates: row/column)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"EBVwnBxL6xg2FFLDMwSKm","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"iGpvt01x9MHUB0kC_c-R8","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>layer data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#layer})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"data","optional":false,"description":"<p>layer data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#layer})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"tilewidth","optional":false,"description":"<p>width of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileheight","optional":false,"description":"<p>height of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"orientation","optional":false,"description":"<p>&quot;isometric&quot; or &quot;orthogonal&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"tilesets","optional":false,"description":"<p>tileset as defined in Tiled</p>","dataType":{"tokens":[{"value":"TMXTilesetGroup","kind":"canonical"},{"value":"TMXTilesetGroup","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":false,"description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"JU1ykgkSyN1jIWvB2DDHf","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Q0oY3hwpUOSiP5qyeBfZP","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"rY2uIo9tiyPtzPghZhKYQ","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Zu54WK9qxxPPwkiEiW9uG","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"iWmMHkqAbSEPQG1q0gt1Z","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"wHkLmt7yjzyUSz8eiWGqN","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VGD7NtyG5hTPbnrj3LCOn","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"YqKj4pAfGMpy_pqWmJ__j","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"J68l1KzLx1ACev89HCJMh","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"E-L3pxMwpgG92egUWZUd_","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"yjWQVpxUK2jAIlcmdlv9b","name":"getRenderer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the layer current renderer object</p>","params":[],"returns":[{"description":"<p>renderer</p>","dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}]},{"id":"wV40Xx5V1-wbK4lCKBFOl","name":"getTile","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the TMX Map Layer called \"Front layer\"\n var layer = me.game.world.getChildByName(\"Front Layer\")[0];\n // get the tile object corresponding to the latest pointer position\n var tile = layer.getTile(me.input.pointer.x, me.input.pointer.y);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Return the Tile object at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tile or null if there is no defined tile at the coordinate or if outside of the layer bounds</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"D448r8bJW8UrMw4sGN1Sy","name":"getTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>assign the given Tile object to the specified position</p>","params":[{"identifier":"tile","optional":false,"description":"<p>the tile object to be assigned</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>x coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the tile object</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"jDezoGNaKp5kwWN1cDgaL","name":"getTileId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the TileId of the Tile at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>TileId or null if there is no Tile at the given position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"yTJ5uEFDmuwJyfz-ncFG8","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1bGcsA0WnUDUyDkyWlS8_","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1X4DIiJyNdYgbBgz3i69u","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"X4jXnulXaoS_2LnusZoS0","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"B5CAd6n-GVF8lR_ze7ajh","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"Nv6ibOZXPvDClwCL9entK","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lwoNMHNm9dt3h58T1WLs3","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YHNLlHt4RWS2ENg6iynOd","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"cfI_M72Gpan79a6ZzCRvv","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"odj9JuQ-Zx31D0k_1uLcq","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0zwndyZI_cCsJNXCnA0Db","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"rPTfW09CpHCrN3BavCA8v","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HwVjfZxDC9e4Rs5fvo3yg","name":"setRenderer","brief":"","access":"public","examples":[{"caption":"","code":"\n // use the parent map default renderer\n var layer = new me.TMXLayer(...);\n layer.setRenderer(map.getRenderer());\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Set the TMX renderer for this layer object</p>","params":[{"identifier":"renderer","optional":false,"dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"hG9Pn0KgZzcdvEFTBmp1q","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"E5b5gH1DMNPw9J0iEFFeW","name":"setTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a new the Tile object corresponding to the given tile id</p>","params":[{"identifier":"tileId","optional":false,"description":"<p>tileId</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the tile object</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"plCO3oaigHZVHcxWyyOe0","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"X37Q-yhFcBPx_E2LU6IUw","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_0OmCg7Vcsf4qzxOfYNkC","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jhunVpAyAu4QNUwQ_3sEd","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"2hHnZsYviokrRIzLWdfcS","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NbFstF8BSA96iiAOdA_m_","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"BxC8HKaj4N_E1S0IiNGtk","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"UXyOQevrrGS1iiXd2H4ba","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"dO3yKGnXwioY653059syM","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"qdtZqdV3TGonjzbt7-dHT","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"rtB4cdIF5w3i9cAiWkTVa","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"9q3Un-GGN7oVFlym3QB27","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MARbWUxGBM7NJDWk4oGKe","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"ob1VvS337vY-hp6pC6rWU","name":"TMXOrthogonalRenderer","brief":"","type":"ClassDoc","description":"<p>an Orthogonal Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"F58wDDxY3ojFy7YkdXNnX","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rSiI0qWjqkIkW_n3-l9M_","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"CvHXlgN2vAm_O4l_G4RW9","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ZNIJt9mDNdl7iNunTtiEB","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"o0OXEQAOGAgQWVK3iyjgi","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the map bounding rect</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"m56Djln9bl92N98VhYmd5","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"PlHvQjXSN47adcs_v2ev8","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"tXvNwOmLCdvnM5N79eEMZ","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"_SY6oko32FUEDSNQT71Iu","name":"TMXRenderer","brief":"","type":"ClassDoc","description":"<p>The map renderer base class</p>","members":[{"id":"R8z3-RVANsvM9f8m-_uiw","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KlGzQWi9BoJ0SLNvZbXUn","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"cols","optional":false,"description":"<p>width of the tilemap in tiles</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"rows","optional":false,"description":"<p>height of the tilemap in tiles</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tilewidth","optional":false,"description":"<p>width of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileheight","optional":false,"description":"<p>height of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gqzq03aJbgN8ls7WSDXox","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"euVU5FjioFnbmfK9oymPO","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"LIDiuZd0hLNaOqiOfDYIL","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the map bounding rect</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"kosn5EWObOMz--vVtp1hO","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Z6CiFyqrQls0jUyCIpyFq","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"BqSx9rxTmmn_EPqgurS-h","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"oOfgclhVmoEJaBolyu96K","name":"TMXStaggeredRenderer","type":"ClassDoc","description":"<p>a Staggered Map Renderder</p>","extends":["TMXHexagonalRenderer"],"members":[{"id":"PLlDy5MELRn0NN7iEUF_4","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5RjAnLMhVFtrYtk6Zutb6","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[]},{"id":"RsZ5JyhmobkgXYnqFOd-a","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"0MnX_U86QQ0FpmKUAJDze","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"plsirIJCbe40lGmlL2_ri","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"CKj4eDl_DHYvV5tPSj_4-","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4qWlzo8K8bUCxTGfbCSPw","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"mqFq2GoTYNTOhpUAYAa_K","name":"TMXTileMap","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Map Object\nTiled QT +0.7.x format</p>","members":[{"id":"2ouCCToNzRNIayUbP00ui","name":"cols","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>width of the tilemap in tiles</p>"},{"id":"PzLYZK8od0oDqe_P1CLJP","name":"infinite","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>is the map an infinite map</p>"},{"id":"15y_cDIbpUh9cIL7B-0Fc","name":"name","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>name of the tilemap</p>"},{"id":"crUYb1Zgp2cpWdJ3pJsgv","name":"orientation","brief":"","access":"public","defaultValue":"\"orthogonal\"","scope":"instance","type":"PropertyDoc","description":"<p>the map orientation type. melonJS supports “orthogonal”, “isometric”, “staggered” and “hexagonal”.</p>"},{"id":"64D78UWg9Vc4vLZWvXlPZ","name":"renderorder","brief":"","access":"public","defaultValue":"\"right-down\"","scope":"instance","type":"PropertyDoc","description":"<p>the order in which tiles on orthogonal tile layers are rendered.\n(valid values are &quot;left-down&quot;, &quot;left-up&qu..."},{"id":"6WQ5Ro17Q-uE-6WpATyIJ","name":"rows","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>height of the tilemap in tiles</p>"},{"id":"Lompa6hecV5ZxIA1HkGTo","name":"tiledversion","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The Tiled version used to save the file (since Tiled 1.0.1).</p>"},{"id":"UkEvZwK9aGXZAQQFMdDuF","name":"tileheight","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>Tile height</p>"},{"id":"zcrq_kSPBOI7DyrOeIzp8","name":"tilewidth","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>Tile width</p>"},{"id":"ytAsdDPrDsyFTuF0zh6T_","name":"version","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the TMX format version</p>"},{"id":"qye32quCMkS27D93bgjVO","name":"addTo","brief":"","access":"public","examples":[{"caption":"","code":"\n // create a new level object based on the TMX JSON object\n var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n // add the level to the game world container\n level.addTo(me.game.world, true, true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>add all the map layers and objects to the given container.\nnote : this will not automatically update the camera viewport</p>","params":[{"identifier":"container","optional":false,"description":"<p>target container</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"flatten","optional":true,"default":"true","description":"<p>if true, flatten all objects into the given container, else a <code>me.Container</code> object will be created for each co...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"setViewportBounds","optional":true,"default":"false","description":"<p>if true, set the viewport bounds to the map size, this should be set to true especially if adding a level to the game worl...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"uioyWnDo9ZUVCR4cVPl2c","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a new level object based on the TMX JSON object\n var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n // add the level to the game world container\n level.addTo(me.game.world, true);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"levelId","optional":false,"description":"<p>name of TMX map</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"data","optional":false,"description":"<p>TMX map in JSON format</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"retfm2S8X6haf7HFZYqj3","name":"destroy","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>destroy function, clean all allocated objects</p>","params":[],"returns":[]},{"id":"zHJQ3jJzkKOX0fvkjU-j2","name":"getLayers","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all the existing layers</p>","params":[],"returns":[{"description":"<p>Array of Layers</p>","dataType":{"tokens":[{"value":"Array<TMXLayer>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1<%2>"}}]},{"id":"6yfJ8yQmwYdX94SBQ4bw_","name":"getObjects","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return an Array of instantiated objects, based on the map object definition</p>","params":[{"identifier":"flatten","optional":true,"default":"true","description":"<p>if true, flatten all objects into the returned array.\nwhen false, a <code>me.Container</code> object will be created for e...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Array of Objects</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"_FHzX6N6ELTzHUpQbiQ4G","name":"getRenderer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the map default renderer</p>","params":[],"returns":[{"description":"<p>a TMX renderer</p>","dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}]}]},{"id":"lXs5AWIaqOS4PxfVDUk77","name":"TMXTileset","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Set Object</p>","members":[{"id":"54MX_A7rfaIA1ButwCaGm","name":"isAnimated","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Tileset contains animated tiles</p>"},{"id":"tu1uyEt5b9oYQpPV2kBB7","name":"isCollection","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the tileset is a &quot;Collection of Image&quot; Tileset</p>"},{"id":"eIZ0X3-pledx0oWXzKdkX","name":"_lastUpdate","brief":"","access":"private","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Remember the last update timestamp to prevent too many animation updates</p>"},{"id":"tAv4vvT-kuTeR8hR4Rbv-","name":"animations","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>Tileset animations</p>"},{"id":"K9ABUCljBKivVdCGBEhKW","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"tileset","optional":false,"description":"<p>tileset data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#tileset})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"MXO8tElbOfX7zr3iEoV8D","name":"contains","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the gid belongs to the tileset</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"psAzB8xOBqHlw-xXfGiue","name":"getTileImage","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile image from a &quot;Collection of Image&quot; tileset</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding image or undefined</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}}]},{"id":"yr8tuFX8AS-fet0dSw2x7","name":"getTileProperties","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the properties of the specified tile</p>","params":[{"identifier":"tileId","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"Gal395jj-QPwKPdTk6mAt","name":"getViewTileId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Get the view (local) tile ID from a GID, with animations applied</p>","params":[{"identifier":"gid","optional":false,"description":"<p>Global tile ID</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>View tile ID</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"EBi7tRTRTrhbKpx2XIpVO","name":"TMXTilesetGroup","brief":"","type":"ClassDoc","description":"<p>an object containing all tileset</p>","members":[{"id":"MNFX5pfMH6uY4AmGLxkeN","name":"add","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>add a tileset to the tileset group</p>","params":[{"identifier":"tileset","optional":false,"dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"l8KV2SyQMs-sOjwtbVkmJ","name":"getTilesetByGid","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tileset corresponding to the specified id <br>\nwill throw an exception if no matching tileset is found</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tileset</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}]},{"id":"0l_bD1x8XbJPhSsOSByVb","name":"getTilesetByIndex","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tileset at the specified index</p>","params":[{"identifier":"i","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tileset</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}]}]},{"id":"89iX6BRRYMGvafqhdHkBD","name":"Trigger","brief":"","type":"ClassDoc","description":"<p>trigger an event when colliding with another object</p>","extends":["Renderable"],"members":[{"id":"MVdbqA1HL1Mh5cfKTFGfl","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"53jDpDKa9SUw5Dwp7urwF","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"jAK2345_GCD4p1eG5sPbu","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"DnCNgFWF_Gl50H4CdOwxS","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"SRIr6RoKQICO0V-HWz3TB","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"TtdBAo5Xf5usiqwY-Vd_P","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"QcEk0cdeJsKJb3cnBjpGb","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Govw3oSCbQPP3n2GPd8PH","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"DeKj4ptvdMbFJyOfxo8s9","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"rUcKW4iZALu3nr7gxXqpu","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"4EH17KZ9NEGX3a2cyD-N9","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"vivQr9O3CqbJdwSgXl-bD","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"uwQUJqDCjyBkea0jlHLxH","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"PpNQoFBKofZMkNZfntwqN","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"xkjtpsfqgSuM4zoqA8wMP","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"4xrvCRlO7DgAGcek5YzWs","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"4vQOHkvHzXSJYFR-q3jvD","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"1jnXHQCRaU1Wpd86Fyet0","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"QwdP9yQRCQrjJgk8qyoUS","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"4ikqtcbzTbo04bgUsA3AS","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"y8QoUwaMSiqetJciCHS6l","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"0LWOjCYFabEoRPLdtxdmC","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"VW9xiSvVSSndM0BMOpmN7","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"sdH2C1-jOlKsoapj_zV8j","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"xVLk8yv-XC00NX_K_sdth","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"pjLrO5CfBnylHslFbbdpO","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"oGxWo7AvFG8dVzQCDS15K","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"4XGjekdHy4Qflb55s18a2","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"QBMeZUtiwfUIHZR7iVP8U","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"P5nsgfS3TiUKT9IZ663tX","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"7WdL5_4oVPefnApl8qnJ2","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"DCWBwode1Er53yeCS8JAG","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"3H2fD1Is9c5lh3e2JwWOC","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"VEBe13TssOcwosDGHu97A","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"B6XH7QNgws-Do4VRPLsDH","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"3IvEiARyp2ulGFoxvhc4v","name":"constructor","brief":"","examples":[{"caption":"","code":"\n me.game.world.addChild(new me.Trigger(\n     x, y, {\n         shapes: [new me.Rect(0, 0, 100, 100)],\n         \"duration\" : 250,\n         \"color\" : \"#000\",\n         \"to\" : \"mymap2\"\n     }\n ));\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.width","optional":true,"description":"<p>width of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","optional":true,"description":"<p>height of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.shapes","optional":true,"description":"<p>collision shape(s) that will trigger the event</p>","dataType":{"tokens":[{"value":"Array<Rect> | Array<Polygon> | Array<Line> | Array<Ellipse>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1<%2> | %3<%4> | %5<%6> | %7<%8>"}},{"identifier":"settings.duration","optional":true,"description":"<p>Fade duration (in ms)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.color","optional":true,"description":"<p>Fade color</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.event","optional":true,"default":"\"level\"","description":"<p>the type of event to trigger (only &quot;level&quot; supported for now)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.to","optional":true,"description":"<p>level to load if level trigger</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.container","optional":true,"description":"<p>Target container. See {@link level.load}</p>","dataType":{"tokens":[{"value":"string | Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.onLoaded","optional":true,"description":"<p>Level loaded callback. See {@link level.load}</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.flatten","optional":true,"description":"<p>Flatten all objects into the target container. See {@link level.load}</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"settings.setViewportBounds","optional":true,"description":"<p>Resize the viewport to match the level. See {@link level.load}</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"7ZQc6Lpo9FmD6WJ2R6hyh","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1w1Gy4XVgcOG56lMvbx8F","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"j5k6FMP6hFUzPP8kCq5r1","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gINPmWCT1YKV7wJNYRoHw","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"uLeAXlZS6muqmcE5dArHw","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"mkxqZgGif4oTKMJVnnG14","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"OfAE_v049bUggPz5uU-YZ","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"S25P1-wP3S27uqBVxHI_k","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"QdxmtBxf6iTZk2HoM6wUX","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"mU25_2HLOpftJmQ94vrdt","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"8bsqz2-Ey2BiEbGtIrvyN","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"svob94uh1MEQZdRiNyd1S","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xDREIYepl7PpeNXdZYOIy","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"o54Ngpfpk_nim7ArkYInj","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"H1RnCRYwHG0KV_i_axWCr","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"VV5cTlK1ztOvOBKF26jHK","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"uEYcIAHRh-Uu8FJBaz5VJ","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"T_eM6iyr6Sxig4OmWxtAR","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ghaXkdTdWX5S9JfjA5fU0","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"trwJcCG8RwQsUuVtvmQ96","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Ms3G0t7LrxeCCrgAqweJ1","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"CNP7ahMYPFPKp8x_Q4ah1","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Fl3klidR2aAnRxgHUh8Th","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"JZr0mVxSr1VFdbV3CIzrb","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PdOJHBgSJ5KH4JXl0zcJg","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"B2aIZcmZfz_nkUGWq-LBJ","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"B1cfrOxwTQmDMjaYwZ7_T","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"7bvqyfAShUkvp02ghdnG_","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Dm1x9EQG55tMiYBGMLEXF","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Wl-_gNjf0XRt7p44f8G_f","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Y2b_urKP1oeyYpzV41pbN","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"58mTn7vOKHBNJL4Iz5ckg","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ry72J2tMZe0yu6WE2y_5C","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"9MuszEvRIhnQldkiy9WF4","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"BezU6E07IcvmHLHxqVrIT","name":"triggerEvent","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>trigger this event</p>","params":[],"returns":[]},{"id":"qJDYetpe4tNHUQBCY48Z4","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_YMHTxFMNuwW4-803qpW-","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"2_DkUnVwU2DYKnHH9d2M2","name":"Tween","brief":"","type":"ClassDoc","description":"<p>Javascript Tweening Engine<p>\nSuper simple, fast and easy to use tweening engine which incorporates optimised Robert Penne...","members":[{"id":"pyMshz2I-w10itl1b_owT","name":"Easing","brief":"","access":"public","type":"EnumDoc","description":"<p>Easing Function :<br></p>\n <p>\n Easing.Linear.None<br>\n Easing.Quadratic.In<br>\n Easing.Quadratic.Out<br>\n Easing.Quadrati..."},{"id":"diMxfyq10LHQpNrQZB-6r","name":"Interpolation","brief":"","access":"public","type":"EnumDoc","description":"<p>Interpolation Function :<br></p>\n <p>\n Interpolation.Linear<br>\n Interpolation.Bezier<br>\n Interpolation.CatmullRom\n </p>"},{"id":"_M44_6BTOfazhk2F8lWv6","name":"chain","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>chain the tween</p>","params":[{"identifier":"chainedTween","description":"<p>Tween(s) to be chained</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"q7aWt3hRaQkCAeXBJgw-m","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // add a tween to change the object pos.x and pos.y variable to 200 in 3 seconds\n tween = new me.Tween(myObject.pos).to({\n       x: 200,\n       y: 200,\n    }, {\n       duration: 3000,\n       easing: me.Tween.Easing.Bounce.Out,\n       autoStart : true\n }).onComplete(myFunc);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"object","optional":false,"description":"<p>object on which to apply the tween</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"cbT7lpk3pTu61yJyJzEHK","name":"delay","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>delay the tween</p>","params":[{"identifier":"amount","optional":false,"description":"<p>delay amount expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"qEEWSX4wiN6dFCO9sg9ia","name":"easing","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>set the easing function</p>","params":[{"identifier":"easing","optional":false,"description":"<p>easing function</p>","dataType":{"tokens":[{"value":"Tween.Easing","kind":"canonical"},{"value":"Easing","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"s_2f6nvR4KBvh5TQ1HExI","name":"interpolation","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>set the interpolation function</p>","params":[{"identifier":"interpolation","optional":false,"description":"<p>interpolation function</p>","dataType":{"tokens":[{"value":"Tween.Interpolation","kind":"canonical"},{"value":"Interpolation","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"NGerWjW6NVZR2LrMV3xWY","name":"onComplete","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onComplete callback</p>","params":[{"identifier":"onCompleteCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"EjHZhrgqXpHr5r2kjs1OQ","name":"onStart","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onStart callback</p>","params":[{"identifier":"onStartCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"3_bIesLzrvXkrgbpZRWvL","name":"onUpdate","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onUpdate callback</p>","params":[{"identifier":"onUpdateCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"M55sHLqi6BF1-X6t4qxpL","name":"repeat","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Repeat the tween</p>","params":[{"identifier":"times","optional":false,"description":"<p>amount of times the tween should be repeated</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"pScyF7gvJJNFmpXkJReMp","name":"start","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>start the tween</p>","params":[{"identifier":"time","optional":true,"description":"<p>the current time when the tween was started</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"oUiVQOShD-zhiz4Jec_qf","name":"stop","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>stop the tween</p>","params":[],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"5WPgHiC1J8LNpQjgmJFzk","name":"to","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>object properties to be updated and duration</p>","params":[{"identifier":"properties","optional":false,"description":"<p>hash of properties</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options","optional":true,"description":"<p>object of tween properties, or a duration if a numeric value is passed</p>","dataType":{"tokens":[{"value":"object | number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"object | %1"}},{"identifier":"options.duration","optional":true,"description":"<p>tween duration</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.easing","optional":true,"description":"<p>easing function</p>","dataType":{"tokens":[{"value":"Tween.Easing","kind":"canonical"},{"value":"Easing","kind":"link"}],"template":"%1"}},{"identifier":"options.delay","optional":true,"description":"<p>delay amount expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.yoyo","optional":true,"description":"<p>allows the tween to bounce back to their original value when finished. To be used together with repeat to create endless l...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.repeat","optional":true,"description":"<p>amount of times the tween should be repeated</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.interpolation","optional":true,"description":"<p>interpolation function</p>","dataType":{"tokens":[{"value":"Tween.Interpolation","kind":"canonical"},{"value":"Interpolation","kind":"link"}],"template":"%1"}},{"identifier":"options.autoStart","optional":true,"description":"<p>allow this tween to start automatically. Otherwise call me.Tween.start().</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"ImCt7nJOD5sGF0JueKeRv","name":"yoyo","brief":"","access":"public","scope":"instance","see":["Tween#repeat"],"type":"MethodDoc","description":"<p>Allows the tween to bounce back to their original value when finished.\nTo be used together with repeat to create endless l...","params":[{"identifier":"yoyo","optional":false,"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]}]},{"id":"6VbPj4LDHAcjhSbmsbs8e","name":"Vector2d","brief":"","type":"ClassDoc","description":"<p>a generic 2D Vector Object</p>","members":[{"id":"2pm8cJLuNJxu_p3tiNjkn","name":"x","brief":"","access":"public","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"YW2tEM95UPniEyZgemi51","name":"y","brief":"","access":"public","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"kY-zyJKB3PXjuKZrVSsVh","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Z2lGTimHcCXgXn_MxqPCh","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"04Q1A-08TG-i6Z-X1_15M","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"YxhA8Y4OPKpjSO4LtdhS1","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"e3L_UVLJlPDd3aVsIaAnP","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"BCflRnjErDEiBUjhTvOh4","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"hqCWgrAGJttBCeS67tUjh","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"KWCjLtruQhVncTNMuVuJo","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Es_WUJqEU99BxXx7XsabM","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"x6hwC6_tPH0P2hnWzdxBN","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the x,y values of the passed vector to this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"bxufgR3MXJnz_J7MCV54a","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The cross product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"rzlIsHlrRV2UE85dgRgoM","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Qhi-OqPBqV-JgJp70ywgw","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"7cbyZO6cAf61IK8Azawzc","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"If8Z9Ej8EEYiegepP0mvq","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if this vector is equal to the given values</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SIt6vELDpmnr_gUldzDV4","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"-JNAWX0XMFCmvErLolskc","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"bwJx1fiy7s5mTa0GMdUKf","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"mk8RiLrU64riDSU898mmY","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-BzqnfO9Sn_bo-vN-dVjL","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"VNnXtUPHqkUPQmImskivK","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"7QdOgAkhHYD3PIFA1ldqf","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"0zrOwC2vGcMYY5KUxcrgf","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"JxjFgifzAFUq4K0llAFtG","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"CAOzoILh8t-pM-YAfaisp","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"QI2WytArhCoyamxGn5Jyu","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"lAl2vmc0LveBP-6mBMklt","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"U-LL1wWtQ2hN9fTz20cho","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"PY-7rn9ovzRZBoibBojte","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"YpS_tEv4DYW8zdsBLJfx7","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"S6OZ1F6CqM1W6xnAR-U7S","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"-rxT-XrdMRMkfvvHJIjQh","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"_e_KxAnULp_lUCW6x1-xd","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"QUmaqlW60Cu7Z_Hapo5ar","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"_4qRjo03BWEejvyZxrkcm","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"93BUCOX2A9SxHJTlMmT_3","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"KTAVxwn6wQbjVrnYUCboe","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"rTiVB8_67SrfDcTLOtRUX","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"BXFprDAprNZMYoTNk_S5b","name":"equals","brief":"","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"N7G1sacFPaHuo16ibMGBn","name":"Vector3d","brief":"","type":"ClassDoc","description":"<p>a generic 3D Vector Object</p>","members":[{"id":"mBTRlRe5EfEtI-95QKQWE","name":"x","brief":"","access":"public","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"IpGbm41JH1ungYk2VMAS8","name":"y","brief":"","access":"public","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"B6KvSMBl7mt5iHorDiQl_","name":"z","brief":"","access":"public","type":"PropertyDoc","description":"<p>z value of the vector</p>"},{"id":"TVwPgQiuz2VWPHH6vmFwV","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"HtSCUd248oOtBZvwRWXQK","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"NLtNEnlosAoT61r95A5eo","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"pgH7Ub8ctrsdtdnrBZ69h","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"Xhza8jkK4tmAtagsPNTij","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"Zo4979EyIGqZbe6mS-u5K","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"QMeGw77Mpl0Ti7oRVZ7Wf","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"gBVNyRwiQ_JynbSgko-lZ","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"mbb9CzJYqnAgEqDTQOkqZ","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wQjs7uHV5A00z4-eQC_zr","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the components of the given vector into this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"B_3KFXduiDR3a17Oi8KaH","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>calculate the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"jSuz8DGs9KnJavvqaGoK_","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"C1oz6NJLfiyxOAF46hHrw","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"jhNNiOp_5ssuqAUbkZkjw","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jq2a4L2H5TalQK8U0Az_R","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if this vector is equal to the given values</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"U3aX16R7-j5wTK9KZALOI","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"Vbold4sEpm6DUhPFtqJRT","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ZL2ZCDcAPS2l20aaOxPYK","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"oTTza0OJEqDHkH9e1JUxm","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"D3kA6oHPa3CiHyQZECKs8","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"qYMzemREpLGsTmvyfMZbm","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"6TaBsSTNatMUVekqgqKhL","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"RUQ_Y34obCgqBeCbdIomR","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"cdhHEVeQt5s9ZfnJJ10OM","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"WYBaLqhpqYdg-VDmPsyj2","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"pES4HcTSJ780oZLIYLC5N","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"4xuc7KH8fZpQjeyUw-6ZZ","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"r4_IuITEEOLfxPAB8dvEL","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"TYf8mDgLj335FoaRTmiqm","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians) around the z axis</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around (on the same z axis)</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"DLfafbpGXVL14WijnTkf1","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"CYrf9VRRFwCTLi4GQkMfg","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"1pzak3tOh_jy2jwFOKv1Y","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"WE-XpYM9LgNfdUFzPhWxC","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ACeCTCjz4LLKuOC9GtgZc","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"dKRXAoSmZ2BMQokp23N4V","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"xiCCQ_tWUL9NdaF-HpaWG","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"XHi7kkjEMx97DC6rwC7xE","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"pV6pK2fIN_7K5MpKyouIh","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"sMnKxrPjKgOBDNYFiYvUW","name":"equals","brief":"","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"JbUTpeKcAMI01rg1Elyd1","name":"WebGLCompositor","brief":"","type":"ClassDoc","description":"<p>A WebGL Compositor object. This class handles all of the WebGL state<br>\nPushes texture regions or shape geometry into Web...","members":[{"id":"mj6vw57tqzy7G-SF63Jdm","name":"activeShader","brief":"","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the active WebGL shader</p>"},{"id":"ps8AwWW5ywb4Q5RAZStyF","name":"attributes","brief":"","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>an array of vertex attribute properties</p>"},{"id":"pKf3zQ-vNseCzY41RcFdW","name":"mode","brief":"","defaultValue":"gl.TRIANGLES","scope":"instance","see":["WebGLCompositor"],"type":"PropertyDoc","description":"<p>primitive type to render (gl.POINTS, gl.LINE_STRIP, gl.LINE_LOOP, gl.LINES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN, gl.TRIANGL..."},{"id":"hx40bf_8p-17NQAK_PFxn","name":"vertexByteSize","brief":"","defaultValue":"0","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>the size of a single vertex in bytes\n(will automatically be calculated as attributes definitions are added)</p>"},{"id":"UtkrU0HBfa_pffGVGjtxi","name":"vertexSize","brief":"","defaultValue":"0","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>the size of a single vertex in floats\n(will automatically be calculated as attributes definitions are added)</p>"},{"id":"rAeePUShHx7NctP9pAJfe","name":"addAttribute","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add vertex attribute property definition to the compositor</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the attribute in the vertex shader</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"size","optional":false,"description":"<p>number of components per vertex attribute. Must be 1, 2, 3, or 4.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"type","optional":false,"description":"<p>data type of each component in the array</p>","dataType":{"tokens":[{"value":"GLenum","kind":"canonical"},{"value":"GLenum","kind":"canonical"}],"template":"%1"}},{"identifier":"normalized","optional":false,"description":"<p>whether integer data values should be normalized into a certain range when being cast to a float</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"offset","optional":false,"description":"<p>offset in bytes of the first component in the vertex attribute array</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zTtJHv3c0KlUFYiF8TqW8","name":"addQuad","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a textured quad</p>","params":[{"identifier":"texture","optional":false,"description":"<p>Source texture atlas</p>","dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>Destination x-coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Destination y-coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>Destination width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>Destination height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"u0","optional":false,"description":"<p>Texture UV (u0) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v0","optional":false,"description":"<p>Texture UV (v0) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"u1","optional":false,"description":"<p>Texture UV (u1) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v1","optional":false,"description":"<p>Texture UV (v1) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tint","optional":false,"description":"<p>tint color to be applied to the texture in UINT32 (argb) format</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UHIzeibSX8b_hQQTIx458","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>delete the given WebGL texture</p>","params":[{"identifier":"texture","optional":true,"description":"<p>a WebGL texture to delete</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":true,"description":"<p>Texture unit to delete</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"yvwxAVOINIuW5axDaP5kB","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the WebGL texture associated to the given texture unit</p>","params":[{"identifier":"unit","optional":false,"description":"<p>Texture unit to which a texture is bound</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>texture a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}}]},{"id":"JsnfWLQNRzYHg-wDaRHpT","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>assign the given WebGL texture to the current batch</p>","params":[{"identifier":"texture","optional":false,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":false,"description":"<p>Texture unit to which the given texture is bound</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YETbnJTHdlrlCOl-DjnO6","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clear the frame buffer</p>","params":[],"returns":[]},{"id":"radIDBrBX-wNtH6HxhKuB","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Specify the color values used when clearing color buffers. The values are clamped between 0 and 1.</p>","params":[{"identifier":"r","optional":true,"default":"0","description":"<p>the red color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","description":"<p>the green color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"default":"0","description":"<p>the blue color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"a","optional":true,"default":"0","description":"<p>the alpha color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CL1Rm1iOfXmlCtBjeAPN_","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"renderer","optional":false,"description":"<p>the current WebGL renderer session</p>","dataType":{"tokens":[{"value":"WebGLRenderer","kind":"canonical"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"risYQ9MT5LRyBU9p8ZXu3","name":"createTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Create a WebGL texture from an image</p>","params":[{"identifier":"unit","optional":false,"description":"<p>Destination texture unit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image | HTMLCanvasElement | ImageData | Array<Uint8Array> | Array<Float32Array>","kind":"canonical"},{"value":"Image","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"ImageData","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Uint8Array","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1 | %2 | %3 | %4<%5> | %6<%7>"}},{"identifier":"filter","optional":false,"description":"<p>gl.LINEAR or gl.NEAREST</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":true,"default":"\"no-repeat\"","description":"<p>Image repeat behavior (see {@link ImageLayer#repeat})</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"w","optional":true,"description":"<p>Source image width (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":true,"description":"<p>Source image height (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"description":"<p>Source image border (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"premultipliedAlpha","optional":true,"default":"true","description":"<p>Multiplies the alpha channel into the other color channels</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"mipmap","optional":true,"default":"true","description":"<p>Whether mipmap levels should be generated for this texture</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}}]},{"id":"rlKimaHZIzVHZUV9OCL_R","name":"drawVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw an array of vertices</p>","params":[{"identifier":"mode","optional":false,"description":"<p>primitive type to render (gl.POINTS, gl.LINE_STRIP, gl.LINE_LOOP, gl.LINES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN, gl.TRIANGL...","dataType":{"tokens":[{"value":"GLenum","kind":"canonical"},{"value":"GLenum","kind":"canonical"}],"template":"%1"}},{"identifier":"verts","optional":false,"description":"<p>vertices</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"vertexCount","optional":true,"default":"verts.length","description":"<p>amount of points defined in the points array</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"0LS98atfT_fHZIWhohj3C","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Flush batched texture operations to the GPU</p>","params":[{"identifier":"mode","optional":true,"default":"gl.TRIANGLES","description":"<p>the GL drawing mode</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nq-uy1y7wt7etULK8ulwX","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"rZRJ9N8BtAUMArmfkw3IH","name":"setViewport","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Sets the viewport</p>","params":[{"identifier":"x","optional":false,"description":"<p>x position of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y position of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"e0yMMvHtDMVl6yIZqhPdU","name":"unbindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>unbind the given WebGL texture, forcing it to be reuploaded</p>","params":[{"identifier":"texture","optional":true,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":true,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>unit the unit number that was associated with the given texture</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"DVq6cdQrTWp7cQfn6uIj0","name":"useShader","brief":"","scope":"instance","see":["GLShader"],"type":"MethodDoc","description":"<p>Select the shader to use for compositing</p>","params":[{"identifier":"shader","optional":false,"description":"<p>a reference to a GLShader instance</p>","dataType":{"tokens":[{"value":"GLShader","kind":"canonical"},{"value":"GLShader","kind":"link"}],"template":"%1"}}],"returns":[]}]},{"id":"c_Vfxbo_h1BXo6wjKAYnF","name":"WebGLRenderer","brief":"","type":"ClassDoc","description":"<p>a WebGL renderer object</p>","extends":["Renderer"],"members":[{"id":"r_yGnV6Gq2tuB9B8GC_M_","name":"compositors","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The list of active compositors</p>"},{"id":"ySnBRFU4fD3atFvbH6bxh","name":"currentCompositor","brief":"","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The current compositor used by the renderer</p>"},{"id":"LO38Rr3qe6DAv3i5hRsy3","name":"currentTransform","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The current transformation matrix used for transformations on the overall scene</p>"},{"id":"5ZHkmwLV2i-FfCNiIFlxq","name":"gl","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The WebGL context</p>"},{"id":"tKtu9bUN6A8nFZLMjDVsc","name":"GPURenderer","brief":"","defaultValue":"null","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The renderer string of the underlying graphics driver.</p>"},{"id":"BEGMEwv921vW9rqnTEIXW","name":"GPUVendor","brief":"","defaultValue":"null","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The vendor string of the underlying graphics driver.</p>"},{"id":"-r4P-1oCtEA-Vzd0EPBYr","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"IUa1JvWjQ7xCxD_dmAeOR","name":"maxTextures","brief":"","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>Maximum number of texture unit supported under the current context</p>"},{"id":"yHdpkbdyRYP68jD9b_-bC","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"pXqVqfh27zrTwElJ0jwzN","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"WPpPtw1nyNYfFThOMhR9A","name":"WebGLVersion","brief":"","defaultValue":"1","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The WebGL version used by this renderer (1 or 2)</p>"},{"id":"OtzJB_lkqMk0UFkE6TK1K","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"FZWR8Wql1FKL7TPbX4D9X","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the gl context with the given color.</p>","params":[{"identifier":"color","optional":true,"default":"\"#000000\"","description":"<p>CSS color.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"opaque","optional":true,"default":"false","description":"<p>Allow transparency [default] or clear the surface completely [true]</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ZDO4DZWOGLljblR6IN-wf","name":"clearMask","brief":"","scope":"instance","see":["WebGLRenderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"5h8KT1Tn9E9jH0l9ewHJ_","name":"clearRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Erase the pixels in the given rectangular area by setting them to transparent black (rgba(0,0,0,0)).</p>","params":[{"identifier":"x","optional":false,"description":"<p>x axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>The rectangle's width.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The rectangle's height.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"pbnXinsa0zdVRoDSj8yiG","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"dzFKF9e8AZ2HD8XSRLSiW","name":"clipRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clip the given region from the original canvas. Once a region is clipped,\nall future drawing will be limited to the clippe...","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jFLf5fhgNlLMjKVJDXb8U","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel renderering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.preferWebGL1","optional":true,"default":"false","description":"<p>if true the renderer will only use WebGL 1</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.powerPreference","optional":true,"default":"\"default\"","description":"<p>a hint to the user agent indicating what configuration of GPU is suitable for the WebGL context (&quot;default&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.compositor","optional":true,"description":"<p>A class that implements the compositor API</p>","dataType":{"tokens":[{"value":"WebGLCompositor","kind":"canonical"},{"value":"WebGLCompositor","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"zRv61Uv0JJy45Yxr-GQkW","name":"createPattern","brief":"","examples":[{"caption":"","code":"\n var tileable   = renderer.createPattern(image, \"repeat\");\n var horizontal = renderer.createPattern(image, \"repeat-x\");\n var vertical   = renderer.createPattern(image, \"repeat-y\");\n var basic      = renderer.createPattern(image, \"no-repeat\");\n"}],"scope":"instance","see":["ImageLayer#repeat"],"type":"MethodDoc","description":"<p>Create a pattern with the specified repetition</p>","params":[{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":false,"description":"<p>Define how the pattern should be repeated</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}}]},{"id":"pwShebT9qS8U8AzubaMHh","name":"drawImage","brief":"","examples":[{"caption":"","code":"\n // Position the image on the canvas:\n renderer.drawImage(image, dx, dy);\n // Position the image on the canvas, and specify width and height of the image:\n renderer.drawImage(image, dx, dy, dWidth, dHeight);\n // Clip the image and position the clipped part on the canvas:\n renderer.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Draw an image to the gl context</p>","params":[{"identifier":"image","optional":false,"description":"<p>An element to draw into the context. The specification permits any canvas image source (CanvasImageSource), specifically, ...","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"sx","optional":false,"description":"<p>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sy","optional":false,"description":"<p>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sw","optional":false,"description":"<p>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rect...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sh","optional":false,"description":"<p>The height of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dx","optional":false,"description":"<p>The X coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dy","optional":false,"description":"<p>The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dw","optional":false,"description":"<p>The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dh","optional":false,"description":"<p>The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the imag...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jB5YcWSzI7CrpoM9LunZ4","name":"drawPattern","brief":"","scope":"instance","see":["WebGLRenderer#createPattern"],"type":"MethodDoc","description":"<p>Draw a pattern within the given rectangle.</p>","params":[{"identifier":"pattern","optional":false,"description":"<p>Pattern object</p>","dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vovZvn-hyfmIEQi9EBXEK","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"DPe6ZolWNWA-nxg3Evvaz","name":"fillArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"h3hbpm85iHhsEagytPFuf","name":"fillEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"k4YOqsjqHReIdbdlATdrd","name":"fillLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ZPQBWatWNyjsPDXKfq7mk","name":"fillPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"nCKjhQngODSMq2ek88rsS","name":"fillRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"69UkuZXISQw2pNwqhceFZ","name":"fillRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a rounded filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vA8ZHnWGM_nhGp8G_GPm5","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Flush the compositor to the frame buffer</p>","params":[],"returns":[]},{"id":"G6QnrBDbwyqbTJIUOKSa9","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"MKDLfF-dqnJQkS8FvoEJM","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"ml7STucpGzvE0mFGlMby2","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"2t6ZwoPkkCwbcfttLHPxM","name":"getContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the WebGLContext instance for the renderer\nreturn a reference to the system 2d Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"C20xmUuVJJ7EToEfu8vvk","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"jVBUeiCA0-lGcDa_5qoaB","name":"getContextGL","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the WebGL Context object of the given Canvas</p>","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"yX6kV7bn5oyhQpywxUzXi","name":"getGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the global alpha</p>","params":[],"returns":[{"description":"<p>global alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"xwzEarGHXL57-jF0TFGqt","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vrNBykWWO5Vm3gPc2KHeP","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"QZ7LT7NWlQLo7OBHu3vav","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding WebGL Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"ZtL_AXzEKclZw5edYw5j9","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ZpuqBi1hR2kDPJy1L9cOA","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"0yKcOkPjj6f_IxQzZEaZg","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EEyAJsb0TetEg87DeIbKE","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"pLxF0mzxvgiplLcF7FJ9I","name":"resetTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the gl transform to identity</p>","params":[],"returns":[]},{"id":"QCZDmLOn-0RLFXx4WLVxR","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"TmJSUsJaRqPa2VVyvXtD3","name":"restore","brief":"","scope":"instance","type":"MethodDoc","description":"<p>restores the canvas context</p>","params":[],"returns":[]},{"id":"S050hJ2OwUJxV7dN-wRDA","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotates the uniform matrix</p>","params":[{"identifier":"angle","optional":false,"description":"<p>in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vbpvK1lxsAv5-t1mfQE6Z","name":"save","brief":"","scope":"instance","type":"MethodDoc","description":"<p>saves the canvas context</p>","params":[],"returns":[]},{"id":"czc-BNrBpj69m8swOHj8v","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scales the uniform matrix</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VkTHksWu7g0yK6KOjRApW","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"SAK8nbtsDEzDilvf1eBTT","name":"setBlendMode","brief":"","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"type":"MethodDoc","description":"<p>set a blend mode for the given context. <br>\nSupported blend mode between Canvas and WebGL remderer : <br></p>\n<ul>\n<li>&q...","params":[{"identifier":"mode","optional":true,"default":"\"normal\"","description":"<p>blend mode : &quot;normal&quot;, &quot;multiply&quot;, &quot;lighter&quot;, &quot;additive&quot;, &quot;screen&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"gl","optional":true,"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"3WGMgwQYY7nBgTDLkCwPi","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the current fill &amp; stroke style color.\nBy default, or upon reset, the value is set to #000000.</p>","params":[{"identifier":"color","optional":false,"description":"<p>css color string.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"z2YayWu4vrXP14bKqKnuY","name":"setCompositor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the active compositor for this renderer</p>","params":[{"identifier":"compositor","optional":false,"default":"\"default\"","description":"<p>a compositor name or instance</p>","dataType":{"tokens":[{"value":"WebGLCompositor | string","kind":"canonical"},{"value":"WebGLCompositor","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"LaOnAsZFpUeC7--AGN5vY","name":"setGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the global alpha</p>","params":[{"identifier":"alpha","optional":false,"description":"<p>0.0 to 1.0 values accepted.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Y77FYtq_e9iIsdjjnGSjg","name":"setLineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the line width</p>","params":[{"identifier":"width","optional":false,"description":"<p>Line width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"AHmP7BVibRxQYUlBe1F4X","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>a shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"QuyEr8BeV4AJkYflrFQ5O","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"mArC4rrhO_Md9ZIZ0Pqr-","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"e1MKVZEMQLBDx781JA-wg","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset (overrides) the renderer transformation matrix to the\nidentity one, and then apply the given transformation matrix.</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"4-EJ6wpFK5tyGbITrQdSQ","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"93CE6YJ5eIsRCwAh2hDqG","name":"strokeArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"fill","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"7EWiDHKEqw45mWQ5YyG4P","name":"strokeEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"fPY8gqj39eRPN8QQNKCpG","name":"strokeLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"kGIS4DLuO_4BgYaTLVNY7","name":"strokePolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a me.Polygon on the screen with a specified color</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"w1MAdQcHhIQjd9Y4uJo3A","name":"strokeRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a stroke rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"YCk1sMYq8hNQy1JgEmN87","name":"strokeRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rounded rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"BHr5fzoPEDmB1Oh908iGx","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"aBiPhHntkokmhXHDXenKd","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply given matrix into the renderer tranformation matrix</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"muKiBDsw8lce4pFlFxlLN","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the uniform matrix by the given coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"F6bAhoBeFlrCxD4ZtLwCl","name":"World","brief":"","type":"ClassDoc","description":"<p>an object representing the physic world, and responsible for managing and updating all childs and physics</p>","extends":["Container"],"members":[{"id":"p75Kp-nqK04aSKgW3mEML","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"9qw4j2O2-Bz-AR_Tg8u3O","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"V9HlFw86GMp4V2uF4_rF8","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"YI-HY9BqGSNXxKQWK7w6x","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"GI8EQzAQgrlmOw7yPMoVi","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"iixGRQERM85y2XsZL8-gy","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"3ktC7JcqL3cJC9mJH1rsg","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"Lc4OW0hJkLHe2qrRGVrGc","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"NVE7tbPcnJ3IRw04W7PhZ","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"Ht2yHIpF7RjidRh4OQLTM","name":"bodies","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the active physic bodies in this simulation</p>"},{"id":"BIucRydF19yl9jnxDn03O","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"uSo0KxQZ8ETOHEwdAgRiZ","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"NYrjbmsTphIXWL-2JHcaM","name":"broadphase","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the instance of the game world quadtree used for broadphase</p>"},{"id":"wjompHZ7Ra4EfQUL63Qvw","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"rStWMsIJmlVLulNPTOxEL","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"kowEXyHeoJzlnISgPcqKp","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"7nCiKSFId7_QLVw4Hzrvv","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"KGT9ErktqnA2Eh0f-Oej1","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"itgM74vJlo1EPWYfd07Mt","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"y4SRPzageE26rx6aCk4HZ","name":"fps","brief":"","access":"public","defaultValue":"60","scope":"instance","see":["timer.maxfps"],"type":"PropertyDoc","description":"<p>the rate at which the game world is updated,\nmay be greater than or lower than the display fps</p>"},{"id":"8eJDkXlmlWUao7RGWdTRa","name":"gravity","brief":"","access":"public","defaultValue":"<0,0.98>","scope":"instance","type":"PropertyDoc","description":"<p>world gravity</p>"},{"id":"joXWGK9M4WDHM9mWqiuIA","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"I409QUkTlBLQVzZVN4767","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"Of7UUetH_HGMPEfFLuWI5","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"VRYDV2qNBv1FYMfipO28n","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"zBBKjZ46Gy66f--Xah2Zm","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"T6jmU9GCIqMYifFMKuzWv","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"-7xn8mArq1oHHzfKVGP9V","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"qojmXmwsBl9fRCxoBUWnS","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"BNdnjUJMHZ2X_lUxHZ3jw","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"hWFVBMlImh4NLa5nKvFCZ","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"1MFjfjj2FOyyY3uIFEMGV","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"Z-LNQHa5Zyls35sRvU3WU","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"hMeCyF7m_tS2KtSd8WElO","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"64CBQFIatPa0NGpaTVFk1","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"Cl3vUys5zQNorMbbUH7NC","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"gB6gEu5d5mZEnXTWCDkmZ","name":"preRender","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify the rendering method for tile layers. <br>\nif false visible part of the layers are rendered dynamically,<br>\nif tr..."},{"id":"hWyo1dvYsvzyAQt4L6on7","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"lnQ2sjqS1boQ6Kqt1Kp5J","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"7x4wMUUMNitLzTcynLM2D","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"fdN6N8OI5Scf9aL6YjKbE","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"ju4yxZv-51Hu-7KTFuPCi","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"mZld25Fk4NegMXGKOMgZC","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"FuL5R__gW7TRu1ZWprOqR","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"Iabd2NAw7MoayGCLWk3y6","name":"addBody","brief":"","scope":"instance","see":["Container.addChild"],"type":"MethodDoc","description":"<p>Add a physic body to the game world</p>","params":[{"identifier":"body","optional":false,"dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this game world</p>","dataType":{"tokens":[{"value":"World","kind":"canonical"},{"value":"World","kind":"link"}],"template":"%1"}}]},{"id":"R8677lYnyLU8r0JwcaTAH","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"DTMKXiC1LJZq1Alweg5FU","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ILzMEtcfEZQ6qElbzu1LT","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"W6Cod__L35JBZhFI0DJKO","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"mbCEub0RitO1yGGxcDoGu","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"al4CXTJ1i01wgnE8P7flC","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":true,"default":"game.viewport.width","description":"<p>width of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":true,"default":"game.viewport.height","description":"<p>height of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"9NlbKb0xhP2AEUIowd08r","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JVvsroeTNIICO2ZxgCppT","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"I9ctvTcbEZmyYI_LuxY3w","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"hGGJ5NbB2D9k5MANuGoYb","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EQRL6zvpQbMgjKJmtiQQe","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"JvA_hgPpk6Vu8IQ3n0Hla","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"8OtUO6600rGMrHglli36b","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"CNNzhduRxhO8VkOkpRRjL","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"PTcYTVjG6I3NmK3Kr4Jlb","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"p3uIG3HwE9sN5znpgERgb","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"90Om-qz6liHbgvkd7HTPr","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"R8aM4rczhEHMQ0EO33rdL","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"bW7PnztLFu6pxGJ72dKga","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"yq0DMk3V2Q6FZgGol91xJ","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"uq-_-ErOv1B4ntnFnOysS","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"QA1zQhtSLeuKfqa6zM_0_","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"2nUD8jTufR89htLynTcI-","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"_bC4TxBKKta6VrMoACRov","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ydfpTLDSVxTduCdv7pk1i","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"8leFIS4UnO3ovD2GrN-ej","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-AeI0Hh51I7HlCYuLynIc","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5-qxDJFbbtGb0C6c5TOjI","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"F5M3DSpl08na049Vw0G7b","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Au6N9Ql5iO2OOTi6LrXyD","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"x9qeFRZR1lAtSG2bVMIYA","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ZLnQQPPfxMyN5Reu9ozur","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"aCm0-Oni2Heb5PtHMuwrE","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"p-LoIiRMkSgJrBf1nYyxG","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tuXJ7v5kwnU4z5UoNVren","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BGly0uGpD4CuQBCgQPtGf","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"F6xmF2FQUFjUw-rUpQhda","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bKJc0XpHkU0T13cLOJzLu","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"5CIehKERiBfdDR68Zy1Ea","name":"removeBody","brief":"","scope":"instance","see":["Container.removeChild"],"type":"MethodDoc","description":"<p>Remove a physic body from the game world</p>","params":[{"identifier":"body","optional":false,"dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this game world</p>","dataType":{"tokens":[{"value":"World","kind":"canonical"},{"value":"World","kind":"link"}],"template":"%1"}}]},{"id":"XBvgvNPZEWiKxgrwa9Dua","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"w7ggKCHzJAXYwrt0HG-rL","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"M8o6tq6TcRTIfeKgeLAQA","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the game world</p>","params":[],"returns":[]},{"id":"03ID3h0qOQM0SItMbNPod","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>update the game world</p>","params":[{"identifier":"dt","optional":false,"description":"<p>the time passed since the last frame update</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the word is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BSqpD5RuhGpq6pBpMXKb8","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Yxz1a3LrJ5SGgpQ9AjkqR","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"r1YjiUq47iJxG9n_4mXby","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Vt633mX9PZwuZgTNEvm4k","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"PBepmobKKOK1v-G4oQGLW","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"uVnxackgSW7XAHxCZQsX6","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"z_1Mkjw--4HrstGHji9Aj","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"lBBnZqOkm2n9yog2z100C","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6ovyt5dqOpyER2cf2e2Yy","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"XN5hclCbtbDzxo8U5_tzp","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"uePaTBjL-CUHKBVRnswgl","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"wOFkra5smIadG_I7763dr","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ddz8y8iIsrN79vEIwSGtV","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"n9SoLBk1E1N-GWQ1-AYC-","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"5zZY0D02NhY8i3sFs92S6","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"F420P1ChouGTq8OMsOyDo","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"U12fqg7XnTKTVYxkUkncD","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"D3MX55mW_LbqlV8Juvbt-","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"rS1fGJkM52KA3ur2tJz7K","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"lTQmS5ZM9mN8fhDI6kaiH","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"f727N6VwWCmYKCea0CnlN","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ll8gFWs_-M36_4COP5zCU","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kU4eXck-siQX_a0Jd_bT9","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"vDibj5jIzzvR448ryAjs5","name":"version","brief":"","defaultValue":"\"__VERSION__\"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>current melonJS version</p>"},{"id":"EmGWIy8y27rh5af5jhZfa","name":"initialized","brief":"","defaultValue":"false","readonly":true,"type":"PropertyDoc","description":"<p>a flag indicating that melonJS is fully initialized</p>"},{"id":"JxZmivkobdV1UmJbpl8I1","name":"skipAutoInit","brief":"","defaultValue":"false","see":["boot"],"type":"PropertyDoc","description":"<p>disable melonJS auto-initialization</p>"},{"id":"vV7XxqWZ99nPwjl_rQX1l","name":"boot","brief":"","access":"public","see":["skipAutoInit"],"type":"FunctionDoc","description":"<p>initialize the melonJS library.\nthis is automatically called unless me.skipAutoInit is set to true,\nto allow asynchronous ...","params":[],"returns":[]}]},"registry":{"pkg-jYh2xmd8RT0mtK_9QNu3V":{"uri":"/melonJS/docs/melonjs.html"},"_o9U6Ul0XfKWznHMDjzWj":{"uri":"/melonJS/docs/melonjs/audio.html"},"U3vuVe0CuGVeKapt5YkGG":{"uri":"/melonJS/docs/melonjs/audio.html#stopOnAudioError"},"v-6gntcbDk4I3Et5tSog8":{"uri":"/melonJS/docs/melonjs/audio/disable.html"},"QFXa6AkE3rExtYmyRC055":{"uri":"/melonJS/docs/melonjs/audio/enable.html"},"bFQxDNA1NLf94SmIb4jhh":{"uri":"/melonJS/docs/melonjs/audio/fade.html"},"DFd1WnKr4CVlMa6oVwH4Y":{"uri":"/melonJS/docs/melonjs/audio/getCurrentTrack.html"},"JvQLfjSO0n9QNu9imo3xK":{"uri":"/melonJS/docs/melonjs/audio/getVolume.html"},"w9g4UEZ5N4YoJYRdyyFIq":{"uri":"/melonJS/docs/melonjs/audio/hasAudio.html"},"PK6_cdCZ7-AUumamrwJt-":{"uri":"/melonJS/docs/melonjs/audio/hasFormat.html"},"KoWt203s8rHJrTTuwmO4x":{"uri":"/melonJS/docs/melonjs/audio/init.html"},"AhT4S11YT_3RapupPlwSy":{"uri":"/melonJS/docs/melonjs/audio/mute.html"},"zNHmcxzuOvC944E_cbOq4":{"uri":"/melonJS/docs/melonjs/audio/muteAll.html"},"mwnUplCVox5aQCde_IH1l":{"uri":"/melonJS/docs/melonjs/audio/muted.html"},"_neOt76-glav-4AnqcCea":{"uri":"/melonJS/docs/melonjs/audio/pause.html"},"NWure2oU7-Qr_spIx1VqF":{"uri":"/melonJS/docs/melonjs/audio/pauseTrack.html"},"nv2m9rA0ssEphuI_xlfpj":{"uri":"/melonJS/docs/melonjs/audio/play.html"},"qjetuexEv0cUAeURWURLy":{"uri":"/melonJS/docs/melonjs/audio/playTrack.html"},"adZAUThjpMK3VfYFoAF2g":{"uri":"/melonJS/docs/melonjs/audio/rate.html"},"v2W9rgPWgkSKhk94iD1e1":{"uri":"/melonJS/docs/melonjs/audio/resume.html"},"PXzu4BVf-m96d9htI1cr5":{"uri":"/melonJS/docs/melonjs/audio/resumeTrack.html"},"yU51Cgxpw5sHiNS8AdrgF":{"uri":"/melonJS/docs/melonjs/audio/seek.html"},"HKXXRxAA8DBdgRsHhHDzc":{"uri":"/melonJS/docs/melonjs/audio/setVolume.html"},"Qs4_FVm6oRzSVNf-hIZaD":{"uri":"/melonJS/docs/melonjs/audio/stop.html"},"NhsXZRzO6iB1lj5l867yC":{"uri":"/melonJS/docs/melonjs/audio/stopTrack.html"},"XlmP4lyIMzHkPNwqsOErn":{"uri":"/melonJS/docs/melonjs/audio/unload.html"},"qwWFsKF2oFBnab0N5TIQl":{"uri":"/melonJS/docs/melonjs/audio/unloadAll.html"},"S75VBc77AnIWLKpc3kVv2":{"uri":"/melonJS/docs/melonjs/audio/unmute.html"},"zsCsOL1xAStL9jeKRPhed":{"uri":"/melonJS/docs/melonjs/audio/unmuteAll.html"},"JhLHUvATaYpLyNPLHrq0V":{"uri":"/melonJS/docs/melonjs/collision.html"},"zxow2MQUCRTugdvTL5kCF":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html"},"pZA4P74Gm70lB-aTp2EWd":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#a"},"JDgVaN3AYKfw8ehjDOAMi":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#aInB"},"eF_fzYfBgisLploxVfW3x":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#b"},"YO9DU5rvcfGCr_tllP_lh":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#bInA"},"04rpy3_Uqpj68ukjMjHcQ":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#indexShapeA"},"nrhEdd96QLoaNGNah6Is8":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#indexShapeB"},"PJJM7j30h_B9fKmqZqCBZ":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#overlap"},"rTUPjOz2oS0ui-9Bu3cRz":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#overlapN"},"rmmi7MOIpG6Uj3iboKQo-":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#overlapV"},"VjPRer7X90DDnRBw0pmbx":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#clear"},"O5_Ff-ubKyc4uJr2qoEKj":{"uri":"/melonJS/docs/melonjs/collision/types.html"},"f2BeN2A2VBwBIBnYgTsX7":{"uri":"/melonJS/docs/melonjs/collision/types.html#ACTION_OBJECT"},"Ba8d5LsY8X1LdlwMJH7Tv":{"uri":"/melonJS/docs/melonjs/collision/types.html#ALL_OBJECT"},"Z3ijilnxe-p7o5pdsDFe1":{"uri":"/melonJS/docs/melonjs/collision/types.html#COLLECTABLE_OBJECT"},"Cq6vqKHxTCVYh3XbWC6as":{"uri":"/melonJS/docs/melonjs/collision/types.html#ENEMY_OBJECT"},"jpDBiJubPC2qOfi5erOkU":{"uri":"/melonJS/docs/melonjs/collision/types.html#NO_OBJECT"},"DglVmzmTP2BdE3VrTOVhq":{"uri":"/melonJS/docs/melonjs/collision/types.html#NO_OBJECT"},"h5WTB_S2oVqM1OJyqbIL9":{"uri":"/melonJS/docs/melonjs/collision/types.html#NPC_OBJECT"},"hDZq_fgd6LpfTSU91ypCs":{"uri":"/melonJS/docs/melonjs/collision/types.html#PLAYER_OBJECT"},"LCC7FfGDOeXrFM84Hwoya":{"uri":"/melonJS/docs/melonjs/collision/types.html#PROJECTILE_OBJECT"},"hHN2x21VPo1q9iBO8kDet":{"uri":"/melonJS/docs/melonjs/collision/types.html#USER"},"fui0GxTfM3FgELIPj1iMl":{"uri":"/melonJS/docs/melonjs/collision/types.html#WORLD_SHAPE"},"HleAcD1i1AXPCU0m0n9Td":{"uri":"/melonJS/docs/melonjs/collision.html#maxChildren"},"xZOFGyYEG1gcbb4PsNez1":{"uri":"/melonJS/docs/melonjs/collision.html#maxDepth"},"fRIzQL0zUwgv425ePBrzB":{"uri":"/melonJS/docs/melonjs/collision.html#response"},"t7IpS9uS4md_5MqQQB5nY":{"uri":"/melonJS/docs/melonjs/collision.html#rayCast"},"63RjSU6IJQYK5CNDHyXEt":{"uri":"/melonJS/docs/melonjs/device.html"},"gmMaKWBx7BpODb6da_-gT":{"uri":"/melonJS/docs/melonjs/device.html#accelerationX"},"cLUHh5iC-KAQ8mQPMfqX2":{"uri":"/melonJS/docs/melonjs/device.html#accelerationY"},"I6bUWc4SC-qTpjMiA1_-F":{"uri":"/melonJS/docs/melonjs/device.html#accelerationZ"},"KXwLSjn-eZ_Lt0_GUwANf":{"uri":"/melonJS/docs/melonjs/device.html#alpha"},"kDTWip8l49rOxw_OC80y6":{"uri":"/melonJS/docs/melonjs/device.html#android"},"WEyDeglyYv6RG11JxSI2y":{"uri":"/melonJS/docs/melonjs/device.html#android2"},"wMmltaoZM8DNbI9WsBokS":{"uri":"/melonJS/docs/melonjs/device.html#autoFocus"},"V6BP2LhUHJ_XJ7-NUrYy5":{"uri":"/melonJS/docs/melonjs/device.html#beta"},"3bLCcbzWmup73b5XGuo6S":{"uri":"/melonJS/docs/melonjs/device.html#BlackBerry"},"aFbGW5VrxP4F5M1VjlVg2":{"uri":"/melonJS/docs/melonjs/device.html#chromeOS"},"DZQZz0RQuy5Dp1h2K_Zm4":{"uri":"/melonJS/docs/melonjs/device.html#devicePixelRatio"},"JHCP3MOQln3BflSSdMc1r":{"uri":"/melonJS/docs/melonjs/device.html#ejecta"},"xMC0_m5SNpjbTd2GgDjQK":{"uri":"/melonJS/docs/melonjs/device.html#gamma"},"ys2NQOmlBrtVhdu7Jviaj":{"uri":"/melonJS/docs/melonjs/device.html#hasAccelerometer"},"zke_tNpHRURSGyKbP5a4W":{"uri":"/melonJS/docs/melonjs/device.html#hasDeviceOrientation"},"WDFnIyR3AyskgVmLtzega":{"uri":"/melonJS/docs/melonjs/device.html#hasFullscreenSupport"},"Z9lsCoIzRuFI6OLAW19oP":{"uri":"/melonJS/docs/melonjs/device.html#hasPointerLockSupport"},"T-svzI0g963_7F5b-Abb0":{"uri":"/melonJS/docs/melonjs/device.html#hasWebAudio"},"Gcah0TZmRRbbCNZ6N7hfV":{"uri":"/melonJS/docs/melonjs/device.html#iOS"},"hPnd9AZ-KYXFTseYLPm7y":{"uri":"/melonJS/docs/melonjs/device.html#isFullscreen"},"XRQ7_ABXuvpMnE6u9yGdF":{"uri":"/melonJS/docs/melonjs/device.html#isMobile"},"aHZ9X1JdtCH2xj3o4UJnc":{"uri":"/melonJS/docs/melonjs/device.html#isWeixin"},"29wwkzm6BKfcL5-ysoVoK":{"uri":"/melonJS/docs/melonjs/device.html#Kindle"},"jOiYp2ZEYws8jN96_vcXX":{"uri":"/melonJS/docs/melonjs/device.html#language"},"ohkceYyfQUhgh6uh7l3ih":{"uri":"/melonJS/docs/melonjs/device.html#linux"},"xtSHiYbybzss0QuEuXIdX":{"uri":"/melonJS/docs/melonjs/device.html#localStorage"},"UvpJhMYl78dB9whj_I4WV":{"uri":"/melonJS/docs/melonjs/device.html#maxTouchPoints"},"E5jOGrtLKTn08ZB0CXyO2":{"uri":"/melonJS/docs/melonjs/device.html#nativeBase64"},"jhN12vEe8tklabkHNwyft":{"uri":"/melonJS/docs/melonjs/device.html#nodeJS"},"FiaQfW7LAkWjK98KgXyD6":{"uri":"/melonJS/docs/melonjs/device.html#OffScreenCanvas"},"JmzlLuhELgAe3zsVpkvB3":{"uri":"/melonJS/docs/melonjs/device.html#pauseOnBlur"},"7c5Z_jp8XXjyhnCOMfR99":{"uri":"/melonJS/docs/melonjs/device.html#resumeOnFocus"},"KMuC1dzdRjuxSGRl0r9cD":{"uri":"/melonJS/docs/melonjs/device.html#ScreenOrientation"},"atJMVtCszaoltPaG5Y51j":{"uri":"/melonJS/docs/melonjs/device.html#sound"},"Zi63U6MqzEO9dIhLNNhmR":{"uri":"/melonJS/docs/melonjs/device.html#stopOnBlur"},"RRqMutKsBkfwIK8VJg9bb":{"uri":"/melonJS/docs/melonjs/device.html#touch"},"CPjUG9wy0tjlMmd6-VCoH":{"uri":"/melonJS/docs/melonjs/device.html#ua"},"HLan6EX9YGx9h7f6DjQxz":{"uri":"/melonJS/docs/melonjs/device.html#wheel"},"GJdwyhYYmfv_P6LojA2Bc":{"uri":"/melonJS/docs/melonjs/device.html#wp"},"9Sz8x4gGzDMzzfkxZqkLI":{"uri":"/melonJS/docs/melonjs/device.html#turnOffPointerLock"},"Ulh7mvfOJf5oK25z3PxPc":{"uri":"/melonJS/docs/melonjs/device.html#turnOnPointerLock"},"EHfcfnVfIEvEs2TM0Aj1M":{"uri":"/melonJS/docs/melonjs/device/enableSwipe.html"},"7icnv_VWLlyhwnr79DdFH":{"uri":"/melonJS/docs/melonjs/device/exitFullscreen.html"},"ln3mEH9DCV0v7O1qa7sWi":{"uri":"/melonJS/docs/melonjs/device/focus.html"},"u9a54DPHi25yOgVgrN-yy":{"uri":"/melonJS/docs/melonjs/device/getElement.html"},"RgrRz6YJWe2B0TVJBjwMz":{"uri":"/melonJS/docs/melonjs/device/getElementBounds.html"},"Ej5F3DlHYv1BGJvIrd49Q":{"uri":"/melonJS/docs/melonjs/device/getMaxShaderPrecision.html"},"usRnTbaI78-Z_Bx3_oAW0":{"uri":"/melonJS/docs/melonjs/device/getParentBounds.html"},"GRrvrtt7LunRlKOY8U064":{"uri":"/melonJS/docs/melonjs/device/getParentElement.html"},"Qbyz1YyIwY8ypKP_Hp0h2":{"uri":"/melonJS/docs/melonjs/device/getScreenOrientation.html"},"EGlkdhG18SQj7wG0iCDS-":{"uri":"/melonJS/docs/melonjs/device/getStorage.html"},"JgzBCNReX8_Ny2HwT26wd":{"uri":"/melonJS/docs/melonjs/device/isLandscape.html"},"kpeDnLRrMIxQfkKSC64kv":{"uri":"/melonJS/docs/melonjs/device/isPortrait.html"},"zITAZry73bg60wWhVQt8A":{"uri":"/melonJS/docs/melonjs/device/isWebGLSupported.html"},"TfgRkp7Vc-mySL18r9SVF":{"uri":"/melonJS/docs/melonjs/device/lockOrientation.html"},"vZCdKCy7oBmwaCUbnAQX8":{"uri":"/melonJS/docs/melonjs/device/onReady.html"},"KiEyU6prM1wgf_ea-nUpl":{"uri":"/melonJS/docs/melonjs/device/requestFullscreen.html"},"b5U7VdAQWkkZuEgAVFPtw":{"uri":"/melonJS/docs/melonjs/device/unlockOrientation.html"},"LBl8bhpKhkwz_xm_wY3oT":{"uri":"/melonJS/docs/melonjs/device/unwatchAccelerometer.html"},"t5o9FueNzDsP5HY0bIrT1":{"uri":"/melonJS/docs/melonjs/device/unwatchDeviceOrientation.html"},"rpWaxpi7mys_OvYK3x1Bd":{"uri":"/melonJS/docs/melonjs/device/vibrate.html"},"LBni3n7v0Hmvn3DR6ppWr":{"uri":"/melonJS/docs/melonjs/device/watchAccelerometer.html"},"H4WuRTf0PXvtZ7pe10SCw":{"uri":"/melonJS/docs/melonjs/device/watchDeviceOrientation.html"},"3vuBJ30Dzju14oG4nXefz":{"uri":"/melonJS/docs/melonjs/event.html"},"bj6xwaESO6wearOOuq5Uv":{"uri":"/melonJS/docs/melonjs/event.html#BOOT"},"CL6-KCsTlTZkTUNsUuNPZ":{"uri":"/melonJS/docs/melonjs/event.html#CANVAS_ONRESIZE"},"Ub5V5Ya1v-hE_8VsrCkxY":{"uri":"/melonJS/docs/melonjs/event.html#DRAGEND"},"J9Puu487V04uEcqG7wyZ3":{"uri":"/melonJS/docs/melonjs/event.html#DRAGSTART"},"0D1F_Q2CiUlMV3SBNc5RQ":{"uri":"/melonJS/docs/melonjs/event.html#GAME_AFTER_DRAW"},"1WYhBkYJCdpXUOlZQL81V":{"uri":"/melonJS/docs/melonjs/event.html#GAME_AFTER_UPDATE"},"LV8pTmbwML7CKtvt25zOe":{"uri":"/melonJS/docs/melonjs/event.html#GAME_BEFORE_DRAW"},"0ckvTWNgp_xpcjwEvFig2":{"uri":"/melonJS/docs/melonjs/event.html#GAME_BEFORE_UPDATE"},"nNldLk4GFPLmdUZvltKss":{"uri":"/melonJS/docs/melonjs/event.html#GAME_INIT"},"9ruYHqKuWe8hNDvTWinQZ":{"uri":"/melonJS/docs/melonjs/event.html#GAME_RESET"},"lHrW7yuQsYcRWju0QPxOj":{"uri":"/melonJS/docs/melonjs/event.html#GAME_UPDATE"},"nDt2sE4LfvgUVVmqYTZ0J":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_CONNECTED"},"gATD4SvlJ2-4ovWYYYIN8":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_DISCONNECTED"},"TH-OUBdWFPTHje0pWbwQa":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_UPDATE"},"webI2UHTcEdwrvgMBtuqP":{"uri":"/melonJS/docs/melonjs/event.html#KEYDOWN"},"pmLDJZ80ZNrXizkhAWITN":{"uri":"/melonJS/docs/melonjs/event.html#KEYUP"},"UbVBlm2hLv4bhsQD6EifR":{"uri":"/melonJS/docs/melonjs/event.html#LEVEL_LOADED"},"RbsFwq7ZK3TsugmguDlkr":{"uri":"/melonJS/docs/melonjs/event.html#LOADER_COMPLETE"},"27McZMloELajQpw8bafxT":{"uri":"/melonJS/docs/melonjs/event.html#LOADER_PROGRESS"},"_JsXnJlJ9FfEPfH8dpw7C":{"uri":"/melonJS/docs/melonjs/event.html#ONCONTEXT_RESTORED"},"1GacH5UZpjRVFbDR1TJMv":{"uri":"/melonJS/docs/melonjs/event.html#POINTERLOCKCHANGE"},"WFMLVAYyuQNplohqxvqU1":{"uri":"/melonJS/docs/melonjs/event.html#POINTERMOVE"},"rvYW0LpNcVMsgniF9dRRz":{"uri":"/melonJS/docs/melonjs/event.html#STATE_CHANGE"},"YgPw8OjzlPmPDSAVymfXp":{"uri":"/melonJS/docs/melonjs/event.html#STATE_PAUSE"},"8FacjtAK3-36TTFGpTmd5":{"uri":"/melonJS/docs/melonjs/event.html#STATE_RESTART"},"JWrXY7ks8HNiAqTdKIdlP":{"uri":"/melonJS/docs/melonjs/event.html#STATE_RESUME"},"xqGcJUfFtSQreUmuhpINH":{"uri":"/melonJS/docs/melonjs/event.html#STATE_STOP"},"0N-Wjp0CNNAWAZ788p2_o":{"uri":"/melonJS/docs/melonjs/event.html#VIDEO_INIT"},"ydKsRRxzcROzFfL4VnBk3":{"uri":"/melonJS/docs/melonjs/event.html#VIEWPORT_ONCHANGE"},"nimjbSUjgqCtRM0WkT6zV":{"uri":"/melonJS/docs/melonjs/event.html#VIEWPORT_ONRESIZE"},"mvUS-7nFrl8eI02clWxCB":{"uri":"/melonJS/docs/melonjs/event.html#WEBGL_ONCONTEXT_LOST"},"HkyhJWmFjOTLWamQviX-d":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONORIENTATION_CHANGE"},"iW9aXf2CutCFtkazvAvFn":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONRESIZE"},"GOE8cM39_wfSNRKRN4vEh":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONSCROLL"},"-ymkLT1WtoEu_Uo_BZQcZ":{"uri":"/melonJS/docs/melonjs/event/emit.html"},"cLqQWgD11MISGgE8NWMET":{"uri":"/melonJS/docs/melonjs/event/off.html"},"IBHx4MdDC2uE_bg6X8rv1":{"uri":"/melonJS/docs/melonjs/event/on.html"},"Gg_rGREZ7juCQZKeBNu3l":{"uri":"/melonJS/docs/melonjs/event/once.html"},"8RnWUvb3HxXBDj-YFORrX":{"uri":"/melonJS/docs/melonjs/game.html"},"KhzCXSJWmEZRaRhJBsaYb":{"uri":"/melonJS/docs/melonjs/game.html#lastUpdate"},"BR1plmLwv1Wfb1yHFUpXB":{"uri":"/melonJS/docs/melonjs/game.html#mergeGroup"},"4RRMjiVwjGywQRbCDCAaJ":{"uri":"/melonJS/docs/melonjs/game.html#sortOn"},"ScaxZcPE9BmalaCPvm00b":{"uri":"/melonJS/docs/melonjs/game.html#viewport"},"A7SQTwxoa9tSp9B8bawG5":{"uri":"/melonJS/docs/melonjs/game.html#world"},"k-fZv5RYHYu0dJKZW5NUB":{"uri":"/melonJS/docs/melonjs/game/getParentContainer.html"},"DrRnnCqe0W8ssxbbRpaLu":{"uri":"/melonJS/docs/melonjs/game/onLevelLoaded.html"},"jeJ0DZey2Qs8ZkLDea6KV":{"uri":"/melonJS/docs/melonjs/game/repaint.html"},"eWJpxFeF93HtX6NYYUOPI":{"uri":"/melonJS/docs/melonjs/game/reset.html"},"rx8lfVbSkTSSkf0Zdbnfb":{"uri":"/melonJS/docs/melonjs/game/updateFrameRate.html"},"HfYfeXxALM_XB4a8iavQK":{"uri":"/melonJS/docs/melonjs/input.html"},"eVoBzp1EPBIftOuKTkXNh":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD.html"},"5gUWSx-XcCrZdzy6rlDz7":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD/AXES.html"},"Q9Zhup816f8zIzCxE_Ms_":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD/BUTTONS.html"},"a1VzZ5H_mN5lEBRaB2NUy":{"uri":"/melonJS/docs/melonjs/input/KEY.html"},"7oisKPpGJy0ODNn2O6yBE":{"uri":"/melonJS/docs/melonjs/input/KEY.html#A"},"wznCfr1g4SG19A9DfzzrC":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ADD"},"-2nhQ3f0D2t4RBkK6UVgx":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ALT"},"3hZb5GvDFl3jLwTUCdG9M":{"uri":"/melonJS/docs/melonjs/input/KEY.html#B"},"MTwGifTQJX6TvX08mMrJY":{"uri":"/melonJS/docs/melonjs/input/KEY.html#BACK_SLASH"},"SVSca6RXGhMUjhFcQOqYU":{"uri":"/melonJS/docs/melonjs/input/KEY.html#C"},"L4P2W2qnr5XVd_f59KX8-":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CAPS_LOCK"},"thyh2dUKhgIa7t5YTQlLz":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CLOSE_BRACKET"},"Hj4D4u1onwNVGrHJuheS7":{"uri":"/melonJS/docs/melonjs/input/KEY.html#COMMA"},"h_GJ2sf_dIQMfKBbIMcEP":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CTRL"},"5hR1h2GVMXTEG8bpz6SiS":{"uri":"/melonJS/docs/melonjs/input/KEY.html#D"},"cyvF8hI1QVWjUMEAUCQTV":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DECIMAL"},"kmsoEY-vqrQRTfGVwEwGA":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DELETE"},"L05u28I0P6kpsOPB3qe8Y":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DIVIDE"},"vsFSiiCvD7y7-Gx1lLz0q":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DOWN"},"k2lax3fuLNKb6l8nDEWhS":{"uri":"/melonJS/docs/melonjs/input/KEY.html#E"},"neUD2F72rShPf_wIxCaSR":{"uri":"/melonJS/docs/melonjs/input/KEY.html#END"},"LTu6-Vs0_psyzfacjr6RH":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ENTER"},"Ts4bCeJBN4SxXUDwG7uEr":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ESC"},"Urvj11BkT4dLefBvbaTiQ":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F"},"rndNaTkqCcZg1OmJw9qZX":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F1"},"cPvjTyakbZiBBqCCurFIF":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F10"},"NskJusPX7eY4cWCZHLv79":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F11"},"mHeowhVhz3axkVGzkpOIk":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F12"},"-fvAIlyKpejG-I39s2GiB":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F2"},"K09nZUIvwMc4t_dvXOwJC":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F3"},"KOkpKNr7Ik5UyFe2Vm3Rf":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F4"},"6SBlrp0oJ5XM2rREx7LKa":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F5"},"ajac-1AfWE5ePlxygQqVS":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F6"},"exyoFVB7b8dUIDQ07uLk0":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F7"},"BbHd67aHK4QnFasGbqcG4":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F8"},"yVokLIAXgTxFjXNmQNlLR":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F9"},"Uc9gKggZkGCz-y3Sgbs1a":{"uri":"/melonJS/docs/melonjs/input/KEY.html#FORWAND_SLASH"},"wdST3Vs_UnBUsRw-KTauE":{"uri":"/melonJS/docs/melonjs/input/KEY.html#G"},"tMQlQq46TlQ5VBHlZJtRr":{"uri":"/melonJS/docs/melonjs/input/KEY.html#GRAVE_ACCENT"},"BbrKKkWxHpW9RYtLysWs5":{"uri":"/melonJS/docs/melonjs/input/KEY.html#H"},"Nux6gcYtrjEMaUuf-s1PF":{"uri":"/melonJS/docs/melonjs/input/KEY.html#HOME"},"1l5vEH0TuMXTnPDrLvBSY":{"uri":"/melonJS/docs/melonjs/input/KEY.html#I"},"mEvOs27Fwk_7jjJwywpBF":{"uri":"/melonJS/docs/melonjs/input/KEY.html#INSERT"},"Gzw3fuAxIByas_obq7Lzh":{"uri":"/melonJS/docs/melonjs/input/KEY.html#J"},"i9f1RSyibR1UE-aAmv04a":{"uri":"/melonJS/docs/melonjs/input/KEY.html#K"},"U-i7dVjmGcICcQ8xK2dZT":{"uri":"/melonJS/docs/melonjs/input/KEY.html#L"},"c9Rx0jZNfiLGIdhZrZPMe":{"uri":"/melonJS/docs/melonjs/input/KEY.html#LEFT"},"1WBtJjYYzOjdNuu3gKc9A":{"uri":"/melonJS/docs/melonjs/input/KEY.html#M"},"1ygay2KFjY-A8QNRTgVn6":{"uri":"/melonJS/docs/melonjs/input/KEY.html#MINUS"},"cV8G-Bsh-vjxGLVe8D8R9":{"uri":"/melonJS/docs/melonjs/input/KEY.html#MULTIPLY"},"TZpVblBGWgSaS2OAfW1PA":{"uri":"/melonJS/docs/melonjs/input/KEY.html#N"},"C9v7iBGM8NBM6UycTFrwI":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM_LOCK"},"ZqgAgQjJqRlCfR2BLL2mJ":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM0"},"Kc01HMu4CJL8NFGL1pRsy":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM1"},"q8YL-SCH5XDH7qNXuxuh0":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM2"},"TSA3n1ob6W0ajrY3cQf8a":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM3"},"xMP1XTdMv51mFYcxtW0tc":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM4"},"1oiI8TOVrOhXdOEeuw622":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM5"},"a9-TpFC4_2B0HiiFbgEj2":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM6"},"mLk5FN58rlgA3cVAutrsG":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM7"},"O_OWrx8d9cpxSEU4AbHL2":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM8"},"JxCQLF-0ZaaK7tK2MIZ0D":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM9"},"FAY8v608Mk8aH9b0CFn00":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD0"},"DQVNPb1US-AVu0QaXhknz":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD1"},"ZO1_xewBT1XoS2jmbND4H":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD2"},"G-dtOsWDmq-3IIvpvQ8KE":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD3"},"RUTECo3aeD512RM1sqL9D":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD4"},"g48V-nZ6YQ2vCqa3MFsZV":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD5"},"5yUb-3EYezTV9C0iQ2WN3":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD6"},"vLfGaUoJIqsOrxVZiVEvN":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD7"},"uK-UvK6E9AQbC6eCx251n":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD8"},"z9ZOApl_0MvaaSesx_hJT":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD9"},"1olxh6VL4mv2DEeRwQgpb":{"uri":"/melonJS/docs/melonjs/input/KEY.html#O"},"hQ493oTTLZCZFR9KNvYfr":{"uri":"/melonJS/docs/melonjs/input/KEY.html#OPEN_BRACKET"},"aqx7Fg6Zpe3ruUUc2WW6C":{"uri":"/melonJS/docs/melonjs/input/KEY.html#P"},"lnYduX6Toen51dZSDmN3E":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAGE_DOWN"},"L7x7Bps9cix3ickneX_3Z":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAGE_UP"},"ClVg52VHh91sMaxg0olF7":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAUSE"},"RpJowE-tdIjzRqmbF_Qvf":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PERIOD"},"TaBqzJLnZrMtoHUCWSouu":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PLUS"},"EOSCymQpmArDk22B1SXA-":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PRINT_SCREEN"},"hcjU8e2Ann2aHVGC1uCxh":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Q"},"Md9S3hKyJc0zWmkFQ8y4p":{"uri":"/melonJS/docs/melonjs/input/KEY.html#R"},"sKWjBc0UWlihSyCGb8P-h":{"uri":"/melonJS/docs/melonjs/input/KEY.html#RIGHT"},"-d9J1efE7FL3IqkMZ8JTN":{"uri":"/melonJS/docs/melonjs/input/KEY.html#S"},"zTGKRoeAjxqo22hAJAC70":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SCROLL_LOCK"},"ZivMrX_dXqlVF8y79FtlY":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SEMICOLON"},"KxOXB9c2w3xD8kYe-SxGV":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SHIFT"},"m3T6ORMbNR4v0rMSf9nq8":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SINGLE_QUOTE"},"TD6JEK065dQRX2l0_QteJ":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SPACE"},"zHDXFamds9j9jOdGpHAjN":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SUBSTRACT"},"WD-AiWFw6pNMH5rBp8MNd":{"uri":"/melonJS/docs/melonjs/input/KEY.html#T"},"CmdoK5TyWl_R_I6Qhz-Ch":{"uri":"/melonJS/docs/melonjs/input/KEY.html#TAB"},"w5xzsOewm5MGx_kcPUYyr":{"uri":"/melonJS/docs/melonjs/input/KEY.html#TILDE"},"RZG8JMLHHBX1XiqzOGGfv":{"uri":"/melonJS/docs/melonjs/input/KEY.html#U"},"JQmPZyMoq17OlHdm3TW9k":{"uri":"/melonJS/docs/melonjs/input/KEY.html#UP"},"_xZ-MfLCEdKTYluCgxiMy":{"uri":"/melonJS/docs/melonjs/input/KEY.html#V"},"qTAeosnrcoc9YuCO0FGG0":{"uri":"/melonJS/docs/melonjs/input/KEY.html#W"},"7NmOSMEnmvbfIZ9BXQAfS":{"uri":"/melonJS/docs/melonjs/input/KEY.html#WINDOW_KEY"},"0wEnXzSrxn53Xp1J4UhKE":{"uri":"/melonJS/docs/melonjs/input/KEY.html#X"},"7icPLUGmmaZovBKXDXA9V":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Y"},"j2eX0lK2ESuZKom1wPnI1":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Z"},"NYlhzj7knC9zC8GTpSBtR":{"uri":"/melonJS/docs/melonjs/input.html#keyBoardEventTarget"},"17b9w8Lqi4ccaf6u1EEnD":{"uri":"/melonJS/docs/melonjs/input.html#locked"},"n5e50yUPoN_b1H8HO5qOE":{"uri":"/melonJS/docs/melonjs/input.html#pointer"},"LyqcjRM48Y7KDKmpvpoya":{"uri":"/melonJS/docs/melonjs/input.html#pointerEventTarget"},"wVSRZLw5fIdIR39B3wRo-":{"uri":"/melonJS/docs/melonjs/input.html#preventDefault"},"Qa0Zypu5FuLmwL-R1M4uA":{"uri":"/melonJS/docs/melonjs/input.html#setGamepadMapping"},"sQv190ue2JSHn4_a8dsQ1":{"uri":"/melonJS/docs/melonjs/input.html#throttlingInterval"},"kcozQloWCztVuNvBAMKpU":{"uri":"/melonJS/docs/melonjs/input/bindGamepad.html"},"2HsO0X_bOGpRL4B3a5riR":{"uri":"/melonJS/docs/melonjs/input/bindKey.html"},"UWcGW9Dw97JfiaGKaC3Tb":{"uri":"/melonJS/docs/melonjs/input/bindPointer.html"},"U97N3N4Xbflv_r6nwPDc1":{"uri":"/melonJS/docs/melonjs/input/exitPointerLock.html"},"5BP7n-OEbTilgm-eG8xBi":{"uri":"/melonJS/docs/melonjs/input/getBindingKey.html"},"Al3sJSHCCEssO7HQoC6xW":{"uri":"/melonJS/docs/melonjs/input/globalToLocal.html"},"KJLun9plbbBmNvgNhvceI":{"uri":"/melonJS/docs/melonjs/input/isKeyPressed.html"},"QsudAGnEvkAtDF_CXrtES":{"uri":"/melonJS/docs/melonjs/input/keyStatus.html"},"7cEoSYNGARa2Wd97xA3Vn":{"uri":"/melonJS/docs/melonjs/input/registerPointerEvent.html"},"B2JvVQqLnqIKmAFAcwn1Z":{"uri":"/melonJS/docs/melonjs/input/releaseAllPointerEvents.html"},"QLKKf2FVeZUjT0yV5R-xa":{"uri":"/melonJS/docs/melonjs/input/releasePointerEvent.html"},"XMeqM7fnrQWHdc7gVfll9":{"uri":"/melonJS/docs/melonjs/input/requestPointerLock.html"},"XcI2FIX-i9bKdbQIOb1NQ":{"uri":"/melonJS/docs/melonjs/input/setGamepadDeadzone.html"},"16is4NcdqqC6__rZv9pJG":{"uri":"/melonJS/docs/melonjs/input/setTouchAction.html"},"n4nYCC_Ri7gtxHmB5lyYL":{"uri":"/melonJS/docs/melonjs/input/triggerKeyEvent.html"},"wj1Onjen4vUJrJx9IBNzE":{"uri":"/melonJS/docs/melonjs/input/unbindGamepad.html"},"T-oXyZwkxXfYvtyimFE4S":{"uri":"/melonJS/docs/melonjs/input/unbindKey.html"},"lNJYy6LvkahtCg4Wr2qcc":{"uri":"/melonJS/docs/melonjs/input/unbindPointer.html"},"RzgseBQzvwaNaIndDK97E":{"uri":"/melonJS/docs/melonjs/input/unlockKey.html"},"AfxTL4ASXOdMxp0fQSDph":{"uri":"/melonJS/docs/melonjs/level.html"},"9EkDVbsEwXF_eZtva0zS3":{"uri":"/melonJS/docs/melonjs/level.html#add"},"uRCOKEOcpoCQD9O90rwau":{"uri":"/melonJS/docs/melonjs/level.html#getCurrentLevel"},"c8ZXOgWWta4O8gKzWSrpB":{"uri":"/melonJS/docs/melonjs/level.html#getCurrentLevelId"},"Y-eYP4DAwtVeAudM-VObZ":{"uri":"/melonJS/docs/melonjs/level.html#levelCount"},"pUEbJyRjvqS3uhEDtCWVR":{"uri":"/melonJS/docs/melonjs/level.html#load"},"L_W4VgkRicIAuTv3WVCv1":{"uri":"/melonJS/docs/melonjs/level.html#next"},"WTaFiFIhS73AZJiWFQAaO":{"uri":"/melonJS/docs/melonjs/level.html#previous"},"kWzOUlLWFPZ5oUXjP024s":{"uri":"/melonJS/docs/melonjs/level.html#reload"},"VRnpqM2iFruhf40fXMJuX":{"uri":"/melonJS/docs/melonjs/loader.html"},"simssmIdtVIqFIiZ5YSZK":{"uri":"/melonJS/docs/melonjs/loader.html#crossOrigin"},"uOi3U6VH2O4Oc0tkWTKrZ":{"uri":"/melonJS/docs/melonjs/loader.html#onload"},"SUUhVrU6x9uprrXX2pAjE":{"uri":"/melonJS/docs/melonjs/loader.html#onProgress"},"4Alpfka1--dPtWB3i7YkP":{"uri":"/melonJS/docs/melonjs/loader.html#withCredentials"},"vQsXXYomVXg7wCD2x6ZeJ":{"uri":"/melonJS/docs/melonjs/loader.html#getBinary"},"FbBmZAOYBNXpeXOd92_pf":{"uri":"/melonJS/docs/melonjs/loader.html#getImage"},"r6nyU_aKscRrg2VW7fQRz":{"uri":"/melonJS/docs/melonjs/loader.html#getJSON"},"yr6q3pGaRaFOE_DWjWZkC":{"uri":"/melonJS/docs/melonjs/loader.html#getTMX"},"Uk3K8tr4pRwy-rfmYUh4q":{"uri":"/melonJS/docs/melonjs/loader.html#load"},"0WH-e4FCPDqeUSKdHwL6b":{"uri":"/melonJS/docs/melonjs/loader.html#preload"},"FURUzm51LFZoYhEi_MtxE":{"uri":"/melonJS/docs/melonjs/loader.html#setBaseURL"},"2LWNQcfRk4gHfwKFGcXqU":{"uri":"/melonJS/docs/melonjs/loader.html#unload"},"yvadkQDCKVjPkcgq0hNbk":{"uri":"/melonJS/docs/melonjs/loader.html#unloadAll"},"1SZJA7ruGInxURlhu6CRa":{"uri":"/melonJS/docs/melonjs/Math.html"},"6eYnFfLhggAXNFH0SNT0l":{"uri":"/melonJS/docs/melonjs/Math.html#DEG_TO_RAD"},"lFUzSB1KXbz9WUOjID_L1":{"uri":"/melonJS/docs/melonjs/Math.html#EPSILON"},"a7l7EUz_y19C5HaGde_17":{"uri":"/melonJS/docs/melonjs/Math.html#ETA"},"e04VSTlYmHBiU59LZcg3S":{"uri":"/melonJS/docs/melonjs/Math.html#RAD_TO_DEG"},"fkvx-qOVmAeWZQwUd1MBQ":{"uri":"/melonJS/docs/melonjs/Math.html#TAU"},"dnKukznOD7huV37dgl8hc":{"uri":"/melonJS/docs/melonjs/Math/clamp.html"},"GTQouQ-evv_XMGXcktYSV":{"uri":"/melonJS/docs/melonjs/Math/degToRad.html"},"Ie4whid3PLeEu68XcKJ1H":{"uri":"/melonJS/docs/melonjs/Math/isPowerOfTwo.html"},"KXuG_sUiY0xp17z-Z3_Xs":{"uri":"/melonJS/docs/melonjs/Math/nextPowerOfTwo.html"},"ACSJKu6ZH3D5Dtf9nVCOg":{"uri":"/melonJS/docs/melonjs/Math/radToDeg.html"},"xUrpxT_nwD-z9sv-VsNsl":{"uri":"/melonJS/docs/melonjs/Math/random.html"},"2auwgoilTG4NaDFvP1Qlm":{"uri":"/melonJS/docs/melonjs/Math/randomFloat.html"},"fthrUDOxGKY1nTPTiypLM":{"uri":"/melonJS/docs/melonjs/Math/round.html"},"bIwvnXztxrxxIH_mKrheH":{"uri":"/melonJS/docs/melonjs/Math/toBeCloseTo.html"},"Pzw0uXBZP5g21a5UU9y8-":{"uri":"/melonJS/docs/melonjs/Math/weightedRandom.html"},"Z3npULrjQ16NNysB8gwkS":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html"},"vw5Kt7ENL4XM-Hzu4n2wx":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#angle"},"EFP-5ye9ATwZNdXFMndhI":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#angleVariation"},"0Vv-HZszQ6hmIrnmC7Wtj":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#blendMode"},"k5FuIPBDrB1yq_koOKzHx":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#duration"},"gwOkHaLbuGd-CHhgJcJGQ":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#floating"},"QyULDZHBKriHJAibyVdTu":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#followTrajectory"},"NdQVKqJcMlZeqfiZHcIPQ":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#framesToSkip"},"01DYku9qonVjahXC1jRUt":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#frequency"},"dMjUBPL_-ItljGaF0OWaz":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#gravity"},"0pELut8CAwOZ6zuBdPs3a":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#height"},"Gjm1Wd0aF3Eb8XNbryQ8l":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#image"},"W4wnUQIgpUlTQ6Jp0edeq":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxEndScale"},"kTLpAnOdeoHo1MHKazEZw":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxLife"},"sYba1K3y9INUNJlC5oJ0l":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxParticles"},"mnyQNXuN1Cy4zGDKkqWLm":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxRotation"},"35SjMFSqa5Je1kvWYrwLx":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxStartScale"},"5fpGW6DhLE6ST_S73MFE5":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minEndScale"},"5ifA67RDz9DgAv-7GLg_n":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minLife"},"w2vE5o8RJu4TBJ9sNESRu":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minRotation"},"tCYL5bMo_xjwaOCadeBMD":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minStartScale"},"bIWUtnE2c1ZfVhEWvltgv":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#onlyInViewport"},"dAwX5L1Tv0Hns9ls0hE7a":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#speed"},"Zbg8s6w1nooU1bSiZap74":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#speedVariation"},"vRXZdhdu2dkj36DHwqcgt":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#textureAdditive"},"Nj3CbF8Gl3b6f6ejExnog":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#textureSize"},"OlUlny8tIjXok7fR9-KLG":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#tint"},"6bz3oj8dAVobW-yD7FV6j":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#totalParticles"},"qLUHO57dThHrJb0lrH2YW":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#width"},"ax15zdBm6W7Nby7ylJnP-":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#wind"},"4LDu2zfZQTs_TnLN1SGoh":{"uri":"/melonJS/docs/melonjs/plugin.html"},"ilRpGSOJ7Ya3xovNNHXJQ":{"uri":"/melonJS/docs/melonjs/plugin/Base.html"},"qWaAm67ErlQHEUR89t11l":{"uri":"/melonJS/docs/melonjs/plugin/Base.html#version"},"U0E5xj4pqjCILTS_wDUUg":{"uri":"/melonJS/docs/melonjs/plugin/Base.html#constructor"},"cGnDeKHfVH7tfKAD2NDLR":{"uri":"/melonJS/docs/melonjs/plugin.html#patch"},"1s4DJSL3yiP5NinIBnxid":{"uri":"/melonJS/docs/melonjs/plugin.html#register"},"CIpgVKnRAlPEDmsZwBowy":{"uri":"/melonJS/docs/melonjs/plugins.html"},"oGZa7mXdAwklBJMCLrQfF":{"uri":"/melonJS/docs/melonjs/pool.html"},"_gAOZsvhuo22k-1ZduZLI":{"uri":"/melonJS/docs/melonjs/save.html"},"4QJPKyRwtjFkYWswI7-2J":{"uri":"/melonJS/docs/melonjs/save.html#add"},"vO9JX_ZNjktXPDas7XEt_":{"uri":"/melonJS/docs/melonjs/save.html#remove"},"hv8EB1hicXSOld1YVzJTd":{"uri":"/melonJS/docs/melonjs/state.html"},"jQnDddzcWD9L9k8-5woib":{"uri":"/melonJS/docs/melonjs/state.html#CREDITS"},"LjTaRRwletwalfvCWXHV8":{"uri":"/melonJS/docs/melonjs/state.html#GAME_END"},"MiUM3hXT4Uyp_O978FxyN":{"uri":"/melonJS/docs/melonjs/state.html#GAMEOVER"},"2Z1X_83Bm4q5z7voKbosZ":{"uri":"/melonJS/docs/melonjs/state.html#LOADING"},"Jyym5qsCekb_x_XhZA-w6":{"uri":"/melonJS/docs/melonjs/state.html#MENU"},"m98FVEu10-bzl03SB0oOq":{"uri":"/melonJS/docs/melonjs/state.html#PLAY"},"rG7IedApXDD6nJwif1wPI":{"uri":"/melonJS/docs/melonjs/state.html#READY"},"eVOYXWvedYWNQFnXULFMn":{"uri":"/melonJS/docs/melonjs/state.html#SCORE"},"tU-zAfnwSKPcEp1vih7FS":{"uri":"/melonJS/docs/melonjs/state.html#SETTINGS"},"665bKnuehUyfYQnuuchMi":{"uri":"/melonJS/docs/melonjs/state.html#SETTINGS"},"nCEQvqz0G799kTLldBeAb":{"uri":"/melonJS/docs/melonjs/state.html#USER"},"KstmUCAyf8MF0giGEwboL":{"uri":"/melonJS/docs/melonjs/state.html#change"},"pNN8VWlkg1c7rNysvJBWA":{"uri":"/melonJS/docs/melonjs/state.html#current"},"XY3uU1nv9YGcGqsvbP2iS":{"uri":"/melonJS/docs/melonjs/state.html#isCurrent"},"zl6laXf2YyTPzLOpkp87I":{"uri":"/melonJS/docs/melonjs/state.html#isPaused"},"sextK4d_M1rjfWNy89uPd":{"uri":"/melonJS/docs/melonjs/state.html#isRunning"},"aoqtJK3Efpcond-8CDVJA":{"uri":"/melonJS/docs/melonjs/state.html#pause"},"IxMb6Y4E0yDDW9UsDc-rk":{"uri":"/melonJS/docs/melonjs/state.html#restart"},"4bGpEpsdMtJbrSdXl3deG":{"uri":"/melonJS/docs/melonjs/state.html#resume"},"qsAe43OY2DsBOlIWoksD8":{"uri":"/melonJS/docs/melonjs/state.html#set"},"mk6v90hx7xdhThMNVuAWS":{"uri":"/melonJS/docs/melonjs/state.html#setTransition"},"MD-8ONXICsN183x8_AvPK":{"uri":"/melonJS/docs/melonjs/state.html#stop"},"hZEmIZesvwYkkWVpJFgtM":{"uri":"/melonJS/docs/melonjs/state.html#transition"},"mBFcp1RrbIJ556dGwiIJH":{"uri":"/melonJS/docs/melonjs/timer.html"},"uWh5gzbX-dNGD4FWB2biS":{"uri":"/melonJS/docs/melonjs/timer.html#fps"},"HnE5snplokGJ5MabkYl0q":{"uri":"/melonJS/docs/melonjs/timer.html#interpolation"},"WQUVwsaxgUBpoLt-ACz5F":{"uri":"/melonJS/docs/melonjs/timer.html#maxfps"},"1sMdCwcrUya4FowdzOwNa":{"uri":"/melonJS/docs/melonjs/timer.html#tick"},"l8W-LfZNAVO9Y1lEVRUGR":{"uri":"/melonJS/docs/melonjs/timer.html#clearInterval"},"uyQKcHP8BXsfW6nWKkg_b":{"uri":"/melonJS/docs/melonjs/timer.html#clearTimeout"},"K9z-IYZ_dHwxCVMkPXecJ":{"uri":"/melonJS/docs/melonjs/timer.html#getDelta"},"VzRqL0S1JUJJGmhxW0OPI":{"uri":"/melonJS/docs/melonjs/timer.html#getTime"},"GCvUTrtrUMWdmA80406Kl":{"uri":"/melonJS/docs/melonjs/timer.html#setInterval"},"q0rNdywVx31TnTKXNk55e":{"uri":"/melonJS/docs/melonjs/timer.html#setTimeout"},"ryC84fPsIi-vX8aVnXhg5":{"uri":"/melonJS/docs/melonjs/utils.html"},"2WM7ZTD9oxvKxLFi9UGEG":{"uri":"/melonJS/docs/melonjs/utils/agent.html"},"EVs2mIRaK1EzUoqij0dXJ":{"uri":"/melonJS/docs/melonjs/utils/agent/prefixed.html"},"25BXaBrm9eiGWNiUcsqX4":{"uri":"/melonJS/docs/melonjs/utils/agent/setPrefixed.html"},"2lPqSk_NfXbFAvVRKl60t":{"uri":"/melonJS/docs/melonjs/utils/array.html"},"TwlMlWfCyu-tjuStIINbu":{"uri":"/melonJS/docs/melonjs/utils/array/random.html"},"_teBsiCXcv964GXASvlHf":{"uri":"/melonJS/docs/melonjs/utils/array/remove.html"},"lm9uI7Yt80PZk76eSZASR":{"uri":"/melonJS/docs/melonjs/utils/array/weightedRandom.html"},"yehrAwz1cFuQLi6TnC_7A":{"uri":"/melonJS/docs/melonjs/utils/file.html"},"WeBUd40ekDthmeaek54iw":{"uri":"/melonJS/docs/melonjs/utils/file/getBasename.html"},"C4FrDdDVg7-2vd10RQUJh":{"uri":"/melonJS/docs/melonjs/utils/file/getExtension.html"},"jh9favoufFvHyANUD0r4J":{"uri":"/melonJS/docs/melonjs/utils/function.html"},"mB4lHctsfH1n-NRxNwIUt":{"uri":"/melonJS/docs/melonjs/utils/function/defer.html"},"MUMLICYH27lwT49e8EAs2":{"uri":"/melonJS/docs/melonjs/utils/function/throttle.html"},"dRUN6QnIxEq3jaZAj5PCn":{"uri":"/melonJS/docs/melonjs/utils/string.html"},"LV6G0jMfTZLd2zpFzR0vU":{"uri":"/melonJS/docs/melonjs/utils/string/capitalize.html"},"hfFftd0ugq2nIaJ5_V4jc":{"uri":"/melonJS/docs/melonjs/utils/string/isBoolean.html"},"bJpP5fwDHy8gD_AvKTyi4":{"uri":"/melonJS/docs/melonjs/utils/string/isNumeric.html"},"4bTu56KjVaBDEaBvBsaUB":{"uri":"/melonJS/docs/melonjs/utils/string/toHex.html"},"XFfHdHidAleG6ExteMVpI":{"uri":"/melonJS/docs/melonjs/utils/string/trimLeft.html"},"3DpYlRsU0H7keegNj1nPe":{"uri":"/melonJS/docs/melonjs/utils/string/trimRight.html"},"A4vh0JBBDw_2NTuUQQlWE":{"uri":"/melonJS/docs/melonjs/utils.html#checkVersion"},"5FyIB1VBs4sgZKAtn2tMs":{"uri":"/melonJS/docs/melonjs/utils.html#getPixels"},"HebIEiVvr5rrjdj75Jwwa":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment"},"Z2FMKkcXbZM7pxhYaNdLk":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#debug"},"TWnmOiy1bydS41FgKe9A4":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#debugToggleKey"},"dUIHh5NZ-wIm9mlTQFwa_":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#hitbox"},"9pRLm8ErBp-HMVuz4FSBM":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#quadtree"},"TknFyXzeaXO-XG7307_k8":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#velocity"},"5dHBzqxbOdDKSISlmxFLv":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#webgl"},"UaLEITNzls5C_zfLuyqh3":{"uri":"/melonJS/docs/melonjs/video.html"},"lvTHTxpYtZ3CXeEiICXyA":{"uri":"/melonJS/docs/melonjs/video.html#AUTO"},"ifLR8oehn2zlnQVyVT7zx":{"uri":"/melonJS/docs/melonjs/video.html#CANVAS"},"1KbkWiCuMVkCVbjKsqMD4":{"uri":"/melonJS/docs/melonjs/video.html#renderer"},"4pjak5BPFLcwvbSJ950CX":{"uri":"/melonJS/docs/melonjs/video.html#scaleRatio"},"N3asNl1VW3ZzOzyIcyzVQ":{"uri":"/melonJS/docs/melonjs/video.html#WEBGL"},"KnvdrRh62ez-_M70G7SyD":{"uri":"/melonJS/docs/melonjs/video/createCanvas.html"},"3aBcLlFurjcisNQ7Kethk":{"uri":"/melonJS/docs/melonjs/video/getParent.html"},"fDDS_9RU0P0kkacnpID3y":{"uri":"/melonJS/docs/melonjs/video/init.html"},"1uYmBh3a_WPH5LadMCWML":{"uri":"/melonJS/docs/melonjs/video/scale.html"},"0SK26crbExJF6t-zoCMQZ":{"uri":"/melonJS/docs/melonjs/BitmapText.html"},"ztmpo5-lF2ScKkpwrYfAH":{"uri":"/melonJS/docs/melonjs/BitmapText.html#alpha"},"VDWK4qxnP5ZtU-C8CbqMt":{"uri":"/melonJS/docs/melonjs/BitmapText.html#alwaysUpdate"},"iUyLkax0j6cBFZSiQDTtQ":{"uri":"/melonJS/docs/melonjs/BitmapText.html#ancestor"},"zLz3Z1-3ZTYiPFkG5WMpZ":{"uri":"/melonJS/docs/melonjs/BitmapText.html#anchorPoint"},"qeG7Oxnzh6Rz3y-OukmP_":{"uri":"/melonJS/docs/melonjs/BitmapText.html#autoTransform"},"9NgwM3D6NtEMCngr0Ekw6":{"uri":"/melonJS/docs/melonjs/BitmapText.html#blendMode"},"pSX3QqfwqMNI25sry2RZb":{"uri":"/melonJS/docs/melonjs/BitmapText.html#body"},"jYivkUNo5ReTFxJ6sQxSf":{"uri":"/melonJS/docs/melonjs/BitmapText.html#bottom"},"IpxNtvvcHcZgk9mgGv0iT":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerX"},"TcgW-AvLWIIH4qTWzLMCk":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerY"},"JYhOAbFyyAwqAwOY-HqpI":{"uri":"/melonJS/docs/melonjs/BitmapText.html#currentTransform"},"VOt30JcbNk6h4gqd2fy0C":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fillStyle"},"q6kA-zf8CdiYk9DHbuuKi":{"uri":"/melonJS/docs/melonjs/BitmapText.html#floating"},"vhFl8n9H4j-vYZka5vaRe":{"uri":"/melonJS/docs/melonjs/BitmapText.html#GUID"},"BKLcqYldmQL5jFrBbk2Wt":{"uri":"/melonJS/docs/melonjs/BitmapText.html#height"},"16BWmyPD4kIxKG44xwC4D":{"uri":"/melonJS/docs/melonjs/BitmapText.html#inViewport"},"mbmKnnLOCgJZoRN_chIyh":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isDirty"},"g813GxjAAAt3gPuUrFZmp":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFlippedX"},"NPgrOTEAd3P-xYNh8aCUM":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFlippedY"},"X4wp1Clvd39WYUHEEjzhg":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFloating"},"Pc4mnz64pH5sUO137HjoU":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isKinematic"},"YKRsiBErxY3FmhN93wddp":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isPersistent"},"k99II8OjkMygzhtMt1DSN":{"uri":"/melonJS/docs/melonjs/BitmapText.html#left"},"Gh2rtzgCIqlAbuQljJzS7":{"uri":"/melonJS/docs/melonjs/BitmapText.html#lineHeight"},"ydl-DsVxf_kd0BA7JjBZH":{"uri":"/melonJS/docs/melonjs/BitmapText.html#mask"},"Nx0FG9Jnp5L4BthtLiJjM":{"uri":"/melonJS/docs/melonjs/BitmapText.html#name"},"njZImZj3frcSUvCw72ZnI":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onVisibilityChange"},"lRAV431Dc64gqLYaLD3R_":{"uri":"/melonJS/docs/melonjs/BitmapText.html#points"},"gP-bdmZ8VLNsn28oPstzb":{"uri":"/melonJS/docs/melonjs/BitmapText.html#pos"},"AQz0GDFxssPqIpcqxr--1":{"uri":"/melonJS/docs/melonjs/BitmapText.html#right"},"htEb2QWHTiqls4lvKaqCR":{"uri":"/melonJS/docs/melonjs/BitmapText.html#textAlign"},"-DgnhibdJ-7K8jta1KezC":{"uri":"/melonJS/docs/melonjs/BitmapText.html#textBaseline"},"-_rtgsV0YWNHqP5FrkFzx":{"uri":"/melonJS/docs/melonjs/BitmapText.html#tint"},"JSsJwmvf2ns9z9UomD36J":{"uri":"/melonJS/docs/melonjs/BitmapText.html#top"},"HTpSgIPBOu-0MZcjRpH_G":{"uri":"/melonJS/docs/melonjs/BitmapText.html#updateWhenPaused"},"8ZlxqDoK06A1IpFFc9xpQ":{"uri":"/melonJS/docs/melonjs/BitmapText.html#width"},"K5hq0eulCq0kVxjf-XZ7P":{"uri":"/melonJS/docs/melonjs/BitmapText.html#wordWrapWidth"},"HUMGk5W85XeEvvtr2VGqh":{"uri":"/melonJS/docs/melonjs/BitmapText.html#_text"},"aUWMTQ05is1iudx-jlAUF":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontData"},"oy2k0irSdql3KbKxPfXW-":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontImage"},"Mh787VeJ-hUg2jNL0dM-x":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontScale"},"faRrgIl3JfoxE0pYz2hWo":{"uri":"/melonJS/docs/melonjs/BitmapText.html#angleTo"},"UbznnSRl3IDD1M2jhF8hq":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerOn"},"fsWEGTnWtNxEwAks08M-6":{"uri":"/melonJS/docs/melonjs/BitmapText.html#clone"},"Zp_Kid2mSpXHfLqMctLxc":{"uri":"/melonJS/docs/melonjs/BitmapText.html#constructor"},"AnhuzvVmx_mdK5PrHKTei":{"uri":"/melonJS/docs/melonjs/BitmapText.html#contains"},"I7-FfRsjLPd-tQQCVh7g6":{"uri":"/melonJS/docs/melonjs/BitmapText.html#copy"},"w3KTPNdfPLRc7zYM-V5uo":{"uri":"/melonJS/docs/melonjs/BitmapText.html#distanceTo"},"UmisjZtadz4GGgrYk-MMd":{"uri":"/melonJS/docs/melonjs/BitmapText.html#draw"},"1be5F8zGGSgLGD6ux27WT":{"uri":"/melonJS/docs/melonjs/BitmapText.html#equals"},"IIFtvX6oTXZCoyo8JXxXU":{"uri":"/melonJS/docs/melonjs/BitmapText.html#flipX"},"iJNJtdSEEo641Zd-L8CXq":{"uri":"/melonJS/docs/melonjs/BitmapText.html#flipY"},"GeX8RSaweyi9cyv2N1XY3":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getAbsolutePosition"},"vaMI-kN8CRSjEyHvllVWc":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getBounds"},"DtwfRUVHYBhzUAQVfQqZR":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getIndices"},"ipYOTLqD7BTyOAzeii-tt":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getOpacity"},"XgL_PPtXQ0ZyiGxUZaQJ0":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isConvex"},"GSI6Pt5-KnJBSyRECWPD8":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFinite"},"tkEUSMQIMFS3kN1fDlu_h":{"uri":"/melonJS/docs/melonjs/BitmapText.html#lookAt"},"4dCcjSyLAn2VtWYGiXWa8":{"uri":"/melonJS/docs/melonjs/BitmapText.html#measureText"},"cZvCXKAl4Q-9ACSq29lMd":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onCollision"},"GNWkRIFvAU51hcMFNhEPh":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onDestroyEvent"},"UnvkTBfVBC3eYtOAC6of-":{"uri":"/melonJS/docs/melonjs/BitmapText.html#overlaps"},"dOpTnyIb00FOl30wNSFbW":{"uri":"/melonJS/docs/melonjs/BitmapText.html#recalc"},"ClFG5-PMLnlaM9CigH2yk":{"uri":"/melonJS/docs/melonjs/BitmapText.html#resize"},"2lSTb0BjeMtGAAeYzhfAb":{"uri":"/melonJS/docs/melonjs/BitmapText.html#rotate"},"XYeF-4e7FC9Svn9UUeD63":{"uri":"/melonJS/docs/melonjs/BitmapText.html#scale"},"Nan3K8T9oongG-LAu1wVr":{"uri":"/melonJS/docs/melonjs/BitmapText.html#scaleV"},"InZSxz2a-YilhDEAuiHTM":{"uri":"/melonJS/docs/melonjs/BitmapText.html#set"},"ySYg2Tvfl-UNmI5FyxD2N":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setOpacity"},"vRtPTqVk1SkptW4tUnDpc":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setShape"},"j8bMaQQHn9dpDMAAx-O0G":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setText"},"9fiTbaEQoe_-H3vY27pO0":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setVertices"},"9Pn8aTTpc57ZwdD0w8b-A":{"uri":"/melonJS/docs/melonjs/BitmapText.html#shift"},"_H2qUEc3kS9iH6q-aOQXc":{"uri":"/melonJS/docs/melonjs/BitmapText.html#to2d"},"p8IVB_x1etqtauFZ5c_rO":{"uri":"/melonJS/docs/melonjs/BitmapText.html#toIso"},"qzgazsNiLxVoLu9YxPfu5":{"uri":"/melonJS/docs/melonjs/BitmapText.html#toPolygon"},"6IdbzWg2miH7ly13WBW7A":{"uri":"/melonJS/docs/melonjs/BitmapText.html#transform"},"vfV7bGSpeJ1sCGicix07c":{"uri":"/melonJS/docs/melonjs/BitmapText.html#translate"},"ERdno6WSDhIXoLDjDsOXY":{"uri":"/melonJS/docs/melonjs/BitmapText.html#union"},"8ks4pMN_wUBtOJBkZMfig":{"uri":"/melonJS/docs/melonjs/BitmapText.html#postDraw"},"VweksrDCdZ45vD8SXu9_0":{"uri":"/melonJS/docs/melonjs/BitmapText.html#preDraw"},"ahu-hGtZPvJEN_FKOep0G":{"uri":"/melonJS/docs/melonjs/BitmapText.html#update"},"oas_BPm_7gszFo5k7werG":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onAnchorUpdate"},"a09M27FbcbcGZeiY2hw-U":{"uri":"/melonJS/docs/melonjs/Body.html"},"AHxNsQuEHgv2smPUgKEwB":{"uri":"/melonJS/docs/melonjs/Body.html#ancestor"},"omCH4FqZxxjZB0TVJdhFP":{"uri":"/melonJS/docs/melonjs/Body.html#bounce"},"6lXJoKcAgeT6_9UPRzlWb":{"uri":"/melonJS/docs/melonjs/Body.html#bounds"},"O_V6MCL26EKB_nigQwwWz":{"uri":"/melonJS/docs/melonjs/Body.html#collisionType"},"n44vsYGjVsv09GWWKA0aU":{"uri":"/melonJS/docs/melonjs/Body.html#falling"},"qwH7mlM_NkDAaRIBoOyv2":{"uri":"/melonJS/docs/melonjs/Body.html#force"},"EILgt8iNzhg0ybcbSMpwR":{"uri":"/melonJS/docs/melonjs/Body.html#friction"},"kpR-XhjhB1CB4vSBUOuBM":{"uri":"/melonJS/docs/melonjs/Body.html#gravityScale"},"TFIXGHBpVjv4JJ87vM99_":{"uri":"/melonJS/docs/melonjs/Body.html#ignoreGravity"},"ly4ANReTAoiUdrY7wV0IB":{"uri":"/melonJS/docs/melonjs/Body.html#isStatic"},"xCPxgD28B0Q2niGJAJsdE":{"uri":"/melonJS/docs/melonjs/Body.html#jumping"},"8hIdMOUb8FkjvYJ2I8cgg":{"uri":"/melonJS/docs/melonjs/Body.html#mass"},"oZnyq1HGuretgV6EQ1uYW":{"uri":"/melonJS/docs/melonjs/Body.html#maxVel"},"j-XV3stWmljyszxeev68w":{"uri":"/melonJS/docs/melonjs/Body.html#vel"},"Qw4x4Yz_aQ_uBloH_qx3p":{"uri":"/melonJS/docs/melonjs/Body.html#addShape"},"NcSarwiDQ5GV75cEYRBUe":{"uri":"/melonJS/docs/melonjs/Body.html#addVertices"},"lqk9nbseHYAOWUoLvYGuO":{"uri":"/melonJS/docs/melonjs/Body.html#constructor"},"juTOMcPX8ghzBpffo6xV_":{"uri":"/melonJS/docs/melonjs/Body.html#contains"},"3mRltpdgq85I-US_SvBVv":{"uri":"/melonJS/docs/melonjs/Body.html#contains"},"6petd2FnOBXW9cdUueYRa":{"uri":"/melonJS/docs/melonjs/Body.html#forEach"},"W_Hm77HbkeAJiiOqHP889":{"uri":"/melonJS/docs/melonjs/Body.html#fromJSON"},"WVbRgvCIIYBt_i-zV5usX":{"uri":"/melonJS/docs/melonjs/Body.html#getBounds"},"5_KkkfARrYbJYotxu-_7B":{"uri":"/melonJS/docs/melonjs/Body.html#getShape"},"YYW5dxl8318QIzeU7CUor":{"uri":"/melonJS/docs/melonjs/Body.html#removeShape"},"ftkEbuQ7Sps0CPGN1Om7h":{"uri":"/melonJS/docs/melonjs/Body.html#removeShapeAt"},"_ccX6cLLVik9Kau0KLjyw":{"uri":"/melonJS/docs/melonjs/Body.html#respondToCollision"},"mWX5xZ8c-yyn5NAc7hDHf":{"uri":"/melonJS/docs/melonjs/Body.html#rotate"},"OsljmnCPRbXYqXZo3GWjA":{"uri":"/melonJS/docs/melonjs/Body.html#setCollisionMask"},"KBmgC6OPmwMEn3px43Fui":{"uri":"/melonJS/docs/melonjs/Body.html#setCollisionType"},"MMdyybsI5WoOQx0o2va2f":{"uri":"/melonJS/docs/melonjs/Body.html#setStatic"},"e_eng8U-UuAzorMNddIs8":{"uri":"/melonJS/docs/melonjs/Body.html#setVertices"},"J7zqdYxLrhC5_VnOK7N1P":{"uri":"/melonJS/docs/melonjs/Body.html#setFriction"},"QjaX1Z0hNnqESKWs6y86x":{"uri":"/melonJS/docs/melonjs/Body.html#setMaxVelocity"},"9WutEVpCqnSDQsoybj6V7":{"uri":"/melonJS/docs/melonjs/Body.html#update"},"s_kHOTEf8oVZ7Ur2d1yvg":{"uri":"/melonJS/docs/melonjs/Bounds.html"},"r9F_25qZ6iB2Lm5KkzDc9":{"uri":"/melonJS/docs/melonjs/Bounds.html#bottom"},"Z5JPpAXEIq9Dc3PqutOng":{"uri":"/melonJS/docs/melonjs/Bounds.html#center"},"GWZlVpK9vFOxKqxrHfpq2":{"uri":"/melonJS/docs/melonjs/Bounds.html#centerX"},"WbGHUHDXiKhheJIAtTbLF":{"uri":"/melonJS/docs/melonjs/Bounds.html#centerY"},"BukfW2Y-2_495Ru01h4dg":{"uri":"/melonJS/docs/melonjs/Bounds.html#left"},"r7rPRUX5JlUrJ-D1a0-DZ":{"uri":"/melonJS/docs/melonjs/Bounds.html#right"},"SX9UiXUa-c9ZaV4fCsSN9":{"uri":"/melonJS/docs/melonjs/Bounds.html#top"},"y_j25hNH8fzlnWZMIJOhr":{"uri":"/melonJS/docs/melonjs/Bounds.html#width"},"LbaupsYb0C_kkfKQtOSwq":{"uri":"/melonJS/docs/melonjs/Bounds.html#width"},"FixX1v3_C9kdXiocrt96H":{"uri":"/melonJS/docs/melonjs/Bounds.html#x"},"1w4s6kVllulUJ6TJXSaPE":{"uri":"/melonJS/docs/melonjs/Bounds.html#y"},"5AO1SOkb29nWYFE9aaw69":{"uri":"/melonJS/docs/melonjs/Bounds.html#add"},"xVepvwejnWXwA0DHAqbyT":{"uri":"/melonJS/docs/melonjs/Bounds.html#addBounds"},"xkrgK6qzyx9-f2pa9epY7":{"uri":"/melonJS/docs/melonjs/Bounds.html#addFrame"},"wenAqnkF-6OwLrybcLFXL":{"uri":"/melonJS/docs/melonjs/Bounds.html#addPoint"},"agnE3jEZJWXpf3pKeqgDG":{"uri":"/melonJS/docs/melonjs/Bounds.html#clear"},"DFrrQcnDw74UZcPr8Ir9c":{"uri":"/melonJS/docs/melonjs/Bounds.html#clone"},"ZMeYRrvROOQhyqx01PIz7":{"uri":"/melonJS/docs/melonjs/Bounds.html#constructor"},"uTIH9vB2LdaU5EkuNbIsU":{"uri":"/melonJS/docs/melonjs/Bounds.html#contains"},"fx0xF8fMRm91uaMeKcING":{"uri":"/melonJS/docs/melonjs/Bounds.html#isFinite"},"_ZKt4lrhdiI9WgAVhkHdT":{"uri":"/melonJS/docs/melonjs/Bounds.html#overlaps"},"TYhNF9yQ7xctFgzW_JGyr":{"uri":"/melonJS/docs/melonjs/Bounds.html#setMinMax"},"q6YywiT_6_P8BjP1hRTJQ":{"uri":"/melonJS/docs/melonjs/Bounds.html#shift"},"prv_8XGUymCBlR_6sQ1i1":{"uri":"/melonJS/docs/melonjs/Bounds.html#toPolygon"},"8t_YUFhm-GRoLGP7itvW3":{"uri":"/melonJS/docs/melonjs/Bounds.html#translate"},"aSstS-ST-cGAxteZ7aEa-":{"uri":"/melonJS/docs/melonjs/Bounds.html#update"},"S8rl5pejk8SVxid1kEKiD":{"uri":"/melonJS/docs/melonjs/Bounds.html#contains"},"ksX5YnhqeU8EP6_GsjyoC":{"uri":"/melonJS/docs/melonjs/Bounds.html#shift"},"1K32INE0RMBwriRhjRAKH":{"uri":"/melonJS/docs/melonjs/Bounds.html#translate"},"yHz3J_8ke8jQ19S0eoEnj":{"uri":"/melonJS/docs/melonjs/Camera2d.html"},"j79e40EtjpCQdlkeqTkoJ":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html"},"miwT0FzpOVT1TusiYvICD":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#BOTH"},"iCk7THt1lOwBBlaF23fzt":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#HORIZONTAL"},"5iIpctciwWfvUgDr5Izjx":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#NONE"},"LDT2IBeja_6t6ocEOC2u-":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#VERTICAL"},"QD4H-HfgXMyCUH-A8ZsF5":{"uri":"/melonJS/docs/melonjs/Camera2d.html#alpha"},"n5HVm1uCD7_BwhJCBiupq":{"uri":"/melonJS/docs/melonjs/Camera2d.html#alwaysUpdate"},"ZV3FTkSpkQyhE8i4BW-rL":{"uri":"/melonJS/docs/melonjs/Camera2d.html#ancestor"},"fqUDVcWg652Hcsw9ms8sS":{"uri":"/melonJS/docs/melonjs/Camera2d.html#anchorPoint"},"L5y3Nx4pd4L6aPNDV3Zkm":{"uri":"/melonJS/docs/melonjs/Camera2d.html#autoTransform"},"_aVbSSGqR-eRAy-sgZ8mN":{"uri":"/melonJS/docs/melonjs/Camera2d.html#blendMode"},"zAHJoo-_P3jynVgUT63yK":{"uri":"/melonJS/docs/melonjs/Camera2d.html#body"},"Emo7Tdz2OIHhW34QgfUBa":{"uri":"/melonJS/docs/melonjs/Camera2d.html#bottom"},"pgRLiAB2VwZiEKjwxn6RZ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#bounds"},"QwzfjD0uMRXqA7h2RLRTc":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerX"},"A6czHnll3205HIe8Yi7ux":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerY"},"_cAleH6w4dXw4E2Tp_ZDG":{"uri":"/melonJS/docs/melonjs/Camera2d.html#currentTransform"},"XDRuWWV63kSSYmZMm3HAL":{"uri":"/melonJS/docs/melonjs/Camera2d.html#damping"},"K3uOCJnafybEt3PeKBF4l":{"uri":"/melonJS/docs/melonjs/Camera2d.html#far"},"FTfkITm1__i0I2LZ_qxsG":{"uri":"/melonJS/docs/melonjs/Camera2d.html#floating"},"HhCYNNT0FV9xHABTnw6rT":{"uri":"/melonJS/docs/melonjs/Camera2d.html#GUID"},"riHSppWxAlZ3_UfEdTfwi":{"uri":"/melonJS/docs/melonjs/Camera2d.html#height"},"AtLVYKFUaeaHxPhgNAoUC":{"uri":"/melonJS/docs/melonjs/Camera2d.html#inViewport"},"9ixGjZsCrDqmaw3-OzFon":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isDirty"},"GAKcaSWR_bt3kNpTrPmQF":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFlippedX"},"PEcFq8ap--wQ5drW0YMAC":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFlippedY"},"Nmo0gOOzFryLUI7c90ZZ4":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFloating"},"oA6YdzBwuIZYSaf4FV0Z3":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isKinematic"},"Pjvfysb25HyYGmM32q2jT":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isPersistent"},"tFSRITNcQEuFDpcuiXPog":{"uri":"/melonJS/docs/melonjs/Camera2d.html#left"},"6kK0qBvojNj4W8Etkcx5a":{"uri":"/melonJS/docs/melonjs/Camera2d.html#mask"},"dxokz0qDqTJysQM6-3nxY":{"uri":"/melonJS/docs/melonjs/Camera2d.html#name"},"grRNARn_Var1Ub0GxNwwZ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#near"},"1x4qOWvkPYVGAmLgvke9g":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onVisibilityChange"},"ZKiiQgYxTwY_qonTohUEa":{"uri":"/melonJS/docs/melonjs/Camera2d.html#points"},"BZ66YypEpdGBf7GYMvUsZ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#pos"},"R_RHGlHB0uyr73w8eXda-":{"uri":"/melonJS/docs/melonjs/Camera2d.html#projectionMatrix"},"9ZrtUcDChUQT-vleYgpyf":{"uri":"/melonJS/docs/melonjs/Camera2d.html#right"},"2QtuGoyMkK7mNeqKL9Mgy":{"uri":"/melonJS/docs/melonjs/Camera2d.html#tint"},"erPyc0HRdqSCYyqATh-wH":{"uri":"/melonJS/docs/melonjs/Camera2d.html#top"},"Z3h55WPLPVxhZaHWDjhkO":{"uri":"/melonJS/docs/melonjs/Camera2d.html#updateWhenPaused"},"FBSW442AE7cVKqfV4kp3v":{"uri":"/melonJS/docs/melonjs/Camera2d.html#width"},"E6pejwqkgdeNA5-cxpl9o":{"uri":"/melonJS/docs/melonjs/Camera2d.html#smoothFollow"},"mwIOa-ti5BSqL3ndmtn1j":{"uri":"/melonJS/docs/melonjs/Camera2d.html#angleTo"},"o0Tj9RBZqbGh1Zg4JSyIt":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerOn"},"uM-j5_StRp_StXxSEulVU":{"uri":"/melonJS/docs/melonjs/Camera2d.html#clone"},"fDk7Z3mVx05kb8SkFVsVp":{"uri":"/melonJS/docs/melonjs/Camera2d.html#constructor"},"WeVB3uRmzE2qjJObUCCgH":{"uri":"/melonJS/docs/melonjs/Camera2d.html#contains"},"hQeJ3LU1sB1E3qAD89YeN":{"uri":"/melonJS/docs/melonjs/Camera2d.html#copy"},"MC7zy6dddDvYeH-6ET4Yv":{"uri":"/melonJS/docs/melonjs/Camera2d.html#distanceTo"},"NLzrylPFpYUQWawfMTDmW":{"uri":"/melonJS/docs/melonjs/Camera2d.html#equals"},"MVzWgGil_1IvlDxBMs69i":{"uri":"/melonJS/docs/melonjs/Camera2d.html#fadeIn"},"Brj_UnD7l68P8ZkUjpsnW":{"uri":"/melonJS/docs/melonjs/Camera2d.html#fadeOut"},"bkIqLXyz0zAB0AXZHqh1h":{"uri":"/melonJS/docs/melonjs/Camera2d.html#flipX"},"6tepK7_ydKWYhyfO5pydU":{"uri":"/melonJS/docs/melonjs/Camera2d.html#flipY"},"stv_6dLN-LJ3UbiUdc0Cc":{"uri":"/melonJS/docs/melonjs/Camera2d.html#focusOn"},"dTmY9KamkaOrkofSAF_CL":{"uri":"/melonJS/docs/melonjs/Camera2d.html#follow"},"3dJ1wCrV8mwDwgGAr-CJA":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getAbsolutePosition"},"aNmKNyOj-7jUGEa0qG1lx":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getBounds"},"P0EQEte3ftUCUGo4pe_6-":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getIndices"},"MNhhtftyR6EBESd3LE7tA":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getOpacity"},"y4I5I44qlo4MHyaj4CKob":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isConvex"},"cCyck4-HqmdK2hFbfyk13":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFinite"},"VZTHAqW-3J-vqi3dIBwfR":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isVisible"},"8sl-D9bl8gx8cuYVXuJ9V":{"uri":"/melonJS/docs/melonjs/Camera2d.html#localToWorld"},"hbUEtjz3L6vbPWf7F_ubf":{"uri":"/melonJS/docs/melonjs/Camera2d.html#lookAt"},"xN6nGo1PPodgHTEeqQW5E":{"uri":"/melonJS/docs/melonjs/Camera2d.html#move"},"LxV6qRQd7PUv0lidmkzJV":{"uri":"/melonJS/docs/melonjs/Camera2d.html#moveTo"},"YyVsliTOMOhzECO8alvtT":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onCollision"},"Wr_qdO6bWJ5nIK35ywSAJ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onDestroyEvent"},"GynFLUHN6btOUpKg4IPqg":{"uri":"/melonJS/docs/melonjs/Camera2d.html#overlaps"},"lh8nCtZdRsoVd-zNQGips":{"uri":"/melonJS/docs/melonjs/Camera2d.html#recalc"},"AGsylwZRtZG5KKGlHs3QN":{"uri":"/melonJS/docs/melonjs/Camera2d.html#reset"},"xBDCi7WAbGoFNJV_otLX9":{"uri":"/melonJS/docs/melonjs/Camera2d.html#resize"},"RDAVLq-XKcqJbbSOm1N-l":{"uri":"/melonJS/docs/melonjs/Camera2d.html#rotate"},"B4bVwgRpmYbyjbn6gaXu_":{"uri":"/melonJS/docs/melonjs/Camera2d.html#scale"},"SobD6gpzf4IX_7OTXlhHV":{"uri":"/melonJS/docs/melonjs/Camera2d.html#scaleV"},"khmS7VHmZGcXMRzLcFTug":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setBounds"},"t17WPHs0Z0oLpsI-IcuoT":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setDeadzone"},"BtMz-BKlBBcM6NCEkY6ug":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setOpacity"},"Men3ubkb8g0XSk7U9EamN":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setShape"},"lcdRpU-7V95hWOWtkp2aR":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setVertices"},"zEDvAFFdFSgMrvHsFe9xU":{"uri":"/melonJS/docs/melonjs/Camera2d.html#shake"},"SV_G54Musahzb_JgfgAX5":{"uri":"/melonJS/docs/melonjs/Camera2d.html#shift"},"ejMSwYxeqv03xstoDymEH":{"uri":"/melonJS/docs/melonjs/Camera2d.html#to2d"},"5VkaOYfwz-oiFYwCZ0aes":{"uri":"/melonJS/docs/melonjs/Camera2d.html#toIso"},"P3GdB_VquYaPs3WssNk07":{"uri":"/melonJS/docs/melonjs/Camera2d.html#toPolygon"},"1j-epdWR3j6GPb7WagpQs":{"uri":"/melonJS/docs/melonjs/Camera2d.html#transform"},"_lTNDu0J-dWSXa5pH5Wk1":{"uri":"/melonJS/docs/melonjs/Camera2d.html#translate"},"b3gocyLL6Qch3geFwiL35":{"uri":"/melonJS/docs/melonjs/Camera2d.html#unfollow"},"nrN95jDv3atH-QpCBlhGW":{"uri":"/melonJS/docs/melonjs/Camera2d.html#union"},"mJRwQKqmwFGbWHlwzIKM4":{"uri":"/melonJS/docs/melonjs/Camera2d.html#worldToLocal"},"1JaAyQZZWeIjcfWxhM0Oq":{"uri":"/melonJS/docs/melonjs/Camera2d.html#draw"},"EY1ZvOwXHd-8FP_WpUIcz":{"uri":"/melonJS/docs/melonjs/Camera2d.html#postDraw"},"oBXKcVwjEXByb9-kPiLe_":{"uri":"/melonJS/docs/melonjs/Camera2d.html#preDraw"},"XyUlYCLseS6bWrqzQtU3q":{"uri":"/melonJS/docs/melonjs/Camera2d.html#update"},"Xtr0Ku7TF_LNRXBORQ5n9":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onAnchorUpdate"},"aSrjoyfFd_Mhk3JIcHptx":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html"},"ZJm8qu4f0fYZoQQdx6A-l":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#isContextValid"},"2T_mB4OcnnbXgT2fW_3MY":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#path2D"},"PVb254oiLlZfnnmjQPQ_k":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#settings"},"6TCRfJOD3uqHOmWgNJFqN":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clear"},"DlYkqAgzj0rDZ1o3WmmC3":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearColor"},"ng1Vs3CT4Tqm6pCN5X1CC":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearMask"},"mRX31KvUTJKUiZ9pL6z-q":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearRect"},"P1lEIVwDeQCJSw34Tcex1":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearTint"},"yuvmxyiuiGYBlcfPYeQTd":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clipRect"},"GAifThY_AZwTJqGs7uFuE":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#constructor"},"C38gv7vltBiQx74K9gTeT":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#createPattern"},"ul4cctYC2t-nLYs0BuDCL":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#drawImage"},"rj1VGTL8a1566Xxgf4kt3":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#drawPattern"},"zJheftFHf2LT1j4tQw3BP":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fill"},"jzoIsO2Qbn02eVixuBDad":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillArc"},"YXwxvW_HXScsFOen0ydPp":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillEllipse"},"Kr70K2_nWCPNsphYvC_Q3":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillLine"},"BSyI83oDC4YudSFIdGanY":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillPolygon"},"OgOONP34ei_07mLKO-3hu":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillRect"},"7trqt1DPJ45-ziHf1iw85":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillRoundRect"},"DjG6ELhEPcEvGSec65H_h":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#flush"},"YxCiGuPaD0Rl4Z9b1Mlyc":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getBlendMode"},"43m9tfCU5xDS2zCQf4Y0L":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getCanvas"},"Rgdmj26V8BGnx4vzb4QP1":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getColor"},"k1SKFb42kd1afrJGL3rBN":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getContext"},"0Oz7XnliLYisoOTZx9kPB":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getContext2d"},"y9iYBFfDBPWfX4yzSLUxk":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getGlobalAlpha"},"o7Qt4TherSTPWJCD46YzR":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getHeight"},"Rqgyr3jl5B9CQIkiSheGg":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getScreenCanvas"},"6o0kBL1z7iA6sTOVr7eYD":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getScreenContext"},"aeaWFJCuUSNgSPgIGYGwg":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getWidth"},"qYIobk7lDNetlr3dxTLb2":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#globalAlpha"},"m8FJNFNenceqtcqO5Noqy":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#overlaps"},"Ewbh3-PCBXoF5Pu3A6nnj":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#reset"},"Au1BKbTsWKl0ttENasW8v":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#resetTransform"},"eSpto99YUHkJ2xzfY7ehG":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#resize"},"ZGn_mT8aY35tvLlob6pk0":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#restore"},"Z22N42vkhNnh3DyxmVEoq":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#rotate"},"CeidKFeodhTrpOYWKjlqz":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#save"},"6hd9ERR7xDWyOqt443WON":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#scale"},"iD_bmQ9OnGsdSleKsVhAa":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setAntiAlias"},"Qc1vdHg7cnbu0zekXao5R":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setBlendMode"},"jZsdlAxo2UwPIQdqbEHdR":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setColor"},"F1FF8gQAqjuEv7V3KqMiP":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setGlobalAlpha"},"0Xwvkgb7Xcp8vNLN1KUfo":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setLineWidth"},"5ZMo2zYXRzHxS6vuSG3Hu":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setMask"},"MzWUTmcNZ2nlUXdUh0iaO":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setProjection"},"QM5VPU8k5B3e1YoiRyK1c":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setTint"},"_NO6Ba0f5-LwtpWyYZdQR":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setTransform"},"f9Yv7cInCHqpjw0q_swlP":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#stroke"},"D2GTx6vSYYguwuIOn6TnB":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeArc"},"Do3JZOIIzo3c07ZaBZxXC":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeEllipse"},"jXgQvgimgxXImmcoz_8B3":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeLine"},"c0ep7Cn-gIfmZCPz-PuHR":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokePolygon"},"c647hNgmlubvR4cxK68W6":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeRect"},"sb-fCWrmlmQsMQxvy-4e0":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeRoundRect"},"1dXT_JG5RoFDPEXAYmr-E":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#tint"},"oMa0neoKmXYGteCF1BaMI":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#transform"},"jfXiOgOeqSWAuUQZCJhGD":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#translate"},"ar1QxRS_7Nl0C1iPUw1zu":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html"},"IAfwU27x0-Bnp5KQ9mKfY":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#canvas"},"C-XcSPnPkg2ipBQqcwfRT":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#context"},"_8d_skefoxvGDun3bTFz8":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#height"},"CZkP18T9HA9qhwcklqco2":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#width"},"Jq9egbLIFKZdVO1Q7pUMO":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#clear"},"mvD7MdZvJHAJGCXyLq5qe":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#constructor"},"PO4uLCGdY2C3p1Gku2gWE":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#resize"},"UpA7O0-HV60BLN621FA-a":{"uri":"/melonJS/docs/melonjs/Collectable.html"},"9yEI49UdRHNwpCz5W7JwH":{"uri":"/melonJS/docs/melonjs/Collectable.html#alpha"},"xDAu2YvaSm0JTdeRuICmD":{"uri":"/melonJS/docs/melonjs/Collectable.html#alwaysUpdate"},"HPgroZuE43hY7Z9UFYUtI":{"uri":"/melonJS/docs/melonjs/Collectable.html#ancestor"},"Ma05IyW29t8fM1acbuJAS":{"uri":"/melonJS/docs/melonjs/Collectable.html#anchorPoint"},"1zG-kGuprRArCCETMot39":{"uri":"/melonJS/docs/melonjs/Collectable.html#animationpause"},"EnCNMsW_7wefYBNQdS_4X":{"uri":"/melonJS/docs/melonjs/Collectable.html#animationspeed"},"2jsHCN3MBTjcjU30awnCq":{"uri":"/melonJS/docs/melonjs/Collectable.html#autoTransform"},"-OhMioO0opQnCSn1op_CR":{"uri":"/melonJS/docs/melonjs/Collectable.html#blendMode"},"yoBdSV9Jvj0hFWawOQTFi":{"uri":"/melonJS/docs/melonjs/Collectable.html#body"},"TTjoT94AcwOmkXBuGOY4W":{"uri":"/melonJS/docs/melonjs/Collectable.html#bottom"},"B-icRy8tg02CtqZlG0Ryh":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerX"},"Gcye3nixDXd17v2-noyG1":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerY"},"NgBQeEOdV7Y5GXEJ1GSMw":{"uri":"/melonJS/docs/melonjs/Collectable.html#currentTransform"},"TlZC5bgD3rZJX-M8c6Gvp":{"uri":"/melonJS/docs/melonjs/Collectable.html#floating"},"4Skh49E0sjKQsNGncuZ86":{"uri":"/melonJS/docs/melonjs/Collectable.html#GUID"},"53fkWBczJcuBJ9PKZCJiR":{"uri":"/melonJS/docs/melonjs/Collectable.html#height"},"Wv6YQkm-FDgNUWIBl6crS":{"uri":"/melonJS/docs/melonjs/Collectable.html#inViewport"},"aUCuvnvaXRdhxRd9A2fxg":{"uri":"/melonJS/docs/melonjs/Collectable.html#isDirty"},"hTTIC8SHQAkCAEWCL1p7k":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlippedX"},"AIkIxLt-N5n8InTn2YERC":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlippedY"},"hlAC8DcEPCI3Ef6kpUd_1":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFloating"},"idBbA-O--TcZxEbMlYp2e":{"uri":"/melonJS/docs/melonjs/Collectable.html#isKinematic"},"wTeLM49-rlgmP1F5X-dpp":{"uri":"/melonJS/docs/melonjs/Collectable.html#isPersistent"},"sbsyJsEftRtWIWTg4Yh0b":{"uri":"/melonJS/docs/melonjs/Collectable.html#left"},"tQtHqfxLIVGp5LMUFmcfo":{"uri":"/melonJS/docs/melonjs/Collectable.html#mask"},"DQNWejATtwbH2FQotn5_f":{"uri":"/melonJS/docs/melonjs/Collectable.html#name"},"d2OUdiCAh4WLNKd3vZJ3G":{"uri":"/melonJS/docs/melonjs/Collectable.html#offset"},"6MCBg2Z_ZthQHI6CsNYB7":{"uri":"/melonJS/docs/melonjs/Collectable.html#onVisibilityChange"},"1kM6GTX0BqwiJ_NS-2aqN":{"uri":"/melonJS/docs/melonjs/Collectable.html#points"},"x468jXYMaprU0gafieqtI":{"uri":"/melonJS/docs/melonjs/Collectable.html#pos"},"lyZrr7fsyuqbrQzSPDekY":{"uri":"/melonJS/docs/melonjs/Collectable.html#right"},"HmvulwwvholK6Y-Z58CUW":{"uri":"/melonJS/docs/melonjs/Collectable.html#source"},"fQIVvp4AL9ogBnvR_Yzv9":{"uri":"/melonJS/docs/melonjs/Collectable.html#tint"},"ndJjJX1KmdoUlisx9EPY-":{"uri":"/melonJS/docs/melonjs/Collectable.html#top"},"ZqTDYIVpO1XpP4V7j6mgT":{"uri":"/melonJS/docs/melonjs/Collectable.html#updateWhenPaused"},"Ey7NLIvLozy8NpA08Di3q":{"uri":"/melonJS/docs/melonjs/Collectable.html#width"},"VwTum1ZrQmGQTPT-PbawR":{"uri":"/melonJS/docs/melonjs/Collectable.html#addAnimation"},"vyWaTdHgvQNYpNjnjHR2B":{"uri":"/melonJS/docs/melonjs/Collectable.html#angleTo"},"-kXCtF-izi8iQmiwnbRRH":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerOn"},"OhYDTn63rRzyXpINC6Sc5":{"uri":"/melonJS/docs/melonjs/Collectable.html#clone"},"9fNzwpIXTUBLOKC-_Uu9T":{"uri":"/melonJS/docs/melonjs/Collectable.html#constructor"},"HTDzHVgDZuBcJ8ibh5jiN":{"uri":"/melonJS/docs/melonjs/Collectable.html#contains"},"-6C1__DrM1TI48j4idQ7v":{"uri":"/melonJS/docs/melonjs/Collectable.html#copy"},"ZamXUMEhdef-zTREx_KLC":{"uri":"/melonJS/docs/melonjs/Collectable.html#distanceTo"},"SqMShnEUvyiAliVBiMEjA":{"uri":"/melonJS/docs/melonjs/Collectable.html#equals"},"rvhMHbXNZcbce2tmRuzzc":{"uri":"/melonJS/docs/melonjs/Collectable.html#flicker"},"i0mctCVlom2snJbaKWWkV":{"uri":"/melonJS/docs/melonjs/Collectable.html#flipX"},"YTYhCJSQpn58PF3S8HKqZ":{"uri":"/melonJS/docs/melonjs/Collectable.html#flipY"},"7pmnEyYhM8AaBjLf3-fKr":{"uri":"/melonJS/docs/melonjs/Collectable.html#getAbsolutePosition"},"cFLS8aEcak3UR9V_BmNCI":{"uri":"/melonJS/docs/melonjs/Collectable.html#getBounds"},"epgk46s8VmqiRqDEnsBMl":{"uri":"/melonJS/docs/melonjs/Collectable.html#getCurrentAnimationFrame"},"vk2caeBRe7AsHFudlxMHr":{"uri":"/melonJS/docs/melonjs/Collectable.html#getIndices"},"X4cMGJ0f-0vMel4B-Dgj0":{"uri":"/melonJS/docs/melonjs/Collectable.html#getOpacity"},"ckIJ9QrPlxYshtLnS4sFf":{"uri":"/melonJS/docs/melonjs/Collectable.html#isConvex"},"OSAGn1gJ7K7Ixms4LnhgN":{"uri":"/melonJS/docs/melonjs/Collectable.html#isCurrentAnimation"},"5bphhe763tng9Lqlq6w4j":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFinite"},"ij1VuOTMQf02sKkGmvENC":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlickering"},"S1kdag5mX-S7csKtiQHKB":{"uri":"/melonJS/docs/melonjs/Collectable.html#lookAt"},"b5Xqo_IRKCoNqeq2HXSqW":{"uri":"/melonJS/docs/melonjs/Collectable.html#onCollision"},"PnyPhDYvOd8o_zswqvUyZ":{"uri":"/melonJS/docs/melonjs/Collectable.html#onDestroyEvent"},"TmOcF-wB9cdCj2hlGN3jl":{"uri":"/melonJS/docs/melonjs/Collectable.html#overlaps"},"CQatusxHLS_rafuWWfP5L":{"uri":"/melonJS/docs/melonjs/Collectable.html#recalc"},"xUJsRrgcOwPPOLJijeAs9":{"uri":"/melonJS/docs/melonjs/Collectable.html#resize"},"FCx_Cp-kRm3j4TZ0xBm54":{"uri":"/melonJS/docs/melonjs/Collectable.html#reverseAnimation"},"X1p0dE2dlJ8aXKDJRknHf":{"uri":"/melonJS/docs/melonjs/Collectable.html#rotate"},"98nch1WUPD6oGTVw_7LA0":{"uri":"/melonJS/docs/melonjs/Collectable.html#scale"},"5ODfsfIIuWPUwX3bsAZVc":{"uri":"/melonJS/docs/melonjs/Collectable.html#scaleV"},"J_yAkAqAIbYOG-o9eO9eM":{"uri":"/melonJS/docs/melonjs/Collectable.html#setAnimationFrame"},"KroH7YqP_BHpRxUnU3Gxd":{"uri":"/melonJS/docs/melonjs/Collectable.html#setCurrentAnimation"},"nHj4iCg6FtJ53ozJK5R_Z":{"uri":"/melonJS/docs/melonjs/Collectable.html#setOpacity"},"PJCwHZzmK7eNk93gsclFo":{"uri":"/melonJS/docs/melonjs/Collectable.html#setRegion"},"WF7XpjahX89VdkBI5VUpw":{"uri":"/melonJS/docs/melonjs/Collectable.html#setShape"},"u08YQCRtcfP0A73yExFQJ":{"uri":"/melonJS/docs/melonjs/Collectable.html#setVertices"},"TNI8rsNzULqYNsAuYavpG":{"uri":"/melonJS/docs/melonjs/Collectable.html#shift"},"YXtoLMzRFDBFoEcgK8WtS":{"uri":"/melonJS/docs/melonjs/Collectable.html#to2d"},"TlYs0tKyHOIjqGqNQZfEY":{"uri":"/melonJS/docs/melonjs/Collectable.html#toIso"},"U5LcaEHU2kysUogY0SIIJ":{"uri":"/melonJS/docs/melonjs/Collectable.html#toPolygon"},"2jpi5sHNVscUTK33KuFx0":{"uri":"/melonJS/docs/melonjs/Collectable.html#transform"},"k2T9bD-h62jBK7zqjKe9Q":{"uri":"/melonJS/docs/melonjs/Collectable.html#translate"},"yobzuB6x1VICzC9Lj9reo":{"uri":"/melonJS/docs/melonjs/Collectable.html#union"},"tcS3llhHH08w1JI9gsJ0K":{"uri":"/melonJS/docs/melonjs/Collectable.html#draw"},"dJgP1Wzmcx9LLS-mF3pSv":{"uri":"/melonJS/docs/melonjs/Collectable.html#postDraw"},"vcG5ZL9QYbuCZh5v1WlS8":{"uri":"/melonJS/docs/melonjs/Collectable.html#preDraw"},"dWB2rKysOIUaA8nXZu8CH":{"uri":"/melonJS/docs/melonjs/Collectable.html#update"},"k9WksLRZFUwkPZQ7tqKon":{"uri":"/melonJS/docs/melonjs/Collectable.html#onAnchorUpdate"},"PDw8Iel_9bsXkJI4sTBQi":{"uri":"/melonJS/docs/melonjs/Color.html"},"CTB1J5nvXWrypqY2Pg3RD":{"uri":"/melonJS/docs/melonjs/Color.html#alpha"},"a6xpBKF0SkFbz-YLd5yUg":{"uri":"/melonJS/docs/melonjs/Color.html#b"},"lWwqbKApghpwzVerj4JTd":{"uri":"/melonJS/docs/melonjs/Color.html#g"},"AVVBWDBU4yRw8rm6IVpP4":{"uri":"/melonJS/docs/melonjs/Color.html#r"},"T_DT2iroJsT_bzUT_tdFi":{"uri":"/melonJS/docs/melonjs/Color.html#add"},"I_9_0fFiI3sQVJbVO-o75":{"uri":"/melonJS/docs/melonjs/Color.html#clone"},"VeS21VdtwOHG4TTEGaQaX":{"uri":"/melonJS/docs/melonjs/Color.html#constructor"},"4RV_09n0NgjLdrSUQnTrf":{"uri":"/melonJS/docs/melonjs/Color.html#copy"},"qZ9-xLcbfWDQhxeXwkvb6":{"uri":"/melonJS/docs/melonjs/Color.html#darken"},"GlNO0q5KG3fDLz9pbVX90":{"uri":"/melonJS/docs/melonjs/Color.html#equals"},"gGMozKm9RnwhDop8yP_64":{"uri":"/melonJS/docs/melonjs/Color.html#lerp"},"ATTG1bmdBCIylaXVjacoR":{"uri":"/melonJS/docs/melonjs/Color.html#lighten"},"q_IsF4H4JNSBEtr8lJqls":{"uri":"/melonJS/docs/melonjs/Color.html#parseCSS"},"usWO5VNT4bHO4Uk2GbUqC":{"uri":"/melonJS/docs/melonjs/Color.html#parseHex"},"TT8-tcs5qNW8weIdSmlC2":{"uri":"/melonJS/docs/melonjs/Color.html#parseRGB"},"eaE0GM5Mj233FiaMrXL_L":{"uri":"/melonJS/docs/melonjs/Color.html#random"},"HiVUBRTwR_aKVoTLC3jDO":{"uri":"/melonJS/docs/melonjs/Color.html#setColor"},"6jYEmMHc3v-xi153ekJ3T":{"uri":"/melonJS/docs/melonjs/Color.html#toArray"},"NZB5Ej5fO-G41K1cxw_kR":{"uri":"/melonJS/docs/melonjs/Color.html#toHex"},"gYsNOmgVPc7yG0G6hwLaD":{"uri":"/melonJS/docs/melonjs/Color.html#toHex8"},"42pdD56vzCnYxVwO8Pb1y":{"uri":"/melonJS/docs/melonjs/Color.html#toRGB"},"pRucdDp3THrmuvT7IjLDQ":{"uri":"/melonJS/docs/melonjs/Color.html#toRGBA"},"IMyS7A6yTq0HcYF50MzYC":{"uri":"/melonJS/docs/melonjs/Color.html#toUint32"},"VWOg9GX8JV_ou8cdV5WkH":{"uri":"/melonJS/docs/melonjs/ColorLayer.html"},"KiOmh5wVn7IRJ1877Igym":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#alpha"},"pvov_f7LVWJbLdSS6ef_v":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#alwaysUpdate"},"L_EpBtDPRDIyFSrNdBQLX":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#ancestor"},"GiOD2PBjIHj75vEYMmTza":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#anchorPoint"},"mRnoKpJHNUNxdSgNSs-xz":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#autoTransform"},"gbJ032EbWO0t1Qfi4AB4V":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#blendMode"},"D559TRq6mgxaDoG-Hy8h0":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#body"},"i5EXoQ_pQOgdP9tCGd-Bt":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#bottom"},"K__91zz7vSMwitcZE0j-1":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerX"},"qyHxAeH5AwNwHVtb_jpZs":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerY"},"ZNNqGhr8LA5MN_2RtKdLM":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#color"},"gJQEiEAK5i1hDF0uqbWOs":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#currentTransform"},"3OAFqAhbBTdCikPH4EohB":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#floating"},"riJopXk6Cko4jGeuAZzLt":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#GUID"},"NWJFbyTx2JsNzWyCk8oRj":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#height"},"cAi6MKjV_toBC7CddyghG":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#inViewport"},"3URWu6iMVvuoXJsmpOoEp":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isDirty"},"uSTHpRLl3upnMdLN1FsQX":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFlippedX"},"wzuh75UmRY7Qs9o4ooeSe":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFlippedY"},"hETSEFopnqpUcKGtlUDeJ":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFloating"},"I7-prOOzSqzQgOHOuOiq0":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isKinematic"},"Cccq35YtYosWmo-RmQ68i":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isPersistent"},"qsxD9Tf4tKCuO7h5gOowM":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#left"},"xInKZ9-_ErrMKTYUwZ7pz":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#mask"},"tAjXlvher9p0ijLirxIkR":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#name"},"DTF6ixMLpE-QlZtQvunuU":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onVisibilityChange"},"3oKpQWoDjKNTgz03Ffu4j":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#points"},"3g20hzfAU3SNbcfdL0Ggo":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#pos"},"pnq0o7vD7lIBu5xZ1ypSH":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#right"},"71puKTgiBXfEjwL64LvXw":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#tint"},"kyIOQ20uSVeXYgpTHGz2L":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#top"},"RamcJ9uvRNKOfe2Rjp7uh":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#updateWhenPaused"},"cw_mm1biJUlGGkmAlKovT":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#width"},"l2sIUBgPqJNDl__hbSzMM":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#angleTo"},"KXJDfvYIjCniZ61ZClzQW":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerOn"},"UArBDe7H_M2PN-jldHW0r":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#clone"},"XSZCyMOymzhj2cJP_X0iX":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#constructor"},"p6O4aGt-ZtnHD2ZzhaIbg":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#contains"},"Kg8BMx7W2loGhmK_i_j_o":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#copy"},"oeeomCQFckCLUzDYcZSZL":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#distanceTo"},"jnR5JXv-s21dyr88DqOsY":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#equals"},"3p_FAum0RqAKI2hu7r7WI":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#flipX"},"FlpASsH5nHu17BjweIFDH":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#flipY"},"SgehuKIu7CRtRrPrgMCfJ":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getAbsolutePosition"},"jwsiGp_Uh3NDUY9JxB35q":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getBounds"},"qRjtgCMJOX2VYWVwPOm8e":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getIndices"},"Q04ko2MLf5-MoY9iMoDDK":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getOpacity"},"YCHbY8rqSmLqbuqZC_KY-":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isConvex"},"1pDfX_k7Jpn3wx6JSTF05":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFinite"},"R9RoDBhrmoNczj1QHTJVG":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#lookAt"},"AUuQ3ZMePX2yibvsgMryC":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onCollision"},"Ie3vDyUw1r9coyYN2m4H1":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onDestroyEvent"},"0XgapZVpNxJhCHmdsNkkE":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#overlaps"},"tmyNHkarGBiTTnWichNEh":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#recalc"},"PJXW5dEefmEkFTs9XZIu2":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#resize"},"IWdnnPqQvGN52N30LyUJa":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#rotate"},"UDTLzlbCvUIyIkvUjsBR-":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#scale"},"5xpvpdWFO1dlVlgoxTZ-O":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#scaleV"},"BU8o5gggotwLcmJpH6APM":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setOpacity"},"YJweYwv0Nwb_wSmxJl4yG":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setShape"},"FYuH-dfA7w4Tl74TLszrf":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setVertices"},"SZp7ajZZNZzCZ8fymCcYN":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#shift"},"zKxl0N7e3lhov24pg-fgP":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#to2d"},"VaPYAKSv9vRaZhWKpQott":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#toIso"},"cXQoITQGzpEo7MbgJNggt":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#toPolygon"},"0_bfWmX8qtCrNPmGJb4e-":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#transform"},"dW4S04a_QAYpcB5El6jxq":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#translate"},"OVcByp5mJh-hZj5xx19GR":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#union"},"U6J_wwAtUyTLV6wXwFB6e":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#draw"},"41od4ke3Y_LBNQfbUW6Dm":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#postDraw"},"T6vXk49EHyzwuxfX0S4FL":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#preDraw"},"kaDasMzEX2ytngmYZo7ko":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#update"},"LQtbrZQSUwAnVvPJt8iPL":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onAnchorUpdate"},"1fEzy0bijDDV9AAhX38zj":{"uri":"/melonJS/docs/melonjs/Container.html"},"8MDuhxBF7jZFM19adiyRv":{"uri":"/melonJS/docs/melonjs/Container.html#alpha"},"Hj9kgvIDeXFdHqlg6Hpvl":{"uri":"/melonJS/docs/melonjs/Container.html#alwaysUpdate"},"Ax1u1mYWGKN9QALW5__v6":{"uri":"/melonJS/docs/melonjs/Container.html#ancestor"},"aB-plZSYfJFbtYXTBppeg":{"uri":"/melonJS/docs/melonjs/Container.html#anchorPoint"},"de7kBRsjRbtzn1ZRvUsxy":{"uri":"/melonJS/docs/melonjs/Container.html#autoDepth"},"BYMspAOOA6McLRXJ6C97g":{"uri":"/melonJS/docs/melonjs/Container.html#autoSort"},"ys4P34P4u8dhXN9qIVjT_":{"uri":"/melonJS/docs/melonjs/Container.html#autoTransform"},"nuDd7OK_OsFLVgGhIgcCd":{"uri":"/melonJS/docs/melonjs/Container.html#backgroundColor"},"fzzoz90pQNQ49U4yuPy-p":{"uri":"/melonJS/docs/melonjs/Container.html#blendMode"},"VdaJ-WP2cEKIJ6U-GiWBH":{"uri":"/melonJS/docs/melonjs/Container.html#body"},"nyO40V4SYwY11t97BxT2j":{"uri":"/melonJS/docs/melonjs/Container.html#bottom"},"iEC_wx9pqWb8DjgSA-OEP":{"uri":"/melonJS/docs/melonjs/Container.html#centerX"},"DIq_Esc4s_GWVpgigj7oU":{"uri":"/melonJS/docs/melonjs/Container.html#centerY"},"6iY8PsIoa7BdxhRpRThVp":{"uri":"/melonJS/docs/melonjs/Container.html#clipping"},"rXWBKnn-0x6St53B04NU0":{"uri":"/melonJS/docs/melonjs/Container.html#currentTransform"},"-A5qt_2-d9J4sl7IOW-xr":{"uri":"/melonJS/docs/melonjs/Container.html#enableChildBoundsUpdate"},"6_J5UCmuPXUQxVN2bIZ_A":{"uri":"/melonJS/docs/melonjs/Container.html#floating"},"dslEcW3lXGaIB8GaKSnuL":{"uri":"/melonJS/docs/melonjs/Container.html#GUID"},"uEL5mZTlyPYpPQs6Vn9qT":{"uri":"/melonJS/docs/melonjs/Container.html#height"},"wAk9O2H-vjxD-ThuXm1xk":{"uri":"/melonJS/docs/melonjs/Container.html#inViewport"},"vqPtR87qFsWhl085mRC2l":{"uri":"/melonJS/docs/melonjs/Container.html#isDirty"},"Tq9XPLRH3VeDDfr-Sp8vs":{"uri":"/melonJS/docs/melonjs/Container.html#isFlippedX"},"ixHVxwzruvTuTN-bi2WtF":{"uri":"/melonJS/docs/melonjs/Container.html#isFlippedY"},"KP8q0kYPzx_uCPuAWPbBt":{"uri":"/melonJS/docs/melonjs/Container.html#isFloating"},"9OhyYraHurvcQ5Z35gZ7j":{"uri":"/melonJS/docs/melonjs/Container.html#isKinematic"},"Pko42jqdCvyg_MTdUleI9":{"uri":"/melonJS/docs/melonjs/Container.html#isPersistent"},"c1WpytaDFLfXz53xU3w_n":{"uri":"/melonJS/docs/melonjs/Container.html#left"},"GsW5oXBoieGfmB9lfLOvu":{"uri":"/melonJS/docs/melonjs/Container.html#mask"},"jUOk2ov5zKfHiKEGUxepd":{"uri":"/melonJS/docs/melonjs/Container.html#name"},"BjnyPZJ3n3F2Kvbx6alsI":{"uri":"/melonJS/docs/melonjs/Container.html#onVisibilityChange"},"RIqx_0fynypdRZOnVy4EA":{"uri":"/melonJS/docs/melonjs/Container.html#points"},"BhFHJ1oYENxzvUdkHmzOO":{"uri":"/melonJS/docs/melonjs/Container.html#pos"},"Ak6yCx4AcwuzZxe4kDzEW":{"uri":"/melonJS/docs/melonjs/Container.html#right"},"0NAeydkzbrRQZRpCG9unP":{"uri":"/melonJS/docs/melonjs/Container.html#root"},"6kvoFkqI_in6Pv1evWiTQ":{"uri":"/melonJS/docs/melonjs/Container.html#sortOn"},"2VcXn0JN152wq-N9Ly3r6":{"uri":"/melonJS/docs/melonjs/Container.html#tint"},"Tbdpa2HnXC_Gri2Doi_xC":{"uri":"/melonJS/docs/melonjs/Container.html#top"},"smyVTlbTgbn-idTLJ4WWJ":{"uri":"/melonJS/docs/melonjs/Container.html#updateWhenPaused"},"SbM1mWkNXyuNdc2x83Krd":{"uri":"/melonJS/docs/melonjs/Container.html#width"},"PyUHeKDF3-Es9Ltv28QgC":{"uri":"/melonJS/docs/melonjs/Container.html#addChild"},"PYZzPzInDi5rsMAPLPtWo":{"uri":"/melonJS/docs/melonjs/Container.html#addChildAt"},"R-dq-lW9AbdC2MH1snzKN":{"uri":"/melonJS/docs/melonjs/Container.html#angleTo"},"4aCMxHbhnp0U05iLPkZo4":{"uri":"/melonJS/docs/melonjs/Container.html#centerOn"},"lTXutwoIfH24IcBnlGxOK":{"uri":"/melonJS/docs/melonjs/Container.html#clone"},"Qjsh9rHUwbnX5BBEc0cUi":{"uri":"/melonJS/docs/melonjs/Container.html#constructor"},"16m50utaKs0wPsy7jXVc5":{"uri":"/melonJS/docs/melonjs/Container.html#contains"},"Tq3QoK7JzqrHVnxxJKTlo":{"uri":"/melonJS/docs/melonjs/Container.html#copy"},"chdTtzc0ZZr87JMsoWj9K":{"uri":"/melonJS/docs/melonjs/Container.html#distanceTo"},"ayYnYk3rbZZL-VKv6-pdd":{"uri":"/melonJS/docs/melonjs/Container.html#equals"},"6ZQDO3aEuo6JLm3rV7rQz":{"uri":"/melonJS/docs/melonjs/Container.html#flipX"},"uAusWgGXwkrxDGfbGkcQ8":{"uri":"/melonJS/docs/melonjs/Container.html#flipY"},"VMt7EifeHDQMpEPmKB-r0":{"uri":"/melonJS/docs/melonjs/Container.html#forEach"},"LSsrx1uU78FaZSS3wjS8X":{"uri":"/melonJS/docs/melonjs/Container.html#getAbsolutePosition"},"76ZuQ9JVRILIlsp31_mFx":{"uri":"/melonJS/docs/melonjs/Container.html#getBounds"},"_JwCTYWHRNHbsdZ_4PqkD":{"uri":"/melonJS/docs/melonjs/Container.html#getChildAt"},"XFQ44bAdoeMNnlMg4GcqL":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByGUID"},"PKGKT3uxwh6Un59pIUq9m":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByName"},"_iUH-QrxAMbb-VybvIXoi":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByProp"},"NLKl4Vzm5EQ5kU0HsW3Ka":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByType"},"oaktq9IbSS18u5fwpj4nG":{"uri":"/melonJS/docs/melonjs/Container.html#getChildIndex"},"qZSqzlzf-EAgPpVIwAJ8N":{"uri":"/melonJS/docs/melonjs/Container.html#getChildren"},"E1omV8zNDlwsOGamuU2Nw":{"uri":"/melonJS/docs/melonjs/Container.html#getIndices"},"KmBvKtl5eSe3vK9VemoVC":{"uri":"/melonJS/docs/melonjs/Container.html#getNextChild"},"8hDcAgQRSG0DvqTGlaz4i":{"uri":"/melonJS/docs/melonjs/Container.html#getOpacity"},"BhrD6-I6RkMac5dl07-o9":{"uri":"/melonJS/docs/melonjs/Container.html#hasChild"},"B3OQjAiz_rAb2CFW7ZYtp":{"uri":"/melonJS/docs/melonjs/Container.html#isConvex"},"6PGqkr8CMz5nOL3BMCtP4":{"uri":"/melonJS/docs/melonjs/Container.html#isFinite"},"nkBaaz8O70x8DZQVFjbHS":{"uri":"/melonJS/docs/melonjs/Container.html#lookAt"},"ylQVnYEwCP-unH5IljxPc":{"uri":"/melonJS/docs/melonjs/Container.html#moveDown"},"NdFFFXA3UUWd5tfKAmbIx":{"uri":"/melonJS/docs/melonjs/Container.html#moveToBottom"},"FFXR_3CM3bIDQHbiFncRH":{"uri":"/melonJS/docs/melonjs/Container.html#moveToTop"},"lDlue58Znx43RNGjX8lNK":{"uri":"/melonJS/docs/melonjs/Container.html#moveUp"},"zALW-HU6roGNb70TjjH8r":{"uri":"/melonJS/docs/melonjs/Container.html#onChildChange"},"GhSYnHb8AEjrDoeO_r_j-":{"uri":"/melonJS/docs/melonjs/Container.html#onCollision"},"8zF65jwZXtELlUCASbXul":{"uri":"/melonJS/docs/melonjs/Container.html#onDestroyEvent"},"sLdzVqEjIUGe-Tcrn8acQ":{"uri":"/melonJS/docs/melonjs/Container.html#overlaps"},"M8Pqn9TuFQG2nAUKF29Ec":{"uri":"/melonJS/docs/melonjs/Container.html#recalc"},"c88rWvkE2lnyg3qBslDy-":{"uri":"/melonJS/docs/melonjs/Container.html#removeChild"},"76KYbIMx1hy2iS9POJlkf":{"uri":"/melonJS/docs/melonjs/Container.html#removeChildNow"},"dSX2GxzTnt-nSYC8ID41W":{"uri":"/melonJS/docs/melonjs/Container.html#reset"},"AIP2WKsllAUwVLhH0GCgx":{"uri":"/melonJS/docs/melonjs/Container.html#resize"},"lPHwy-8Afen6_6kb-TTxY":{"uri":"/melonJS/docs/melonjs/Container.html#rotate"},"hG3g5pgvu3D0U3lcDMv3V":{"uri":"/melonJS/docs/melonjs/Container.html#scale"},"rPL7bt9Hlt96PxMDH7uFY":{"uri":"/melonJS/docs/melonjs/Container.html#scaleV"},"gf8K7kTeSDf1AYpyWPXzn":{"uri":"/melonJS/docs/melonjs/Container.html#setChildsProperty"},"nCqKDOI4rjy6alPbwZNSZ":{"uri":"/melonJS/docs/melonjs/Container.html#setOpacity"},"IYqsbvBwiRGoXgHLn1958":{"uri":"/melonJS/docs/melonjs/Container.html#setShape"},"vLbZwRp_5Gh_7nzu9qDoE":{"uri":"/melonJS/docs/melonjs/Container.html#setVertices"},"3SMy9fJimWTaCA-jmEeAZ":{"uri":"/melonJS/docs/melonjs/Container.html#shift"},"sf8zwkhUBYgEQDKtJyGuA":{"uri":"/melonJS/docs/melonjs/Container.html#sort"},"X-Vy1ydK1NflwBprdyzj3":{"uri":"/melonJS/docs/melonjs/Container.html#swapChildren"},"UUanz-hgZi6rtJyl9vcdi":{"uri":"/melonJS/docs/melonjs/Container.html#to2d"},"6jTu7qtgqZ7Y43tvZdauo":{"uri":"/melonJS/docs/melonjs/Container.html#toIso"},"yZAhfgoB147QXvW0r7Dfj":{"uri":"/melonJS/docs/melonjs/Container.html#toPolygon"},"VrNZYuHvQVCH2pu3P3AHq":{"uri":"/melonJS/docs/melonjs/Container.html#transform"},"hy9azsXvZC79Mu9wypTmE":{"uri":"/melonJS/docs/melonjs/Container.html#translate"},"_IN9sXHxzJG4KQV8XROXw":{"uri":"/melonJS/docs/melonjs/Container.html#union"},"Xu-_F0fkqIqZcuh-QXftS":{"uri":"/melonJS/docs/melonjs/Container.html#draw"},"VcbbMHeJCj5ofambEr3Gi":{"uri":"/melonJS/docs/melonjs/Container.html#postDraw"},"LVWkzkcv2GofVV707rlaf":{"uri":"/melonJS/docs/melonjs/Container.html#preDraw"},"4U8CKMBGddn8Q-SivELaA":{"uri":"/melonJS/docs/melonjs/Container.html#update"},"d__T4gog0ag5Cx4PhANV0":{"uri":"/melonJS/docs/melonjs/Container.html#isAttachedToRoot"},"GrvI_Eii6kz7OhfzyLmF3":{"uri":"/melonJS/docs/melonjs/Container.html#onAnchorUpdate"},"9SrByhJSLXxhgkmPmUsVl":{"uri":"/melonJS/docs/melonjs/Draggable.html"},"IPNwtHcVgTvdGdpA-jH3a":{"uri":"/melonJS/docs/melonjs/Draggable.html#alpha"},"J2IAW6yYGOdGnD186aubY":{"uri":"/melonJS/docs/melonjs/Draggable.html#alwaysUpdate"},"vNHYuIB4DvDSsQEgA-5I1":{"uri":"/melonJS/docs/melonjs/Draggable.html#ancestor"},"xGEOSlmYv4-mNa-GsN2U8":{"uri":"/melonJS/docs/melonjs/Draggable.html#anchorPoint"},"T60CdGrrQQ0_ryebrhwly":{"uri":"/melonJS/docs/melonjs/Draggable.html#autoTransform"},"CJIrwBIoZETiF_3OQhx7b":{"uri":"/melonJS/docs/melonjs/Draggable.html#blendMode"},"MwRmBs2Po3R5t-nbWkQK4":{"uri":"/melonJS/docs/melonjs/Draggable.html#body"},"jsfcZrUQQtJ0p1-Ge-ja7":{"uri":"/melonJS/docs/melonjs/Draggable.html#bottom"},"jMlqLOkbb9QmQFLlraSsq":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerX"},"Glm9YTFNHoJHs9w2BmWyK":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerY"},"ctQhbNiu-aVoB_2gbh4sy":{"uri":"/melonJS/docs/melonjs/Draggable.html#currentTransform"},"QyMtkMU7g4dRI0X7EqbJL":{"uri":"/melonJS/docs/melonjs/Draggable.html#floating"},"l2oNkyownVDU0OMGPSCS_":{"uri":"/melonJS/docs/melonjs/Draggable.html#GUID"},"5Ja7aqZ_eSZd0CXS1yL1h":{"uri":"/melonJS/docs/melonjs/Draggable.html#height"},"n1cGSOykQkeQQqW5fKbzf":{"uri":"/melonJS/docs/melonjs/Draggable.html#inViewport"},"GrbdBDW3w0CV12zzvJ9_5":{"uri":"/melonJS/docs/melonjs/Draggable.html#isDirty"},"AA9Wku6X65Cx6kJbKemum":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFlippedX"},"N-CrgidgeKUL7KgG90s1d":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFlippedY"},"KQkuiWCP0sBLIAOzOvH3v":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFloating"},"F0s5vZxtmPhAFPzyRWLwz":{"uri":"/melonJS/docs/melonjs/Draggable.html#isKinematic"},"OheS1EBNW6qE7jcCFXUiR":{"uri":"/melonJS/docs/melonjs/Draggable.html#isPersistent"},"i8AoF4aclef3yT235hKnB":{"uri":"/melonJS/docs/melonjs/Draggable.html#left"},"D_vHlM930kLN1sp3SNLVe":{"uri":"/melonJS/docs/melonjs/Draggable.html#mask"},"bJBfTaGImuMXhM6rj3x7e":{"uri":"/melonJS/docs/melonjs/Draggable.html#name"},"EHyoUTgxG1GpbT6MWuAP0":{"uri":"/melonJS/docs/melonjs/Draggable.html#onVisibilityChange"},"AKbBJXJugSYJACKQsCztB":{"uri":"/melonJS/docs/melonjs/Draggable.html#points"},"v5Yl2ddrj_4ggrtfHJ1iH":{"uri":"/melonJS/docs/melonjs/Draggable.html#pos"},"9oWlQZh0SGOAD6V29Mi2o":{"uri":"/melonJS/docs/melonjs/Draggable.html#right"},"EM02h-eET8Y9CrMS89LEZ":{"uri":"/melonJS/docs/melonjs/Draggable.html#tint"},"6bg3d5TQ_tGH2mSB5VbrO":{"uri":"/melonJS/docs/melonjs/Draggable.html#top"},"D3aQpIubeiLwcWbkUn8Lg":{"uri":"/melonJS/docs/melonjs/Draggable.html#updateWhenPaused"},"0XXVnet4fxniNVW49jAVh":{"uri":"/melonJS/docs/melonjs/Draggable.html#width"},"wMuhw0JKW_Hb_bwmNIBe9":{"uri":"/melonJS/docs/melonjs/Draggable.html#angleTo"},"FzMMVwMMw-3knEtgIS4ab":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerOn"},"ci8D-QsiYPwo2cukIbqaC":{"uri":"/melonJS/docs/melonjs/Draggable.html#clone"},"EPz2uKcj8MkftGnAbELrV":{"uri":"/melonJS/docs/melonjs/Draggable.html#constructor"},"vgE8ZnlCiy5zwM1K30xFE":{"uri":"/melonJS/docs/melonjs/Draggable.html#contains"},"Gx6C8NMtXojFWaBGL5vnS":{"uri":"/melonJS/docs/melonjs/Draggable.html#copy"},"0RyqaMaBhogA41Qtzo6W9":{"uri":"/melonJS/docs/melonjs/Draggable.html#distanceTo"},"HNC2IDi-rghwtpsYimKuI":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragEnd"},"uV9arghvJQf9nHxrgQrpI":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragMove"},"jKV7VXxY9DwNtwJUiXgio":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragStart"},"4hDOgdKFOyPiUhRfSbo3C":{"uri":"/melonJS/docs/melonjs/Draggable.html#equals"},"AkxUKexLx08Q8zEgMYoLC":{"uri":"/melonJS/docs/melonjs/Draggable.html#flipX"},"zgXF5lupILORHeL-BlLCU":{"uri":"/melonJS/docs/melonjs/Draggable.html#flipY"},"fn6zMeP2rwJ2eZrhP-0dC":{"uri":"/melonJS/docs/melonjs/Draggable.html#getAbsolutePosition"},"1VcoPhIgFKdC08CoZsEHl":{"uri":"/melonJS/docs/melonjs/Draggable.html#getBounds"},"6kofOqL_tj8Ybyz8usH_3":{"uri":"/melonJS/docs/melonjs/Draggable.html#getIndices"},"p8EAUpzELfj8DJA7ADAwa":{"uri":"/melonJS/docs/melonjs/Draggable.html#getOpacity"},"aGmlmZxOsthjmYbIxYyeA":{"uri":"/melonJS/docs/melonjs/Draggable.html#isConvex"},"lyky1yW7IcmcdSXHqG99R":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFinite"},"Q-W5ygu-r4TndB6-wHVDO":{"uri":"/melonJS/docs/melonjs/Draggable.html#lookAt"},"Ps_9hw0aeLAAiNuU8sWl8":{"uri":"/melonJS/docs/melonjs/Draggable.html#onCollision"},"Z8IHhqOa_IjtrQVFbMAhX":{"uri":"/melonJS/docs/melonjs/Draggable.html#onDestroyEvent"},"AmuyoPgBR5doOCfTHlbGA":{"uri":"/melonJS/docs/melonjs/Draggable.html#overlaps"},"UiNwInXV1tDbCS_349IQY":{"uri":"/melonJS/docs/melonjs/Draggable.html#recalc"},"QLg5HgSS7DDtA8Gi9eJN5":{"uri":"/melonJS/docs/melonjs/Draggable.html#resize"},"j2gO7eWgef8KNjQljvGrV":{"uri":"/melonJS/docs/melonjs/Draggable.html#rotate"},"Tlt0erW4HOw8hvJiklq57":{"uri":"/melonJS/docs/melonjs/Draggable.html#scale"},"UM0QcTppZjhjL9mrqDTJu":{"uri":"/melonJS/docs/melonjs/Draggable.html#scaleV"},"YiDMpEXwv8-rxcK-iOqzA":{"uri":"/melonJS/docs/melonjs/Draggable.html#setOpacity"},"nX3Zg6Fr9_FFLbFmSaYSW":{"uri":"/melonJS/docs/melonjs/Draggable.html#setShape"},"VK6YbFLltihGZDQdoqFm9":{"uri":"/melonJS/docs/melonjs/Draggable.html#setVertices"},"yK2hueFOaqpOlColcXvrL":{"uri":"/melonJS/docs/melonjs/Draggable.html#shift"},"5Hj5NIThMZDONJ6VCvfPL":{"uri":"/melonJS/docs/melonjs/Draggable.html#to2d"},"JAmY8_0xr0UL1ltGP4IUC":{"uri":"/melonJS/docs/melonjs/Draggable.html#toIso"},"rT_nwoWq-bnWKSjzGJ8xZ":{"uri":"/melonJS/docs/melonjs/Draggable.html#toPolygon"},"Ieaq7ZFvdHYhm90PoHRCk":{"uri":"/melonJS/docs/melonjs/Draggable.html#transform"},"xZXXE4lqoVt5Qly_K6N3h":{"uri":"/melonJS/docs/melonjs/Draggable.html#translate"},"Kj0ZMLw55Sq-sjFCCiQqv":{"uri":"/melonJS/docs/melonjs/Draggable.html#union"},"vXIIzFX2-yFO5xmgTYRRZ":{"uri":"/melonJS/docs/melonjs/Draggable.html#draw"},"Ahb75FHXTIneHJxFa62ep":{"uri":"/melonJS/docs/melonjs/Draggable.html#postDraw"},"48Jihg0mW0XiyMed94roF":{"uri":"/melonJS/docs/melonjs/Draggable.html#preDraw"},"-Qyj2D713dsvlZ2r_QCwt":{"uri":"/melonJS/docs/melonjs/Draggable.html#update"},"jEL6HaKn-iYPJDaqxlJtk":{"uri":"/melonJS/docs/melonjs/Draggable.html#initEvents"},"x6s_EJJKQ68Dhm0yhGt9g":{"uri":"/melonJS/docs/melonjs/Draggable.html#onAnchorUpdate"},"M3rKan6RbCs7uuqCe5PI_":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html"},"aCxuZMutvNZKtiiVIF_Kd":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alive"},"vWhRYj_D0p41igmM2q8P-":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alpha"},"z66iIcUR-ivGuBSx29Xqi":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alwaysUpdate"},"FlWzSlsElZspVcNnB5Daz":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#ancestor"},"vqytaUaKwWMZWq3JhuKTD":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#anchorPoint"},"BjB4N-1A7MoBppZgiKhaU":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#autoTransform"},"GnI5qUe3hT_HCm84WlNjU":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#blendMode"},"j1g8LBnDEwA8TgUCP8_ql":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#bottom"},"On17sCTBelbDvWXBt_S7X":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerX"},"ro43VaJ3fKANCT_kvuKce":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerY"},"wkSb99mNEmGJrpcaL5JHv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#currentTransform"},"68Sfhx77kX2cwUoKDe4yZ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#floating"},"QwEFr92NXTxKmwqbg3FgE":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#GUID"},"_FeePknnHF861h-krIbNx":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#height"},"yL40mFmnF22IJ8V4ayMyy":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#id"},"1AKsEIZr3XXHQKAT-4-t6":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#inViewport"},"d1N8dxE8E1Q6HKc_NagXP":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isDirty"},"N-IJ8rKt_UHRd9SzrKgou":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFlippedX"},"F3JAiQqFSQbmBqW2cf7y1":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFlippedY"},"leEB04feCAaxmVDy4Ybwx":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFloating"},"a80hoAOpeCIDpQM_6x3is":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isKinematic"},"0KnfBS9C3XTp8BImMcVZo":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isPersistent"},"YE3Toj5IYnkVl7UbeT0R4":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#left"},"SYaIDMr9MyA_fvWwDIIFo":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#mask"},"dygX3Vf3QgP4F8atdsWZA":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#name"},"UAesLzt9FJ4ENv9vwA8nv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onVisibilityChange"},"nZib7u7rgIMBptbyAZpcr":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#points"},"d5VKw_8VcBpsMLJEuSNeL":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#pos"},"EE47y7ZfNegEZ-N0iJTV-":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#renderable"},"j2G9S11bCdA4PUp5lVF_l":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#right"},"RvwvA9si3QRTUuWFnnScu":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#tint"},"-3MpD5iI_BotJVA-2GaFy":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#top"},"saoj8t8WEe8x654VuHG-6":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#type"},"jUtc9P1YHHQT-FF-qRXXk":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#updateWhenPaused"},"UAtWtwmiYfyxih-A7ytKP":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#width"},"NZ2E8-Umguj-2_VPylQRX":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#angleTo"},"tmxEAIbLLHy5FEmpsEhIP":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerOn"},"Kl1ePhzdKAwyj82yx5i47":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#clone"},"8jdxzDZJqwhK8vgsl6AzK":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#constructor"},"Sc3kI49NFacc0RCXAiTM0":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#contains"},"AfYQn_gtK4Xq_KalnzSp3":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#copy"},"y2NECKtCAPm9Xn_Llqucn":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#distanceTo"},"LPD4U3SC04gMt5FBBY3CO":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#equals"},"gPb8oXK8rqmis0hVLg8ha":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#flipX"},"LgYfLhG22c1abNGf_dGKE":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#flipY"},"yFGSAlSNO2ZCBQWUs0mX8":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getAbsolutePosition"},"3wEUb5hUsr3MaHnKYV9mK":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getBounds"},"KjOIVBXNsQus5LZPgYAiA":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getIndices"},"3TA44PylMVNfoNvnzKWSd":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getOpacity"},"xy-r7012N0S-iXVfx-YQo":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isConvex"},"gVk_gTt88u-zGG8STLiFw":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFinite"},"rBTNn7Pm94tSLJbSh8x39":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#lookAt"},"6GciX5m9iV91pQZbKZo1g":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onCollision"},"0qQfLMTYfeqI4p4yDXSA1":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onDeactivateEvent"},"HQvwYdcWciyhfB5amhe3T":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onDestroyEvent"},"8NdNyA44iUN5cJBp62Km7":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#overlaps"},"j3uaMJqZ5U32It4Dj-dih":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#recalc"},"Ev504E2Vb9G0lCBYYxV_J":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#resize"},"jLvdAn22B0deGc4sYrOvQ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#rotate"},"6x-56KKes1_AaNv51ijp3":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#scale"},"pHBcHMWNswTCE9iBXfruU":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#scaleV"},"IPcOhVXchg59OnSIqp56y":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setOpacity"},"HxWHTi3ChGWACrDerbLYp":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setShape"},"ZSbhPqOr5Ovyy0g33YN27":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setVertices"},"r6eLZVDwDlS5twVzRq_6H":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#shift"},"18XXh5QaGfiVztUBX9QHb":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#to2d"},"QfATqKqMCAxoH-QcqwI0H":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#toIso"},"EltmfBhAyulBm-9J0bdSJ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#toPolygon"},"oE58VrAVskEdSaMotPkIn":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#transform"},"QQ4uSl-a1a6iC0GGEF2hn":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#translate"},"osvHxfOyhMl9CDVhWp933":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#union"},"eHDicXFlUDE-YMWmuyd8x":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#draw"},"mPh57yWinaJkgAV169J9Y":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#postDraw"},"OaR21jxmyeq4S6BXRWGCm":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#preDraw"},"EicdP28NibORwgGsbQdiO":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#update"},"3AyEFs0jAZ_sbA5UGvX3e":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onAnchorUpdate"},"8hiFzoC3vB4pA9WJU8asm":{"uri":"/melonJS/docs/melonjs/DropTarget.html"},"dhRbDtTFGsi7Zu82kWMCg":{"uri":"/melonJS/docs/melonjs/DropTarget.html#alpha"},"Nf4IeLHQZiHawQA_nN_MW":{"uri":"/melonJS/docs/melonjs/DropTarget.html#alwaysUpdate"},"xWTMl6Ye95erCHXqbDmeR":{"uri":"/melonJS/docs/melonjs/DropTarget.html#ancestor"},"4pKnE6FxztoCaSDNIfVL5":{"uri":"/melonJS/docs/melonjs/DropTarget.html#anchorPoint"},"e5naUCGHepk5ZGcGmZyj5":{"uri":"/melonJS/docs/melonjs/DropTarget.html#autoTransform"},"JNU-2cAe46t0gJvnoyXls":{"uri":"/melonJS/docs/melonjs/DropTarget.html#blendMode"},"wETORr4qFQKRmzCyfGlE3":{"uri":"/melonJS/docs/melonjs/DropTarget.html#body"},"ZEeXR1-_5IYedYprfQ5Ol":{"uri":"/melonJS/docs/melonjs/DropTarget.html#bottom"},"ZU5Btw2UbafQfF9N8B5Pe":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerX"},"ZyAZtY4aqqqAVrSzqTs90":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerY"},"Jj8NL2DyCSZmC2vo-OV3c":{"uri":"/melonJS/docs/melonjs/DropTarget.html#checkMethod"},"GBPIgxhhIk3iBI5OGFsrk":{"uri":"/melonJS/docs/melonjs/DropTarget.html#CHECKMETHOD_CONTAINS"},"q3lrQ8AnlcheyDtwgHYbg":{"uri":"/melonJS/docs/melonjs/DropTarget.html#CHECKMETHOD_OVERLAP"},"GEuR5PyiJOSDDzRLQygyK":{"uri":"/melonJS/docs/melonjs/DropTarget.html#currentTransform"},"wk2zzBgbz31TpKCMa_UKf":{"uri":"/melonJS/docs/melonjs/DropTarget.html#floating"},"yLPwx4PxyyiRT9jghdOns":{"uri":"/melonJS/docs/melonjs/DropTarget.html#GUID"},"olhKT2DgrI3p22mEGdC4N":{"uri":"/melonJS/docs/melonjs/DropTarget.html#height"},"t_fvUVVodPoj10Yg2_nAg":{"uri":"/melonJS/docs/melonjs/DropTarget.html#inViewport"},"GPxbBO7pzTHCNKFqvqEOZ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isDirty"},"ni01i-SpNX1b-9A2_-i1C":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFlippedX"},"f7u_guX-5stFYY3yhNkWw":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFlippedY"},"vIa7C2-ld-945Bt_NkEWL":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFloating"},"-DT-kS61iRRHthLjwPHkD":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isKinematic"},"oYRPL64iHmGJmAMtJ_G_T":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isPersistent"},"kwMwDIHO_7cZKArZGP--h":{"uri":"/melonJS/docs/melonjs/DropTarget.html#left"},"gT2vS2gn_g8kRoZ1q75sP":{"uri":"/melonJS/docs/melonjs/DropTarget.html#mask"},"EMntlophGOSDVNZhlJc-A":{"uri":"/melonJS/docs/melonjs/DropTarget.html#name"},"b6k-TbQCJylpf0bgG5svz":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onVisibilityChange"},"-2qHCcEnEGBudaUMa2r4k":{"uri":"/melonJS/docs/melonjs/DropTarget.html#points"},"r3zdDGD2y25I8AJ3XDILf":{"uri":"/melonJS/docs/melonjs/DropTarget.html#pos"},"0muqETCgAjedM-9Pm9tTf":{"uri":"/melonJS/docs/melonjs/DropTarget.html#right"},"rfR_nJoi82RKT3ke4XtUV":{"uri":"/melonJS/docs/melonjs/DropTarget.html#tint"},"nsRM3gS78l-wekHI-3keX":{"uri":"/melonJS/docs/melonjs/DropTarget.html#top"},"LrTcI6w2-anKG8BU0OmAH":{"uri":"/melonJS/docs/melonjs/DropTarget.html#updateWhenPaused"},"0ikImZZ9t4JcfbjEU7omB":{"uri":"/melonJS/docs/melonjs/DropTarget.html#width"},"terJ8CHcuu5EYCE2ZdYe4":{"uri":"/melonJS/docs/melonjs/DropTarget.html#angleTo"},"aQ9VNY-VxPFpmoiHPqANw":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerOn"},"k4sFdSpA1ItdY7cs9uPNr":{"uri":"/melonJS/docs/melonjs/DropTarget.html#checkOnMe"},"H2oy4DcMFVTD63_FBGyOI":{"uri":"/melonJS/docs/melonjs/DropTarget.html#clone"},"1c3xPkDBlrVrxgXSW5M18":{"uri":"/melonJS/docs/melonjs/DropTarget.html#constructor"},"y1OqphPo8aHAhdpZBaEw9":{"uri":"/melonJS/docs/melonjs/DropTarget.html#contains"},"miohOQD8F-2boMH751lKc":{"uri":"/melonJS/docs/melonjs/DropTarget.html#copy"},"S7jVEBL64RlnEKHsWy_Eu":{"uri":"/melonJS/docs/melonjs/DropTarget.html#distanceTo"},"J3ZDUObL5IJtHnGHENHAR":{"uri":"/melonJS/docs/melonjs/DropTarget.html#drop"},"ExSrHhafGE0YIii9vJbWQ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#equals"},"yiSREkIe6XDE07XccUOQt":{"uri":"/melonJS/docs/melonjs/DropTarget.html#flipX"},"Si4zTJx0eCJZyvgLKv60f":{"uri":"/melonJS/docs/melonjs/DropTarget.html#flipY"},"AvUEQirVqsyvJMPbVIriq":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getAbsolutePosition"},"NG8UzN0I_B_sKvSO1vI4_":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getBounds"},"V0UUaUmsSIQR4wXECB8mQ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getIndices"},"mwL-wEk5zWzvzlfgOjvrC":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getOpacity"},"gmSVYyr4CjBXDwi0hzq-C":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isConvex"},"ZqaqBjBT1IqTcL8ZTQots":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFinite"},"30XrJndMgGsi-bfDxDcxq":{"uri":"/melonJS/docs/melonjs/DropTarget.html#lookAt"},"VQA2r0AZVwVNudJvjYohR":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onCollision"},"m9V9PWwdhmFQMmUOIR_HT":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onDestroyEvent"},"3d_WAlwhPYMguRNdF1f0e":{"uri":"/melonJS/docs/melonjs/DropTarget.html#overlaps"},"D16ybkwTy89PPv92bfY6f":{"uri":"/melonJS/docs/melonjs/DropTarget.html#recalc"},"VVFMQ9AlWq8RFtQvIa7o-":{"uri":"/melonJS/docs/melonjs/DropTarget.html#resize"},"Tbz9zBnHdhd5N8uSDzTcZ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#rotate"},"0PB0IOGk3ArPcOuTqL1ld":{"uri":"/melonJS/docs/melonjs/DropTarget.html#scale"},"11PFcW3AzdaxlD-54tH_1":{"uri":"/melonJS/docs/melonjs/DropTarget.html#scaleV"},"6vBJ-fs-Im-TLwhWxSv4j":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setCheckMethod"},"pE2NqBLo6QCYzdP6iNQ2K":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setOpacity"},"8c9-69Hz1wcj7ywHKa0HC":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setShape"},"qj5JWsxts_ApLcw8A6QCF":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setVertices"},"_d0OZPJvZYTICU5xfGeFp":{"uri":"/melonJS/docs/melonjs/DropTarget.html#shift"},"gooH6xw2GL7-2mEIDB2vO":{"uri":"/melonJS/docs/melonjs/DropTarget.html#to2d"},"YCgFbXjSKKCIwjfLQ4V0B":{"uri":"/melonJS/docs/melonjs/DropTarget.html#toIso"},"C73HwtxBslctVs1n-V49y":{"uri":"/melonJS/docs/melonjs/DropTarget.html#toPolygon"},"kSDHhFtYXlOBXh6Pve70n":{"uri":"/melonJS/docs/melonjs/DropTarget.html#transform"},"1oJzh2bfkhi02Z3AD8LFB":{"uri":"/melonJS/docs/melonjs/DropTarget.html#translate"},"P5R02nQAT3y22PRVLzn_W":{"uri":"/melonJS/docs/melonjs/DropTarget.html#union"},"u2QX07Qxsbm3ZbALez0Zt":{"uri":"/melonJS/docs/melonjs/DropTarget.html#draw"},"7xsAZOwTdhJmEeszqAY8C":{"uri":"/melonJS/docs/melonjs/DropTarget.html#postDraw"},"-XbEviljaKq_J5qXrzziY":{"uri":"/melonJS/docs/melonjs/DropTarget.html#preDraw"},"2YmRnLtJGQjjrTpd6Yal2":{"uri":"/melonJS/docs/melonjs/DropTarget.html#update"},"KHSr6FX9vSnaHUHBtZRGD":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onAnchorUpdate"},"9JNXeQ9jI7lZXTII7_VKR":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html"},"ZMMo26s1a5OX0h7Ug0jaB":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alive"},"fM-Y_k8rqrrK8N28I25kf":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alpha"},"dtWeYDaJaEcEiC7by8sy9":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alwaysUpdate"},"vWNOu3IuVkyj2MhnDaArj":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#ancestor"},"S6yGWjpds6omthF47NmaP":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#anchorPoint"},"JZ2Uu-XPrDguqs70CvE-J":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#autoTransform"},"RbCmstiRsFzn8ir0uvxmy":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#blendMode"},"fd4nq1-KFYuPXzmQFk1V6":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#bottom"},"BvOc3UElmPBQC-E-V1Z0_":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerX"},"CJyUl6zuKZ0ymobE8xrTc":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerY"},"wKqEO97gLvaDq1-grwUVU":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#currentTransform"},"sYDAL9nZwUNe52TmUEvx4":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#floating"},"I6A2Dok2EoJwFJjnI4saK":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#GUID"},"NIwXnoF2zt3x2d6heAGyv":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#height"},"FVsGyxsMp3BWl67IxembC":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#id"},"KG47RTRCa1a7OhQV6APTE":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#inViewport"},"n_GvLP6z9zLwUlpBHMQQN":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isDirty"},"GSek9wIQEMGbj-0UDgaRf":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFlippedX"},"LgQO8ZQJtCEWVKET8ZyTz":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFlippedY"},"GXYIByBPQ4n6N6ISw40pn":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFloating"},"vdzwCHUQ5qNWEZ1504Rb0":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isKinematic"},"T_90MhZn_xCE0RiJq4hIa":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isPersistent"},"u_P1ItAnZ3Ek1_2Xx5BNg":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#left"},"e0xIPdNr-s1A5DkcQo84N":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#mask"},"U_3w46v_D6eC2vmp3V98Z":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#name"},"KSVtQ0NOYB7XzgladFfKf":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onVisibilityChange"},"qBhK4mCRB7upgCqjeo1KV":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#points"},"wbfgPaEmc1fdvCN-wIzET":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#pos"},"MlvSGGDK9jDAIeKxZsmoq":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#renderable"},"-KbdVrNy1GoecjYhdQfU8":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#right"},"w6Jx6KQbsYVCKVfEYL45J":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#tint"},"P0UKFQQKgKBk7OjUBNBp3":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#top"},"QMgj9KLH56d_zlkZYYadh":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#type"},"-dEjr6ysQ_GGejsAFnI9a":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#updateWhenPaused"},"56-zX9T-2Gd2XOp1BNMQg":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#width"},"m5_Y2gAH9kJZOSKozqIGt":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#angleTo"},"0wTQeSUwl0e1IcYNEHlNQ":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerOn"},"ur4qrlTlwcfMtqaDUiIg8":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#clone"},"ciUdOzSKkjLDNsPEgyXP3":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#constructor"},"pc939GYqQ3GvKZhzkQZXk":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#contains"},"NyreEIO6huLIwlXXSLJ8S":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#copy"},"W77szlPafl9kUHPkOQ4D6":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#distanceTo"},"N1dsb_9kP-rV5fiT6Q4PU":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#equals"},"gte1s5uHFLDX-tiLw0Tdj":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#flipX"},"UAV1HPmk4i4TEQhnVL4cP":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#flipY"},"AY4wMYR-qOaihq7Kf-hi5":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getAbsolutePosition"},"34dhK1_sYziBic7eTmLBB":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getBounds"},"h2uRb4j2a6uEM2ay4Nl_I":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getIndices"},"kMapNyJ7Fc8v3zuYp5yWm":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getOpacity"},"GR8UKjBn6f8vPnSlV7K5a":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isConvex"},"BVWJVR_VPFuH3MaOlIA7y":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFinite"},"g3klr3fW5KuVJdr1Nwsp6":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#lookAt"},"8ibTEzDjKvCbGltq_aIak":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onCollision"},"bAhH0F_FqqD7nj7TL5KUl":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onDeactivateEvent"},"ZDMeFmKmlzg-k_sHEfSNX":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onDestroyEvent"},"_iVV6WqJztLSli_dIqRCx":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#overlaps"},"Od4pdBOC8_xh6PnddNBCh":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#recalc"},"PcHcghn7aPxTEcTh6l2a4":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#resize"},"L1WuqBIvQDopvIjtxMxmg":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#rotate"},"Y3sj5Vu4yqWoQzmU7yg-d":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#scale"},"NO-aHS1pVHzNygviJ5d3n":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#scaleV"},"Qlg9f5OmAkO2er55jITz7":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setOpacity"},"DZOEdtUhJLfwNtrJQcoki":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setShape"},"wpF1c3jqhIEy1FJbXVwB2":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setVertices"},"FS29XIcPzHmvJ5B-maP7B":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#shift"},"wKcURP18xsqHdFdP8h7py":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#to2d"},"QDsryoa_-QI131NffkXK9":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#toIso"},"_zdqlFLZILZ6QswcCuKkz":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#toPolygon"},"nPjChjay36LqFPwrOBhX0":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#transform"},"BlXgJ5JzqbVsofltQAWeW":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#translate"},"de9BGW-y4VHJz-U486oxE":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#union"},"XaRg1iqZGCfN36-4D0XWJ":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#draw"},"28dfFNhjY3DAVD_7MpPZ-":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#postDraw"},"-n4tlhiklgNXN13Cibib7":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#preDraw"},"gHtZP6x7Qmrz_rmXe27MK":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#update"},"dmJS2b-iUdrTyMjxvd3Iv":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onAnchorUpdate"},"mrWc8YjAQ62pGLaw_42f8":{"uri":"/melonJS/docs/melonjs/Ellipse.html"},"3Z11Glw2fJvFm3U2ZVY51":{"uri":"/melonJS/docs/melonjs/Ellipse.html#pos"},"BcqhmL5WcZJAQe9TCUR9N":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radius"},"mCdQQBb2DAAGAuJS7XBdp":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radiusSq"},"bMB-hDSBrxLWUX8HFpIAJ":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radiusV"},"D3wgXKfQ5asqfCzyJkc7R":{"uri":"/melonJS/docs/melonjs/Ellipse.html#ratio"},"jf2yM_1qa9r4n3LOgF4lP":{"uri":"/melonJS/docs/melonjs/Ellipse.html#_bounds"},"hUTUYxd20ld7Ua45exKKj":{"uri":"/melonJS/docs/melonjs/Ellipse.html#clone"},"54Tq3tHS75cw3NccjUpOx":{"uri":"/melonJS/docs/melonjs/Ellipse.html#constructor"},"5LmDQCOYmPgpsEo8iMEeR":{"uri":"/melonJS/docs/melonjs/Ellipse.html#contains"},"TLNd7GYTpXPYWVSFvGC65":{"uri":"/melonJS/docs/melonjs/Ellipse.html#getBounds"},"4-AOQhjtQXtHryKw74QPT":{"uri":"/melonJS/docs/melonjs/Ellipse.html#rotate"},"hP4f50IB49xq2xaV5qOe-":{"uri":"/melonJS/docs/melonjs/Ellipse.html#scale"},"Uq3uaX0esLCXS3hfSIVnk":{"uri":"/melonJS/docs/melonjs/Ellipse.html#scale"},"f4VESvCH0yeFLBcNLdTIj":{"uri":"/melonJS/docs/melonjs/Ellipse.html#setShape"},"crFDjVXJrqcoH3fuCc8bT":{"uri":"/melonJS/docs/melonjs/Ellipse.html#transform"},"x49vfTJmT-x_7eBjooWvp":{"uri":"/melonJS/docs/melonjs/Ellipse.html#translate"},"abBp1BUvbKDRuSmOC0Gw6":{"uri":"/melonJS/docs/melonjs/Ellipse.html#contains"},"FnREs14YZO7Ct0IP1KN20":{"uri":"/melonJS/docs/melonjs/Ellipse.html#translate"},"EC-eHVAIk9p87EO4cj4cP":{"uri":"/melonJS/docs/melonjs/Entity.html"},"Ms2jZ7zD9Bo3dNpfjZbVX":{"uri":"/melonJS/docs/melonjs/Entity.html#alive"},"VM2ivnIHAzi4TArCi72z0":{"uri":"/melonJS/docs/melonjs/Entity.html#alpha"},"0V4p0PZGUdwIlleG6RGRK":{"uri":"/melonJS/docs/melonjs/Entity.html#alwaysUpdate"},"4KfaYT8Cki6yazc8gl-KG":{"uri":"/melonJS/docs/melonjs/Entity.html#ancestor"},"KQZWmaDWFX2K2Iq1UgIST":{"uri":"/melonJS/docs/melonjs/Entity.html#anchorPoint"},"xLUPo8vnHOAoSBIz2MdAR":{"uri":"/melonJS/docs/melonjs/Entity.html#autoTransform"},"MqyMkM1gaFryynElxNXar":{"uri":"/melonJS/docs/melonjs/Entity.html#blendMode"},"77OW1WVyrd54br_7QhhvW":{"uri":"/melonJS/docs/melonjs/Entity.html#bottom"},"K8OQV16dgtofZdovzUKVu":{"uri":"/melonJS/docs/melonjs/Entity.html#centerX"},"VZ31ZGiICF_oRg0viLr63":{"uri":"/melonJS/docs/melonjs/Entity.html#centerY"},"FqnZu7xE06U5rFvrN9gWQ":{"uri":"/melonJS/docs/melonjs/Entity.html#currentTransform"},"z3Q5UbyuWsNO7eig7lnT6":{"uri":"/melonJS/docs/melonjs/Entity.html#floating"},"Q6dO00zV-pP6-52qRqv37":{"uri":"/melonJS/docs/melonjs/Entity.html#GUID"},"fO7YP8mhb2RgvXA6LcOqZ":{"uri":"/melonJS/docs/melonjs/Entity.html#height"},"C9ds9m25Dld1e5y3OfEIR":{"uri":"/melonJS/docs/melonjs/Entity.html#id"},"VPNMis8mF5wn_aLKH-3ZY":{"uri":"/melonJS/docs/melonjs/Entity.html#inViewport"},"vet0wfGqWThdXi0gFJ6NU":{"uri":"/melonJS/docs/melonjs/Entity.html#isDirty"},"4D3kOk_9F2ael4RGxTWvO":{"uri":"/melonJS/docs/melonjs/Entity.html#isFlippedX"},"hQIg6BXIMNas28mKdosyZ":{"uri":"/melonJS/docs/melonjs/Entity.html#isFlippedY"},"IAf9VChEfdfPUqGAwhTM9":{"uri":"/melonJS/docs/melonjs/Entity.html#isFloating"},"T0HjoFe5nPY_C_YNQBNYZ":{"uri":"/melonJS/docs/melonjs/Entity.html#isKinematic"},"o5LpUqEVdb8R_-lMEJNYw":{"uri":"/melonJS/docs/melonjs/Entity.html#isPersistent"},"SOIX1qvhHNUZADCjc3T1M":{"uri":"/melonJS/docs/melonjs/Entity.html#left"},"DvIepapW3OX37Nrn2nnsg":{"uri":"/melonJS/docs/melonjs/Entity.html#mask"},"ObyyLdtKNUPrzT5Hr20Ve":{"uri":"/melonJS/docs/melonjs/Entity.html#name"},"cupmcreRkmwyHnN0orXh_":{"uri":"/melonJS/docs/melonjs/Entity.html#onVisibilityChange"},"vEUh4Gdp0JJd_51U2HMCB":{"uri":"/melonJS/docs/melonjs/Entity.html#points"},"epyJEtbd3FnmaIfqfb44U":{"uri":"/melonJS/docs/melonjs/Entity.html#pos"},"CVV2aPIepRon2AWmcXg7O":{"uri":"/melonJS/docs/melonjs/Entity.html#renderable"},"aaE9wboiZuHOc33HuYPu5":{"uri":"/melonJS/docs/melonjs/Entity.html#right"},"fOxrPvU9jqJ3qoaGkbeVa":{"uri":"/melonJS/docs/melonjs/Entity.html#tint"},"ke8FxlMa7h8SiwdvWJz1p":{"uri":"/melonJS/docs/melonjs/Entity.html#top"},"KjM6MsW1IiZ_G50Uc9kYW":{"uri":"/melonJS/docs/melonjs/Entity.html#type"},"ziH4ldtCEab2RxIKs7fIT":{"uri":"/melonJS/docs/melonjs/Entity.html#updateWhenPaused"},"qlEMzgLLHzxLH2-r9bVdy":{"uri":"/melonJS/docs/melonjs/Entity.html#width"},"kJQ5GlcfY17iRyFFihCt4":{"uri":"/melonJS/docs/melonjs/Entity.html#body"},"k-9hNLgcCAg_Ipp3P8Lc0":{"uri":"/melonJS/docs/melonjs/Entity.html#angleTo"},"NNe6FBRb-RGV4ALb1KDJd":{"uri":"/melonJS/docs/melonjs/Entity.html#centerOn"},"Sd81_iwpQ2_HMznAQAf6O":{"uri":"/melonJS/docs/melonjs/Entity.html#clone"},"9UpywaB0M5klsH541qN_4":{"uri":"/melonJS/docs/melonjs/Entity.html#constructor"},"KV9bZBRDJz1XFMlrcLWd2":{"uri":"/melonJS/docs/melonjs/Entity.html#contains"},"lsnNNxk1W4KnBJHQiUTZS":{"uri":"/melonJS/docs/melonjs/Entity.html#copy"},"TYZfj5_KJxK10D1aF6JNm":{"uri":"/melonJS/docs/melonjs/Entity.html#distanceTo"},"eeSqyCl0ozt2l7PFPmNsg":{"uri":"/melonJS/docs/melonjs/Entity.html#equals"},"7qr2ID-BDfnqlqhLlG-An":{"uri":"/melonJS/docs/melonjs/Entity.html#flipX"},"PX7QZceabvdnfrG7ZenaK":{"uri":"/melonJS/docs/melonjs/Entity.html#flipY"},"lEyezMXqi97X6_Box_Q3w":{"uri":"/melonJS/docs/melonjs/Entity.html#getAbsolutePosition"},"8VGN17tBadwWJ9et0kn_E":{"uri":"/melonJS/docs/melonjs/Entity.html#getBounds"},"107A_u35uAVsXY1Dk2D9c":{"uri":"/melonJS/docs/melonjs/Entity.html#getIndices"},"mEQalo7R2oACxgp8cRBKK":{"uri":"/melonJS/docs/melonjs/Entity.html#getOpacity"},"EVHhsKoPu3tFlk9KHepfI":{"uri":"/melonJS/docs/melonjs/Entity.html#isConvex"},"EzsFSQMqSGamzXMQdLf16":{"uri":"/melonJS/docs/melonjs/Entity.html#isFinite"},"ugQnDnY_xF9upe33ztsfh":{"uri":"/melonJS/docs/melonjs/Entity.html#lookAt"},"d-C4aXm6-_ThqxwUK78YW":{"uri":"/melonJS/docs/melonjs/Entity.html#onCollision"},"fKLkHL5LbJdTC1e1v0yl9":{"uri":"/melonJS/docs/melonjs/Entity.html#onDeactivateEvent"},"IUXG5MRjO_BRDjMlXbUCK":{"uri":"/melonJS/docs/melonjs/Entity.html#onDestroyEvent"},"-9Bg9Q2GhKz4X1Zf7l367":{"uri":"/melonJS/docs/melonjs/Entity.html#overlaps"},"cbnNZhOhRbsjqsG9XC5Yf":{"uri":"/melonJS/docs/melonjs/Entity.html#recalc"},"IQ_iHplBOcDq0mZSADY-c":{"uri":"/melonJS/docs/melonjs/Entity.html#resize"},"frtlvLp1ffj1ktjT68js_":{"uri":"/melonJS/docs/melonjs/Entity.html#rotate"},"8Bl-bfZPTo7WfK70_hoIF":{"uri":"/melonJS/docs/melonjs/Entity.html#scale"},"Jl_CLzP8BWfQGl_bHNt0R":{"uri":"/melonJS/docs/melonjs/Entity.html#scaleV"},"MtkoqHP16mbz4qLpdMh-7":{"uri":"/melonJS/docs/melonjs/Entity.html#setOpacity"},"cc3qXoRbZvMfZNyYb9-gB":{"uri":"/melonJS/docs/melonjs/Entity.html#setShape"},"kOMyjLBthjvVbmb6ivpPk":{"uri":"/melonJS/docs/melonjs/Entity.html#setVertices"},"oZA-qrivwWQudJaXFjDo6":{"uri":"/melonJS/docs/melonjs/Entity.html#shift"},"2BlLB3FpUKLWEGkujbf8R":{"uri":"/melonJS/docs/melonjs/Entity.html#to2d"},"1K4GFl_B4rUx2pbIPbGJi":{"uri":"/melonJS/docs/melonjs/Entity.html#toIso"},"199dqxSL2xcflib3G1e-r":{"uri":"/melonJS/docs/melonjs/Entity.html#toPolygon"},"c2P85qPMAp7Z88GOPywir":{"uri":"/melonJS/docs/melonjs/Entity.html#transform"},"pRo8C9PbWULRUqqx-Mnjb":{"uri":"/melonJS/docs/melonjs/Entity.html#translate"},"6t7IU176fZzGpWbVtLOq_":{"uri":"/melonJS/docs/melonjs/Entity.html#union"},"EXoZp3FwkzWydh5XyEPI9":{"uri":"/melonJS/docs/melonjs/Entity.html#draw"},"YF4XYkTEqGB2tWjLL9mzA":{"uri":"/melonJS/docs/melonjs/Entity.html#postDraw"},"an4ertI-UWio_v1lRRCOQ":{"uri":"/melonJS/docs/melonjs/Entity.html#preDraw"},"JLqFKsoCOqXKGrzWYMmPX":{"uri":"/melonJS/docs/melonjs/Entity.html#update"},"9pI1oL8CpdrlzoWCiidgQ":{"uri":"/melonJS/docs/melonjs/Entity.html#onAnchorUpdate"},"3SZoKG_ZO6KuxDbrFOqPn":{"uri":"/melonJS/docs/melonjs/GLShader.html"},"nzqNTac1v7wIPMPdsLJSO":{"uri":"/melonJS/docs/melonjs/GLShader.html#attributes"},"JYNNInQ_46FTjYGjcj_-P":{"uri":"/melonJS/docs/melonjs/GLShader.html#gl"},"hjr49yu6B2vK4boMFfrTK":{"uri":"/melonJS/docs/melonjs/GLShader.html#program"},"K6zUPt8wdfXGZZhoe6k1T":{"uri":"/melonJS/docs/melonjs/GLShader.html#uniforms"},"oMZ8WuY5-NVsPBcVx532h":{"uri":"/melonJS/docs/melonjs/GLShader.html#vertex"},"NLYQx1n6JZiCig5CkM8kY":{"uri":"/melonJS/docs/melonjs/GLShader.html#vertex"},"FtXMbTJTSOw0fEsk3lteR":{"uri":"/melonJS/docs/melonjs/GLShader.html#bind"},"ZcMvEJC08ruuWxUGoiECv":{"uri":"/melonJS/docs/melonjs/GLShader.html#constructor"},"4J6uxjjUoODkIqPSkvirJ":{"uri":"/melonJS/docs/melonjs/GLShader.html#destroy"},"aeMnUJOoqQf4pgOgDO7ms":{"uri":"/melonJS/docs/melonjs/GLShader.html#getAttribLocation"},"bvjXSH7jW55XElMEVfEf-":{"uri":"/melonJS/docs/melonjs/GLShader.html#setUniform"},"Tu-3r20vKSN1KkrLEljf_":{"uri":"/melonJS/docs/melonjs/GLShader.html#setVertexAttributes"},"AZHkFvTvMwDlP6qiu69-H":{"uri":"/melonJS/docs/melonjs/GUI_Object.html"},"Gk2bwHyIuOpMbTRzGyo2W":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#alpha"},"UmYtxQoa59EvarBpJNOPP":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#alwaysUpdate"},"uieGENu8-qoj1MSiAsGto":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#ancestor"},"dYBosCNWNWqX7U96cfbt9":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#anchorPoint"},"bwFyATdQ_o3N9T_FZBFqj":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#animationpause"},"zxc3Zu7r7OJ0JXm67oZLq":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#animationspeed"},"bPUXu3_bSCixVeHKeylW8":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#autoTransform"},"7L3GgVzB7XpGE1Nl8E0L4":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#blendMode"},"izkFssgYJA5JEIJTfd8na":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#body"},"jN1JFhNxgUCySbjX37rkN":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#bottom"},"c_iyZuoOfWDplSZz0uHpi":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerX"},"RD68bXmh64X1Wn3N54e5L":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerY"},"-k-1PpcyxEq67duv0BVJh":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#currentTransform"},"A5t7WejKYNvpkQaAdi93F":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#floating"},"yM_RZtEtfGZEjkTP9d10U":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#GUID"},"35viE9u24LFH9QU40s90F":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#height"},"oB6Qb9CPrhB74Pv7Hmhvk":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#holdThreshold"},"f-3ttz5eSdokArVz-b4Ur":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#hover"},"FsSksC9q7Gw8Gv0qyZMcn":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#inViewport"},"dip-FnxwFje4NNCVTSlZr":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isClickable"},"Av87VjFdQSF6mAfw9B64u":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isDirty"},"0To8gsxJW1OZFqbun7bIb":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlippedX"},"Y5AcxeXMQFhzbAp29lI-3":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlippedY"},"HOQA87agHbrHHfcL3rXVN":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFloating"},"7vJ_M4wrcnqADVxvR6opA":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isHoldable"},"FQ3xabRv6OsNX04pYL48e":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isKinematic"},"WnxIgLXy4lu1jtJsmcgV9":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isPersistent"},"lOFj82f1Z5uJR9xjwbTWs":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#left"},"Itb1byH57j8e4yQLkCHHL":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#mask"},"ChVwnqSC65nE0evH5mstV":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#name"},"HqsljzlyTElUNoWq8QWm_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#offset"},"Gzw3dAxhWfk7jF9w1l2bk":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onVisibilityChange"},"saMpNretxnIwunriTWdVu":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#points"},"CQmLQSnY5UlN3G3B79G7m":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#pos"},"cmvHYMNDpJg7M_Ub-LdBg":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#right"},"oTRPxM9VCYTLlO_01238z":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#source"},"ySCouDKxjzQvLZl_9HDi2":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#tint"},"0Dj-cjY8kc95eLMpIwOf3":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#top"},"rjhQDWVhGilsqTDYTsA5y":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#updateWhenPaused"},"P3LKzc6FEZXWUrJbCm9WW":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#width"},"FfPJl2kct6bPXWAdiGCkZ":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#addAnimation"},"d7g995rsgpnSna55I_vr7":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#angleTo"},"9oHh-01bD57aguy99irUz":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerOn"},"2tDJ8zLk-TgoO3y5sK2yF":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#clone"},"G0CTvyzFjwxN2J01miYQ0":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#constructor"},"kYqiw1YwA6srPHPD8YMEP":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#contains"},"CV_TsBFiQG-NlXWoYxwKF":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#copy"},"aJi-tK8rtFYxe6KuWyBZE":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#distanceTo"},"f75qrBtPK_xfM373r3_Pt":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#equals"},"AUKZKeHXywB5ewrir_rmC":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flicker"},"BuvdkxzGxMNs3_S9_LYuG":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flipX"},"6xjtyNvnL2v-T3fKIN-9M":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flipY"},"jlJt0G9z3oSpbjcW3GTpc":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getAbsolutePosition"},"ypG2z3A-H1LCSKRCTio6-":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getBounds"},"Ko9Vdj5pwfoOkWB4Wfq4W":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getCurrentAnimationFrame"},"1Cs9J1PUizvCCi5Tg-Ygp":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getIndices"},"YTsyqN3B9YZDcTw_svbh_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getOpacity"},"GPO0fkMrA6XCybQXy-qUI":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isConvex"},"6_n7gYA7E5Tp77EFDdKGm":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isCurrentAnimation"},"h0ZEXHJigME-MQQnfspSB":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFinite"},"hZOnB9A36_V1fHwv60s7z":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlickering"},"oe5WWXLROS2vGOKmQQ5b7":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#lookAt"},"6QEZ_XDExR7ydTbxHbEXc":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onClick"},"1wbfC4YDKsrhwEhBOh7b8":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onCollision"},"E0XvXz3M_An5YORjPKey8":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onDestroyEvent"},"A85h1C9q69CTOpYIrE3Dw":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onHold"},"H_HzuA4iViNJvu8CenvsY":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onOut"},"GKE39gXtt0gRwwUrYmiaE":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onOver"},"m87dNN-C0jVJpIyx-JEv7":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onRelease"},"Q-mf0x1y5q7F4FMLLM9oQ":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#overlaps"},"02oRmDbWNlpH1rBstlgCH":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#recalc"},"cL0_W6c-9WAuxt077G9FW":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#resize"},"a1vwgzECFQ5pdAnTMqQHn":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#reverseAnimation"},"TR5LupIP_WZ2YSXxwYJm1":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#rotate"},"ueU_LCeQIQnFj-UiX4p2a":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#scale"},"VT9zsNq7dqs9XXauLbZdm":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#scaleV"},"jMC01drKUdHKGetpyQBB7":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setAnimationFrame"},"k8pS2eIvM5Ua7r6cAdqvu":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setCurrentAnimation"},"xQTTDs1ljLY8Mlk-bU0JG":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setOpacity"},"IkUezlkLIp7qvvpmumf-p":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setRegion"},"wlEAhM5FsOosL-oyUPymw":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setShape"},"t31iKrATLIMHGZ457zjQr":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setVertices"},"g6guujP3UyDVi9bGK8T8n":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#shift"},"3l0E6AgwKy2sNZboCZUbW":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#to2d"},"WW6Tqi7i7-ol2brXo1sF1":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#toIso"},"gsCVrZDYoR74HMM82q9TW":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#toPolygon"},"zJCI-NRCWxftqUAyCbwUt":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#transform"},"bgSuFYVR3wFnrnkXHuxFC":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#translate"},"A8krDEar38n-LAA8gLkLM":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#union"},"WpROGx958CFWP4CS8OaMI":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#draw"},"K_pypP-GYOD-0Yj3Frr3_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#postDraw"},"QwIHJaXoLpf2ERGD-JlHP":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#preDraw"},"g5HemChT2nkO1T4gLiluc":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#update"},"X-m1Wd4wyJ6ysxkjXoxSB":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onAnchorUpdate"},"F9vXhWwnPnlO6WCO5J0Uk":{"uri":"/melonJS/docs/melonjs/ImageLayer.html"},"PIvnEQzk5sQU3n0Sni88O":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#alpha"},"wmcZkofCYZ3C_dpLTjM0-":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#alwaysUpdate"},"Q9STzh_VOT9O-JSpKuXaD":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#ancestor"},"YFbMoI1lUDOKwSSqLmydm":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#anchorPoint"},"qqOXJiUpGrmKv07xOcfHJ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#autoTransform"},"Mz_oBq1o8_rX-WbXXwozx":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#blendMode"},"Q8JIvPS4MgbGHF8ztZXBm":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#body"},"ASxROSScMmqyhOZUXbhcD":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#bottom"},"VOqPR8rPdzHKbzpG8FodQ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerX"},"cDnfgYLnbiFnfktJIevsW":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerY"},"jBVVqZ7CLatPhY8qUOL1z":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#currentTransform"},"4eUE_qw0bgAZVRGldLaTa":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#floating"},"gRUzklfQvUF08TW3g0jk-":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#GUID"},"Gx2sCG8MyhMMxNYEI4x4G":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#height"},"zJ_Oo_JX3-vbogUqxDwCE":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#inViewport"},"H5Tin77IaAVQ-3N_HRzWt":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isDirty"},"ogeWcHk9K3zeWv7-XtZVE":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFlippedX"},"icyjNSzEFrQElJQFeRJSf":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFlippedY"},"7t1UWKr7ITqlS2TZm7ZRm":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFloating"},"CF5qAzooSa0-01b37B4Gi":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isKinematic"},"7RT_GG4dOgVfFOntvu178":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isPersistent"},"zI6J2iteGGxJp5sX7kied":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#left"},"g1jVtP88shaguOQHP4FHz":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#mask"},"vSO7HeCS7xj1Hw_gGW1mw":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#name"},"StMFeGqf7dK4Ck281nChT":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onVisibilityChange"},"YJChDALRbbRNo87PCC4ZS":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#points"},"tCgJF2Mm5sbyvRaNyPngn":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#pos"},"-_OZiUQ1eiRPEjeZt3OEn":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#ratio"},"wue8sbgvscgqkez_k85ca":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#repeat"},"Jx1vIXO2SS1rPhZLV_Bxu":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#right"},"IoV8tzExHKpfcSMkQezhr":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#tint"},"3iRT0yz_7FsQwSJsGhuQL":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#top"},"4oJd9hnc0zwxk2_1ieDrZ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#updateWhenPaused"},"FuF-dOvaTVwJIMAgR0nM3":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#width"},"aSXXCS5fgbvEK-Ar8Zz9p":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#angleTo"},"JnotZH23GxCw53wm-Z3MQ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerOn"},"WdJS4kyMmHHHCtPVr-Udo":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#clone"},"nsLgKhrRSUK_RKoE8QUYM":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#constructor"},"KoceSkERHPVEUGjkmiPZJ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#contains"},"8B74C_Ouy9ALe6J2rOMli":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#copy"},"QmNO53Dvi7Dwy3X2VUsZ6":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#distanceTo"},"3_kMN52-IPB77Isjyr_T0":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#equals"},"Sb1Wg4TENhcFjbwHcg8RW":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#flipX"},"RdIONxJoPekSjF01vuxhV":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#flipY"},"HMRYOdcr6krzIP-bc-m4x":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getAbsolutePosition"},"Ad5a8sl-sBVhjIOw3VfDD":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getBounds"},"4Q-sGv8uosahgv4VdA6W8":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getIndices"},"r5087_qyrEXE6AChhhHD7":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getOpacity"},"zeltq4TYHZfHdOB9T2pZC":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isConvex"},"0CO3O0BXrGamHIMMLwPfN":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFinite"},"hMvo6zCz1nnjc7VLej3H3":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#lookAt"},"Y2daNcKb5FDkXXtwGBngr":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onCollision"},"i3nWdU0RlhPIckMiKzV4a":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onDestroyEvent"},"DFyzDigBAiZfKi7ithNSo":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#overlaps"},"yleEGGqMZnwwwRAQnm4wn":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#recalc"},"4SuNuEFNMuFZO-0EBQoaz":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#resize"},"iUpAoZd-g1-1RMA_fY_3M":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#rotate"},"rnWUmF6mAmIIhOCEQJ6FA":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#scale"},"EcMZa1YHmzcjJKMzI8f80":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#scaleV"},"eYATGg8u1k1coPqeDCBtV":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setOpacity"},"eqe7eVC9qgRwLH2EqAUDU":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setShape"},"zc6ObRegy6R0mU4kZldB9":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setVertices"},"Bs6kSivNPQMnBHU7tx4W9":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#shift"},"jm6Lo9PcAlPIiHwgeKV13":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#to2d"},"AbMPwQ42lr3FWZMz41K5u":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#toIso"},"q7Yqpc-BkvQJzo40nIa4j":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#toPolygon"},"KvWRssHa8flF-EH5PeUtH":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#transform"},"roux7XWXlqDp1HeMHLueF":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#translate"},"ReaN7utRWgAgzOoglljgM":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#union"},"rUaz5x0FguJ8eXkJX1QUY":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#draw"},"qxdapzzgAETJAddOJa4hr":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#postDraw"},"jXVuepvzw7ONH3lxuZUOh":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#preDraw"},"IvMmS6DvzavSurh-3Q2MA":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#update"},"PSj0JM6Q79xL3nfQFj0tM":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onAnchorUpdate"},"VAsSNobKrhwwoRcMv2nTt":{"uri":"/melonJS/docs/melonjs/Light2d.html"},"G4a2IGKwkHqcvuKFc2WUD":{"uri":"/melonJS/docs/melonjs/Light2d.html#alpha"},"ZGiHUFr6QmhUiQVFe8bN_":{"uri":"/melonJS/docs/melonjs/Light2d.html#alwaysUpdate"},"m8CBaJh0oI0TjZd0Tuloa":{"uri":"/melonJS/docs/melonjs/Light2d.html#ancestor"},"C49KwXb6BXYvltvQiGb1d":{"uri":"/melonJS/docs/melonjs/Light2d.html#anchorPoint"},"bMILKEmNIjZ9Ipo94DmQC":{"uri":"/melonJS/docs/melonjs/Light2d.html#autoTransform"},"oiRQRbVtkTpmU_S0A13gE":{"uri":"/melonJS/docs/melonjs/Light2d.html#blendMode"},"DHW4IRhJh7kIlD-Hma5TR":{"uri":"/melonJS/docs/melonjs/Light2d.html#body"},"oouTYeP9CTnnWJVxAfV8R":{"uri":"/melonJS/docs/melonjs/Light2d.html#bottom"},"GDJjLj6mufVnnB_fDzZCF":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerX"},"WQv3N5T444Dhpdwfe-IuB":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerY"},"TcOuXGl7wA9HskUBO-0Bw":{"uri":"/melonJS/docs/melonjs/Light2d.html#color"},"XU9UoVFMRbsEx1DN2BwIh":{"uri":"/melonJS/docs/melonjs/Light2d.html#currentTransform"},"4ZcDAHGuplhV5elXf85mL":{"uri":"/melonJS/docs/melonjs/Light2d.html#floating"},"YetdCD_C4DFf00NoodvKv":{"uri":"/melonJS/docs/melonjs/Light2d.html#GUID"},"i_zHaP07NH9_CBhpGMlEr":{"uri":"/melonJS/docs/melonjs/Light2d.html#height"},"rpV1mvQzTidFcqH1fiJf8":{"uri":"/melonJS/docs/melonjs/Light2d.html#intensity"},"KW5q3dFWRFXBrcTs-HzLl":{"uri":"/melonJS/docs/melonjs/Light2d.html#inViewport"},"5ijMBApoEs3WxuAJfe-JK":{"uri":"/melonJS/docs/melonjs/Light2d.html#isDirty"},"FrioE8H9TY8v_23JUhjpL":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFlippedX"},"quiXF925ULliGU5Gvq3oj":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFlippedY"},"krN-wsA_kcJi2Qxbtb1sm":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFloating"},"miFGkiyyrP4uYQJs30581":{"uri":"/melonJS/docs/melonjs/Light2d.html#isKinematic"},"E4pvfAJ_wMVxamL7Z2r5m":{"uri":"/melonJS/docs/melonjs/Light2d.html#isPersistent"},"5jY3v-4KckdLIzTOdoAuA":{"uri":"/melonJS/docs/melonjs/Light2d.html#left"},"4qdHsEl7lG4EvUZA4pF-3":{"uri":"/melonJS/docs/melonjs/Light2d.html#mask"},"7La9nnPhOTljqxwgMiVjZ":{"uri":"/melonJS/docs/melonjs/Light2d.html#name"},"RqoruEZo7-GZUo_UEtikJ":{"uri":"/melonJS/docs/melonjs/Light2d.html#onVisibilityChange"},"fWf_JCnm5_m7YEvLML05b":{"uri":"/melonJS/docs/melonjs/Light2d.html#points"},"eDPJJfFVLC-UpuCFfeTzT":{"uri":"/melonJS/docs/melonjs/Light2d.html#pos"},"AdPkXBVGZ2I83dlEc24_7":{"uri":"/melonJS/docs/melonjs/Light2d.html#radius"},"2U8Hiyo_2IomvbLP--FQt":{"uri":"/melonJS/docs/melonjs/Light2d.html#right"},"uC8kCOAS0OO0TFocfbz74":{"uri":"/melonJS/docs/melonjs/Light2d.html#tint"},"Rg0lHtpiTJiT3kKc2tNzR":{"uri":"/melonJS/docs/melonjs/Light2d.html#top"},"TnQBaGAGvYEupd1K46CIP":{"uri":"/melonJS/docs/melonjs/Light2d.html#updateWhenPaused"},"wukRUGctwz3WT9zXt_T37":{"uri":"/melonJS/docs/melonjs/Light2d.html#width"},"Uw3ukhahSBjYzInUSJSlT":{"uri":"/melonJS/docs/melonjs/Light2d.html#angleTo"},"SHRIGpLJE131WGf5q-9av":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerOn"},"dlIQO_DK4CfKlHf5s5pqS":{"uri":"/melonJS/docs/melonjs/Light2d.html#clone"},"SnN1sH_ZNHYssCkQ1BXds":{"uri":"/melonJS/docs/melonjs/Light2d.html#constructor"},"tLUU1gg9m-vGNkB0yJ5vy":{"uri":"/melonJS/docs/melonjs/Light2d.html#contains"},"MFveORTcEwpTb9nSAW11n":{"uri":"/melonJS/docs/melonjs/Light2d.html#copy"},"dwdWPzOs57zyOAlqtJJ5c":{"uri":"/melonJS/docs/melonjs/Light2d.html#distanceTo"},"vTtF4EFTlTcX-t-2kxcD_":{"uri":"/melonJS/docs/melonjs/Light2d.html#equals"},"-r1TEjIX00XGeXAZQs50V":{"uri":"/melonJS/docs/melonjs/Light2d.html#flipX"},"Tf-9mUjtRI62_HzPiBPZf":{"uri":"/melonJS/docs/melonjs/Light2d.html#flipY"},"NwCPMOP00NsDcagMGNLCx":{"uri":"/melonJS/docs/melonjs/Light2d.html#getAbsolutePosition"},"XfoAha1om94HbsHt0CWqq":{"uri":"/melonJS/docs/melonjs/Light2d.html#getBounds"},"sRdARTs2t--TVOJAzH2BH":{"uri":"/melonJS/docs/melonjs/Light2d.html#getIndices"},"gi-nLWPHW2mSxqEk4ATGX":{"uri":"/melonJS/docs/melonjs/Light2d.html#getOpacity"},"r1x-3H5a1PxSvIT3xzPWe":{"uri":"/melonJS/docs/melonjs/Light2d.html#getVisibleArea"},"d94JAmtH9v2b4Bs_jRnnD":{"uri":"/melonJS/docs/melonjs/Light2d.html#isConvex"},"pGtDWzge8SwPJ6MJiCUv0":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFinite"},"CK_7K8dSUDfxAWJy0JRxT":{"uri":"/melonJS/docs/melonjs/Light2d.html#lookAt"},"YvLcZwlIJkAGtcA1K_SvL":{"uri":"/melonJS/docs/melonjs/Light2d.html#onCollision"},"r6n7vw2y61gf8bQ6lXIbS":{"uri":"/melonJS/docs/melonjs/Light2d.html#onDestroyEvent"},"BWIXPbipP9Lffzp2SBDjS":{"uri":"/melonJS/docs/melonjs/Light2d.html#overlaps"},"IhLE7-JMHV5f3wAv_NIgk":{"uri":"/melonJS/docs/melonjs/Light2d.html#recalc"},"ybXwpg7VxC2Y4QwpnCGSw":{"uri":"/melonJS/docs/melonjs/Light2d.html#resize"},"2GcZt28d6s1YcZC9hsWHp":{"uri":"/melonJS/docs/melonjs/Light2d.html#rotate"},"ms-88X7u6OypdI-1XIUhS":{"uri":"/melonJS/docs/melonjs/Light2d.html#scale"},"Xgnn8scM4Hdv6aKzrT9KX":{"uri":"/melonJS/docs/melonjs/Light2d.html#scaleV"},"sEK04ohOif1zmMogwzOEk":{"uri":"/melonJS/docs/melonjs/Light2d.html#setOpacity"},"CvUdlTm_r7_HkjHyPNfXB":{"uri":"/melonJS/docs/melonjs/Light2d.html#setShape"},"fsJMk4IjtwG86LdUO7kPr":{"uri":"/melonJS/docs/melonjs/Light2d.html#setVertices"},"Q52TNksCq7Gh_y913i1T7":{"uri":"/melonJS/docs/melonjs/Light2d.html#shift"},"DBrHyyb7P6NBfVnMEWfOT":{"uri":"/melonJS/docs/melonjs/Light2d.html#to2d"},"vtnvYdJbZCzRkW8YwOMVR":{"uri":"/melonJS/docs/melonjs/Light2d.html#toIso"},"MLxRRrLfwHaCSSqAjbfqK":{"uri":"/melonJS/docs/melonjs/Light2d.html#toPolygon"},"l0w3L8efv2v8E_niMQDw3":{"uri":"/melonJS/docs/melonjs/Light2d.html#transform"},"FBiUDcePVpLTv7u9b9uxp":{"uri":"/melonJS/docs/melonjs/Light2d.html#translate"},"uVKaqFNNGsIJ_lrFbRW0T":{"uri":"/melonJS/docs/melonjs/Light2d.html#union"},"w20aCJTev9YQ1FeqixjmA":{"uri":"/melonJS/docs/melonjs/Light2d.html#draw"},"SfBG4v4h8dsQscTVvezbP":{"uri":"/melonJS/docs/melonjs/Light2d.html#postDraw"},"Q4Y6wHHqV9EPUziw0tdH8":{"uri":"/melonJS/docs/melonjs/Light2d.html#preDraw"},"2HuL7fh0vN3G_EdyIoNey":{"uri":"/melonJS/docs/melonjs/Light2d.html#update"},"dNoXVY_vf-MYRAK5oaB1Q":{"uri":"/melonJS/docs/melonjs/Light2d.html#onAnchorUpdate"},"Ph9kmq3uQRvrym9Rpall8":{"uri":"/melonJS/docs/melonjs/Line.html"},"vM-qhjTSW7TkzMPXZStJa":{"uri":"/melonJS/docs/melonjs/Line.html#points"},"DmKjUKSV_E9H2kosxsPMT":{"uri":"/melonJS/docs/melonjs/Line.html#pos"},"CvvTu3s28QmJDQ_uK71Hx":{"uri":"/melonJS/docs/melonjs/Line.html#clone"},"tjEerk0Wvju0Sl1_xZXdw":{"uri":"/melonJS/docs/melonjs/Line.html#constructor"},"0Ro972byiLOVKPrQd1tdq":{"uri":"/melonJS/docs/melonjs/Line.html#contains"},"zwoN_Uh0FTgE9KYL5C89J":{"uri":"/melonJS/docs/melonjs/Line.html#getBounds"},"6cSQsQo76WsRs7Wf3Z_Um":{"uri":"/melonJS/docs/melonjs/Line.html#getIndices"},"lCXzKCM3u9LsX1bmiGpUA":{"uri":"/melonJS/docs/melonjs/Line.html#isConvex"},"5eK2UXRYjczBJVTCVBc2f":{"uri":"/melonJS/docs/melonjs/Line.html#recalc"},"-zJUwf7j3fMW8E4YFlzZh":{"uri":"/melonJS/docs/melonjs/Line.html#rotate"},"-pZvkXdkXEDQ-TnJN6yYO":{"uri":"/melonJS/docs/melonjs/Line.html#scale"},"F5w8QeEsHA7_XniuNbk6g":{"uri":"/melonJS/docs/melonjs/Line.html#scaleV"},"jyOZPcdZE6Qy6Hkb2YwHH":{"uri":"/melonJS/docs/melonjs/Line.html#setShape"},"cTvJOJl73IjEufeU6XQXt":{"uri":"/melonJS/docs/melonjs/Line.html#setVertices"},"my1JTo4V-1pSmy3R4UAWb":{"uri":"/melonJS/docs/melonjs/Line.html#shift"},"PikJhF3FW4PfcaUt-IiVE":{"uri":"/melonJS/docs/melonjs/Line.html#to2d"},"WccWajqHRS3oWYb869eKL":{"uri":"/melonJS/docs/melonjs/Line.html#toIso"},"uXeAeTcibiz6uTIEBGCbd":{"uri":"/melonJS/docs/melonjs/Line.html#transform"},"k2RT4_qWPBuMDbeYASu0d":{"uri":"/melonJS/docs/melonjs/Line.html#translate"},"nksnNdfq4f2pfjTg6xkV1":{"uri":"/melonJS/docs/melonjs/Line.html#contains"},"JdSe9NbAYhqS6IuXricsQ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html"},"Pjb6ZFmERiTA12PIV5Pnh":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#tx"},"5yBiWQcUvsdy_W-TUSGta":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#ty"},"dhz7hipdrFhC3g9MOvuYw":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#apply"},"94Z9aPufVWOMiSgJuL0fJ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#applyInverse"},"DtFyOcmKOex7GpBVQjN4h":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#clone"},"tHvbqOYWUyqdl6jwTVn5X":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#constructor"},"OSGYct1WkSJiqsEoWkGCK":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#copy"},"qNjvCdkI7ZUDHvEFL4u_b":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#equals"},"2525YiXYPh_WLKqo8tt2t":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#fromMat3d"},"wALEuyhEfiw78_w7_U1qU":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#identity"},"21MLMdVuOxdKIRaU2hgMv":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#invert"},"_9rtmEXLjCEX9NxsMAQqL":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#isIdentity"},"cnRSoakDGLnojOM7dXgWX":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#multiply"},"kviG1YLv4otQojkOe6Uk_":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#rotate"},"imPIxYp7LLTkYw-DJshho":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scale"},"0NwvN5SaLwiCVh6QyRT06":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleV"},"LzFiZIu_ftMpwWypay4z9":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleX"},"VaOd93hO0--004eIcbWcL":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleY"},"0YyioXtRSE9rHV9hrrJF9":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#setTransform"},"GRszaXIDqlJcB4dT1XZQf":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#toArray"},"3bCWBWniuG9NcFIF61aBu":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#toString"},"-ErolrPuKeeCY7vg_fAjJ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#translateV"},"v9RG_T9L-buwFPxXF9RqE":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#transpose"},"Xdufvcn_6BPYYOTVdAUKb":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#translate"},"wxyLp25rouJD87QK933UJ":{"uri":"/melonJS/docs/melonjs/Matrix3d.html"},"Bu14o2qI-_OygsMtmOyp_":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#tx"},"Kbwh4NUZekdXkvvBbboW-":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#ty"},"SWETkvWWTJToAokmkjtXa":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#tz"},"5llDnjwc2ymDFbqOPOC5P":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#apply"},"gXxKbslrAVPyWX1OXywE4":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#applyInverse"},"KGd4g7D61eLd7S8Ug2z9y":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#clone"},"MixVqbr7Rtgb_Sj8wcZpv":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#constructor"},"u_zvidwDuMlm4EzdPa7-w":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#copy"},"_CzS0MAO9x4vW5VJZJdMw":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#equals"},"mR5357JNpP_mQ_VN_IoI0":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#fromMat2d"},"2erspjI0daT8XwxyD8Sgj":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#identity"},"rRVsRwXHTV24FSlTgp4-1":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#invert"},"LdQfsP8VXEoSLZTJe5E5L":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#isIdentity"},"4tJQn0VLAaVeIfC-DUJ9j":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#multiply"},"IOeWARRn-v6JtKs1ZYI9K":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#ortho"},"02AUYGCAgfuYN_VEBveDg":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#rotate"},"eZlmKRzRaYbj1G76qXimi":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scale"},"wwDIqQI7Hvo3pdHca0V9r":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleV"},"RDBGotlmbdG_8KWN_yfLR":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleX"},"1GDi0BUFhKM3iBUddgU0f":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleY"},"J2RLy8fz52LHoEpF6RQrX":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#setTransform"},"Kh2OjGhcv9IEsrM2eaqE0":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#toArray"},"xcuQaa5-Vev8KcvoWE596":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#toString"},"tkKhUsBgjus3QreIt9Zdy":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#translateV"},"eLhZnQoO3bitSVwNQSnvZ":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#transpose"},"6cODW5NGy0c0Krg6oyCWz":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#translate"},"brfR366D4VKE_ge90s1iB":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html"},"AicXghka8vjZy4kY2dNsn":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#alpha"},"w7umUjnqiTc5V4C9HyrB-":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#alwaysUpdate"},"pAgku9QmaZwbofMv-hDxM":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#ancestor"},"L06T3ZKsOVmwWnMzBhtJZ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#anchorPoint"},"yczxi7ky8QihbEq3Ha4QS":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#animationpause"},"DKYnmVoERfu5LLK_1imTq":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#animationspeed"},"PE3DZ4S8hooBF_00IOXEn":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#autoTransform"},"4u7Q3hYjnw91SxWMqXIwh":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#blendMode"},"3ZNo5mQmg7HDBDQ3xzXur":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#body"},"1I-IIKZ9sLsTlYyJnXU0O":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#bottom"},"pPplpUXUgZyX_tnIySyJe":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerX"},"qfps956orNgAr57KSGTZc":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerY"},"XQ-MlSgxBMBlog9Wb3gu2":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#currentTransform"},"_-J01IRx5K2hFHKjCDRMy":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#floating"},"ZG8Fry6HsfjQok2CETW_P":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#GUID"},"x3yAQ5PzETJKytoi_cxi3":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#height"},"T4O9qiEd81ICQTMzoVRtn":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#inViewport"},"K6kc-Q8h48PR1Fefkhc9T":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isDirty"},"Z7pbPDXq8iMU5HW03ZfWj":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlippedX"},"gUWFDvxEfN6PB3IWeSoBM":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlippedY"},"5K6QYQcmpwtz3WuxM1tve":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFloating"},"XOAGrN-rZ6bktdORS2dnE":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isKinematic"},"f8r8bj2gdF0N1vCJY7G3h":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isPersistent"},"EwS-Ea1l286kbCgizsRE3":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#left"},"OKgJsAw3RHziVmjizSvXi":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#mask"},"HyuG-__X7Aq9uW9YrOI28":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#name"},"fUZnfI1ha1k_fnUkp5jLc":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#offset"},"ZrSu0w_uU5U1PE3PLKAf_":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onVisibilityChange"},"5GBSP3s52O4TPietPERO8":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#points"},"vIpvhqKG1VtfZ5u6YBiTi":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#pos"},"T5KrWKXSCh4RhtsdjMgOB":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#right"},"i3x3SRjhja6tiQq7iId1W":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#source"},"-02k-WoX1cWo5I7PJ08XD":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#tint"},"H88q03oD6ZZYx2yzucdbP":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#top"},"roJrs5sC1OCXwCWKCQMPe":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#updateWhenPaused"},"-HZ3Z2_3_VX9g0gwV_v9B":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#width"},"hEbrofoy1DwIfnNMO1GH_":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#addAnimation"},"-O9Y8F56Q0FHC3D2Cv47X":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#angleTo"},"dIVgQDG7WXPAKDUmvPIN1":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerOn"},"OmLUmRWZSKj4fLf7YcrLI":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#clone"},"sNpvvkzH9E72iX3Cm4LEg":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#constructor"},"hS6yaVQJI8L3KaSrj39aG":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#contains"},"Z8B6dO_PwX7zckSouHaSM":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#copy"},"ifLIwwSizMqyuqEanqTRF":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#distanceTo"},"Eq7rp-1cdcvqgJICiREvk":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#equals"},"2JerGGYdPuYHVafKvZH8y":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flicker"},"pPfL0d1sOmSSIWL36mOP8":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flipX"},"GpdrXTeXaWM8EMJjVRVHa":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flipY"},"YNrAvV3mwU-HnRbI9DVjB":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getAbsolutePosition"},"yRBexY_m8LxQo829yxiqF":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getBounds"},"Tsj01K1nWrBfQW6EAjD0k":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getCurrentAnimationFrame"},"kX7V1udZq9_YKTEf-WlmH":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getIndices"},"3twJcREpWnj428gzv4zEG":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getOpacity"},"TsQlYyqlB9n6AQOjEohld":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isConvex"},"b9_bA3Cco9KRorwUtfrWk":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isCurrentAnimation"},"2iGvKGW-Xt5c8k2JDRMhB":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFinite"},"rMcbcBHC_dV31JAwE2iLX":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlickering"},"0-NX674RMmRn-v0WEZRw1":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#lookAt"},"nTAPhQ1Nru9_v3HzhEFuu":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onCollision"},"WiOkWwB1juaApm9IK1zxi":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onDestroyEvent"},"RIM08MuCbu-UALVn6hRPy":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#overlaps"},"IbpZ2q3BduUPJEElwjc7g":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#recalc"},"454oeSC5XP3ykkrHDGTNq":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#resize"},"Sioscs5u2zdj9XoPWiD_D":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#reverseAnimation"},"6PK9r_K-wkbRr6QHOE5yq":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#rotate"},"UHZUj-aSCLebnMcUuK4jn":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#scale"},"o7FA228zW5RVBun61uHGz":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#scaleV"},"Q8c7Z_FnfNIuEYUUavpXa":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setAnimationFrame"},"tnSFKijK-A6x_ZQe0_uUo":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setCurrentAnimation"},"PcblG_bbW4JmYFL8gnRTQ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setOpacity"},"lfJ5TqI_iJie1mYQqZkJy":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setRegion"},"uN-zG7nl9YRnpoK1QcPY1":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setShape"},"PpWM3bPvzGQJPTirsT2fm":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setVertices"},"NOTFyxmLtpuSvQSpgIgHc":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#shift"},"GC-kDl9n3Rrnri1omeZ2u":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#to2d"},"--ljncYP1YyhpVPhjDWwH":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#toIso"},"FDORqbPoo7U31keZbaQJP":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#toPolygon"},"WFTBTq2oFNwdHX6xcRMD5":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#transform"},"cyrRUPctx3orkj9oNV0u8":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#translate"},"e7iYuaA35rchctINOsRCc":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#union"},"QM6XyW6WlrIMSmGJ2mMxy":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#draw"},"_Ha1gw1sCih3i9tZayDCY":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#postDraw"},"fodNh2HgOUc2TTwZZYeBM":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#preDraw"},"MLJzSZI4CPepImy8ltvn2":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#update"},"ZX7Md1qrhoXoD2iljOMBW":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onAnchorUpdate"},"Bsx-32ZegG8P6TuWVyj2E":{"uri":"/melonJS/docs/melonjs/ObjectPool.html"},"fbc_8aWYUcZJwb0qnTGIe":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#exists"},"7RkwlTta-4kIg-y4HEcQC":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#getInstanceCount"},"aBshWkEB_hOZCBFfG8nhV":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#poolable"},"epDsarz34jAuu3b4O50SJ":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#pull"},"NNcLgsMO-fDjYb8vk5Dgs":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#purge"},"4mUrHadLBoS-idzarF6Rs":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#push"},"fsecRba6QynLTe6OoH-8U":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#register"},"sjyUcS8Hy9cO5Xe4PtBOR":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html"},"GQbxzMfD6bhUx02tXSTGI":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#x"},"8O9DCGxUaMuV3nUlQL2hy":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#y"},"pEms5MJskEw8LjLcmIMl6":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#abs"},"MXzQjtpTIZsZjcfLbRzXJ":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#add"},"hE6E-A1KWqu3SdUVQHmjL":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#angle"},"OUujn_iTsmYo6V-VqlERk":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#ceil"},"hKLFBfr4F07NXu-Pnearf":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#ceilSelf"},"XpWhCADR07AuUBWEm5_Mq":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clamp"},"umostT-OT9T3bBvu25JAY":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clampSelf"},"As5-tnht-uZdMzCrSpxuX":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clone"},"jlsoOIztdQMo9-tovCcq_":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#constructor"},"SNswRSRYcCyutbRbC2Gr2":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#copy"},"7nIZrTCGClrnQvR-uUKV_":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#cross"},"PewWn3M9qzM8OoVNrb0ZO":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#distance"},"PzF7zWVl02nsfB_PGeZei":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#div"},"HVBdiYtjwhdUiRm0vAStr":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#dot"},"iDZ9aU6FjQGMDkFRuSRbX":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#equals"},"IZKjBUwCqWG4YJf3jpcTD":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#floor"},"a9ljiNO0nM2pz2IXrVdRw":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#floorSelf"},"ySsamJeJve3Ru5LPya3s1":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#length"},"qEMNRi8sVsWfPgAZXq2u9":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#length2"},"Uo9GNkoNZhcBgITu8Rw_h":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#lerp"},"pnrpa0Azl5Y_EgdtvPWYz":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#maxV"},"-3tzB_GewTkM98rcT26Re":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#minV"},"DSwEe7Rg3HJi8uHXhGaJO":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#negate"},"PjKZL3YAGWlETegLWycKJ":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#negateSelf"},"T352Pj_ibTdfNfnZ8b_Np":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#normalize"},"TT9Q8TckjJpMS9YCpPySF":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#perp"},"9UMl9Ch7hucbp8y5G5GKx":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#project"},"yYd2d6q7eworjAZTlMGkn":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#projectN"},"rRnfwBf87RZ8-ypwrvlpj":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#rotate"},"tZ36gY7Zi-YXc-H4Ia9gH":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#scale"},"PX3gPPgAduviDT8u-qamy":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#scaleV"},"NE26rGczoPwu3la76lLTP":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#set"},"x91R6SeHOutn8IkNyZeu9":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setCallback"},"btAty_fxbHd7YbCPmSkGM":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setMuted"},"BjCgI83qWn73cnaS4cgf9":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setV"},"xmmw_7NhsMcoCCFfrfkxY":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setZero"},"lpGOGM2d2L-JwKt4_JOXd":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#sub"},"v2wPSEM0ce5SBkYR5krZC":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#to2d"},"wmj2DHLb_oiYewFQLWZBL":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toIso"},"y0E4WhQ5VuSW7w95Xr-7C":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toString"},"yn1j1wsH1gOUGXAAUfDBe":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toVector2d"},"RaqPLARGtjEZ4nAaAQpAV":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html"},"KiYMytQn_zohCLHzJU8ie":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#x"},"VLLZ-72dPHAdjh_fYai5l":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#y"},"LgYq_CvZKPnk8iogGHTMK":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#z"},"VDoD6D2DIxIYjLMztAX0Q":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#abs"},"D0Rg3-R9DLlcZQSj5HvG-":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#add"},"2_8xF8ysi6Ut5MaIbK8vp":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#angle"},"7pTb2FeUyZtqD-u9RuSHk":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#ceil"},"Vw_Psv3iRDu-SFkA5SgfG":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#ceilSelf"},"No1-JAkAWvtr7lN3p6hmt":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clamp"},"Ofi7wtO5DtrgDzRhG9gaz":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clampSelf"},"CvvBoJ21s9xmpaA0_Pw3W":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clone"},"4nq5x_GtOCFZfv9T-NHa8":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#constructor"},"9ovBVOfcbDqUyXms5hSth":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#copy"},"5sG1MXTGKFvrDasPdn3Xc":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#cross"},"SbAYY8Ew8JSYYfLrKQbjn":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#distance"},"ScXb0xEPTS6c55HEo1zGI":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#div"},"vvwLrRuJg5wwz2gskv86G":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#dot"},"G5CVOdvZ1IWg41G6nEKmv":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#equals"},"puj_Jwc7j40OyYkCdF2JB":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#floor"},"ipAn7omo5GnU_rjupi09k":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#floorSelf"},"PRbdqdS-K27aWJXX3i7D_":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#length"},"7AMCp_diB6YD2fS0zFAFp":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#length2"},"vTmZ_ENnm6uOXByD1W4yF":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#lerp"},"0RFqcfSx2X-3LpI5faaho":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#maxV"},"xI-I9PlDOaT7TKOmopYzV":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#minV"},"VRlKR2jyDZqVuDGk9nUzC":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#negate"},"InDwQcv0dEG_HtUfEP_Zz":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#negateSelf"},"IMRQj9JNds3UNqg-NPOd-":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#normalize"},"2KeZai5rGYWPwRKE9mZE_":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#perp"},"aLxsQZN8wNbya_XObbf0r":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#project"},"3_p7IygMWmvxLfsd4nVU4":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#projectN"},"aWx4AtXhje3SnM_xJkDXA":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#rotate"},"8qCO1wHBvyYOopM4K2qmb":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#scale"},"DwSpd0PgGyJylgdr9eQ2i":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#scaleV"},"RwATnUMteMgXIVIqG0Aer":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#set"},"UgFXJpisArUnKVELP0uQi":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setCallback"},"ika8QeOzhKLq-cizhNglx":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setMuted"},"cdWl0bezvrSfnWSPsnzCB":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setV"},"iUyjl2LFVTUUaWbbhy9-2":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setZero"},"L1rOViflCwVdHf-hokfNc":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#sub"},"lvReYLZVKDGd4E9aoYXsM":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#to2d"},"BnezQ23XW3Uiq4qi54SR6":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toIso"},"eYRPylSs3Iw2Ai5IMbBrX":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toString"},"fhIJKemLgkOzSykUV7oK1":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toVector3d"},"eaMWDgGvQzi4ZQwPIwNpp":{"uri":"/melonJS/docs/melonjs/Particle.html"},"bqsVhtDspzFWOteQI-nMW":{"uri":"/melonJS/docs/melonjs/Particle.html#alpha"},"8ddJIflYvcM6cOBQF8O3g":{"uri":"/melonJS/docs/melonjs/Particle.html#alwaysUpdate"},"eK58U1PhrAl90eJMGgZ3H":{"uri":"/melonJS/docs/melonjs/Particle.html#ancestor"},"yG0Bo3wXXktUR2Kbywuye":{"uri":"/melonJS/docs/melonjs/Particle.html#anchorPoint"},"CwUwxwAHb0OkVHhHuhX-L":{"uri":"/melonJS/docs/melonjs/Particle.html#autoTransform"},"KuE81MQgVOsIxDvmP4YNL":{"uri":"/melonJS/docs/melonjs/Particle.html#blendMode"},"_q7xrRv0OY11RmJu_X09G":{"uri":"/melonJS/docs/melonjs/Particle.html#body"},"dQiAXZV0BUIz0ykzpkM_O":{"uri":"/melonJS/docs/melonjs/Particle.html#bottom"},"FNlabOGBnbc8WEtNQf-rU":{"uri":"/melonJS/docs/melonjs/Particle.html#centerX"},"AO-1hjcILA2rSXMqh2k49":{"uri":"/melonJS/docs/melonjs/Particle.html#centerY"},"0ZerOvoDDpRgAmTy9IThz":{"uri":"/melonJS/docs/melonjs/Particle.html#currentTransform"},"fij3SBNSEoZk4bxBqS5GK":{"uri":"/melonJS/docs/melonjs/Particle.html#floating"},"0t2An9E_0LjWjJZNkZ0JF":{"uri":"/melonJS/docs/melonjs/Particle.html#GUID"},"ZWRWzMIgHhAy-pgA_FpJ3":{"uri":"/melonJS/docs/melonjs/Particle.html#height"},"YHS7ySIYEF4TfBQbXx0Ou":{"uri":"/melonJS/docs/melonjs/Particle.html#inViewport"},"sdcdVw4VWbABVutOpJBNH":{"uri":"/melonJS/docs/melonjs/Particle.html#isDirty"},"lpMZixwIp6x6O8tXsttUM":{"uri":"/melonJS/docs/melonjs/Particle.html#isFlippedX"},"i1u6WO3Ex5knu9DnpS6rW":{"uri":"/melonJS/docs/melonjs/Particle.html#isFlippedY"},"VTU245DxkA3yBZtjl4Cfp":{"uri":"/melonJS/docs/melonjs/Particle.html#isFloating"},"SP_J7IX7iVjUV_9tJIz6S":{"uri":"/melonJS/docs/melonjs/Particle.html#isKinematic"},"Hd9MhJCwSC2_KHFt9KFfa":{"uri":"/melonJS/docs/melonjs/Particle.html#isPersistent"},"eMbIn0k_6OuLO2SU7o_5E":{"uri":"/melonJS/docs/melonjs/Particle.html#left"},"W3NKUmPiGGgDS7XTxkQyr":{"uri":"/melonJS/docs/melonjs/Particle.html#mask"},"2p1cbwoykD_7WmSu76IBx":{"uri":"/melonJS/docs/melonjs/Particle.html#name"},"Gkwtj0NMWGChnqjZZ5AyA":{"uri":"/melonJS/docs/melonjs/Particle.html#onVisibilityChange"},"En9-M2j-fd9mF9ue92IMO":{"uri":"/melonJS/docs/melonjs/Particle.html#points"},"0j2_cueTONEDuf6HLL8mD":{"uri":"/melonJS/docs/melonjs/Particle.html#pos"},"JdTP2p7sY_qt7PXPtMohO":{"uri":"/melonJS/docs/melonjs/Particle.html#right"},"zGuypKBDaUwIvncFDFGPs":{"uri":"/melonJS/docs/melonjs/Particle.html#tint"},"j0BwB7Pfnhq4uCDjdEcTZ":{"uri":"/melonJS/docs/melonjs/Particle.html#top"},"yBmt6IaWHx70ObiVVfTiG":{"uri":"/melonJS/docs/melonjs/Particle.html#updateWhenPaused"},"jfO-Hl4cmA_rDMZsTR81X":{"uri":"/melonJS/docs/melonjs/Particle.html#width"},"pVuICEE0nuIh5mibCMDWT":{"uri":"/melonJS/docs/melonjs/Particle.html#angleTo"},"EGZZ889vrugXcExeSLaSr":{"uri":"/melonJS/docs/melonjs/Particle.html#centerOn"},"Kq2N7uTjoWAOdpKijl_gU":{"uri":"/melonJS/docs/melonjs/Particle.html#clone"},"R__d5adoACQm3I1I-vde3":{"uri":"/melonJS/docs/melonjs/Particle.html#constructor"},"_CuqpoXjkPXPCo-yFR2ZB":{"uri":"/melonJS/docs/melonjs/Particle.html#contains"},"vTlb-U4qcdd-yv8c-2XWU":{"uri":"/melonJS/docs/melonjs/Particle.html#copy"},"qSUMWlsRZoHCw36qXGLl0":{"uri":"/melonJS/docs/melonjs/Particle.html#distanceTo"},"9JX8Sg1U-j43BLXKIp-oW":{"uri":"/melonJS/docs/melonjs/Particle.html#equals"},"8qENM_qXhG7blpMs5_edr":{"uri":"/melonJS/docs/melonjs/Particle.html#flipX"},"acnp44886rjeDQETEwRf-":{"uri":"/melonJS/docs/melonjs/Particle.html#flipY"},"BZ3zHY-YYOwXLQbdK64AQ":{"uri":"/melonJS/docs/melonjs/Particle.html#getAbsolutePosition"},"rAnyphLdsi9Txccp_L2yE":{"uri":"/melonJS/docs/melonjs/Particle.html#getBounds"},"AYqSbWl3xv1ulBRLWEJN7":{"uri":"/melonJS/docs/melonjs/Particle.html#getIndices"},"bfNSNgpNKqNazy71nxDtF":{"uri":"/melonJS/docs/melonjs/Particle.html#getOpacity"},"laymc3InndMlGERY3kU_e":{"uri":"/melonJS/docs/melonjs/Particle.html#isConvex"},"-2wKv2LXDfSn67foF2YQr":{"uri":"/melonJS/docs/melonjs/Particle.html#isFinite"},"bV9UPKsWyB1EDP5thJZQA":{"uri":"/melonJS/docs/melonjs/Particle.html#lookAt"},"itK1MZpftO6zG0q7bAhny":{"uri":"/melonJS/docs/melonjs/Particle.html#onCollision"},"o0VFRLRiyn9pwt9Yz-iEy":{"uri":"/melonJS/docs/melonjs/Particle.html#onDestroyEvent"},"CqKv-BMh_ZqefRDlR2pUa":{"uri":"/melonJS/docs/melonjs/Particle.html#overlaps"},"Vrp5UyqAI9XpOQJeQYkhm":{"uri":"/melonJS/docs/melonjs/Particle.html#recalc"},"lKvagDs7x7xCu0dShqQtv":{"uri":"/melonJS/docs/melonjs/Particle.html#resize"},"yyHJSoHC5TodpFxGfaoZ9":{"uri":"/melonJS/docs/melonjs/Particle.html#rotate"},"uT5VjTBbgiIH9GBICqWBJ":{"uri":"/melonJS/docs/melonjs/Particle.html#scale"},"eV-YKj8Q-yeobqDLQPIbE":{"uri":"/melonJS/docs/melonjs/Particle.html#scaleV"},"OeS7uI6i_gxhBd-WTsUn9":{"uri":"/melonJS/docs/melonjs/Particle.html#setOpacity"},"JdYnsktcEfG01LemVQr1y":{"uri":"/melonJS/docs/melonjs/Particle.html#setShape"},"TdhtzPaOCoEd72ahAg9bQ":{"uri":"/melonJS/docs/melonjs/Particle.html#setVertices"},"aU7taK9fj4-feNOmVCMg9":{"uri":"/melonJS/docs/melonjs/Particle.html#shift"},"WHeWd82mY9tOIBbMMpojA":{"uri":"/melonJS/docs/melonjs/Particle.html#to2d"},"A9Dcyhr7nm1jgIhzZ21-j":{"uri":"/melonJS/docs/melonjs/Particle.html#toIso"},"efIbd6CefFq2P7f4i88lT":{"uri":"/melonJS/docs/melonjs/Particle.html#toPolygon"},"OvIeTj6RJGGgqVAGCD3_-":{"uri":"/melonJS/docs/melonjs/Particle.html#transform"},"Irp3_29atZHH6kviWEbB4":{"uri":"/melonJS/docs/melonjs/Particle.html#translate"},"dNVNmKK_Lj-TPL6QJQK0N":{"uri":"/melonJS/docs/melonjs/Particle.html#union"},"jj9ggPm5kl92QjPCVCkRr":{"uri":"/melonJS/docs/melonjs/Particle.html#draw"},"D6nCnnPdhMGKujY4kqsRA":{"uri":"/melonJS/docs/melonjs/Particle.html#postDraw"},"WeSZcSp9ZtUv6geh5DN79":{"uri":"/melonJS/docs/melonjs/Particle.html#preDraw"},"svlOmPAXxDIh9r5pcXxyz":{"uri":"/melonJS/docs/melonjs/Particle.html#update"},"RqCNQ6J44qgdk6cK0wXRu":{"uri":"/melonJS/docs/melonjs/Particle.html#onAnchorUpdate"},"Mm_-h1B0pgGDzNEHjQQf8":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html"},"sPpESXfi8ohCu9zZMXFF3":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#alpha"},"eaizI-7If05btSeYPj2e6":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#alwaysUpdate"},"4BTqS5hHGq4i1Md9M0Y4c":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#ancestor"},"V7cUbQisVBcKX8zZi2Crf":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#anchorPoint"},"t0mpxSH4_xJV-IFl35A26":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoDepth"},"s99Vr7BgBSnxEz79Z8D48":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoSort"},"Tjk4_cc77Eu0g6bmdlM_2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoTransform"},"mXOxnx09vFgU44qwOpQtD":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#backgroundColor"},"_Cd6cQYjjJI0zr62da4xo":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#blendMode"},"nLTKsglUWLH-C_zGJ-GDW":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#body"},"eEd-kbthsqwMabuXRI0Fo":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#bottom"},"UkWGtneq9PXWjTZCDw7LY":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerX"},"Xe4Z5ehwNz4xkke8TEOjv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerY"},"DZHO5n6avawd1XmJE68rO":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#clipping"},"xIIxmfemiluqdjzT6cchY":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#currentTransform"},"BiocCgRqPk9EuZCmotFCD":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#enableChildBoundsUpdate"},"F12eLy4TNKY5zX0Yt_fS-":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#floating"},"K9sDooBBdP5TIIeDYw6tv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#GUID"},"Zj57A6nASJv32cN0krKqq":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#height"},"zvwdFQOxll8MYbfKEoxjq":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#inViewport"},"E_kNGFF6i9n5bNQhudGbe":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isDirty"},"TuYDdTc2UoB6fMoqWYGiy":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFlippedX"},"BEAbgdIfeQNGuNARPhVkZ":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFlippedY"},"LVSG4v2QG8y_y9HVORAvO":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFloating"},"-VqCjJrUKGKZkkPYO1Vpj":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isKinematic"},"N4CIA1Zji_Ev15g3vreKm":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isPersistent"},"nHmXW8MwdGfr6kZ0Ub1Ny":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#left"},"B8dr-wHlor34R9z6MBqrN":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#mask"},"K0U_WsKZaQhLw-d8syZ58":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#name"},"URHODlPAmwUsJEerMtcUC":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onVisibilityChange"},"XME4paef1ffDaMHQxhMAa":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#points"},"zoXYeubHdVFF4Ibjc6GfN":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#pos"},"hXVXLO4L9fdKbyM0fLkLP":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#right"},"d9wJsdPvJyQ30Lm_SWt8j":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#root"},"DRp2FdBEVmXJ2aZcAI5dx":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#settings"},"w0uJmAx0CcV3xn9LrHcc7":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#sortOn"},"rUi6eFaxqtLR2v45oFfgM":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#tint"},"wKGohGG5Cx6qhuBH8ICH6":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#top"},"fxTK8RokMYaqLiWqjTGU7":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#updateWhenPaused"},"MakABv_WzLVuE9fc5K07e":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#width"},"l5Qb1Q2Yc7cHcDLJElKgq":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#addChild"},"boAdKFfJyOLDq44bbaegZ":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#addChildAt"},"FyuXRK_DIQap7ctEWeOqd":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#angleTo"},"zuXDXYx21jQwCRNXRP21b":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#burstParticles"},"E9zv_sh0duan872bS1Ujs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerOn"},"euLvbDzrjvAv7k8EPVDW2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#clone"},"9h9rwYF3KiCvYRAHDiMbJ":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#constructor"},"_qDAOWUbsgqI7KYlS2Sls":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#contains"},"B12jTyaUGl-diTBn6GSde":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#copy"},"MxWfHrOkQPT0s1vAEtS7P":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#distanceTo"},"C05b0MiPDZNsWhG11k6nC":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#equals"},"Ba9D8eRcagpCqP2mQcYEE":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#flipX"},"qFyXFg7GyVQYNPyPiZ1d7":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#flipY"},"oTmM-bQipVKikA15Hk7Eb":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#forEach"},"vnjZAmW6ioORTf8J_vZcX":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getAbsolutePosition"},"3JDyyTjHytGpDXc32Uler":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getBounds"},"Khvy8W-OknSyX32pg1sLK":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildAt"},"WXgw1KEcX3VXv35UHaJ1b":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByGUID"},"YEqWveuN7_hmaelLoTeA4":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByName"},"xkqVP63OYf2VxpXMc_sVC":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByProp"},"kamBtiyBmaU8XHuXeU1XD":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByType"},"EHY0DXODX7_xipJr3m9gr":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildIndex"},"vDqOI63TprF8Pb4LvKMkU":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildren"},"bZ_5OEN0Ktb3UEyQQtFKs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getIndices"},"pABxf1TmzeONTtkGvFXcT":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getNextChild"},"G_savDiIUAHXveWLqD9f2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getOpacity"},"kxYn-GQa_ZaThElwa3xyg":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getRandomPointX"},"Sv-z0aE_BmbpddkXotMdw":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getRandomPointY"},"qWKmw6Hgn4xDrQSKJysM1":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#hasChild"},"z3-M4h-wa_TfrZzVQVbIw":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isConvex"},"lSBgCq_nBOZyBNGCumKC5":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFinite"},"2A6NOF0bPFhq4Wag3vpWl":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isRunning"},"jYEY0tQlfBQlvyvjJyh7H":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#lookAt"},"11Cdm82ZEB_jxLLafHf_X":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveDown"},"VrGWCLzkIxYruHfWgboob":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveToBottom"},"cxD-kg5kM3lUbEyt9fszn":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveToTop"},"vA_2-fL3hJS63svQp2n0q":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveUp"},"QYf8zcCBvDMBENGqnJDMd":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onChildChange"},"VjU0tpQvyTYw4HxseI3ci":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onCollision"},"kPLLpszoZpqiLsKBLmERD":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onDestroyEvent"},"E8yoHyaMmcFY_JlMGwxeb":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#overlaps"},"KwE4En9PQ6fmRSDPKMsO1":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#recalc"},"BOU203jt-5cckA6SHHc4u":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#removeChild"},"RTmek1hyYuqemP1_Jy-8I":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#removeChildNow"},"Hojb9DymoIA99Xh8gOpZC":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#reset"},"vAvKIIyHisjNaf2LLcu2z":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#resize"},"q6V-8RAkSA-RKQOBChLJr":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#rotate"},"Q6WJeqVDlzMpzq3SlopcS":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#scale"},"N2MjAUtRzCAFSFFCRota-":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#scaleV"},"d3DhS5rJqco2CiRwEybpv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setChildsProperty"},"1pWt3mD1YdeSBP3i4MAfa":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setOpacity"},"zVL2rv95Az6u-03SYfDXs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setShape"},"NjuXQedjPyVCbXOoQANBj":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setVertices"},"Nm5L8bNacA8y6K-RFhb0s":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#shift"},"C_ph_uE5Iqt2RNVYW4GRc":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#sort"},"oX4DZHKFfO0tOHho0k-3p":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#stopStream"},"u_ifBjtuZ85f_oTsRByPx":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#streamParticles"},"yVsleGU3rW8Vink6vGgCO":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#swapChildren"},"P-aAHf1Zkho8JGu9T6B2H":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#to2d"},"br_SuhdpNmey0YpdYM3_I":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#toIso"},"s7Ey1X7GNrxurzqAVUmlT":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#toPolygon"},"TYzqyHYKnszprCxDFjjOt":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#transform"},"hWkeY3DYrg50vajxlJ1JD":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#translate"},"IOgzsAxzYu728V9KBmElb":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#union"},"Kc7my3mHhlCD1eMuPzL_z":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#draw"},"bwEngf_DbQUQZROiqhW-C":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#postDraw"},"NNvPjlb9hZTs3N_KzJUJv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#preDraw"},"QYdaheT2oDNDDRMdMnc9z":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#update"},"W_tWFIKzJRS7HZX-Sn6vc":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isAttachedToRoot"},"beqvkP3VerjxhxKXTRnya":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onAnchorUpdate"},"aoWrGTvuF5HU2rBXK7dgZ":{"uri":"/melonJS/docs/melonjs/Path2D.html"},"mNZGNhuHul615ZgHcWpgi":{"uri":"/melonJS/docs/melonjs/Path2D.html#arcResolution"},"gt7BOYwPCqaIDednTfmaf":{"uri":"/melonJS/docs/melonjs/Path2D.html#points"},"dmOkpMssBRQZq78wITweQ":{"uri":"/melonJS/docs/melonjs/Path2D.html#arc"},"1g3T9dPkfXEs4Ds5dk6ki":{"uri":"/melonJS/docs/melonjs/Path2D.html#arcTo"},"7_f2GisVHIJhdQsHrKj3l":{"uri":"/melonJS/docs/melonjs/Path2D.html#beginPath"},"Xgih0x2oHLiDYbXDTGgJK":{"uri":"/melonJS/docs/melonjs/Path2D.html#closePath"},"FyYxh5ZlPSwyokosZ7mqq":{"uri":"/melonJS/docs/melonjs/Path2D.html#ellipse"},"9rKTVILP47GQ8-hlSZWhE":{"uri":"/melonJS/docs/melonjs/Path2D.html#lineTo"},"IgbffZPmK3kEdZ59G_TLY":{"uri":"/melonJS/docs/melonjs/Path2D.html#moveTo"},"sfXqK4gPVuOeEE1sgGMjs":{"uri":"/melonJS/docs/melonjs/Path2D.html#rect"},"wQ_x4VqTiAzRpNedKybzd":{"uri":"/melonJS/docs/melonjs/Path2D.html#roundRect"},"VzebU6ew2gXmj4TbktXL0":{"uri":"/melonJS/docs/melonjs/Path2D.html#triangulatePath"},"njH5uMqv7xRwDgTq0Wf9l":{"uri":"/melonJS/docs/melonjs/Pointer.html"},"6yceeJRVOt3JU_hE3F4sw":{"uri":"/melonJS/docs/melonjs/Pointer.html#bottom"},"0no-ELOkHNmdj1sjF9j_-":{"uri":"/melonJS/docs/melonjs/Pointer.html#button"},"MB_icgpbAbA9hHNZ7K_bt":{"uri":"/melonJS/docs/melonjs/Pointer.html#center"},"A247L0CIFcPAOr-tgxRBt":{"uri":"/melonJS/docs/melonjs/Pointer.html#centerX"},"tPhIMFLEhxlDaJtf6DtF_":{"uri":"/melonJS/docs/melonjs/Pointer.html#centerY"},"SB8ey8cqwBhTSZf-fgT0j":{"uri":"/melonJS/docs/melonjs/Pointer.html#clientX"},"vVQlOA24c0ZcUsDbw8IMX":{"uri":"/melonJS/docs/melonjs/Pointer.html#clientY"},"hxUOxHcSm4Saa8da2sUUU":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaMode"},"yevkBpdHo-ZQm-7F1DMm7":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaX"},"QMg-j5yn-O38HHhR3rEda":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaY"},"POqPkblX9gBbVPkj-wUhO":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaZ"},"J1JwyCKVVbrrTm78Jaqms":{"uri":"/melonJS/docs/melonjs/Pointer.html#event"},"M36ro2pa8iI_BtAjI2_iD":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameLocalX"},"iZdRG7oBf9aU_Z27ZhaUj":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameLocalY"},"rPCgWuLjCAVh6ytWM_Kbi":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameScreenX"},"Iv75DzFP-qterEFyxdpn4":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameScreenY"},"tm0PFLUga2114PJjEIqgq":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameWorldX"},"FMAZXUFiIPnf7EqshhcKW":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameWorldY"},"Uj8mUVsQdtKkaU9jOw1iH":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameX"},"hhJe_9qvkOPYFpXajv6B0":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameY"},"0jTYnagZvEsLO1Xzo5GIY":{"uri":"/melonJS/docs/melonjs/Pointer.html#isNormalized"},"5i56p_OLlGzUrUYbVHwPs":{"uri":"/melonJS/docs/melonjs/Pointer.html#isPrimary"},"Wg_C6jahwV46q_bF_Aget":{"uri":"/melonJS/docs/melonjs/Pointer.html#left"},"cIsZHCHH-R-k-b-nQwVNn":{"uri":"/melonJS/docs/melonjs/Pointer.html#LEFT"},"KBHq416fx1zPwasAAftq2":{"uri":"/melonJS/docs/melonjs/Pointer.html#locked"},"K8YBTbgswH6_OYGIfHyjA":{"uri":"/melonJS/docs/melonjs/Pointer.html#MIDDLE"},"_juWfKKm6V8L04r7fVjiv":{"uri":"/melonJS/docs/melonjs/Pointer.html#movementX"},"gkV0_U_trm6nq6oRlmeJ-":{"uri":"/melonJS/docs/melonjs/Pointer.html#movementY"},"t6v3cu_T9pm0bodt_sniz":{"uri":"/melonJS/docs/melonjs/Pointer.html#pageX"},"NeY9CvnMDOryg4uJd4HOn":{"uri":"/melonJS/docs/melonjs/Pointer.html#pageY"},"Mj9sIYd4RPq_4iZiaEkTe":{"uri":"/melonJS/docs/melonjs/Pointer.html#pointerId"},"LMGCgBLijYdlRlYsHYu7t":{"uri":"/melonJS/docs/melonjs/Pointer.html#right"},"YcHsD1sZAfkH3XLerZdI8":{"uri":"/melonJS/docs/melonjs/Pointer.html#RIGHT"},"CNbrHE30uaJ8Z8S8x8X7h":{"uri":"/melonJS/docs/melonjs/Pointer.html#top"},"pdUNADFwnCeYmlh4j9DXv":{"uri":"/melonJS/docs/melonjs/Pointer.html#type"},"u1dV8gwDkfxEnElSfoJRK":{"uri":"/melonJS/docs/melonjs/Pointer.html#width"},"g0SEXHSI06LbGNN3sp1-g":{"uri":"/melonJS/docs/melonjs/Pointer.html#x"},"fcJ_nG2YA6bRGFhidGsCJ":{"uri":"/melonJS/docs/melonjs/Pointer.html#y"},"QrbUrwZSzf9IHEO8yY_H9":{"uri":"/melonJS/docs/melonjs/Pointer.html#add"},"T0Wa8lRf1SG9gEshuTNRN":{"uri":"/melonJS/docs/melonjs/Pointer.html#addBounds"},"rkNkgssNIjFaenCqCwbCz":{"uri":"/melonJS/docs/melonjs/Pointer.html#addFrame"},"qhiam-qPKnoMVYAZ75jZy":{"uri":"/melonJS/docs/melonjs/Pointer.html#addPoint"},"POWYGftDD6FDOH526D1YT":{"uri":"/melonJS/docs/melonjs/Pointer.html#clear"},"xhwvV_T86NrvtNHt-CV4-":{"uri":"/melonJS/docs/melonjs/Pointer.html#clone"},"7WOctC-EK_NQ_mMaYEa6O":{"uri":"/melonJS/docs/melonjs/Pointer.html#contains"},"Pi2rwQpOJso8A1C-as0iu":{"uri":"/melonJS/docs/melonjs/Pointer.html#isFinite"},"pO3FmLMiGnBEjeXGWdJny":{"uri":"/melonJS/docs/melonjs/Pointer.html#overlaps"},"HX-Enl7hx4DhYUtp1McF1":{"uri":"/melonJS/docs/melonjs/Pointer.html#setMinMax"},"am-_MvPV6IGERjYCvhVBM":{"uri":"/melonJS/docs/melonjs/Pointer.html#shift"},"jjK3lC_i1deqS1qGpmP3e":{"uri":"/melonJS/docs/melonjs/Pointer.html#toPolygon"},"CT4EVc_8GgOgE-ih2_KQN":{"uri":"/melonJS/docs/melonjs/Pointer.html#translate"},"BCeeNU8yYZOx1ZXRvOQE5":{"uri":"/melonJS/docs/melonjs/Pointer.html#update"},"S9vEIDHVt-Poj-Xtcl4nZ":{"uri":"/melonJS/docs/melonjs/Pointer.html#set"},"HeKjvl0mkookljGjH1pT9":{"uri":"/melonJS/docs/melonjs/Polygon.html"},"wBQwa1n4vWCRJk-ZYKnGX":{"uri":"/melonJS/docs/melonjs/Polygon.html#points"},"nQhiRYfcuCaZZc605nNlx":{"uri":"/melonJS/docs/melonjs/Polygon.html#pos"},"_QEdvkajUF_RGIlnbimTM":{"uri":"/melonJS/docs/melonjs/Polygon.html#clone"},"dEgmh0RyeZyha4RohgyI5":{"uri":"/melonJS/docs/melonjs/Polygon.html#constructor"},"Ygr4ttOJOVULTEXi-k0MO":{"uri":"/melonJS/docs/melonjs/Polygon.html#contains"},"86Yum-Ws2PjyOgTUNlVzi":{"uri":"/melonJS/docs/melonjs/Polygon.html#getBounds"},"EE8X-Fsg_JpphWYRGOO0u":{"uri":"/melonJS/docs/melonjs/Polygon.html#getIndices"},"e-GkGEQI38x5JI3Zl8QlZ":{"uri":"/melonJS/docs/melonjs/Polygon.html#isConvex"},"c5KymQG1_GQrabgsaba2o":{"uri":"/melonJS/docs/melonjs/Polygon.html#recalc"},"UfwA2PNlrScVK9HOrvZhQ":{"uri":"/melonJS/docs/melonjs/Polygon.html#rotate"},"H2IOsV7mRmc6jUaIT3wS-":{"uri":"/melonJS/docs/melonjs/Polygon.html#scale"},"XGLVb0RwQ73DZ5FuHe7Fi":{"uri":"/melonJS/docs/melonjs/Polygon.html#scaleV"},"-jn53OBLxBPuFRE1sQWiI":{"uri":"/melonJS/docs/melonjs/Polygon.html#setShape"},"cwq3DePdFd8a2rUGr3Hgw":{"uri":"/melonJS/docs/melonjs/Polygon.html#setVertices"},"Bg8oBY1hM0mKHZ4DCPxow":{"uri":"/melonJS/docs/melonjs/Polygon.html#shift"},"oMQj1dQxTt2T2ZdEaFfxi":{"uri":"/melonJS/docs/melonjs/Polygon.html#to2d"},"hIxODqmguWXxpIQCUR9NK":{"uri":"/melonJS/docs/melonjs/Polygon.html#toIso"},"CABtDajrl-rBZezcGT2Ro":{"uri":"/melonJS/docs/melonjs/Polygon.html#transform"},"ugRvrzdnI-YBCP_LgDvu7":{"uri":"/melonJS/docs/melonjs/Polygon.html#translate"},"BhsCdnJkz4jWjL4B-VLgw":{"uri":"/melonJS/docs/melonjs/Polygon.html#contains"},"lqolnaF15qIPJlPGzVkXm":{"uri":"/melonJS/docs/melonjs/Polygon.html#shift"},"WMdpeiSpsB1mtlYhZVWBM":{"uri":"/melonJS/docs/melonjs/Polygon.html#translate"},"BYrhxPzU_99BszcUnDQVg":{"uri":"/melonJS/docs/melonjs/QuadTree.html"},"17VmS9nsv2aHzfJTwwmJ_":{"uri":"/melonJS/docs/melonjs/QuadTree.html#clear"},"36no7sL-1s6oQ0dCs0icr":{"uri":"/melonJS/docs/melonjs/QuadTree.html#constructor"},"S1wLfHZxlz-Qyt_VlTWqf":{"uri":"/melonJS/docs/melonjs/QuadTree.html#hasChildren"},"CcczHE3NyDMD3RSOAoMH0":{"uri":"/melonJS/docs/melonjs/QuadTree.html#insert"},"lSDGPn-OIIj8ySD8i0SpT":{"uri":"/melonJS/docs/melonjs/QuadTree.html#insertContainer"},"gYEALmywdG-jJGiNUsOvw":{"uri":"/melonJS/docs/melonjs/QuadTree.html#isPrunable"},"VdVlfAsF27l_6lar68U8Q":{"uri":"/melonJS/docs/melonjs/QuadTree.html#remove"},"pDS4xVVBtKNVe4BtJdltd":{"uri":"/melonJS/docs/melonjs/QuadTree.html#retrieve"},"5DRHoZaIRhAG3B6Tip9ge":{"uri":"/melonJS/docs/melonjs/Rect.html"},"L2mlZLUkpHDuCiq_uc3uy":{"uri":"/melonJS/docs/melonjs/Rect.html#bottom"},"GC7gzglJDVaPufzOQPM6R":{"uri":"/melonJS/docs/melonjs/Rect.html#centerX"},"IesLNHi6hSupAEnH1C9yR":{"uri":"/melonJS/docs/melonjs/Rect.html#centerY"},"AMMdTqNUn44NF7rOr9aqy":{"uri":"/melonJS/docs/melonjs/Rect.html#height"},"FAKRjQWkl2t8uYRWLW8GO":{"uri":"/melonJS/docs/melonjs/Rect.html#left"},"k1qIbTv-Y7wjd5roqhtGo":{"uri":"/melonJS/docs/melonjs/Rect.html#points"},"c3ZDQMFwQhSRMZ4z5HDbe":{"uri":"/melonJS/docs/melonjs/Rect.html#pos"},"dkjn2cUlpzWzTrWRTxfGV":{"uri":"/melonJS/docs/melonjs/Rect.html#right"},"ziIaWuV9Kfl692IbfzPyi":{"uri":"/melonJS/docs/melonjs/Rect.html#top"},"TToPlAL3nojbXrTQRdXII":{"uri":"/melonJS/docs/melonjs/Rect.html#width"},"k57aqxD18eOGbzMfisS_J":{"uri":"/melonJS/docs/melonjs/Rect.html#centerOn"},"sSjXv1Y7UgxkMeS37UvNu":{"uri":"/melonJS/docs/melonjs/Rect.html#clone"},"-wlfSOFneYs7ogyOLBiyr":{"uri":"/melonJS/docs/melonjs/Rect.html#constructor"},"UcgGG8-cLhjx4Wpc58u01":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"BmYbisANQDy3LaE2Gha_V":{"uri":"/melonJS/docs/melonjs/Rect.html#copy"},"LIqwkanIJKXpI3AhxOswm":{"uri":"/melonJS/docs/melonjs/Rect.html#equals"},"fv91xbaGaWWCBLoTnAcHS":{"uri":"/melonJS/docs/melonjs/Rect.html#getBounds"},"BDKJNqTgaKiOadWghXD-5":{"uri":"/melonJS/docs/melonjs/Rect.html#getIndices"},"AuqjSwjh1lTqpyEJVhJK1":{"uri":"/melonJS/docs/melonjs/Rect.html#isConvex"},"Wa1VFFV0rab8WtVXxoz5l":{"uri":"/melonJS/docs/melonjs/Rect.html#isFinite"},"OWG2k9B8GBV9dpnPe8E5T":{"uri":"/melonJS/docs/melonjs/Rect.html#overlaps"},"jv0bZvbkWD3Ybvpur0zle":{"uri":"/melonJS/docs/melonjs/Rect.html#recalc"},"XnTmdea7nUq_imbr11S8H":{"uri":"/melonJS/docs/melonjs/Rect.html#resize"},"_jmSM9gpiDLQg8sTm-lnx":{"uri":"/melonJS/docs/melonjs/Rect.html#rotate"},"8k4skmx-r6I_BZ_RnVaId":{"uri":"/melonJS/docs/melonjs/Rect.html#scale"},"JZ3z3aPTrn115H5-tLorK":{"uri":"/melonJS/docs/melonjs/Rect.html#scaleV"},"6D_6E7AexwrXofNlK63J1":{"uri":"/melonJS/docs/melonjs/Rect.html#setShape"},"-1eNov4DCelIOjCtDkPey":{"uri":"/melonJS/docs/melonjs/Rect.html#setVertices"},"87yxXp46AVwWImnDBVh3F":{"uri":"/melonJS/docs/melonjs/Rect.html#shift"},"lsnFn38sujqBJh_X38chA":{"uri":"/melonJS/docs/melonjs/Rect.html#to2d"},"dyCFygTdk7HsMY6K_LphK":{"uri":"/melonJS/docs/melonjs/Rect.html#toIso"},"fmRNjLwkDDB_dftVJsFWP":{"uri":"/melonJS/docs/melonjs/Rect.html#toPolygon"},"A17O6prBnkdNu7FEOW0YJ":{"uri":"/melonJS/docs/melonjs/Rect.html#transform"},"npIj6z2Vxozrrv-IzmTwx":{"uri":"/melonJS/docs/melonjs/Rect.html#translate"},"D6wtpNu_bcpUqKiNNuHb6":{"uri":"/melonJS/docs/melonjs/Rect.html#union"},"ReQNzlF0H7HexbmZqoSKa":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"ggaNawdRGjxtidl2bIm-_":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"7Y1pUZc7D3wKaDHJSOh3r":{"uri":"/melonJS/docs/melonjs/Renderable.html"},"SORHoUhwlHleJC6AoaaXC":{"uri":"/melonJS/docs/melonjs/Renderable.html#alpha"},"boL-iDwFbF-5soUedpq2K":{"uri":"/melonJS/docs/melonjs/Renderable.html#alwaysUpdate"},"OJGaNFpRJaU5kftizUspQ":{"uri":"/melonJS/docs/melonjs/Renderable.html#ancestor"},"JRYk4Vl1a_iqlTugRKcGb":{"uri":"/melonJS/docs/melonjs/Renderable.html#anchorPoint"},"1PZTHBE50bJFNBdbGS96X":{"uri":"/melonJS/docs/melonjs/Renderable.html#autoTransform"},"bJRuC0-c7E6a9CqG_-ACk":{"uri":"/melonJS/docs/melonjs/Renderable.html#blendMode"},"i1plLbabUxeHsCfzRo1yG":{"uri":"/melonJS/docs/melonjs/Renderable.html#body"},"WJRqlLM-HDjL1brr3wgmp":{"uri":"/melonJS/docs/melonjs/Renderable.html#bottom"},"WVZyW_mstoKYi6ARg6Pbf":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerX"},"o2mJIbLQaJyznNPHnbUgR":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerY"},"xcl_Ies8P5kj-JTHn3lKT":{"uri":"/melonJS/docs/melonjs/Renderable.html#currentTransform"},"xXRakNpE-UGT9OC4h4WBZ":{"uri":"/melonJS/docs/melonjs/Renderable.html#floating"},"bG-EWX9xxRzxMBh4RdpAX":{"uri":"/melonJS/docs/melonjs/Renderable.html#GUID"},"jC9S4iR_06CCUY42Zjb36":{"uri":"/melonJS/docs/melonjs/Renderable.html#height"},"4pPal5wqX7tPtF7xJIgxF":{"uri":"/melonJS/docs/melonjs/Renderable.html#inViewport"},"MhDKpXWCc6eFcGSSc1XfX":{"uri":"/melonJS/docs/melonjs/Renderable.html#isDirty"},"T3SNjjABsji_4jW21tN0t":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFlippedX"},"SPg4A5zQAtBFRpTdBbahm":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFlippedY"},"DRQWW3kE-c8QwsTy-KYsT":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFloating"},"IedgGbfElJjrr2UGXvs64":{"uri":"/melonJS/docs/melonjs/Renderable.html#isKinematic"},"fKUbHZZESaEx71wLb0vUI":{"uri":"/melonJS/docs/melonjs/Renderable.html#isPersistent"},"cZwhifo1i9TQzShgsDI4S":{"uri":"/melonJS/docs/melonjs/Renderable.html#left"},"hmJ54AYMLzA1xz8ljHGmX":{"uri":"/melonJS/docs/melonjs/Renderable.html#mask"},"e91mtO1z9xPSe_OOPaiGu":{"uri":"/melonJS/docs/melonjs/Renderable.html#name"},"F2wbj4VhdGG1A4ph4CWJM":{"uri":"/melonJS/docs/melonjs/Renderable.html#onVisibilityChange"},"BllEWpBfbnB3jNdLOOjH3":{"uri":"/melonJS/docs/melonjs/Renderable.html#points"},"FDD1lIoSmwLg9QIDm5w--":{"uri":"/melonJS/docs/melonjs/Renderable.html#pos"},"4MNFQMO9wiKhA8Xn3t-ah":{"uri":"/melonJS/docs/melonjs/Renderable.html#right"},"geQ2myuNoJN7-AC7pQHK7":{"uri":"/melonJS/docs/melonjs/Renderable.html#tint"},"rdPSh3_DM2gyAnlXxsdiS":{"uri":"/melonJS/docs/melonjs/Renderable.html#top"},"EBZA5KX2vdfVJUdJA7NUg":{"uri":"/melonJS/docs/melonjs/Renderable.html#updateWhenPaused"},"ZJbEc_e36W3icMJlmDdi7":{"uri":"/melonJS/docs/melonjs/Renderable.html#width"},"hYTdd1V_S2su620bfIUmh":{"uri":"/melonJS/docs/melonjs/Renderable.html#angleTo"},"Bsu25m1HtcHMKxCqiomTV":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerOn"},"Pv0Z8fZEPSMlEPCQFKb6u":{"uri":"/melonJS/docs/melonjs/Renderable.html#clone"},"q2JOZ3I_dQyFnks9MdbmC":{"uri":"/melonJS/docs/melonjs/Renderable.html#constructor"},"bBbf7clMS15XN0JLJ4DP4":{"uri":"/melonJS/docs/melonjs/Renderable.html#contains"},"RTOZmaK0eaRsMPeQhCsoY":{"uri":"/melonJS/docs/melonjs/Renderable.html#copy"},"h502sHxVm6BvG74M9uCKR":{"uri":"/melonJS/docs/melonjs/Renderable.html#distanceTo"},"D48VU-YrMEr-Qf4yoFGLr":{"uri":"/melonJS/docs/melonjs/Renderable.html#equals"},"wKsJ324Wl_fxugAbalera":{"uri":"/melonJS/docs/melonjs/Renderable.html#flipX"},"7ySO958cXhsYdNkjdpIAZ":{"uri":"/melonJS/docs/melonjs/Renderable.html#flipY"},"TiHoJuOnDrplIMPMwCqko":{"uri":"/melonJS/docs/melonjs/Renderable.html#getAbsolutePosition"},"Zg31r9Hq43zRA4qa_28Sj":{"uri":"/melonJS/docs/melonjs/Renderable.html#getBounds"},"gNUqPMB5pvi7CK_96YPYi":{"uri":"/melonJS/docs/melonjs/Renderable.html#getIndices"},"0jARq91YViwjBS_wot0i4":{"uri":"/melonJS/docs/melonjs/Renderable.html#getOpacity"},"RwW6ePAZYk70mq93AfGvU":{"uri":"/melonJS/docs/melonjs/Renderable.html#isConvex"},"W8gOE_Q-yCipDeziV9Bj0":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFinite"},"QKXGvPdDJJGwxN84l-6Nk":{"uri":"/melonJS/docs/melonjs/Renderable.html#lookAt"},"lP68oxkZZTxWs0kfconF6":{"uri":"/melonJS/docs/melonjs/Renderable.html#onCollision"},"5MP3PhsFb4SigHfs66-M3":{"uri":"/melonJS/docs/melonjs/Renderable.html#onDestroyEvent"},"PzBh6XcReRNM9cG0Wf_yN":{"uri":"/melonJS/docs/melonjs/Renderable.html#overlaps"},"tUN9pNLuwQNX9S71RpI_6":{"uri":"/melonJS/docs/melonjs/Renderable.html#recalc"},"00_P_4Cq4RJJDTQxnC6na":{"uri":"/melonJS/docs/melonjs/Renderable.html#resize"},"XIPDx4e9PGcdibfr5YCqS":{"uri":"/melonJS/docs/melonjs/Renderable.html#rotate"},"5-2ep7gQ4qADkfZdLaLAE":{"uri":"/melonJS/docs/melonjs/Renderable.html#scale"},"NZkf0_i-uSt5JVZb8t15G":{"uri":"/melonJS/docs/melonjs/Renderable.html#scaleV"},"58yFJwNJiHFfeS7zKwcvH":{"uri":"/melonJS/docs/melonjs/Renderable.html#setOpacity"},"nBlRgiYKnyNLazwCfwbBy":{"uri":"/melonJS/docs/melonjs/Renderable.html#setShape"},"g1Z_t24Ubn2V2kOvnXzFl":{"uri":"/melonJS/docs/melonjs/Renderable.html#setVertices"},"KfdMoMQwTAE_g_qEDLZpT":{"uri":"/melonJS/docs/melonjs/Renderable.html#shift"},"22DRc4LVUZWRXC6LlVi1Q":{"uri":"/melonJS/docs/melonjs/Renderable.html#to2d"},"EI2p2guH9ypt5-XIzbLZH":{"uri":"/melonJS/docs/melonjs/Renderable.html#toIso"},"TkJGSyG9k6eyJ_HBsFLZx":{"uri":"/melonJS/docs/melonjs/Renderable.html#toPolygon"},"OlynXKu5IC1-DiJC--IuD":{"uri":"/melonJS/docs/melonjs/Renderable.html#transform"},"VXs8LqmxGEcVLT-Qc5JZn":{"uri":"/melonJS/docs/melonjs/Renderable.html#translate"},"s-vmwuH6_wJc6aAUpzVOF":{"uri":"/melonJS/docs/melonjs/Renderable.html#union"},"rQ7AsOrTlKnlubG-2is_l":{"uri":"/melonJS/docs/melonjs/Renderable.html#draw"},"HUSlMpfMtFyo5VJK_dw-O":{"uri":"/melonJS/docs/melonjs/Renderable.html#postDraw"},"ZNTWe_ui29mVlJvfjBChA":{"uri":"/melonJS/docs/melonjs/Renderable.html#preDraw"},"hoiQschhC03qVJ4AF7l5J":{"uri":"/melonJS/docs/melonjs/Renderable.html#update"},"DtcBUeVNifwH0JPSPXCZO":{"uri":"/melonJS/docs/melonjs/Renderable.html#onAnchorUpdate"},"PMQbiqu2yxPjmH6iYAwru":{"uri":"/melonJS/docs/melonjs/Renderer.html"},"UFTW56r1k1GKt9MAC6Mqf":{"uri":"/melonJS/docs/melonjs/Renderer/Texture.html"},"CUX7wZIQIeRK0Abf0h3Sw":{"uri":"/melonJS/docs/melonjs/Renderer/Texture.html#constructor"},"xgowrDSjpFLwDTI1VJbi1":{"uri":"/melonJS/docs/melonjs/Renderer.html#isContextValid"},"RMY0EiXcshidKZ3bdjxAy":{"uri":"/melonJS/docs/melonjs/Renderer.html#path2D"},"xFAlKeQy0Btby0DBPEYPR":{"uri":"/melonJS/docs/melonjs/Renderer.html#settings"},"Vl7DB2jpdxLBZg-WfOxq-":{"uri":"/melonJS/docs/melonjs/Renderer.html#clear"},"WOrFyWNhmN4MwrsvTjU7w":{"uri":"/melonJS/docs/melonjs/Renderer.html#clearMask"},"gtM8J5wcD7dtff7_7C6Fu":{"uri":"/melonJS/docs/melonjs/Renderer.html#clearTint"},"QIuYEAKEdOPKNbX7qNbXn":{"uri":"/melonJS/docs/melonjs/Renderer.html#constructor"},"IJakHFJCIb4DiinGlwklJ":{"uri":"/melonJS/docs/melonjs/Renderer.html#fill"},"PgatKuE5EyiQDqZu6XZzT":{"uri":"/melonJS/docs/melonjs/Renderer.html#getBlendMode"},"SadveD0W6ot4IjYZQi-eK":{"uri":"/melonJS/docs/melonjs/Renderer.html#getCanvas"},"uHSO4nrWQ8eMXP9DrqoaP":{"uri":"/melonJS/docs/melonjs/Renderer.html#getColor"},"8TDTEUJOyCBQ71XVIAmSz":{"uri":"/melonJS/docs/melonjs/Renderer.html#getContext2d"},"nZfgvEOs6CGEvIYJYyG0J":{"uri":"/melonJS/docs/melonjs/Renderer.html#getHeight"},"L4qxIvfTz4bGdkX-edMkC":{"uri":"/melonJS/docs/melonjs/Renderer.html#getScreenCanvas"},"HQRbNoYhV0VUqO-1yEzr9":{"uri":"/melonJS/docs/melonjs/Renderer.html#getScreenContext"},"kFVx7FVJFQalZNF9pygnM":{"uri":"/melonJS/docs/melonjs/Renderer.html#getWidth"},"51Gos9R5TFDUPS87EEi_5":{"uri":"/melonJS/docs/melonjs/Renderer.html#globalAlpha"},"oT1N5iuNr5hDp8vSQwjC2":{"uri":"/melonJS/docs/melonjs/Renderer.html#overlaps"},"HF6HAy6k1OeX4leVbz9gm":{"uri":"/melonJS/docs/melonjs/Renderer.html#reset"},"eGWOxDgNb5qUmDtZOE7ua":{"uri":"/melonJS/docs/melonjs/Renderer.html#resize"},"VZanP9mSgXx1elaERAEz9":{"uri":"/melonJS/docs/melonjs/Renderer.html#setAntiAlias"},"de7uzzFMQA9vpo4uyFD0v":{"uri":"/melonJS/docs/melonjs/Renderer.html#setMask"},"9VaQqDOnzTpuDlW3Rb6Ct":{"uri":"/melonJS/docs/melonjs/Renderer.html#setProjection"},"4ikdOzPSARYBpbx1zuO1r":{"uri":"/melonJS/docs/melonjs/Renderer.html#setTint"},"PFXuZ6pxBZiRErBmyBWPK":{"uri":"/melonJS/docs/melonjs/Renderer.html#stroke"},"xEfschZZFW-p3fa3Yj_cY":{"uri":"/melonJS/docs/melonjs/Renderer.html#tint"},"Oh0NxvpKIbUgTEAWEkSmN":{"uri":"/melonJS/docs/melonjs/RoundRect.html"},"YCM4lZaIg-x4_5I1qPEQ_":{"uri":"/melonJS/docs/melonjs/RoundRect.html#bottom"},"XILKUA2D-trgg3Fvk0aBj":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerX"},"rtLGBopkDj5hx2wDPtSmM":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerY"},"vTP34ynfUGwzwIt66qp48":{"uri":"/melonJS/docs/melonjs/RoundRect.html#height"},"W2e9QCJOU1IHAPYcXFGs2":{"uri":"/melonJS/docs/melonjs/RoundRect.html#left"},"s_8s8u1dhRNElUD5uBQTE":{"uri":"/melonJS/docs/melonjs/RoundRect.html#points"},"IgBLNRWtGEQWokqY1Ia1_":{"uri":"/melonJS/docs/melonjs/RoundRect.html#pos"},"qp3KncC0fdsg12GID9T1m":{"uri":"/melonJS/docs/melonjs/RoundRect.html#radius"},"6_OmOcRTLs1rkVpmStKuM":{"uri":"/melonJS/docs/melonjs/RoundRect.html#right"},"iC-5VQTKDQqNPP2HlcvAG":{"uri":"/melonJS/docs/melonjs/RoundRect.html#top"},"_V2gqScbEloR952VeH99o":{"uri":"/melonJS/docs/melonjs/RoundRect.html#width"},"MT-LMntUHITOM6Vu_Fc23":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerOn"},"g5oekzn9bEkYrky545duF":{"uri":"/melonJS/docs/melonjs/RoundRect.html#clone"},"xW7U4loLX3KC3IH_5zJnk":{"uri":"/melonJS/docs/melonjs/RoundRect.html#constructor"},"kgWaerSoPOGWTfFw_4Dga":{"uri":"/melonJS/docs/melonjs/RoundRect.html#contains"},"Jnq3lJNhq9VbHHU2YlOlS":{"uri":"/melonJS/docs/melonjs/RoundRect.html#copy"},"web5PSW20y5_7DlU8sTt0":{"uri":"/melonJS/docs/melonjs/RoundRect.html#equals"},"CAdkjKTyFpZ7gzIv8yz2F":{"uri":"/melonJS/docs/melonjs/RoundRect.html#getBounds"},"JOkFo93xSdbp7Weaw_yku":{"uri":"/melonJS/docs/melonjs/RoundRect.html#getIndices"},"MhDfYTGD-EixHkRQgv9_C":{"uri":"/melonJS/docs/melonjs/RoundRect.html#isConvex"},"QbbJRhe6D40xbyZb7iiw2":{"uri":"/melonJS/docs/melonjs/RoundRect.html#isFinite"},"kTn6TZq8ZCFU6fZMTATHz":{"uri":"/melonJS/docs/melonjs/RoundRect.html#overlaps"},"bEEF3KZIq3vF7mmqhSM9y":{"uri":"/melonJS/docs/melonjs/RoundRect.html#recalc"},"bk8D4btDHJ2aOKWtYApbF":{"uri":"/melonJS/docs/melonjs/RoundRect.html#resize"},"JyShhvMOEi9Ta-884uG1A":{"uri":"/melonJS/docs/melonjs/RoundRect.html#rotate"},"BqMfI2nQl_qmC1XDBsRKY":{"uri":"/melonJS/docs/melonjs/RoundRect.html#scale"},"vsprZD8Z4J1WOns1sJXS_":{"uri":"/melonJS/docs/melonjs/RoundRect.html#scaleV"},"gb-CH0U7bc4-D8GarMq_U":{"uri":"/melonJS/docs/melonjs/RoundRect.html#setShape"},"bOY6Oc6OO2-csMQgC7XEn":{"uri":"/melonJS/docs/melonjs/RoundRect.html#setVertices"},"9xegkKPHt_OTMA8OEfGI1":{"uri":"/melonJS/docs/melonjs/RoundRect.html#shift"},"oH0L6a4-rmMLvPNBM88Hg":{"uri":"/melonJS/docs/melonjs/RoundRect.html#to2d"},"jrNirXBxhf3vQzS74g0JT":{"uri":"/melonJS/docs/melonjs/RoundRect.html#toIso"},"omwzxG1mER5bhTUM5pf2w":{"uri":"/melonJS/docs/melonjs/RoundRect.html#toPolygon"},"xDPtfWGFbLNJedV6be9jr":{"uri":"/melonJS/docs/melonjs/RoundRect.html#transform"},"z9uDD1lVQYDvSUQy4fPRp":{"uri":"/melonJS/docs/melonjs/RoundRect.html#translate"},"QvPX9Km-auGutxWQBpK4V":{"uri":"/melonJS/docs/melonjs/RoundRect.html#union"},"QBvbkqL6m_OD3IjqpEIR4":{"uri":"/melonJS/docs/melonjs/RoundRect.html#contains"},"Qz06s0V2CArCK3m9je1u4":{"uri":"/melonJS/docs/melonjs/Sprite.html"},"5gZJ6iULfOzE82ReRiXS4":{"uri":"/melonJS/docs/melonjs/Sprite.html#alpha"},"cAn1v3kxswoyluHJwjPRR":{"uri":"/melonJS/docs/melonjs/Sprite.html#alwaysUpdate"},"3wI8ZBxy1e2Khv2SVpLgC":{"uri":"/melonJS/docs/melonjs/Sprite.html#ancestor"},"VDCw8aFR9kXagOizKItad":{"uri":"/melonJS/docs/melonjs/Sprite.html#anchorPoint"},"Pg-IbW7_zdmU_FE1pvP1i":{"uri":"/melonJS/docs/melonjs/Sprite.html#animationpause"},"VCwzq6MvSjc1HLyGnbTWN":{"uri":"/melonJS/docs/melonjs/Sprite.html#animationspeed"},"DXG6eigZC1zhVOlxRXpnH":{"uri":"/melonJS/docs/melonjs/Sprite.html#autoTransform"},"5fS7h1cohk7DD8IvvyGkk":{"uri":"/melonJS/docs/melonjs/Sprite.html#blendMode"},"zdtqnxGw2XiTO8lW9CyLJ":{"uri":"/melonJS/docs/melonjs/Sprite.html#body"},"3ATm0whLF5gBupVk2piqW":{"uri":"/melonJS/docs/melonjs/Sprite.html#bottom"},"rU-vUxFpi3ssV4rVQSrFe":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerX"},"vxZWSqNSYxPYbAKbifrPR":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerY"},"B6IOd2uRdWFyUkaxgB-o-":{"uri":"/melonJS/docs/melonjs/Sprite.html#currentTransform"},"u37fAv58GdatJpk4U0KLZ":{"uri":"/melonJS/docs/melonjs/Sprite.html#floating"},"FO3abem46RpmJa_IetxKq":{"uri":"/melonJS/docs/melonjs/Sprite.html#GUID"},"HZrb92QrkEbiYkG63nb6l":{"uri":"/melonJS/docs/melonjs/Sprite.html#height"},"ZjOsA2Pq4zbvRMuq-OYzb":{"uri":"/melonJS/docs/melonjs/Sprite.html#inViewport"},"4InCMvmIViCCTSmNr6MuB":{"uri":"/melonJS/docs/melonjs/Sprite.html#isDirty"},"XbQc3haP_5fKk6px-YdxV":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlippedX"},"64jty9UZX8iD0TLbNVoPe":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlippedY"},"Vb_H217dK7R19qCulf91E":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFloating"},"uiCLw0vWGwT7mSw_Ab46Y":{"uri":"/melonJS/docs/melonjs/Sprite.html#isKinematic"},"SyhlnAuPko5iOzMeEynLo":{"uri":"/melonJS/docs/melonjs/Sprite.html#isPersistent"},"7M2pNiQb7sD1HKLOb6lRN":{"uri":"/melonJS/docs/melonjs/Sprite.html#left"},"gUQwOu63FcY7LfO1LcgVB":{"uri":"/melonJS/docs/melonjs/Sprite.html#mask"},"N_Mua3fW4h4Di2S4DB5Id":{"uri":"/melonJS/docs/melonjs/Sprite.html#name"},"kTN1PMyS1hC2twQrCjZSA":{"uri":"/melonJS/docs/melonjs/Sprite.html#offset"},"XqXYOVBVR8lyE9Ts5dbcT":{"uri":"/melonJS/docs/melonjs/Sprite.html#onVisibilityChange"},"BR3xbXamoECryHHeLAr-F":{"uri":"/melonJS/docs/melonjs/Sprite.html#points"},"H7CgM7LtS3h4ujrkaaDnZ":{"uri":"/melonJS/docs/melonjs/Sprite.html#pos"},"k5HTU_zQXfRcL066hO5jp":{"uri":"/melonJS/docs/melonjs/Sprite.html#right"},"n-vjOBTUUG4qgYPa5CKC5":{"uri":"/melonJS/docs/melonjs/Sprite.html#source"},"ftvZ1rJqmevqkzg8EXVUO":{"uri":"/melonJS/docs/melonjs/Sprite.html#tint"},"Yz1d4uNF85TqGq6fgfqi5":{"uri":"/melonJS/docs/melonjs/Sprite.html#top"},"wwTaRj9RrYLL-vg_wY-YT":{"uri":"/melonJS/docs/melonjs/Sprite.html#updateWhenPaused"},"3PuE9psGNQpwSmvLcDDSF":{"uri":"/melonJS/docs/melonjs/Sprite.html#width"},"ZRX6Bh0Aj53euFOEN3kaX":{"uri":"/melonJS/docs/melonjs/Sprite.html#addAnimation"},"AL3tpWb87Ij67_9Ic5xW3":{"uri":"/melonJS/docs/melonjs/Sprite.html#angleTo"},"gdq-WFHfoL1eYs6pkNTAq":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerOn"},"MIc-QEGqmICr_AVy5rTiu":{"uri":"/melonJS/docs/melonjs/Sprite.html#clone"},"pIWLv6xmJYZXcYe3Le7WW":{"uri":"/melonJS/docs/melonjs/Sprite.html#constructor"},"emHWiEjyZvY4MKn6KYmPY":{"uri":"/melonJS/docs/melonjs/Sprite.html#contains"},"_3QsWglAE09F_4DPrh0N-":{"uri":"/melonJS/docs/melonjs/Sprite.html#copy"},"q7VeFCOzeHSjBb0sX02dA":{"uri":"/melonJS/docs/melonjs/Sprite.html#distanceTo"},"vHhQcLn6slBjgWC6lLKvY":{"uri":"/melonJS/docs/melonjs/Sprite.html#equals"},"xHNKyf9v7vxxF7QFsZC9Q":{"uri":"/melonJS/docs/melonjs/Sprite.html#flicker"},"64AT0WyzYS131_SSl6tAU":{"uri":"/melonJS/docs/melonjs/Sprite.html#flipX"},"U8jGd5KBysEiBhQVJJILO":{"uri":"/melonJS/docs/melonjs/Sprite.html#flipY"},"Pf5IxsGbZy4nwxCDZrw96":{"uri":"/melonJS/docs/melonjs/Sprite.html#getAbsolutePosition"},"ILfMevvs5WX-YyoSouLR3":{"uri":"/melonJS/docs/melonjs/Sprite.html#getBounds"},"Vj5EGqw0gm1m0d1dKgV2J":{"uri":"/melonJS/docs/melonjs/Sprite.html#getCurrentAnimationFrame"},"fEtdII1BlOqfUk11blU6m":{"uri":"/melonJS/docs/melonjs/Sprite.html#getIndices"},"qTHC9uqGJr4aruATC0vzA":{"uri":"/melonJS/docs/melonjs/Sprite.html#getOpacity"},"sdoS5Ae252zPfTP3ka_oF":{"uri":"/melonJS/docs/melonjs/Sprite.html#isConvex"},"djuVN4ENJS7L_6Sf92VxJ":{"uri":"/melonJS/docs/melonjs/Sprite.html#isCurrentAnimation"},"IvVFz4LeBIu0Vtw5tNT2x":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFinite"},"Wxmwx9869kxarJmk_1ZQy":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlickering"},"z6XYkK5lCgZkPxcDPwdY_":{"uri":"/melonJS/docs/melonjs/Sprite.html#lookAt"},"raMbT1UXPEJY4Q_bUqHhC":{"uri":"/melonJS/docs/melonjs/Sprite.html#onCollision"},"KfRnPOPW5AnwzXZzqGC3n":{"uri":"/melonJS/docs/melonjs/Sprite.html#onDestroyEvent"},"e-VaejCakLdmaVM9vDQ2r":{"uri":"/melonJS/docs/melonjs/Sprite.html#overlaps"},"lFHkcm33Ikgk7D57XAW0S":{"uri":"/melonJS/docs/melonjs/Sprite.html#recalc"},"Sgb-_W6Z3Wtas4vBWtRy7":{"uri":"/melonJS/docs/melonjs/Sprite.html#resize"},"kDdtLjBNgEHa6E1dYdM1x":{"uri":"/melonJS/docs/melonjs/Sprite.html#reverseAnimation"},"E0nVCW2FPrYpK_fC0yBRa":{"uri":"/melonJS/docs/melonjs/Sprite.html#rotate"},"ZC5-E1jlwSozOb_12S_7V":{"uri":"/melonJS/docs/melonjs/Sprite.html#scale"},"DeHbTRmatNZKxL5aQcUlt":{"uri":"/melonJS/docs/melonjs/Sprite.html#scaleV"},"JKYLfO8_h6KK86byUjMRF":{"uri":"/melonJS/docs/melonjs/Sprite.html#setAnimationFrame"},"g-2LNkYCMlgSnmEynEo-F":{"uri":"/melonJS/docs/melonjs/Sprite.html#setCurrentAnimation"},"di50_9I2U7KcFZig7Z0Iq":{"uri":"/melonJS/docs/melonjs/Sprite.html#setOpacity"},"XF_55HfkQthsAZUzKmSVR":{"uri":"/melonJS/docs/melonjs/Sprite.html#setRegion"},"_GEVpJOSFVJiPfmccx9T1":{"uri":"/melonJS/docs/melonjs/Sprite.html#setShape"},"79QgRZEQi8ImrntX5bAOK":{"uri":"/melonJS/docs/melonjs/Sprite.html#setVertices"},"9ls-SQyGX5gV7cKirTo8R":{"uri":"/melonJS/docs/melonjs/Sprite.html#shift"},"nKi6nTmGUQj-1aOFzrxpn":{"uri":"/melonJS/docs/melonjs/Sprite.html#to2d"},"I1RuJRWJQPx6uhaHIMW_O":{"uri":"/melonJS/docs/melonjs/Sprite.html#toIso"},"KT4-68Jn5bg5oKo4b-XCV":{"uri":"/melonJS/docs/melonjs/Sprite.html#toPolygon"},"1UqSrCX7pLeaP9rkgSqAB":{"uri":"/melonJS/docs/melonjs/Sprite.html#transform"},"ZQAZOp7ANzlOnsjoZPRwD":{"uri":"/melonJS/docs/melonjs/Sprite.html#translate"},"GAvmG0ZBq18lLGTIuhB7T":{"uri":"/melonJS/docs/melonjs/Sprite.html#union"},"gm_WKJqyNlXl_IKTY_WxR":{"uri":"/melonJS/docs/melonjs/Sprite.html#draw"},"sbdQS9SM_jEytKUuXZnF0":{"uri":"/melonJS/docs/melonjs/Sprite.html#postDraw"},"4mNLcRFhqFjOBbIbImQMD":{"uri":"/melonJS/docs/melonjs/Sprite.html#preDraw"},"dtkzGDGj8MEO-g9_5yYWz":{"uri":"/melonJS/docs/melonjs/Sprite.html#update"},"dIODsS37ZKZik8wwSLOSZ":{"uri":"/melonJS/docs/melonjs/Sprite.html#onAnchorUpdate"},"G6YyhMaWaMcakA5zSO4tf":{"uri":"/melonJS/docs/melonjs/Stage.html"},"GxPOwZ7PzTWkR3Lv57GSK":{"uri":"/melonJS/docs/melonjs/Stage.html#ambientLight"},"vvknaoii-vpJKulXLmP-5":{"uri":"/melonJS/docs/melonjs/Stage.html#cameras"},"ee8FfzI9LBZwZIYs063Mr":{"uri":"/melonJS/docs/melonjs/Stage.html#lights"},"2AKRW_Z6b9b_5e05DEoOt":{"uri":"/melonJS/docs/melonjs/Stage.html#settings"},"xH_IAbSJ3YNiXRKjgNqIq":{"uri":"/melonJS/docs/melonjs/Stage.html#constructor"},"uDKibTpijXKV47N4aRAbI":{"uri":"/melonJS/docs/melonjs/Stage.html#onDestroyEvent"},"Nwsj19Qd6vQ7tKsID8Z6-":{"uri":"/melonJS/docs/melonjs/Stage.html#onResetEvent"},"l0GEzMMpGBh14cMpKSoi8":{"uri":"/melonJS/docs/melonjs/Text.html"},"7xtlncA2RZXPpjUzQKF_Y":{"uri":"/melonJS/docs/melonjs/Text.html#alpha"},"ATML2KCc40f5W6Bv7LPz0":{"uri":"/melonJS/docs/melonjs/Text.html#alwaysUpdate"},"TeIiyv1rgVNzWbQX4Qqwi":{"uri":"/melonJS/docs/melonjs/Text.html#ancestor"},"RTgMTo78Yz28Zm7DeRsNv":{"uri":"/melonJS/docs/melonjs/Text.html#anchorPoint"},"ofX1C8WX4vTmf7U22xQx8":{"uri":"/melonJS/docs/melonjs/Text.html#autoTransform"},"jyd0l36v_ScwURON89ygI":{"uri":"/melonJS/docs/melonjs/Text.html#blendMode"},"mUYOY-Bk02r3Sv0qrHJKF":{"uri":"/melonJS/docs/melonjs/Text.html#body"},"Aq2I4Xtqswu4rgYucPDLp":{"uri":"/melonJS/docs/melonjs/Text.html#bottom"},"a9aalDYMF5KoQ9IgQBNaI":{"uri":"/melonJS/docs/melonjs/Text.html#centerX"},"4IvHmb06BlSls5L6ucues":{"uri":"/melonJS/docs/melonjs/Text.html#centerY"},"CBQFysx0AYXex5op9IJmx":{"uri":"/melonJS/docs/melonjs/Text.html#currentTransform"},"BsZ5v4spf6O_vp0SfFjKV":{"uri":"/melonJS/docs/melonjs/Text.html#fillStyle"},"VKARa83oKi-_oCi742UeV":{"uri":"/melonJS/docs/melonjs/Text.html#floating"},"Gg3epPHoF9o_FNvFIcz_l":{"uri":"/melonJS/docs/melonjs/Text.html#fontSize"},"6X3A-DPVntCdaBTpL_028":{"uri":"/melonJS/docs/melonjs/Text.html#GUID"},"PPDL7bW620q2BLmhnVSlg":{"uri":"/melonJS/docs/melonjs/Text.html#height"},"pqa0LdO_qS8iCasmCY7DI":{"uri":"/melonJS/docs/melonjs/Text.html#inViewport"},"_XMqAGythUpzWaJiNo2eP":{"uri":"/melonJS/docs/melonjs/Text.html#isDirty"},"DHKUEcIrlmneNtqSvrgBa":{"uri":"/melonJS/docs/melonjs/Text.html#isFlippedX"},"Kkqp5osLeMFnPF33wLFxP":{"uri":"/melonJS/docs/melonjs/Text.html#isFlippedY"},"pUvVhFwf8aWd8c06bN6qR":{"uri":"/melonJS/docs/melonjs/Text.html#isFloating"},"vghBYWQ6o93c-pS695HtW":{"uri":"/melonJS/docs/melonjs/Text.html#isKinematic"},"PiKeyHSIxbjatcUwaFPPD":{"uri":"/melonJS/docs/melonjs/Text.html#isPersistent"},"jB9JaxQDUgBGPPZNl1qTi":{"uri":"/melonJS/docs/melonjs/Text.html#left"},"cHo_h7wyqTl4jiUSZUkbn":{"uri":"/melonJS/docs/melonjs/Text.html#lineHeight"},"RVGI1JgU91CseSxGYpxQa":{"uri":"/melonJS/docs/melonjs/Text.html#lineWidth"},"o2-cIWZtIOLTRMtJDPYnO":{"uri":"/melonJS/docs/melonjs/Text.html#mask"},"0zdcjBbd4oJLPcGMNMYyL":{"uri":"/melonJS/docs/melonjs/Text.html#name"},"HfaNaxuiE8jVztJYmOcKd":{"uri":"/melonJS/docs/melonjs/Text.html#offScreenCanvas"},"drhOwmrBnDhi4xuamY4sL":{"uri":"/melonJS/docs/melonjs/Text.html#onVisibilityChange"},"JS6Iz58IergDjgMrmORgs":{"uri":"/melonJS/docs/melonjs/Text.html#points"},"bb-X9M7xjrwsdZcY9lWbQ":{"uri":"/melonJS/docs/melonjs/Text.html#pos"},"U2CgNZJdnLzEScHvpU4Zp":{"uri":"/melonJS/docs/melonjs/Text.html#right"},"GPpx1rYUYV4e17hZY7Ew6":{"uri":"/melonJS/docs/melonjs/Text.html#textAlign"},"Mp1L0hbD74DVd8Ef_uz71":{"uri":"/melonJS/docs/melonjs/Text.html#textBaseline"},"bj3gc2TzVDkJDKRs71iOS":{"uri":"/melonJS/docs/melonjs/Text.html#tint"},"zDXTmXJ7LUMwXU8ERnrrG":{"uri":"/melonJS/docs/melonjs/Text.html#top"},"uOvihiIyVLvTeRe48XNQ-":{"uri":"/melonJS/docs/melonjs/Text.html#updateWhenPaused"},"BLxFLuKM9g9ovS8b97TBI":{"uri":"/melonJS/docs/melonjs/Text.html#width"},"ltiEHoeb_I6bH5n4RtvC9":{"uri":"/melonJS/docs/melonjs/Text.html#wordWrapWidth"},"Jqsz_4Ky6E3f8PhVIWgsf":{"uri":"/melonJS/docs/melonjs/Text.html#_text"},"pDU89FWVjyy0Z-a3jwqqL":{"uri":"/melonJS/docs/melonjs/Text.html#angleTo"},"wPPKjbSRxO0ZRTdGVPDfO":{"uri":"/melonJS/docs/melonjs/Text.html#bold"},"L9oL32AhbWaI7tyiMNblw":{"uri":"/melonJS/docs/melonjs/Text.html#centerOn"},"nIq9IKZ7fhbveOXEKPbNi":{"uri":"/melonJS/docs/melonjs/Text.html#clone"},"FBxDPzTr3TIgO-LGoNmrC":{"uri":"/melonJS/docs/melonjs/Text.html#constructor"},"IJT0EJKRQ1-4DN8VAYpKI":{"uri":"/melonJS/docs/melonjs/Text.html#contains"},"k9bf66fnZvRKI5tPmZ0yA":{"uri":"/melonJS/docs/melonjs/Text.html#copy"},"ibIsiZIgvZlfrlj2xGU0_":{"uri":"/melonJS/docs/melonjs/Text.html#distanceTo"},"VO_furos5MDkqtGSQA-ms":{"uri":"/melonJS/docs/melonjs/Text.html#draw"},"HwfzZ3cDIorL87MzFkQAY":{"uri":"/melonJS/docs/melonjs/Text.html#drawStroke"},"tHAtdf0xn-GFfaKr3Fa4C":{"uri":"/melonJS/docs/melonjs/Text.html#equals"},"MVKbmCmJLHmLYBzSUo4YE":{"uri":"/melonJS/docs/melonjs/Text.html#flipX"},"u2shFJMkuDwkH6hqHJCyr":{"uri":"/melonJS/docs/melonjs/Text.html#flipY"},"uMys4-1x8E_6DugmSgz9p":{"uri":"/melonJS/docs/melonjs/Text.html#getAbsolutePosition"},"ajG29ivxf8RXcE1BaOH2Y":{"uri":"/melonJS/docs/melonjs/Text.html#getBounds"},"YUYnkppT75Bn_eZD6h8fW":{"uri":"/melonJS/docs/melonjs/Text.html#getIndices"},"Z86rjexbdhsjXPYE5MZbC":{"uri":"/melonJS/docs/melonjs/Text.html#getOpacity"},"5kBFE6pNF_OI2YjdaFGTe":{"uri":"/melonJS/docs/melonjs/Text.html#isConvex"},"nHF1KpwsxM73FD74wTiCC":{"uri":"/melonJS/docs/melonjs/Text.html#isFinite"},"nfPA46Oiqh0-3LySLYy5i":{"uri":"/melonJS/docs/melonjs/Text.html#italic"},"phDSmrWqQDo4MkH0RZ1mA":{"uri":"/melonJS/docs/melonjs/Text.html#lookAt"},"f1Y7oqzbzBGRvCI-DmY20":{"uri":"/melonJS/docs/melonjs/Text.html#measureText"},"J6Ws-zypbe6tK88OQyt3s":{"uri":"/melonJS/docs/melonjs/Text.html#onCollision"},"A32dFCVT44a3i5oqzjstD":{"uri":"/melonJS/docs/melonjs/Text.html#onDestroyEvent"},"quGXJ-xcItzxbNjJQCI1f":{"uri":"/melonJS/docs/melonjs/Text.html#overlaps"},"WbXPj5DZAlfx50FW2R17N":{"uri":"/melonJS/docs/melonjs/Text.html#recalc"},"dWNLsEzELxczJjik7hCl8":{"uri":"/melonJS/docs/melonjs/Text.html#resize"},"0Kn8dJnb9O0wePlnZXlIo":{"uri":"/melonJS/docs/melonjs/Text.html#rotate"},"ck_bPKezpiVDEzjLXr5pF":{"uri":"/melonJS/docs/melonjs/Text.html#scale"},"odumzcnSxg3LNr5iNMxv9":{"uri":"/melonJS/docs/melonjs/Text.html#scaleV"},"4ZyBLCymhWC-Q28BvQ0dC":{"uri":"/melonJS/docs/melonjs/Text.html#setFont"},"KZmstOhlpt0-W-nxpETl_":{"uri":"/melonJS/docs/melonjs/Text.html#setOpacity"},"j3BspGQJjoi2N4pZTOkR2":{"uri":"/melonJS/docs/melonjs/Text.html#setShape"},"s2vGIKArUYeZiyMmcp8D8":{"uri":"/melonJS/docs/melonjs/Text.html#setText"},"vkU8TqXn2Sy7fnKGsYQmY":{"uri":"/melonJS/docs/melonjs/Text.html#setVertices"},"P-3lqLSQGGBJIATwNk3SZ":{"uri":"/melonJS/docs/melonjs/Text.html#shift"},"gP_4PD_k3rNATE53ft3Bp":{"uri":"/melonJS/docs/melonjs/Text.html#to2d"},"MAMqSFHLs-ED2BiSZzyb7":{"uri":"/melonJS/docs/melonjs/Text.html#toIso"},"wTu7oiKOa0AlWDssU-CkE":{"uri":"/melonJS/docs/melonjs/Text.html#toPolygon"},"3-4AsMOy1cnXvhzg_F69C":{"uri":"/melonJS/docs/melonjs/Text.html#transform"},"9jXq1qZBxURVYYr9esGV4":{"uri":"/melonJS/docs/melonjs/Text.html#translate"},"rkGWbk8zIkkLm5Pfp2JA4":{"uri":"/melonJS/docs/melonjs/Text.html#union"},"KT1_joMgSCN7Og5Bo5m-r":{"uri":"/melonJS/docs/melonjs/Text.html#postDraw"},"mYuGIPLdrjBxhfN-y8lIb":{"uri":"/melonJS/docs/melonjs/Text.html#preDraw"},"LfvwqS0AdmJGdsqOFdL3U":{"uri":"/melonJS/docs/melonjs/Text.html#update"},"VdXUmQ0s8wzrBMLOYTyBV":{"uri":"/melonJS/docs/melonjs/Text.html#onAnchorUpdate"},"MtJbE51uDorfEMviADjjM":{"uri":"/melonJS/docs/melonjs/TextMetrics.html"},"lvBpYZn0-IPN56zHeYphd":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#ancestor"},"sd1o9Mc2AOwK4zevkiBJt":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#bottom"},"SMkBRi_g0A_zjGFbsjrpE":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#center"},"ORT6dNWbkKvXSUOY6se1D":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#centerX"},"BB-vH3X8FBTXlq6xcfeOL":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#centerY"},"r6XF1u8JmVRl-UVnyHz_B":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#left"},"tpPp_OMe7hM1c2FtuExJj":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#right"},"giCGXA5QrVohhmTuhcTlA":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#top"},"yVjrR9gYMrMJpX2atwEFQ":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#width"},"dhQzN1e0QLetR_Rw9W56k":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#x"},"9L8OFcKmhFruz3-TWxlHu":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#y"},"Qk1pBr-Axq85Ws4BZnUCJ":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#add"},"xLmQsHHAuaepsdyTIzwB4":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addBounds"},"pdlI4Izt_AuEBfgJlP2Nu":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addFrame"},"aU7zeuxovaWOQYmsO-kmn":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addPoint"},"cHPQNWXNXhv9QBBkCWed9":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#clear"},"0HieCaHBJl1_t86TVSRGA":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#clone"},"qdtSzE-7SpH_jzBiMIXCO":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#constructor"},"JzQnVNmW-ZcJ9i58TJlvb":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#contains"},"fIqysU_qaQvzc6i27aQN5":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#isFinite"},"d_3MMXUSg-9m1fgnAEmiH":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#lineHeight"},"Iy-AdAyxkec1jcevEQRsq":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#lineWidth"},"Hi-yf_nXsMipLoNw03-TC":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#measureText"},"FSXSkfqoOC71uKUx1o7EI":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#overlaps"},"-xR-0EHw_eIryIQgQP88j":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#setMinMax"},"mZua6yElB4HwM4Z7AL34e":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#shift"},"N-N5gr5LXzbGD2Xehqepq":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#toPolygon"},"wZf-n1R4532P88AxSmwqE":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#translate"},"DmendmKhso3XmXi28N3YB":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#update"},"2srJ-lxlKLDZiA4K6bs9u":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#wordWrap"},"Z7hHr8Fmx8D_-AqOTx1kw":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html"},"waBndEVhN9jqX-hp0H0Vd":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#addRegion"},"Y6aBp_O3z8ugS5U_86zO8":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#addUVs"},"LiVt839pIt7GZwoNHRVDn":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#constructor"},"AfAaINlzFFTn2gheJVuk9":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#createAnimationFromName"},"FCRuVVWkCb9aEQS25iz3G":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#createSpriteFromName"},"RwnSrkAaUfXwz87aCIXPI":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getAtlas"},"dtKKCJ0dxeSiQj8Kpfszd":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getFormat"},"axYBvJku6ot9T_5hJ4vZg":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getRegion"},"ZEe2YuddlOrtCNAvdH4DV":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getTexture"},"Ol8MNd0tdeXaazVkC4wX0":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getUVs"},"mkpDm9kVOASG4z_qwPDpH":{"uri":"/melonJS/docs/melonjs/Tile.html"},"oBB9ZQQuH5Vl6g2X4hs4C":{"uri":"/melonJS/docs/melonjs/Tile.html#bottom"},"Yw2hEP91WHjiJlCvH0zzU":{"uri":"/melonJS/docs/melonjs/Tile.html#center"},"YNFuxfgfBjlhNSqOmzM35":{"uri":"/melonJS/docs/melonjs/Tile.html#centerX"},"iCOrn1F0BtYIH-FKdv01s":{"uri":"/melonJS/docs/melonjs/Tile.html#centerY"},"7fwlrPiA-ipV_dKMYoVtM":{"uri":"/melonJS/docs/melonjs/Tile.html#flipped"},"G23MNptWKJlbVZpviXqrw":{"uri":"/melonJS/docs/melonjs/Tile.html#flippedAD"},"aLC08RhIONmv-Qj6MMO1S":{"uri":"/melonJS/docs/melonjs/Tile.html#flippedY"},"3Y-vRbjvT5VIlPst3xbgd":{"uri":"/melonJS/docs/melonjs/Tile.html#flipX"},"GqZvWIxu-OFWRV8Md7Peu":{"uri":"/melonJS/docs/melonjs/Tile.html#left"},"rN-Js-xZs0IV8jb9qLZZU":{"uri":"/melonJS/docs/melonjs/Tile.html#right"},"LLlICWYwSoLihvQZdF8j2":{"uri":"/melonJS/docs/melonjs/Tile.html#tileId"},"ZAX0wLceyoY0jIHy4APTD":{"uri":"/melonJS/docs/melonjs/Tile.html#tileset"},"S2j3gnKtNGWP5fs_Ts5OI":{"uri":"/melonJS/docs/melonjs/Tile.html#top"},"rAQOwEs1dx1t6EQ3ty4fx":{"uri":"/melonJS/docs/melonjs/Tile.html#width"},"k61yVRqg1pMEibDbtP5Mc":{"uri":"/melonJS/docs/melonjs/Tile.html#x"},"RvwfjnzwkqvbY6Y-xulaX":{"uri":"/melonJS/docs/melonjs/Tile.html#y"},"6ycuS0vpEjfXTRxdOzEcC":{"uri":"/melonJS/docs/melonjs/Tile.html#add"},"cEjtDuuxAqsDJferXPNiH":{"uri":"/melonJS/docs/melonjs/Tile.html#addBounds"},"RYW8R8fJDYwav3AvLGOV5":{"uri":"/melonJS/docs/melonjs/Tile.html#addFrame"},"SORSbb900kBdAL7VU1WXK":{"uri":"/melonJS/docs/melonjs/Tile.html#addPoint"},"uB7EY6Q36y3iSOzl2Q8hS":{"uri":"/melonJS/docs/melonjs/Tile.html#clear"},"lFshLXEXucn1pzYum4r-G":{"uri":"/melonJS/docs/melonjs/Tile.html#clone"},"1ya2qrA9mNATpEF5WS1CN":{"uri":"/melonJS/docs/melonjs/Tile.html#constructor"},"8xhI9wheGsKO6OQjSn3hZ":{"uri":"/melonJS/docs/melonjs/Tile.html#contains"},"D5vxKxUI8UfjnwAKTTk6-":{"uri":"/melonJS/docs/melonjs/Tile.html#getRenderable"},"RbWmdbY-2QcUyLtL7N5td":{"uri":"/melonJS/docs/melonjs/Tile.html#isFinite"},"nR-K4ViTwD8U4HX5Iwxyn":{"uri":"/melonJS/docs/melonjs/Tile.html#overlaps"},"KeADp9yvivbb9_d9S5nMj":{"uri":"/melonJS/docs/melonjs/Tile.html#setMinMax"},"XWfRjZTF6y3Ur9jM18GeT":{"uri":"/melonJS/docs/melonjs/Tile.html#shift"},"-bMT1QKgARsB_yz2vtGP3":{"uri":"/melonJS/docs/melonjs/Tile.html#toPolygon"},"i88c1phvmybb9ky0u-YNb":{"uri":"/melonJS/docs/melonjs/Tile.html#translate"},"u8nh7jUkC6YXawsTnDibA":{"uri":"/melonJS/docs/melonjs/Tile.html#update"},"1WizOZxhYzNEjdrQ3-96a":{"uri":"/melonJS/docs/melonjs/Timer.html"},"vRaZiJ3NL4PGslfU1eu3q":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html"},"JXLQM8iIellmBOOn_uK_a":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#canRender"},"YP47sjlXdZS0ycFDsqyaS":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#constructor"},"gyy3jciahVG-MlHPCAXht":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#drawTile"},"VYG5ZsX5W2KqNyMlI35kT":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#drawTileLayer"},"dcsSeYPEH8EA-CXzrZPLj":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#getBounds"},"Yr-lSP3sEJAiRomajqQaj":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#pixelToTileCoords"},"Ho6ix-28UZWpBy7oCjOlQ":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#tileToPixelCoords"},"0e6UWgqXCmiHE4GV4KJM9":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html"},"ZpEXU201rqz6DlYBznlaK":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#canRender"},"Cz27-2noS-sXXTqPrP9GA":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#constructor"},"6ZxYjfVzTPa7did4IHSMc":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#drawTile"},"XY7Q-6lXhItoN3MVN2MpA":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#drawTileLayer"},"jHmRcDWcdkM3CfIW2BLEo":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#getBounds"},"oMm1KfCMOEGX9s4fYCWSB":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#pixelToTileCoords"},"d0XIyUWiD2tPXsTgHmf52":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#tileToPixelCoords"},"ztH4JgwSJeErLlc92GPH8":{"uri":"/melonJS/docs/melonjs/TMXLayer.html"},"2spnFP8ERkOZt5dYb66Xy":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#alpha"},"9mWEw8RI9tRiUDJrj9GnY":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#alwaysUpdate"},"VXL03NUTC5FJNkKLTo2Ni":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#ancestor"},"vuYHKZAIZ3BhhtiQ66ryS":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#anchorPoint"},"CL65IRRkQtLvJtfNmCojr":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#autoTransform"},"Y5mHEI4LO7FXDz2Kvhd-y":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#blendMode"},"VpYYTIFQY7RJZXgjs5LCJ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#body"},"h4tOF2gWNYuK1JyySbPPM":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#bottom"},"i9bBLiHOaPlXxJ5nS_9Nm":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerX"},"Z8fJZA647c-5qFHqhOg0p":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerY"},"-MblTDyoTjPN-lcbgrSG4":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#currentTransform"},"MDKFJzM5bhFE8CiYib1zZ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#floating"},"szIZT4d_VT2sFKV1QZTxX":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#GUID"},"TyAdo9mDrSOOjRGW4TnQ_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#height"},"5d2U37x3pjix0EWHLSu39":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#inViewport"},"8WtmVpW2UQlyulRHUuweo":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isAnimated"},"ZqxkICtjrJZAzICQRA_ZS":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isDirty"},"8mpfqd1lzABFR5WJjOI_6":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFlippedX"},"gtZj7stDFrDs3p49w1YOs":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFlippedY"},"kt9S2wOjpmQPZOZPBjz7n":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFloating"},"yPggRoVltEvGMUX2L-XLr":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isKinematic"},"2FcbCWA40Q2XXrygiEZJ0":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isPersistent"},"t0aK3CwWtMEhIzsWVZPca":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#left"},"7Fil9P2SZFag9K_So6x-D":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#mask"},"0VpxdlK0EMXYLSxIafqJf":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#name"},"uuTtVl_ETZo85uI444WmB":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onVisibilityChange"},"Qx72NxYm1OdqM18O-We2a":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#points"},"OA3kSC6fwt7cAkjCJybcs":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#pos"},"4oYpjuBywqChcdEUR4Exa":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#renderorder"},"OhiEU3KbBsILUDXsfeoRM":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#right"},"00Bgx9uJGcZc6L8aRpsHD":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#tilesets"},"D8_S79gI69Zew5sTyaT0N":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#tint"},"tEuMWzl4PfygoFXAoa8RS":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#top"},"isTEJb21nGTyL36ewShkY":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#updateWhenPaused"},"XWW88pZ1rKSOhB-wVxOpd":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#width"},"OYdAMgs076_8bqklzzLAL":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#angleTo"},"tqw7xrabjYeroGU9RlkKN":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#cellAt"},"sAPZJ_6L3rwRrSbBrfD-m":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerOn"},"YfuGyKro3AZ12xFOaI-Gu":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#clearTile"},"EBVwnBxL6xg2FFLDMwSKm":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#clone"},"iGpvt01x9MHUB0kC_c-R8":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#constructor"},"JU1ykgkSyN1jIWvB2DDHf":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#contains"},"Q0oY3hwpUOSiP5qyeBfZP":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#copy"},"rY2uIo9tiyPtzPghZhKYQ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#distanceTo"},"Zu54WK9qxxPPwkiEiW9uG":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#equals"},"iWmMHkqAbSEPQG1q0gt1Z":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#flipX"},"wHkLmt7yjzyUSz8eiWGqN":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#flipY"},"VGD7NtyG5hTPbnrj3LCOn":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getAbsolutePosition"},"YqKj4pAfGMpy_pqWmJ__j":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getBounds"},"J68l1KzLx1ACev89HCJMh":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getIndices"},"E-L3pxMwpgG92egUWZUd_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getOpacity"},"yjWQVpxUK2jAIlcmdlv9b":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getRenderer"},"wV40Xx5V1-wbK4lCKBFOl":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTile"},"D448r8bJW8UrMw4sGN1Sy":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTile"},"jDezoGNaKp5kwWN1cDgaL":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTileId"},"yTJ5uEFDmuwJyfz-ncFG8":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isConvex"},"1bGcsA0WnUDUyDkyWlS8_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFinite"},"1X4DIiJyNdYgbBgz3i69u":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#lookAt"},"X4jXnulXaoS_2LnusZoS0":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onCollision"},"B5CAd6n-GVF8lR_ze7ajh":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onDestroyEvent"},"Nv6ibOZXPvDClwCL9entK":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#overlaps"},"lwoNMHNm9dt3h58T1WLs3":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#recalc"},"YHNLlHt4RWS2ENg6iynOd":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#resize"},"cfI_M72Gpan79a6ZzCRvv":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#rotate"},"odj9JuQ-Zx31D0k_1uLcq":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#scale"},"0zwndyZI_cCsJNXCnA0Db":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#scaleV"},"rPTfW09CpHCrN3BavCA8v":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setOpacity"},"HwVjfZxDC9e4Rs5fvo3yg":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setRenderer"},"hG9Pn0KgZzcdvEFTBmp1q":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setShape"},"E5b5gH1DMNPw9J0iEFFeW":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setTile"},"plCO3oaigHZVHcxWyyOe0":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setVertices"},"X37Q-yhFcBPx_E2LU6IUw":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#shift"},"_0OmCg7Vcsf4qzxOfYNkC":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#to2d"},"jhunVpAyAu4QNUwQ_3sEd":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#toIso"},"2hHnZsYviokrRIzLWdfcS":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#toPolygon"},"NbFstF8BSA96iiAOdA_m_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#transform"},"BxC8HKaj4N_E1S0IiNGtk":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#translate"},"UXyOQevrrGS1iiXd2H4ba":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#union"},"dO3yKGnXwioY653059syM":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#draw"},"qdtZqdV3TGonjzbt7-dHT":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#postDraw"},"rtB4cdIF5w3i9cAiWkTVa":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#preDraw"},"9q3Un-GGN7oVFlym3QB27":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#update"},"MARbWUxGBM7NJDWk4oGKe":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onAnchorUpdate"},"ob1VvS337vY-hp6pC6rWU":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html"},"F58wDDxY3ojFy7YkdXNnX":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#canRender"},"rSiI0qWjqkIkW_n3-l9M_":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#constructor"},"CvHXlgN2vAm_O4l_G4RW9":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#drawTile"},"ZNIJt9mDNdl7iNunTtiEB":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#drawTileLayer"},"o0OXEQAOGAgQWVK3iyjgi":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#getBounds"},"m56Djln9bl92N98VhYmd5":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#getBounds"},"PlHvQjXSN47adcs_v2ev8":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#pixelToTileCoords"},"tXvNwOmLCdvnM5N79eEMZ":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#tileToPixelCoords"},"_SY6oko32FUEDSNQT71Iu":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html"},"R8z3-RVANsvM9f8m-_uiw":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#canRender"},"KlGzQWi9BoJ0SLNvZbXUn":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#constructor"},"gqzq03aJbgN8ls7WSDXox":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#drawTile"},"euVU5FjioFnbmfK9oymPO":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#drawTileLayer"},"LIDiuZd0hLNaOqiOfDYIL":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#getBounds"},"kosn5EWObOMz--vVtp1hO":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#getBounds"},"Z6CiFyqrQls0jUyCIpyFq":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#pixelToTileCoords"},"BqSx9rxTmmn_EPqgurS-h":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#tileToPixelCoords"},"oOfgclhVmoEJaBolyu96K":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html"},"PLlDy5MELRn0NN7iEUF_4":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#canRender"},"5RjAnLMhVFtrYtk6Zutb6":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#constructor"},"RsZ5JyhmobkgXYnqFOd-a":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#drawTile"},"0MnX_U86QQ0FpmKUAJDze":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#drawTileLayer"},"plsirIJCbe40lGmlL2_ri":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#getBounds"},"CKj4eDl_DHYvV5tPSj_4-":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#pixelToTileCoords"},"4qWlzo8K8bUCxTGfbCSPw":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#tileToPixelCoords"},"mqFq2GoTYNTOhpUAYAa_K":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html"},"2ouCCToNzRNIayUbP00ui":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#cols"},"PzLYZK8od0oDqe_P1CLJP":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#infinite"},"15y_cDIbpUh9cIL7B-0Fc":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#name"},"crUYb1Zgp2cpWdJ3pJsgv":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#orientation"},"64D78UWg9Vc4vLZWvXlPZ":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#renderorder"},"6WQ5Ro17Q-uE-6WpATyIJ":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#rows"},"Lompa6hecV5ZxIA1HkGTo":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tiledversion"},"UkEvZwK9aGXZAQQFMdDuF":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tileheight"},"zcrq_kSPBOI7DyrOeIzp8":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tilewidth"},"ytAsdDPrDsyFTuF0zh6T_":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#version"},"qye32quCMkS27D93bgjVO":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#addTo"},"uioyWnDo9ZUVCR4cVPl2c":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#constructor"},"retfm2S8X6haf7HFZYqj3":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#destroy"},"zHJQ3jJzkKOX0fvkjU-j2":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getLayers"},"6yfJ8yQmwYdX94SBQ4bw_":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getObjects"},"_FHzX6N6ELTzHUpQbiQ4G":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getRenderer"},"lXs5AWIaqOS4PxfVDUk77":{"uri":"/melonJS/docs/melonjs/TMXTileset.html"},"54MX_A7rfaIA1ButwCaGm":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#isAnimated"},"tu1uyEt5b9oYQpPV2kBB7":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#isCollection"},"eIZ0X3-pledx0oWXzKdkX":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#_lastUpdate"},"tAv4vvT-kuTeR8hR4Rbv-":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#animations"},"K9ABUCljBKivVdCGBEhKW":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#constructor"},"MXO8tElbOfX7zr3iEoV8D":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#contains"},"psAzB8xOBqHlw-xXfGiue":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getTileImage"},"yr8tuFX8AS-fet0dSw2x7":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getTileProperties"},"Gal395jj-QPwKPdTk6mAt":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getViewTileId"},"EBi7tRTRTrhbKpx2XIpVO":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html"},"MNFX5pfMH6uY4AmGLxkeN":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#add"},"l8KV2SyQMs-sOjwtbVkmJ":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#getTilesetByGid"},"0l_bD1x8XbJPhSsOSByVb":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#getTilesetByIndex"},"89iX6BRRYMGvafqhdHkBD":{"uri":"/melonJS/docs/melonjs/Trigger.html"},"MVdbqA1HL1Mh5cfKTFGfl":{"uri":"/melonJS/docs/melonjs/Trigger.html#alpha"},"53jDpDKa9SUw5Dwp7urwF":{"uri":"/melonJS/docs/melonjs/Trigger.html#alwaysUpdate"},"jAK2345_GCD4p1eG5sPbu":{"uri":"/melonJS/docs/melonjs/Trigger.html#ancestor"},"DnCNgFWF_Gl50H4CdOwxS":{"uri":"/melonJS/docs/melonjs/Trigger.html#anchorPoint"},"SRIr6RoKQICO0V-HWz3TB":{"uri":"/melonJS/docs/melonjs/Trigger.html#autoTransform"},"TtdBAo5Xf5usiqwY-Vd_P":{"uri":"/melonJS/docs/melonjs/Trigger.html#blendMode"},"QcEk0cdeJsKJb3cnBjpGb":{"uri":"/melonJS/docs/melonjs/Trigger.html#body"},"Govw3oSCbQPP3n2GPd8PH":{"uri":"/melonJS/docs/melonjs/Trigger.html#bottom"},"DeKj4ptvdMbFJyOfxo8s9":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerX"},"rUcKW4iZALu3nr7gxXqpu":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerY"},"4EH17KZ9NEGX3a2cyD-N9":{"uri":"/melonJS/docs/melonjs/Trigger.html#currentTransform"},"vivQr9O3CqbJdwSgXl-bD":{"uri":"/melonJS/docs/melonjs/Trigger.html#floating"},"uwQUJqDCjyBkea0jlHLxH":{"uri":"/melonJS/docs/melonjs/Trigger.html#GUID"},"PpNQoFBKofZMkNZfntwqN":{"uri":"/melonJS/docs/melonjs/Trigger.html#height"},"xkjtpsfqgSuM4zoqA8wMP":{"uri":"/melonJS/docs/melonjs/Trigger.html#inViewport"},"4xrvCRlO7DgAGcek5YzWs":{"uri":"/melonJS/docs/melonjs/Trigger.html#isDirty"},"4vQOHkvHzXSJYFR-q3jvD":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFlippedX"},"1jnXHQCRaU1Wpd86Fyet0":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFlippedY"},"QwdP9yQRCQrjJgk8qyoUS":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFloating"},"4ikqtcbzTbo04bgUsA3AS":{"uri":"/melonJS/docs/melonjs/Trigger.html#isKinematic"},"y8QoUwaMSiqetJciCHS6l":{"uri":"/melonJS/docs/melonjs/Trigger.html#isPersistent"},"0LWOjCYFabEoRPLdtxdmC":{"uri":"/melonJS/docs/melonjs/Trigger.html#left"},"VW9xiSvVSSndM0BMOpmN7":{"uri":"/melonJS/docs/melonjs/Trigger.html#mask"},"sdH2C1-jOlKsoapj_zV8j":{"uri":"/melonJS/docs/melonjs/Trigger.html#name"},"xVLk8yv-XC00NX_K_sdth":{"uri":"/melonJS/docs/melonjs/Trigger.html#onVisibilityChange"},"pjLrO5CfBnylHslFbbdpO":{"uri":"/melonJS/docs/melonjs/Trigger.html#points"},"oGxWo7AvFG8dVzQCDS15K":{"uri":"/melonJS/docs/melonjs/Trigger.html#pos"},"4XGjekdHy4Qflb55s18a2":{"uri":"/melonJS/docs/melonjs/Trigger.html#right"},"QBMeZUtiwfUIHZR7iVP8U":{"uri":"/melonJS/docs/melonjs/Trigger.html#tint"},"P5nsgfS3TiUKT9IZ663tX":{"uri":"/melonJS/docs/melonjs/Trigger.html#top"},"7WdL5_4oVPefnApl8qnJ2":{"uri":"/melonJS/docs/melonjs/Trigger.html#updateWhenPaused"},"DCWBwode1Er53yeCS8JAG":{"uri":"/melonJS/docs/melonjs/Trigger.html#width"},"3H2fD1Is9c5lh3e2JwWOC":{"uri":"/melonJS/docs/melonjs/Trigger.html#angleTo"},"VEBe13TssOcwosDGHu97A":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerOn"},"B6XH7QNgws-Do4VRPLsDH":{"uri":"/melonJS/docs/melonjs/Trigger.html#clone"},"3IvEiARyp2ulGFoxvhc4v":{"uri":"/melonJS/docs/melonjs/Trigger.html#constructor"},"7ZQc6Lpo9FmD6WJ2R6hyh":{"uri":"/melonJS/docs/melonjs/Trigger.html#contains"},"1w1Gy4XVgcOG56lMvbx8F":{"uri":"/melonJS/docs/melonjs/Trigger.html#copy"},"j5k6FMP6hFUzPP8kCq5r1":{"uri":"/melonJS/docs/melonjs/Trigger.html#distanceTo"},"gINPmWCT1YKV7wJNYRoHw":{"uri":"/melonJS/docs/melonjs/Trigger.html#equals"},"uLeAXlZS6muqmcE5dArHw":{"uri":"/melonJS/docs/melonjs/Trigger.html#flipX"},"mkxqZgGif4oTKMJVnnG14":{"uri":"/melonJS/docs/melonjs/Trigger.html#flipY"},"OfAE_v049bUggPz5uU-YZ":{"uri":"/melonJS/docs/melonjs/Trigger.html#getAbsolutePosition"},"S25P1-wP3S27uqBVxHI_k":{"uri":"/melonJS/docs/melonjs/Trigger.html#getBounds"},"QdxmtBxf6iTZk2HoM6wUX":{"uri":"/melonJS/docs/melonjs/Trigger.html#getIndices"},"mU25_2HLOpftJmQ94vrdt":{"uri":"/melonJS/docs/melonjs/Trigger.html#getOpacity"},"8bsqz2-Ey2BiEbGtIrvyN":{"uri":"/melonJS/docs/melonjs/Trigger.html#isConvex"},"svob94uh1MEQZdRiNyd1S":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFinite"},"xDREIYepl7PpeNXdZYOIy":{"uri":"/melonJS/docs/melonjs/Trigger.html#lookAt"},"o54Ngpfpk_nim7ArkYInj":{"uri":"/melonJS/docs/melonjs/Trigger.html#onCollision"},"H1RnCRYwHG0KV_i_axWCr":{"uri":"/melonJS/docs/melonjs/Trigger.html#onDestroyEvent"},"VV5cTlK1ztOvOBKF26jHK":{"uri":"/melonJS/docs/melonjs/Trigger.html#overlaps"},"uEYcIAHRh-Uu8FJBaz5VJ":{"uri":"/melonJS/docs/melonjs/Trigger.html#recalc"},"T_eM6iyr6Sxig4OmWxtAR":{"uri":"/melonJS/docs/melonjs/Trigger.html#resize"},"ghaXkdTdWX5S9JfjA5fU0":{"uri":"/melonJS/docs/melonjs/Trigger.html#rotate"},"trwJcCG8RwQsUuVtvmQ96":{"uri":"/melonJS/docs/melonjs/Trigger.html#scale"},"Ms3G0t7LrxeCCrgAqweJ1":{"uri":"/melonJS/docs/melonjs/Trigger.html#scaleV"},"CNP7ahMYPFPKp8x_Q4ah1":{"uri":"/melonJS/docs/melonjs/Trigger.html#setOpacity"},"Fl3klidR2aAnRxgHUh8Th":{"uri":"/melonJS/docs/melonjs/Trigger.html#setShape"},"JZr0mVxSr1VFdbV3CIzrb":{"uri":"/melonJS/docs/melonjs/Trigger.html#setVertices"},"PdOJHBgSJ5KH4JXl0zcJg":{"uri":"/melonJS/docs/melonjs/Trigger.html#shift"},"B2aIZcmZfz_nkUGWq-LBJ":{"uri":"/melonJS/docs/melonjs/Trigger.html#to2d"},"B1cfrOxwTQmDMjaYwZ7_T":{"uri":"/melonJS/docs/melonjs/Trigger.html#toIso"},"7bvqyfAShUkvp02ghdnG_":{"uri":"/melonJS/docs/melonjs/Trigger.html#toPolygon"},"Dm1x9EQG55tMiYBGMLEXF":{"uri":"/melonJS/docs/melonjs/Trigger.html#transform"},"Wl-_gNjf0XRt7p44f8G_f":{"uri":"/melonJS/docs/melonjs/Trigger.html#translate"},"Y2b_urKP1oeyYpzV41pbN":{"uri":"/melonJS/docs/melonjs/Trigger.html#union"},"58mTn7vOKHBNJL4Iz5ckg":{"uri":"/melonJS/docs/melonjs/Trigger.html#draw"},"ry72J2tMZe0yu6WE2y_5C":{"uri":"/melonJS/docs/melonjs/Trigger.html#postDraw"},"9MuszEvRIhnQldkiy9WF4":{"uri":"/melonJS/docs/melonjs/Trigger.html#preDraw"},"BezU6E07IcvmHLHxqVrIT":{"uri":"/melonJS/docs/melonjs/Trigger.html#triggerEvent"},"qJDYetpe4tNHUQBCY48Z4":{"uri":"/melonJS/docs/melonjs/Trigger.html#update"},"_YMHTxFMNuwW4-803qpW-":{"uri":"/melonJS/docs/melonjs/Trigger.html#onAnchorUpdate"},"2_DkUnVwU2DYKnHH9d2M2":{"uri":"/melonJS/docs/melonjs/Tween.html"},"pyMshz2I-w10itl1b_owT":{"uri":"/melonJS/docs/melonjs/Tween/Easing.html"},"diMxfyq10LHQpNrQZB-6r":{"uri":"/melonJS/docs/melonjs/Tween/Interpolation.html"},"_M44_6BTOfazhk2F8lWv6":{"uri":"/melonJS/docs/melonjs/Tween.html#chain"},"q7aWt3hRaQkCAeXBJgw-m":{"uri":"/melonJS/docs/melonjs/Tween.html#constructor"},"cbT7lpk3pTu61yJyJzEHK":{"uri":"/melonJS/docs/melonjs/Tween.html#delay"},"qEEWSX4wiN6dFCO9sg9ia":{"uri":"/melonJS/docs/melonjs/Tween.html#easing"},"s_2f6nvR4KBvh5TQ1HExI":{"uri":"/melonJS/docs/melonjs/Tween.html#interpolation"},"NGerWjW6NVZR2LrMV3xWY":{"uri":"/melonJS/docs/melonjs/Tween.html#onComplete"},"EjHZhrgqXpHr5r2kjs1OQ":{"uri":"/melonJS/docs/melonjs/Tween.html#onStart"},"3_bIesLzrvXkrgbpZRWvL":{"uri":"/melonJS/docs/melonjs/Tween.html#onUpdate"},"M55sHLqi6BF1-X6t4qxpL":{"uri":"/melonJS/docs/melonjs/Tween.html#repeat"},"pScyF7gvJJNFmpXkJReMp":{"uri":"/melonJS/docs/melonjs/Tween.html#start"},"oUiVQOShD-zhiz4Jec_qf":{"uri":"/melonJS/docs/melonjs/Tween.html#stop"},"5WPgHiC1J8LNpQjgmJFzk":{"uri":"/melonJS/docs/melonjs/Tween.html#to"},"ImCt7nJOD5sGF0JueKeRv":{"uri":"/melonJS/docs/melonjs/Tween.html#yoyo"},"6VbPj4LDHAcjhSbmsbs8e":{"uri":"/melonJS/docs/melonjs/Vector2d.html"},"2pm8cJLuNJxu_p3tiNjkn":{"uri":"/melonJS/docs/melonjs/Vector2d.html#x"},"YW2tEM95UPniEyZgemi51":{"uri":"/melonJS/docs/melonjs/Vector2d.html#y"},"kY-zyJKB3PXjuKZrVSsVh":{"uri":"/melonJS/docs/melonjs/Vector2d.html#abs"},"Z2lGTimHcCXgXn_MxqPCh":{"uri":"/melonJS/docs/melonjs/Vector2d.html#add"},"04Q1A-08TG-i6Z-X1_15M":{"uri":"/melonJS/docs/melonjs/Vector2d.html#angle"},"YxhA8Y4OPKpjSO4LtdhS1":{"uri":"/melonJS/docs/melonjs/Vector2d.html#ceil"},"e3L_UVLJlPDd3aVsIaAnP":{"uri":"/melonJS/docs/melonjs/Vector2d.html#ceilSelf"},"BCflRnjErDEiBUjhTvOh4":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clamp"},"hqCWgrAGJttBCeS67tUjh":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clampSelf"},"KWCjLtruQhVncTNMuVuJo":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clone"},"Es_WUJqEU99BxXx7XsabM":{"uri":"/melonJS/docs/melonjs/Vector2d.html#constructor"},"x6hwC6_tPH0P2hnWzdxBN":{"uri":"/melonJS/docs/melonjs/Vector2d.html#copy"},"bxufgR3MXJnz_J7MCV54a":{"uri":"/melonJS/docs/melonjs/Vector2d.html#cross"},"rzlIsHlrRV2UE85dgRgoM":{"uri":"/melonJS/docs/melonjs/Vector2d.html#distance"},"Qhi-OqPBqV-JgJp70ywgw":{"uri":"/melonJS/docs/melonjs/Vector2d.html#div"},"7cbyZO6cAf61IK8Azawzc":{"uri":"/melonJS/docs/melonjs/Vector2d.html#dot"},"If8Z9Ej8EEYiegepP0mvq":{"uri":"/melonJS/docs/melonjs/Vector2d.html#equals"},"SIt6vELDpmnr_gUldzDV4":{"uri":"/melonJS/docs/melonjs/Vector2d.html#floor"},"-JNAWX0XMFCmvErLolskc":{"uri":"/melonJS/docs/melonjs/Vector2d.html#floorSelf"},"bwJx1fiy7s5mTa0GMdUKf":{"uri":"/melonJS/docs/melonjs/Vector2d.html#length"},"mk8RiLrU64riDSU898mmY":{"uri":"/melonJS/docs/melonjs/Vector2d.html#length2"},"-BzqnfO9Sn_bo-vN-dVjL":{"uri":"/melonJS/docs/melonjs/Vector2d.html#lerp"},"VNnXtUPHqkUPQmImskivK":{"uri":"/melonJS/docs/melonjs/Vector2d.html#maxV"},"7QdOgAkhHYD3PIFA1ldqf":{"uri":"/melonJS/docs/melonjs/Vector2d.html#minV"},"0zrOwC2vGcMYY5KUxcrgf":{"uri":"/melonJS/docs/melonjs/Vector2d.html#negate"},"JxjFgifzAFUq4K0llAFtG":{"uri":"/melonJS/docs/melonjs/Vector2d.html#negateSelf"},"CAOzoILh8t-pM-YAfaisp":{"uri":"/melonJS/docs/melonjs/Vector2d.html#normalize"},"QI2WytArhCoyamxGn5Jyu":{"uri":"/melonJS/docs/melonjs/Vector2d.html#perp"},"lAl2vmc0LveBP-6mBMklt":{"uri":"/melonJS/docs/melonjs/Vector2d.html#project"},"U-LL1wWtQ2hN9fTz20cho":{"uri":"/melonJS/docs/melonjs/Vector2d.html#projectN"},"PY-7rn9ovzRZBoibBojte":{"uri":"/melonJS/docs/melonjs/Vector2d.html#rotate"},"YpS_tEv4DYW8zdsBLJfx7":{"uri":"/melonJS/docs/melonjs/Vector2d.html#scale"},"S6OZ1F6CqM1W6xnAR-U7S":{"uri":"/melonJS/docs/melonjs/Vector2d.html#scaleV"},"-rxT-XrdMRMkfvvHJIjQh":{"uri":"/melonJS/docs/melonjs/Vector2d.html#set"},"_e_KxAnULp_lUCW6x1-xd":{"uri":"/melonJS/docs/melonjs/Vector2d.html#setV"},"QUmaqlW60Cu7Z_Hapo5ar":{"uri":"/melonJS/docs/melonjs/Vector2d.html#setZero"},"_4qRjo03BWEejvyZxrkcm":{"uri":"/melonJS/docs/melonjs/Vector2d.html#sub"},"93BUCOX2A9SxHJTlMmT_3":{"uri":"/melonJS/docs/melonjs/Vector2d.html#to2d"},"KTAVxwn6wQbjVrnYUCboe":{"uri":"/melonJS/docs/melonjs/Vector2d.html#toIso"},"rTiVB8_67SrfDcTLOtRUX":{"uri":"/melonJS/docs/melonjs/Vector2d.html#toString"},"BXFprDAprNZMYoTNk_S5b":{"uri":"/melonJS/docs/melonjs/Vector2d.html#equals"},"N7G1sacFPaHuo16ibMGBn":{"uri":"/melonJS/docs/melonjs/Vector3d.html"},"mBTRlRe5EfEtI-95QKQWE":{"uri":"/melonJS/docs/melonjs/Vector3d.html#x"},"IpGbm41JH1ungYk2VMAS8":{"uri":"/melonJS/docs/melonjs/Vector3d.html#y"},"B6KvSMBl7mt5iHorDiQl_":{"uri":"/melonJS/docs/melonjs/Vector3d.html#z"},"TVwPgQiuz2VWPHH6vmFwV":{"uri":"/melonJS/docs/melonjs/Vector3d.html#abs"},"HtSCUd248oOtBZvwRWXQK":{"uri":"/melonJS/docs/melonjs/Vector3d.html#add"},"NLtNEnlosAoT61r95A5eo":{"uri":"/melonJS/docs/melonjs/Vector3d.html#angle"},"pgH7Ub8ctrsdtdnrBZ69h":{"uri":"/melonJS/docs/melonjs/Vector3d.html#ceil"},"Xhza8jkK4tmAtagsPNTij":{"uri":"/melonJS/docs/melonjs/Vector3d.html#ceilSelf"},"Zo4979EyIGqZbe6mS-u5K":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clamp"},"QMeGw77Mpl0Ti7oRVZ7Wf":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clampSelf"},"gBVNyRwiQ_JynbSgko-lZ":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clone"},"mbb9CzJYqnAgEqDTQOkqZ":{"uri":"/melonJS/docs/melonjs/Vector3d.html#constructor"},"wQjs7uHV5A00z4-eQC_zr":{"uri":"/melonJS/docs/melonjs/Vector3d.html#copy"},"B_3KFXduiDR3a17Oi8KaH":{"uri":"/melonJS/docs/melonjs/Vector3d.html#cross"},"jSuz8DGs9KnJavvqaGoK_":{"uri":"/melonJS/docs/melonjs/Vector3d.html#distance"},"C1oz6NJLfiyxOAF46hHrw":{"uri":"/melonJS/docs/melonjs/Vector3d.html#div"},"jhNNiOp_5ssuqAUbkZkjw":{"uri":"/melonJS/docs/melonjs/Vector3d.html#dot"},"jq2a4L2H5TalQK8U0Az_R":{"uri":"/melonJS/docs/melonjs/Vector3d.html#equals"},"U3aX16R7-j5wTK9KZALOI":{"uri":"/melonJS/docs/melonjs/Vector3d.html#floor"},"Vbold4sEpm6DUhPFtqJRT":{"uri":"/melonJS/docs/melonjs/Vector3d.html#floorSelf"},"ZL2ZCDcAPS2l20aaOxPYK":{"uri":"/melonJS/docs/melonjs/Vector3d.html#length"},"oTTza0OJEqDHkH9e1JUxm":{"uri":"/melonJS/docs/melonjs/Vector3d.html#length2"},"D3kA6oHPa3CiHyQZECKs8":{"uri":"/melonJS/docs/melonjs/Vector3d.html#lerp"},"qYMzemREpLGsTmvyfMZbm":{"uri":"/melonJS/docs/melonjs/Vector3d.html#maxV"},"6TaBsSTNatMUVekqgqKhL":{"uri":"/melonJS/docs/melonjs/Vector3d.html#minV"},"RUQ_Y34obCgqBeCbdIomR":{"uri":"/melonJS/docs/melonjs/Vector3d.html#negate"},"cdhHEVeQt5s9ZfnJJ10OM":{"uri":"/melonJS/docs/melonjs/Vector3d.html#negateSelf"},"WYBaLqhpqYdg-VDmPsyj2":{"uri":"/melonJS/docs/melonjs/Vector3d.html#normalize"},"pES4HcTSJ780oZLIYLC5N":{"uri":"/melonJS/docs/melonjs/Vector3d.html#perp"},"4xuc7KH8fZpQjeyUw-6ZZ":{"uri":"/melonJS/docs/melonjs/Vector3d.html#project"},"r4_IuITEEOLfxPAB8dvEL":{"uri":"/melonJS/docs/melonjs/Vector3d.html#projectN"},"TYf8mDgLj335FoaRTmiqm":{"uri":"/melonJS/docs/melonjs/Vector3d.html#rotate"},"DLfafbpGXVL14WijnTkf1":{"uri":"/melonJS/docs/melonjs/Vector3d.html#scale"},"CYrf9VRRFwCTLi4GQkMfg":{"uri":"/melonJS/docs/melonjs/Vector3d.html#scaleV"},"1pzak3tOh_jy2jwFOKv1Y":{"uri":"/melonJS/docs/melonjs/Vector3d.html#set"},"WE-XpYM9LgNfdUFzPhWxC":{"uri":"/melonJS/docs/melonjs/Vector3d.html#setV"},"ACeCTCjz4LLKuOC9GtgZc":{"uri":"/melonJS/docs/melonjs/Vector3d.html#setZero"},"dKRXAoSmZ2BMQokp23N4V":{"uri":"/melonJS/docs/melonjs/Vector3d.html#sub"},"xiCCQ_tWUL9NdaF-HpaWG":{"uri":"/melonJS/docs/melonjs/Vector3d.html#to2d"},"XHi7kkjEMx97DC6rwC7xE":{"uri":"/melonJS/docs/melonjs/Vector3d.html#toIso"},"pV6pK2fIN_7K5MpKyouIh":{"uri":"/melonJS/docs/melonjs/Vector3d.html#toString"},"sMnKxrPjKgOBDNYFiYvUW":{"uri":"/melonJS/docs/melonjs/Vector3d.html#equals"},"JbUTpeKcAMI01rg1Elyd1":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html"},"mj6vw57tqzy7G-SF63Jdm":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#activeShader"},"ps8AwWW5ywb4Q5RAZStyF":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#attributes"},"pKf3zQ-vNseCzY41RcFdW":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#mode"},"hx40bf_8p-17NQAK_PFxn":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#vertexByteSize"},"UtkrU0HBfa_pffGVGjtxi":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#vertexSize"},"rAeePUShHx7NctP9pAJfe":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#addAttribute"},"zTtJHv3c0KlUFYiF8TqW8":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#addQuad"},"UHIzeibSX8b_hQQTIx458":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"yvwxAVOINIuW5axDaP5kB":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"JsnfWLQNRzYHg-wDaRHpT":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"YETbnJTHdlrlCOl-DjnO6":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#clear"},"radIDBrBX-wNtH6HxhKuB":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#clearColor"},"CL1Rm1iOfXmlCtBjeAPN_":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#constructor"},"risYQ9MT5LRyBU9p8ZXu3":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#createTexture2D"},"rlKimaHZIzVHZUV9OCL_R":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#drawVertices"},"0LS98atfT_fHZIWhohj3C":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#flush"},"nq-uy1y7wt7etULK8ulwX":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#setProjection"},"rZRJ9N8BtAUMArmfkw3IH":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#setViewport"},"e0yMMvHtDMVl6yIZqhPdU":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#unbindTexture2D"},"DVq6cdQrTWp7cQfn6uIj0":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#useShader"},"c_Vfxbo_h1BXo6wjKAYnF":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html"},"r_yGnV6Gq2tuB9B8GC_M_":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#compositors"},"ySnBRFU4fD3atFvbH6bxh":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#currentCompositor"},"LO38Rr3qe6DAv3i5hRsy3":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#currentTransform"},"5ZHkmwLV2i-FfCNiIFlxq":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#gl"},"tKtu9bUN6A8nFZLMjDVsc":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#GPURenderer"},"BEGMEwv921vW9rqnTEIXW":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#GPUVendor"},"-r4P-1oCtEA-Vzd0EPBYr":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#isContextValid"},"IUa1JvWjQ7xCxD_dmAeOR":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#maxTextures"},"yHdpkbdyRYP68jD9b_-bC":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#path2D"},"pXqVqfh27zrTwElJ0jwzN":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#settings"},"WPpPtw1nyNYfFThOMhR9A":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#WebGLVersion"},"OtzJB_lkqMk0UFkE6TK1K":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clear"},"FZWR8Wql1FKL7TPbX4D9X":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearColor"},"ZDO4DZWOGLljblR6IN-wf":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearMask"},"5h8KT1Tn9E9jH0l9ewHJ_":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearRect"},"pbnXinsa0zdVRoDSj8yiG":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearTint"},"dzFKF9e8AZ2HD8XSRLSiW":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clipRect"},"jFLf5fhgNlLMjKVJDXb8U":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#constructor"},"zRv61Uv0JJy45Yxr-GQkW":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#createPattern"},"pwShebT9qS8U8AzubaMHh":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#drawImage"},"jB5YcWSzI7CrpoM9LunZ4":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#drawPattern"},"vovZvn-hyfmIEQi9EBXEK":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fill"},"DPe6ZolWNWA-nxg3Evvaz":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillArc"},"h3hbpm85iHhsEagytPFuf":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillEllipse"},"k4YOqsjqHReIdbdlATdrd":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillLine"},"ZPQBWatWNyjsPDXKfq7mk":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillPolygon"},"nCKjhQngODSMq2ek88rsS":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillRect"},"69UkuZXISQw2pNwqhceFZ":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillRoundRect"},"vA8ZHnWGM_nhGp8G_GPm5":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#flush"},"G6QnrBDbwyqbTJIUOKSa9":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getBlendMode"},"MKDLfF-dqnJQkS8FvoEJM":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getCanvas"},"ml7STucpGzvE0mFGlMby2":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getColor"},"2t6ZwoPkkCwbcfttLHPxM":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContext"},"C20xmUuVJJ7EToEfu8vvk":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContext2d"},"jVBUeiCA0-lGcDa_5qoaB":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContextGL"},"yX6kV7bn5oyhQpywxUzXi":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getGlobalAlpha"},"xwzEarGHXL57-jF0TFGqt":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getHeight"},"vrNBykWWO5Vm3gPc2KHeP":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getScreenCanvas"},"QZ7LT7NWlQLo7OBHu3vav":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getScreenContext"},"ZtL_AXzEKclZw5edYw5j9":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getWidth"},"ZpuqBi1hR2kDPJy1L9cOA":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#globalAlpha"},"0yKcOkPjj6f_IxQzZEaZg":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#overlaps"},"EEyAJsb0TetEg87DeIbKE":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#reset"},"pLxF0mzxvgiplLcF7FJ9I":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#resetTransform"},"QCZDmLOn-0RLFXx4WLVxR":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#resize"},"TmJSUsJaRqPa2VVyvXtD3":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#restore"},"S050hJ2OwUJxV7dN-wRDA":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#rotate"},"vbpvK1lxsAv5-t1mfQE6Z":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#save"},"czc-BNrBpj69m8swOHj8v":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#scale"},"VkTHksWu7g0yK6KOjRApW":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setAntiAlias"},"SAK8nbtsDEzDilvf1eBTT":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setBlendMode"},"3WGMgwQYY7nBgTDLkCwPi":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setColor"},"z2YayWu4vrXP14bKqKnuY":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setCompositor"},"LaOnAsZFpUeC7--AGN5vY":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setGlobalAlpha"},"Y77FYtq_e9iIsdjjnGSjg":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setLineWidth"},"AHmP7BVibRxQYUlBe1F4X":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setMask"},"QuyEr8BeV4AJkYflrFQ5O":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setProjection"},"mArC4rrhO_Md9ZIZ0Pqr-":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setTint"},"e1MKVZEMQLBDx781JA-wg":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setTransform"},"4-EJ6wpFK5tyGbITrQdSQ":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#stroke"},"93CE6YJ5eIsRCwAh2hDqG":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeArc"},"7EWiDHKEqw45mWQ5YyG4P":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeEllipse"},"fPY8gqj39eRPN8QQNKCpG":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeLine"},"kGIS4DLuO_4BgYaTLVNY7":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokePolygon"},"w1MAdQcHhIQjd9Y4uJo3A":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeRect"},"YCk1sMYq8hNQy1JgEmN87":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeRoundRect"},"BHr5fzoPEDmB1Oh908iGx":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#tint"},"aBiPhHntkokmhXHDXenKd":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#transform"},"muKiBDsw8lce4pFlFxlLN":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#translate"},"F6bAhoBeFlrCxD4ZtLwCl":{"uri":"/melonJS/docs/melonjs/World.html"},"p75Kp-nqK04aSKgW3mEML":{"uri":"/melonJS/docs/melonjs/World.html#alpha"},"9qw4j2O2-Bz-AR_Tg8u3O":{"uri":"/melonJS/docs/melonjs/World.html#alwaysUpdate"},"V9HlFw86GMp4V2uF4_rF8":{"uri":"/melonJS/docs/melonjs/World.html#ancestor"},"YI-HY9BqGSNXxKQWK7w6x":{"uri":"/melonJS/docs/melonjs/World.html#anchorPoint"},"GI8EQzAQgrlmOw7yPMoVi":{"uri":"/melonJS/docs/melonjs/World.html#autoDepth"},"iixGRQERM85y2XsZL8-gy":{"uri":"/melonJS/docs/melonjs/World.html#autoSort"},"3ktC7JcqL3cJC9mJH1rsg":{"uri":"/melonJS/docs/melonjs/World.html#autoTransform"},"Lc4OW0hJkLHe2qrRGVrGc":{"uri":"/melonJS/docs/melonjs/World.html#backgroundColor"},"NVE7tbPcnJ3IRw04W7PhZ":{"uri":"/melonJS/docs/melonjs/World.html#blendMode"},"Ht2yHIpF7RjidRh4OQLTM":{"uri":"/melonJS/docs/melonjs/World.html#bodies"},"BIucRydF19yl9jnxDn03O":{"uri":"/melonJS/docs/melonjs/World.html#body"},"uSo0KxQZ8ETOHEwdAgRiZ":{"uri":"/melonJS/docs/melonjs/World.html#bottom"},"NYrjbmsTphIXWL-2JHcaM":{"uri":"/melonJS/docs/melonjs/World.html#broadphase"},"wjompHZ7Ra4EfQUL63Qvw":{"uri":"/melonJS/docs/melonjs/World.html#centerX"},"rStWMsIJmlVLulNPTOxEL":{"uri":"/melonJS/docs/melonjs/World.html#centerY"},"kowEXyHeoJzlnISgPcqKp":{"uri":"/melonJS/docs/melonjs/World.html#clipping"},"7nCiKSFId7_QLVw4Hzrvv":{"uri":"/melonJS/docs/melonjs/World.html#currentTransform"},"KGT9ErktqnA2Eh0f-Oej1":{"uri":"/melonJS/docs/melonjs/World.html#enableChildBoundsUpdate"},"itgM74vJlo1EPWYfd07Mt":{"uri":"/melonJS/docs/melonjs/World.html#floating"},"y4SRPzageE26rx6aCk4HZ":{"uri":"/melonJS/docs/melonjs/World.html#fps"},"8eJDkXlmlWUao7RGWdTRa":{"uri":"/melonJS/docs/melonjs/World.html#gravity"},"joXWGK9M4WDHM9mWqiuIA":{"uri":"/melonJS/docs/melonjs/World.html#GUID"},"I409QUkTlBLQVzZVN4767":{"uri":"/melonJS/docs/melonjs/World.html#height"},"Of7UUetH_HGMPEfFLuWI5":{"uri":"/melonJS/docs/melonjs/World.html#inViewport"},"VRYDV2qNBv1FYMfipO28n":{"uri":"/melonJS/docs/melonjs/World.html#isDirty"},"zBBKjZ46Gy66f--Xah2Zm":{"uri":"/melonJS/docs/melonjs/World.html#isFlippedX"},"T6jmU9GCIqMYifFMKuzWv":{"uri":"/melonJS/docs/melonjs/World.html#isFlippedY"},"-7xn8mArq1oHHzfKVGP9V":{"uri":"/melonJS/docs/melonjs/World.html#isFloating"},"qojmXmwsBl9fRCxoBUWnS":{"uri":"/melonJS/docs/melonjs/World.html#isKinematic"},"BNdnjUJMHZ2X_lUxHZ3jw":{"uri":"/melonJS/docs/melonjs/World.html#isPersistent"},"hWFVBMlImh4NLa5nKvFCZ":{"uri":"/melonJS/docs/melonjs/World.html#left"},"1MFjfjj2FOyyY3uIFEMGV":{"uri":"/melonJS/docs/melonjs/World.html#mask"},"Z-LNQHa5Zyls35sRvU3WU":{"uri":"/melonJS/docs/melonjs/World.html#name"},"hMeCyF7m_tS2KtSd8WElO":{"uri":"/melonJS/docs/melonjs/World.html#onVisibilityChange"},"64CBQFIatPa0NGpaTVFk1":{"uri":"/melonJS/docs/melonjs/World.html#points"},"Cl3vUys5zQNorMbbUH7NC":{"uri":"/melonJS/docs/melonjs/World.html#pos"},"gB6gEu5d5mZEnXTWCDkmZ":{"uri":"/melonJS/docs/melonjs/World.html#preRender"},"hWyo1dvYsvzyAQt4L6on7":{"uri":"/melonJS/docs/melonjs/World.html#right"},"lnQ2sjqS1boQ6Kqt1Kp5J":{"uri":"/melonJS/docs/melonjs/World.html#root"},"7x4wMUUMNitLzTcynLM2D":{"uri":"/melonJS/docs/melonjs/World.html#sortOn"},"fdN6N8OI5Scf9aL6YjKbE":{"uri":"/melonJS/docs/melonjs/World.html#tint"},"ju4yxZv-51Hu-7KTFuPCi":{"uri":"/melonJS/docs/melonjs/World.html#top"},"mZld25Fk4NegMXGKOMgZC":{"uri":"/melonJS/docs/melonjs/World.html#updateWhenPaused"},"FuL5R__gW7TRu1ZWprOqR":{"uri":"/melonJS/docs/melonjs/World.html#width"},"Iabd2NAw7MoayGCLWk3y6":{"uri":"/melonJS/docs/melonjs/World.html#addBody"},"R8677lYnyLU8r0JwcaTAH":{"uri":"/melonJS/docs/melonjs/World.html#addChild"},"DTMKXiC1LJZq1Alweg5FU":{"uri":"/melonJS/docs/melonjs/World.html#addChildAt"},"ILzMEtcfEZQ6qElbzu1LT":{"uri":"/melonJS/docs/melonjs/World.html#angleTo"},"W6Cod__L35JBZhFI0DJKO":{"uri":"/melonJS/docs/melonjs/World.html#centerOn"},"mbCEub0RitO1yGGxcDoGu":{"uri":"/melonJS/docs/melonjs/World.html#clone"},"al4CXTJ1i01wgnE8P7flC":{"uri":"/melonJS/docs/melonjs/World.html#constructor"},"9NlbKb0xhP2AEUIowd08r":{"uri":"/melonJS/docs/melonjs/World.html#contains"},"JVvsroeTNIICO2ZxgCppT":{"uri":"/melonJS/docs/melonjs/World.html#copy"},"I9ctvTcbEZmyYI_LuxY3w":{"uri":"/melonJS/docs/melonjs/World.html#distanceTo"},"hGGJ5NbB2D9k5MANuGoYb":{"uri":"/melonJS/docs/melonjs/World.html#equals"},"EQRL6zvpQbMgjKJmtiQQe":{"uri":"/melonJS/docs/melonjs/World.html#flipX"},"JvA_hgPpk6Vu8IQ3n0Hla":{"uri":"/melonJS/docs/melonjs/World.html#flipY"},"8OtUO6600rGMrHglli36b":{"uri":"/melonJS/docs/melonjs/World.html#forEach"},"CNNzhduRxhO8VkOkpRRjL":{"uri":"/melonJS/docs/melonjs/World.html#getAbsolutePosition"},"PTcYTVjG6I3NmK3Kr4Jlb":{"uri":"/melonJS/docs/melonjs/World.html#getBounds"},"p3uIG3HwE9sN5znpgERgb":{"uri":"/melonJS/docs/melonjs/World.html#getChildAt"},"90Om-qz6liHbgvkd7HTPr":{"uri":"/melonJS/docs/melonjs/World.html#getChildByGUID"},"R8aM4rczhEHMQ0EO33rdL":{"uri":"/melonJS/docs/melonjs/World.html#getChildByName"},"bW7PnztLFu6pxGJ72dKga":{"uri":"/melonJS/docs/melonjs/World.html#getChildByProp"},"yq0DMk3V2Q6FZgGol91xJ":{"uri":"/melonJS/docs/melonjs/World.html#getChildByType"},"uq-_-ErOv1B4ntnFnOysS":{"uri":"/melonJS/docs/melonjs/World.html#getChildIndex"},"QA1zQhtSLeuKfqa6zM_0_":{"uri":"/melonJS/docs/melonjs/World.html#getChildren"},"2nUD8jTufR89htLynTcI-":{"uri":"/melonJS/docs/melonjs/World.html#getIndices"},"_bC4TxBKKta6VrMoACRov":{"uri":"/melonJS/docs/melonjs/World.html#getNextChild"},"ydfpTLDSVxTduCdv7pk1i":{"uri":"/melonJS/docs/melonjs/World.html#getOpacity"},"8leFIS4UnO3ovD2GrN-ej":{"uri":"/melonJS/docs/melonjs/World.html#hasChild"},"-AeI0Hh51I7HlCYuLynIc":{"uri":"/melonJS/docs/melonjs/World.html#isConvex"},"5-qxDJFbbtGb0C6c5TOjI":{"uri":"/melonJS/docs/melonjs/World.html#isFinite"},"F5M3DSpl08na049Vw0G7b":{"uri":"/melonJS/docs/melonjs/World.html#lookAt"},"Au6N9Ql5iO2OOTi6LrXyD":{"uri":"/melonJS/docs/melonjs/World.html#moveDown"},"x9qeFRZR1lAtSG2bVMIYA":{"uri":"/melonJS/docs/melonjs/World.html#moveToBottom"},"ZLnQQPPfxMyN5Reu9ozur":{"uri":"/melonJS/docs/melonjs/World.html#moveToTop"},"aCm0-Oni2Heb5PtHMuwrE":{"uri":"/melonJS/docs/melonjs/World.html#moveUp"},"p-LoIiRMkSgJrBf1nYyxG":{"uri":"/melonJS/docs/melonjs/World.html#onChildChange"},"tuXJ7v5kwnU4z5UoNVren":{"uri":"/melonJS/docs/melonjs/World.html#onCollision"},"BGly0uGpD4CuQBCgQPtGf":{"uri":"/melonJS/docs/melonjs/World.html#onDestroyEvent"},"F6xmF2FQUFjUw-rUpQhda":{"uri":"/melonJS/docs/melonjs/World.html#overlaps"},"bKJc0XpHkU0T13cLOJzLu":{"uri":"/melonJS/docs/melonjs/World.html#recalc"},"5CIehKERiBfdDR68Zy1Ea":{"uri":"/melonJS/docs/melonjs/World.html#removeBody"},"XBvgvNPZEWiKxgrwa9Dua":{"uri":"/melonJS/docs/melonjs/World.html#removeChild"},"w7ggKCHzJAXYwrt0HG-rL":{"uri":"/melonJS/docs/melonjs/World.html#removeChildNow"},"M8o6tq6TcRTIfeKgeLAQA":{"uri":"/melonJS/docs/melonjs/World.html#reset"},"03ID3h0qOQM0SItMbNPod":{"uri":"/melonJS/docs/melonjs/World.html#reset"},"BSqpD5RuhGpq6pBpMXKb8":{"uri":"/melonJS/docs/melonjs/World.html#resize"},"Yxz1a3LrJ5SGgpQ9AjkqR":{"uri":"/melonJS/docs/melonjs/World.html#rotate"},"r1YjiUq47iJxG9n_4mXby":{"uri":"/melonJS/docs/melonjs/World.html#scale"},"Vt633mX9PZwuZgTNEvm4k":{"uri":"/melonJS/docs/melonjs/World.html#scaleV"},"PBepmobKKOK1v-G4oQGLW":{"uri":"/melonJS/docs/melonjs/World.html#setChildsProperty"},"uVnxackgSW7XAHxCZQsX6":{"uri":"/melonJS/docs/melonjs/World.html#setOpacity"},"z_1Mkjw--4HrstGHji9Aj":{"uri":"/melonJS/docs/melonjs/World.html#setShape"},"lBBnZqOkm2n9yog2z100C":{"uri":"/melonJS/docs/melonjs/World.html#setVertices"},"6ovyt5dqOpyER2cf2e2Yy":{"uri":"/melonJS/docs/melonjs/World.html#shift"},"XN5hclCbtbDzxo8U5_tzp":{"uri":"/melonJS/docs/melonjs/World.html#sort"},"uePaTBjL-CUHKBVRnswgl":{"uri":"/melonJS/docs/melonjs/World.html#swapChildren"},"wOFkra5smIadG_I7763dr":{"uri":"/melonJS/docs/melonjs/World.html#to2d"},"ddz8y8iIsrN79vEIwSGtV":{"uri":"/melonJS/docs/melonjs/World.html#toIso"},"n9SoLBk1E1N-GWQ1-AYC-":{"uri":"/melonJS/docs/melonjs/World.html#toPolygon"},"5zZY0D02NhY8i3sFs92S6":{"uri":"/melonJS/docs/melonjs/World.html#transform"},"F420P1ChouGTq8OMsOyDo":{"uri":"/melonJS/docs/melonjs/World.html#translate"},"U12fqg7XnTKTVYxkUkncD":{"uri":"/melonJS/docs/melonjs/World.html#union"},"D3MX55mW_LbqlV8Juvbt-":{"uri":"/melonJS/docs/melonjs/World.html#draw"},"rS1fGJkM52KA3ur2tJz7K":{"uri":"/melonJS/docs/melonjs/World.html#postDraw"},"lTQmS5ZM9mN8fhDI6kaiH":{"uri":"/melonJS/docs/melonjs/World.html#preDraw"},"f727N6VwWCmYKCea0CnlN":{"uri":"/melonJS/docs/melonjs/World.html#update"},"ll8gFWs_-M36_4COP5zCU":{"uri":"/melonJS/docs/melonjs/World.html#isAttachedToRoot"},"kU4eXck-siQX_a0Jd_bT9":{"uri":"/melonJS/docs/melonjs/World.html#onAnchorUpdate"},"vDibj5jIzzvR448ryAjs5":{"uri":"global.html#version"},"EmGWIy8y27rh5af5jhZfa":{"uri":"global.html#initialized"},"JxZmivkobdV1UmJbpl8I1":{"uri":"global.html#skipAutoInit"},"vV7XxqWZ99nPwjl_rQX1l":{"uri":"/melonJS/docs/melonjs/boot.html"}}}