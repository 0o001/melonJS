{"version":"1.0.0","metadata":{"linker":"(unsigned)","siteRoot":"docs"},"root":{"id":"root-YNFNjy99Y9zxwmzbauKVY","name":"","type":"RootDoc","members":[{"id":"uzsOx4tMsjMFZfqI_0Sht","name":"audio","brief":"","type":"NSDoc","members":[{"id":"cbCc8ElnhM_75LUI4T6J9","name":"stopOnAudioError","brief":"","defaultValue":"true","type":"PropertyDoc","description":"<p>Specify either to stop on audio loading error or not<br>\nif true, melonJS will throw an exception and stop loading<br>\nif ..."},{"id":"bApA_LbNURLJw2NTmchVC","name":"disable","brief":"","scope":"static","type":"FunctionDoc","description":"<p>disable audio output</p>","params":[],"returns":[]},{"id":"oDMURAWjt-jDwZQEF7Ciu","name":"enable","brief":"","scope":"static","see":["audio#disable"],"type":"FunctionDoc","description":"<p>enable audio output <br>\nonly useful if audio supported and previously disabled through</p>","params":[],"returns":[]},{"id":"-YG4qQWtPwHuq2n4KycwV","name":"fade","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Fade a currently playing sound between two volumee.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"from","optional":false,"description":"<p>Volume to fade from (0.0 to 1.0).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"to","optional":false,"description":"<p>Volume to fade to (0.0 to 1.0).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"duration","optional":false,"description":"<p>Time in milliseconds to fade.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will fade.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hjWUHAlSdZcd4eZsAnerm","name":"getCurrentTrack","brief":"","scope":"static","type":"FunctionDoc","description":"<p>returns the current track Id</p>","params":[],"returns":[{"description":"<p>audio track name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"doGchQOh9ACYkhFziIFWV","name":"getVolume","brief":"","scope":"static","type":"FunctionDoc","description":"<p>get the default global volume</p>","params":[],"returns":[{"description":"<p>current volume value in Float [0.0 - 1.0] .</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"czKa68QO0lOX_2l738Cr1","name":"hasAudio","brief":"","scope":"static","type":"FunctionDoc","description":"<p>check if audio (HTML5 or WebAudio) is supported</p>","params":[],"returns":[{"description":"<p>return true if audio (HTML5 or WebAudio) is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Go2Qmmmf1wyXCd5PsiWyD","name":"hasFormat","brief":"","scope":"static","type":"FunctionDoc","description":"<p>check if the given audio format is supported</p>","params":[{"identifier":"codec","optional":false,"description":"<p>audio format : &quot;mp3&quot;, &quot;mpeg&quot;, opus&quot;, &quot;ogg&quot;, &quot;oga&quot;, &quot;wav&quot;, &quot;aac...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>return true if the given audio format is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SyfzFnPK4bvLZrdlCbXr1","name":"init","brief":"","examples":[{"caption":"","code":"\n // initialize the \"sound engine\", giving \"webm\" as default desired audio format, and \"mp3\" as a fallback\n if (!me.audio.init(\"webm,mp3\")) {\n     alert(\"Sorry but your browser does not support html 5 audio !\");\n     return;\n }\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Initialize and configure the audio support.<br>\nmelonJS supports a wide array of audio codecs that have varying browser su...","params":[{"identifier":"format","optional":true,"default":"\"mp3\"","description":"<p>audio format to prioritize</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Indicates whether audio initialization was successful</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rQ49QF6n8btgyJA4SlA8G","name":"mute","brief":"","examples":[{"caption":"","code":"\n // mute the background music\n me.audio.mute(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>mute or unmute the specified sound, but does not pause the playback.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will mute.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"mute","optional":true,"default":"true","description":"<p>True to mute and false to unmute</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"E-dOWM-gLKPpCGZ3uGeRA","name":"muteAll","brief":"","scope":"static","type":"FunctionDoc","description":"<p>mute all audio</p>","params":[],"returns":[]},{"id":"8ZLzHD0DhZnmHrUuqLWTh","name":"muted","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Returns true if audio is muted globally.</p>","params":[],"returns":[{"description":"<p>true if audio is muted globally</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CBCZlFS4xA7dPpPGOinB4","name":"pause","brief":"","examples":[{"caption":"","code":"\n me.audio.pause(\"cling\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>pause the specified sound on all channels<br>\nthis function does not reset the currentTime property</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will pause.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"MqNuLx5oZsDjTnYpOsHGi","name":"pauseTrack","brief":"","examples":[{"caption":"","code":"\n me.audio.pauseTrack();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>pause the current audio track</p>","params":[],"returns":[]},{"id":"AAtXqibH6fLU4d6a7XmvA","name":"play","brief":"","examples":[{"caption":"","code":"\n // play the \"cling\" audio clip\n me.audio.play(\"cling\");\n // play & repeat the \"engine\" audio clip\n me.audio.play(\"engine\", true);\n // play the \"gameover_sfx\" audio clip and call myFunc when finished\n me.audio.play(\"gameover_sfx\", false, myFunc);\n // play the \"gameover_sfx\" audio clip with a lower volume level\n me.audio.play(\"gameover_sfx\", false, null, 0.5);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>play the specified sound</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"loop","optional":true,"default":"false","description":"<p>loop audio</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onend","optional":true,"description":"<p>Function to call when sound instance ends playing.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"volume","optional":true,"default":"default","description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the sound instance ID.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"89F0vNPrS9eJ3IsmCZu23","name":"playTrack","brief":"","examples":[{"caption":"","code":"\n me.audio.playTrack(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>play the specified audio track<br>\nthis function automatically set the loop property to true<br>\nand keep track of the cur...","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio track name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"volume","optional":true,"default":"default","description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the sound instance ID.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"rTLxchzzuktilDKz5yhHN","name":"rate","brief":"","examples":[{"caption":"","code":"\n // get the playback rate of the background music\n var rate = me.audio.rate(\"dst-gameforest\");\n // speed up the playback of the background music\n me.audio.rate(\"dst-gameforest\", 2.0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>get or set the rate of playback for a sound.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"rate","optional":true,"variadic":true,"description":"<p>playback rate : 0.5 to 4.0, with 1.0 being normal speed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will be changed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>return the current playback rate (if no extra parameters were given)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"aFGUOXKGJGx0EYuN4ufT8","name":"resume","brief":"","examples":[{"caption":"","code":"\n // play a audio clip\n var id = me.audio.play(\"myClip\");\n ...\n // pause it\n me.audio.pause(\"myClip\", id);\n ...\n // resume\n me.audio.resume(\"myClip\", id);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>resume the specified sound on all channels<br></p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will resume.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"O8mxfR5PnP26ZqFMdPHgz","name":"resumeTrack","brief":"","examples":[{"caption":"","code":"\n // play an awesome music\n me.audio.playTrack(\"awesome_music\");\n // pause the audio track\n me.audio.pauseTrack();\n // resume the music\n me.audio.resumeTrack();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>resume the previously paused audio track</p>","params":[],"returns":[]},{"id":"yb9a__HYLLNkRbyNGU9r8","name":"seek","brief":"","examples":[{"caption":"","code":"\n // return the current position of the background music\n var current_pos = me.audio.seek(\"dst-gameforest\");\n // set back the position of the background music to the beginning\n me.audio.seek(\"dst-gameforest\", 0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>get/set the position of playback for a sound.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"seek","optional":true,"variadic":true,"description":"<p>the position to move current playback to (in seconds).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will changed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>return the current seek position (if no extra parameters were given)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"E_RmruxnLIfYgV11AMFFO","name":"setVolume","brief":"","scope":"static","type":"FunctionDoc","description":"<p>set the default global volume</p>","params":[{"identifier":"volume","optional":false,"description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VYIZ5GvTDZBeqo7vbub_l","name":"stop","brief":"","examples":[{"caption":"","code":"\n me.audio.stop(\"cling\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>stop the specified sound on all channels</p>","params":[{"identifier":"sound_name","optional":true,"description":"<p>audio clip name (case sensitive). If none is passed, all sounds are stopped.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will stop.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"eTBVyrYbgtHpKEoifoOm9","name":"stopTrack","brief":"","examples":[{"caption":"","code":"\n // play a awesome music\n me.audio.playTrack(\"awesome_music\");\n // stop the current music\n me.audio.stopTrack();\n"}],"scope":"static","see":["audio#playTrack"],"type":"FunctionDoc","description":"<p>stop the current audio track</p>","params":[],"returns":[]},{"id":"AhAM4DLDzIjd81P_rJCkG","name":"unload","brief":"","examples":[{"caption":"","code":"\n me.audio.unload(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>unload specified audio track to free memory</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio track name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if unloaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"T4ON5F7cvXbRvjhuRBP8t","name":"unloadAll","brief":"","examples":[{"caption":"","code":"\n me.audio.unloadAll();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>unload all audio to free memory</p>","params":[],"returns":[]},{"id":"1Xolydl-xeQ29C0WmJaZK","name":"unmute","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unmute the specified sound</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will unmute.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-00jppIaTAJY6VDzni1qx","name":"unmuteAll","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unmute all audio</p>","params":[],"returns":[]}]},{"id":"UJFUcyJw6AORvhWyNl-gz","name":"collision","brief":"","type":"NSDoc","description":"<p>Collision detection (and projection-based collision response) of 2D shapes.<br>\nBased on the Separating Axis Theorem and s...","members":[{"id":"sMkDirrwDZxeADPhcx9TW","name":"ResponseObject","brief":"","access":"public","type":"ClassDoc","description":"<p>An object representing the result of an intersection.</p>","members":[{"id":"B451wmEgHD3cZoqjKLaVU","name":"a","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The first object participating in the intersection</p>"},{"id":"rSyQeY9TjTOzsyT9nwFWr","name":"aInB","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Whether the first object is entirely inside the second</p>"},{"id":"pJK77vQBxG9Pz6KNkHmrL","name":"b","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The second object participating in the intersection</p>"},{"id":"AlFk9SewbCw0uYUzGxChR","name":"bInA","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Whether the second object is entirely inside the first</p>"},{"id":"EcGYvTO7FVk3RycT5SJ-i","name":"indexShapeA","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The index of the colliding shape for the object a body</p>"},{"id":"R6MvzrSm0ALm1IIqeKrNd","name":"indexShapeB","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The index of the colliding shape for the object b body</p>"},{"id":"bLoindrSGO4CmWqIhJBvj","name":"overlap","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Magnitude of the overlap on the shortest colliding axis</p>"},{"id":"VnXGA7bEV3gxOmdbZ1r6t","name":"overlapN","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The shortest colliding axis (unit-vector)</p>"},{"id":"TSkIxFtaDaJ-TyvzQeszi","name":"overlapV","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The overlap vector (i.e. <code>overlapN.scale(overlap, overlap)</code>). If this vector is subtracted from the position of..."},{"id":"evj0OjfBg1cEb9BPqDuOg","name":"clear","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Set some values of the response back to their defaults. <br>\nCall this between tests if you are going to reuse a single <b...","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]}]},{"id":"9ExitqA4_3-JkHKHPvl2o","name":"types","brief":"","examples":[{"caption":"","code":"\n // set the body collision type\n myEntity.body.collisionType = me.collision.types.PLAYER_OBJECT;\n\n // filter collision detection with collision shapes, enemies and collectables\n myEntity.body.setCollisionMask(\n     me.collision.types.WORLD_SHAPE |\n     me.collision.types.ENEMY_OBJECT |\n     me.collision.types.COLLECTABLE_OBJECT\n );\n\n // User-defined collision types are defined using BITWISE LEFT-SHIFT:\n game.collisionTypes = {\n     LOCKED_DOOR : me.collision.types.USER << 0,\n     OPEN_DOOR   : me.collision.types.USER << 1,\n     LOOT        : me.collision.types.USER << 2,\n };\n\n // Set collision type for a door entity\n myDoorEntity.body.collisionType = game.collisionTypes.LOCKED_DOOR;\n\n // Set collision mask for the player entity, so it collides with locked doors and loot\n myPlayerEntity.body.setCollisionMask(\n     me.collision.types.ENEMY_OBJECT |\n     me.collision.types.WORLD_SHAPE |\n     game.collisionTypes.LOCKED_DOOR |\n     game.collisionTypes.LOOT\n );\n"}],"readonly":true,"scope":"static","see":["Body.setCollisionMask","Body.collisionType"],"type":"EnumDoc","description":"<p>Enum for collision type values.</p>","members":[{"id":"_UMe6-GSKep5R7db1Ux8m","name":"ACTION_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. doors</p>"},{"id":"pX0QSAJeqCCAHIprn2Dmg","name":"ALL_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>all of the above (including user-defined types)</p>"},{"id":"bbzS5Cv9ISjtdIcswrgLh","name":"COLLECTABLE_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>collectable objects</p>"},{"id":"f1uQCcpjoyLHRHQghYH1O","name":"ENEMY_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>enemies objects</p>"},{"id":"2zalwyBns5Ad5jZE1h3xw","name":"NO_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>to disable collision check</p>"},{"id":"zCgWimfqCV5TNJwzL3E5_","name":"NO_OBJECT","brief":"<p>to disable collision check</p>","defaultValue":"0","scope":"static","type":"PropertyDoc"},{"id":"hRNo8O2C-5vCp0-njYOZX","name":"NPC_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>non playable characters</p>"},{"id":"pNbeHCRRmVO_5lb4QJdUl","name":"PLAYER_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>playbable characters</p>"},{"id":"Ybt85atAgCjNrsHSuc250","name":"PROJECTILE_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. missiles</p>"},{"id":"cVPkTYa24Xx_U8898JQEB","name":"USER","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>user-defined collision types (see example)</p>"},{"id":"4euReoluhAX17uiRYLQOm","name":"WORLD_SHAPE","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. walls; for map collision shapes</p>"}]},{"id":"-6BcIo3RX3_D11qpBPdQE","name":"maxChildren","brief":"","access":"public","defaultValue":"8","scope":"static","see":["game.world.broadphase"],"type":"PropertyDoc","description":"<p>The maximum number of children that a quadtree node can contain before it is split into sub-nodes.</p>"},{"id":"RzwxptEVZJz211zkSLPNJ","name":"maxDepth","brief":"","access":"public","defaultValue":"4","scope":"static","see":["game.world.broadphase"],"type":"PropertyDoc","description":"<p>The maximum number of levels that the quadtree will create.</p>"},{"id":"xq_Y-_05Z3okrbA3lvmLJ","name":"response","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>a global instance of a response object used for collision detection <br>\nthis object will be reused amongst collision dete..."},{"id":"GEHJI3SMtZqqHfrt6zODe","name":"rayCast","brief":"","access":"public","examples":[{"caption":"","code":"\n    // define a line accross the viewport\n    var ray = new me.Line(\n        // absolute position of the line\n        0, 0, [\n        // starting point relative to the initial position\n        new me.Vector2d(0, 0),\n        // ending point\n        new me.Vector2d(me.game.viewport.width, me.game.viewport.height)\n    ]);\n\n    // check for collition\n    result = me.collision.rayCast(ray);\n\n    if (result.length > 0) {\n        // ...\n    }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Checks for object colliding with the given line</p>","params":[{"identifier":"line","optional":false,"description":"<p>line to be tested for collision</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}},{"identifier":"result","optional":true,"description":"<p>a user defined array that will be populated with intersecting physic objects.</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>an array of intersecting physic objects</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]}]},{"id":"YrpgDGGJfvFD94XTed1-J","name":"device","brief":"<p>The device capabilities and specific events</p>","type":"NSDoc","members":[{"id":"JF5b63MQLMdfyUMdl0eiZ","name":"accelerationX","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the x-axis.</p>"},{"id":"eGZZiCNdTQqIsZsTVDJJJ","name":"accelerationY","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the y-axis.</p>"},{"id":"XyX5ULDf-yDkV9t5hH5-P","name":"accelerationZ","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the z-axis.</p>"},{"id":"k8h0TJT6oxhrbd8e9WWiv","name":"alpha","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Alpha property. Gives angle based on the rotation of the phone around its z axis.\nThe z-axis is perpend..."},{"id":"O3Paz-LabYZ55agz287Al","name":"android","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an Android platform.</p>"},{"id":"W53arlieEsrhW97x3da6x","name":"android2","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an Android 2.x platform.</p>"},{"id":"8m3N_tJz6mI0b4SObPr8x","name":"autoFocus","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to automatically bring the window to the front</p>"},{"id":"dOAbBYy0M-6qfxuTtvkhP","name":"beta","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Beta property. Gives angle on tilting a portrait held phone forward or backward</p>"},{"id":"fwRcUe6x1GIg96T5M5mDO","name":"BlackBerry","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a BlackBerry platform.</p>"},{"id":"vupTIKe9b9x1SsTjWbgF5","name":"chromeOS","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is running on ChromeOS.</p>"},{"id":"84pG_Fuwoal638HWSwNsK","name":"devicePixelRatio","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Ratio of the resolution in physical pixels to the resolution in CSS pixels for the current display device.</p>","returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Ea5LJpnKnsyxht2snSvTq","name":"ejecta","brief":"","defaultValue":"false","readonly":true,"scope":"static","see":["http://impactjs.com/ejecta"],"type":"PropertyDoc","description":"<p>equals to true if the game is running under Ejecta.</p>"},{"id":"BCyc1bNz_J0--sj24E-ym","name":"gamma","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Gamma property. Gives angle on tilting a portrait held phone left or right</p>"},{"id":"aOPw5-s5OSTH50l3t-nud","name":"hasAccelerometer","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser accelerometer capabilities</p>"},{"id":"YuZsMWizIqPWXwRgh1fyx","name":"hasDeviceOrientation","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser device orientation</p>"},{"id":"gXEuaRUn7jaePmq5YqnMd","name":"hasFullscreenSupport","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser full screen support</p>"},{"id":"Rg0GALEBEnfVx-PNQy1M4","name":"hasPointerLockSupport","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser pointerlock api support</p>"},{"id":"pPPt57V_4zxiB0-S5ez9A","name":"hasWebAudio","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Device WebAudio Support</p>"},{"id":"GF7Z5dhxWuPueA-LTjmH9","name":"iOS","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an iOS platform.</p>"},{"id":"wmqD9OxePtx94vkcXkKJy","name":"isFullscreen","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Returns true if the browser/device is in full screen mode.</p>","returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AuA-GNzNzJTjjUeXkh95G","name":"isMobile","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if a mobile device <br>\n(Android | iPhone | iPad | iPod | BlackBerry | Windows Phone | Kindle)</p>"},{"id":"s8onHcrU-zpIU-y5OcKSo","name":"isWeixin","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the  is running under Wechat.</p>"},{"id":"AMZ4UTVboLwbnIGnupiji","name":"Kindle","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Kindle platform.</p>"},{"id":"CLtFkWwhRnlq_JE8vn89d","name":"language","brief":"","access":"public","readonly":true,"scope":"static","see":["http://www.w3schools.com/tags/ref_language_codes.asp"],"type":"PropertyDoc","description":"<p>a string representing the preferred language of the user, usually the language of the browser UI.\n(will default to &quot;e..."},{"id":"JPDNEitq5zDW4FluAEido","name":"linux","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Linux platform.</p>"},{"id":"0cTscgbUSOyX03UkJr9Nq","name":"localStorage","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser Local Storage capabilities <br>\n(this flag will be set to false if cookies are blocked)</p>"},{"id":"9XKlY4tCEhNkfDXgumFG-","name":"maxTouchPoints","brief":"","defaultValue":"1","examples":[{"caption":"","code":"\n if (me.device.maxTouchPoints > 1) {\n     // device supports multi-touch\n }\n"}],"readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Return the maximum number of simultaneous touch contact points are supported by the current device.</p>"},{"id":"sT9FRZK7ipWbUQjg7KBHI","name":"nativeBase64","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser Base64 decoding capability</p>"},{"id":"jB8h4SVTvzmQz-bSW6eJE","name":"nodeJS","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if running under node.js</p>"},{"id":"leIIBWmQLNX02obvayqol","name":"OffScreenCanvas","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device browser supports OffScreenCanvas.</p>"},{"id":"fhrcetXweDz6inS1td978","name":"pauseOnBlur","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to pause the game when losing focus</p>"},{"id":"Awivtd3KM7VG8695MFYWW","name":"resumeOnFocus","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to unpause the game when gaining focus</p>"},{"id":"nUJQ7TLcAudjRQMUrSS7V","name":"ScreenOrientation","brief":"","defaultValue":"false","readonly":true,"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation/onchange"],"type":"PropertyDoc","description":"<p>Supports the ScreenOrientation API</p>"},{"id":"jYkQCiN-V6dEDNN3pojkc","name":"sound","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Returns true if the browser/device has audio capabilities.</p>","returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"q4G_Y1gdlxjHmhF79cl4X","name":"stopOnBlur","brief":"","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to stop the game when losing focus or not.\nThe engine restarts on focus if this is enabled.</p>"},{"id":"FmmBP-UGgHmNs4CbqdxZh","name":"touch","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Touch capabilities</p>"},{"id":"3umxj2QKoSxQ4zr5cItxZ","name":"ua","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>the <code>ua</code> read-only property returns the user agent string for the current browser.</p>"},{"id":"IaKJV11aE1RIdO8-R_CQy","name":"wheel","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>W3C standard wheel events</p>"},{"id":"Chb26dEZOMQg_0R-mQoUI","name":"wp","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Windows Phone platform.</p>"},{"id":"OEyWRfo04aAg1b3wg2fTU","name":"turnOffPointerLock","brief":"","access":"public","deprecated":"since 10.3.0","scope":"instance","see":["input.exitPointerLock"],"type":"MethodDoc","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ktNjrVsZYDkn7HzfuTPAa","name":"turnOnPointerLock","brief":"","access":"public","deprecated":"since 10.3.0","scope":"instance","see":["input.requestPointerLock"],"type":"MethodDoc","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dkz5G-nfTrXITTaJr3PkZ","name":"enableSwipe","brief":"","scope":"static","type":"FunctionDoc","description":"<p>enable/disable swipe on WebView.</p>","params":[{"identifier":"enable","optional":true,"default":"true","description":"<p>enable or disable swipe.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Fitfv2MCrDp531X4aaoSV","name":"exitFullscreen","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Exit fullscreen mode. Requires fullscreen support from the browser/device.</p>","params":[],"returns":[]},{"id":"r4YD0CXCNy3s9G-vNz5a5","name":"focus","brief":"","examples":[{"caption":"","code":"\n  if (clicked) {\n    me.device.focus();\n  }\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Makes a request to bring this device window to the front.</p>","params":[],"returns":[]},{"id":"CV2FjPOx5LgQH6gy1fVNy","name":"getElement","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the DOM element for the given element name or HTMLElement object</p>","params":[{"identifier":"element","optional":false,"description":"<p>the parent element name or a HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the corresponding DOM Element or null if not existing</p>","dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"zlRFcs4fiNRdVo4EvpWxY","name":"getElementBounds","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/DOMRect"],"type":"FunctionDoc","description":"<p>returns the size of the given HTMLElement and its position relative to the viewport\n<br><img src=\"images/element-box-diagr...","params":[{"identifier":"element","optional":false,"description":"<p>an HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the size and position of the element relatively to the viewport</p>","dataType":{"tokens":[{"value":"DOMRect","kind":"canonical"},{"value":"DOMRect","kind":"canonical"}],"template":"%1"}}]},{"id":"iK0nzahsXMquKa8f5bmmm","name":"getMaxShaderPrecision","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the highest precision format supported by this device for GL Shaders</p>","params":[{"identifier":"gl","optional":false,"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>&quot;lowp&quot;, &quot;mediump&quot;, or &quot;highp&quot;</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9rfxsxXFWtTposty1naem","name":"getParentBounds","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/DOMRect"],"type":"FunctionDoc","description":"<p>returns the size of the given HTMLElement Parent and its position relative to the viewport\n<br><img src=\"images/element-bo...","params":[{"identifier":"element","optional":false,"description":"<p>an HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the size and position of the given element parent relative to the viewport</p>","dataType":{"tokens":[{"value":"DOMRect","kind":"canonical"},{"value":"DOMRect","kind":"canonical"}],"template":"%1"}}]},{"id":"jefnvdIG9OU_IZxwvvhga","name":"getParentElement","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the parent DOM element for the given parent name or HTMLElement object</p>","params":[{"identifier":"element","optional":false,"description":"<p>the parent element name or a HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the parent Element</p>","dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"t-71xgHDDAG2nmDgzYOV2","name":"getScreenOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation"],"type":"FunctionDoc","description":"<p>Return a string representing the orientation of the device screen.\nIt can be &quot;any&quot;, &quot;natural&quot;, &quot;l...","params":[],"returns":[{"description":"<p>the screen orientation</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"6WYUfv2i8j2N-cdYYK4kr","name":"getStorage","brief":"","scope":"static","see":["save"],"type":"FunctionDoc","description":"<p>return the device storage</p>","params":[{"identifier":"type","optional":true,"default":"\"local\"","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a reference to the device storage</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"tC4Z_oB50K4hEioaorwUl","name":"isLandscape","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return true if the device screen orientation is in Portrait mode</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yYyPu8HpbkOBlKUFXn33k","name":"isPortrait","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return true if the device screen orientation is in Portrait mode</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"m-GeZOv4rygxCePrF0tj7","name":"isWebGLSupported","brief":"","scope":"static","type":"FunctionDoc","description":"<p>returns true if the device supports WebGL</p>","params":[{"identifier":"options","optional":true,"description":"<p>context creation options</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if WebGL is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LVk1rUJ4VGNutW8-uxR-8","name":"lockOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation"],"type":"FunctionDoc","description":"<p>locks the device screen into the specified orientation.<br>\nThis method only works for installed Web apps or for Web pages...","params":[{"identifier":"orientation","optional":false,"description":"<p>The orientation into which to lock the screen.</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[{"description":"<p>true if the orientation was unsuccessfully locked</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"C2IY2WbgMqZ06tCDAMyJc","name":"onReady","brief":"","examples":[{"caption":"","code":"\n // small game skeleton\n var game = {\n    // called by the me.device.onReady function\n    onload : function () {\n       // init video\n       if (!me.video.init('screen', 640, 480, true)) {\n          alert(\"Sorry but your browser does not support html 5 canvas.\");\n          return;\n       }\n\n       // initialize the \"audio\"\n       me.audio.init(\"mp3,ogg\");\n\n       // set callback for ressources loaded event\n       me.loader.onload = this.loaded.bind(this);\n\n       // set all ressources to be loaded\n       me.loader.preload(game.assets);\n\n       // load everything & display a loading screen\n       me.state.change(me.state.LOADING);\n    },\n\n    // callback when everything is loaded\n    loaded : function () {\n       // define stuff\n       // ....\n\n       // change to the menu screen\n       me.state.change(me.state.PLAY);\n    }\n }, // game\n\n // \"bootstrap\"\n me.device.onReady(function () {\n    game.onload();\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>specify a function to execute when the Device is fully loaded and ready</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to be executed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"ZHBiZgzfeBcMwcBKLqT02","name":"requestFullscreen","brief":"","examples":[{"caption":"","code":"\n // add a keyboard shortcut to toggle Fullscreen mode on/off\n me.input.bindKey(me.input.KEY.F, \"toggleFullscreen\");\n me.event.on(me.event.KEYDOWN, function (action, keyCode, edge) {\n    // toggle fullscreen on/off\n    if (action === \"toggleFullscreen\") {\n       if (!me.device.isFullscreen) {\n          me.device.requestFullscreen();\n       } else {\n          me.device.exitFullscreen();\n       }\n    }\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Triggers a fullscreen request. Requires fullscreen support from the browser/device.</p>","params":[{"identifier":"element","optional":true,"default":"default canvas object","description":"<p>the element to be set in full-screen mode.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"uAkrKXLT4cfrSmzA1Lkd5","name":"unlockOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation"],"type":"FunctionDoc","description":"<p>unlocks the device screen into the specified orientation.<br>\nThis method only works for installed Web apps or for Web pag...","params":[],"returns":[{"description":"<p>true if the orientation was unsuccessfully unlocked</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UpyoPju5Sxsx3wTabvBiz","name":"unwatchAccelerometer","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unwatch Accelerometor event</p>","params":[],"returns":[]},{"id":"4mHmYQCsA41HYSXudAiwA","name":"unwatchDeviceOrientation","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unwatch Device orientation event</p>","params":[],"returns":[]},{"id":"_Y0mvT1dC5uPSPPRgVxtQ","name":"vibrate","brief":"","examples":[{"caption":"","code":"\n // vibrate for 1000 ms\n me.device.vibrate(1000);\n // or alternatively\n me.device.vibrate([1000]);\n // vibrate for 50 ms, be still for 100 ms, and then vibrate for 150 ms:\n me.device.vibrate([50, 100, 150]);\n // cancel any existing vibrations\n me.device.vibrate(0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>the vibrate method pulses the vibration hardware on the device, <br>\nIf the device doesn't support vibration, this method ...","params":[{"identifier":"pattern","optional":false,"description":"<p>pattern of vibration and pause intervals</p>","dataType":{"tokens":[{"value":"number | Array<number>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | %3<%2>"}}],"returns":[]},{"id":"rPTAUdqDRG5f6VfM8l6RW","name":"watchAccelerometer","brief":"","examples":[{"caption":"","code":"\n // try to enable device accelerometer event on user gesture\n me.input.registerPointerEvent(\"pointerleave\", me.game.viewport, function() {\n     if (me.device.watchAccelerometer() === true) {\n         // Success\n         me.input.releasePointerEvent(\"pointerleave\", me.game.viewport);\n     } else {\n         // ... fail at enabling the device accelerometer event\n     }\n });\n"}],"scope":"static","see":["device.accelerationX","device.accelerationY","device.accelerationZ"],"type":"FunctionDoc","description":"<p>Enable monitor of the device accelerator to detect the amount of physical force of acceleration the device is receiving.\n(...","params":[],"returns":[{"description":"<p>false if not supported or permission not granted by the user</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rRL3gr_uJoW4PWr-0S-r2","name":"watchDeviceOrientation","brief":"","examples":[{"caption":"","code":"\n // try to enable device orientation event on user gesture\n me.input.registerPointerEvent(\"pointerleave\", me.game.viewport, function() {\n     if (me.device.watchDeviceOrientation() === true) {\n         // Success\n         me.input.releasePointerEvent(\"pointerleave\", me.game.viewport);\n     } else {\n         // ... fail at enabling the device orientation event\n     }\n });\n"}],"scope":"static","see":["device.alpha","device.beta","device.gamma"],"type":"FunctionDoc","description":"<p>Enable monitor of the device orientation to detect the current orientation of the device as compared to the Earth coordina...","params":[],"returns":[{"description":"<p>false if not supported or permission not granted by the user</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"4HaggF5h91GCJPoXqB-37","name":"event","brief":"","type":"NSDoc","description":"<p>an event system based on nodeJS EventEmitter interface</p>","members":[{"id":"PpciO4pZKyP0EtmWoIb1f","name":"BOOT","brief":"","access":"public","defaultValue":"\"me.boot\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the system is booting</p>"},{"id":"Hi_G6kMJy4erGTrEKQq7B","name":"CANVAS_ONRESIZE","brief":"","access":"public","defaultValue":"\"canvas.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the canvas is resized <br>\n(this usually follows a WINDOW_ONRESIZE event).<br>\nData passed : {number} canva..."},{"id":"4C0J2IgDSADIgvWun3RQX","name":"DRAGEND","brief":"","access":"public","defaultValue":"\"me.game.dragend\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for dragend events on a Draggable entity <br>\nData passed:\n{object} the drag event <br>\n{object} the Draggable entit..."},{"id":"CEN2AF8RikLf16r7axLOJ","name":"DRAGSTART","brief":"","access":"public","defaultValue":"\"me.game.dragstart\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for dragstart events on a Draggable entity <br>\nData passed:\n{object} the drag event <br>\n{object} the Draggable ent..."},{"id":"Sgn6LCVN1PGEzpsTczzwS","name":"GAME_AFTER_DRAW","brief":"","access":"public","defaultValue":"\"me.game.afterDraw\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for the start of the draw loop\nData passed : {number} time the current time stamp</p>"},{"id":"fvw8HyuAwk6J3Oa7ih03z","name":"GAME_AFTER_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.afterUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for the end of the update loop\nData passed : {number} time the current time stamp</p>"},{"id":"J_TZRIx-criZjow5kwmsK","name":"GAME_BEFORE_DRAW","brief":"","access":"public","defaultValue":"\"me.game.beforeDraw\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for the end of the draw loop\nData passed : {number} time the current time stamp</p>"},{"id":"YwRVpng3Y3rGwNG1o14bO","name":"GAME_BEFORE_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.beforeUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the engine is about to start a new game loop\nData passed : {number} time the current time stamp</p>"},{"id":"qMedFdl73bjnVxLFtkGOR","name":"GAME_INIT","brief":"","access":"public","defaultValue":"\"me.game.onInit\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game manager is initialized <br>\nData passed : none <br></p>"},{"id":"fhqkiXhK2N1lV3ZC2tQ_m","name":"GAME_RESET","brief":"","access":"public","defaultValue":"\"me.game.onReset\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game manager is resetted <br>\nData passed : none <br></p>"},{"id":"IRmeW8gIgvdvavgIZaq2q","name":"GAME_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.onUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the game is updated (will be impacted by frame skip, frame interpolation and pause/resume state) <br>\nData ..."},{"id":"uW7QDP5a3IXMZXvvE7ZIH","name":"GAMEPAD_CONNECTED","brief":"","access":"public","defaultValue":"\"gamepad.connected\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a gamepad is connected <br>\nData passed : {object} gamepad object</p>"},{"id":"NiftU-GQb_gXFBSjprsJN","name":"GAMEPAD_DISCONNECTED","brief":"","access":"public","defaultValue":"\"gamepad.disconnected\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a gamepad is disconnected <br>\nData passed : {object} gamepad object</p>"},{"id":"v3_M0fPZ9kVru22o42rQN","name":"GAMEPAD_UPDATE","brief":"","access":"public","defaultValue":"\"gamepad.update\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when gamepad button/axis state is updated <br>\nData passed : {number} index <br>\nData passed : {string} type : &..."},{"id":"zQBUWxzjoU7r3p90A72OZ","name":"KEYDOWN","brief":"","access":"public","defaultValue":"\"me.input.keydown\"","examples":[{"caption":"","code":"\n me.input.bindKey(me.input.KEY.X, \"jump\", true); // Edge-triggered\n me.input.bindKey(me.input.KEY.Z, \"shoot\"); // Level-triggered\n me.event.on(me.event.KEYDOWN, (action, keyCode, edge) => {\n   // Checking bound keys\n   if (action === \"jump\") {\n       if (edge) {\n           this.doJump();\n       }\n\n       // Make character fall slower when holding the jump key\n       this.vel.y = this.body.gravity;\n   }\n });\n"}],"readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for pressing a binded key <br>\nData passed : {string} user-defined action, {number} keyCode,\n{boolean} edge state <b..."},{"id":"U2hOOGdfiwo0lXq614ZEF","name":"KEYUP","brief":"","access":"public","defaultValue":"\"me.input.keyup\"","examples":[{"caption":"","code":"\n me.event.on(me.event.KEYUP, (action, keyCode) => {\n   // Checking unbound keys\n   if (keyCode == me.input.KEY.ESC) {\n       if (me.state.isPaused()) {\n           me.state.resume();\n       }\n       else {\n           me.state.pause();\n       }\n   }\n });\n"}],"readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for releasing a binded key <br>\nData passed : {string} user-defined action, {number} keyCode</p>"},{"id":"VOnRKnwMTG5JiDQMIxgjh","name":"LEVEL_LOADED","brief":"","access":"public","defaultValue":"\"me.game.onLevelLoaded\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a level is loaded <br>\nData passed : {string} Level Name</p>"},{"id":"iqs4zdk2oNu60G8XeE65h","name":"LOADER_COMPLETE","brief":"","access":"public","defaultValue":"\"me.loader.onload\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when everything has loaded <br>\nData passed : none <br></p>"},{"id":"6MnNNaVSPqoOoFcS-O5nY","name":"LOADER_PROGRESS","brief":"","access":"public","defaultValue":"\"me.loader.onProgress\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for displaying a load progress indicator <br>\nData passed : {number} [0 .. 1], {Resource} resource object<br></p>"},{"id":"QkB-4REbewqydsy0vw92z","name":"ONCONTEXT_RESTORED","brief":"","access":"public","defaultValue":"\"renderer.contextrestored\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the current context is restored <br>\nData passed : {me.Renderer} the current renderer instance`</p>"},{"id":"6qtokUg9NAfv7eM4JA4qo","name":"POINTERLOCKCHANGE","brief":"","access":"public","defaultValue":"\"me.event.pointerlockChange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for onPointerLockChange event <br>\nData passed : {boolean} pointer lock status (true/false)</p>"},{"id":"z9y5FC6h6KJmUE3FPJiEp","name":"POINTERMOVE","brief":"","access":"public","defaultValue":"\"me.event.pointermove\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for pointermove events on the screen area <br>\nData passed : {me.Pointer} a Pointer object</p>"},{"id":"DjMoCfuXo0GAK6NT68QcF","name":"STATE_CHANGE","brief":"","access":"public","defaultValue":"\"me.state.onChange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the changing to a different stage</p>"},{"id":"_Q2cc2O3ssUQigGjp1VW0","name":"STATE_PAUSE","brief":"","access":"public","defaultValue":"\"me.state.onPause\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the game is paused <br>\nData passed : none <br></p>"},{"id":"FIwQdMN3KDzC_3OkF1Wsk","name":"STATE_RESTART","brief":"","access":"public","defaultValue":"\"me.state.onRestart\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game is restarted <br>\nData passed : {number} time in ms the game was stopped</p>"},{"id":"A5qUGKyZ37wIEU7R31tOH","name":"STATE_RESUME","brief":"","access":"public","defaultValue":"\"me.state.onResume\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game is resumed <br>\nData passed : {number} time in ms the game was paused</p>"},{"id":"w2wEN0yeyvA3EvsuX_je3","name":"STATE_STOP","brief":"","access":"public","defaultValue":"\"me.state.onStop\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the game is stopped <br>\nData passed : none <br></p>"},{"id":"cvu4Kud484hiifPou5nCK","name":"VIDEO_INIT","brief":"","access":"public","defaultValue":"\"me.video.onInit\"","readonly":true,"see":["video.init","event.on"],"type":"PropertyDoc","description":"<p>event for when the video is initialized<br>\nData passed : none <br></p>"},{"id":"1rNZXM6eKUFOvR8pyV4vB","name":"VIEWPORT_ONCHANGE","brief":"","access":"public","defaultValue":"\"viewport.onchange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the viewport position is updated <br>\nData passed : {me.Vector2d} viewport position vector</p>"},{"id":"pKP2Er4jS7cMuzk33uWDx","name":"VIEWPORT_ONRESIZE","brief":"","access":"public","defaultValue":"\"viewport.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the viewport is resized <br>\n(this usually follows a WINDOW_ONRESIZE event, when using the <code>flex</code..."},{"id":"thU_31v_LSN6S0yOUDbmb","name":"WEBGL_ONCONTEXT_LOST","brief":"","access":"public","defaultValue":"\"renderer.contextlost\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the current context is lost <br>\nData passed : {me.Renderer} the current renderer instance</p>"},{"id":"oeh1XKZ88Ls8yfIQgLnTT","name":"WINDOW_ONORIENTATION_CHANGE","brief":"","access":"public","defaultValue":"\"globalThis.orientationchange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the device is rotated <br>\nData passed : {Event} Event object <br></p>"},{"id":"Ezbtlilm_W8py8sUlWruZ","name":"WINDOW_ONRESIZE","brief":"","access":"public","defaultValue":"\"globalThis.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the (browser) window is resized <br>\nData passed : {Event} Event object</p>"},{"id":"2xQYtMFFrV554pRr3o7UE","name":"WINDOW_ONSCROLL","brief":"","access":"public","defaultValue":"\"globalThis.onscroll\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the (browser) window is scrolled <br>\nData passed : {Event} Event object</p>"},{"id":"cneiFy4QO5YAz5vELKF6m","name":"emit","brief":"","examples":[{"caption":"","code":"\n me.event.emit(\"event-name\", a, b, c);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>calls each of the listeners registered for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>arguments to be passed to all listeners</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the event had listeners, false otherwise.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VhHt6Krh9koH96yj0hlXg","name":"off","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.off(\"event-name\", myFunction);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>remove the given listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]},{"id":"QNUyShJOMcvflapKsu5ja","name":"on","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.on(\"event-name\", myFunction, this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Add a listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"context","optional":true,"default":"this","description":"<p>The context to invoke the listener with.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]},{"id":"Pemqt5Z9Yb3b4irq3eb17","name":"once","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.once(\"event-name\", myFunction, this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Add a one-time listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"context","optional":true,"default":"this","description":"<p>The context to invoke the listener with.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]}]},{"id":"tsOyR7FBHmzwCyHePpyAI","name":"game","brief":"","defaultValue":"true","type":"NSDoc","description":"<p>game represents your current game, it contains all the objects,\ntilemap layers, current viewport, collision map, etc...<br...","members":[{"id":"0vAb2bfXQx2MximL3ruMl","name":"lastUpdate","brief":"","access":"public","type":"PropertyDoc","description":"<p>Last time the game update loop was executed. <br>\nUse this value to implement frame prediction in drawing events,\nfor crea..."},{"id":"XbrT7WALPDHuKQB4KbYvD","name":"mergeGroup","brief":"","access":"public","defaultValue":"true","type":"PropertyDoc","description":"<p>when true, all objects will be added under the root world container.<br>\nWhen false, a <code>me.Container</code> object wi..."},{"id":"Ly5RI2FxNasqWMhmiJqEE","name":"sortOn","brief":"","access":"public","defaultValue":"\"z\"","type":"PropertyDoc","description":"<p>Specify the property to be used when sorting entities.\nAccepted values : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"qRnud01JJ881PupU7QRFZ","name":"viewport","brief":"","access":"public","type":"PropertyDoc","description":"<p>a reference to the current active stage &quot;default&quot; camera</p>"},{"id":"6DBlDXI9wSn6FoUsaWuVe","name":"world","brief":"","access":"public","type":"PropertyDoc","description":"<p>a reference to the game world, <br>\na world is a virtual environment containing all the game objects</p>"},{"id":"6A9sCWBGMV2-kOhfqW068","name":"getParentContainer","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Returns the parent container of the specified Child in the game world</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}}]},{"id":"v-xpw7b3VerHZRHYnDK4c","name":"onLevelLoaded","brief":"","examples":[{"caption":"","code":"\n // call myFunction () everytime a level is loaded\n me.game.onLevelLoaded = this.myFunction.bind(this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Fired when a level is fully loaded and all entities instantiated. <br>\nAdditionnaly the level id will also be passed to th...","params":[],"returns":[]},{"id":"s3j8DjOaKMC6wCO7i7pqL","name":"repaint","brief":"","scope":"static","type":"FunctionDoc","description":"<p>force the redraw (not update) of all objects</p>","params":[],"returns":[]},{"id":"lTkZ79dkkAzwnqk-MkPou","name":"reset","brief":"","scope":"static","type":"FunctionDoc","description":"<p>reset the game Object manager<br>\ndestroy all current objects</p>","params":[],"returns":[]},{"id":"cbqpujaV1l0fltnTuwaMw","name":"updateFrameRate","brief":"","scope":"static","see":["timer.maxfps","World.fps"],"type":"FunctionDoc","description":"<p>Update the renderer framerate using the system config variables.</p>","params":[],"returns":[]}]},{"id":"zyU0jGIIsDWpAmtFuHaXc","name":"input","brief":"","type":"NSDoc","members":[{"id":"IEpX00IvPtzbuCUTNPVxG","name":"GAMEPAD","brief":"","access":"public","type":"NSDoc","description":"<p>Namespace for standard gamepad mapping constants</p>","members":[{"id":"vAlUWsBkm5y5nkcxGS1Pn","name":"AXES","brief":"","access":"public","scope":"static","see":["https://w3c.github.io/gamepad/#remapping"],"type":"EnumDoc","description":"<p>Standard gamepad mapping information for axes<br></p>\n <ul>\n   <li>Left control stick: <code>LX</code> (horizontal), <code..."},{"id":"B58clkjtIheDiShG3hCty","name":"BUTTONS","brief":"","access":"public","scope":"static","see":["https://w3c.github.io/gamepad/#remapping"],"type":"EnumDoc","description":"<p>Standard gamepad mapping information for buttons<br></p>\n <ul>\n   <li>Face buttons: <code>FACE_1</code>, <code>FACE_2</cod..."}]},{"id":"Fw6I90DZFLbIwG6L8FQv7","name":"KEY","brief":"","access":"public","readonly":true,"type":"EnumDoc","description":"<p>standard keyboard constants</p>","members":[{"id":"PcGEV2i-LskxstH57ijDj","name":"A","brief":"","defaultValue":"65","scope":"static","type":"PropertyDoc"},{"id":"NItTBJOQgqanFzzT6HkMG","name":"ADD","brief":"","defaultValue":"107","scope":"static","type":"PropertyDoc"},{"id":"kbV3m-I3Y0qCnFzdlLFsZ","name":"ALT","brief":"","defaultValue":"18","scope":"static","type":"PropertyDoc"},{"id":"7tG6yhxCcFGTr0Q1Q8ceL","name":"B","brief":"","defaultValue":"66","scope":"static","type":"PropertyDoc"},{"id":"mwDkgqZF0kuaHea1debfW","name":"BACK_SLASH","brief":"","defaultValue":"220","scope":"static","type":"PropertyDoc"},{"id":"8GIq5wSfpHhUtT9d8d_CP","name":"C","brief":"","defaultValue":"67","scope":"static","type":"PropertyDoc"},{"id":"XtbaHDSblNPdKTaaq5IId","name":"CAPS_LOCK","brief":"","defaultValue":"20","scope":"static","type":"PropertyDoc"},{"id":"1zvhttEiKcujJWTf25N-Y","name":"CLOSE_BRACKET","brief":"","defaultValue":"221","scope":"static","type":"PropertyDoc"},{"id":"YFeeixMZur16s0FQfI7US","name":"COMMA","brief":"","defaultValue":"188","scope":"static","type":"PropertyDoc"},{"id":"Pyd0o2ec8iqDQ5xxk2ig1","name":"CTRL","brief":"","defaultValue":"17","scope":"static","type":"PropertyDoc"},{"id":"k5-8CbODjwemJztcCL2F6","name":"D","brief":"","defaultValue":"68","scope":"static","type":"PropertyDoc"},{"id":"fvoAxsO3rgGXjEm1Pm6Yi","name":"DECIMAL","brief":"","defaultValue":"110","scope":"static","type":"PropertyDoc"},{"id":"yqyK4MBXqWQXLrHbsj1To","name":"DELETE","brief":"","defaultValue":"46","scope":"static","type":"PropertyDoc"},{"id":"6mRwzt9eo64FEE4Tcb-Cu","name":"DIVIDE","brief":"","defaultValue":"111","scope":"static","type":"PropertyDoc"},{"id":"cnctrm_VpL_WLJFdS22Dd","name":"DOWN","brief":"","defaultValue":"40","scope":"static","type":"PropertyDoc"},{"id":"Ea4UQsDUP4DdVRxamCqCZ","name":"E","brief":"","defaultValue":"69","scope":"static","type":"PropertyDoc"},{"id":"LURf6Oxx7Sf_b3szxaBhf","name":"END","brief":"","defaultValue":"35","scope":"static","type":"PropertyDoc"},{"id":"ksUM7ortKMsBZK2GvHEdz","name":"ENTER","brief":"","defaultValue":"13","scope":"static","type":"PropertyDoc"},{"id":"HKBgXSSuJl0ZW48MbzF9x","name":"ESC","brief":"","defaultValue":"27","scope":"static","type":"PropertyDoc"},{"id":"nuLpnPAnz1-3mKqhRkL9w","name":"F","brief":"","defaultValue":"70","scope":"static","type":"PropertyDoc"},{"id":"MCMBTOv_zUMUJeM0yRdE2","name":"F1","brief":"","defaultValue":"112","scope":"static","type":"PropertyDoc"},{"id":"mkzFczzm35zavfeqyWo3v","name":"F10","brief":"","defaultValue":"121","scope":"static","type":"PropertyDoc"},{"id":"ESLSKIMIJlB0iXnDwWLGB","name":"F11","brief":"","defaultValue":"122","scope":"static","type":"PropertyDoc"},{"id":"IIxSiHgcAHCyiQ03kPEmg","name":"F12","brief":"","defaultValue":"123","scope":"static","type":"PropertyDoc"},{"id":"4ZRE6aI4BnAnFE3U5jN94","name":"F2","brief":"","defaultValue":"113","scope":"static","type":"PropertyDoc"},{"id":"VYcKySS1RSArjZn9afiYF","name":"F3","brief":"","defaultValue":"114","scope":"static","type":"PropertyDoc"},{"id":"SmIPn82tMymDXSSxp7y42","name":"F4","brief":"","defaultValue":"115","scope":"static","type":"PropertyDoc"},{"id":"hiDb5iwg6H6nDVQkWHB3Z","name":"F5","brief":"","defaultValue":"116","scope":"static","type":"PropertyDoc"},{"id":"Y7aZfQ_TNBsQDzHGzx3lq","name":"F6","brief":"","defaultValue":"117","scope":"static","type":"PropertyDoc"},{"id":"tAnyo0Qxc8AzEau1tS2SL","name":"F7","brief":"","defaultValue":"118","scope":"static","type":"PropertyDoc"},{"id":"0gPu8G1AsvcafaqnysReD","name":"F8","brief":"","defaultValue":"119","scope":"static","type":"PropertyDoc"},{"id":"yvEiY_JHVAKyLlxj-If7j","name":"F9","brief":"","defaultValue":"120","scope":"static","type":"PropertyDoc"},{"id":"ZQ_wZBoljG-BCJXBa_HYQ","name":"FORWAND_SLASH","brief":"","defaultValue":"191","scope":"static","type":"PropertyDoc"},{"id":"Zx3a-fXd25bhIetMWJ72X","name":"G","brief":"","defaultValue":"71","scope":"static","type":"PropertyDoc"},{"id":"wcAZ5Cohy2Vfal7HcX8B6","name":"GRAVE_ACCENT","brief":"","defaultValue":"192","scope":"static","type":"PropertyDoc"},{"id":"6WFOmjhaEP-dk9lILr-cT","name":"H","brief":"","defaultValue":"72","scope":"static","type":"PropertyDoc"},{"id":"OLc8mBqpHdFqE2uheKUTc","name":"HOME","brief":"","defaultValue":"36","scope":"static","type":"PropertyDoc"},{"id":"PRkQ5NpDZawTXB86C7WEO","name":"I","brief":"","defaultValue":"73","scope":"static","type":"PropertyDoc"},{"id":"RixnHGmVYUqZrsibTPXdR","name":"INSERT","brief":"","defaultValue":"45","scope":"static","type":"PropertyDoc"},{"id":"gPvNLJr8EqpGiwE15Cag4","name":"J","brief":"","defaultValue":"74","scope":"static","type":"PropertyDoc"},{"id":"ml802kTzjmBERheUr97kC","name":"K","brief":"","defaultValue":"75","scope":"static","type":"PropertyDoc"},{"id":"3QeFfWuySnXtwqozHSqrb","name":"L","brief":"","defaultValue":"76","scope":"static","type":"PropertyDoc"},{"id":"LXB7VqOrzUH2QPtuJZc15","name":"LEFT","brief":"","defaultValue":"37","scope":"static","type":"PropertyDoc"},{"id":"xBfndPdFXBXRZ2uwHEISG","name":"M","brief":"","defaultValue":"77","scope":"static","type":"PropertyDoc"},{"id":"9SIjkzWWZgMPSOsvsSGjZ","name":"MINUS","brief":"","defaultValue":"189","scope":"static","type":"PropertyDoc"},{"id":"unXviC3OFoRFlWTKKW1bB","name":"MULTIPLY","brief":"","defaultValue":"106","scope":"static","type":"PropertyDoc"},{"id":"yStYOna9KQwgy6uUNZmBF","name":"N","brief":"","defaultValue":"78","scope":"static","type":"PropertyDoc"},{"id":"0keKTGxvJpNWPNo_at7VZ","name":"NUM_LOCK","brief":"","defaultValue":"144","scope":"static","type":"PropertyDoc"},{"id":"EZlItQao6KRMUerct8tsH","name":"NUM0","brief":"","defaultValue":"48","scope":"static","type":"PropertyDoc"},{"id":"S4S8Ww67Xaf2ogkNR852H","name":"NUM1","brief":"","defaultValue":"49","scope":"static","type":"PropertyDoc"},{"id":"V_5fw2HqAmDuQS53Tqpxa","name":"NUM2","brief":"","defaultValue":"50","scope":"static","type":"PropertyDoc"},{"id":"hhQ4VRmJscptgttJc0QjW","name":"NUM3","brief":"","defaultValue":"51","scope":"static","type":"PropertyDoc"},{"id":"GJ3Fdt5C_-e-vOcRvY7Th","name":"NUM4","brief":"","defaultValue":"52","scope":"static","type":"PropertyDoc"},{"id":"-83dQbu9exdqQXRUpM4Ce","name":"NUM5","brief":"","defaultValue":"53","scope":"static","type":"PropertyDoc"},{"id":"FXJU23CVzm_2LaukBJZjo","name":"NUM6","brief":"","defaultValue":"54","scope":"static","type":"PropertyDoc"},{"id":"ufNf1jdBWddku3Yt7aRTl","name":"NUM7","brief":"","defaultValue":"55","scope":"static","type":"PropertyDoc"},{"id":"oVHbqZoK7uBDJ4pWigf-_","name":"NUM8","brief":"","defaultValue":"56","scope":"static","type":"PropertyDoc"},{"id":"rh-B8cvfFqnUPxsOO54P6","name":"NUM9","brief":"","defaultValue":"57","scope":"static","type":"PropertyDoc"},{"id":"FXMR4dfaIY7pZZ_yBhO1r","name":"NUMPAD0","brief":"","defaultValue":"96","scope":"static","type":"PropertyDoc"},{"id":"3bKDcPVVVkMJJmulYsNPl","name":"NUMPAD1","brief":"","defaultValue":"97","scope":"static","type":"PropertyDoc"},{"id":"MKN8V9MJsTYuu8hiTiQOk","name":"NUMPAD2","brief":"","defaultValue":"98","scope":"static","type":"PropertyDoc"},{"id":"sK2cAluShNUtKHS8A3eck","name":"NUMPAD3","brief":"","defaultValue":"99","scope":"static","type":"PropertyDoc"},{"id":"bApphFduMZdccBOic5QUh","name":"NUMPAD4","brief":"","defaultValue":"100","scope":"static","type":"PropertyDoc"},{"id":"bYyG97rtNtCNxIVIpmQ_3","name":"NUMPAD5","brief":"","defaultValue":"101","scope":"static","type":"PropertyDoc"},{"id":"CMx7G40Bg1LmAogrv6yHW","name":"NUMPAD6","brief":"","defaultValue":"102","scope":"static","type":"PropertyDoc"},{"id":"Ose9nN5sfZ5o-km5QJ8kM","name":"NUMPAD7","brief":"","defaultValue":"103","scope":"static","type":"PropertyDoc"},{"id":"u7X9atXMArXU01xEKEshy","name":"NUMPAD8","brief":"","defaultValue":"104","scope":"static","type":"PropertyDoc"},{"id":"JFRbNQWPnnyj4jIoOXlAc","name":"NUMPAD9","brief":"","defaultValue":"105","scope":"static","type":"PropertyDoc"},{"id":"XQM3GTuPePHsg8uSzqQgF","name":"O","brief":"","defaultValue":"79","scope":"static","type":"PropertyDoc"},{"id":"yU1UZFkUEjV3JIjPVf5yT","name":"OPEN_BRACKET","brief":"","defaultValue":"219","scope":"static","type":"PropertyDoc"},{"id":"3_T9ygcT_nB8D_j9O6L45","name":"P","brief":"","defaultValue":"80","scope":"static","type":"PropertyDoc"},{"id":"3uUIUx5Juzs-C1TRSMI99","name":"PAGE_DOWN","brief":"","defaultValue":"34","scope":"static","type":"PropertyDoc"},{"id":"0x5Cvh6TNsLdVkX9hEAuT","name":"PAGE_UP","brief":"","defaultValue":"33","scope":"static","type":"PropertyDoc"},{"id":"ubwP0CUBpsNcgKp6r_gWF","name":"PAUSE","brief":"","defaultValue":"19","scope":"static","type":"PropertyDoc"},{"id":"bQGkz8wrQqD_zqnoVnMdt","name":"PERIOD","brief":"","defaultValue":"190","scope":"static","type":"PropertyDoc"},{"id":"oUC3mggiOZubgL5cnqaY8","name":"PLUS","brief":"","defaultValue":"187","scope":"static","type":"PropertyDoc"},{"id":"IjpN6ecz1pZi7l-4KzSIw","name":"PRINT_SCREEN","brief":"","defaultValue":"42","scope":"static","type":"PropertyDoc"},{"id":"2h5rGhi6jekrZ0HWMirvJ","name":"Q","brief":"","defaultValue":"81","scope":"static","type":"PropertyDoc"},{"id":"jqWE5vg7Yaddk7DI9axND","name":"R","brief":"","defaultValue":"82","scope":"static","type":"PropertyDoc"},{"id":"YD-ONYRfIzmYUGNBQJOt1","name":"RIGHT","brief":"","defaultValue":"39","scope":"static","type":"PropertyDoc"},{"id":"UOjk1cX8bnBVSUQ7BDZY2","name":"S","brief":"","defaultValue":"83","scope":"static","type":"PropertyDoc"},{"id":"60jKCjFb8Q6Nl4up-DdAO","name":"SCROLL_LOCK","brief":"","defaultValue":"145","scope":"static","type":"PropertyDoc"},{"id":"LyT9tXkF7Fzj0BbDTYhFE","name":"SEMICOLON","brief":"","defaultValue":"186","scope":"static","type":"PropertyDoc"},{"id":"bnwZjftaJ_k1kuo6s-rEC","name":"SHIFT","brief":"","defaultValue":"16","scope":"static","type":"PropertyDoc"},{"id":"Flf4dvo_NZ6E2SgTGYt4R","name":"SINGLE_QUOTE","brief":"","defaultValue":"222","scope":"static","type":"PropertyDoc"},{"id":"wCDGdSl7rIbo6FPqu9oFH","name":"SPACE","brief":"","defaultValue":"32","scope":"static","type":"PropertyDoc"},{"id":"AISgZkVBlA8S8cMZKWhXx","name":"SUBSTRACT","brief":"","defaultValue":"109","scope":"static","type":"PropertyDoc"},{"id":"4i7fLD5OXm7CquV0poqO8","name":"T","brief":"","defaultValue":"84","scope":"static","type":"PropertyDoc"},{"id":"iOTPMzuGax4dnpPWdMRzi","name":"TAB","brief":"","defaultValue":"9","scope":"static","type":"PropertyDoc"},{"id":"rCDklsoO3UuE4Cnb__ap-","name":"TILDE","brief":"","defaultValue":"126","scope":"static","type":"PropertyDoc"},{"id":"MBysFXghwRw3XUU4wnSzu","name":"U","brief":"","defaultValue":"85","scope":"static","type":"PropertyDoc"},{"id":"gwCczTfo49LYAls9IPONA","name":"UP","brief":"","defaultValue":"38","scope":"static","type":"PropertyDoc"},{"id":"BkZ8IVNKE-2iztWaGN-VJ","name":"V","brief":"","defaultValue":"86","scope":"static","type":"PropertyDoc"},{"id":"OPODQZcltsbKjEJh8ob45","name":"W","brief":"","defaultValue":"87","scope":"static","type":"PropertyDoc"},{"id":"oAoVPTJVfA5XKf183Lv3w","name":"WINDOW_KEY","brief":"","defaultValue":"91","scope":"static","type":"PropertyDoc"},{"id":"t_0lZT7mwIfvGeAUi2jD2","name":"X","brief":"","defaultValue":"88","scope":"static","type":"PropertyDoc"},{"id":"YnSDf6qeONqDGWlxjcAkP","name":"Y","brief":"","defaultValue":"89","scope":"static","type":"PropertyDoc"},{"id":"S9HMlOFLHABEV00j6LuCm","name":"Z","brief":"","defaultValue":"90","scope":"static","type":"PropertyDoc"}]},{"id":"aMc9mseApl22ahBItYo0x","name":"keyBoardEventTarget","brief":"","access":"public","defaultValue":"undefined","type":"PropertyDoc","description":"<p>the default target element for keyboard events (usually the window element in which the game is running)</p>"},{"id":"rbWKqAbXLkAhtmKPZtLi3","name":"locked","brief":"","access":"public","defaultValue":"false","type":"PropertyDoc","description":"<p>indicates if the pointer is currently locked</p>"},{"id":"7yAHKl7FtcSKnX2g5cf3e","name":"pointer","brief":"","access":"public","type":"PropertyDoc","description":"<p>Pointer information (current position and size)</p>"},{"id":"HV8V-Zem7oBsdL_z-o6zb","name":"pointerEventTarget","brief":"","access":"public","defaultValue":"undefined","type":"PropertyDoc","description":"<p>the default target element for pointer events (usually the canvas element in which the game is rendered)</p>"},{"id":"XCc8Cf8dicU0Z2NUtbX1I","name":"preventDefault","brief":"","access":"public","defaultValue":"true","type":"PropertyDoc","description":"<p>specify if melonJS should prevent all default browser action on registered events.</p>"},{"id":"mxbluWpob5iKNwdCANTDD","name":"setGamepadMapping","brief":"","access":"public","examples":[{"caption":"","code":"\n // A weird controller that has its axis mappings reversed\n me.input.setGamepadMapping(\"Generic USB Controller\", {\n   \"axes\" : [ 3, 2, 1, 0 ],\n   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]\n });\n\n // Mapping extra axes to analog buttons\n me.input.setGamepadMapping(\"Generic Analog Controller\", {\n   \"axes\" : [ 0, 1, 2, 3 ],\n   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ],\n\n   // Raw axis 4 is mapped to GAMEPAD.BUTTONS.FACE_1\n   // Raw axis 5 is mapped to GAMEPAD.BUTTONS.FACE_2\n   // etc...\n   // Also maps left and right triggers\n   \"analog\" : [ 4, 5, 6, 7, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],\n\n   // Normalize the value of button L2: [-1.0..1.0] => [0.0..1.0]\n   \"normalize_fn\" : function (value, axis, button) {\n     return ((button === me.input.GAMEPAD.BUTTONS.L2) ? ((value + 1) / 2) : value) || 0;\n   }\n });\n"}],"type":"PropertyDoc","description":"<p>specify a custom mapping for a specific gamepad id<br>\nsee below for the default mapping : <br></p>\n <center><img src=\"ima...","params":[{"identifier":"id","description":"<p>Gamepad id string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"mapping","description":"<p>A hash table</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"mapping.axes","description":"<p>Standard analog control stick axis locations</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.buttons","description":"<p>Standard digital button locations</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.analog","optional":true,"description":"<p>Analog axis locations for buttons</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.normalize_fn","optional":true,"description":"<p>a function that returns a normalized value in range [-1.0..1.0] for the given value, axis and button</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}]},{"id":"elj0A9cfK4lmxLAwdm0TW","name":"throttlingInterval","brief":"","access":"public","type":"PropertyDoc","description":"<p>time interval for event throttling in milliseconds<br>\ndefault value : &quot;1000/me.timer.maxfps&quot; ms<br>\nset to 0 ms..."},{"id":"i8-xMZ93gnvj1xXAnRyiL","name":"bindGamepad","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.X, \"shoot\");\n ...\n // map the lower face button on the first gamepad to the X key\n me.input.bindGamepad(0, {type:\"buttons\", code: me.input.GAMEPAD.BUTTONS.FACE_1}, me.input.KEY.X);\n // map the left axis value on the first gamepad to the LEFT key\n me.input.bindGamepad(0, {type:\"axes\", code: me.input.GAMEPAD.AXES.LX, threshold: -0.5}, me.input.KEY.LEFT);\n"}],"type":"FunctionDoc","description":"<p>Associate a gamepad event to a keycode</p>","params":[{"identifier":"index","optional":false,"description":"<p>Gamepad index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button","optional":false,"description":"<p>Button/Axis definition</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"button.type","description":"<p>&quot;buttons&quot; or &quot;axes&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"button.code","description":"<p>button or axis code id (See {@link input.GAMEPAD.BUTTONS}, {@link input.GAMEPAD.AXES})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button.threshold","optional":true,"default":"1","description":"<p>value indicating when the axis should trigger the keycode (e.g. -0.5 or 0.5)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"keyCode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"WKzgsDAY5FBNDGvmpF-4z","name":"bindKey","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.LEFT,  \"left\");\n me.input.bindKey(me.input.KEY.RIGHT, \"right\");\n me.input.bindKey(me.input.KEY.X,     \"jump\", true);\n me.input.bindKey(me.input.KEY.F1,    \"options\", true, true);\n"}],"type":"FunctionDoc","description":"<p>associate a user defined action to a keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"lock","optional":true,"default":"false","description":"<p>cancel the keypress event once read</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"preventDefault","optional":true,"default":"input.preventDefault","description":"<p>prevent default browser action</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"vgrKP60L_IaSP27WMKamd","name":"bindPointer","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.X, \"shoot\");\n // map the left button click on the X key (default if the button is not specified)\n me.input.bindPointer(me.input.KEY.X);\n // map the right button click on the X key\n me.input.bindPointer(me.input.pointer.RIGHT, me.input.KEY.X);\n"}],"type":"FunctionDoc","description":"<p>Associate a pointer event to a keycode<br>\nLeft button – 0\nMiddle button – 1\nRight button – 2</p>","params":[{"identifier":"button","optional":true,"default":"input.pointer.LEFT","description":"<p>(accordingly to W3C values : 0,1,2 for left, middle and right buttons)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"keyCode","dataType":{"tokens":[{"value":"input.KEY","kind":"canonical"},{"value":"input.KEY","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"5VCiH1iDQxU8TaslliTD-","name":"exitPointerLock","brief":"","access":"public","type":"FunctionDoc","description":"<p>Initiates an exit from pointer lock state</p>","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2xihuEm3_vjMWeehdzCok","name":"getBindingKey","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the action associated with the given keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>user defined associated action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"hu2AZ3fUs1E3GtL0VSPNT","name":"globalToLocal","brief":"","access":"public","examples":[{"caption":"","code":"\n onMouseEvent : function (pointer) {\n    // convert the given into local (viewport) relative coordinates\n    var pos = me.input.globalToLocal(pointer.clientX, pointer.clientY);\n    // do something with pos !\n };\n"}],"type":"FunctionDoc","description":"<p>Translate the specified x and y values from the global (absolute)\ncoordinate to local (viewport) relative coordinate.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the global x coordinate to be translated.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the global y coordinate to be translated.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the translated coordinates</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>A vector object with the corresponding translated coordinates</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"z5Uzu5jQFn4Kacw5MJ0VI","name":"isKeyPressed","brief":"","access":"public","examples":[{"caption":"","code":"\n if (me.input.isKeyPressed('left')) {\n    //do something\n }\n else if (me.input.isKeyPressed('right')) {\n    //do something else...\n }\n"}],"type":"FunctionDoc","description":"<p>return the key press status of the specified action</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if pressed</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4Ml1ITz1bcUUW0Ew_uD9t","name":"keyStatus","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the key status of the specified action</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>down (true) or up(false)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"u2ZizsjYO_3iAXQbfa9Fq","name":"registerPointerEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n  // onActivate function\n  onActivateEvent: function () {\n     // register on the 'pointerdown' event\n     me.input.registerPointerEvent('pointerdown', this, this.pointerDown.bind(this));\n  },\n\n  // pointerDown event callback\n  pointerDown: function (pointer) {\n    // do something\n    ....\n    // don\"t propagate the event to other objects\n    return false;\n  },\n"}],"see":["Pointer","{@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}"],"type":"FunctionDoc","description":"<p>allows registration of event listeners on the object target. <br>\nmelonJS will pass a me.Pointer object to the defined cal...","params":[{"identifier":"eventType","optional":false,"description":"<p>The event type for which the object is registering <br>\nmelonJS currently supports: <br></p>\n <ul>\n   <li><code>\"pointermo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"region","optional":false,"description":"<p>a shape representing the region to register on</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}},{"identifier":"callback","optional":false,"description":"<p>methods to be called when the event occurs.\nReturning <code>false</code> from the defined callback will prevent the event ...","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"ibM_JtDCc3zHswB2W8kj4","name":"releaseAllPointerEvents","brief":"","access":"public","examples":[{"caption":"","code":"\n // release all registered event on the\n me.input.releaseAllPointerEvents(this);\n"}],"type":"FunctionDoc","description":"<p>allows the removal of all registered event listeners from the object target.</p>","params":[{"identifier":"region","optional":false,"description":"<p>the registered region to release event from</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[]},{"id":"UPKbE9lbW2LoJFx7fsWvy","name":"releasePointerEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n // release the registered region on the 'pointerdown' event\n me.input.releasePointerEvent('pointerdown', this);\n"}],"see":["{@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}"],"type":"FunctionDoc","description":"<p>allows the removal of event listeners from the object target.</p>","params":[{"identifier":"eventType","optional":false,"description":"<p>The event type for which the object was registered. See {@link input.registerPointerEvent}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"region","optional":false,"description":"<p>the registered region to release for this event</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}},{"identifier":"callback","optional":true,"default":"\"all\"","description":"<p>if specified unregister the event only for the specific callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"5RgQRKB534vNI_4-mcMvJ","name":"requestPointerLock","brief":"","access":"public","examples":[{"caption":"","code":"\n // register on the pointer lock change event\n event.on(event.POINTERLOCKCHANGE, (locked)=> {\n     console.log(\"pointer lock: \" + locked);\n });\n // request for pointer lock\n me.input.requestPointerLock();\n"}],"type":"FunctionDoc","description":"<p>request for the pointer to be locked on the parent DOM element.\n(Must be called in a click event or an event that requires...","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8gyKczZfsXfO5y4y7_oQp","name":"setGamepadDeadzone","brief":"","access":"public","type":"FunctionDoc","description":"<p>Set deadzone for analog gamepad inputs<br>\nThe default deadzone is 0.1 (10%) Analog values less than this will be ignored</p>","params":[{"identifier":"value","optional":false,"description":"<p>Deadzone value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"uvW43xge8RFs07Nqaq0Jy","name":"setTouchAction","brief":"","access":"public","see":["https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action"],"type":"FunctionDoc","description":"<p>enable/disable all gestures on the given element.<br>\nby default melonJS will disable browser handling of all panning and ...","params":[{"identifier":"element","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"value","optional":true,"default":"\"none\"","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"81AdJykumuKenvkXuvHQS","name":"triggerKeyEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n // trigger a key press\n me.input.triggerKeyEvent(me.input.KEY.LEFT, true);\n"}],"type":"FunctionDoc","description":"<p>trigger the specified key (simulated) event <br></p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"status","optional":true,"default":"false","description":"<p>true to trigger a key down event, or false for key up event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"mouseButton","optional":true,"description":"<p>the mouse button to trigger</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"NDmmqlT-ggMsY-CUIlNEB","name":"unbindGamepad","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindGamepad(0, me.input.GAMEPAD.BUTTONS.FACE_1);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"index","optional":false,"description":"<p>Gamepad index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button","optional":false,"description":"<p>(See {@link input.GAMEPAD.BUTTONS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ZtZ0dwbP611FWbUtZh73G","name":"unbindKey","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindKey(me.input.KEY.LEFT);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"u_Cmpa521oe3NPZtKVO7j","name":"unbindPointer","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindPointer(me.input.pointer.LEFT);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"button","optional":true,"default":"input.pointer.LEFT","description":"<p>(accordingly to W3C values : 0,1,2 for left, middle and right buttons)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ej-6esnr5jjZQbzFAEXFN","name":"unlockKey","brief":"","access":"public","examples":[{"caption":"","code":"\n // Unlock jump when touching the ground\n if (!this.falling && !this.jumping) {\n     me.input.unlockKey(\"jump\");\n }\n"}],"type":"FunctionDoc","description":"<p>unlock a key manually</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]}]},{"id":"zfZIok15ngY2d8QQAFDpu","name":"level","brief":"","type":"NSDoc","description":"<p>a level manager. once ressources loaded, the level manager contains all references of defined levels.</p>","members":[{"id":"rnJEmvGNBp7_2RhdN7eRS","name":"add","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>add a level into the game manager (usually called by the preloader)</p>","params":[{"identifier":"format","optional":false,"description":"<p>level format (only &quot;tmx&quot; supported)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"levelId","optional":false,"description":"<p>the level id (or name)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"callback","optional":true,"description":"<p>a function to be called once the level is loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>true if the level was loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9Agqc3Wg287J9Ga9HML6L","name":"getCurrentLevel","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the current level definition.\nfor a reference to the live instantiated level,\nrather use the container in which it ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}]},{"id":"esIE68rK5xjbTZ4qzvgd2","name":"getCurrentLevelId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the current level id<br></p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"lUdozTnWiSwIbXvOrz12-","name":"levelCount","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the amount of level preloaded</p>","params":[],"returns":[{"description":"<p>the amount of level preloaded</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"MERQR8RWskP-Sba_WRLVl","name":"load","brief":"","access":"public","examples":[{"caption":"","code":"\n // the game assets to be be preloaded\n // TMX maps\n var resources = [\n     {name: \"a4_level1\",   type: \"tmx\",   src: \"data/level/a4_level1.tmx\"},\n     {name: \"a4_level2\",   type: \"tmx\",   src: \"data/level/a4_level2.tmx\"},\n     {name: \"a4_level3\",   type: \"tmx\",   src: \"data/level/a4_level3.tmx\"},\n     // ...\n ];\n\n // ...\n\n // load a level into the game world\n me.level.load(\"a4_level1\");\n ...\n ...\n // load a level into a specific container\n var levelContainer = new me.Container();\n me.level.load(\"a4_level2\", {container:levelContainer});\n // add a simple transformation\n levelContainer.currentTransform.translate(levelContainer.width / 2, levelContainer.height / 2 );\n levelContainer.currentTransform.rotate(0.05);\n levelContainer.currentTransform.translate(-levelContainer.width / 2, -levelContainer.height / 2 );\n // add it to the game world\n me.game.world.addChild(levelContainer);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>load a level into the game manager<br>\n(will also create all level defined entities, etc..)</p>","params":[{"identifier":"levelId","optional":false,"description":"<p>level id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"ame.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.setViewportBounds","optional":true,"default":"true","description":"<p>if true, set the viewport bounds to the map size</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kWmeEwfc7o84wLr8qRXvR","name":"next","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>load the next level</p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the next level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IeTvGZuBUfdRjz6j8Ze14","name":"previous","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>load the previous level<br></p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the previous level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EvLILxalbL2B0DUz_T3PI","name":"reload","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>reload the current level</p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>the current level</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]}]},{"id":"Afk6w4WPUMXUNboEwIaQ9","name":"loader","brief":"","type":"NSDoc","description":"<p>a small class to manage loading of stuff and manage resources</p>","members":[{"id":"Y3bVlI1JTZgHRy3cVBz1J","name":"crossOrigin","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n  // allow for cross-origin texture loading in WebGL\n me.loader.crossOrigin = \"anonymous\";\n\n // set all ressources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes"],"type":"PropertyDoc","description":"<p>crossOrigin attribute to configure the CORS requests for Image data element.\nBy default (that is, when the attribute is no..."},{"id":"jSIHq0cqKYkGgLDEEhGfM","name":"onload","brief":"","access":"public","examples":[{"caption":"","code":"\n // set a callback when everything is loaded\n me.loader.onload = this.loaded.bind(this);\n"}],"scope":"static","type":"PropertyDoc","description":"<p>onload callback</p>"},{"id":"ksHUC5xFq9EM8uN1Db-w4","name":"onProgress","brief":"","access":"public","examples":[{"caption":"","code":"\n // set a callback for progress notification\n me.loader.onProgress = this.updateProgress.bind(this);\n"}],"scope":"static","type":"PropertyDoc","description":"<p>onProgress callback<br>\neach time a resource is loaded, the loader will fire the specified function,\ngiving the actual pro..."},{"id":"horaoymDZI90b6UyvsNFb","name":"withCredentials","brief":"","access":"public","defaultValue":"false","examples":[{"caption":"","code":"\n  // enable withCredentials\n me.loader.withCredentials = true;\n\n // set all ressources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials"],"type":"PropertyDoc","description":"<p>indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies,\nauthorizatio..."},{"id":"kDYZq730xvEAPAISIpSzu","name":"getBinary","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified Binary object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the binary object (&quot;ymTrack&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"iAlU-vQEHf61QUdYsSMHx","name":"getImage","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified Image Object</p>","params":[{"identifier":"image","optional":false,"description":"<p>name of the Image element (&quot;tileset-platformer&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"}],"template":"%1"}}]},{"id":"zepn0GPIc17MHwlzcYKCM","name":"getJSON","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified JSON Object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the json file to load</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"LOKoR5DFPcKr9jNYknV4s","name":"getTMX","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified TMX/TSX object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the tmx/tsx element (&quot;map1&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"x7xJ5Z5OrX_tnYOSK29bU","name":"load","brief":"","access":"public","examples":[{"caption":"","code":"\n // load an image asset\n me.loader.load({name: \"avatar\",  type:\"image\",  src: \"data/avatar.png\"}, this.onload.bind(this), this.onerror.bind(this));\n\n // start loading music\n me.loader.load({\n     name   : \"bgmusic\",\n     type   : \"audio\",\n     src    : \"data/audio/\"\n }, function () {\n     me.audio.play(\"bgmusic\");\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Load a single resource (to be used if you need to load additional resource during the game)</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;tmx&quot;, &quot;tsx&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.src","description":"<p>path and/or file name of the resource (for audio assets only the path is required)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.stream","optional":true,"description":"<p>Set to true to force HTML5 Audio, which allows not to wait for large file to be downloaded before playing.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onload","optional":false,"description":"<p>function to be called when the resource is loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"onerror","optional":false,"description":"<p>function to be called in case of error</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>the amount of corresponding resource to be preloaded</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"BSTK6gRh7wwK3Ja_EQVE8","name":"preload","brief":"","access":"public","examples":[{"caption":"","code":"\n game_resources = [\n   // PNG tileset\n   {name: \"tileset-platformer\", type: \"image\",  src: \"data/map/tileset.png\"},\n   // PNG packed texture\n   {name: \"texture\", type:\"image\", src: \"data/gfx/texture.png\"}\n   // TSX file\n   {name: \"meta_tiles\", type: \"tsx\", src: \"data/map/meta_tiles.tsx\"},\n   // TMX level (XML & JSON)\n   {name: \"map1\", type: \"tmx\", src: \"data/map/map1.json\"},\n   {name: \"map2\", type: \"tmx\", src: \"data/map/map2.tmx\"},\n   {name: \"map3\", type: \"tmx\", format: \"json\", data: {\"height\":15,\"layers\":[...],\"tilewidth\":32,\"version\":1,\"width\":20}},\n   {name: \"map4\", type: \"tmx\", format: \"xml\", data: {xml representation of tmx}},\n   // audio resources\n   {name: \"bgmusic\", type: \"audio\",  src: \"data/audio/\"},\n   {name: \"cling\",   type: \"audio\",  src: \"data/audio/\"},\n   // binary file\n   {name: \"ymTrack\", type: \"binary\", src: \"data/audio/main.ym\"},\n   // JSON file (used for texturePacker)\n   {name: \"texture\", type: \"json\", src: \"data/gfx/texture.json\"},\n   // JavaScript file\n   {name: \"plugin\", type: \"js\", src: \"data/js/plugin.js\"},\n   // Font Face\n   { name: \"'kenpixel'\", type: \"fontface\",  src: \"url('data/font/kenvector_future.woff2')\" }\n ];\n ...\n // set all resources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set all the specified game resources to be preloaded.</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;,&quot;js&quot;, &quot;tmx&quot;, &quot;tsx&quot;, &qu...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.src","description":"<p>path and/or file name of the resource (for audio assets only the path is required)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.stream","optional":true,"description":"<p>Set to true to force HTML5 Audio, which allows not to wait for large file to be downloaded before playing.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onload","optional":true,"default":"loader.onload","description":"<p>function to be called when all resources are loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"switchToLoadState","optional":true,"default":"true","description":"<p>automatically switch to the loading screen</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"8KlpaBctZjOrzuKjcNZmP","name":"setBaseURL","brief":"","access":"public","examples":[{"caption":"","code":"\n // change the base URL relative address for audio assets\n me.loader.setBaseURL(\"audio\", \"data/audio/\");\n // change the base URL absolute address for all object types\n me.loader.setBaseURL(\"*\", \"http://myurl.com/\")\n"}],"scope":"instance","type":"MethodDoc","description":"<p>change the default baseURL for the given asset type.<br>\n(this will prepend the asset URL and must finish with a '/')</p>","params":[{"identifier":"type","optional":false,"description":"<p>&quot;*&quot;, &quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;js&quot;, &quot;tmx&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"url","optional":true,"default":"\"./\"","description":"<p>default base URL</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"ZHRTGI1h6lGBdxlrpNt_c","name":"unload","brief":"","access":"public","examples":[{"caption":"","code":"me.loader.unload({name: \"avatar\",  type:\"image\"});\n"}],"scope":"instance","type":"MethodDoc","description":"<p>unload specified resource to free memory</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;tmx&quot;, &quot;tsx&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if unloaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_jhuyq_AsDTz4YeBR_XLA","name":"unloadAll","brief":"","access":"public","examples":[{"caption":"","code":"me.loader.unloadAll();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>unload all resources to free memory</p>","params":[],"returns":[]}]},{"id":"8JBXo53GPeODis8Y73UQ8","name":"Math","brief":"","type":"NSDoc","description":"<p>a collection of math utility functions</p>","members":[{"id":"hBEp1yBt4h8u5ULkmJOoX","name":"DEG_TO_RAD","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant to convert from degrees to radians</p>"},{"id":"EmA4LKR8F9VMhZcHXDur-","name":"EPSILON","brief":"","access":"public","defaultValue":"0.000001","readonly":true,"type":"PropertyDoc","description":"<p>the difference between 1 and the smallest floating point number greater than 1</p>"},{"id":"O6YuENaJcfTlflbrmtIX4","name":"ETA","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant equals to half pi</p>"},{"id":"kEjV5jCXONLMF2pn-bbSM","name":"RAD_TO_DEG","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant to convert from radians to degrees</p>"},{"id":"Z6jy9GYKQg9Ypc7diLEXz","name":"TAU","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant equals to 2 times pi</p>"},{"id":"lTLqA-ltfwD1iubQjKLP2","name":"clamp","brief":"","access":"public","type":"FunctionDoc","description":"<p>clamp the given value</p>","params":[{"identifier":"val","optional":false,"description":"<p>the value to clamp</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"low","optional":false,"description":"<p>lower limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"description":"<p>higher limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>clamped value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"K5bfy2opcGq7sWRjJhJGS","name":"degToRad","brief":"","access":"public","examples":[{"caption":"","code":"\n // convert a specific angle\n me.Math.degToRad(60); // return 1.0471...\n"}],"type":"FunctionDoc","description":"<p>Converts an angle in degrees to an angle in radians</p>","params":[{"identifier":"angle","optional":false,"description":"<p>angle in degrees</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"8yEyoXXWAvs9SNEERNeVL","name":"isPowerOfTwo","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given value is a power of two</p>","params":[{"identifier":"val","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5RVBiJWRrJLXVKSX8BRvS","name":"nextPowerOfTwo","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the next power of two for the given value</p>","params":[{"identifier":"val","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"eBztmhH2eYorUiz1XODqd","name":"radToDeg","brief":"","access":"public","examples":[{"caption":"","code":"\n // convert a specific angle\n me.Math.radToDeg(1.0471975511965976); // return 60\n"}],"type":"FunctionDoc","description":"<p>Converts an angle in radians to an angle in degrees.</p>","params":[{"identifier":"radians","optional":false,"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding angle in degrees</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"YBu6CLJdSljxOtl0SghhJ","name":"random","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.random(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a random integer between min (included) and max (excluded)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"X7UoyGK30CYpuBvcSAlin","name":"randomFloat","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.randomFloat(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a random float between min, max (exclusive)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"80BsruRpR2TiTUEQSN86Z","name":"round","brief":"","access":"public","examples":[{"caption":"","code":"\n // round a specific value to 2 digits\n me.Math.round(10.33333, 2); // return 10.33\n"}],"type":"FunctionDoc","description":"<p>round a value to the specified number of digit</p>","params":[{"identifier":"num","optional":false,"description":"<p>value to be rounded.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dec","optional":true,"default":"0","description":"<p>number of decimal digit to be rounded to.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>rounded value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_VHzvQmrknVa15KbJs4tG","name":"toBeCloseTo","brief":"","access":"public","examples":[{"caption":"","code":"\n // test if the given value is close to 10\n if (me.Math.toBeCloseTo(10, value)) {\n     // do something\n }\n"}],"type":"FunctionDoc","description":"<p>check if the given value is close to the expected one</p>","params":[{"identifier":"expected","optional":false,"description":"<p>value to be compared with.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"actual","optional":false,"description":"<p>actual value to compare</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"precision","optional":true,"default":"2","description":"<p>float precision for the comparison</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>if close to</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BKkKHr43yqRoppYCEuzy7","name":"weightedRandom","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.weightedRandom(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a weighted random between min, max (exclusive)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"G6L-rb_YTqz732646xwqI","name":"ParticleEmitterSettings","brief":"","readonly":true,"see":["ParticleEmitter"],"type":"NSDoc","description":"<p>ParticleEmitterSettings contains the default settings for ParticleEmitter</p>","members":[{"id":"Vrnx9mBz0_D0SRgVmTZM3","name":"angle","brief":"","access":"public","defaultValue":"Math.PI / 2","scope":"static","type":"PropertyDoc","description":"<p>Start angle for particle launch in Radians</p>"},{"id":"mEdX7YpEAAPzKFEtQM-Eb","name":"angleVariation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Variation in the start angle for particle launch in Radians.</p>"},{"id":"BgzJ25-rPq5rfvI8xZrss","name":"blendMode","brief":"","access":"public","defaultValue":"normal","scope":"static","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied when rendering particles.\n(note: this will superseed the <code>textureAdditive</code> setting..."},{"id":"0ulu1lm1e5qn5cKpnOEpD","name":"duration","brief":"","access":"public","defaultValue":"Infinity","scope":"static","type":"PropertyDoc","description":"<p>Duration that the emitter releases particles in ms (used only if emitter is Stream).\nAfter this period, the emitter stop t..."},{"id":"ny0Q5POxA-2aFA7mieE8A","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Render particles in screen space.</p>"},{"id":"CfoCMhtZ_YI2U2Qf6pdDR","name":"followTrajectory","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Update the rotation of particle in accordance the particle trajectory.<br>\nThe particle sprite should aim at zero angle (d..."},{"id":"YWbUSyk8kATb5G2QAsaNo","name":"framesToSkip","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Skip n frames after updating the particle system once.\nThis can be used to reduce the performance impact of emitters with ..."},{"id":"ekZNdloZ08GSYD4S9m1dZ","name":"frequency","brief":"","access":"public","defaultValue":"100","scope":"static","type":"PropertyDoc","description":"<p>How often a particle is emitted in ms (used only if emitter is a Stream).</p>"},{"id":"JFa4lW_IDv8aqLHG_eOHV","name":"gravity","brief":"","access":"public","defaultValue":"0","scope":"static","see":["game.world.gravity"],"type":"PropertyDoc","description":"<p>Vertical force (Gravity) for each particle</p>"},{"id":"Hjeqg_qo3wrSQsC_cBdeG","name":"height","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Height of the particle spawn area</p>"},{"id":"A_efMgQY9v7W654oyDAJl","name":"image","brief":"","access":"public","defaultValue":"undefined","scope":"static","see":["ParticleEmitterSettings.textureSize"],"type":"PropertyDoc","description":"<p>image used for particles texture\n(by default melonJS will create an white 8x8 texture image)</p>"},{"id":"h_Uau40ciiTjmDKbszsxq","name":"maxEndScale","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Maximum end scale ratio for particles</p>"},{"id":"Iathm4wzfbh8mOUtJEqwW","name":"maxLife","brief":"","access":"public","defaultValue":"3000","scope":"static","type":"PropertyDoc","description":"<p>Maximum time each particle lives once it is emitted in ms.</p>"},{"id":"NdyAoQaaXNDwzRccfp5Z0","name":"maxParticles","brief":"","access":"public","defaultValue":"10","scope":"static","type":"PropertyDoc","description":"<p>Maximum number of particles launched each time in this emitter (used only if emitter is Stream).</p>"},{"id":"1i8tzoxXdFKZj4iklNyvO","name":"maxRotation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Maximum start rotation for particles sprites in Radians</p>"},{"id":"P0Oiv1_Gho2CnuQ69F5ia","name":"maxStartScale","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Maximum start scale ratio for particles (1 = no scaling)</p>"},{"id":"9z3Mmhm2TbYXihGxgZVSb","name":"minEndScale","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Minimum end scale ratio for particles</p>"},{"id":"74bhiVYgeafmDdvyQxGg9","name":"minLife","brief":"","access":"public","defaultValue":"1000","scope":"static","type":"PropertyDoc","description":"<p>Minimum time each particle lives once it is emitted in ms.</p>"},{"id":"InqD9tiUHq4n96l9TUZRH","name":"minRotation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Minimum start rotation for particles sprites in Radians</p>"},{"id":"OKk-dWGASYPY-Fhs33UKA","name":"minStartScale","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Minimum start scale ratio for particles (1 = no scaling)</p>"},{"id":"S3rdiG0V4haA--KyJlTaI","name":"onlyInViewport","brief":"","access":"public","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Update particles only in the viewport, remove it when out of viewport.</p>"},{"id":"SEloNhO4PH0Z7cJXCJtQ8","name":"speed","brief":"","access":"public","defaultValue":"2","scope":"static","type":"PropertyDoc","description":"<p>Start speed of particles.<br></p>"},{"id":"MB8MHyoycP4tPyuRqGk5E","name":"speedVariation","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Variation in the start speed of particles</p>"},{"id":"RvvuMvGQedoxJGcMJJmmn","name":"textureAdditive","brief":"","access":"public","defaultValue":"false","scope":"static","see":["ParticleEmitterSettings.blendMode"],"type":"PropertyDoc","description":"<p>Enable the Texture Additive by composite operation (&quot;additive&quot; blendMode)</p>"},{"id":"rIFu4d-xTQ802xYpG6HmE","name":"textureSize","brief":"","access":"public","defaultValue":"8","scope":"static","see":["ParticleEmitterSettings.image"],"type":"PropertyDoc","description":"<p>default texture size used for particles if no image is specified\n(by default melonJS will create an white 8x8 texture imag..."},{"id":"3Bkq2xNPU2DOtIGqXh3N0","name":"tint","brief":"","access":"public","defaultValue":"\"#fff\"","scope":"static","type":"PropertyDoc","description":"<p>tint to be applied to particles</p>"},{"id":"rZG-jQ4Odfc4OVPjQHB4-","name":"totalParticles","brief":"","access":"public","defaultValue":"50","scope":"static","type":"PropertyDoc","description":"<p>Total number of particles in the emitter</p>"},{"id":"b6nPJtiNY7vO-uIR2fESg","name":"width","brief":"","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Width of the particle spawn area.</p>"},{"id":"VwKVmHPUoMhsvRkf4DvgY","name":"wind","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Horizontal force (like a Wind) for each particle</p>"}]},{"id":"phTIgFOea2BomQS6kqJlZ","name":"plugin","brief":"","type":"NSDoc","members":[{"id":"dYnvn-5PbbP-bWIIPn2Cs","name":"Base","brief":"","scope":"static","see":["plugin"],"type":"ClassDoc","description":"<p>a base Object for plugin <br>\nplugin must be installed using the register function</p>","members":[{"id":"zfM7EA6zmJUQxgziq_sRE","name":"version","brief":"","access":"public","defaultValue":"\"__VERSION__\"","scope":"instance","type":"PropertyDoc","description":"<p>define the minimum required version of melonJS<br>\nthis can be overridden by the plugin</p>"},{"id":"yAH1LholrbSx9XPjxX_Iz","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[]}]},{"id":"XtyCnbWUdrETca-7q9sxl","name":"patch","brief":"","access":"public","examples":[{"caption":"","code":"\n // redefine the me.game.update function with a new one\n me.plugin.patch(me.game, \"update\", function () {\n   // display something in the console\n   console.log(\"duh\");\n   // call the original me.game.update function\n   this._patched();\n });\n"}],"scope":"static","type":"MethodDoc","description":"<p>patch a melonJS function</p>","params":[{"identifier":"proto","optional":false,"description":"<p>target object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"name","optional":false,"description":"<p>target function</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"fn","optional":false,"description":"<p>replacement function</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"-4oPy0U_E6nTVF_GBJPHg","name":"register","brief":"","access":"public","examples":[{"caption":"","code":"\n // register a new plugin\n me.plugin.register(TestPlugin, \"testPlugin\");\n // the plugin then also become available\n // under then me.plugins namespace\n me.plugins.testPlugin.myfunction ();\n"}],"scope":"static","see":["Base"],"type":"MethodDoc","description":"<p>Register a plugin.</p>","params":[{"identifier":"pluginObj","optional":false,"description":"<p>Plugin object to instantiate and register</p>","dataType":{"tokens":[{"value":"plugin.Base","kind":"canonical"},{"value":"plugin.Base","kind":"link"}],"template":"%1"}},{"identifier":"name","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>all extra parameters will be passed to the plugin constructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]}]},{"id":"k90Jpzz2a_J_SRIIHduq0","name":"plugins","brief":"","see":["plugin.register"],"type":"NSDoc","description":"<p>This namespace is a container for all registered plugins.</p>"},{"id":"MYinERblDnp0ugOklJhOO","name":"pool","brief":"","examples":[{"caption":"","code":"\n // register our bullet object into the object pool\n pool.register(\"bullet\", BulletEntity, true);\n // ...\n // when we need to manually create a new bullet:\n var bullet = pool.pull(\"bullet\", x, y, direction, velocity);\n // ...\n // when we want to destroy existing object, the remove\n // function will ensure the object can then be reallocated later\n game.world.removeChild(bullet);\n"}],"see":["ObjectPool"],"type":"NSDoc","description":"<p>a default global ObjectPool instance</p>"},{"id":"rGh3X22-c-fDvLHmSvZwo","name":"save","brief":"","examples":[{"caption":"","code":"\n // Initialize \"score\" and \"lives\" with default values\n // This loads the properties from localStorage if they exist, else it sets the given defaults\n me.save.add({ score : 0, lives : 3 });\n\n // Print all\n // On first load, this prints { score : 0, lives : 3 }\n // On further reloads, it prints { score : 31337, lives : 3, complexObject : ... }\n // Because the following changes will be saved to localStorage\n console.log(JSON.stringify(me.save));\n\n // Save score\n me.save.score = 31337;\n\n // Also supports complex objects thanks to the JSON backend\n me.save.add({ complexObject : {} })\n me.save.complexObject = { a : \"b\", c : [ 1, 2, 3, \"d\" ], e : { f : [{}] } };\n\n // WARNING: Do not set any child properties of complex objects directly!\n // Changes made that way will not save. Always set the entire object value at once.\n // If you cannot live with this limitation, there's a workaround:\n me.save.complexObject.c.push(\"foo\"); // Modify a child property\n me.save.complexObject = me.save.complexObject; // Save the entire object!\n\n // Remove \"lives\" from localStorage\n me.save.remove(\"lives\");"}],"type":"NSDoc","description":"<p>allow to access and manage the device localStorage</p>","members":[{"id":"cKgoruU_Zx6CYcufUZRbW","name":"add","brief":"","examples":[{"caption":"","code":"\n // Initialize \"score\" and \"lives\" with default values\n me.save.add({ score : 0, lives : 3 });\n // get or set the value through me.save\n me.save.score = 1000;\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Add new keys to localStorage and set them to the given default values if they do not exist</p>","params":[{"identifier":"props","optional":false,"description":"<p>key and corresponding values</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"S_532LtSE3HzHsGYSVxiZ","name":"remove","brief":"","examples":[{"caption":"","code":"\n // Remove the \"score\" key from localStorage\n me.save.remove(\"score\");\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Remove a key from localStorage</p>","params":[{"identifier":"key","optional":false,"description":"<p>key to be removed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]}]},{"id":"pafSMVqJZyB1b-WELWL-8","name":"state","brief":"","type":"NSDoc","description":"<p>a State Manager (state machine)</p>","members":[{"id":"zrembNVr_lgiQl85MF4al","name":"CREDITS","brief":"","defaultValue":"7","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Credits Stage</p>"},{"id":"cWsGTnqregdqMpsMNz2j4","name":"GAME_END","brief":"","defaultValue":"5","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Game End Stage</p>"},{"id":"Kj8yfaNpU7MR23A_AeAdX","name":"GAMEOVER","brief":"","defaultValue":"4","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Game Over Stage</p>"},{"id":"aye9_OOoiabGRGuS4Dwdv","name":"LOADING","brief":"","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Loading Stage</p>"},{"id":"hFcD-obiT-lUjBTT9xDPk","name":"MENU","brief":"","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Menu Stage</p>"},{"id":"Ajr1twDEoJM0SaplE0rYR","name":"PLAY","brief":"","defaultValue":"3","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Play Stage</p>"},{"id":"qbTvgCOui6bAuV23daIEg","name":"READY","brief":"","defaultValue":"2","scope":"static","type":"PropertyDoc","description":"<p>default state ID for &quot;Ready&quot; Stage</p>"},{"id":"YDbMp3_nvx6sxhM7ABvtr","name":"SCORE","brief":"","defaultValue":"6","scope":"static","type":"PropertyDoc","description":"<p>default state ID for High Score Stage</p>"},{"id":"2-DWcFuq2xtloNuf4QPmL","name":"SETTINGS","brief":"","defaultValue":"8","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Settings Stage</p>"},{"id":"LF7xjUm_NKBs4Ye8olFk3","name":"SETTINGS","brief":"","defaultValue":"9","scope":"static","type":"PropertyDoc","description":"<p>default state ID for the default Stage\n(the default stage is the one running as soon as melonJS is started)</p>"},{"id":"ZADQz5i_fZe5bXnes_aCR","name":"USER","brief":"","defaultValue":"100","examples":[{"caption":"","code":"\n var STATE_INFO = me.state.USER + 0;\n var STATE_WARN = me.state.USER + 1;\n var STATE_ERROR = me.state.USER + 2;\n var STATE_CUTSCENE = me.state.USER + 3;\n"}],"scope":"static","type":"PropertyDoc","description":"<p>default state ID for user defined constants<br></p>"},{"id":"Hec-NWNCk39ACqG7mfTk_","name":"change","brief":"","access":"public","examples":[{"caption":"","code":"\n // The onResetEvent method on the play screen will receive two args:\n // \"level_1\" and the number 3\n me.state.change(me.state.PLAY, \"level_1\", 3);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>change the game/app state</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"forceChange","optional":false,"description":"<p>if true the state will be changed immediately</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>extra arguments to be passed to the reset functions</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"JodgOyoXYx9ecfMp8Hy9P","name":"current","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the current stage<br>\nuseful to call a object specific method</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}}]},{"id":"dvAOqCT5hpIfpw1kO21Ld","name":"isCurrent","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the specified state is the current one</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the specified state is the current one</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GTwfUorrDkeG-nKWi1M_c","name":"isPaused","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the pause state of the state manager</p>","params":[],"returns":[{"description":"<p>true if the game is paused</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Q_KzAMt92bOFM4UyUzCvS","name":"isRunning","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the running state of the state manager</p>","params":[],"returns":[{"description":"<p>true if a &quot;process is running&quot;</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xw3JqnRIeU-IiNuYQjkvi","name":"pause","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>pause the current stage</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>pause current music track on screen pause</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"uf_mPv1dp8wxT6DK2xoMB","name":"restart","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Restart the current stage from a full stop.</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>resume current music track on screen resume</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"CjTWhD4crv-FZnHH8jkyV","name":"resume","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>resume the current stage</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>resume current music track on screen resume</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Z7kfiWSSo6sD_v6iijZiW","name":"set","brief":"","access":"public","examples":[{"caption":"","code":"\n class MenuButton extends me.GUI_Object {\n     onClick() {\n         // Change to the PLAY state when the button is clicked\n         me.state.change(me.state.PLAY);\n         return true;\n     }\n };\n\n class MenuScreen extends me.Stage {\n     onResetEvent() {\n         // Load background image\n         me.game.world.addChild(\n             new me.ImageLayer(0, 0, {\n                 image : \"bg\",\n                 z: 0 // z-index\n             }\n         );\n\n         // Add a button\n         me.game.world.addChild(\n             new MenuButton(350, 200, { \"image\" : \"start\" }),\n             1 // z-index\n         );\n\n         // Play music\n         me.audio.playTrack(\"menu\");\n     }\n\n     onDestroyEvent() {\n         // Stop music\n         me.audio.stopTrack();\n     }\n };\n\n me.state.set(me.state.MENU, new MenuScreen());\n"}],"scope":"instance","type":"MethodDoc","description":"<p>associate the specified state with a Stage</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"stage","optional":false,"description":"<p>Instantiated Stage to associate with state ID</p>","dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}},{"identifier":"start ","optional":true,"default":" false","description":"<p>if true the state will be changed immediately after adding it.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"T0HDnaryneJlOHaydaHgr","name":"setTransition","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>enable/disable transition for a specific state (by default enabled for all)</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":false,"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"MtFmbm3Op1KS6fQrvXmGC","name":"stop","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Stop the current stage.</p>","params":[{"identifier":"pauseTrack","optional":true,"default":"false","description":"<p>pause current track on screen stop.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"IaprLtGc6j6i5ZwnLyAI6","name":"transition","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>specify a global transition effect</p>","params":[{"identifier":"effect","optional":false,"description":"<p>(only &quot;fade&quot; is supported for now)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"A3xXUfn8PZvnQqWA54plc","name":"timer","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" after 1000ms\n timer.setTimeout(myFunction, 1000);\n // set a timer to call \"myFunction\" after 1000ms (respecting the pause state) and passing param1 and param2\n timer.setTimeout(myFunction, 1000, true, param1, param2);\n // set a timer to call \"myFunction\" every 1000ms\n timer.setInterval(myFunction, 1000);\n // set a timer to call \"myFunction\" every 1000ms (respecting the pause state) and passing param1 and param2\n timer.setInterval(myFunction, 1000, true, param1, param2);\n"}],"readonly":true,"see":["Timer"],"type":"NSDoc","description":"<p>the default global Timer instance</p>","members":[{"id":"178Wq641ET9uWdqnRMR33","name":"fps","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Last measured fps rate.<br/>\nThis feature is disabled by default, unless the debugPanel is enabled/visible</p>"},{"id":"-tpKeaLujiL9jQmpnFzYU","name":"interpolation","brief":"","defaultValue":"false","scope":"instance","see":["timer.tick"],"type":"PropertyDoc","description":"<p>Enable/disable frame interpolation</p>"},{"id":"I9QErHfb7bdLAuNWd7O6D","name":"maxfps","brief":"","access":"public","defaultValue":"60","scope":"instance","see":["timer.tick"],"type":"PropertyDoc","description":"<p>Set the maximum target display frame per second</p>"},{"id":"0aqv-IUw48416bx0JF2Y_","name":"tick","brief":"","access":"public","defaultValue":"1","scope":"instance","see":["timer.interpolation"],"type":"PropertyDoc","description":"<p>Last game tick value.<br/>\nUse this value to scale velocities during frame drops due to slow\nhardware or when setting an F..."},{"id":"mYJBUAZDe_DIM1imhvCEi","name":"clearInterval","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the Interval set by me.timer.setInterval().</p>","params":[{"identifier":"intervalID","optional":false,"description":"<p>ID of the interval to be cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bfQmz8pjUcrYqDueD6zmU","name":"clearTimeout","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the delay set by me.timer.setTimeout().</p>","params":[{"identifier":"timeoutID","optional":false,"description":"<p>ID of the timeout to be cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"xlkI2bTjvBLXW7a5M6UOK","name":"getDelta","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return elapsed time in milliseconds since the last update</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HHuKXfxKi7Y9YXkyd4IQz","name":"getTime","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the current timestamp in milliseconds <br>\nsince the game has started or since linux epoch (based on browser suppor...","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"W1hIeCtAKVDIAba3tNt7d","name":"setInterval","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" every 1000ms\n me.timer.setInterval(myFunction, 1000);\n // set a timer to call \"myFunction\" every 1000ms (respecting the pause state) and passing param1 and param2\n me.timer.setInterval(myFunction, 1000, true, param1, param2);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Calls a function continously at the specified interval.  See setTimeout to call function a single time.</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to execute</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>the number of milliseconds (thousandths of a second) on how often to execute the function</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pauseable","optional":true,"default":"true","description":"<p>respects the pause state of the engine.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>optional parameters which are passed through to the function specified by fn once the timer expires.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>The numerical ID of the timer, which can be used later with me.timer.clearInterval().</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"QV_FRK8cIL-jDzQ4DYlsN","name":"setTimeout","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" after 1000ms\n me.timer.setTimeout(myFunction, 1000);\n // set a timer to call \"myFunction\" after 1000ms (respecting the pause state) and passing param1 and param2\n me.timer.setTimeout(myFunction, 1000, true, param1, param2);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Calls a function once after a specified delay. See me.timer.setInterval to repeativly call a function.</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function you want to execute after delay milliseconds.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>the number of milliseconds (thousandths of a second) that the function call should be delayed by.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pauseable","optional":true,"default":"true","description":"<p>respects the pause state of the engine.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>optional parameters which are passed through to the function specified by fn once the timer expires.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>The numerical ID of the timer, which can be used later with me.timer.clearTimeout().</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"5jpwBZBw73YPYGt5H0k5p","name":"utils","brief":"","defaultValue":"\"\"","type":"NSDoc","description":"<p>a collection of utility functions</p>","members":[{"id":"4BQtcB5-zSXOT-wL86m9z","name":"agent","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of utility functons to ease porting between different user agents.</p>","members":[{"id":"A_aykwmoijwh3b9dptJxe","name":"prefixed","brief":"","access":"public","type":"FunctionDoc","description":"<p>Get a vendor-prefixed property</p>","params":[{"identifier":"name","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"obj","optional":true,"default":"globalThis","description":"<p>Object or element reference to access</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Value of property</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"vPn9U4ipdpAOpP2yLQt6Z","name":"setPrefixed","brief":"","access":"public","type":"FunctionDoc","description":"<p>Set a vendor-prefixed property</p>","params":[{"identifier":"name","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Property value</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"obj","optional":true,"default":"globalThis","description":"<p>Object or element reference to access</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if one of the vendor-prefixed property was found</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"kf-1BMjA3sU7vGckztC7I","name":"array","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of array utility functions</p>","members":[{"id":"z_Cik0N-zBQYyCxcvfBfV","name":"random","brief":"","access":"public","examples":[{"caption":"","code":"\n // Select a random array element\n var arr = [ \"foo\", \"bar\", \"baz\" ];\n console.log(me.utils.array.random(arr));\n"}],"type":"FunctionDoc","description":"<p>return a random array element</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array to pick a element</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random member of array</p>","dataType":{"tokens":[{"value":"any","kind":"canonical"}],"template":"any"}}]},{"id":"-pvAd_SQCES2YOKRiOQ46","name":"remove","brief":"","access":"public","type":"FunctionDoc","description":"<p>Remove the specified object from the given Array</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array from which to remove an object</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}},{"identifier":"obj","optional":false,"description":"<p>to be removed</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the modified Array\nvar arr = [ &quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot; ];\n// remove &quot;foo&quot; from the arr...","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"dwlRiyqmhfH2TsQggIiPm","name":"weightedRandom","brief":"","access":"public","type":"FunctionDoc","description":"<p>return a weighted random array element, favoring the earlier entries</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array to pick a element</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random member of array</p>","dataType":{"tokens":[{"value":"any","kind":"canonical"}],"template":"any"}}]}]},{"id":"USWr4m1PUIdDT-IYIaYm4","name":"file","brief":"","defaultValue":"undefined","readonly":true,"scope":"static","type":"NSDoc","description":"<p>a collection of file utility functions</p>","members":[{"id":"fKtij9RQt8p87dCfBseMy","name":"getBasename","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the base name of the file without path info</p>","params":[{"identifier":"path","optional":false,"description":"<p>path containing the filename</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the base name without path information.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"wv5rJWvz1XXvmNLdRNxx5","name":"getExtension","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the extension of the file in the given path</p>","params":[{"identifier":"path","optional":false,"description":"<p>path containing the filename</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>filename extension.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]}]},{"id":"BXtBwdbugsfmfCJVf8ryp","name":"function","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of utility functions</p>","members":[{"id":"OjNuLK5abEy9gVP16PVuZ","name":"defer","brief":"","access":"public","examples":[{"caption":"","code":"\n // execute myFunc() when the stack is empty,\n // with the current context and [1, 2, 3] as parameter\n me.utils.function.defer(myFunc, this, 1, 2, 3);\n"}],"type":"FunctionDoc","description":"<p>Executes a function as soon as the interpreter is idle (stack empty).</p>","params":[{"identifier":"func","optional":false,"description":"<p>The function to be deferred.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":false,"description":"<p>The value to be passed as the this parameter to the target function when the deferred function is called</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>Optional additional arguments to carry for the function.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>id that can be used to clear the deferred function using\nclearTimeout</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"w2br1BknRVKDqP_FDjfXI","name":"throttle","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns a function that, when invoked will only be triggered at most\nonce during a given window of time</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to be throttled.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>The delay in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"no_trailing","optional":false,"description":"<p>disable the execution on the trailing edge</p>","dataType":{"tokens":[{"value":"no_trailing","kind":"canonical"},{"value":"no_trailing","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the function that will be throttled</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}]}]},{"id":"tAB2Mn6rJ30mfrhg7Qqs2","name":"string","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of string utility functions</p>","members":[{"id":"d9xwjgOIAgSdRg0e0m-Eo","name":"capitalize","brief":"","access":"public","type":"FunctionDoc","description":"<p>converts the first character of the given string to uppercase</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be capitalized</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the capitalized string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"2BMS1ZNE6p9PHHJhkAHTO","name":"isBoolean","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given string contains a true or false</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be tested</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if the string is either true or false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"axsDfxf16p6iNWYEwJFEH","name":"isNumeric","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given string contains a numeric integer or float value</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be tested</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if string contains only digits</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"NojSm1KFSSiE1zaOkuHjA","name":"toHex","brief":"","access":"public","type":"FunctionDoc","description":"<p>convert a string to the corresponding hexadecimal value</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be converted</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the converted hexadecimal value</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"XfIsOx4VBYgAzor9RpmHg","name":"trimLeft","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the string stripped of whitespace from the left.</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be trimmed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>trimmed string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"7W6HKlWVlkpeglVE0kAzX","name":"trimRight","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the string stripped of whitespace from the right.</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be trimmed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>trimmed string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]}]},{"id":"DrB8oSSoQMVKxfiftdH0D","name":"checkVersion","brief":"","access":"public","examples":[{"caption":"","code":"\n if (me.utils.checkVersion(\"7.0.0\") > 0) {\n     console.error(\n         \"melonJS is too old. Expected: 7.0.0, Got: 6.3.0\"\n     );\n }\n"}],"scope":"static","type":"MethodDoc","description":"<p>Compare two version strings</p>","params":[{"identifier":"first","optional":false,"description":"<p>First version string to compare</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"second","optional":true,"default":"version","description":"<p>Second version string to compare</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>comparison result <br>&lt; 0 : first &lt; second<br>\n0 : first == second<br>\n&gt; 0 : first &gt; second</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"TkpcXFTvr-VKs7ECB9r0c","name":"getPixels","brief":"","access":"public","scope":"static","type":"MethodDoc","description":"<p>Get image pixels</p>","params":[{"identifier":"image","optional":false,"description":"<p>Image to read</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>ImageData object</p>","dataType":{"tokens":[{"value":"ImageData","kind":"canonical"},{"value":"ImageData","kind":"canonical"}],"template":"%1"}}]},{"id":"3s0H7ChWjgiO6Ah_TZXUZ","name":"getUriFragment","brief":"","access":"public","examples":[{"caption":"","code":"\n // http://www.example.com/index.html#debug&hitbox=true&mytag=value\n var UriFragment = me.utils.getUriFragment();\n console.log(UriFragment[\"mytag\"]); //> \"value\"\n"}],"scope":"static","type":"MethodDoc","description":"<p>parse the fragment (hash) from a URL and returns them into</p>","params":[{"identifier":"url","optional":true,"default":"document.location","description":"<p>an optional params string or URL containing fragment (hash) params to be parsed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>an object representing the deserialized params string.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"members":[{"id":"-Z3UEgLzVlgHeJakTl5Il","name":"debug","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>display the debug panel (if preloaded)</p>"},{"id":"lUFc4XZvxYoJQSylSztek","name":"debugToggleKey","brief":"","access":"public","defaultValue":"\"s\"","scope":"static","type":"PropertyDoc","description":"<p>show/hide the debug panel (if preloaded)</p>"},{"id":"SB1Gtigq8OLTW_Iq3Acn3","name":"hitbox","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the hitbox in the debug panel (if enabled)</p>"},{"id":"sM4m3TmhJ3Y_Pf9yd7byG","name":"quadtree","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the quadtree in the debug panel (if enabled)</p>"},{"id":"MaYIosddfwGl36SgeWJnb","name":"velocity","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the entities velocity in the debug panel (if enabled)</p>"},{"id":"02Du-Vf0J3XFXv0Fnsm6Y","name":"webgl","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>force the renderer to WebGL</p>"}]}]},{"id":"-EZjCafbEd7IBDdL7gP_A","name":"video","brief":"","defaultValue":"1","type":"NSDoc","description":"<p>video functions</p>","members":[{"id":"FiFE0LAwpKQgy-sXXTn0T","name":"AUTO","brief":"","defaultValue":"2","readonly":true,"type":"PropertyDoc","description":"<p>Auto-select the renderer (Attempt WebGL first, with fallback to Canvas)</p>"},{"id":"8CJaDpqK-OKrOlVf-Jz-Z","name":"CANVAS","brief":"","defaultValue":"0","readonly":true,"type":"PropertyDoc","description":"<p>Select the HTML5 Canvas renderer</p>"},{"id":"86IG08SuVmiNgSfXAobum","name":"renderer","brief":"","defaultValue":"undefined","type":"PropertyDoc","description":"<p>A reference to the active Canvas or WebGL active renderer renderer</p>"},{"id":"Y1-pTxPAOLKhn5PYkhpkF","name":"scaleRatio","brief":"","defaultValue":"<1,1>","type":"PropertyDoc","description":"<p>the scaling ratio to be applied to the display canvas</p>"},{"id":"eNsCxVaOmSBc8Ge9tfr05","name":"WEBGL","brief":"","defaultValue":"1","readonly":true,"type":"PropertyDoc","description":"<p>Select the WebGL renderer</p>"},{"id":"a4Oa5d7OJx3sFG0szr4Ht","name":"createCanvas","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Create and return a new Canvas element</p>","params":[{"identifier":"width","optional":false,"description":"<p>width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"offscreenCanvas","optional":true,"default":"false","description":"<p>will return an OffscreenCanvas if supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"tdK78FYgfKPrMmwMaDE5x","name":"getParent","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return a reference to the parent DOM element holding the main canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"kUR6xneu9Qp0jz2AYR_Sc","name":"init","brief":"","examples":[{"caption":"","code":"\n // init the video with a 640x480 canvas\n me.video.init(640, 480, {\n     parent : \"screen\",\n     renderer : me.video.AUTO,\n     scale : \"auto\",\n     scaleMethod : \"fit\",\n     doubleBuffering : true\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Initialize the &quot;video&quot; system (create a canvas based on the given arguments, and the related renderer). <br>\nmel...","params":[{"identifier":"width","optional":false,"description":"<p>The width of the canvas viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The height of the canvas viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options","optional":true,"description":"<p>The optional video/renderer parameters.<br> (see Renderer(s) documentation for further specific options)</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.parent","optional":true,"default":"document.body","description":"<p>the DOM parent element to hold the canvas in the HTML file</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}},{"identifier":"options.renderer","optional":true,"default":"video.AUTO","description":"<p>renderer to use (me.video.CANVAS, me.video.WEBGL, me.video.AUTO)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>enable/disable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.scale","optional":true,"default":"1.0","description":"<p>enable scaling of the canvas ('auto' for automatic scaling)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"options.scaleMethod","optional":true,"default":"\"fit\"","description":"<p>screen scaling modes ('fit','fill-min','fill-max','flex','flex-width','flex-height','stretch')</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.preferWebGL1","optional":true,"default":"false","description":"<p>if true the renderer will only use WebGL 1</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.powerPreference","optional":true,"default":"\"default\"","description":"<p>a hint to the user agent indicating what configuration of GPU is suitable for the WebGL context (&quot;default&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>whether to allow transparent pixels in the front buffer (screen).</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>whether to enable or not video scaling interpolation</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.consoleHeader","optional":true,"default":"true","description":"<p>whether to display melonJS version and basic device information in the console</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>false if initialization failed (canvas not supported)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PQAd91lp2TLd5m34BkfRl","name":"scale","brief":"","scope":"static","see":["video.init"],"type":"FunctionDoc","description":"<p>scale the &quot;displayed&quot; canvas by the given scalar.\nthis will modify the size of canvas element directly.\nOnly use...","params":[{"identifier":"x","optional":false,"description":"<p>x scaling multiplier</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y scaling multiplier</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"e0TrpvIAH4CQHA7NhWG0u","name":"BitmapText","brief":"","type":"ClassDoc","description":"<p>a bitmap font object</p>","extends":["Renderable"],"members":[{"id":"v_yJvteUyPtb2k3YWOPmE","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"Ovy2hmhW009FJDrZz6UyS","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"NgjnXDr5eoWrbp5H_swVi","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"-mSyN-N9whVdwis9mFAsJ","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"5_JABKpyl4p-BNsnab3fC","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"mrhsdJs6TQ0bmNxFtQ_to","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"qpyvrDpW0jLbLTlT60sfI","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"K7JhAVzyR23tfRTLDWR-B","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"WoxNkPktK-N4TYjvfy4BM","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"d67_vQ8aHavks1IH9K-6P","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"J8AScQn48_EVLG-0dCOYa","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"Qqcc9F8QjsPz52-mStUZ6","name":"fillStyle","brief":"","access":"public","scope":"instance","see":["Renderable#tint"],"type":"PropertyDoc","description":"<p>defines the color used to tint the bitmap text</p>"},{"id":"w6Pbk9AQbshnPV7HVC8Xa","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"8Jfpf4bWMpEaFWowLiQ9u","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"n1Q7yzsQAK3ZuEE_urlru","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"BsSZmPylCp6vhZorCiLVE","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"_z7bZ6ZMYDZXJ0O6LVrLC","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"K9cxht-JNFuC4yqmEYC0T","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"zH8SbF-X5SjsC9wcfrj9n","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"Wn-u0RWWc3acpS8u3qnpb","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"ySJK8KuvyMllV_6-PovrI","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"p2hB__U3djY698Uf8gt0a","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"UGptQ4fT5JHyeSkLAuhjS","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"tl0ZHOWTf4UkntwI4Db7w","name":"lineHeight","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Set the line spacing height (when displaying multi-line strings). <br>\nCurrent font height will be multiplied with this va..."},{"id":"7CDB0ARNlPzx6RfqBHqZY","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"5xZ9VEpDk9ZpNCwfOS4xP","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"4VqildS07LlfwWGXAdm-d","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"hbVUnzI70Zx9RgR2PMtOd","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"ZSCPEjCXBN8oTZZ94IPXU","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"ahYPiMmPQpkECXxNOjd47","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"Cs2xEqSoN65Fg1yjKcOZc","name":"textAlign","brief":"","access":"public","defaultValue":"\"left\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the default text alignment (or justification),<br>\npossible values are &quot;left&quot;, &quot;right&quot;, and &quot;..."},{"id":"YaZ4TKTUJFH3T4p1XAqAh","name":"textBaseline","brief":"","access":"public","defaultValue":"\"top\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\npossible values are &quot;top&quot;, &quot;hang..."},{"id":"5sG4ny_ukj8hjxD5BdlDw","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"O-uoBtRcZu2_m2UYHhFGW","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"EARKBwvie-qgxmEk5HeJT","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"_UN1LZBC4QMjQhH9-sAe7","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"FP7nP0S3nSNNZ7ElyHVE_","name":"wordWrapWidth","brief":"","access":"public","defaultValue":"-1","scope":"instance","type":"PropertyDoc","description":"<p>the maximum length in CSS pixel for a single segment of text.\n(use -1 to disable word wrapping)</p>"},{"id":"zHw--hwU06GO3zcsIrSf5","name":"_text","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>the text to be displayed</p>"},{"id":"Owe1oUBlWagwjPuczEZK5","name":"fontData","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>font data</p>"},{"id":"hfvSOFBtg_KxZp68-q7pD","name":"fontImage","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>font image</p>"},{"id":"i5QIaxem8JnwAadQ8AiLi","name":"fontScale","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>scaled font size</p>"},{"id":"JkWvZWRQywg7JuSaZtnWc","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"0kgE76LjDtpA0mP7F1eVr","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"lw4uc57yNk4INCYVrXHJj","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"aXBLLb-05LOj4UXYySORU","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // Use me.loader.preload or me.loader.load to load assets\n me.loader.preload([\n     { name: \"arial\", type: \"binary\" src: \"data/font/arial.fnt\" },\n     { name: \"arial\", type: \"image\" src: \"data/font/arial.png\" },\n ])\n // Then create an instance of your bitmap font:\n var myFont = new me.BitmapText(x, y, {font:\"arial\", text:\"Hello\"});\n // two possibilities for using \"myFont\"\n // either call the draw function from your Renderable draw function\n myFont.draw(renderer, \"Hello!\", 0, 0);\n // or just add it to the word container\n me.game.world.addChild(myFont);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>the text configuration</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.font","description":"<p>a font name to identify the corresponing source image</p>","dataType":{"tokens":[{"value":"string | Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"string | %1"}},{"identifier":"settings.fontData","optional":true,"default":"settings.font","description":"<p>the bitmap font data corresponding name, or the bitmap font data itself</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.size","optional":true,"description":"<p>size a scaling ratio</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.fillStyle","optional":true,"description":"<p>a CSS color value used to tint the bitmapText (@see BitmapText.tint)</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.lineWidth","optional":true,"default":"1","description":"<p>line width, in pixels, when drawing stroke</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.textAlign","optional":true,"default":"\"left\"","description":"<p>horizontal text alignment</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.textBaseline","optional":true,"default":"\"top\"","description":"<p>the text baseline</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.lineHeight","optional":true,"default":"1.0","description":"<p>line spacing height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.0, y:0.0}","description":"<p>anchor point to draw the text at</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.wordWrapWidth","optional":true,"description":"<p>the maximum length in CSS pixel for a single segment of text</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.text","optional":true,"description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[]},{"id":"uPaSsNj3WdXfl_Nh1WeDz","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"FeyKeJkiv0cGvrkSfSvQD","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"MLXd3wbRga7fAO4f5-Qk0","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2qIbsG0It6AZUIIe2knX7","name":"draw","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw the bitmap font</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"eBdsCeYG75JD_ZntGtjHt","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_MlKHCVNASlSXPj9yWKSe","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"1sFDm3_W7FSNdOFE841j5","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"v0wk1yqr5w9QSrYR0_ajX","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"E0JwBdmKiy_nNF5skM5mw","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"BgiyNM4EP_tbtCpdz19A_","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Kh4ZrcfaMTOmrk6038N39","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ii_3I3xL3I_mLNjEB4Tna","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0MkmaObKkTaa98RcEz6iU","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LBBveC2YaLPWtLrK4Vwjv","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VRvLqmEsTTfaTxKW15br-","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in pixels</p>","params":[{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a TextMetrics object with two properties: <code>width</code> and <code>height</code>, defining the output dimensions</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"uvClkNb3fM4vKypHXMyH9","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3RCd7IDvOiqfeE67dzgRa","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"2dnpcjH1XM1sdoccgDXCO","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XaYDMpwm6yxaBq8QCnRGq","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jPvdo2Zld9SKQM8dyZhI3","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the font display size</p>","params":[{"identifier":"scale","optional":false,"description":"<p>ratio</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"iZBxouGmp_gHHZFdxdsz9","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"i3Xwn0mML8KPTo62oneM3","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"U-yD9zp4R1KEqgN7N2LL9","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"McoIiqRexgmrimPXHYPY9","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the font settings</p>","params":[{"identifier":"textAlign","optional":false,"description":"<p>(&quot;left&quot;, &quot;center&quot;, &quot;right&quot;)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"scale","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"Bz_5ZdQNhxM80_7LNdhtS","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"NrlQ1Uj-ss9JyKijqqGeZ","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9cUJTof4FgjniCYbwj2eB","name":"setText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the text to be displayed</p>","params":[{"identifier":"value","optional":false,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"number | string | Array<string>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | string | %2<string>"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"ZiXH9DBZfPbGLHUbNGz2k","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"FyMHPE3ptB0Y16r8sfqMx","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"SjKYkFDruLbULe3uUGhBH","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BT1g7fRPZpSxhUBRrEw-J","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8oTovVbpL5bTWWn8gMnb4","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"g1gl759qCqbi-NhSM7Cs-","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"P_boAWyDd-7yEx9kYYZEh","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"gwgRIu-rUMwgZIpmBFgRm","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HY8fi7Hh_ftq7BtO5HLDm","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"GTDCYWramOvGgd_1KnQ1B","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Ds5FlFn7jsWjyQ2jawczp","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Cpi-bawDlB4aTk-jJpJSd","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"kC-OuoATeiOWXz8_58F3X","name":"Body","brief":"","type":"ClassDoc","description":"<p>a Generic Physic Body Object with some physic properties and behavior functionality, to as a member of a Renderable.</p>","members":[{"id":"aWJgENFf3Tn16ZdLG9tAO","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this body,\nor undefined if it has not been added to one.</p>"},{"id":"BmzGJ3M5RSVFGKiW6YVHD","name":"bounce","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>the body bouciness level when colliding with other solid bodies :\na value of 0 will not bounce, a value of 1 will fully re..."},{"id":"6v476fwh19Nyxi8a9s8Wf","name":"bounds","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The AABB bounds box reprensenting this body</p>"},{"id":"xOvxP9_d4UcQ8i7UejmvE","name":"collisionType","brief":"","access":"public","defaultValue":"collision.types.ENEMY_OBJECT","examples":[{"caption":"","code":"\n // set the body collision type\n body.collisionType = me.collision.types.PLAYER_OBJECT;\n"}],"scope":"instance","see":["collision.types"],"type":"PropertyDoc","description":"<p>define the collision type of the body for collision filtering</p>"},{"id":"t5i6AcUlSvSyK-omwKN6U","name":"falling","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>falling state of the body<br>\ntrue if the object is falling<br>\nfalse if the object is standing on something<br></p>"},{"id":"JbsraZs4mjEo_ooxIWpQz","name":"force","brief":"","access":"public","defaultValue":"<0,0>","examples":[{"caption":"","code":"\n // define a default maximum acceleration, initial force and friction\n this.body.force.set(0, 0);\n this.body.friction.set(0.4, 0);\n this.body.setMaxVelocity(3, 15);\n\n // apply a postive or negative force when pressing left of right key\n update(dt) {\n     if (me.input.isKeyPressed(\"left\"))    {\n          this.body.force.x = -this.body.maxVel.x;\n      } else if (me.input.isKeyPressed(\"right\")) {\n         this.body.force.x = this.body.maxVel.x;\n     } else {\n         this.body.force.x = 0;\n     }\n }\n"}],"scope":"instance","see":["Body.setMaxVelocity"],"type":"PropertyDoc","description":"<p>body force or acceleration (automatically) applied to the body.\nwhen defining a force, user should also define a max veloc..."},{"id":"4H8UU_cQmQM2XXJchz6I2","name":"friction","brief":"","access":"public","defaultValue":"<0,0>","scope":"instance","type":"PropertyDoc","description":"<p>body friction</p>"},{"id":"6YZscdOigd3A6j92krd0i","name":"gravityScale","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["World.gravity"],"type":"PropertyDoc","description":"<p>The degree to which this body is affected by the world gravity</p>"},{"id":"H7Pqbgz5rEBXXVKz4O19a","name":"ignoreGravity","brief":"","access":"public","defaultValue":"false","scope":"instance","see":["World.gravity"],"type":"PropertyDoc","description":"<p>If true this body won't be affected by the world gravity</p>"},{"id":"iSNVmcXIlxLOov6GpBpsD","name":"isStatic","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>Either this body is a static body or not.\nA static body is completely fixed and can never change position or angle.</p>"},{"id":"BfVGPBJDCIviy51MHT7_2","name":"jumping","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>jumping state of the body<br>\nequal true if the body is jumping<br></p>"},{"id":"8sAcx_Huap-APbEU5SFNy","name":"mass","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>the body mass</p>"},{"id":"td3EqKew9bW3dz8kUgU4Z","name":"maxVel","brief":"","access":"public","defaultValue":"<490,490>","scope":"instance","type":"PropertyDoc","description":"<p>max velocity (to limit body velocity)</p>"},{"id":"w2VRT_RSBhDVLLB4H-h-M","name":"vel","brief":"","access":"public","defaultValue":"<0,0>","scope":"instance","type":"PropertyDoc","description":"<p>body velocity</p>"},{"id":"zIjL5pCxEeHvghqpL7yUc","name":"addShape","brief":"","examples":[{"caption":"","code":"\n // add a rectangle shape\n this.body.addShape(new me.Rect(0, 0, image.width, image.height));\n // add a shape from a JSON object\n this.body.addShape(me.loader.getJSON(\"shapesdef\").banana);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>add a collision shape to this body <br>\n(note: me.Rect objects will be converted to me.Polygon before being added)</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape or JSON object</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse | Bounds | object","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5 | object"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"4u4jX96MS6P4Q-d1cmucf","name":"addVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the body shape</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points defining a convex hull</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object for which to set the vertices</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"npocID4I58HfkpcpBopTy","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"ancestor","optional":false,"description":"<p>the parent object this body is attached to</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"shapes","optional":true,"description":"<p>a initial shape, list of shapes, or JSON object defining the body</p>","dataType":{"tokens":[{"value":"Rect | Array<Rect> | Polygon | Array<Polygon> | Line | Array<Line> | Ellipse | Array<Ellipse> | Bounds | Array<Bounds> | object","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"},{"value":"Bounds","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1 | %3<%2> | %4 | %5<%6> | %7 | %8<%9> | %10 | %11<%12> | %13 | %14<%15> | object"}},{"identifier":"onBodyUpdate","optional":true,"description":"<p>callback for when the body is updated (e.g. add/remove shapes)</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"-8Dwv13Jp1WzCICwLO04V","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the any of the shape composing the body contains the given point.</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GOJ7oVhvymsFgaB9SFzpO","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the any of the shape composing the body contains the given point.</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"L84nJwTs5B44nphWYVpQe","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all shapes of the physic body\n mySprite.body.forEach((shape) => {\n    shape.doSomething();\n });\n mySprite.body.forEach((shape, index) => { ... });\n mySprite.body.forEach((shape, index, array) => { ... });\n mySprite.body.forEach((shape, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per body shape element. <br>\nthe callback function is invoked with ...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"JPxsFLFGMvNCGaZ3wt4Ld","name":"fromJSON","brief":"","examples":[{"caption":"","code":"\n // define the body based on the banana shape\n this.body.fromJSON(me.loader.getJSON(\"shapesdef\").banana);\n // or ...\n this.body.fromJSON(me.loader.getJSON(\"shapesdef\"), \"banana\");\n"}],"scope":"instance","see":["https://www.codeandweb.com/physicseditor"],"type":"MethodDoc","description":"<p>add collision mesh based on a JSON object\n(this will also apply any physic properties defined in the given JSON file)</p>","params":[{"identifier":"json","optional":false,"description":"<p>a JSON object as exported from a Physics Editor tool</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"id","optional":true,"description":"<p>an optional shape identifier within the given the json object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>how many shapes were added to the body</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"u2H-1S2mMIkkPpGTO33o2","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the AABB bounding box for this body</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"ddkLg_m6tZGPOhQND6y1-","name":"getShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the collision shape at the given index</p>","params":[{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object at the specified index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>shape a shape object if defined</p>","dataType":{"tokens":[{"value":"Polygon | Line | Ellipse","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3"}}]},{"id":"YZw6TfCr5GlcwrqixXLR7","name":"removeShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>remove the specified shape from the body shape list</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object</p>","dataType":{"tokens":[{"value":"Polygon | Line | Ellipse","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jGc0_KHtWTl9lj2yLF2qd","name":"removeShapeAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>remove the shape at the given index from the body shape list</p>","params":[{"identifier":"index","optional":false,"description":"<p>the shape object at the specified index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"0kRJLOAvsulKe3u_zeUUe","name":"respondToCollision","brief":"","scope":"instance","type":"MethodDoc","description":"<p>the built-in function to solve the collision response</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object (see {@link collision.ResponseObject})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"WTpMe-vHWBetrK4GR3wl7","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this body (counter-clockwise) by the specified angle (in radians).\nUnless specified the body will be rotated around...","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"default":"Body.getBounds().center","description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}]},{"id":"7yiJBkECRko1KIejb4pSk","name":"setCollisionMask","brief":"","examples":[{"caption":"","code":"\n // filter collision detection with collision shapes, enemies and collectables\n body.setCollisionMask(me.collision.types.WORLD_SHAPE | me.collision.types.ENEMY_OBJECT | me.collision.types.COLLECTABLE_OBJECT);\n ...\n // disable collision detection with all other objects\n body.setCollisionMask(me.collision.types.NO_OBJECT);\n"}],"scope":"instance","see":["collision.types"],"type":"MethodDoc","description":"<p>By default all physic bodies are able to collide with all other bodies, <br>\nbut it's also possible to specify 'collision ...","params":[{"identifier":"bitmask ","optional":true,"default":" collision.types.ALL_OBJECT","description":"<p>the collision mask</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lsS0ONNHaFKMu72yjl1Ki","name":"setCollisionType","brief":"","examples":[{"caption":"","code":"\n // set the body collision type\n body.collisionType = me.collision.types.PLAYER_OBJECT;\n"}],"scope":"instance","see":["collision.types"],"type":"MethodDoc","description":"<p>define the collision type of the body for collision filtering</p>","params":[{"identifier":"type","optional":false,"description":"<p>the collision type</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"mf_po92KVGUUdvr0dCtgz","name":"setStatic","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body as a static body\nstatic body do not move automatically and do not check againt collision with others</p>","params":[{"identifier":"isStatic","optional":true,"default":"true","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"z-XfjqG6W1LCrFfiYzmUP","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body vertices to the given one</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points defining a convex hull</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object for which to set the vertices</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"true","description":"<p>either to reset the body definition before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"8Inuxmj5erHTt7-HM3wT4","name":"setFriction","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>set the body default friction</p>","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>horizontal friction</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>vertical friction</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wiOnjYK2QnJcwRUYhyLT5","name":"setMaxVelocity","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>cap the body velocity (body.maxVel property) to the specified value<br></p>","params":[{"identifier":"x","optional":false,"description":"<p>max velocity on x axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>max velocity on y axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"mQ0VeQiH4316oZGeo-3mM","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>Updates the parent's position as well as computes the new body's velocity based\non the values of force/friction/gravity.  ...","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if resulting velocity is different than 0</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"x3VfqWqRR5UlTBewm925P","name":"Bounds","brief":"","type":"ClassDoc","description":"<p>a bound object contains methods for creating and manipulating axis-aligned bounding boxes (AABB).</p>","members":[{"id":"oTtXL7EzXe7PJjDN1j_Gc","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"oaVvPfy5zIwg9RbjGb2UF","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"z0PtqFvOb8JwLBomQjyKO","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"ziW-IKkluS3mf7-xVdI4W","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"Z8ArjIXhoRED0d24Fdtem","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"hJnuPbNMiokemIzT-zMqH","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"wDfosbwVI60EDS4VDwr9D","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"sFqXW4g9pc2ThR0zDUYGr","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"MjK1pzR9fHMlVycUOxrdu","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"uYVbH4c4MyGZtPAItTAAJ","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"jiPU8S6Ei5Abpe8z3_S85","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"FAvfPkwt9bGcVdjOlGcb9","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"A5gDHt1TG4NuCL71e76sA","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"iMs3UcO6az5Um-tV1o9_9","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"9atIWCackpFUHWfHyYxtp","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"eqBV2UN1SAyglmVHJikuk","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"8NCo5dbXVEc4FlmNrAp_5","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"EBxO-f8ezZunQCJxev2tQ","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"vertices","optional":true,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"A7a39h_Fj8dLcM1rImKwd","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"E7hCBcadsnoxx-BrGwg57","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TkP-SiK-8zsO9uDGCB0-J","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"se1FUkZ2f-H9OOEartNam","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"GjuGeuA7rX9-t350-JqIh","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"8Ws20J8rKRaTxyzo8lbu7","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"CEV8DjB-d_DH0QDxVX18d","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"iGvScm_zwOuTctxK5t4zi","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"xr3COpUxbS8ItvPRyML2h","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"glphcQyY2-RAOj291LN7w","name":"shift","brief":"","type":"MethodDoc","description":"<p>Shifts the bounds to the given position vector.</p>","params":[{"identifier":"position","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"xWePuA2sETL9TZzo8krju","name":"translate","brief":"","type":"MethodDoc","description":"<p>Translates the bounds by the given vector.</p>","params":[{"identifier":"vector","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"DWEOhFdMiq-zTPYstLH_Y","name":"Camera2d","brief":"","type":"ClassDoc","description":"<p>a 2D orthographic camera</p>","extends":["Renderable"],"members":[{"id":"0MKU2TBGlTgc5ehgi1uZv","name":"AXIS","brief":"","readonly":true,"type":"EnumDoc","description":"<p>Axis definition</p>","members":[{"id":"3s3f19pzBXx_Rmn1hohGn","name":"BOTH","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>both axis</p>"},{"id":"cNVN5ooHstbTX1IaiRwKE","name":"HORIZONTAL","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>horizontal axis only</p>"},{"id":"jm6WRRJnB3k0QazNAXLko","name":"NONE","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>no axis</p>"},{"id":"63YPPbVpONmhO3oWDkUaP","name":"VERTICAL","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>vertical axis only</p>"}]},{"id":"iKkNC77VKKqjrPtd7KBHO","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"FHCMfdFdI3fogX4GJWMRo","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"0CKUJyMaUatS03FOg7uK0","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"DI-on3mx7pD21fdahHTdo","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"byuLVjU-LYyCWLH4wGhVT","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"PoWOjYggrhDw7RmGM7p01","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"NViowj_l6CZIeAsWJfDcX","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"7I6Uo6BOsXVN-Gos_sf5k","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"B2ntvPr0Ir14nH6TcQTE8","name":"bounds","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Camera bounds</p>"},{"id":"tG7LgIENC1SRzuOhw9fc5","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"3Fga9sb6Q4Nby5_mOBt_9","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"1BjGinM2TvJrtTZC7AjOR","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"Tox3ymi5Q6XMVSIVxlyor","name":"damping","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Camera damping for smooth transition [0 .. 1].\n1 being the maximum value and will snap the camera to the target position</p>"},{"id":"__cu51_P58Rv2e72uYxcN","name":"far","brief":"","access":"public","defaultValue":"1000","scope":"instance","type":"PropertyDoc","description":"<p>the furthest point relative to the camera.</p>"},{"id":"9DmwnII3bpxxNA87E_wle","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"C4EMCNS1AjN3zgbMRhwyR","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"e09rEv0fnfE2UCkt1c2ge","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"ykeaERoaBSUbYbQkbTQJs","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"Qn7HnnH4MJBIMgj2Kngrm","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"NcP_eX5SFWRjMDqtT_U7f","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"dD7sZJ006PPtpT7kHOXH6","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"SQ-5GPNZF2vCnnNhk9NtR","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"Zbf_DO3SjoUlTLKZnFyVg","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"FxHFuduTngdQhCJoXN1k8","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"UIo9KbhIL2sAgaNww-S_0","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"6I5kvFSH4DizkkWHwnRQV","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"y-q7LjLPXDlSia_mwZxx4","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"5uFoP3Tz_KKx4i1BBRUrX","name":"near","brief":"","access":"public","defaultValue":"-1000","scope":"instance","type":"PropertyDoc","description":"<p>the closest point relative to the camera</p>"},{"id":"u-zaUJElkMepTkx7yrvg7","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"sN-Nc2qEFrSJM1H11z1VI","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"ghA7AWJUwNl2Cd_a8h1-4","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"WVYR7K6105wfeNrzfLT_Q","name":"projectionMatrix","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the default camera projection matrix\n(2d cameras use an orthographic projection by default).</p>"},{"id":"9nJrDjPDuVuiNCgOl2eoG","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"N58_NzIjQ2qmc9D_t_uAo","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"fCrvDdGJr3aNWFIxJdJHL","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"Ehbu15QkxBUAYXk-TNuoc","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"H_WlYlRwwK0IG3BCvWlVf","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"GRoc1nMGx7pOFwyhx8Ai4","name":"smoothFollow","brief":"","access":"private","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>enable or disable damping</p>"},{"id":"t5bCuy6xk2upIrOFgx1fa","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"0AWPE9jff65DXg2OzNyzN","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"mwsUDWA568d3jWVd6fYZp","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"esytolyYRCl1quJ5-COPK","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"minX","optional":false,"description":"<p>start x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"description":"<p>start y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"description":"<p>end x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"description":"<p>end y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zD2LigDJujQRxqgsqc4iO","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"mb9AzZ9PmgpBLsim5QRkI","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"RV8gr2QSjJ4E8rFswnMgg","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"DGZrye_Wr4Y3ztKCaclfH","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZcyzvjJOfj79ZGRasfqjU","name":"fadeIn","brief":"","examples":[{"caption":"","code":"\n // flash the camera to white for 75ms\n me.game.viewport.fadeIn(\"#FFFFFF\", 75);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>fadeIn effect <p>\nfade to the specified color</p>","params":[{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"8zkhsLh1D7oqzOXQh7lwj","name":"fadeOut","brief":"","examples":[{"caption":"","code":"\n // fade the camera to white upon dying, reload the level, and then fade out back\n me.game.viewport.fadeIn(\"#fff\", 150, function() {\n     me.audio.play(\"die\", false);\n     me.level.reload();\n     me.game.viewport.fadeOut(\"#fff\", 150);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>fadeOut(flash) effect<p>\nscreen is filled with the specified color and slowly goes back to normal</p>","params":[{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"0nrYRXGkPGkTv_YwDMpEN","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ztfnjsiRYdF-_4hLHl-UH","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"FedQMh6M3FhWTDCue0gH6","name":"focusOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the camera position around the specified object</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable to focus the camera on</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"_Zjc_4vJ25wSQuuXyDF6u","name":"follow","brief":"","examples":[{"caption":"","code":"\n // set the camera to follow this renderable on both axis, and enable damping\n me.game.viewport.follow(this, me.game.viewport.AXIS.BOTH, 0.1);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the camera to follow the specified renderable. <br>\n(this will put the camera center around the given target)</p>","params":[{"identifier":"target","optional":false,"description":"<p>renderable or position vector to follow</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"axis","optional":true,"default":"me.game.viewport.AXIS.BOTH","description":"<p>Which axis to follow (see {@link Camera2d.AXIS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"damping","optional":true,"default":"1","description":"<p>default damping value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"dLvByfeqd-Ebf6Re8rN8x","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"WHeh6Bgro679OOb1k6DrL","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"xr0aRkLNSd3xbUd691Vw0","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"NO_D1w0XoB6Cx1MEEY20K","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gUpJ1uTyZbP41-BigUDxD","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tbctoJ48NypxhKI4S83-U","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MYttA5Xsu4GRsTDUOvoW9","name":"isVisible","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the specified renderable is in the camera</p>","params":[{"identifier":"obj","optional":false,"description":"<p>to be checked against</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"floating ","optional":true,"default":" obj.floating","description":"<p>if visibility check should be done against screen coordinates</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-j6NKd7PfpdaJk7Ok_kqt","name":"localToWorld","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the given &quot;local&quot; (screen) coordinates into world coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the\nconverted value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"faHOqFZIgiPzmj4ZQDkpW","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XjPCZlHCJG-Tj9K6m15ML","name":"move","brief":"","examples":[{"caption":"","code":"\n // Move the camera up by four pixels\n me.game.viewport.move(0, -4);\n"}],"scope":"instance","see":["Camera2d.focusOn"],"type":"MethodDoc","description":"<p>move the camera upper-left position by the specified offset.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"EkGKE3goJeEluuq7bJNWH","name":"moveTo","brief":"","scope":"instance","see":["Camera2d.focusOn"],"type":"MethodDoc","description":"<p>move the camera upper-left position to the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-y39tEche8BQnUeS8-KJ0","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jMP-Bxr56gMMx9IyXFX_E","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"k2bh41KnK92sNO2KYxBG_","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8EPsiWl_HgonYqu4Ui6Aj","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_PMwS_zfq5X3asCn_V4Xa","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the camera position to specified coordinates</p>","params":[{"identifier":"x","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Ud1yhAf2VDYtkKeULgBIt","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the camera</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the camera</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the camera</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this camera</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}]},{"id":"U3Gk_J9bWUKZg7hI7GRZN","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Nl46ZQZ-thjiuCpdEzKIS","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"r4xLWrlU4RARZ64b1FQiN","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pj8LKA6WP2eN1WH0Uikca","name":"setBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the camera boundaries (set to the world limit by default).\nthe camera is bound to the given coordinates and cannot mov...","params":[{"identifier":"x","optional":false,"description":"<p>world left limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>world top limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>world width limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>world height limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"uxt8rGMGdFKleecpYsffv","name":"setDeadzone","brief":"","scope":"instance","see":["Camera2d.follow"],"type":"MethodDoc","description":"<p>change the deadzone settings.\nthe &quot;deadzone&quot; defines an area within the current camera in which\nthe followed ren...","params":[{"identifier":"w","optional":false,"description":"<p>deadzone width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>deadzone height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lCw28B502NskiWmtjZ1RW","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"l80WojRmCGFWNNZWwDyqF","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"L_OokcB0RoF1XC3wZYcMN","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"gzuPeoNRZg-jSmFlxjF7e","name":"shake","brief":"","examples":[{"caption":"","code":"\n // shake it baby !\n me.game.viewport.shake(10, 500, me.game.viewport.AXIS.BOTH);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>shake the camera</p>","params":[{"identifier":"intensity","optional":false,"description":"<p>maximum offset that the screen can be moved\nwhile shaking</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"axis","optional":true,"default":"me.game.viewport.AXIS.BOTH","description":"<p>specify on which axis to apply the shake effect (see {@link Camera2d.AXIS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once shaking effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"force","optional":true,"description":"<p>if true this will override the current effect</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"RC4wlYkh0-WUaTlkAUQIZ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"MA5OdJWj63zRShmk5HP2E","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"2w8pC8Z1HnSVYYx4_OvJ7","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-fcESpgwZJI5bdjB7c6zz","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OsBlPtGk3Dqc-ZOkXy6uQ","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"FqkZ3OS2nnAokyl27P_EL","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qQ3TuWsrZyBGntIt9mD8N","name":"unfollow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>unfollow the current target</p>","params":[],"returns":[]},{"id":"CaHpHN7uV1ISJ1ryWLotN","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"n1IvcmkxCXb3XoyskW1Xp","name":"worldToLocal","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the given world coordinates into &quot;local&quot; (screen) coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the\nconverted value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"2er3UQm6UmLEfM94redLB","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"4f3mCsKkcprTpUyn3YvZ4","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"DL6z91a3YgejjDBU-IEnu","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"1YkV7oxHjKeMKrZRoJI0_","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CmMNusagtDIDjKe09i2W-","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"K22zcfngLbcS3BWz5GVcB","name":"CanvasRenderer","brief":"","type":"ClassDoc","description":"<p>a canvas renderer object</p>","extends":["Renderer"],"members":[{"id":"3eqjGV66ZPVnFW3f9GzeO","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"l6NJVSeGWeDhrCuUFP2iW","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"TGv91qOtTgSr3CWwPScUr","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"2h3HY4t3l6azUZXGgc9hD","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"bVFMPiv8erQDm3zfIV0jp","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the main framebuffer with the given color</p>","params":[{"identifier":"color","optional":true,"default":"\"#000000\"","description":"<p>CSS color.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"opaque","optional":true,"default":"false","description":"<p>Allow transparency [default] or clear the surface completely [true]</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"e6nehU1H14nldrLAYTKKy","name":"clearMask","brief":"","scope":"instance","see":["CanvasRenderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"fZq6BP1-K-aa7YcAnYfKw","name":"clearRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Erase the pixels in the given rectangular area by setting them to transparent black (rgba(0,0,0,0)).</p>","params":[{"identifier":"x","optional":false,"description":"<p>x axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>The rectangle's width.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The rectangle's height.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_1JMOL8AxeM5mFp2hCcc_","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"mWzBx1IzVFQCwHlJSQWSD","name":"clipRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clip the given region from the original canvas. Once a region is clipped,\nall future drawing will be limited to the clippe...","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vMsGvhb9KQO8W4fdzCh8f","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel renderering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.textureSeamFix","optional":true,"default":"true","description":"<p>enable the texture seam fix when rendering Tile when antiAlias is off for the canvasRenderer</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oEIe8LZkk-xtNlT81mc5f","name":"createPattern","brief":"","examples":[{"caption":"","code":"\n var tileable   = renderer.createPattern(image, \"repeat\");\n var horizontal = renderer.createPattern(image, \"repeat-x\");\n var vertical   = renderer.createPattern(image, \"repeat-y\");\n var basic      = renderer.createPattern(image, \"no-repeat\");\n"}],"scope":"instance","see":["ImageLayer#repeat"],"type":"MethodDoc","description":"<p>Create a pattern with the specified repetition</p>","params":[{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":false,"description":"<p>Define how the pattern should be repeated</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasPattern","kind":"canonical"},{"value":"CanvasPattern","kind":"canonical"}],"template":"%1"}}]},{"id":"O0emnxrOBNtaq0ZFTe0An","name":"drawImage","brief":"","examples":[{"caption":"","code":"\n // Position the image on the canvas:\n renderer.drawImage(image, dx, dy);\n // Position the image on the canvas, and specify width and height of the image:\n renderer.drawImage(image, dx, dy, dWidth, dHeight);\n // Clip the image and position the clipped part on the canvas:\n renderer.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Draw an image onto the main using the canvas api</p>","params":[{"identifier":"image","optional":false,"description":"<p>An element to draw into the context. The specification permits any canvas image source (CanvasImageSource), specifically, ...","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"sx","optional":false,"description":"<p>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sy","optional":false,"description":"<p>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sw","optional":false,"description":"<p>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rect...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sh","optional":false,"description":"<p>The height of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dx","optional":false,"description":"<p>The X coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dy","optional":false,"description":"<p>The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dw","optional":false,"description":"<p>The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dh","optional":false,"description":"<p>The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the imag...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"SEwEUnYb1UAaCRcD15szC","name":"drawPattern","brief":"","scope":"instance","see":["CanvasRenderer#createPattern"],"type":"MethodDoc","description":"<p>Draw a pattern within the given rectangle.</p>","params":[{"identifier":"pattern","optional":false,"description":"<p>Pattern object</p>","dataType":{"tokens":[{"value":"CanvasPattern","kind":"canonical"},{"value":"CanvasPattern","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"8xewVK-ecjqwayPlYrLa-","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"sssHgCMLlqc0lFUrcp8ad","name":"fillArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"QQtv4WeoudKxGcbHjVPrR","name":"fillEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"WbuR--iSJElwZ5Ozs2ASg","name":"fillLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"mfFJXwZqbvqvJcwBl34Pb","name":"fillPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill the given me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"K5Nst3RuNF9r9ipNxMIOZ","name":"fillRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"BnXe00hMmLGl97GbuwEnK","name":"fillRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a rounded filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bs4Bhvwxsqy_EkISMBO43","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>render the main framebuffer on screen</p>","params":[],"returns":[]},{"id":"5a5wAPC60wRYyGICa9qY-","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"ilAEvwG1HY4XjjlEoQt06","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"SSVKgc9zxlB0BfEiReF5E","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"_pYZS3ktwulYHT-Vrg8WA","name":"getContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system 2d Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"-btfldGA5lyZOJKFZfBVG","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"k4n64k3OPCU5krG3P4wEj","name":"getGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the global alpha</p>","params":[],"returns":[{"description":"<p>global alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Guncupdpvri6pUU9BawkY","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qEnDJuL1TYPiVSllRqMk_","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"OPbCxo-a3F8l4oY28lBrF","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding 2d Context<br>\n(will return buffered context if double buffering is ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"upYkQxacWZWk4jZntBXYX","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"zYK0Apg0BFgJqm-RFA6j0","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"XnPCnveumMygU8go9u2UB","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xPJCL46WRsRC9UwOHar7N","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"pveanLfVCle2JFVaDq2S7","name":"resetTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the canvas transform to identity</p>","params":[],"returns":[]},{"id":"xfiXuGsgiuJLgjdANPojd","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wpcwqWj7GSCBldkVIZ_se","name":"restore","brief":"","scope":"instance","type":"MethodDoc","description":"<p>restores the canvas context</p>","params":[],"returns":[]},{"id":"8ctNHsk4qsXpIWDxybaqL","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotates the canvas context</p>","params":[{"identifier":"angle","optional":false,"description":"<p>in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"w9TvXcrK47psGymIdQ8wL","name":"save","brief":"","scope":"instance","type":"MethodDoc","description":"<p>save the canvas context</p>","params":[],"returns":[]},{"id":"MMPVa7NtJlf1y7HPhrUEc","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scales the canvas context</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"xkDAXCvqCM2x0qazrWtRT","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"S9XmM5Py40jbNeSrpDraC","name":"setBlendMode","brief":"","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"type":"MethodDoc","description":"<p>set a blend mode for the given context. <br>\nSupported blend mode between Canvas and WebGL remderer : <br></p>\n<ul>\n<li>&q...","params":[{"identifier":"mode","optional":true,"default":"\"normal\"","description":"<p>blend mode : &quot;normal&quot;, &quot;multiply&quot;, &quot;lighter, &quot;additive&quot;, &quot;screen&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"m_gyPq74GYBOqrJTF7TCi","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the current fill &amp; stroke style color.\nBy default, or upon reset, the value is set to #000000.</p>","params":[{"identifier":"color","optional":false,"description":"<p>css color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"1WOTaazwjaprB_jY5a3Ge","name":"setGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the global alpha</p>","params":[{"identifier":"alpha","optional":false,"description":"<p>0.0 to 1.0 values accepted.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"KGsshf7PAneKqhHfcfXoh","name":"setLineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the line width on the context</p>","params":[{"identifier":"width","optional":false,"description":"<p>Line width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"0M-kTDDBA2mZfGVAqTch5","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>the shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"b-ni57-ZIEL2CNEmsfsGz","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"4YIwKZy7ecZpl55ubAh3s","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"pTebgxGKIaNazYI20rVlb","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset (overrides) the renderer transformation matrix to the\nidentity one, and then apply the given transformation matrix.</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Zniy6XHCppnfk6CzuaipX","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"k31FLz-l2zvq2sTC3_MpI","name":"strokeArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Fuywe6U9U5El_RIrwbdAC","name":"strokeEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"vIyx6L0Yap14C8HmFCYgx","name":"strokeLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5I63BLTAn6j1kv-8uwabi","name":"strokePolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke the given me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"TjDY7VjPAPGxkRYOU02ab","name":"strokeRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"sIT4cnaIAHR41aiVq3ANm","name":"strokeRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rounded rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Ua-HiLeE71i54oXHVmmk8","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"z-S07WRaYHRh28cfZMfq3","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply given matrix into the renderer tranformation matrix</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"OhqLOgFg6yJZPtrMNW3ix","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the context to the given position</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"hv8nXD_2n1hSC5adgcMGy","name":"CanvasTexture","brief":"<p>Creates a Canvas Texture of the given size</p>","type":"ClassDoc","members":[{"id":"W4zzzrdUyXkOQPkQn4L1s","name":"canvas","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>the canvas created for this CanvasTexture</p>"},{"id":"M0Ts3sGU_4Omhh_-EIbEe","name":"context","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>the rendering context of this CanvasTexture</p>"},{"id":"qrExYC1o5y-IC_MDlUo4y","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The height of this canvas texture in pixels</p>"},{"id":"5Dhl-w7qoNNI_EjoK_yzh","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The width of this canvas texture in pixels</p>"},{"id":"Koi575P7QauSb9t2jOBIQ","name":"clear","brief":"<p>Clears the content of the canvas texture</p>","scope":"instance","type":"MethodDoc","params":[],"returns":[]},{"id":"Gz7EVkLhP5G0vMaqC_EJe","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"width","optional":false,"description":"<p>the desired width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the desired height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"attributes","optional":false,"description":"<p>The attributes to create both the canvas and 2d context</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"attributes.offscreenCanvas","optional":true,"default":"false","description":"<p>will create an offscreenCanvas if true instead of a standard canvas</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"attributes.willReadFrequently","optional":true,"default":"false","description":"<p>Indicates whether or not a lot of read-back operations are planned</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"CKOMGzty3CgwEOHwak5du","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Resizes the canvas texture to the given width and height.</p>","params":[{"identifier":"width","optional":false,"description":"<p>the desired width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the desired height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"Sml6ox6VSZKg7_K6yXcnt","name":"Collectable","brief":"","type":"ClassDoc","description":"<p>a basic collectable helper class for immovable object (e.g. a coin)</p>","extends":["Sprite"],"members":[{"id":"QF4Y7tQyRE-9tIFiyjgum","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"UqBtjFdh7XDf8pfTe-yNi","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"4FYvt3aefbaK6a25WcIAS","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"at-NlgYNaN5TiALCe6z3X","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"WY5r8tuDEwwQXVU7oRO5x","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"JuWIfxuIVQna8uy4_nKJB","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"wW675RXOv3guozI7Agm49","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"KW_5RR81VWuY0BzvXZ571","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"elWSRBKy5bXT0QsY12vUU","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"DvUv2LH6S4VZVyMGlMG6J","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"NkVS8hNe2oYxIqkTAQYUJ","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"svd1hG5ekQ4XGXyKgNcys","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"JtJBhnQzp0BsvTu7AMoHn","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"zCPb63Ibb4nd1JT00DZVp","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"GIQ_BZpIK1veLjRjWPgB5","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"Dmj2FTBu5qxunddx34-zu","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"vKpTTLAon-CPxrH-3xljP","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"itiA5obo1dxRzhP588oqc","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"S18RmmGQQvPbh7BWsYaqu","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"gwWMbCc849D2NKGeYRz0B","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"UgRHI4aOBWLjQN2TgQseY","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"T3JaUsIt0WmG8MEXoaPmK","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"bCf57ecVJeEIqNBLc8b2U","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"77fUoPf5427TuugK4qeCW","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"mVZKRYjBnwHjsGEACmAVq","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"pagIdXCoZfu4o8FHbIMxr","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"SsayptvD7OheaRrdJAtKj","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"VKN6KcfBosrM0jb0hbiAS","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"NnxmNcG-uAJhw-UPsrtEn","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"2PLsM6JnFjfaLUriGFgyq","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"rJNzdz4cyJRwqX_wDSHBS","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"kVnK9Q17lhgCA7yFWwN-Z","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"EPhIfIBNFlh_BCiKWRkMG","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"5biPWAExrAEz2mNR1H8YM","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"f_WPMOl4wwI3oL3XNFTCn","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"6mXZpfQNUiAPiGURAkmkh","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"QhZDsysc8HEOQzLOS494C","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"78-p_3xHNs3p9PdhTGulw","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"aN-FEZwJ_RyIAvxfVciOQ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"dCtIbStFzD_uK1SSBkCCF","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"yfm5PwCIIdMHrieJa_5SM","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the collectable</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the collectable</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>See {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"fRkaG6a7iDe62G91f1uVJ","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"aMeuU8w3kbRKwsu_xz8sg","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"o0lTb_jh8zufPnjEMP16W","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"cWop--hRWphZnEjwp0brQ","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wpCo1LLBAGFxs-vORzmCm","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"cVhWhsIB70X8KGXH8z6cB","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"iyniGBXS5fz87NlfBzMWR","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VWaaMb7oh8HJ3YicamV7K","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"w4jf3YF-i0iNr2_7I_eQe","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"IsTKMLJVgNT1S0C-05TAK","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"35UrySZ6tR5wS5c4sv5tp","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"q-3qRxgxxv2LN4m3Bp2eA","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ZpM63dCKBECtjc5ft7HEv","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-KGB7R0-wiMYUshHboNhq","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"khzGsLFRB3jBp7BKrqydo","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZcXM_P0MzF-XElTbu97oT","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3h06faUIrdjwPhQtgLQ30","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9W7fUVZR4FKZ33AqGek9o","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JwbwvQIu3OeSBCNUYtrVT","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"wEwbakRDll2AYvtGMagod","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"eXlfG6i9ZInyRVe1uylUc","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jCI5gYFLHlwAzOWju9IYW","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"03bIr2WHhjOPvU9Qa3Wsd","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"3Z8CPyCX8znmbZcj6_equ","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lbJY0j-Frfm5j4yX6Qdu2","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"FUr6ZFJSS4LnJ1j6hu06x","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"iNxjSMSXPxnIXOAZMY4a2","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"c6cC0CSwyZeo1oAliwUwR","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"9NICYlrOU63rFi4xJ5pWF","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jdFuDAVZMZqte59pcZ2Dz","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"aTGwjzSQyLCWPw-911_7t","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Q4em6c-OujFjJ0kNXF5xe","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jL8QcaNtPXfnIf9YEP5xv","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"4AK36cJ_8COwEkdjZd0l4","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OHbiJcR-gORapxgmys5UB","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"C_pI-9dteWWdJyZoZzZb5","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ma1B312epqtg1S0KOVx1Q","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"--lyQM2v4xK-WQJBgQSVT","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zFFj1tTUO7BWBFqDrMi45","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"2K7TZmHnRmLkDnsde21oI","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"3W7wkSS7FkMkrFukm4E5o","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"yNZzx3bm6wV1i-U28cOq8","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Qzy9WST_jXr2lZQ-2hGQn","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"x0eUFtM8xX4Ydrgo-T2dC","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"1qFD3heh9CqkWXKLy4vHX","name":"Color","brief":"","type":"ClassDoc","description":"<p>A color manipulation object.</p>","members":[{"id":"j_PJfm6U57y8cLzLJSysu","name":"alpha","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Alpha Component [0.0 .. 1.0]</p>"},{"id":"Qlg0IHcBEoVnuSUzOFMxr","name":"b","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Blue Component [0 .. 255]</p>"},{"id":"GZsj1scWdLaVJ7JZf54Y7","name":"g","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Green Component [0 .. 255]</p>"},{"id":"_VRG1D1sBu8T1uSvye9dY","name":"r","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Red Component [0 .. 255]</p>"},{"id":"EEP-AGVbQpbJpJka2J1lz","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Blend this color with the given one using addition.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"fO1yWSGpXgVm30SbOlIpp","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Create a new copy of this color object.</p>","params":[],"returns":[{"description":"<p>Reference to the newly cloned object</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"ZehhQ6FqTekELhgB_qKxf","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"r","optional":true,"default":"0","description":"<p>red component or array of color components</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","description":"<p>green component</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"default":"0","description":"<p>blue component</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HW3dqyMR1C4cH-EcNHjTI","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy a color object or CSS color into this one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"IENTDTmiCxsj3-PYi7eTs","name":"darken","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Darken this color value by 0..1</p>","params":[{"identifier":"scale","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"QWoaZsF0mUlSkKxLIlbST","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return true if the r,g,b,a values of this color are equal with the\ngiven one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"d62B11Fb50882-O2GLYWz","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this color and the given one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>with alpha = 0 being this color, and alpha = 1 being the given one.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"J8ugFn1W0jvQBPB4686Mt","name":"lighten","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Lighten this color value by 0..1</p>","params":[{"identifier":"scale","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"jJ7WZmxIQl2gG1Vs5S1DL","name":"parseCSS","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse a CSS color string and set this color to the corresponding\nr,g,b values</p>","params":[{"identifier":"cssColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"Q6c14MT57sQfEes1WG51b","name":"parseHex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse a Hex color (&quot;#RGB&quot;, &quot;#RGBA&quot; or &quot;#RRGGBB&quot;, &quot;#RRGGBBAA&quot; format) and set this ...","params":[{"identifier":"hexColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"argb ","optional":true,"default":" false","description":"<p>true if format is #ARGB, or #AARRGGBB (as opposed to #RGBA or #RGGBBAA)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"I5_wK6M2efJ50ckR58a3F","name":"parseRGB","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse an RGB or RGBA CSS color string</p>","params":[{"identifier":"rgbColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"xd-3ltZxHD3Ogyt54lYCD","name":"random","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Generate random r,g,b values for this color object</p>","params":[{"identifier":"min","optional":true,"default":"0","description":"<p>minimum value for the random range</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":true,"default":"255","description":"<p>maxmium value for the random range</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"1Kj2kuo7f3xNv2gA_OJKX","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set this color to the specified value.</p>","params":[{"identifier":"r","optional":false,"description":"<p>red component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":false,"description":"<p>green component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":false,"description":"<p>blue component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"vkUXHCWvTaIeCZ2nlz8fH","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Uv9Qd2JNpL4GlZY3cXWwR","name":"toHex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;#RRGGBB&quot; format</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"_rO2JVdFoJP9nQfXxcecV","name":"toHex8","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;#RRGGBBAA&quot; format</p>","params":[{"identifier":"alpha","optional":false}],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"xI1pI1hR5V7LmNT-XwxA-","name":"toRGB","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;rgb(R,G,B)&quot; format</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"2mPH9UWxHy5bQrTJv9ros","name":"toRGBA","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;rgba(R,G,B,A)&quot; format</p>","params":[{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"P-ZGA92iQIuAX195hemxT","name":"toUint32","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Pack this color into a Uint32 ARGB representation</p>","params":[{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"7G2uJyjaiGPZ6qp_6BIJs","name":"ColorLayer","brief":"","type":"ClassDoc","description":"<p>a generic Color Layer Object.  Fills the entire Canvas with the color not just the container the object belongs to.</p>","extends":["Renderable"],"members":[{"id":"7paWlQTfxz3KwmLnY1Lw2","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"hmFRfaKfK6JKTBg9YdzIe","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"FgKIa2vHJRB-JAxONYOYj","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"9W8WE6lrk-HhQmf5Fw0nm","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"DyEzsGl2JT9GLbfHBPc9M","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"rxlmp66K6-3xzkwfEx1Xj","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"M_-9ECTx8TxJE3vgD-g2M","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"x3_76HrI3k3UbUPwIKX_t","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"IqjpS-TIVE3P4Vqb7gMTw","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"bFgC7ZvJGN57dxo3H5X_T","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"liaV4GyON5MeTQQicuUus","name":"color","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the layer color component</p>"},{"id":"b_2_MJOjSvkwyNk-jD4Eu","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"94j4Ov3pTsib9znDHCQ3x","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"foXhesHaqJLhP3RVfTxaw","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"UTdMCM2hrWciL3IM0zkLY","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"cNvrVpbBeR7sCTx1j-t_p","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"_66ubM4oVo5HRbo7fk08Y","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"UR6edeWaN2fA5_WskN36m","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"SU_4ANY2msYheK6nVdFR2","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"SrOok9VvkHzzqpvIkGsid","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"ohiu-hQ-dVli57pL5B56c","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"TwczjI9hKAtR8dk6v-vec","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"88xChDdeSnRYZcIPhuKo-","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"7w9fIMpFxhQlggStVtnKQ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"RKPRGG90jq0mAv5ABN_JF","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"ZAWg0WvnuLBQRfNwcq4CF","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"S4Qu02tfE3NoKpmEzB0qn","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"U_AvIwBjMMFJ2L3tbvg34","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"deHIJwSr84-vlRbX7_D2_","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"78mSUpBrQI1Wyrxny5Hgz","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"ikehlgNh8W0MgCu3bdhkl","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"IqxrD-uv2XGfCitNhwYRW","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"psjgx1-QRy1hpyKOIK0t3","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"FFtQQ7XIGAA-KoR_evcrZ","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"KdvE2XlnEIvoW2HrlXi-Y","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"uNH-YnUSIeT9Gjjo_Brii","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"8Wt2SaIS41VgsGnwIqlof","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"name","optional":false,"description":"<p>Layer name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"color","optional":false,"description":"<p>CSS color</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"z ","optional":true,"default":" 0","description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-Md6v7_mY2B1cOYHNUzaC","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lDltFegeoTfoyrKMMnH4k","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"3SlLVnzOUgecIPHHYQEBJ","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"u3ILaX8Yw3N76uVfxWFq2","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PAHvrY_dUWNbvdjY5KpLd","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9wPExnaixbU22LZDCk9TP","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"nfL8NxVTY5lcyNj96e2iv","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"zKl7Hd9VxTkdZuTpeib3v","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"kZAyTZPKPY4awulIj5TUN","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"9V9D3as_QIidz2aTBIJG8","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ygay22sKZSjjf_es_BTwk","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tpc7riz6uC6SnVFYlwah8","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"F3h1feGWjBOZ4_IJGA-Xg","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UNH1rnJ6M23RdrBRFUbyB","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ctLn18HXamrHbNVq8O4mF","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"ou81aWhf2mTSgpkq_xKsJ","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"49JOzNM1ErjhCGZZbdJhl","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"2NtDOeUV2Ki-K_0lJtTfl","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"R1mrMB5bBS11y6ESxYO5v","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cpne7S925diDSTs-xhdye","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"hOja_-iwl3vGOG7XGR3KK","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9_-ioW81uDXFLmF9RIH97","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"XdpYxzLZca3upPVm691Nx","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"m4RbC98EI5nY0Fjtft-3d","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ihJZJK6_XRa5ggqR-8X8z","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Qf0bjc3HidyV0Cx6WfNpZ","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8W6JWKENTmDcfbOqqKHJC","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ePgXTxGM6O1QRc3GQ78vi","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_p8GS1QotJXMUX2K8F8oA","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"N1PL858bEvwYSRJRtt-40","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"UtFr9M84AZPvlMAEdPjY0","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HANMiWbHmpLkBMTmozAFC","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"6jN5b5E6zcxY3foSz1eJ4","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"yC_ZQDTUiZwM8BRxirlC1","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"PbIIiZmBohdidkbDV9ASA","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dIVlsyb_OKduQ2_ttK-ja","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"6xVKbRFIRjYFTkvEzwFo1","name":"Container","brief":"","type":"ClassDoc","description":"<p>Container represents a collection of child objects</p>","extends":["Renderable"],"members":[{"id":"RCs7SssrxqtNJdTFcYZY6","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"6XZvkM_AY6UlUcvJEE1zs","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"eJtpurjRd59tY5mC5_T2Z","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"p89evTAP6uH3keJUgsb1E","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"bOxEpTlXiO5Ui0dfMyZtf","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"bV7v0dCtRPxkV6Ln0KwzY","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"HeKnFMTXRamek4fTRnM5R","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"HiMfIJdNvFdkGiUdpK1Fe","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"1od-wzasoG26e2RggD-mZ","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"JKLOhav9y16MMUA-ocWdB","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"cZ4en4n98ky2nBQJun19A","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"KIGDA5a8tQJl6dKxCFDxb","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"WJ9i52xG8Jd19YzOn0D6E","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"w9OuYGxD92H3_AMXa4KKo","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"LhGtQzbQJKQBJtlUnXw1D","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"zC0pwloCXyQwcwqzbKcg1","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"eW2KkSFZmQk3p_6l5rixk","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"VW7knnbTdNlXRETPOoksX","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"Zp_TOw2GKXDepK7gXCs47","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"TfOHPIhyCXRH6UAUj4nRt","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"CDs3D3AYGk-u3qg8UjIN4","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"dpBoyTQvTHgMgLsEAgMEr","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"JoTiI2ET0FuZ3pEOU1EMA","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"o1krYFLKzkHmRG9Sbsacx","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"Q0g242wlPHTehvUaviL9m","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"ideyTc5An2OzYJbdvCKKU","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"u4r73-chrU1CJturcsUsw","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"tQvNbZ1JpWc9F5nHQUPxl","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"XMUbiSSCcgzZNJNoNc9nj","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"sP3aTFC3stAenFrmkGc9o","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"i9VGUCSz20qPx0T_IWjwK","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"ktBWFP0xqmUARgO9cUVpm","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"98WAGwu6ArIvZBtHCN52n","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"_9y0J5NTpJsBeyugKQUlO","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"97lxcrvpTcum7bMV2taRq","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"2Ihlo5JytL2F0yZUAoYG6","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"m6xQk_c3tCuaRkNf67dOt","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"oHxtrtEF6LEZpZ1I5uZ4i","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"Hqgzc6gzHA4H95npmirCe","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"_Bx01hWrq19BLuPx3w2Sq","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"duMVshBQRAl1-WFAu7zBq","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pcT6OpkwWhOSsM9Yw8XdU","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2g_hy89DrBy7qc-m80N3-","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KOkFjbOYSxLcUadQzWOFr","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"up8kLavEDCCU4v08D-6v6","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":true,"default":"game.viewport.width","description":"<p>width of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":true,"default":"game.viewport.height","description":"<p>height of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"x2dO6rIuBGjGN3-8k2Gm0","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WtxBWY3OYCi6nrLB5smqv","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"c9D1ZsNFL7OUnvHEyAmZM","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"teqtp5R6a8WDfmy61LsE-","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jg6O9f18KluzO9V5j-ZnI","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"kkRzk1lNXoT1hj07BferA","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZXpFyg1QnHhr2MV5_lrXz","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"5kJSXIiLkpus3SGFhy4Z7","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"-s3aWJdvAwtPu5jmVU0Xa","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"RuMf1ERPZg6tNJKfCZopr","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RKqu23pP7BMnmHtiGq_N9","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"dutIXWV5rLCpHj6XGa6qD","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"pQQO88qcZAVZSbfpL6KZE","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"etakPZkfb_yotH09sco_1","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"A0VzFfeUEWAE4qXODN_7a","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"nws87FDG1gRXgMfDyVG0k","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"Vns8UkTC7CuNpf4zI4Mms","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"TKeWv-kZmIg1p9Yb-zJk-","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"i_7iEG00_FS7UVx8St7t4","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"oRsEHftTd-bLcF2s5zrOf","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ze2kxjNMalPY0_sGcuidW","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZdheyDt6vj8oEA8mnp9Vf","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"uOuBRPdwgKkfMPbQMaN-D","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"FA3B9CFqVCHn6m5uD6p9z","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"GDqgxjZw53mNzf-Hxseyx","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"3rJTMnynLkUJO324OR7lV","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"qvzefRUjEt29dqb7ZK7ke","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ALovEQj_I5cceptzy9MJk","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"SGqXA3B8KjAHaSnu0aixC","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ib1jmiJOe5mQESh-06Wxb","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"BTSP7BkK4YORse2ylisFm","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yfeYWfZNE9V1aR7RdUqdd","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QcZNyGbcr92_t8pKuspw5","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"VVwv_WgqaPo3yaaVYQETJ","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ospPJFMt2gQv_L7r0MI0p","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the container, removing all childrens, and reseting transforms.</p>","params":[],"returns":[]},{"id":"YPiHSfIIMRDBrVcm8DIgG","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"qTqQ2q6xfKRFAmJmYBwbX","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"B5uHMa2BxjH63T25Q07V-","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"t8JcYT08B15E7DzyYA4VC","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"DzE5B1e7a7TwWyqMsg43-","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"IAZ6aXed_kcHwioRde0fh","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"c9Jt9RVucid2sblinj38g","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Xt3D2EnHGHPofJgp-h6hz","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"eFxeRiJQ1ibpvqnH1hJra","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DWSmIzJChYc_gHbB6YXEV","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"xcfPps4rq5HdGFx7TB7kO","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"DcMUUKQQJKfMVPwzAbY3H","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"mL4TnN0PifG4hHNSFD8QN","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LBUkPJWF3-_6f-U1nKCaE","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zBZBmk1WBwwkPhYP4tTrM","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cqeQMkEPVQRjI_6bvr6p_","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wXSqu3mcGqEegJb1ciMyx","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"5Ymj4cR0lmt2EADaIGuGw","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"xAKVNl8pxZYTaZytFPzob","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"YR7I5jBIkF4rlmG2o-FCh","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Y_PHDdTX19iiTHckR8MIn","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fd_Chz5ZFevhfqrEvqAMm","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yc1V-ANPrfcviLzpC4ehT","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"NNmsDpf4Cq4hs6oByk5AO","name":"Draggable","brief":"","see":["DropTarget"],"type":"ClassDoc","description":"<p>A Draggable base object</p>","extends":["Renderable"],"members":[{"id":"DvTIg6BuvuwDR3LERNecR","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"pv6X8YZ1L9Qfq0MGPaoAv","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"MjUFK1VT5evUJCtUQEl5m","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"bsl8krGdEbFvovL5grtsz","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"w5z1CDwL3gSB0kdDdyk5f","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"Tn4c0wDlTAIO8BlL7qSHK","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"12r6ebZcIehRSAHHAc0CB","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"o6N3rXKNFDElclNJ-2zte","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"EyB_3eponnclqjvuLNoai","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Cl-YzshUEEifxNc_YBl8H","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"2VyCS1RUARKyer_SNA0oh","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"spOlkn86k_HoaAL_eFzGo","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"kRurspoZitx9Rd45b8ZCu","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"gzUrDRx0K8HGYkwOxdvBX","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"O2TlKh_ICOmhtHdrgCuxB","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"vw4d2mqY6Vt5DGehhm4v3","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"XlztjxQ_32k1kK7UKkCs_","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"Lkyu-kVH-6XnnIH9DkFdw","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"lr8kBdNwvUvBXFcvt05lA","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"h9TX8MAVv2DdYsrNQ6HuW","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"wV93xeD8QU9YIhHfcngqu","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"is2xrceBMQ8NCPI8MFROt","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"II4qiGudrWVL_Yp7bmUAJ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"Rc-FNnVWE7nPoaVsZsgVc","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"xz_OgC_VlEqnN-Du3w6G-","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"wt1T1ynzNSsQVJZvCKK3m","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"sGlS8tgL3--3-AxsPxCMT","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"msNOxena0kws2fmfUp6mP","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"gRojLiTBTh7tz5BrmLgxJ","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"N4oF2xsaoX3XPo5mHj1eh","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"PBG8hQVucYCljrorrus39","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"5O014e-DcfxZ5O0JlNohU","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"heBF4ARj3uUSyvYeiUh8j","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dvFA51-wJo3EEC3H-CLdt","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"hCTiplTdk8ZgvKHI6gLdf","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"K06qrJq0z-Fuo9skDIAcI","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>draggable object width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>draggable object height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"fcmwW00Iow_VeEiR63bby","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RoobJN72KJxgBuFI6CKQG","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"BKRyzTtYGqAxTxM3Pmoug","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NK6GCa9ABe8AQYyXNAPZ4","name":"dragEnd","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user stops dragging the entity</p>","params":[],"returns":[{"description":"<p>false if the object stopped being dragged</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cQzhLM92T-UhlaOKejd0M","name":"dragMove","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user drags this entity around</p>","params":[{"identifier":"e","optional":false,"description":"<p>the pointer event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"1i--FXFQ3j7wurEkhw099","name":"dragStart","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user starts dragging the entity</p>","params":[{"identifier":"e","optional":false,"description":"<p>the pointer event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>false if the object is being dragged</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2Oir791xNySnk1YM4xe8Y","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XvEOh7gSYlhfAg9mR2pG9","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"nIyOFiGW3ZITGMkNMvUjc","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"r_rAGFt20BvFtKUKk5Atd","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"fcZgxirPID-ZtrlR86r4q","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"8h6ju6BcMdpwQOwdFrh0C","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"IAZzZHDwjfuT-aLRllYcy","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gb8Ivs9AvrZvYNIFEGdQk","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ihhxqRxoa7nxMqmK4aKCB","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Qj3iYniRWj_mxMD-Q4Dtr","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cuN-i-v_s7dbJgcntDmL5","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CD-W0a8TCqKHEC_sjFff-","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"FCgWOEteeBBcCzzMa_Wmy","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Bm1x0TtFKeLm4Dh57pZTQ","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"3zEJdKrP412fE2Dtd97XS","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"5oStREsjXALD2hpoDdHfm","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"HTROWNsdpmNADbFWDnBjN","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"44YMFTNdb0p58BoRmzBlK","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"fbHi8wr9Qk85akKVCoVl5","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"OiFfdWI-kU-w_DeZlgvFM","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"6n2qpQm7uoIckBY_H3p1Y","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"n8kbdQQ_Uak4zkxZhDqip","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"1Dg-YfLXUCTM2TS1j9pJS","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4kW4OWuR4Lt_CoQVDIIQK","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"EbLovvmufsUXaXcfo9lj3","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"57E9kAu817tugAyBVwHG2","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"KJXvUxW2Z0HLqgp_ZyX2_","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rHJObo9mbz9TSlL68r75y","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"3vtje6zvM40lp8xmRTXs9","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"7x-cU7ECDByCGeOHQkcfd","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"G2RTLCNNftIyTzcmALHRh","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"oIHEt-XnUl9lrb4jQU7o9","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xAjiyBvWRM4jCpcC_YwBu","name":"initEvents","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Initializes the events the modules needs to listen to\nIt translates the pointer events to me.events\nin order to make them ...","params":[],"returns":[]},{"id":"nEeXASgbIqjUpvlvKGhAc","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"_4fBRp7lj1nQljY-YIyDg","name":"DraggableEntity","brief":"","deprecated":"since 10.5.0","see":["Draggable"],"type":"ClassDoc","description":"<p>Used to make a game entity draggable</p>","extends":["Entity"],"members":[{"id":"nJ_Z-qnNB2ncTquOfharX","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"cD6Y4eDtQiNpjvtj5RMda","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"LV1d3PYo8-4nNMJ5AJd3U","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"R3qSbtuGUFoWf1DwZv8hS","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"FGFVB75ZcCwr667thiO0f","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"-QEadx5ms-f4GDuETEAu3","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"Ks7iJPmQiToZsBfqKhD8p","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"l5-6IgqLI8rN6B5YdgfQn","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"QD_6C_mtiwQGS8qflEuPb","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"wvfC05kwoVw2FTFps2ROS","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"qgZ25gLccyhVUOEjWG6wf","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"f1PqR-Js9NeEKjjhs7r9X","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"UZb-WMK6PSjVgCOvlQp84","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"lrrYRe_vjIBHYqpCzunrZ","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"gto1Az-8iWsxJpX6PPPQ2","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"nT3x1rDUR_8VPCnz5HU5G","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"Ca5tF6yGIdxyBm59ZG-9u","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"HNENTw8rOgsxC6YhjU7P0","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"aXlaEnlFATna19nhalTKP","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"NHBMs_3gZWmx50KBEB7qU","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"erYkfM8K4yACmAJ9DB32K","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"suZsGRJ4H9lcS7t9zSCoJ","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"SdAoY6Wj301hdGa04p79J","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"KRuhKeoBLg-DSl2UWeAaX","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"v7Sk6mRwYuQj1hyO7jYjq","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"q1mf0ZeWjAfCzBHgEXWBS","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"yAyfZKZH56rhAntgzWewE","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"B19l0-6s2yaOYyLcYd7g7","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"29viFS-nw1xuaRYHOgUhM","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"xgh9aU0CSp9O5Ixjn2o0F","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"nNWTi_l0APBNrEO6IaaHd","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"lq4UkkWE-brd5zMhQ_Pu2","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"qOkviuDnKqc7aZuQnfQWK","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"eKr8rLC9WK-6K275jFbdO","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"8K5I6wz08UdHWMGbo5hC8","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"m7qkb21zt7C6gqOTD5oAa","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1B0Faa4VzURu-j_gxk2YO","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"YjXmzQIk-_a2GTGJxCCr4","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"jGKhl2uomg9vpGU0p2vJP","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties (see {@link Entity})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"KbTW8Iqk3Wxv03tTh-uXR","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"e4qisa56s_LyVktSUGwRL","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"383y4LOCPeCNT98W8D9Nt","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qqllgtfhApS5snIFAwY0g","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MXeIoFBh__WKpnzLHhnDA","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"vald391F_H1x6nAf75UXZ","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6EVxhn7jsK0UuepnmZWJr","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"KVc1qz7MQxsUhaRK5Q3iv","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"1TwHUvDJU1agUJsG4Yc49","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"UedG-BqDToLJDlJl3AERw","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"C8jjOpbnDnLAnPy1LHfOU","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GTljFRyDYg-r9Qu2YEgIR","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hg0R3qGJAgv1M74nqxSRq","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"1WkySzO4YOkg-dpMcJ77q","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AMvN0CqVI0X6qJggkyoQd","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"J5j4OjNc__AlqX9_9Rmea","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"qoJVBfrHl3yPc6WDe3l-K","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"B5XD7Jcz49oyUAEuC9bwO","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OFH0SmmQ5w-Zy-CBOy-Rb","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"70VIfHCXJMH59b9XTU7Ri","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"QlFaP87h1AySPj-mpU1Yi","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"R_u3j3rf3ITwhyIkPSfuz","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"NHW0YNcQ3SvVGCIVMf8QV","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Mn76lq2ExffKqK5Zg7at_","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"-FFlZ3Aom13evcO0ps4ml","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ri9XW6MkQDOX8vJozmGpx","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"WHVQss9fZId6FEJ9Co292","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"bkvxAZE2gZ_OB1PN7-2oa","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zhQ7SMClQMt39SeIDoSr7","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_Q8UXnBOvvo0RVqk7jW9M","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"xmqSFgAU4NKdOH00tHp_6","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4UyXXt_jhFflcqrMPeRg2","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"6BT1nohC_TUdpB6_NxrLZ","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"MHSWAeB7fNRayNZH2PJLS","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"2vBRMR6PMmhihFLRLP1e2","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"dEqXMOchY3An6TtYMsimI","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IjDgQZ6GzoT5DgTB1uGO6","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"awzeIXRbP6zGv-ZHAq3gu","name":"DropTarget","brief":"","see":["Draggable"],"type":"ClassDoc","description":"<p>a base drop target object</p>","extends":["Renderable"],"members":[{"id":"GN3eHS1tPaslPyBmDmUrE","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"ZtW-vwFW507GvCB7zVmT8","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"fw6y1IKIWBuFV1NipBR6O","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"pnhX5BCvT3-L5BbCFcdiW","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"dsmRZoGC57DmnWHTJ4rLb","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"_lVppoU3rD1zNH0i4hy8l","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"-knww7nWyWBVMPXtiZsYH","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"buUXNweawsxpD33JBCpQ_","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"VhGkLhFvrAdC61mhJiatq","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"aAR7nnuXlZwGz6HjoHG8E","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"szpxAfwaRmHAsoyBROuTR","name":"checkMethod","brief":"","access":"public","defaultValue":"\"overlaps\"","scope":"instance","type":"PropertyDoc","description":"<p>the checkmethod we want to use</p>"},{"id":"YjjDuzgiaXQi4gSJADdkd","name":"CHECKMETHOD_CONTAINS","brief":"","access":"public","defaultValue":"\"contains\"","scope":"instance","type":"PropertyDoc","description":"<p>constant for the contains method</p>"},{"id":"MF_ulNI52xxufGF14cfr2","name":"CHECKMETHOD_OVERLAP","brief":"","access":"public","defaultValue":"\"overlaps\"","scope":"instance","type":"PropertyDoc","description":"<p>constant for the overlaps method</p>"},{"id":"4r9ZS08iih6Ps8dmqe2oW","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"EBPcb0Xp1jnc-KJQK56-R","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"Wmeo3cDBPH4hv6t1SQIkl","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"EW8ceTXj4KtvPU0sp2ZJN","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"_cl6k2hAPeh_3TikSWlNO","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"1GczYi7_iBhbKvuvYGZ8v","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"GZ_tH4VuOMKx_5oJ3SYbH","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"Sf87zx8_mD12G1yHjjvpi","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"FIirrCEQGBw6O4eBxbDe4","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"evVccoDbKCKA0qBQUw7lf","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"yTbiSvL-SA8scU_eX-q1U","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"zay1VTklxUneAbXQWo9Bi","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"YHGa-gWHeboDqvo6S3NvG","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"GMlFd8BTJGUAP7YE5ATBO","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"uzSTbOJaZKQjd-wAzFKhj","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"HLucTH6UMzJc-0j5hEe5Y","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"ko46Yftj060Jp5p-tC539","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"bCKc3ROUHDL1sMO-c1QM5","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"-3djZBzamqNxDJe_DLQ_d","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"wAWt1oJdDnTdXgpJc7xud","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"bsEav_ZM6GvbrvIUbkx-B","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"mFW2ujbJWUmbwrq1oqk0K","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"Z1X8ayUHYu5gJ6yyvjNs3","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"pApN5QXnUNmy_1GcHEKqJ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Ad1PyWldeYKlUJ_AwL2wF","name":"checkOnMe","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Checks if a dropped entity is dropped on the current entity</p>","params":[{"identifier":"e","optional":false,"description":"<p>the triggering event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"draggable","optional":false,"description":"<p>the draggable object that is dropped</p>","dataType":{"tokens":[{"value":"Draggable","kind":"canonical"},{"value":"Draggable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"cSU6uiQlPiYrGUX5jdTlc","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"TRQH-ztqV75FKsE7oWdKj","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the drop target</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the drop target</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>drop target width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>drop target height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"D_DrbbgsMD_g6BlyyBT_P","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KsoWD7DUtX1Xz8vY4buND","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CnNd6IEUXoyKQUO-o7mR7","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"A8Zn6EVfv9lLLzeoepOoS","name":"drop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when a draggable entity is dropped on the current entity</p>","params":[{"identifier":"draggable","description":"<p>the draggable object that is dropped</p>","dataType":{"tokens":[{"value":"Draggable","kind":"canonical"},{"value":"Draggable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"uz81j3e3-pI5-dYy7fZrn","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"h4n7pi7xrRZuzB0QiD8gD","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"c-rPjuK5Z7sMB95CG5w58","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"j6VjnC0bkw6qlZTgOLKzI","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"kPUomC9gEbVw5nIwzdpjJ","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"FsftxXAHEOjfD1Edy4PBa","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"SSNWNF5Kq9vRvR4w5jYxm","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"DSXPDiBTPvUYg9gykMKXe","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fPOhZ_AKx2vD8KDQvqvrT","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"FZcAjnS-U6Y__He59xdyl","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"4SO5OhwdAbUnNTlNFFuzR","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bEbpmRDIBO9wAStv8lVmR","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"6qge4eFvqj_W2v08aiZJF","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"YwdcgV7eTR0DmRfgal0Rs","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qGOJey9rRxsJrNRY9nwzq","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"YaqOuO4oePwOaaRSDZNN3","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zzC9EGV4OFAN3m-toevKT","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"TJgTry6XvHFBpR-RxKaFH","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VTcLrSJR3jqwW7yC4ODDV","name":"setCheckMethod","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Sets the collision method which is going to be used to check a valid drop</p>","params":[{"identifier":"checkMethod","optional":false,"description":"<p>the checkmethod (defaults to CHECKMETHOD_OVERLAP)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"pLzv9zVpnG47zvFh70yce","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ivrkA-0YI8B9ta7--zDED","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Sj-fgjHS7e336gz_XxLaC","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"mAXpCbxoC6sYTT8UWeExV","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"uzsTaySn6B8uH0MBhJusq","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"DhZeODnW7qoT3V1cun9Wq","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"enZXhz6pbnnHMsRrGvkBC","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jAtWJfbP4KoAiaWv_KSUi","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"bg7P1oEe0BN65FlAjqSoK","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9pBxczYrehrR7P8OEnkcx","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"63VEyE3eRX1-B6GWD5DA5","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"DAcbrTQ20DY2dK328h68E","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"C4339b92D_xPtAK9yodIg","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"i6jG2aD9yruiQ_KWRqFp2","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QZNrxC3ZsgQhH_SRqCS7u","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"jyI1ir744PeD4MG_3WxhN","name":"DroptargetEntity","brief":"","deprecated":"since 10.5.0","see":["DropTarget"],"type":"ClassDoc","description":"<p>Used to make a game entity a droptarget</p>","extends":["Entity"],"members":[{"id":"tQ8miAJnGjMRk8LsMgxUc","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"w_UnrgxbZMoX052QuO_RG","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"ng1vnVa7SrzMqR0BJivf-","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"J9VZdKvqU3VIO16cG4WKD","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"HQfYIlY9FRj535Gu81i6D","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"uQ1ghOaUZYRzfBiOuWgyd","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"-5DGBXaHxawLtQkwjhtte","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"Rc0Y57-tXFntjbR3YBFpu","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"Wwp3kL0BNZHdInKyxdNYQ","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"7eZgA5mmWjihgddssQcCK","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"0TXtepADwmZGctpn3P2Cl","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"ClWv21oPqxFQSMU9tB4VZ","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"JpgFRBMpI1UxwLLg56-Qg","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"-qamZk7-R5BXdkO9qkC4z","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"9GFSHm8OlzlrIGLjpZtve","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"nQyC3tp4cdO3_mmv3sbGk","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"XixPfK9z5GzooTzlpFNcq","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"xbvmPvyc40quB7gF9_hMV","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"8eqWX6k30tmz9GQ1pDOlz","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"zWOQjJ2jHZ91CAPbHFeC2","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"O9D1BC7JEI-AhJ5y6gaA4","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"OiNzy7p9mptyRb2bYIc6e","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"CZiRSrSAlbihj5SEicg96","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"rEMEsIxFSNnsAh1y1NDFs","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"jzT6rGnHf2DegFi2bw-H0","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"Xtjwx_wDgAe44ku_C4Rc9","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"eMXMV_Cmet-JCqK7YUvLM","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"J8GromgTXzLuzX0unPSl1","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"oBaeS-Pd2RnlsfVT5HMeU","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"YL9oN7X4FUmqq_dNGyySM","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"vHFvpkqWPZgXm635mUhar","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"mAfM3uGV1u60LKizScqUB","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"bScH30A_bqgirjz8ERwmv","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"ENn6B9rFBJmFoYQWu0NlE","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"2ncxOM-kNx-JOty58j0hF","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"exsyKfd20JXkCI7kCAPGz","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UH_wQd4gmPUoWpcCwSriB","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"GQ9YGzspXcYQYFK4zxEwx","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"h-EmI5aAkR77RmwBpt86J","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties (see {@link Entity})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"c9eBKoggVh6DFhpD1XGK4","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"sEmhSja4EKIqwWNgf0hAZ","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"_NHUSFaSL90djFuW5BskM","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"OPqDWtLTovWabrwZIdi0_","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QkrUT2KV2rM8FXld5utkl","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"sPOf1hvyaJABL0_F3Y-66","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"B7IUo634Zd7gyHvrYwLbU","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"dD78FO2wza2rBS_N0dUG9","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"w3fQPEPg2Z3TDKAFNwmLr","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"u-mblFw_hl07hwaEfMfm-","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"DnixMckUfLvx-4QYF0eWE","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JiH2bwHAe9s5KUr6HAEvE","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Tn7V0wf9ryqlJIv8t_Jj3","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9Ya4gZCEcntyclB34tGXm","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rRAVUrmAb1TojCQ9MxBrB","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"Nv_kij73ZM1GtgOhuY6Jx","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"ip05EPndjsJyCjFel3bko","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UbOU9LkqfrEUf1d84lTiR","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PAFFPsdhcExKD1HppXYzH","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"l9aCGlyh3Esid4c3Rf6sz","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"_4EDp5l9uML3ki310o7Up","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Bc9DkDGF_IM02OHvxL_14","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cBiiiCoD10yCX7fJcHU38","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"r6K7xP5Rrwh8pUVC77Zbv","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"QjzvoEPX06kB4nL860ruq","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"37-lDl6ccqdiPRxhjWjqC","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VOOvdxcMuqvwvQ1IDbCRO","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_dHMInZKM83mvWMKn_xS7","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"D1qluY3qrVvwN-2cnIFik","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"oD1grpZnsD8S8pPeYvkmC","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XQqqmo_5ClR839fsxKgwi","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"GfjH6e2P1xFjZEQqKUu4r","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"upRQMwo5fMAhyT72X5M7s","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"uP-mVlUD3Fj4zhsZ2kZnG","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Q06820v-Ki--RpOwL9Vp_","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"YmB-qxGSpIsUilsY4tp52","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rpOw7bs5o5-m8oCZdCsqO","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"WofxLqKfPgJtfcljp5bep","name":"Ellipse","brief":"","type":"ClassDoc","description":"<p>an ellipse Object</p>","members":[{"id":"_TAYY1HUf4d8cXbF9qv_J","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the center coordinates of the ellipse</p>"},{"id":"o78qn0shtnhfDjXcpKQw7","name":"radius","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Maximum radius of the ellipse</p>"},{"id":"cYCoYmXsU6kTpwf8CWeqX","name":"radiusSq","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Radius squared, for pythagorean theorom</p>"},{"id":"wKXAdMgocuPYdXKtubB6m","name":"radiusV","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Pre-scaled radius vector for ellipse</p>"},{"id":"X5E-TimizQycONlZWEhFq","name":"ratio","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x/y scaling ratio for ellipse</p>"},{"id":"NtJMRo1uTiC2qjKIwfkYu","name":"_bounds","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>The bounding rectangle for this shape</p>"},{"id":"ytTg-XamcmiGdekLQbwbO","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this Ellipse</p>","params":[],"returns":[{"description":"<p>new Ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"aDC7qQamhhp0dAogL6wa4","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the center x coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the center y coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Ok0v8vwugWxJ6JglhqLju","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this circle/ellipse contains the specified point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Cy6g53uZajpqlJwW2wNnW","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"mp03ea6uelLqNBcutgbMl","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Ellipse (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"cTFVc6RezKCeLx9dU7R4K","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Ellipse by the specified scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"2njWGmAcpkURsoEPZ-ls9","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Ellipse by the specified vector.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"5CRLUPhrmUUpc3zVqnNZA","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Ellipse shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>the center x coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the center y coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"lGl135XWdAprDMuK4ni3z","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this ellipse</p>","params":[{"identifier":"matrix","description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4ImLzZwsYOzb6c4qRA9Uq","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the circle/ellipse by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"9J8REcw4ZGNfAKHbUSrPO","name":"contains","brief":"","type":"MethodDoc","description":"<p>check if this circle/ellipse contains the specified point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"FRXycvfGbKIJl7bmHAQJt","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the circle/ellipse by the specified offset</p>","params":[{"identifier":"x","description":"<p>x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]}]},{"id":"yfAL4ncH8rP9sa9w3NQnX","name":"Entity","brief":"","see":["Renderable"],"type":"ClassDoc","description":"<p>a Generic Object Entity</p>","extends":["Renderable"],"members":[{"id":"NoxEk28-6eZyg5MEIR1lY","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"bbMOmg1H17QU2BuW-Dy4M","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"CQGGRxjBqzsHrpjqiR6ZN","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"ysJmceObqn81AS7FCq7KL","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"QBNRzrwQHk2KvYLVlTbz4","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"5ZrX7BSxPEYOMTRAbsfim","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"ihE1VebBNyHVsqfHwuVgT","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"ctNgfepJO4LJ6J0fRUMZQ","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"ls9Q02mVGC2gjAFavSEVD","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"dpZHnRsx2zlVvuo8QxjgE","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"hdCnhIi_QkGH01Bcph9A_","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"q8DIYr8AZF9vKh1fWl9k2","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"3K-YpV2cg2bg2BDCDUeSD","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"J50B56AYuXgTxitMPLSTj","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"CeRVcfy5f_2DsW-TFdiiC","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"aLc9Mlw47YDv0vN7fGZGt","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"QmSZI6NRA6CQXKx_Y9I8k","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"1kt4mPXlANt_BgmF3aXHi","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"YXTEpNU15YBc8PoNbsJa_","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"ZLeYG2E6pi5kGADk7oU_4","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"i0VCFXvV5Mw5dOwoPSS-2","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"0hzTL9-KlZfhbNmobHKGy","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"MGG_9-p0Fcl9m5681SHq4","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"HAszrQyjUoSlUPw8c09fg","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"04Fs3AptZwopdORoqtGmS","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"qbwztFX6n3DyCjhx8TXYN","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"0Gzsarm7WwGry8qX0248U","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"wCy6YTZzDMpzRGAvlbBmt","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"poWz8j2A9rkXeUP0Leok0","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"M-erpinGxxcKrkKN8F4Ru","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"OrO-z3uPwYkxHCvK46Z-C","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"XGTGys7a1_xyfTuQTZL4I","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"ECQz-Ec-fVVeENvYsbGoo","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"wZAU0OlGERC_MQXRWTeEE","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"sl6xNtXoM3UOLtt_b1HfX","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"ekhN-OzeA3C7DXwgArAhH","name":"body","brief":"","access":"public","type":"PropertyDoc","description":"<p>the entity body object</p>"},{"id":"zHxkDVabUbFOXuJ-R5g94","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"VsVToVemuLzMTV_CGQXZK","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"NNuqh0Kd4kanvBIo7GWR-","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ehB44ZTtN4TGQkKx0g3sl","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the entity object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the entity object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties, to be defined through Tiled or when calling the entity constructor\n<img src=\"images/object_properties.p...","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.width","description":"<p>the physical width the entity takes up in game</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","description":"<p>the physical height the entity takes up in game</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.name","optional":true,"description":"<p>object entity name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.id","optional":true,"description":"<p>object unique IDs</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.image","optional":true,"description":"<p>resource name of a spritesheet to use for the entity renderable component</p>","dataType":{"tokens":[{"value":"Image | string","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"settings.anchorPoint","optional":true,"default":"0.0","description":"<p>Entity anchor point</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.framewidth","optional":true,"default":"settings.width","description":"<p>width of a single frame in the given spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"default":"settings.width","description":"<p>height of a single frame in the given spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.type","optional":true,"description":"<p>object type</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.collisionMask","optional":true,"description":"<p>Mask collision detection for this object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.shapes","optional":true,"description":"<p>the initial list of collision shapes (usually populated through Tiled)</p>","dataType":{"tokens":[{"value":"Array<Rect> | Array<Polygon> | Array<Line> | Array<Ellipse>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1<%2> | %3<%4> | %5<%6> | %7<%8>"}}],"returns":[]},{"id":"6w-rDmXCnYEJx61KlAxh7","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vF-epjGXviKzGtdhzwMN7","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"URPPla1jUbT4RLU3ybHgB","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"oOovgMypYuTKi5NjCGVXt","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IHLBQl60QU10FDJMienUU","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"AJG7mBUeadsBLc2PzqdvV","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"TAfFfEgFQ2ZUXQ-HL0Vyf","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"06Fo5EwUHiYCXmoWi4wmJ","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"QhkevTcx_4jmu0sjpXQVP","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"aaDs1LU_fJrpWZAZuVV0f","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"JjUDhKO2KHmaWF8nlV-wV","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"593FXoNyeuNaZr5WhekvV","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cFwKVVMb0QP2WXIeLTUC4","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"rmPobeBsPX44ZEANbBTi0","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"np0uD1muXcbpz7LVdYMhv","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"FpmpwMaxPHhTHuiMwJAAJ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"BxUzyAa2ZE-sQ2snxuT0z","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2UGD_9-Q1JpxnNXSsYRRq","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"N3Mc0pI_pY8pa6glFheQl","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"TGkbZRGqgJGqHWiGCDTev","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"hpCSzZjkTv_vJxJmKK3h2","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"jYBtElLfHigjOXtihacBE","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GcuAGlTLNPfN_UNsbzXrJ","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"JmjBGAgeWN_IiqNAo6gTt","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"SGaczUofcXohqW6ie7lso","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Tmz-ARG26n9MfuoRhvaE2","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"05Gyt--E4ImldnJqaHxJZ","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Buv04CCWLAVh09mGD7BAj","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"tPfbuZYQDpaxciY9PUavi","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"VP5WrdKx6R4BLlmwdimcc","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7XqkVBhJzv-aYosxQG67n","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"mPiHLjrtTPhKmyV3PnQHL","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"g_t8hvaPPBwINI_To9rBi","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"hNT3eiePjX_Ct8xit-xXJ","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"WOckDT4m7pzkT_0CRii-o","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"UAaq4qJHvIIex5mU9iZln","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZQdN7X-fMw7g8T4DikPTu","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"n-saqQYiZ3Whg6eMuN-38","name":"GLShader","brief":"","type":"ClassDoc","description":"<p>a base GL Shader object</p>","members":[{"id":"eyUsgUSJ10EzHbN_Ioa2C","name":"attributes","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the location attributes of the shader</p>"},{"id":"bfsDCXYw_EM1CgLDiWQD9","name":"gl","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the active gl rendering context</p>"},{"id":"Yeqx1yJvvfAr3OkZ4WLQ8","name":"program","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the shader program (once compiled)</p>"},{"id":"LY5u_eoeWvdzOwmDu8IjY","name":"uniforms","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the uniforms of the shader</p>"},{"id":"yGBcC7C5A9anZIlEDq_2B","name":"vertex","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the vertex shader source code</p>"},{"id":"x5f-JbpkOFT8UgYPlm5-o","name":"vertex","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the fragment shader source code</p>"},{"id":"3e-ziXPIZBRlTfkWY4_jV","name":"bind","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Installs this shader program as part of current rendering state</p>","params":[],"returns":[]},{"id":"Cl24YTA2uljojXyD2grsn","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a basic shader\n var myShader = new me.GLShader(\n    // WebGL rendering context\n    gl,\n    // vertex shader\n    [\n        \"void main() {\",\n        \"    gl_Position = doMathToMakeClipspaceCoordinates;\",\n        \"}\"\n    ].join(\"\\n\"),\n    // fragment shader\n    [\n        \"void main() {\",\n        \"    gl_FragColor = doMathToMakeAColor;\",\n        \"}\"\n    ].join(\"\\n\")\n  )\n // use the shader\n myShader.bind();\n"}],"scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/GLSL_Shaders"],"type":"MethodDoc","params":[{"identifier":"gl","optional":false,"description":"<p>the current WebGL rendering context</p>","dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}},{"identifier":"vertex","optional":false,"description":"<p>a string containing the GLSL source code to set</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"fragment","optional":false,"description":"<p>a string containing the GLSL source code to set</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"precision","optional":true,"default":"auto detected","description":"<p>float precision ('lowp', 'mediump' or 'highp').</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"05FOBRU55JbJhQAVvZw6s","name":"destroy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>destroy this shader objects resources (program, attributes, uniforms)</p>","params":[],"returns":[]},{"id":"nqb5zR2lObouSuxLaMF0G","name":"getAttribLocation","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the location of an attribute variable in this shader program</p>","params":[{"identifier":"name","optional":false,"description":"<p>the name of the attribute variable whose location to get.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>number indicating the location of the variable name if found. Returns -1 otherwise</p>","dataType":{"tokens":[{"value":"GLint","kind":"canonical"},{"value":"GLint","kind":"canonical"}],"template":"%1"}}]},{"id":"_ii7xmUlsN01DTiEFC57F","name":"setUniform","brief":"","examples":[{"caption":"","code":"\n myShader.setUniform(\"uProjectionMatrix\", this.projectionMatrix);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Set the uniform to the given value</p>","params":[{"identifier":"name","optional":false,"description":"<p>the uniform name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>the value to assign to that uniform</p>","dataType":{"tokens":[{"value":"object | Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"object | %1"}}],"returns":[]},{"id":"z3NnWrL9LWAEkvGmJZTV0","name":"setVertexAttributes","brief":"","scope":"instance","type":"MethodDoc","description":"<p>activate the given vertex attribute for this shader</p>","params":[{"identifier":"gl","optional":false,"description":"<p>the current WebGL rendering context</p>","dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}},{"identifier":"attributes","optional":false,"description":"<p>an array of vertex attributes</p>","dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}},{"identifier":"vertexByteSize","optional":false,"description":"<p>the size of a single vertex in bytes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"sLSGck36BuvPZIgKdAseX","name":"GUI_Object","brief":"","type":"ClassDoc","description":"<p>GUI Object<br>\nA very basic object to manage GUI elements <br>\nThe object simply register on the &quot;pointerdown&quot; <...","extends":["Sprite"],"members":[{"id":"vfqj5gcWx0tr78kTVPspD","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"Q0MBjYYwSDJbrnaA04wDI","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"PEVg-BJtbHMbc0rJywV9H","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"o4TQyljM0R1G60qx8WslG","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"S6NfIbCX3wJmCJiqIj9sq","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"BltpBqDrfNDxsvsG9883i","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"QxcNuwP99lf_MtajOVsXs","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"KuXjHNZ1Bxy6hbrcowCQq","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"1ooVoy0Qu9myv1eRXYGTc","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"tyj9E9tQstNyzDeG5bT-V","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"PtlgVLfrHDdiGCIcGXfRE","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Es5aBOj16ECssQ2X3DclO","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"GOsvXmrVyipJ6Se-5KlxS","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"OasZTKED9xDzDGahBm8S8","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"HIaFc9xrnAMWZKH5kZbQn","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"MJgmXLY60IqVi7HR9aW0j","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"nQEII61nl_QIDU1mJDsHp","name":"holdThreshold","brief":"","defaultValue":"250","scope":"instance","type":"PropertyDoc","description":"<p>Tap and hold threshold timeout in ms</p>"},{"id":"p2ycj3rTmxR3-0H9szYsu","name":"hover","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the pointer is over the object</p>"},{"id":"qshzylozgyqhEvGamwmHs","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"cf9iISp6peKyg_8GQt1fE","name":"isClickable","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>object can be clicked or not</p>"},{"id":"3cfHKx_pDJQN9vgZ0AVFQ","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"Bcs3X9dC5tzKWGsj2Hikv","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"RMCaNZsaSNcox5CluGB5t","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"2X0kTrm9ZNs8BN0gmX6nJ","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"GEzkRSMUI0O8z9lZnQRf9","name":"isHoldable","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>object can be tap and hold</p>"},{"id":"bzQVafitNy26NCAw2ROGU","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"q_xV4xhSO1ZNr4uODCzww","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"rGoJnBIpuaaExHxDwMvI9","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"2kXHfDPQ7UxQP0mW5-BbQ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"xu_7bxsadHYaA0gZo5uIJ","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"S7AnCr7xbRqNwFHB4x2bq","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"KH3CnXCA6j06EQxdQlmRq","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"AyadXwCTscReTGBJCGhSJ","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"abQ_oSb9IK22Vs_-XNLil","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"YjS2-_-ZfgMdtAqBr6pFC","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"bNfVvApLqDJ9mH0fiqJEF","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"MXzqmInjHo6fS3hzMpdRG","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"8edT4Lb-PzBIxFtnzoFmp","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"KQxQYPr76xDDelGQTD_8i","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"3Qn8VVfK4I6dWXr7DP6lY","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"NQAGDOv6R5fy1J3sX7mCj","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"4Ng5MOq1bkndFPQ9PCIlh","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"OFv8ZyQ_B-E9oBgMwPVtW","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ugY8zJXIrhVVxLfpWMu-5","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"kLHbcIYs0vyhV9ScPLRCO","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a basic GUI Object\n class myButton extends GUI_Object {\n    constructor(x, y) {\n       var settings = {}\n       settings.image = \"button\";\n       settings.framewidth = 100;\n       settings.frameheight = 50;\n       // super constructor\n       super(x, y, settings);\n       // define the object z order\n       this.pos.z = 4;\n    }\n\n    // output something in the console\n    // when the object is clicked\n    onClick:function (event) {\n       console.log(\"clicked!\");\n       // don't propagate the event\n       return false;\n    }\n });\n\n // add the object at pos (10,10)\n me.game.world.addChild(new myButton(10,10));\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate of the GUI Object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate of the GUI Object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>See {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"IVM0goE5JbX4FkzFtPtSg","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_7L9sjo0uiqQqPKed2e91","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"UGcMBYm4TCMfJUTZCybZt","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2FRGjQhBQ648GF4PnRBki","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CtHs5VMT2_bN5AuJL6WY3","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"fpxTjwe66F177rPAwuC0Q","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"_2hKjAJfIgAH9cNAXfEpE","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3ENa6BToAPNn1zaRvkzIU","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"1xDXLvurECcLObk3gPjmI","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"BcwrR2nE9VKAbzmFu_ziT","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"kW4pwoPWNWTMei9S_TIey","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"eG9dLodHHBX3LlF-12Dbu","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"d9qJOYqRz1S9Lq99yHRI4","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"od0NTF3UnJ6KSavAUYVCf","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QTP9Pb_2Cy8UGLSUhn1td","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PDoExZP4gpDai-xV5xqco","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bYeMcn7dLj-yQQDTab3qZ","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2b-AOL5T35w4VcKss72HN","name":"onClick","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed (to be extended)</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>return false if we need to stop propagating the event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GjE9J0CTQAeorT13Q1ATb","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"S8LWeMfjv4as2Zy8RC25y","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"rTgDwZhlJuzx2qJY3fnMy","name":"onHold","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed and held<br>\nto be extended <br></p>","params":[],"returns":[]},{"id":"nqoB9FR0ph844Sj0SlAa6","name":"onOut","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the pointer is leaving the object area</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"urJjWGWr1e84cFdU9nvZu","name":"onOver","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the pointer is over the object</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"GvxEAzx479EwR5tC6H4fe","name":"onRelease","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed and released (to be extended)</p>","params":[],"returns":[{"description":"<p>return false if we need to stop propagating the event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"acE6EIiDimnfdbCVk2rkE","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"PKOX68jgpbe9gRXkgr16D","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Q7W7bpEuY4Wk_0b4uA0Ic","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"3iBdUUByyyUquiUEwxzsQ","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"xwZ2obExhfvrJsZ475Cp7","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"iJs1l0aRrXlQRm8OderD6","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"AJNZQNQUPKgwQeg_c3ekF","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ASDbfm4Yirl9eQWaTOTeB","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"fOv3_9Y1vGb63XHpDkzDX","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"9IBlZqLbXRVEtsfCFkZAU","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gkFkK2BSAgkB4WuLBHP5T","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"XyKL83yExyXeMKSPnX9Yv","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"M_uYWMIwDcU1dskX9mXl5","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"o8TNZTUG_YtJfs9JILuTl","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wD484jJOsuklOn8qgjJ8F","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"MxrY8Qtq8ZbO5_gRG5BRa","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"z9Um1y-bQdoInBAwaD8gK","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uTD5b7LIUAK-y6qyfISHx","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7IHrU9SHzIpXhf_QLeQdG","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Vmv2ooXCp-fxjBAo8lITv","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"hJ-xdTUC17Vod59dreg6v","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ny9J6LTvJgqX80tiW89kT","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"poKFu7b4gwUikTvKKB0Ho","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"GHhOEKWvudvENb5pDZzvV","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3HIu_YuzVtN2SYaqmhsTP","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"1ScXVyWF79j_iNmTwmEYu","name":"ImageLayer","brief":"","type":"ClassDoc","description":"<p>a generic Image Layer Object</p>","extends":["Renderable"],"members":[{"id":"1jOKM5hP9aoxLL_v6gkcy","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"0KHFa-1XwnQ9gxmk6K9_W","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"L0t0B9ImsEACtZtkhcbbN","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"zByubpjQic_G41t8L0XSD","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>Define how the image is anchored to the viewport bounds<br>\nBy default, its upper-left corner is anchored to the viewport ..."},{"id":"llAFB_-qkwcqUFcm-xt17","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"ExoWfIZ768dETITROcZIe","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"j9uuH_2R-aMU5X35Y5n1r","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"IUFJ9dum7v05gt0ma8pn7","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"ATz_U61WeyE3niUYNNuk2","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"mWIKz6yTCJmWdXSGdyzeN","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"hDB8KcVEywIHNdLx9d4Xr","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"O420EIz22VGnnqCGKgmqh","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"ujXk6ohBvgkocrN2K9Gw9","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"dMMjF5Jd7VUjcmyD-Ni1F","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"eckVM3CsTsXbERo5lGj-T","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"UUCMalpYx_H1nMrkRXnBZ","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"kKyHcxG5KD80N02mRCynz","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"0b2foomyIDe8wansBCnds","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"1Dga5p5FxGTXnMmlgvZUl","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"Wqp0C9WHQn7vn0oPMNna9","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"2opIQBLTx65zHdgFHsc4h","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"i67F_fqeIaygPGgjnqXbT","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"qqEyTY49m0soFIGBCsv-R","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"9LIR2dhONfgGEodicIqaV","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"7HRLkOoSBmLd64PXuhlTe","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"SFfmRgkWHqgZCGXq-xv-d","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"gdY97NPtH5pvzJLAc1kOc","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"AgBCWaakKVcCSiP-AGbDk","name":"ratio","brief":"","access":"public","defaultValue":"<1.0,1.0>","scope":"instance","type":"PropertyDoc","description":"<p>Define the image scrolling ratio<br>\nScrolling speed is defined by multiplying the viewport delta position by the specifie..."},{"id":"BpMXzqwjxsFm7SNbBLIA5","name":"repeat","brief":"","access":"public","defaultValue":"'repeat'","scope":"instance","type":"PropertyDoc","description":"<p>Define if and how an Image Layer should be repeated.<br>\nBy default, an Image Layer is repeated both vertically and horizo..."},{"id":"4k2tN6UWq1hBPwYBCWARx","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"wkGH5FO0JHWMe_cBtp3ko","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"3ER6wEF0dsJ_TTH6yWIvT","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"6MiNdz4L7eBEEiTiWpEqT","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"jnKgK1mqcBtnCbfr6oYIe","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"eyeF9KdULxfZ2EFCEeaLf","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"CEWD4td8_dYp_dZ922mCV","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"p_Py26l0wtQfCiAExAOpQ","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CF0fN0klQg0krK4LbP7NP","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a repetitive background pattern on the X axis using the citycloud image asset\n me.game.world.addChild(new me.ImageLayer(0, 0, {\n     image:\"citycloud\",\n     repeat :\"repeat-x\"\n }), 1);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>ImageLayer properties</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.image","description":"<p>Image reference. See {@link loader.getImage}</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2 | string"}},{"identifier":"settings.name","optional":true,"default":"\"me.ImageLayer\"","description":"<p>layer name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.z","optional":true,"default":"0","description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.ratio","optional":true,"default":"1.0","description":"<p>Scrolling ratio to be applied. See {@link ImageLayer#ratio}</p>","dataType":{"tokens":[{"value":"number | Vector2d","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"settings.repeat","optional":true,"default":"'repeat'","description":"<p>define if and how an Image Layer should be repeated (accepted values are 'repeat', 'repeat-x', 'repeat-y', 'no-repeat'). S...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.anchorPoint","optional":true,"default":"0.0","description":"<p>Image origin. See {@link ImageLayer#anchorPoint}</p>","dataType":{"tokens":[{"value":"number | Vector2d","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"h63Y-YcRhGMMXYkSOuiQJ","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WlMeCi7L7RYIblKl1Skma","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"IhG-HyKq62cIm-l7pjqOk","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jXWdPqDtTKH9_W-NSlsjV","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9-GDZ98EpfGk5aOsHi76V","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"tt11m2QEYt-3pepUMjimO","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"gz2pTwQxtwYqn5tve-6P4","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"O2qubSsV6ED-tr7sevDIW","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"RVISUMiLt1LIu-4KyPhBv","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"rEQS8Ywr-uQpjqlM-QMkA","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"8aqiDiXKxmvVCW3WnJo2c","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HLShIV1COadfZwGeGeMhR","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"iZfWb_EO0dSWXC8XkUiSW","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5CeKF4N7jvmOusH1iYrL-","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rj0-CYGUTkd4tFTb3Wksm","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"ag1IfIN76ca7TZP9Anky1","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8qNctWDSm_YET54eaxzaM","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"CvBc1MGM8EDGiqlNIg0S2","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the Image Layer to match the given size</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"rcGrkk9p481_ltniu6Ynd","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"IgYKbpTA7F4tdf9qLh9Q4","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"QsrW71s4Zfmqgo9LyQSNG","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ABY2lcphKGpKadanwhFtt","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ZeWsGsntXRofXlLDXT8gw","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HzXmX63sBmWaGMGd6qYS4","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LCNlCtFNTUDxBLrrkxusC","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"1gp9fR6qQAJiuuWQ-8rny","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NcmDd0bRk0xW1Ih8MdN3S","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"0dnJKbP_90iOnvRU9glj4","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"moFEdXdbQdz8GKRBdFmEV","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zPBHhcKwxrSt5X7JMnk5i","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"IQ6yPCSLuMVpBBe357bzC","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"FNt1S2e4edV5wslYqi2cG","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the ImageLayer. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"h2Js9V2UX8iPQ9yWL-Cqn","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"LFhuRQwov-JA85fvl00A1","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"YQKvv-3VM2C8CWNfRg5c9","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7NljXE1RuUTosEVwSg3Jr","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"-3pjXfWgM60WoKFIdkDkM","name":"Light2d","brief":"","see":["stage.lights"],"type":"ClassDoc","description":"<p>A 2D point light.\nNote: this is a very experimental and work in progress feature, that provides a simple spot light effect...","extends":["Renderable"],"members":[{"id":"6zVSlaH_sC3ncV-Gn9R2Y","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"a9AlNed711flSaTB6COVb","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Hbe82-F36qOAg-X480fJj","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"XOrYXUrUPOuPMA4355nA8","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"mcJ9l6iglCH0FnMTPMmUu","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"3V62kEgs7_-ZlBfU6R1VK","name":"blendMode","brief":"","defaultValue":"\"lighter\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the default blend mode to be applied when rendering this light</p>"},{"id":"Um1CcMbq0jb5z3_vQ_l_3","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"I62KF7qs5FXSCr0VeSSIu","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"Tluf_aCLhOnik1ga0tGys","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"V9u0WjTidXhod49w2BWUU","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"SDdd6MJ0C745rOJq4ITjR","name":"color","brief":"","defaultValue":"\"#FFF\"","scope":"instance","type":"PropertyDoc","description":"<p>the color of the light</p>"},{"id":"kMPPE9i01lClaThw_0WrX","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"KKe_KSIrZJ_lcF0kQABl_","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"Xnv82b2U_QhCUyDqMFiW8","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"T-1Wjkc6Hb8TUPo136Jsc","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"DApZHqWIcb7ac8sKsA-Tq","name":"intensity","brief":"","defaultValue":"0.7","scope":"instance","type":"PropertyDoc","description":"<p>The intensity of the light</p>"},{"id":"5y9z6_LjRUrZziJ5Uu3FV","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"3039epfPMFO-rTevVcsLL","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"hlYEcOMxbzAFux-FYfxPl","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"0mMxo9R8K74WMSFQ-jXO4","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"1wLMhdRxzded7zIqeGrE_","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"cPjVupY9CIv47KOufcXLT","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"VvJMEx7kVoCK63w1Dos0s","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"NiSGRc5e_ucs8-L2VwkYJ","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"yxU_RwqPGCGu7PEFtUfCP","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"tqpq44zIrQFox0dx9S2C9","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"EeW8SeAeuhd3BJ5zp7Tpa","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"jtCz5DefqZWJJmGGoiuVX","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"IbG-ej3k7b7g3WVoiu629","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"6hGD67cLfThKvX4M2VpxW","name":"radius","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The radius of the light</p>"},{"id":"qa0M-6U6_CBHLKYZteve4","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"sEH9zEUlqZS3ZYSCH01k9","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"keQDucLQiQcJpnL2K-n4y","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"eVVkZsGTB27JYKqbcwZtk","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"ZO8K0jlU1HR6F2nkSzFNf","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"AUYIz1yp04wZQSbdojWSk","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"9WQtyCZWCCOvOa_2-CK4E","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4QfVbswUVVMbkMDRHU6ZN","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"oRf7eN3q9ep5e8sAz7fIp","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>The horizontal position of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>The vertical position of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>The radius of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"color","optional":true,"default":"\"#FFF\"","description":"<p>the color of the light</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"intensity","optional":true,"default":"0.7","description":"<p>The intensity of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ojBBJee2-2cPnrt0kKIII","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hb_R3m1EMQL-Wu6lmfk-A","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"U4QnyZR8zsT3fOgQQhQ1p","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"8knjzw9IpkxA4wxCgDmaj","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OO-aChTuDnW57LW58cyY_","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"EsHNGCSmfK0pBd8-FVxvT","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Da-dZxvHIjGVlznPh3rnP","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"qQTllxq3hw_f2HQN5PjAf","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"YcoyBGJZavAM70-HvItAm","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"WeTqbuHom6wrVMoE_H5Gy","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vI3Y98nGDq8eGBobeCujh","name":"getVisibleArea","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a geometry representing the visible area of this light</p>","params":[],"returns":[{"description":"<p>the light visible mask</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"Mi9eB4aQ_6mytkbUSsYTP","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"it-LQ_z6T7sFjrP6gf6Sf","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gbEaTHdE1c1-Cx8HEdD5M","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"l8VMcQ2rRKGKHqfEp3aoq","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"NN1jSp1HkJdancYgl_eEn","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"b04Eoz0-m59ZRTGq2GOxw","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bfaziEBq69MHuWdzFGVt3","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"MLt15xsPY3r5vZTYc_PgG","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"xYYWD173kVLORX4ai5mCJ","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XqHivN5M3xAx8pZj9V7Vy","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"gFgP7YkDpeva7E3ohch9t","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5UragXLs32o2q8u7nXc5O","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5scgwatsXBKr4hxCgEHfb","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"1ByDcs6qQ4Xp-J8iv3PBm","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"lA2uaL-2ugBxQB8J_P8uB","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"8TDJVP66VrtTVxrFi8VlE","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_a_rZ8e7SANscvlzyIBlM","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YSRD-0zi6EbAU6esEY6X-","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uQx7Hd0sQlE2-_ki7-u5E","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"P-NOxtRoeJ6idoyVltYLq","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"L1Tpvznr8ao8zPNfgL04u","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"sSQchm5W25ITOsKHiHrvi","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"x5PwAuA_sE7dCydbPeO6r","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"WJjtkVNujbTWmQgCT_Rek","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"1Ad3yvAMB9sjWzUpxEBt9","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Lk-1sdcnxH2qAfEUlWh2R","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"AlYXnMRMvvvXmV3VG8E4Q","name":"Line","type":"ClassDoc","description":"<p>a line segment Object</p>","params":[{"identifier":"x","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","description":"<p>array of vectors defining the Line</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"extends":["Polygon"],"members":[{"id":"Tvpk7kq_nrsiDx2pkSkD1","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"e3A0Y_gWbn2YRrHo4c01F","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"efTvFDaabFPA74sHi9Znr","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this line segment</p>","params":[],"returns":[{"description":"<p>new Line</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}}]},{"id":"mhF27wQpKFpMA9lUMAe6x","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","description":"<p>array of vectors defining the Line</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}]},{"id":"JgHqhsn8T-LD3F_DgSHEN","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the Line contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EW0iDirfyglfjmItzAUal","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"M4PvKHX8NWXSMOofp14Lz","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"HbxHTWrZXO9LPxsEF0Cfi","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"h4f6bSAwdI-cFaN7Y24GT","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision edges and normals.\nThis <strong>must</strong> be called if the <code>points</code> array...","params":[],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}}]},{"id":"UUSFeCrmL4CkmLXergbik","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_5cZp_M5xeg5igHTtSDIW","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_ydIcj6EQJIbYjBMHgkaJ","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"pvOl3rsQdGnxFmed_ouyp","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Polygon</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2> | %3<%4>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"25siNITV_OQKyqOMfGO_6","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-EEmlaLMueeEB5OpTug-6","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"D0BWM332SIm2MdKmVHBcD","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"TQDAHKpD2cItX2oUQCvdR","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jzvfuqWhvpiXNCJUj3buO","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_pSKVznKnBr0PCqY_DYTB","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1-N74hedvP8-Y8AvPgxnd","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the Line contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"OO0XOX_xMm1mNTBeRoiH9","name":"Matrix2d","brief":"","type":"ClassDoc","description":"<p>a Matrix2d Object.<br>\nthe identity matrix and parameters position : <br>\n<img src=\"images/identity-matrix_2x.png\"/></p>","members":[{"id":"Z2ooNYjK-bwBB5LfV96AN","name":"tx","brief":"","access":"public","scope":"instance","see":["Matrix2d.translate"],"type":"PropertyDoc","description":"<p>tx component of the matrix</p>"},{"id":"NrTr9oAoI_TlQN-vt0kQu","name":"ty","brief":"","access":"public","scope":"instance","see":["Matrix2d.translate"],"type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"G15Abo_DmVHcTu8oLKCJ0","name":"apply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"9-8tf394ct15FtoQ1tUq9","name":"applyInverse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the inverted current transform to the given 2d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"tYwxjncxhTCQEO4l0IV-3","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clone the Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"1IO_kV3yKk2LnBGx2w6gd","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"args","optional":false,"variadic":true,"description":"<p>an instance of me.Matrix2d or me.Matrix3d to copy from, or individual matrix components (See {@link Matrix2d.setTransform}...","dataType":{"tokens":[{"value":"Matrix2d | Matrix3d | number","kind":"canonical"},{"value":"Matrix2d","kind":"link"},{"value":"Matrix3d","kind":"link"},{"value":"number","kind":"canonical"}],"template":"%1 | %2 | %3"}}],"returns":[]},{"id":"yQtm6eME2iDiJPRJc2DTP","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the values from another me.Matrix2d.</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"7rfd0ns_I5aOCqGH0FPHy","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two matrices are identical</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if both are equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0zFHTyFrCcItAQYwHLqMf","name":"fromMat3d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the upper-left 3x3 values from the given me.Matrix3d</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"ulFSWHGbB76CJbIpNSH9D","name":"identity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the transformation matrix to the identity matrix (no transformation).<br>\nthe identity matrix and parameters positio...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"Ous9f5WO-BdoC-x1mkRJU","name":"invert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>invert this matrix, causing it to apply the opposite transformation.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"N55L36GN28Beg95ywcqM3","name":"isIdentity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns true if the matrix is an identity matrix.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_V5p7ctIPU_oxCYWcjc9k","name":"multiply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>multiply both matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"_r65mQLfRi6CogQZG6xry","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotate the matrix (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>Rotation angle in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"du-0PZGyWL85cx_nhv4b3","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the matrix</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"tTedo5Odh15vsZZgIR4Ea","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a 2D scaling transformation.</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"pgv5OqaHcf4o0G4F-Lpad","name":"scaleX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [sx, 1] scaling vector</p>","params":[{"identifier":"x","optional":false,"description":"<p>x scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"_Mr1pPqBh5rfGkihXVv9I","name":"scaleY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [1,sy] scaling vector</p>","params":[{"identifier":"y","optional":false,"description":"<p>y scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"vAvXv8jpkh535ohKHVme-","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the matrix to the specified value</p>","params":[{"identifier":"a","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"c","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"d","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"e","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"f","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"i","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"cjlvsLOj1TSAq6mpxeCsJ","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"32TB36nGNFIsAyqUnnZSg","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"-oQA5yFtPSIu_Q4cjzjrC","name":"translateV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the matrix by a vector on the horizontal and vertical axis</p>","params":[{"identifier":"v","description":"<p>the vector to translate the matrix by</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"aNz9wciWisv1HiJdc-Se8","name":"transpose","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Transpose the value of this matrix.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"WJszP-B0pD9wjb5wJ_jXC","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the matrix position on the horizontal and vertical axis</p>","params":[{"identifier":"x","description":"<p>the x coordindates to translate the matrix by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>the y coordindates to translate the matrix by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]}]},{"id":"DMrr7qJ-MratyuvAuZRF2","name":"Matrix3d","brief":"","type":"ClassDoc","description":"<p>a 4x4 Matrix3d Object</p>","members":[{"id":"dNy5gELa9mFzgMWw_j0fa","name":"tx","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tx component of the matrix</p>"},{"id":"pezZyG6xnMQbBVi51XT8d","name":"ty","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"uKWOcyk_VvQMU-AmDmEl8","name":"tz","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"IMk2uATLWuC_GzxtAT_bX","name":"apply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"ul_VI_9HLjvGrtQdP9cj7","name":"applyInverse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the inverted current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"AvRzRDStMQsnyHFgSKDpJ","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clone the Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"zpBT58DUFbUHxEcuCw1GD","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"args","optional":false,"variadic":true,"description":"<p>An instance of me.Matrix3d to copy from, or individual Matrix components (See {@link Matrix3d.setTransform}). If not argum...","dataType":{"tokens":[{"value":"Matrix3d | number","kind":"canonical"},{"value":"Matrix3d","kind":"link"},{"value":"number","kind":"canonical"}],"template":"%1 | %2"}}],"returns":[]},{"id":"jEF4hzKim5gVfZ77w6Erz","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the values from another me.Matrix3d.</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"dn8m27EHN5PKOWqeWhd3w","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two matrices are identical</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if both are equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5WFATFE5RVAgw-SUGmxGb","name":"fromMat2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the upper-left 2x2 values from the given me.Matrix2d</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"XbrGqxm28vLEDfRiowPbL","name":"identity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the transformation matrix to the identity matrix (no transformation).<br>\nthe identity matrix and parameters positio...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"ETH94AGlTTrcOh9C9EjVJ","name":"invert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>invert this matrix, causing it to apply the opposite transformation.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"CuJ0Y5_Nfx3R0S-wnfytO","name":"isIdentity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns true if the matrix is an identity matrix.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MSPPtEUQIFnC2ZA9Ay16f","name":"multiply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>multiply both matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>Other matrix</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"Q4KJc0mPNPIem2Tn6lm1H","name":"ortho","brief":"","scope":"instance","type":"MethodDoc","description":"<p>generate an orthogonal projection matrix, with the result replacing the current matrix\n<img src=\"images/glOrtho.gif\"/><br>...","params":[{"identifier":"left","optional":false,"description":"<p>farthest left on the x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"right","optional":false,"description":"<p>farthest right on the x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"bottom","optional":false,"description":"<p>farthest down on the y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"top","optional":false,"description":"<p>farthest up on the y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"near","optional":false,"description":"<p>distance to the near clipping plane along the -Z axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"far","optional":false,"description":"<p>distance to the far clipping plane along the -Z axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"thC9Hi3-whClSQ6fs1yWd","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotate this matrix (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>Rotation angle in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":false,"description":"<p>the axis to rotate around</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"WQ-I_YzIngY-TnQZ_WCNX","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the matrix</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>a number representing the depth vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"KHNUgko_6wPt3zj4biMpX","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a 2D scaling transformation.</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"2KMmlIK5bW1a8lnwd9eWN","name":"scaleX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [sx, 1] scaling vector</p>","params":[{"identifier":"x","optional":false,"description":"<p>x scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"hv5Z6GzXGLVnmfzJWB9Nc","name":"scaleY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [1,sy] scaling vector</p>","params":[{"identifier":"y","optional":false,"description":"<p>y scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"zTcmb5xW0Q718kYKiG4nm","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the matrix to the specified value</p>","params":[{"identifier":"m00","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m01","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m02","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m03","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m10","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m11","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m12","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m13","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m20","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m21","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m22","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m23","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m30","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m31","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m32","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m33","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"ox1ZC6nl2UN9u9w8v3h9f","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"uCmMim_vuzOk1mLeTNMK1","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"gNH43vCDl1yuzcYgr5NPx","name":"translateV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the matrix by a vector on the horizontal and vertical axis</p>","params":[{"identifier":"v","description":"<p>the vector to translate the matrix by</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"hYBg7rZX5lBYVRVAOiA4o","name":"transpose","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Transpose the value of this matrix.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"C82TVjGTzjeDSjOKkJa4O","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the matrix position using the given vector</p>","params":[{"identifier":"x","description":"<p>a number representing the abscissa of the vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>a number representing the depth of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]}]},{"id":"p3McJq_vMoCFu2hTlDddU","name":"NineSliceSprite","brief":"","see":["https://en.wikipedia.org/wiki/9-slice_scaling"],"type":"ClassDoc","description":"<p>A NineSliceSprite is similar to a Sprite, but it uses 9-slice scaling to strech its inner area to fit the size of the Rend...","extends":["Sprite"],"members":[{"id":"jJMuuwP_QTIJkDMttor3O","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"y_q6vTmKg9jsE9LS-QtbA","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"6RlvO2_VJj-kTVX1Fg2DN","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"RKCeevcALKv55HIicdN7b","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"E3rQCTt7_M8Xl8ney_6j8","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"K2TyuTJpnCsZuhG2Sjinu","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"QfDoQrPVuaEfz7k--LhIH","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"Bb4R2H2Xz9zPdlX5l7GAQ","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"XFbbuzznuHIbwgNtq_B5o","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"9k0HrEi0qLIlarv8uvFDG","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"1lOPEh5bz0QLn4TVhWU79","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"-kUKWBpSdATY5W5MR9O74","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"9zNDqJgj_OGYc59xe4a4V","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"ZovQdzY7K9RrN7YxJ7CSr","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"u0byPhe6_xnJ6TsWn9RGp","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"mm3IC2CO2GI_BKAvJ6jgj","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"GxcZZaSwpxrYYM4ftn36f","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"jT_5HurMl7-7DbdERhZCF","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"YDGzb4O2P3QRxPZfIxmak","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"S089c75F3n_s8_5tU-CIM","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"2CZjQBB94I2mkUCiGDKND","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"QbgVWUcgVyqgjp3ue9kAn","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"YfPoRmUVWs81K3e86MidW","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"1HvfrzTjgKxc8M3Hng_Rm","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"6b8FLSIh9UG3Rjuz_PF0U","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"vdEo_LAIFYTw7PqMYuYac","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"--oO9ktuqoZakzbOv7nTm","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"cDbiSuD94HksA8x9DINcM","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"oYVqlmhep0h8jFTSQ42VZ","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"867UJOnQcZqFTqM_GEpQ5","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"sloWKaJGx-kPKgpAardUs","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"s1-J1WT4_PWmWiBR5CvNf","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"VjEPwwqw332eQUjIkHgFm","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"W7x7mvGPIG2QTvhkCJv2k","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"LiSOiKZOcTXXbmUCR-eae","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"GFcwdkk3GgW7lcFMzWbKA","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"jvXVf_v3Nl1Fgk29fNfBd","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gsOp_Xe_aydPv3I8yBlas","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"4w_rjCt8WX2YzD26IgdzU","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Vz-peOX93DLaGfokI77c2","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"3kt1cK_MQHVxa-9Ops7-0","name":"constructor","brief":"","examples":[{"caption":"","code":"\n this.panelSprite = new me.NineSliceSprite(0, 0, {\n     image : game.texture,\n     region : \"grey_panel\",\n     width : this.width,\n     height : this.height\n });\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Configuration parameters for the Sprite object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.width","description":"<p>the width of the Renderable over which the sprite needs to be stretched</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","description":"<p>the height of the Renderable over which the sprite needs to be stretched</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.insetx","optional":true,"description":"<p>the width of a corner over which the sprite is unscaled (default is a quarter of the sprite width)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.insety","optional":true,"description":"<p>the height of a corner over which the sprite is unscaled (default is a quarter of the sprite height)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.image","description":"<p>reference to spritesheet image, a texture atlas or to a texture atlas</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | TextureAtlas | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1 | %2 | %3 | string"}},{"identifier":"settings.name","optional":true,"default":"\"\"","description":"<p>name of this object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.region","optional":true,"description":"<p>region name of a specific region to use when using a texture atlas, see {@link TextureAtlas}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.framewidth","optional":true,"description":"<p>Width of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"description":"<p>Height of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.tint","optional":true,"description":"<p>a tint to be applied to this sprite</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.flipX","optional":true,"description":"<p>flip the sprite on the horizontal axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.flipY","optional":true,"description":"<p>flip the sprite on the vertical axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.5, y:0.5}","description":"<p>Anchor point to draw the frame at (defaults to the center of the frame).</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"wdksdskenMVynvheEZKur","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"NWsVWvKZGuVjRgfpR9vO7","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"5XgYVkSS5jUwY2QLyRGV3","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NMZ-YrTlbmRR1ozP4L68E","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yTXe_zMlPmKFTNrCgI6oO","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"LWpHPDw4pNtgFVxZNagJ8","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Ie_eQveT3lcSOEIXceEJQ","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"qo2Kz59AmCe1d5v_71VnN","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"SA47a-LnjfeZ1YC1BDoUm","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"6He9-K7NU1UchlZg4zArU","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"hus3zJm0ZstkhrGhAgfAN","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Urk8BbcbZVoZ7bW-kvqKc","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"bH_nvlX7CDFhyNWTu7LWt","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_LRihaZzd3rkadKh_1o_A","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hfnqybBw_uvCdLmXVGv-6","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8WwPLkc_QJH31Bqm8Swwp","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kj_PodcUZGQa-ifYLWXd5","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"s0HQj_smNla5X6qiaFjR6","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SngwYK-0R-ISnHswjyLAU","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"_5r4Q81BjFQLbcgrkXbB-","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BQ1Rs_oPjFFzIWqnXuV8p","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"XpU1Na9xyBkj02jPtfsjg","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"lJSvNbxjzush6yn5rEwIO","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"pDMU0tTx0-FCIsD9g-755","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RkPKpGBP6Wk8HBlCP3Kyz","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"izDRxFDkAe-9Ljy4XvyjF","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GXd5ztu4YePhXdSvu-a1J","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"NKX6rvQEYGM46rpAHjR5N","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"xy3O3qGgUQnRfb5UK4Wdd","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Ai3DRciJ7xC9AIm60PCH2","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"QXuRrk3cDM4GDQH08Es8l","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"If49E5ogc22XBb8b_-dYz","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"joCNDkWFlifxyTTp_5xCD","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ZhW3rbbnyFkmUlcM86LD6","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"xy6cnMbLuawfG10mH1Qck","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QScfZ2M9CjMtZmpFwGdfK","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"JxG4F1raawXwg1ZbUSs9Y","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"DqMB3_NrjRagRbb-rGq8b","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-aetCeGdv0Q9dc4sinog_","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"jOO5sYdgU-HWPuFRHAy01","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"JqQx3caiAzwZuSbOpvXHH","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"50bd1nbgNjoJSwHQQTduw","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"LtxT2g969JVhjWm-8vp4-","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_SoabeyFNiDD41LrD189W","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"G3BWdFOeEb1XHF7Oz1GM7","name":"ObjectPool","brief":"","see":["{@link pool} the default global instance of ObjectPool"],"type":"ClassDoc","description":"<p>Object pooling - a technique that might speed up your game if used properly.<br>\nIf some of your classes will be instantia...","members":[{"id":"MX-v3K5I3qk1gv10Dj-1b","name":"exists","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Check if an object with the provided name is registered</p>","params":[{"identifier":"name","optional":false,"description":"<p>of the registered object class</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if the classname is registered</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"faomer28-yRWXW1zATG67","name":"getInstanceCount","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the amount of object instance currently in the pool</p>","params":[],"returns":[{"description":"<p>amount of object instance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"XgWFNOi2OYkHifhtgURQo","name":"poolable","brief":"","examples":[{"caption":"","code":"\n if (!me.pool.poolable(myCherryEntity)) {\n     // object was not properly registered\n }\n"}],"scope":"instance","see":["register"],"type":"MethodDoc","description":"<p>Check if an object is poolable\n(was properly registered with the recycling feature enable)</p>","params":[{"identifier":"obj","optional":false,"description":"<p>object to be checked</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the object is poolable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"N5X5Y0Yj3xutxEdN2vrlx","name":"pull","brief":"","examples":[{"caption":"","code":"\n me.pool.register(\"bullet\", BulletEntity, true);\n me.pool.register(\"enemy\", EnemyEntity, true);\n // ...\n // when we need to manually create a new bullet:\n var bullet = me.pool.pull(\"bullet\", x, y, direction);\n // ...\n // params aren't a fixed number\n // when we need new enemy we can add more params, that the object construct requires:\n var enemy = me.pool.pull(\"enemy\", x, y, direction, speed, power, life);\n // ...\n // when we want to destroy existing object, the remove\n // function will ensure the object can then be reallocated later\n me.game.world.removeChild(enemy);\n me.game.world.removeChild(bullet);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Pull a new instance of the requested object (if added into the object pool)</p>","params":[{"identifier":"name","optional":false,"description":"<p>as used in {@link pool.register}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>arguments to be passed when instantiating/reinitializing the object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the instance of the requested object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"63uxR4gAfvHGwGkto0x2L","name":"purge","brief":"","scope":"instance","type":"MethodDoc","description":"<p>purge the object pool from any inactive object <br>\nObject pooling must be enabled for this function to work<br>\nnote: thi...","params":[],"returns":[]},{"id":"Fxo3zagtc9jr80Ij4oaNS","name":"push","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Push back an object instance into the object pool <br>\nObject pooling for the object class must be enabled,\nand object mus...","params":[{"identifier":"obj","optional":false,"description":"<p>instance to be recycled</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"throwOnError","optional":true,"default":"true","description":"<p>throw an exception if the object cannot be recycled</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the object was successfully recycled in the object pool</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9riFjIrqcEw4LrtTLoRir","name":"register","brief":"","examples":[{"caption":"","code":"\n // implement CherryEntity\n class CherryEntity extends Spritesheet {\n    onResetEvent() {\n        // reset object mutable properties\n        this.lifeBar = 100;\n    }\n };\n // add our users defined entities in the object pool and enable object recycling\n me.pool.register(\"cherryentity\", CherryEntity, true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>register an object to the pool. <br>\nPooling must be set to true if more than one such objects will be created. <br>\n(Note...","params":[{"identifier":"className","optional":false,"description":"<p>as defined in the Name field of the Object Properties (in Tiled)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"classObj","optional":false,"description":"<p>corresponding Class to be instantiated</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recycling","optional":true,"default":"false","description":"<p>enables object recycling for the specified class</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]}]},{"id":"m8cgVEfH3Wcn6T6NN_a0U","name":"ObservableVector2d","brief":"","type":"ClassDoc","description":"<p>A Vector2d object that provide notification by executing the given callback when the vector is changed.</p>","extends":["Vector2d"],"members":[{"id":"rP341Fq7lQ1aOYUjK0yKC","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"is4JUBAdLhPuSpXTCDoMc","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"qZXrpGSrdRhrbMxFObCnn","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"zwTqYtgXz9J5kFugCAFas","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"HUoJHhbJvNrN4MYq3ssQh","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"OBixhUgAeM_KXf_M_4WAf","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"HoUr_7R6sZO7kN3hC0xZX","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"XXV9UrtZxCe0Rsp3FeAvu","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"eELQcijZHZznzHBN9qaZ2","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"CbO3W0OTO-lP3UVDhE5uq","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"m3IlEKF6eyv5MXMlsQVjZ","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>additional required parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.onUpdate","description":"<p>the callback to be executed when the vector is changed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.scope","optional":true,"description":"<p>the value to use as this when calling onUpdate</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"LUUJCYj-Eu6M_8NxAiqe6","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the x,y values of the passed vector to this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"6DOgQgxYvnAiGD2q9sAhp","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The cross product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"GQ1MpO_8TUqP1STf5S2Oh","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Q6MBcZ_e7SO5GpSpvEuBd","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"qU-Z2_UDLljWdKKQOZXp-","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"kmnzaFs95Pda6iOj2ifGr","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CkFwgKPpaEnGBVCeDSFTl","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"cXypJYbUqoa4K1CYxyiJI","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"NmOojnX-kwoPAvysfC_dg","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ehYGnrB66qR-ceVVgSEGn","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"cRriGXzmZfdh_yFUYVxwo","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"OJchQj4jLN-5d1WllHaaD","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"ErnT4sR56A4Hbm59iTAiY","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"MIOyyMHQ3fiyLkiG8MUQI","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"4EEnZLkIFW2ik1nGEK3Lp","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"N63BJWgX_YR8LqEdFMUL9","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"mze5ude3rnNRu81PSPI_Q","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"Yn35xVKYZ9Na6bXHjPcGw","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"tPDSphZzDxNXH8BxaQzlP","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"o52LwKVBrZ5lypmhQJi5N","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"8VrEAE5NWn9uxTxhIGh_o","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"6RNoUd7_eIU4wrfddAIMO","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"RAufpkN1b07adz5uf4W3a","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"YLDm1peJSaIy7utQVmN9G","name":"setCallback","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the callback to be executed when the vector is changed</p>","params":[{"identifier":"fn","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"scope","optional":true,"default":"null","description":"<p>scope</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"tTBCX0DPBzVSXYhqzKpqh","name":"setMuted","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vector value without triggering the callback</p>","params":[{"identifier":"x","optional":false,"description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"YhfDfny615VNEycdc2Gtf","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"6NEgYOtUMGOl2Tr7QAoAJ","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"WK-ARBdFUe-7J98FdxR1k","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"moLbDfryf8PmZzCPo2Qdv","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"5ugSOsbgP4odzLIc5RmUu","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"E7LSAukM3_NNbsEPbxh_w","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"mA275zSTDqFoZ5ia_hmuM","name":"toVector2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a <code>me.Vector2d</code> copy of this <code>me.ObservableVector2d</code> object</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"zq8n_zPzPrw8c5NSCzZbO","name":"ObservableVector3d","brief":"","type":"ClassDoc","description":"<p>A Vector3d object that provide notification by executing the given callback when the vector is changed.</p>","extends":["Vector3d"],"members":[{"id":"JeBlDjjwVtbYBBLSFgGRo","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"FR8mRdGDLJv6jSo8FQKzu","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"PMg-lvHa0l5z-Q21JGwKL","name":"z","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>z value of the vector</p>"},{"id":"E__iimMKtYrLEel5qOKqy","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"dPD8MDoCsitfzAb8GoOor","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"B1c2ojkvWnDUvKC9lyXr_","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ICGKpwOO_5liwEZMxGE05","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"VkkQq5GLc2KEhUU1gODh6","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"mXJPHzCWWh5dwW6viERCQ","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"KUgdzdDHEnlckOfX-lVuq","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"7cNCMTZEdbBH5T_ZWkTQ9","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"zDxHfJwX3qRSMDfU1Bwk9","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":false,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>additional required parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.onUpdate","description":"<p>the callback to be executed when the vector is changed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.scope","optional":true,"description":"<p>the value to use as this when calling onUpdate</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"EE67buiUx0u-HV7hGL-r8","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the components of the given vector into this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"1ey3mMcTWfOzCBFFSGXwY","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>calculate the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d | ObservableVector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"kIiTcYQvkVaPfdqxVB9rS","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"n4HU210B0gxUb5tDBWylS","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"sqqm7OhR97RP8Sl22kVBs","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"FZPuIYHzN_cVBS0E7cAIO","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MkuT0WUchhyi_EZfjZWPE","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"eqCyn0kgLw17sao-S4jAl","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"GtOjre2JOZM60wy_91STn","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"i-kWew5WCbwWD2ePkRWhN","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"euMfesoCS-Tf1xA472i5x","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d | ObservableVector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"RkNpQnesCiO-1RMNBwHzp","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"5lO_LRPdDU7zmeayzOt6C","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"TRoIxqakeGHdfFEW-J8mk","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"PNgvIl9JanGujy43zWjMb","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"cTeoaR79DV_ygfZ7bY9bn","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"so536gEQsSdJNLsrvYtZ5","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"a2OBV2KEwIBCvNYfxCes1","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"HahEVyao4qssJ9hfFLeR-","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"BH8BXSXJETrKIyvrGL0of","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around (on the same z axis)</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"xOpNQwYzJAm0iba6ilN2F","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"LnOEt2u8ukGVuHJNTAspY","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"LYP8vGhe6BZ7m2R6zDcUj","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"WaTZITk5tDFH4JCFMuq-8","name":"setCallback","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the callback to be executed when the vector is changed</p>","params":[{"identifier":"fn","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"scope","optional":true,"default":"null","description":"<p>scope</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"G5gurhRTa7kZsFBYNaH_y","name":"setMuted","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vector value without triggering the callback</p>","params":[{"identifier":"x","optional":false,"description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"zjzqEGyLQGG8q3ayCWj9d","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"3gyh3CCyKHzQVke7R7G6Q","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"sb7f3w3RmiyFAzD3BnBp2","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"NvJjDN_xTbu2yBg4xw_cb","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"IaxEkWJ7h3MzB5qDqJvCk","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"tzAZE2qzBFBclNoa6veS6","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"bZrHEBqSgRwo0wZOR-lVK","name":"toVector3d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a <code>me.Vector3d</code> copy of this <code>me.ObservableVector3d</code> object</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]}]},{"id":"lBa6QoX4w4DlKeGN88Pqi","name":"Particle","brief":"","type":"ClassDoc","description":"<p>Single Particle Object.</p>","extends":["Renderable"],"members":[{"id":"kNRh6e6HIhpHL7R8eJwWO","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"iCld4ob7SCdByesB67xlr","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"c6DEYfBe3Tn2LKt0JzZ6S","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"Off62hoSUPcUU86l45fRr","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"CpUwb-07QbRkvZFJUAPuY","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"NuX4wks613fbIO0wZkb5J","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"JLoDTpV3wNf1laz4pUGKh","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"lGhIDucq_B_Qyl15_Ecvc","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"VPOWyFtagdKcMfzLI2Hm2","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"2ZVXb9aE5Q71r-EfvAaLl","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"_axOhK3Qk_uQRLGv0Ir8L","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"LtG9v-BHOiYKu7_eQqkSH","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"yvnJPSxXH0T4cLTcVYO6E","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"t3KKrqZzxchXBMMqVXus7","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"tefrWOvucrbpZhesD6me7","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"tcSMgZr1IaAsxPnlhfPqR","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"rg1IqAStq4KIxxzaBwn0J","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"0Dlz72IG7MyFKRxjZBRJp","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"7Tt_2ryORbFqobTe1vL1q","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"m7wRd1LBVduqRL9U2lm1J","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"eRqRAdoDae5l1GlHJqsXV","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"p2unB8npuseuJGO8HmQzw","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"iaGrC8n84yAOkzB86MF3v","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"ZcqvDoQ6cSWpxiu-pkuPU","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"BY3EH6TGt52_Chxw4qyiI","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"S_fiVTjjWYgUOJwwJ3C31","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"SeS5lSN4PWJSVDV0G_QXG","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"bYqugIvozVamhSYwMdvNu","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"7_In2M1VH4wpwmvJFMaVy","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"SLw8IhcdwehkcxfOy65f3","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"GkBzIu1bwPlxPZPxb056U","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"9qzJzyfedI-7Abv5Bc-7O","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"IG6T1272EIufyJMJl-ZW5","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"C5cpVJ2fQSayDTI-AQhuZ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"vuqQuBageI1vnjDMUtfRw","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"I5er1AWRU2ZGgshCse8ho","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"emitter","optional":false,"description":"<p>the particle emitter</p>","dataType":{"tokens":[{"value":"ParticleEmitter","kind":"canonical"},{"value":"ParticleEmitter","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"TjixTITwkf3hmMr_lDVjR","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZBIAaLoK9x7L72wtU2Yu5","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Rw84IMVl1dIao3bc8OCt4","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ut2pIozkM5p_BFr2lcbj0","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"nohULFNY05azduuIewYyl","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zrz2bfAp5xWQp9pS-2Ku2","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"iGff7R0J5Bw0v-SP7arO_","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"yI0Go8cJhvWsLOzGKrTHE","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"BZivLidJK3z41xnom-AdW","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"A7pwg0gfabhDMhM27B7ZK","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"w2B_t3JWX6K2_C5ytCNhd","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8ejQVbKHQCeaVm91VRsLx","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"sE1CjO-mtCF16C-w7dIfo","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"bI_Xx2pbksUKihJ06XLpD","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"k1Mcs5SNKsCf5Qh6csvmd","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"OYUvOcD8y7JFlGOGKYo1g","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bek-XuiijyA_8iZFm01G0","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"hATID4_pvIBZSFlzFXnNS","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"iIqZRiwUNkhedM1RwkHZS","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XrS5sm5cE5aWz-ZV_VwO7","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"HBZULDIvRRnsRoSl9sOod","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3QuOyXgKkVMMpHB5WtMnv","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"frk0EdTdLl6ZFLFkYLiNM","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"x12-4dFFHJmB9LxODFCp7","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-d7DW5AC_MguYy3SYruyP","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lDdGbNmU8HGdhhgcRXz59","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yMHX9fBGIfZ0oUuj-QHtg","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"DVd82npmUhGm-tXQGtCL_","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"cE7Q50wqykgUG6gvHDyoc","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"D0_ExBU59crF6Hfy8_sdO","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"l8dC6BzxD2eVoxNJvdW9e","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"RvxKLKvFwEXyiX0ZJDgcS","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"WveWt5lMS7Y3IDU3C6a2m","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Xchbc6D_yKs1E9uaKXXra","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"TNSyKL3a97Hr-Ru6-BhhR","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"u2Tg2QKWFEkgfe57eiAip","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"x1AmCcZUj5UrQskmCYxUH","name":"ParticleEmitter","brief":"","type":"ClassDoc","description":"<p>Particle Emitter Object.</p>","extends":["Container"],"members":[{"id":"BXmg7TY5oU1N-4JoEWTOI","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"QTROk1W394gRXmdt4qTbX","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"slMA1SwNXg7Kxn7qxfPCp","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"P2BI9JstRGhJxHKBg4YlI","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"CCBzveCwiAx1JFKbioxoK","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"SUC5BzCU8qAE4j3OxmAT6","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"Q8-8hqXppCfc-r-T1Pjoi","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"d7moeBVyjpIY-Iq9MsKu8","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"OSxWLmE105Ll8MTLS8pEc","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"Qq7VHGt4YB7BeD9KiSYSk","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"f8JFy2bZWYwKaWZ68bReW","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"uApXKT_lQN_I4sWGzuQV4","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"oCcCs4o1H81e1use1tkH6","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"hPq99mXVnVDEXoIraiNZa","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"ce7zRkjcmKA9ZhBUaxo_F","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"ZjginpxnTmza6CnrQZKHD","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"Sdu-ORyGZNZb14171H7AS","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"cxzG3wXjVIsV1a6MpJWnw","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"cXjIf5nXLEBZNdFRAZiwC","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"ioibaKYhyX4jvNXm1eHh8","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"UE_rroq1YOTAFizvEFXTI","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"ww59FCFyBl1LHWjwkZKXS","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"fHYHoF1TscbD2Um1--wgt","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"bIaV9935XE1w-98sb3KfI","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"mqO0scwltag4BLVPEF5gb","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"CeH28a90noSdS7MtlhdD1","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"NY5I2d3cIf_Tm-VaJl8Cc","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"cbI38CFz_Bwwt2xO0c6V2","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"X3rdTrz2yAI_SuQmag4RB","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"9lKM5hd3W_h6NtqMAHQki","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"-xRdxse8V-D6khtqAhEvu","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"s0oe6KogcKl6s9mMyzjLt","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"rQUIa2rysEvTDY5MWBHO4","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"nEJdKoDEWUEP_NxdMif5o","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"Qju4HIFr64XI7hOTXRo6E","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the current (active) emitter settings</p>"},{"id":"oqktHKz5g5x1pIYH0cwsp","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"L2R_43ASQ6g8N04sfam0C","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"n8fdC5-ahIciKdONvZ43e","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"YKBr5z5IRvlcFjzoafMpI","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"HYWhKj6Obb8l9CcjUczkz","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"IE7JplHMhFWioX-tXCujo","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"PnKL9fdTPn58iatuDKi8e","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"KT5z5A65t1T6iDKEXC1Ay","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ad_Tq2OkwP_pBaTs0heZ-","name":"burstParticles","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Launch all particles from emitter and stop (e.g. for explosion)</p>","params":[{"identifier":"total","optional":false,"description":"<p>[optional] number of particles to launch</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nuuwNjV17QgTDhwoNeOrP","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"D0_ZTKNuWMrOZIMp2OpPm","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4t1L4Pk1w9moKSVb_qx3b","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // Create a particle emitter at position 100, 100\n var emitter = new ParticleEmitter(100, 100, {\n     width: 16,\n     height : 16,\n     tint: \"#f00\",\n     totalParticles: 32,\n     angle: 0,\n     angleVariation: 6.283185307179586,\n     maxLife: 5,\n     speed: 3\n });\n\n // Add the emitter to the game world\n me.game.world.addChild(emitter);\n\n // Launch all particles one time and stop, like a explosion\n emitter.burstParticles();\n\n // Launch constantly the particles, like a fountain\n emitter.streamParticles();\n\n // At the end, remove emitter from the game world\n // call this in onDestroyEvent function\n me.game.world.removeChild(emitter);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x position of the particle emitter</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y position of the particle emitter</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":true,"default":"ParticleEmitterSettings","description":"<p>the settings for the particle emitter.</p>","dataType":{"tokens":[{"value":"ParticleEmitterSettings","kind":"canonical"},{"value":"ParticleEmitterSettings","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"f_eWs7Y5ds45eJ-WRWjlr","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cdHtOoGjy7s2ue0RDL5Zu","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"323RgGm311N9Ui-6QZ1Zz","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"nJ-6xO_VGW2mJ3xxNJqgM","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0jtioJCtuw0iB-rndc1Ot","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Wz-bkP743eUpVnvw7izOo","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"k9poKTQQsgu05k8OSB5Yv","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"aEAKNmGCLV_quM5TWMi4f","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"f6j6CMJh_PZhUc19JhZog","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"1C2SgU6J-udMP5UEOcX2W","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3-XLbC7RN6iDSe5ooTQXW","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XXhPRt40UWQpcrtTzVWay","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"FA86fUdB6qYeRNNM6PV0I","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"aS4WPZ0Lv-h08CGgug6v5","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"Qh59BHPBgkXOQsJqc6QbA","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gUWesgopSpJW2QxwYDGjs","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"ef7woHErrdBbTcGqL93G6","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"faMHKafYTyxR0ZH6xEOKP","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"mtbe2AqSDjqeSGNpe8mPy","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"mPnJWJBRDToaBePd2SYQ6","name":"getRandomPointX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a random point on the x axis within the bounds of this emitter</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"JmSMNkVzGPAt1eeTRQLxe","name":"getRandomPointY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a random point on the y axis within the bounds this emitter</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"zBlyJyIQKZ8rStks5to99","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vBdB5-v_t9SqC_JPatXEe","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5MByDoi1hcmNERHhT60UM","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BovVlGzBjFbi_27g5QefA","name":"isRunning","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Emitter is of type stream and is launching particles</p>","params":[],"returns":[{"description":"<p>Emitter is Stream and is launching particles</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"g4PwxCpwHxkamwjoSEvTy","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"kR3_ktW6CPCF34pn0SWh9","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"5dHcgVURvlvjFQebrj1gE","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"u6NZQut0sA67Xas9ImDT4","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"sYpDiM-464hHNshzb_8OZ","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"i_qVG68ZPwiR0dC75RGyE","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_fjSlPDHbjM5r0gGE9khP","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hVGhw8mKMWKOF0vBwepAX","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"rbW-LdK11oDdTRfmeq4Nx","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Yh7fTon0zKWCOBrzU6xC9","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4YEjAdv7MuqqiupXSaJtH","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"sL1XajcHy9ph1cYaHJ6kJ","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"jE_ASF1iMyhyBbdzeIjdZ","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the emitter with particle emitter settings.</p>","params":[{"identifier":"settings","optional":false,"description":"<p>[optional] object with emitter settings. See {@link ParticleEmitterSettings}</p>","dataType":{"tokens":[{"value":"ParticleEmitterSettings","kind":"canonical"},{"value":"ParticleEmitterSettings","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"JHqrfGKgP0tY0K5GkkhXs","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"6I7bf5cil3k7TZzPj5rht","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"BhgXd93gWe8621Q3_qEdv","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GcnWKo4u_T7VrxrgLdmb-","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0SNkIHjwKcf94GvQvb5ub","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"7cfb-zYN8H5r5TsYCVNZy","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"cp6bzexs1HQ1Mtl0MNiqO","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"UnwJXgYI9ZANIiynlD9mF","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OeILtPbp2wibUvqlXd7Wx","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"0AkGEbOaQgJZtInjZhkAV","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"K_wtLjMAQqdNkbw4kCSw0","name":"stopStream","brief":"<p>Stop the emitter from generating new particles (used only if emitter is Stream)</p>","scope":"instance","type":"MethodDoc","params":[],"returns":[]},{"id":"gAAr-yA2_B1R9Xr7Dov1w","name":"streamParticles","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Launch particles from emitter constantly (e.g. for stream)</p>","params":[{"identifier":"duration","optional":false,"description":"<p>[optional] time that the emitter releases particles in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_ZvKAfjQq6-JW5KpzAitN","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"VkoINouSNzJlsL6DCTnNC","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6WpLTs838AliK_ISzIT21","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"KRmCVvIah4D7MFbjF2jVr","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"im3HQUoyvKEFfa3uPCYY4","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"O1o9zYZ4sAkjIQ3dj01zz","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rE2Dy9R5sQLeqjmgF1knH","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"K8dea1FlFR5hpDQJcz_2T","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"FBYcgMJsSJzUd7ATSq7C8","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"pVJiaedANT8QNBCUKVG8s","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"7M-G5Lac3MlgEO1wjrOE5","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WuyYXI2HolbvbQ-F2iGJA","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"i45p6Kz-iOXVAfNU28GSM","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"t_IOhRTA_MSPRlMGtZoq7","name":"Path2D","brief":"","type":"ClassDoc","description":"<p>a simplified path2d implementation, supporting only one path</p>","members":[{"id":"YNVDd7x5WWPPnpvoU0qT3","name":"arcResolution","brief":"","access":"public","defaultValue":"5","scope":"instance","type":"PropertyDoc","description":"<p>space between interpolated points for quadratic and bezier curve approx. in pixels.</p>"},{"id":"sjMuaNUmrLLWoQOnKevmY","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the points defining the current path</p>"},{"id":"XSKOfKYgjdyVv_nCEDYHk","name":"arc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an arc to the current path which is centered at (x, y) position with the given radius,\nstarting at startAngle and end...","params":[{"identifier":"x","optional":false,"description":"<p>the horizontal coordinate of the arc's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the vertical coordinate of the arc's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startAngle","optional":false,"description":"<p>the angle at which the arc starts in radians, measured from the positive x-axis.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endAngle","optional":false,"description":"<p>the angle at which the arc ends in radians, measured from the positive x-axis.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"anticlockwise","optional":true,"default":"false","description":"<p>an optional boolean value. If true, draws the arc counter-clockwise between the start and end angles.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"mdK_GLr9Iq1QyrjAX3ITT","name":"arcTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a circular arc to the path with the given control points and radius, connected to the previous point by a straight li...","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the first control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the first control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the second control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the second control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Dvqe0FDnHcFXUvm5npYXj","name":"beginPath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>begin a new path</p>","params":[],"returns":[]},{"id":"xvuj_gEkG5bHlGfjG048x","name":"closePath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>causes the point of the pen to move back to the start of the current path.\nIt tries to draw a straight line from the curre...","params":[],"returns":[]},{"id":"OrlxyS_6ySpUREp2sDc7b","name":"ellipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an elliptical arc to the path which is centered at (x, y) position with the radii radiusX and radiusY\nstarting at sta...","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis (horizontal) coordinate of the ellipse's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the  y-axis (vertical) coordinate of the ellipse's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radiusX","optional":false,"description":"<p>the ellipse's major-axis radius. Must be non-negative.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radiusY","optional":false,"description":"<p>the ellipse's minor-axis radius. Must be non-negative.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"rotation","optional":false,"description":"<p>the rotation of the ellipse, expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startAngle","optional":false,"description":"<p>the angle at which the ellipse starts, measured clockwise from the positive x-axis and expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endAngle","optional":false,"description":"<p>the angle at which the ellipse ends, measured clockwise from the positive x-axis and expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"anticlockwise","optional":true,"default":"false","description":"<p>an optional boolean value which, if true, draws the ellipse counterclockwise (anticlockwise).</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"meeKXr0hwtiLl3-DC_Pwx","name":"lineTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>connects the last point in the current patch to the (x, y) coordinates with a straight line.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the line's end point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the line's end point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-PSSTTIc6RQEkTxLJKuEx","name":"moveTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>moves the starting point of the current path to the (x, y) coordinates.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis (horizontal) coordinate of the point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis (vertical) coordinate of the point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"k7DMOUL1tjQPPHYUXkz0P","name":"rect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>creates a path for a rectangle at position (x, y) with a size that is determined by width and height.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle's width. Positive values are to the right, and negative to the left.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle's height. Positive values are down, and negative are up.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"aff7MRyNevEXUdRgbftSr","name":"roundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an rounded rectangle to the current path.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle's width. Positive values are to the right, and negative to the left.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle's height. Positive values are down, and negative are up.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius to draw the borders. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"W5qRveRLoPbdcOfE4u3TA","name":"triangulatePath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>triangulate the shape defined by this path into an array of triangles</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}]}]},{"id":"eXwMnKvFKczNI2a20O0rS","name":"Pointer","brief":"","type":"ClassDoc","description":"<p>a pointer object, representing a single finger on a touch enabled device.</p>","extends":["Bounds"],"members":[{"id":"VeXfuRysCgYc2uLgxc_4M","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"WOABYYY_t4m_jQMf_BXL9","name":"button","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button"],"type":"PropertyDoc","description":"<p>the button property indicates which button was pressed on the mouse to trigger the event.</p>"},{"id":"0FX4lfmXBFc6K6jghorAQ","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"04NASbBjgGk5Bq3WAMxp6","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"NhUBF52F7rR2hPyl84Y66","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"Xx1rs57eUSbsHK_muQlST","name":"clientX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX"],"type":"PropertyDoc","description":"<p>the horizontal coordinate within the application's client area at which the event occurred</p>"},{"id":"rZQgJZ3E71yHTQrbaGPzi","name":"clientY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientY"],"type":"PropertyDoc","description":"<p>the vertical coordinate within the application's client area at which the event occurred</p>"},{"id":"I15TO-6IY47Z-eVbiuepW","name":"deltaMode","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaMode"],"type":"PropertyDoc","description":"<p>an unsigned long representing the unit of the delta values scroll amount</p>"},{"id":"8GCAABxxq9Fmnd5UEzbWh","name":"deltaX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaX"],"type":"PropertyDoc","description":"<p>a double representing the horizontal scroll amount in the Wheel Event deltaMode unit.</p>"},{"id":"9e0oCb7G44Co_rjJBU6BJ","name":"deltaY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaY"],"type":"PropertyDoc","description":"<p>a double representing the vertical scroll amount in the Wheel Event deltaMode unit.</p>"},{"id":"PIfTkVvQnlec4pmMUYCgn","name":"deltaZ","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaZ"],"type":"PropertyDoc","description":"<p>a double representing the scroll amount in the z-axis, in the Wheel Event deltaMode unit.</p>"},{"id":"_LN448NqCJh_VoPCNUtpe","name":"event","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent","https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent","https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent"],"type":"PropertyDoc","description":"<p>the originating Event Object</p>"},{"id":"4n9WUH05drzKObyt7d_E1","name":"gameLocalX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the holding container</p>"},{"id":"nO3cyUDikn6x4Qbfvcf6q","name":"gameLocalY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the holding container</p>"},{"id":"sesL8Y7ug0Hu2yk8BoRR-","name":"gameScreenX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the viewport</p>"},{"id":"3iqTGpvg5n7QdV_qQZQCI","name":"gameScreenY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the viewport</p>"},{"id":"qyKXMP4dpPv7pCXyWYuzR","name":"gameWorldX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the map</p>"},{"id":"R6gXWN1dpPt_5n-wcAG2E","name":"gameWorldY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the map</p>"},{"id":"HhfZDe2Fw6tlN6iXNyEHa","name":"gameX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event normalized X coordinate within the game canvas itself<br>\n<img src=\"images/event_coord.png\"/></p>"},{"id":"_QX0djOnlrSUcUqO5e55u","name":"gameY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event normalized Y coordinate within the game canvas itself<br>\n<img src=\"images/event_coord.png\"/></p>"},{"id":"TxvGSG4rk5u425PgVum4I","name":"isNormalized","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if not originally a pointer event</p>"},{"id":"MU0MLD3nF4GyTJQTTTnWs","name":"isPrimary","brief":"","access":"public","defaultValue":"false","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary"],"type":"PropertyDoc","description":"<p>indicates whether or not the pointer device that created the event is the primary pointer.</p>"},{"id":"8bYGsl6xI0zzlFT25la5i","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"2JnqtaZndb4j5PS7MZkiY","name":"LEFT","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>constant for left button</p>"},{"id":"B_4cVP_iVdS25tIvj3B6x","name":"locked","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the pointer is currently locked</p>"},{"id":"N9b_ft0i60UuNHlRmdPYr","name":"MIDDLE","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>constant for middle button</p>"},{"id":"jFbxZG68RiQWnVS0q4CUR","name":"movementX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX"],"type":"PropertyDoc","description":"<p>the difference in the X coordinate of the pointer since the previous move event</p>"},{"id":"NPo7lonzqZFOpZUGiMDt1","name":"movementY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementY"],"type":"PropertyDoc","description":"<p>the difference in the Y coordinate of the pointer since the previous move event</p>"},{"id":"n0XZCqyORhgHWA2K578ad","name":"pageX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageX"],"type":"PropertyDoc","description":"<p>the horizontal coordinate at which the event occurred, relative to the left edge of the entire document.</p>"},{"id":"ucXMvqcfx1l_eHy6HR6P-","name":"pageY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageY"],"type":"PropertyDoc","description":"<p>the vertical coordinate at which the event occurred, relative to the left edge of the entire document.</p>"},{"id":"o2Qsl0ANuBNXu3wRbm6t4","name":"pointerId","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerId"],"type":"PropertyDoc","description":"<p>The unique identifier of the contact for a touch, mouse or pen</p>"},{"id":"K3gQPMh1695_Y8HYcM-A0","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"VeHj_sDpRFbhB8DzgDAfo","name":"RIGHT","brief":"","access":"public","defaultValue":"2","scope":"instance","type":"PropertyDoc","description":"<p>constant for right button</p>"},{"id":"ND4QHy-wIEW-clkdJDeCP","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"fxtDg-bJh6gdSp9GziFGA","name":"type","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/Event/type"],"type":"PropertyDoc","description":"<p>a string containing the event's type.</p>"},{"id":"-FLqR_Xj_iBiLbrNVi9UI","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"Rr9DH6v2BtXoX-LdTrQak","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"tzowpj1y79A7YotMqoatW","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"Tzh9NPYmvz7i3yIvfIR7O","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"2kdYdLrZ6ozN6PfUscx4W","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"XgXHdqNoq_Ma2FDnQ5t5M","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"529zlDsRcfPmvPrKWwVZp","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"miA_d7us29Ojc8jJ1Oi4i","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"gqNPFIkReD9u9pohWCsVv","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"AGvkbvM3iP6zxTepVyUkn","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Plw4V96P8YsJeDPh2VZ5D","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KTR_OY6Bi5avq3k4OnsM3","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DOhd5GiMYzrXQUHl0TQsb","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"XYrEXfDtn-ntATHSnztL4","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"9FVwRDcDAN05d6x0oF1nU","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"bRK9V1aPYIGJe1FZdRy4I","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hH93OFIbiAxgsKZBnlgKU","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"T4onXNDxNu-fuZ1ROz_SJ","name":"set","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>initialize the Pointer object using the given Event Object</p>","params":[{"identifier":"event","optional":false,"description":"<p>the original Event object</p>","dataType":{"tokens":[{"value":"Event","kind":"canonical"},{"value":"Event","kind":"canonical"}],"template":"%1"}},{"identifier":"pageX","optional":true,"default":"0","description":"<p>the horizontal coordinate at which the event occurred, relative to the left edge of the entire document</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pageY","optional":true,"default":"0","description":"<p>the vertical coordinate at which the event occurred, relative to the left edge of the entire document</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clientX","optional":true,"default":"0","description":"<p>the horizontal coordinate within the application's client area at which the event occurred</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clientY","optional":true,"default":"0","description":"<p>the vertical coordinate within the application's client area at which the event occurred</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pointerId","optional":true,"default":"1","description":"<p>the Pointer, Touch or Mouse event Id (1)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"xvl5TXLjyMRgmGe5rpn3k","name":"Polygon","brief":"","type":"ClassDoc","description":"<p>a polygon Object.<br>\nPlease do note that melonJS implements a simple Axis-Aligned Boxes collision algorithm, which requir...","members":[{"id":"a-z9yErKNTsrAwdW_klQe","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"7cBG9QEHylxU-EfezoVzj","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"HZdt3kVi9P3dyKCjlS3ya","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this Polygon</p>","params":[],"returns":[{"description":"<p>new Polygon</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"frIf0Jx8oWIFZ58mBxntG","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>origin point of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>origin point of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"dqfcvPabm0ppFKe4pr3NX","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the polygon contains the given point. <br>\n(Note: it is highly recommended to first do a hit test on the c...","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pNWqJcBtpX87o9Hv6Dl6m","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"hE5u6_8tGKcX9_0bMt_IZ","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"S-wm4H_zZBbhPmw27ZBq-","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9PMAdkIhk65RoP4Spw9ZW","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"t2X8y9dHQtQOQ4KSP_cTT","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NqPwtlMWPgIqgjbZBhQ75","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"xnbr6I3wUQscno-f2Zi2k","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"TYD2QrzoTozrxZHInBvaF","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Polygon</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2> | %3<%4>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uwTnqS4T1teY7ze_wFqq6","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jLBTqaDFVfkN7WLNnxEQh","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"A7HvC2eGql-mZhbaHOnvi","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yl2c7KA3E9_Dw6zl_GvjF","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6kNwYEAlAOff_Y7aDuc7g","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9_JrgrkWMrs1RE7_eyqFK","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"7fpyB4DJP1ZE2aP7tkMRN","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the polygon contains the given point.\n(Note: it is highly recommended to first do a hit test on the corres...","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4Zpce8UEZSO2_iWMMbM7F","name":"shift","brief":"","type":"MethodDoc","description":"<p>Shifts the Polygon to the given position vector.</p>","params":[{"identifier":"position","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"iLwy2TlD_L0GXHCVz5wPg","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the Polygon by the specified offset</p>","params":[{"identifier":"x","description":"<p>x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this Polygon</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]}]},{"id":"M9ssn_lw-rRjYEg2yvi4X","name":"QuadTree","brief":"","see":["game.world.broadphase"],"type":"ClassDoc","description":"<p>a QuadTree implementation in JavaScript, a 2d spatial subdivision algorithm.</p>","members":[{"id":"akIoni6nY6-jCFYcYVnxZ","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clear the quadtree</p>","params":[{"identifier":"bounds","optional":true,"default":"this.bounds","description":"<p>the bounds to be cleared</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"f6quzT9uPbE2FnAw68xrN","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"bounds","optional":false,"description":"<p>bounds of the node</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"max_objects","optional":true,"default":"4","description":"<p>max objects a node can hold before splitting into 4 subnodes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max_levels","optional":true,"default":"4","description":"<p>total max levels inside root Quadtree</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"level","optional":true,"default":"0","description":"<p>deepth level, required for subnodes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zKvs-h3dgC5ZSXRBspQAu","name":"hasChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the node has any children</p>","params":[],"returns":[{"description":"<p>true if the node has any children</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UQn-Sfxlm5Uu2RtuzM9sF","name":"insert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Insert the given object into the node. If the node\nexceeds the capacity, it will split and add all\nobjects to their corres...","params":[{"identifier":"item","optional":false,"description":"<p>object to be added</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"rhqTnuMhcXigyB3E3tPaR","name":"insertContainer","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Insert the given object container into the node.</p>","params":[{"identifier":"container","optional":false,"description":"<p>group of objects to be added</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"DdluDPybm7pVxSf-I6jBi","name":"isPrunable","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the node is prunable</p>","params":[],"returns":[{"description":"<p>true if the node is prunable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"g0PGEacUyib7zN_fIu6J6","name":"remove","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Remove the given item from the quadtree.\n(this function won't recalculate the impacted node)</p>","params":[{"identifier":"item","optional":false,"description":"<p>object to be removed</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the item was found and removed.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ra4q1gniSuMm0Ecm40oEg","name":"retrieve","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return all objects that could collide with the given object</p>","params":[{"identifier":"item","optional":false,"description":"<p>object to be checked against</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"fn","optional":true,"description":"<p>a sorting function for the returned array</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>array with all detected objects</p>","dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}}]}]},{"id":"-qJJtUWkmYQx3jTW763sp","name":"Rect","brief":"","type":"ClassDoc","description":"<p>a rectangle Object</p>","extends":["Polygon"],"members":[{"id":"SD86U2klbGkGVfPLlSVvA","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"BTPiu25aPSet4mVMCZuXB","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"D4IJsAVH0es1ar8crtbA-","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"VcSuZMb2h3oDZb4UqmQWF","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"1PK14qV6nTJalut35_adf","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"QYgnunHMlCDW9euAxpgtP","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"4du5bwCpAKCh-ZoDE-JVx","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"S4Npv89bzfwM1vbNwQTN-","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"z7v8tavhK3CkIoTlJ7_Bp","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"V3CGt6y-WMS-ySAg3IGfm","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"yezpI_Xh-cojD0eDGyjRQ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9UnJAWJwm-CV_sXb5t1MR","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"T6Upk20Q3FFvLXwRvqTPA","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jFLxsOvjT_ArieRZ86suq","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lIfvqHXwzyQhIehyzxfy6","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"8gJYYarfqU8BEzbp5bLTT","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fgdigdWBmb9dXYMBGaSGW","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"lvme0Y70ZJDZ0QqBqTdg5","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"x-GOBqfQAHdPH3FsjKgMm","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"sYQsqlvEZ5rxATnkn_jti","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"m82QEm_XwLASuHYFIo_Ph","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6FvD6MfPa__Nc17N6axFK","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8K7L7FACjkt1kvWOWms_T","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"h3nTGmkNTLgdL_RziBnep","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QXWETeiuIApvivO2eth-z","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the rectangle</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"V4hfT6P-RWLeHgDXl1kjk","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"67iKqctL8CViZLpwwffln","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"wL1NEOzYboZPdKR8KOdP7","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wLiV5diEWksxsMylZ3ef_","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"MkfgHG-LnpdwIHbUhcr2U","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"3mNUCdlVESgszfx5RAVot","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"KmUNSWjlfdbZv0IyIhtOc","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QiuhuKmdjdgLTXe706Z23","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kM9YpBeiduY4UmVIK2okf","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uAQKmweemEL9zad-L3tec","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"VB8YFmPu3kK8FUmfDlev_","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given rectangle</p>","params":[{"identifier":"rect","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kVgHglATK0YlZDS_jnAl4","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"i0XP2yFPGVjN7euq6Lz6a","name":"Renderable","brief":"","type":"ClassDoc","description":"<p>A base class for renderable objects.</p>","extends":["Rect"],"members":[{"id":"63727ms1T_mRASllGDUJD","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"jLN9R5XRII0lJP_-Zu6P4","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Xr8pLuYsJNjT6LR1QYdQH","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"UbxgU_QaagsKwieN1xu31","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"NUQgoLxobmmj3JmRgWkV5","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"s_Pqb5bEKmx8Gag_dhPQ0","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"NHCpzPo_ARsmhOMi1mP8w","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Kd3y4SD2tEuvZIuCAEoGr","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"mA3e9vZ8cJZeqTBcD21YM","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"TdYWOMVM0TCugQwSoeYXf","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"2BJrla5GBW5OEvcXxM0tf","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"M-8IKlfoZpfi61UBrHufT","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"cFoW3unEMmjcekMBmstDm","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"_TlicebIXBTmWKWA0ZJg9","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"3AaBJbtBWh64Z3FYa_wrL","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"H3LoEP6Be4WXjYreZJVBi","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"T4e3OK9AHFjgwC9W20wI7","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"fucJwHW8_P0FyJtMXDId9","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"JC9RaQ0OY-yydC7KcaQob","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"sdjPKTHWRywN79ifxCtSe","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"SQ2wFNXxLCOdhsYy1QL5v","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"pRP_8pZm9o5KxkMQY93Nb","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"_L7DUUzv3Uvxm0yxxFzTs","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"rdZNFw5a8Xstc1TT5JP9f","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"5tfBAvJQ3dqOBqlIaObsC","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"VtXfWiJ1zD9DwhCb5VP07","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"DSZl5OU02sqscWaIqf0Rh","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"rE5xaW06C5pKaEW__jXeF","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"uWJWBKhSzuo1UPwb6b7VC","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"cbJ5Aq3aeiac9Yzr3Nivh","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"ER8NsnuMGSDG-xr6CCm6h","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"BFkLzTI5TmQLQ-VhBvU66","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"OROEprtSBAb4on8u3A86Z","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HW7R1IFrETAuqesj---0n","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0NL60VYGLPRAWrOiBWBgG","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"s9urTQoXK21WFRFQYc56R","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the renderable object (accessible through inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the renderable object (accessible through inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>object width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>object height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"AXUzvKwmW1_4_U6uAXnDw","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"eEtO2Bq-z_slWqMT2oNRt","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"N8cqXW9og2voTeXGhmGK8","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7V6SxcOk5vAJYPOcM50r2","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TbRVwu6cvSaHUAT6eGMBn","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"B7wbRGqgTmDIE7yniZlUR","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lvlh3vtcByAh9OtZdyBoY","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ENEhGiLF2SN09tx7XRGa3","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"ft4KLnj4KkMcSKbLBSxv8","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"bUryTfM-ZvNd3TsmJdUjC","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7Jmvz5JyVz_gWL8VkbDTr","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7IqH4NflTPm_t0uVWu0We","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"YAzJvYvmrV2Gy9ACgUsNj","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"hOYRn3zwVmw22B5k_9PoT","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WJcSOyElFAJ59XbvinMOC","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"GzALDKq57IQ4oK7qc1N0I","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GQv8uXJ0pIt9Y0xxNSzqq","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"freNOpqmaIxkMfQR2NlTx","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0FHQ7GISVtnvuKTiJYcQK","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GUze96F5NhCvJMGu0p57b","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9JONEXrsoZVtYyAyr_Uvs","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7yydfyHWa1MuuIVRSBuDg","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"4TblWTTdDUCaC2lBcOPfb","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"XB5jgYNvkGHVXzqhQMhpp","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"g8uR1cHq8Ryb68kxXXCx3","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"05KvTG4fWXMIyi60zl58B","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"tA9J1mB0VH5nSlb33cUdL","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ChUt_IEo8xzDQInu8tumf","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4mvwmEIgTQZJ-swTzTKCa","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9zbJ42R6l2jzxaf3Mra51","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"MQyshBpz3tcdfcyLl86yL","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"xQXNqW0vJg85-2EbvmVbU","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"e1cy35g452LnLT09OZcIB","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Wu96ayEkztZ5R_NZ-Z9p6","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"8HpzL3TIMG1cXJT25pjgu","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"umQ_ZzalAPWvcXrWT4I9L","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"LLvksO0ycZnKyeyQxXRcR","name":"Renderer","brief":"","type":"ClassDoc","description":"<p>a base renderer object</p>","members":[{"id":"cmvekY6KA1TG9nl2z8_H-","name":"Texture","brief":"<p>Alias of {@link TextureAtlas}</p>","access":"public","deprecated":"since 10.4.0","see":["TextureAtlas"],"type":"ClassDoc","members":[{"id":"mvOYThUShXaTy1bTm9d3x","name":"constructor","brief":"<p>Alias of {@link TextureAtlas}</p>","access":"public","scope":"instance","type":"MethodDoc","params":[]}]},{"id":"2HJsfDfMgg97IH-94x6JD","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"9dbV6qMm35b1wNnPkdauE","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"sFCWre2EH6fvQIWrjbQmz","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"N5q7QPvsQLLsTLvuEqSP4","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"uDopDivEPiDIv4dQjIfFE","name":"clearMask","brief":"","scope":"instance","see":["Renderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"MzpokibV7G7y_aSsS87eO","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"dSgMcudi99OyFPYu93aNt","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing, use false (default) for a pixelated effect.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.blendMode","optional":true,"default":"\"normal\"","description":"<p>the default blend mode to use (&quot;normal&quot;, &quot;multiply&quot;)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel rendering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.verbose","optional":true,"default":"false","description":"<p>Enable the verbose mode that provides additional details as to what the renderer is doing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7Jrjibs3BQZjdw3q9QLIt","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"vUucV2Ig7gptPyCGlYy6V","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"csj6KbEJPKEZHuINjNhta","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"KCTczy3xZeVeV7zZzwyHL","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"CXFYZqbbVPIZyz_OfHG9P","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"uN9TpLGnc1Vp6oK-KxTHZ","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"cL56K6LL9R-xpZzJbChYO","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"qkgbYg6E6GN2ERDyO6I1T","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding 2d Context<br>\n(will return buffered context if double buffering is ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"ymnTyRABLQUqo9j42QBm4","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"c1QMnrAKmvhhqTGyBauzj","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"iN8ZaCcB9ZVyCm8ODEGr1","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fetYFq1cNac5km4tE811J","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"t7SWFtz4mq2Y0IC2Mv8a0","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-LQlB6PXkyZnQ7MH43Gz0","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"RgnkDQBLpPGox11m6dr_L","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>the shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"emqt75HdHXWAQ6zimqBVC","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"LMITJwhG52gSrXNKviVAp","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"fgS2h706_KEtNdtLOt93l","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"yY3Mq1PF0cipvvUNb_guR","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]}]},{"id":"5v1jacdoiybrU2-ZpUbi-","name":"RoundRect","brief":"","type":"ClassDoc","description":"<p>a rectangle object with rounded corners</p>","extends":["Rect"],"members":[{"id":"utytTsCsfKiB2fXdyB1Je","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"V1zhdAni5-VN9m9pN8Qae","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"buOE9wH7qPfeqPsdekY6Y","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"vpNjWbem7j667s9yz1F0p","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"k-gKEwevSJMMoRNm3S4Mp","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"J1eBz4sCrANbcI7MmAbsQ","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"Fv5md7PS5RgYmdJq9Q-F6","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"vuvf7G8nyGijiomNY9lsC","name":"radius","brief":"","access":"public","defaultValue":"20","scope":"instance","type":"PropertyDoc","description":"<p>the radius of the rounded corner</p>"},{"id":"b6Q4TLK5tMU6t-dCJvWzf","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"72xvH1Az7LhTeFjAoEmE-","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"7FQsl0tMMlIjqTPXmTDOi","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"hfquV7wPdVMYJhL3IGbqc","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ByxKMdVlZ_TfC4r9cWvLA","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this RoundRect</p>","params":[],"returns":[{"description":"<p>new RoundRect</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}]},{"id":"VaavR-ZXNQVrOAN3KkN2M","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the rounded rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the rounded rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":true,"default":"20","description":"<p>the radius of the rounded corner</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"LWDWFc1P9DvuL-VTVKWmJ","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rounded rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gik5JPnfoCMH2EQMK18s-","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position, size and radius of the given rounded rectangle into this one</p>","params":[{"identifier":"rrect","optional":false,"description":"<p>source rounded rectangle</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}]},{"id":"_Mkidz_sim1S0CWbUrGR0","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this RoundRect is identical to the specified one</p>","params":[{"identifier":"rrect","optional":false,"dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Wf9qxCcoWcai14pTlHFBg","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"cyvjH24SWaq4cjrPCOdE7","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"pqof5w71t9Dxp2TcCVpTR","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gVxM_EWSxV-XRMtxGzjBg","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MTgJcjfDgkAq9cxiScrRA","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2fCUyk5AnNxrB1AWIiCMD","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BiEq1suhahso467mQl7_D","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"XzQz_IYL_oe-Ocim4FKAW","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"VaPDoC8e5MoPtmGAr_UE-","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the rectangle</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"qeUppBXhAgbfwZb4ZIV2n","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"hRrHm9FCO9CWMj2Qy1w1W","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"UKvB_niCurbLRYDp4Dt3V","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"csQp7abYpZ-Z_YiYPgegg","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"R13M2MbN7uztr-NV6AUfF","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"txzqhnt1pwyMesKkYWuZN","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Lnj__GAjH9EbBNbQsR4s6","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-LvVUd70JFH3p_0aWpEAj","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"FOTOOIIJ2Q2grfWoRgvLE","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Mi27DIdqO4vOdAtMg9edu","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"g7mhufy4jKVNUQLSPmlkh","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rounded rectangle contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"idQrBgV51C1vWQigjsWBS","name":"Sprite","brief":"","type":"ClassDoc","description":"<p>An object to display a fixed or animated sprite on screen.</p>","extends":["Renderable"],"members":[{"id":"1OdVM9JpUVwhwOI_wNzde","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"KaSj2yzvpjW5hmdcgIxLA","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"YwJOqNs5vdgLlU65MrFBf","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"WZwFScHAqz65hv0G2DjMj","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"yn1jnN5jdTnZxS8_CADZH","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"yVjmLAL2sMHQG-F2Bn6BL","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"kMBdjMGqz-W4LS3AJU1w6","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"3Lv9SeZb_l11ACo4XdHOF","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"3ekvY2hnjLYGiVZcMdtyc","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"ADv47sDxIuHzksOh41-gv","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"egcBlV-iCGyCZKtPLUwFy","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"IIVeWC-Fap2uVF-Jyw1zj","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"Lj8m3THYqePPLsEmZatPK","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"OHei_ve24fIxFuwb2HjNc","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"mSNApsh9KT3t3jTVv0fGs","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"2f1G_8flrrZVzD0uyShLx","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"EK4ttXnxJQmmBH855BK1N","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"47ysEtU-FjQpCg04y6FNB","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"U6QFwR9ZRYKjHuoUMY4Qx","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"2PIldA_v1OhCfK2kYIGh3","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"3pdCAzPAB5w0VeI1ei_BM","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"3BaOOH7-2eQd0cE9Hs3hy","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"MZS_Z_k1czF3YIJWXyPWT","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"Qr60wwA3rXW_-H6T5G6qk","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"iXnFPGzQIT3pWziJ00wIX","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"LWdnfayywWhjRDtguUzgj","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"M4-gJzkVp2roPIV6Y3NVX","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"cykyA6A68JLVPOBrUrI6S","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"CJJrpLJRLS139IzQNFu4b","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"4K9kZcdP5xcqEHGOaOera","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"TTwQ8wOZUXf3N5x2yElSD","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"pCN4uriM0COAHjYz40UIC","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"wa3FLQMLkkkNoj9WPDT3z","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"Bg6J-apJkx9ynESZxEFQk","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"rxbP5P8bce01Fo7hGq60D","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"OGUsQ1pBi3t4LoQkEm0Rn","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"GbEoBin7OC0goOs3J3wmg","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"I-gEKUhotUhZq7IFWyNxL","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"x4vYABdR_RCof60vv_HNS","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"f8N8duCEvwmL3PUzwi_Uy","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"QnC9YF0MeiAMnyo0U-ei5","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a single sprite from a standalone image, with anchor in the center\n var sprite = new me.Sprite(0, 0, {\n     image : \"PlayerTexture\",\n     framewidth : 64,\n     frameheight : 64,\n     anchorPoint : new me.Vector2d(0.5, 0.5)\n });\n\n // create a single sprite from a packed texture\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\"),\n     me.loader.getImage(\"texture\")\n );\n var sprite = new me.Sprite(0, 0, {\n     image : game.texture,\n     region : \"npc2.png\",\n });\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Configuration parameters for the Sprite object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.image","description":"<p>reference to spritesheet image, a texture atlas or to a texture atlas</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | TextureAtlas | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1 | %2 | %3 | string"}},{"identifier":"settings.name","optional":true,"default":"\"\"","description":"<p>name of this object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.region","optional":true,"description":"<p>region name of a specific region to use when using a texture atlas, see {@link TextureAtlas}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.framewidth","optional":true,"description":"<p>Width of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"description":"<p>Height of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.tint","optional":true,"description":"<p>a tint to be applied to this sprite</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.flipX","optional":true,"description":"<p>flip the sprite on the horizontal axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.flipY","optional":true,"description":"<p>flip the sprite on the vertical axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.5, y:0.5}","description":"<p>Anchor point to draw the frame at (defaults to the center of the frame).</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"sRnx6ymmypKgHKee9MJEP","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Os5C75DnH4ltb6akQWnvZ","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"mlIPT18VJ8CchpdX3MO99","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"tazKF3WhY8vsopPOH25uP","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ygQ_TY_H5igD_Qblfuryu","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"ZC1wPFOcVD8PrCovg3aYC","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"U86p1ENRFcVfnkJLb-Lvu","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5jZWi90dmqEnF6_4tDhxs","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"--yyBG3EIfYf_W5FhQiJA","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"v1DquLyc1RidzGMdkARqi","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Ia-5ldFxGzvlEXFUcLWcm","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"ELuAY6MYlktAAZ2RmzmjJ","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"cdnznRv3EmodUv_dm59jC","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"qSJ8OdzWuUsOH9roniQek","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pKA1T4o1FdrKLcGAjJqlk","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lAgW4UM69ck2TTZlRtqOA","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bQqKpnMObZSrG1qIfLgX_","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"X9vyC1qN9C2t7VPGBxCXT","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IJRrCfHO4sDGMHK-wrbrI","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"vt-16WMu85W3Xn7UO-kJw","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UrkDy61GT5mHu-vFwYs85","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"I53TZTfUBSMtW2M-ocCpd","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ppOP3Tdhm37uJLorXZp9k","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"fOC2POhkykTb6Cb3j9udu","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Q4ud5JnoEcrorwfr3Fc8H","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6rC-5NR1OWfpXDqNQFYIc","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2cUOwhRjbtPZ06WOs4ZOE","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"4I3qLNvSXYIv2S8xreUHG","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"Bqp_Tc4Mn5s_05C8rzmTq","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"W7zG9_SXuuFr_GKA8Ys4v","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"abe1j6QXATDSD8aqV4-ax","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"21lnlUH8S1oHtdICsUMAd","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"l1kbLCjJpfE0-_9bkAG7B","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"TJPLSb1R_kgs5nHA1nNxx","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YIVRp5lNwPep0tiMy_U7b","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"F-j80D99jJGGislNykgcK","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"t3K5zr9UnrzV5BlTUqYPm","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"QEAKPUvFdVlQbguADeLJH","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"tHnCTtO1yL2x7ClFnOAbC","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"nDjI_wqV3C1Ppf10Sta_X","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"S2AVI3VDmkFFVQVBq06yj","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"76jRYS2rhAVGnnm40oLbZ","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"LZsH9CP_rfBta1DNMsmKH","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0yIMWN7DmbEc4WaxqtjqP","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"Ud58O-yiNJRBXydSf9-uT","name":"Stage","brief":"","see":["state"],"type":"ClassDoc","description":"<p>a default &quot;Stage&quot; object.\nevery &quot;stage&quot; object (title screen, credits, ingame, etc...) to be managed\nt...","members":[{"id":"jqTlYXiBCpkWfcaz7jyys","name":"ambientLight","brief":"","access":"public","defaultValue":"\"#000000\"","scope":"instance","see":["Light2d"],"type":"PropertyDoc","description":"<p>an ambient light that will be added to the stage rendering</p>"},{"id":"BGphUxdcMjltC3zvqpnBE","name":"cameras","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The list of active cameras in this stage.\nCameras will be renderered based on this order defined in this list.\nOnly the &q..."},{"id":"Nilq-AqhptuSfl3SDqaXM","name":"lights","brief":"","access":"public","examples":[{"caption":"","code":"\n // create a white spot light\n var whiteLight = new me.Light2d(0, 0, 140, \"#fff\", 0.7);\n // and add the light to this current stage\n this.lights.set(\"whiteLight\", whiteLight);\n // set a dark ambient light\n this.ambientLight.parseCSS(\"#1117\");\n // make the light follow the mouse\n me.input.registerPointerEvent(\"pointermove\", me.game.viewport, (event) => {\n    whiteLight.centerOn(event.gameX, event.gameY);\n });\n"}],"scope":"instance","see":["Light2d","Stage.ambientLight"],"type":"PropertyDoc","description":"<p>The list of active lights in this stage.\n(Note: Canvas Renderering mode will only properly support one light per stage)</p>"},{"id":"x5jabFma8bM8OtKBP9KvF","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"4DvEWGAVUuzm6UCAMrDH_","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"settings","optional":true,"description":"<p>The stage` parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.cameras","optional":true,"default":"[new me.Camera2d()]","description":"<p>a list of cameras (experimental)</p>","dataType":{"tokens":[{"value":"Array<Camera2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"settings.onResetEvent","optional":true,"description":"<p>called by the state manager when reseting the object</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.onDestroyEvent","optional":true,"description":"<p>called by the state manager before switching to another state</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"AQjow3Jy9ACxSkZa-w7LR","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDestroyEvent function<br>\ncalled by the state manager before switching to another state</p>","params":[],"returns":[]},{"id":"WA1u9r03sTbBsyDm05cfj","name":"onResetEvent","brief":"","scope":"instance","see":["state#change"],"type":"MethodDoc","description":"<p>onResetEvent function<br>\ncalled by the state manager when reseting the object\nthis is typically where you will load a lev...","params":[{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>optional arguments passed when switching state</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]}]},{"id":"poYISlIt7CfD8gKPq-oqT","name":"Text","brief":"","type":"ClassDoc","description":"<p>a generic system font object.</p>","extends":["Renderable"],"members":[{"id":"3hLix5ewDO6BLOrKp6vMN","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"vuTkaoVo73foli3muWur3","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"f2y8FWgG6c4HDUJcOBgXN","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"tX6QrtdNWlwW3TbmF-P5S","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"93IYRgsz_tlZVjUVri0gF","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"cxzPeb88fcCRzpfCP0mwA","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"A87ILvHg63mCYdO4H42Og","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Rrj5G2EU85yZ7Ge2kAguQ","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"8qUSnYhcRaoQX4MU4Wzll","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"_Uia_Gf75DkFNN3Bkctjy","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"hd-Hi5fYKzHusQIw41lQq","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"dOiAMaP_G-uCC9twpcLar","name":"fillStyle","brief":"","access":"public","defaultValue":"black","scope":"instance","type":"PropertyDoc","description":"<p>defines the color used to draw the font.<br></p>"},{"id":"OJy5wCuNLbjKESlTJl8Kl","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"d2Gnu_geJZD7CHahAybNW","name":"fontSize","brief":"","access":"public","defaultValue":"10","scope":"instance","type":"PropertyDoc","description":"<p>the font size (in px)</p>"},{"id":"ti546XaJH7vu18_BPE5-o","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"Rqu31mQHsRW3Zez25u90s","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"NaqEGVv14wQ-2_sgmoIXn","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"W1m-YiAx0_TjYW1wwm4VX","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"KaYYZg-PP_NxDxJFJzDZ0","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"SP1oaey_gbPRcAIuAyWxE","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"9CEiyIgUZuEAae6GMY-1A","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"-bk8ym4lOOpNmK9CwfMN_","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"2o811yfMNimR8L0KETbnp","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"tn06C5i8GaBECira3EeZx","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"e3xl1asAx4cEHy_Dt1q2j","name":"lineHeight","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Set the line spacing height (when displaying multi-line strings). <br>\nCurrent font height will be multiplied with this va..."},{"id":"Vr1WYcxXq9zyrMZdcrVop","name":"lineWidth","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>sets the current line width, in pixels, when drawing stroke</p>"},{"id":"MBfOkBRdtJA1KYyjs4Wq1","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"BoJ_LwlRejTQeaZDhDEi9","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"2MK9jZF6aywVZc3Nbdx0H","name":"offScreenCanvas","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether to draw the font to a indidividual offscreen canvas texture first <br>\nNote: this will improve performances when u..."},{"id":"mCDILnf09h4veTnFgwG38","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"fLOLl0MZi-JwFaXtrHCEC","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"FyikEVK8mjs65Xg5DGTr9","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"cTW-Ezb7UZt-6uDo5DKe2","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"aN7qeLPcInS2FCVBSx_xh","name":"textAlign","brief":"","access":"public","defaultValue":"\"left\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the default text alignment (or justification),<br>\npossible values are &quot;left&quot;, &quot;right&quot;, and &quot;..."},{"id":"Cnc3BrzmxQ5RnxT-TpDg7","name":"textBaseline","brief":"","access":"public","defaultValue":"\"top\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\npossible values are &quot;top&quot;, &quot;hang..."},{"id":"dvbFEE1rlimymSfvkmjcW","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"FUUvI7h8zbkD-WY_alWTT","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"CFYAMBMVwYQdo4EYuIUXi","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"lPR51i1Y8rGItXmI4JyBS","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"3VEIDa0GNk7SON0hwh-71","name":"wordWrapWidth","brief":"","access":"public","defaultValue":"-1","scope":"instance","type":"PropertyDoc","description":"<p>the maximum length in CSS pixel for a single segment of text.\n(use -1 to disable word wrapping)</p>"},{"id":"iO6KPgdGrD80tIWB8vZBg","name":"_text","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>the text to be displayed</p>"},{"id":"dUgUDwNa26rySJrYpt165","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"WzEfNe1ZdrgkURazAa3Vj","name":"bold","brief":"","scope":"instance","type":"MethodDoc","description":"<p>make the font bold</p>","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"xfmodNiTonZ6tFCloOCxC","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"vj0CqpaZoZcGIqCl7y_V7","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"z8Lcoxma9jiGJcgNWiFO1","name":"constructor","brief":"","examples":[{"caption":"","code":"\n var font = new me.Text(0, 0, {font: \"Arial\", size: 8, fillStyle: this.color});\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>the text configuration</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.font","description":"<p>a CSS family font name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.size","description":"<p>size, or size + suffix (px, em, pt)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"settings.fillStyle","optional":true,"default":"\"#000000\"","description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.strokeStyle","optional":true,"default":"\"#000000\"","description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.lineWidth","optional":true,"default":"1","description":"<p>line width, in pixels, when drawing stroke</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.textAlign","optional":true,"default":"\"left\"","description":"<p>horizontal text alignment</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.textBaseline","optional":true,"default":"\"top\"","description":"<p>the text baseline</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.lineHeight","optional":true,"default":"1.0","description":"<p>line spacing height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.0, y:0.0}","description":"<p>anchor point to draw the text at</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.offScreenCanvas","optional":true,"default":"false","description":"<p>whether to draw the font to an individual &quot;cache&quot; texture first</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"settings.wordWrapWidth","optional":true,"description":"<p>the maximum length in CSS pixel for a single segment of text</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.text","optional":true,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[]},{"id":"RrhVWFa2sq6HlOzv906Hn","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pRFnAxO2oVazVhDr9lcAZ","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KiiCO9LfK6kR4m2s8AIiv","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"fTrm_z0OgRIAexEosBauH","name":"draw","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw a text at the specified coord</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"stroke","optional":true,"default":"false","description":"<p>draw stroke the the text if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"H2nCGLRM-5H4TyDP-YxrV","name":"drawStroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw a stroke text at the specified coord, as defined <br>\nby the <code>lineWidth</code> and <code>fillStroke</code> prope...","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-7OrB1DbTmdH9dqHR3aUO","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wMUS9xeygOV7MG8-Ut_op","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"T3rAo7GhAQDFsCeafRZVQ","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"fhSUpzG5I2ZDeRjqqn8wg","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"nOLIKzqtYLyaXPT_ZB3EX","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"vsnCfgCgSyxV4_MIMF_L_","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"jGlvvM6DTZGQ8_G8So47w","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UChxIoOp2Uc9VQZzUhD81","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OU64TMLH2fmPY_UWPxHlu","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"E4m-k65h5ciIq8kckrLTi","name":"italic","brief":"","scope":"instance","type":"MethodDoc","description":"<p>make the font italic</p>","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"gy6JTcaeIN7b_sw-bHK_9","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pVlpYOrO0QrigpbMJ31LU","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in pixels</p>","params":[{"identifier":"renderer","optional":true,"description":"<p>reference to the active renderer</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a TextMetrics object defining the dimensions of the given piece of text</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"iBBNZF4PYA8Fx5_uIQ7Xk","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LkykBd1fyJkSCoFWpYGQ9","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"YZHhGploC4KI5L6NM6lrT","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1n99y29ebudDbzVNa8PWv","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rll96FJQkHB37DKkGN0OU","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"f4BgJ1nMZfxTdE8qCVqgp","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"S32SrpcoYnVwDOBRF-CnE","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"FJKPDpBsdurBjjR3TdrS_","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"LcjxNIseyY9ocBfKKpujh","name":"setFont","brief":"","examples":[{"caption":"","code":"\n font.setFont(\"Arial\", 20);\n font.setFont(\"Arial\", \"1.5em\");\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the font family and size</p>","params":[{"identifier":"font","optional":false,"description":"<p>a CSS font name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"size","optional":true,"default":"10","description":"<p>size in px, or size + suffix (px, em, pt)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"etkTOc5uODamwvKYNG9ga","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"i00v4d64N9W6bey1MOke9","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"pGjgwqrD3mHbrzocKeJp3","name":"setText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the text to be displayed</p>","params":[{"identifier":"value","optional":false,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"number | string | Array<string>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | string | %2<string>"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"VM4_sVP5n8iPQmg1Ot9vt","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qm5q-1DCHSxNw5fycBQo4","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jxHCsBbQ9sWmooQ6fALoR","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rO16HiretB_cxWBxk0iu9","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BJ_j7LVDGYZJc8LlVuzG-","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"DlUX9LAohQ_JrfXMJtau4","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"rB1fx_To8rNbb2Z3ENbR4","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uwyl253AoSr_8weDKGP1k","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"1FBFnaxIc77w7wgnlBdoT","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ZClYJtxjPEMJ63kUNKfD8","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"C75Ct1uJLQ1rmwhISO3eg","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"t3Iaz5vUKhjk0CDNNZSDr","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"PyDwM_IRsVgiPYO6JlgZP","name":"TextMetrics","brief":"","type":"ClassDoc","description":"<p>a Text Metrics object that contains helper for text manipulation</p>","extends":["Bounds"],"members":[{"id":"iNJ_eVZpbQRXo8pVh_0gp","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this TextMetrics object</p>"},{"id":"t1KmgP88lshkCLm2wGAUu","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"6nYtYITUCDbx1sHP90K4O","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"DtEYo-9LlfJdTYEh3aZXk","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"QmKtxOakiPyVGwnf5KqHh","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"KQjThPbCc5HQgnsY7Ijoe","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"ckSTju4tTClCzes0CA1NM","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"bInwtRNH6QJP654iZLAY2","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"l2iFiPH36zdBDy9NT2Ej3","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"tb2B6sjTYxyBej-V1_ezP","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"nGQdbvq5uX8-nY7yXAtuf","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"iXmZWyo-hhzkdGqblDn__","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"tigwWm-iwF3ytpzhJuuKP","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"brJLsE31c2G3P7wXo4-oh","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"4XjtVF6Ym9A8qi7PESGR3","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"j7f8v6-lPhf89fL0f56QJ","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"IuJdbK-1YuECoRD87wKIK","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"12Ar1KdwirMY6f_0INRu4","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"ancestor","optional":false,"description":"<p>the parent object that contains this TextMetrics object</p>","dataType":{"tokens":[{"value":"Text | BitmapText","kind":"canonical"},{"value":"Text","kind":"link"},{"value":"BitmapText","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"tYMiTGm0oFuILbkrw0ZSC","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dVgDvZXra8W4OQp2PBZRB","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0_DZtP5HHzlbGoEJYh5Ir","name":"lineHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the height of a segment of inline text in CSS pixels.</p>","params":[],"returns":[{"description":"<p>the height of a segment of inline text in CSS pixels.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1ZbAFxJ7Wrr2M1jHAXMMi","name":"lineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the width of the given segment of inline text in CSS pixels.</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the width of the given segment of inline text in CSS pixels.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ur1bz8hV7EHzmk8xYWwNp","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in CSS pixels</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"vGb31TQ0OScnATBju1eem","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lSIHWSr2BF-6OHPWYszuR","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hD6jIM97JiVpfn1Yznomt","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"TVUJZESyewdqNdmahECL6","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"FHHw8_ECUUW7AyVJ46al3","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tlS4zfPOyJbrsp6N_yogo","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"mfKGpOHxOl8qD3ACIicSV","name":"wordWrap","brief":"","scope":"instance","type":"MethodDoc","description":"<p>wrap the given text based on the given width</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be wrapped</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}},{"identifier":"width","optional":false,"description":"<p>maximum width of one segment of text in css pixel</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>an array of string representing wrapped text</p>","dataType":{"tokens":[{"value":"Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<string>"}}]}]},{"id":"nmiJQqmaQqjvtalXM1HLd","name":"TextureAtlas","brief":"","type":"ClassDoc","description":"<p>A Texture atlas class, currently supports : <br></p>\n<ul>\n<li>[TexturePacker]{@link http://www.codeandweb.com/texturepacke...","members":[{"id":"w2l9eEUC2fuzaAcvTe2v3","name":"addRegion","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add a region to the atlas</p>","params":[{"identifier":"name","optional":false,"description":"<p>region mame</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":false,"description":"<p>x origin of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y origin of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the created region</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"JhfZ24mjbNEasoHd5hAOa","name":"addUVs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add uvs mapping for the given region</p>","params":[{"identifier":"atlas","optional":false,"description":"<p>the atlas dictionnary where the region is define</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"name","optional":false,"description":"<p>region (or frame) name</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the created region UVs</p>","dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"ZGsH9zIjO6qMItx19ROwz","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a texture atlas from a JSON Object\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\")\n );\n\n // create a texture atlas from a multipack JSON Object\n game.texture = new me.TextureAtlas([\n     me.loader.getJSON(\"texture-0\"),\n     me.loader.getJSON(\"texture-1\"),\n     me.loader.getJSON(\"texture-2\")\n ]);\n\n // create a texture atlas for a spritesheet with an anchorPoint in the center of each frame\n game.texture = new me.TextureAtlas(\n     {\n         framewidth : 32,\n         frameheight : 32,\n         anchorPoint : new me.Vector2d(0.5, 0.5)\n     },\n     me.loader.getImage(\"spritesheet\")\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"atlases","optional":false,"description":"<p>atlas information. See {@link loader.getJSON}</p>","dataType":{"tokens":[{"value":"object | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"object | %1<object>"}},{"identifier":"src","optional":true,"default":"atlas.meta.image","description":"<p>Image source</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | string | Array<HTMLImageElement> | Array<HTMLCanvasElement> | Array<string>","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | %2 | string | %3<%4> | %5<%6> | %7<string>"}},{"identifier":"cache","optional":true,"default":"false","description":"<p>Use true to skip caching this Texture</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"tLha3l606l0AndAQ10X5y","name":"createAnimationFromName","brief":"","examples":[{"caption":"","code":"\n // create a new texture object under the `game` namespace\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\"),\n     me.loader.getImage(\"texture\")\n );\n\n // create a new Animated Sprite\n var sprite = game.texture.createAnimationFromName([\n     \"walk0001.png\", \"walk0002.png\", \"walk0003.png\",\n     \"walk0004.png\", \"walk0005.png\", \"walk0006.png\",\n     \"walk0007.png\", \"walk0008.png\", \"walk0009.png\",\n     \"walk0010.png\", \"walk0011.png\"\n ]);\n\n // define an additional basic walking animation\n sprite.addAnimation (\"simple_walk\", [0,2,1]);\n // you can also use frame name to define your animation\n sprite.addAnimation (\"speed_walk\", [\"walk0007.png\", \"walk0008.png\", \"walk0009.png\", \"walk0010.png\"]);\n // set the default animation\n sprite.setCurrentAnimation(\"simple_walk\");\n // set the renderable position to bottom center\n sprite.anchorPoint.set(0.5, 1.0);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Create an animation object using the first region found using all specified names</p>","params":[{"identifier":"names","optional":false,"description":"<p>list of names for each sprite\n(when manually creating a Texture out of a spritesheet, only numeric values are authorized)</p>","dataType":{"tokens":[{"value":"Array<string> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<string> | %3<%2>"}},{"identifier":"settings","optional":true,"description":"<p>Additional settings passed to the {@link Sprite} contructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"KPZuHKQebk6R1KiWj5zge","name":"createSpriteFromName","brief":"","examples":[{"caption":"","code":"\n // create a new texture object under the `game` namespace\n game.texture = new me.TextureAtlas(\n    me.loader.getJSON(\"texture\"),\n    me.loader.getImage(\"texture\")\n );\n ...\n ...\n // create a new \"coin\" sprite\n var sprite = game.texture.createSpriteFromName(\"coin.png\");\n // set the renderable position to bottom center\n sprite.anchorPoint.set(0.5, 1.0);\n ...\n ...\n // create a 9-slice sprite\n var dialogPanel = game.texture.createSpriteFromName(\n    \"rpg_dialo.png\",\n    // width & height are mandatory for 9-slice sprites\n    { width: this.width, height: this.height },\n    true\n );\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Create a sprite object using the first region found using the specified name</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the sprite</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings","optional":true,"description":"<p>Additional settings passed to the {@link Sprite} contructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"nineSlice","optional":true,"default":"false","description":"<p>if true returns a 9-slice sprite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"Sprite | NineSliceSprite","kind":"canonical"},{"value":"Sprite","kind":"link"},{"value":"NineSliceSprite","kind":"link"}],"template":"%1 | %2"}}]},{"id":"JZTaW7VaG3a9pYol6O4H1","name":"getAtlas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the default or specified atlas dictionnary</p>","params":[{"identifier":"name","optional":true,"description":"<p>atlas name in case of multipack textures</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"I19BYgpdOMckIZsBOD_00","name":"getFormat","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the format of the atlas dictionnary</p>","params":[],"returns":[{"description":"<p>will return &quot;texturepacker&quot;, or &quot;ShoeBox&quot;, or &quot;melonJS&quot;, or &quot;Spritesheet (fixed cell si...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"ZruyDdN8SI6ADLkDPUh4S","name":"getRegion","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a normalized region (or frame) information for the specified sprite name</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the sprite</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"atlas","optional":true,"description":"<p>name of a specific atlas where to search for the region</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"xs9e9PellDBv9QMV8ULJb","name":"getTexture","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the source texture for the given region (or default one if none specified)</p>","params":[{"identifier":"region","optional":true,"description":"<p>region name in case of multipack textures</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"sQkTFl_vPXf_NvVPW1tZd","name":"getUVs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the uvs mapping for the given region</p>","params":[{"identifier":"name","optional":false,"description":"<p>region (or frame) name</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>region Uvs</p>","dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]}]},{"id":"03A0KS0tegN6NOoD-1_oe","name":"Tile","brief":"","type":"ClassDoc","description":"<p>a basic tile object</p>","extends":["Bounds"],"members":[{"id":"rcjyaToOCzuuHElII8-Db","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"hPHseCK_fqBc5X6fGKVb9","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"FldZSP5px2wIG0EL2iOpG","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"5QvixXefa5v2vWwm56-ar","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"nGHZKOawfxXfTrok2i4Ph","name":"flipped","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Global flag that indicates if the tile is flipped<br></p>"},{"id":"_-zsgI7-w_uayu-X58GYm","name":"flippedAD","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped anti-diagonally<br></p>"},{"id":"wnt0t21OiTqYLY_vH7jES","name":"flippedY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped vertically<br></p>"},{"id":"TgUptgYY_ji7jHS3nEWIt","name":"flipX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped horizontally<br></p>"},{"id":"LdDPK5ICktUOqpxz_4TLR","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"QqBrJa4wkb4CZbmILCxK4","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"byXh0FM2jy_EzrNPdHHnc","name":"tileId","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tileId</p>"},{"id":"wEI_lvgF58H5YTKiqgqgz","name":"tileset","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tileset</p>"},{"id":"dEAWruibvoxUE52F0w4Ym","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"MjC8XC5pxiLokzAf0KlWa","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"0fqBRL4Ew6e9_D6VVarWZ","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"dJOnUVorcdp6DIcVgQc6b","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"jj3TpRz-szRxNcqzsvAzP","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"qiMVTi1GAR8IkwzOisAZ7","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"IU15RZAfaNkYlqJGlHDDh","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"szMmpMeqabNeFJ44BNV1j","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"E6PFHimn4vPvMtzE0tvQp","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"KQkTbRhy3qnq5auHWzBvC","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"paIPymOVxFjS9xIcD4apw","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x index of the Tile in the map</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y index of the Tile in the map</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"gid","optional":false,"description":"<p>tile gid</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileset","optional":false,"description":"<p>the corresponding tileset object</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"WOq5oc74oc8fnf-ndbfao","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"l03VobN5DfFQHIu9Ovt4F","name":"getRenderable","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a renderable object for this Tile object</p>","params":[{"identifier":"settings","optional":true,"description":"<p>see {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>a me.Sprite object</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"vxsANBITtHmm_fG-W7bo2","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Mj51mKz-BbgxRxFP10MVn","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"nHFVmNAOoKJ8zMqAeg9jI","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"9fiW4C9jf9RsyKZcCYp0B","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"9ebMexQ-WsPBJjDKNI7b-","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"iQt6dBQUWVuJu-FA3NJGW","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-q8UkAxtPFqOB0GVbGMvi","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]}]},{"id":"FwLsZEZm5j0m7pNbzcdBI","name":"Timer","brief":"","see":["{@link timer} the default global timer instance"],"type":"ClassDoc","description":"<p>a Timer class to manage timing related function (FPS, Game Tick, Time...)</p>"},{"id":"Cb_ubSLNsQZOYgg97gm1d","name":"TMXHexagonalRenderer","brief":"","type":"ClassDoc","description":"<p>an Hexagonal Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"-a-I-mIf9A4CgWbMxEc8l","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"eSXY8Ae71LYOvN6xCmKGf","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ahknEbxYkoMLDEhKkj-WS","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"_SAUn4QWfEXFznBoiHN9C","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ioa32gdKU0D3G8omGy4o3","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"CCusH5pQbaE4PySOezNbl","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"jChOIjWLHBHm5YZRpUktT","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"m7RESS2YDyUp9xptj5n5j","name":"TMXIsometricRenderer","brief":"","type":"ClassDoc","description":"<p>an Isometric Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"eoHShfsQ4SmqPAk0HoIy8","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KYvBwC50aRtJLO5MTJDtx","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"4Rd7e_xiyImOTQvzsDs24","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"DeK6mZhDPyfnLYyFIPI28","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"uaMMZcj-l3eK3I0cVUko9","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"8iqddqPWuN1hYjI2hpMTo","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"9-mbI_Mswd7-jiBjfUDks","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"8-2vgRxjps1LJVIgkjjv5","name":"TMXLayer","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Layer Object\nTiled QT 0.7.x format</p>","extends":["Renderable"],"members":[{"id":"PZw9oEIq1lks1kOF28F04","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"vT3TpTbse9IyV47f_S_D0","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"ias7PKdum4gWLr3MAqXsA","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"0LLYQplvIjKm0hD6wIq3N","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"eHGu8CrozBt1hlNTEveO9","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"-oiBTN1FeC8xoy_Jjuo3Q","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"5u29PpsV8wwNmBBjv5jze","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"KsniUGZ0DVSwc4PVuQcV3","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"70iWQ2_dE93a_bKWaNtNJ","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"cp67vZatqIDRMGD5uzqia","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"WeRN-nvusGtHGDwDrORZJ","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"LeZwQN68OHCIUv_t4j-3N","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"QkTREjWOCkDrka7jJIjXo","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"y877b3ONqjQr0YQzRqLrv","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"T8GIZsuVo0-17kTsMaUf2","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"gq8Q1G0YkAUb72ZaJ_3ke","name":"isAnimated","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Layer contains tileset animations</p>"},{"id":"DZTjISCdUwe5UyIwGwl-B","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"9kUF8ecw8eePx2jx_0yxG","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"nViIWEVLaL_kIvXIPgFNS","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"QOGH5YZxyu8v1GRwhubO2","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"tv9TLRZC13Oc3ys242Cd3","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"W2us0PfMrGvQtuIl6uj1c","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"rUirEUa3FjY_manev1sYe","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"cDropQaRj6bXS-Esr3sD4","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"3undYQ4KQskrLxzTXpPT1","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"2peDOpHtTrY20CMTgW6Su","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"3jr2l1WAdC-6Au6U-41PC","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"TwJ8P2MZcZ7MnNzMe7IXS","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"g0LFlXXVJgLP7jhF45QZM","name":"renderorder","brief":"","access":"public","defaultValue":"\"right-down\"","scope":"instance","type":"PropertyDoc","description":"<p>the order in which tiles on orthogonal tile layers are rendered.\n(valid values are &quot;left-down&quot;, &quot;left-up&qu..."},{"id":"AEmRwQOhHyi9tKr53MQij","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"LCI6Rm19J3yrNcdXvlYGL","name":"tilesets","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The Layer corresponding Tilesets</p>"},{"id":"42VMwDRL6DrDhYLLMCDPi","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"B9-h5lN6C_pRbH2EUTcm7","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"Q2aE0yZLK6Dsk0Y8AcDqM","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"dbGHKc61bi9CF_snQPWIN","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"O1Jql0C5CmHBTITRDMzWq","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gVFu-PwivSTl-QxJYZHPS","name":"cellAt","brief":"","access":"public","examples":[{"caption":"","code":"\n // return the first tile at offset 0, 0\n var tile = layer.cellAt(0, 0);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Return the Tile object at the specified tile coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>x position of the tile (in Tile unit)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>x position of the tile (in Tile unit)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"boundsCheck","optional":true,"default":"true","description":"<p>check first if within the layer bounds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tile or null if there is no defined tile at the position or if outside of the layer bounds</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"7NhTzykKDXq7vbyvSwP2U","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"yXxKqdR9nIEreURvjh7Lg","name":"clearTile","brief":"","access":"public","examples":[{"caption":"","code":"\n me.game.world.getChildByType(me.TMXLayer).forEach(function(layer) {\n     // clear all tiles at the given x,y coordinates\n     layer.clearTile(x, y);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>clear the tile at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in map coordinates: row/column)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in map coordinates: row/column)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"odISl5Inlg8Hz2Jihxpu7","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"_vWpR_tngmRc9bnAS2Wvr","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>layer data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#layer})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"data","optional":false,"description":"<p>layer data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#layer})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"tilewidth","optional":false,"description":"<p>width of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileheight","optional":false,"description":"<p>height of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"orientation","optional":false,"description":"<p>&quot;isometric&quot; or &quot;orthogonal&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"tilesets","optional":false,"description":"<p>tileset as defined in Tiled</p>","dataType":{"tokens":[{"value":"TMXTilesetGroup","kind":"canonical"},{"value":"TMXTilesetGroup","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":false,"description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"qhrzACuSL3VMhad2ncnhv","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SrJWjU-3BgFYPbVjr-OfG","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"pTjKKCLYXTVem6z7d9urP","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"6iT9qNz76S_HIDCNGwzho","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JABFiSC_iIX0eZ6Ivv74I","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"WldpVPd9N2p6dLyF3HLrp","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"bT4v9wFThdfhVpOnP8W0b","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"FScjMGTEgm23yp_esBYrE","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"eJ5DvAQ8gjl32NF34eA8r","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"GUPQsY4f3QU6hank15Uvj","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"9FY5Wr8aJEsUoBxx2FtEr","name":"getRenderer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the layer current renderer object</p>","params":[],"returns":[{"description":"<p>renderer</p>","dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}]},{"id":"YXzD1nKqD9No7buyKvykR","name":"getTile","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the TMX Map Layer called \"Front layer\"\n var layer = me.game.world.getChildByName(\"Front Layer\")[0];\n // get the tile object corresponding to the latest pointer position\n var tile = layer.getTile(me.input.pointer.x, me.input.pointer.y);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Return the Tile object at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tile or null if there is no defined tile at the coordinate or if outside of the layer bounds</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"vGVmtOnsDtcJ-FuwI-BLD","name":"getTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>assign the given Tile object to the specified position</p>","params":[{"identifier":"tile","optional":false,"description":"<p>the tile object to be assigned</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>x coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the tile object</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"2UPr__5MpD9j7P4nSb6mc","name":"getTileId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the TileId of the Tile at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>TileId or null if there is no Tile at the given position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"IRwhAY8_3d5dQsJSXSSKn","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7oUJJ_w8Li1DoXqYek0_C","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GDy5_A2KnYU-VPgCrS-i3","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZegietpxXk7arCH_RZ5pd","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"2Ns2BQz3y4ESXTdQa5lU_","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"NuSARC9teGsXfuzgtfeX_","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"YPfWwf1aEhlmPF6xzuNzv","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"WFXyeRAc1SM319IVpLJKA","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"b-FWtfene_WTg6KBooMB4","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"idPEXL950E9-fgRYw8f8X","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"CXAQOjqR1_oKEeYk7XC-S","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"01YLl5CxMLLHgUtAb_FYU","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"m8b1uC6cMc5xZ203KL9mm","name":"setRenderer","brief":"","access":"public","examples":[{"caption":"","code":"\n // use the parent map default renderer\n var layer = new me.TMXLayer(...);\n layer.setRenderer(map.getRenderer());\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Set the TMX renderer for this layer object</p>","params":[{"identifier":"renderer","optional":false,"dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"rRvK-dYVvPyNqPrzRl3xL","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"R5CFRw0Ft2d1MmvZ6voS6","name":"setTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a new the Tile object corresponding to the given tile id</p>","params":[{"identifier":"tileId","optional":false,"description":"<p>tileId</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the tile object</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"BGzqMisDuo9NimLh9FgKe","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"mBDxjMCtRnVKGqSXnrNxQ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tEbufQQDM3KmUkbSSnVn1","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"u0BQeT-CZW1t5nBrcXi_a","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"aQohg-9rxKzvhLHBopPdr","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"vuF6G2CWmgFRWJONS5k1l","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Vv1DWJ-9HG6yEKOTDp3qK","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"hbcIG9lEnqYWTHCAJCEtV","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"hsE4HIh6KIETyMKRvL_KL","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"fwWZDhAHvkS2dQXveVNmN","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"iOf0qGx3tYZQA5BdPtGyf","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"rY5WQMh41O32qUhfNQbe8","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Q0zE2V57NJ0Z-2OqA9kun","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"Khh8NbPU2gJ8OShhYo9fx","name":"TMXOrthogonalRenderer","brief":"","type":"ClassDoc","description":"<p>an Orthogonal Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"LcnkFgQOD0KZ1sJ2C0SR2","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QLnFhtltnxYOrap363X3R","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"8MTx-jubBM6jCMF-tXjxp","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"WsHi8bj6W72DfT8yBRY0Z","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"PLM2Ds0N9HwFYlrWwljFL","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the map bounding rect</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"M6eXibIMu4vRnW-ac4e7P","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"RucC-kq54z8JUIMcybAvB","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"eu64X20OHuoO14lAkBoM-","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"tDQHbHLACvTi6YdKek-so","name":"TMXRenderer","brief":"","type":"ClassDoc","description":"<p>The map renderer base class</p>","members":[{"id":"VjiBAJGhcMVWfVNk4R58_","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WlkrAfF_P2Wt_dvDjXG37","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"cols","optional":false,"description":"<p>width of the tilemap in tiles</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"rows","optional":false,"description":"<p>height of the tilemap in tiles</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tilewidth","optional":false,"description":"<p>width of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileheight","optional":false,"description":"<p>height of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nayoy5YWQvyEJNOuYd-yI","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"PoZAKo3c7d5hzZKhAXGxg","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"VqXCIgBAJFqKS3WM07jDb","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the map bounding rect</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"S2v03PfkpzH1HMyFQ5f9i","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"CDSmjE9B7R7RlvtKb-r5n","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Dy2gNCnca5nuADg2MHFpb","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"iGFudYurbJ4cYACuYcvSZ","name":"TMXStaggeredRenderer","type":"ClassDoc","description":"<p>a Staggered Map Renderder</p>","extends":["TMXHexagonalRenderer"],"members":[{"id":"a9WsJJxSkFJDnsKU6pmkP","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"33Mb2VJ4UpAQb5EVLO-je","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[]},{"id":"t-YdcKeYHLtKs5z8Y_LUg","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"w31Vqhp6vjI-KZ4a2-Wbt","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"2YYnS2Y1Ea086q89Z3uAj","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"odD--ucLVbWivUtucE_B9","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Qo9jK9oZPUo-qB7ytuac4","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"UpslBtV1kdCiM6ELJ3wrA","name":"TMXTileMap","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Map Object\nTiled QT +0.7.x format</p>","members":[{"id":"JJH0J1R6GCFCBinQdJEg4","name":"cols","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>width of the tilemap in tiles</p>"},{"id":"kP_zwfFilLstR5lH8Koe7","name":"infinite","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>is the map an infinite map</p>"},{"id":"4MQjJQdbvSpPDx1tbiztl","name":"name","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>name of the tilemap</p>"},{"id":"HAQhltvPj3W1AsvoHjCq2","name":"orientation","brief":"","access":"public","defaultValue":"\"orthogonal\"","scope":"instance","type":"PropertyDoc","description":"<p>the map orientation type. melonJS supports “orthogonal”, “isometric”, “staggered” and “hexagonal”.</p>"},{"id":"UJyARk0Y4OE9WPPlXs5uC","name":"renderorder","brief":"","access":"public","defaultValue":"\"right-down\"","scope":"instance","type":"PropertyDoc","description":"<p>the order in which tiles on orthogonal tile layers are rendered.\n(valid values are &quot;left-down&quot;, &quot;left-up&qu..."},{"id":"IrycdX_71nE1r3zLaE-WU","name":"rows","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>height of the tilemap in tiles</p>"},{"id":"jMHYBwtkAsa_x5zLPjnww","name":"tiledversion","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The Tiled version used to save the file (since Tiled 1.0.1).</p>"},{"id":"TG5erfa3HVQ0DX8ZnvAkN","name":"tileheight","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>Tile height</p>"},{"id":"hRtz-Q8qi_tYv5fydw-QS","name":"tilewidth","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>Tile width</p>"},{"id":"eCjJO8QgH1yD_OO69f9-r","name":"version","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the TMX format version</p>"},{"id":"BeMYgylUNvJzhXALid3jN","name":"addTo","brief":"","access":"public","examples":[{"caption":"","code":"\n // create a new level object based on the TMX JSON object\n var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n // add the level to the game world container\n level.addTo(me.game.world, true, true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>add all the map layers and objects to the given container.\nnote : this will not automatically update the camera viewport</p>","params":[{"identifier":"container","optional":false,"description":"<p>target container</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"flatten","optional":true,"default":"true","description":"<p>if true, flatten all objects into the given container, else a <code>me.Container</code> object will be created for each co...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"setViewportBounds","optional":true,"default":"false","description":"<p>if true, set the viewport bounds to the map size, this should be set to true especially if adding a level to the game worl...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"wHkmPCU2vfQrYbyqSY7zK","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a new level object based on the TMX JSON object\n var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n // add the level to the game world container\n level.addTo(me.game.world, true);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"levelId","optional":false,"description":"<p>name of TMX map</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"data","optional":false,"description":"<p>TMX map in JSON format</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"nPp2ipCpQGI4bUgLjWFZS","name":"destroy","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>destroy function, clean all allocated objects</p>","params":[],"returns":[]},{"id":"H_7vBtGNxL8-9-aEuKm-4","name":"getLayers","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all the existing layers</p>","params":[],"returns":[{"description":"<p>Array of Layers</p>","dataType":{"tokens":[{"value":"Array<TMXLayer>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1<%2>"}}]},{"id":"4W_VH6Q7HQfhlzZDJqy3b","name":"getObjects","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return an Array of instantiated objects, based on the map object definition</p>","params":[{"identifier":"flatten","optional":true,"default":"true","description":"<p>if true, flatten all objects into the returned array.\nwhen false, a <code>me.Container</code> object will be created for e...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Array of Objects</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"HOE7yqWlIhFb8oIvpUigt","name":"getRenderer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the map default renderer</p>","params":[],"returns":[{"description":"<p>a TMX renderer</p>","dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}]}]},{"id":"BdoYwdBrf9hRrHHPughWo","name":"TMXTileset","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Set Object</p>","members":[{"id":"doaNTElKcdcDRLPQVNHlS","name":"isAnimated","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Tileset contains animated tiles</p>"},{"id":"p8WrUsbKGtGeL8zDAqUBi","name":"isCollection","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the tileset is a &quot;Collection of Image&quot; Tileset</p>"},{"id":"kYMqdXnwE-wzQ0saliDkQ","name":"_lastUpdate","brief":"","access":"private","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Remember the last update timestamp to prevent too many animation updates</p>"},{"id":"NlRopgmfomhR5wfOu6bOJ","name":"animations","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>Tileset animations</p>"},{"id":"wLPYmNBLzqhPPJmGTSny2","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"tileset","optional":false,"description":"<p>tileset data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#tileset})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"Xw5a_kJHnsAODWvBNaDRJ","name":"contains","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the gid belongs to the tileset</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BA74AL__w4GCQFrny9Vgh","name":"getTileImage","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile image from a &quot;Collection of Image&quot; tileset</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding image or undefined</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}}]},{"id":"qtrupMW7m5wGr1N2eYu6s","name":"getTileProperties","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the properties of the specified tile</p>","params":[{"identifier":"tileId","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"nRFwY4GYpWDgt_SDrJt1j","name":"getViewTileId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Get the view (local) tile ID from a GID, with animations applied</p>","params":[{"identifier":"gid","optional":false,"description":"<p>Global tile ID</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>View tile ID</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"gvN1VXz3me5li-uQy3HhG","name":"TMXTilesetGroup","brief":"","type":"ClassDoc","description":"<p>an object containing all tileset</p>","members":[{"id":"I39wlUOc6Y2Wqfsm1UlD6","name":"add","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>add a tileset to the tileset group</p>","params":[{"identifier":"tileset","optional":false,"dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"XkJm91DGlGraClwkyy9CF","name":"getTilesetByGid","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tileset corresponding to the specified id <br>\nwill throw an exception if no matching tileset is found</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tileset</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}]},{"id":"BMMCwnN4DfaIsosTCx9MB","name":"getTilesetByIndex","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tileset at the specified index</p>","params":[{"identifier":"i","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tileset</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}]}]},{"id":"KnuZUo-x95bQRofmGujuv","name":"Trigger","brief":"","type":"ClassDoc","description":"<p>trigger an event when colliding with another object</p>","extends":["Renderable"],"members":[{"id":"Op8XOnWIMSfZPrAlXHvTK","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"JXevDgFTtlqXRoh8ksUI_","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"mtRfPzkKVwVAIIbPix50f","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"EuVhmw8vrRou5WDDiTizJ","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"kpBfik6yLd7-VBP9Ys1kE","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"2o4ARY_dPcJXzyYuoCM8l","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"xcm1yi8hkHGdqFiDwbXu3","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"zZiUhnsjkGxAzyotCaMpk","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"lF3Fa9kCKQ-TYNgjphqzJ","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"mduoY7ZWgH5t54pVkEIpG","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"PgyNYENZxQP_oMkWJcd1S","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"PL8iZ8-yb4IHRUcRUpOdw","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"vIy-E6sbtEYLTh5lCl1Yt","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"5rqz7YxZ_sKc_JTT9WJxI","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"swzdrr76pDPqxQqiaAHCi","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"p9nibMac4KnUoPakIwuOX","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"R8VaGNEqZiowK1B04x-0m","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"41iYK1HBbOMkzBgEkkDfU","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"WHFeBvkfu1aDrtb5T41wT","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"l3GF1UfTZm9aOmuO5DjHL","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"-JUDoNz4ssB14z_csstsb","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"HGTDie6UdVOraSTxxR96f","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"pOygpkQ3ufdtWMce85G6X","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"tDi7rNpWuilf59YbDsYPS","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"e2EFHcdgwkC33mHLHYUCd","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"Hy0juncTY30JjeIAkV5Pm","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"2tIOqruvn3M7L4xg5vcYf","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"mRj9ustgBoJDZrfA9Efo2","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"8uQFVzNY3pSK3D9dXrvde","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"YjCwA49Mq_2O3XEv2zu3S","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"iT8KHCcMAoBI-p5UX17U0","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"qu_2LV6eh7OL3TN5Yn--n","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"5reVCG7oB7jEF3ZvUT8nr","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"8xgh5zSKe1T8i9mZRjsyr","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"JdOvouqV37VBQrvGD9yH6","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"b47ycLzhjUsSSauRWpbEd","name":"constructor","brief":"","examples":[{"caption":"","code":"\n me.game.world.addChild(new me.Trigger(\n     x, y, {\n         shapes: [new me.Rect(0, 0, 100, 100)],\n         \"duration\" : 250,\n         \"color\" : \"#000\",\n         \"to\" : \"mymap2\"\n     }\n ));\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.width","optional":true,"description":"<p>width of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","optional":true,"description":"<p>height of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.shapes","optional":true,"description":"<p>collision shape(s) that will trigger the event</p>","dataType":{"tokens":[{"value":"Array<Rect> | Array<Polygon> | Array<Line> | Array<Ellipse>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1<%2> | %3<%4> | %5<%6> | %7<%8>"}},{"identifier":"settings.duration","optional":true,"description":"<p>Fade duration (in ms)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.color","optional":true,"description":"<p>Fade color</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.event","optional":true,"default":"\"level\"","description":"<p>the type of event to trigger (only &quot;level&quot; supported for now)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.to","optional":true,"description":"<p>level to load if level trigger</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.container","optional":true,"description":"<p>Target container. See {@link level.load}</p>","dataType":{"tokens":[{"value":"string | Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.onLoaded","optional":true,"description":"<p>Level loaded callback. See {@link level.load}</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.flatten","optional":true,"description":"<p>Flatten all objects into the target container. See {@link level.load}</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"settings.setViewportBounds","optional":true,"description":"<p>Resize the viewport to match the level. See {@link level.load}</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Q-rR1FrwawGCuBo7qkFsm","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EsKbIh5rZD04MVpyaengh","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KZwbv71TRhShbAw8RaiPv","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ZzrbExGM_BhSNA9pOTRsg","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QzOzURa58n5joCQ1wJYTG","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"n7d7INraI0CGPZeK6I9po","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"LlfpY9QzphuOGPhGyVhtK","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"6oWu4jXr2xVo6nNEtqRt4","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"tRtyI_FK0iYSwnm5WGk5E","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"TDFFZWHK6lOwlW8wf1N__","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"41XdIxj9SoYbOHqGP2jbp","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QcCzws26at0lrZLPOIldk","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cO0MUtKv0qbr58an6L385","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"A7u-ZybNOKp3_Prdbje8x","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"m8J1EaPPu6Sg28NCi3UEh","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"ohISNnFkcXothJg5gQge5","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Mk8snCSqcyFuk9QqMx4zp","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"dm5FbuD-3uXkgYVgG4T7_","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ZdhXXr4Jvf3k0HL_9oBTG","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"1TylXFDUrIh8APyLWbDTi","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"p7HCScZjqQGvSpHIhEeFW","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"nXr2aYnTdLHsotTr6lCU3","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"A6l7Btogz-F_BEeGDG3sK","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"nkcN2g97lY-okIH6FYrI-","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4iWVKWFjRgpO9XMPyObFS","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"NKUon2dPYRj2Zp8BReEN7","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NPl0TIv39TDXElkLle8_b","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"F6vqPmY-CKkIjnWnH_Wj_","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"sbBgNRiXMy5W3VAfCE6yA","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5yLYyURmQ6gni2Gv09_Fs","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"AAIaCnc0WrCkdq8uZJJAF","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"cLqGjTNKCdahlJBf9Sql2","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ZGAnObgHBHPq5DCoYYq8n","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"h-2CGx6utys94YcoSZUPb","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"nJrdDWk42y8qHJKG-Uvqh","name":"triggerEvent","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>trigger this event</p>","params":[],"returns":[]},{"id":"meN2EaQ-DbAnctqdhk1-y","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ogJAqJA8ENsEV0-iaSCkZ","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"w4IkYTRudbWzZmgh4JthZ","name":"Tween","brief":"","type":"ClassDoc","description":"<p>Javascript Tweening Engine<p>\nSuper simple, fast and easy to use tweening engine which incorporates optimised Robert Penne...","members":[{"id":"Qhopho0ZNyt2_oddfA4WN","name":"Easing","brief":"","access":"public","type":"EnumDoc","description":"<p>Easing Function :<br></p>\n <p>\n Easing.Linear.None<br>\n Easing.Quadratic.In<br>\n Easing.Quadratic.Out<br>\n Easing.Quadrati..."},{"id":"QpDS84dV1m1GRiRfLX0ie","name":"Interpolation","brief":"","access":"public","type":"EnumDoc","description":"<p>Interpolation Function :<br></p>\n <p>\n Interpolation.Linear<br>\n Interpolation.Bezier<br>\n Interpolation.CatmullRom\n </p>"},{"id":"BnEvbh8EYCRHW3ijGa2CD","name":"chain","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>chain the tween</p>","params":[{"identifier":"chainedTween","description":"<p>Tween(s) to be chained</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"Q5VDs0oCbRIq0I4TvAg4x","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // add a tween to change the object pos.x and pos.y variable to 200 in 3 seconds\n tween = new me.Tween(myObject.pos).to({\n       x: 200,\n       y: 200,\n    }, {\n       duration: 3000,\n       easing: me.Tween.Easing.Bounce.Out,\n       autoStart : true\n }).onComplete(myFunc);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"object","optional":false,"description":"<p>object on which to apply the tween</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"myPZZnhvrqWx0qi6eA3sJ","name":"delay","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>delay the tween</p>","params":[{"identifier":"amount","optional":false,"description":"<p>delay amount expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"0C7T_cAVoiL2E-ZCfid8q","name":"easing","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>set the easing function</p>","params":[{"identifier":"easing","optional":false,"description":"<p>easing function</p>","dataType":{"tokens":[{"value":"Tween.Easing","kind":"canonical"},{"value":"Easing","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"QTpjnJqJwKO9Q64RDJ16H","name":"interpolation","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>set the interpolation function</p>","params":[{"identifier":"interpolation","optional":false,"description":"<p>interpolation function</p>","dataType":{"tokens":[{"value":"Tween.Interpolation","kind":"canonical"},{"value":"Interpolation","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"bQNMu7QQ7N85jIfsKxTg4","name":"onComplete","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onComplete callback</p>","params":[{"identifier":"onCompleteCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"EY_kGFNLI5uOkN8Qe6vCs","name":"onStart","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onStart callback</p>","params":[{"identifier":"onStartCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"fEUrUlrIweZZ7bin9FHBd","name":"onUpdate","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onUpdate callback</p>","params":[{"identifier":"onUpdateCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"biaHgla3q8MZUGTxLYQVp","name":"repeat","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Repeat the tween</p>","params":[{"identifier":"times","optional":false,"description":"<p>amount of times the tween should be repeated</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"AtV_NHocIhHRtu4ALRUmZ","name":"start","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>start the tween</p>","params":[{"identifier":"time","optional":true,"description":"<p>the current time when the tween was started</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"YCogtKStSGeuS13_p3PSi","name":"stop","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>stop the tween</p>","params":[],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"gL0lUNvVOrrpWGtnU-_xF","name":"to","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>object properties to be updated and duration</p>","params":[{"identifier":"properties","optional":false,"description":"<p>hash of properties</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options","optional":true,"description":"<p>object of tween properties, or a duration if a numeric value is passed</p>","dataType":{"tokens":[{"value":"object | number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"object | %1"}},{"identifier":"options.duration","optional":true,"description":"<p>tween duration</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.easing","optional":true,"description":"<p>easing function</p>","dataType":{"tokens":[{"value":"Tween.Easing","kind":"canonical"},{"value":"Easing","kind":"link"}],"template":"%1"}},{"identifier":"options.delay","optional":true,"description":"<p>delay amount expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.yoyo","optional":true,"description":"<p>allows the tween to bounce back to their original value when finished. To be used together with repeat to create endless l...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.repeat","optional":true,"description":"<p>amount of times the tween should be repeated</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.interpolation","optional":true,"description":"<p>interpolation function</p>","dataType":{"tokens":[{"value":"Tween.Interpolation","kind":"canonical"},{"value":"Interpolation","kind":"link"}],"template":"%1"}},{"identifier":"options.autoStart","optional":true,"description":"<p>allow this tween to start automatically. Otherwise call me.Tween.start().</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"l_6xHKgtFU0SDHwW5cyur","name":"yoyo","brief":"","access":"public","scope":"instance","see":["Tween#repeat"],"type":"MethodDoc","description":"<p>Allows the tween to bounce back to their original value when finished.\nTo be used together with repeat to create endless l...","params":[{"identifier":"yoyo","optional":false,"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]}]},{"id":"-ElhojcNppWikdl5FxRDU","name":"Vector2d","brief":"","type":"ClassDoc","description":"<p>a generic 2D Vector Object</p>","members":[{"id":"P51El6UwUOFhOcbiDCrnX","name":"x","brief":"","access":"public","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"pzqJlg5L7ghTtJxfvIDco","name":"y","brief":"","access":"public","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"_n3a2_A49652RmTkhShtP","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"HTTGjyVqzM3E05SSvTy15","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"jrlzIGAG2HjgeqxIhftn9","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"X7fdwD2axKdbiO4J4MZkG","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"_whvTKsswLMKvFgqBrKcU","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"m_rdX8K-m8-7xDFFJJXtd","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"-UVP9czqYQ6VdHP9iR4tv","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4XQkVLlIPDwSK8J_laox4","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ELmo6nxpcTKcSqqh5mkB2","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lyBpZcv374UfCCJfY9AEi","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the x,y values of the passed vector to this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"3fMUwZNiz7OV7xanLr8fI","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The cross product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dsdmm-LbyXDxNxxhhaaaf","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"p00kRz1RbXWDb2rJg_Yyb","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"PtdULrXNrfmmiZ9DJVrG6","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vlg3lYj6m3nIyIsAYflqM","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if this vector is equal to the given values</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1KCl88LsDVvXXRHyb4nqk","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"S9ZXh8SwjQN1CVgEqJV4G","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"xF5VO2JCfxNkAV7KyVdQi","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"V3-8sHM9OEWXyjHEcw6k3","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"LtlOc2TDxbdPWKCzEiS7p","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"TDAaTv-QdANOl9aAdR3oy","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"c7gU_LEG8KfYyD0G9pV-z","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"9PqvIb6s1s2JAVRQMsXC2","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"_vz7SeD0YdpUOd32USKsg","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"EJ1jXRNxr4dx7i8xwXCff","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ZaKy4sexbaUvwzm81eU_F","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"OK0wbvGQf7xVGrjRQfMIp","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"J9VAu3LW3DDV4Cs7qdWLl","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"E12Tkj5JwAPp9WUuM1BM0","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Ip_kAdENrjY4nlVHPCVuh","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4JLlX-zGmkjiJRR_nZm20","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4ZL3RoWuaVIM0z4GhvoUA","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"kS6rOZdAJRppg2Ptz61TX","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"XS_vVKy0mbu3QeG0A-KWO","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"1acgpTU6LFcLlZFQz9uDN","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"h4BVzcht3584U9zzkY92p","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"6cLZnqSqvnCNlJp50UNU4","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"5dibeAmEUHljdpSFuR161","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"q2GIJDVsFgwxccxqiAAfX","name":"equals","brief":"","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"pnnKSlrz17FZEWwRI5CDK","name":"Vector3d","brief":"","type":"ClassDoc","description":"<p>a generic 3D Vector Object</p>","members":[{"id":"epAHJKTTopYPF1ktmyZyL","name":"x","brief":"","access":"public","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"3tfLtxLZYhrc8eGeS-KSw","name":"y","brief":"","access":"public","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"yzb5bR6krMF5GoXZhwqFR","name":"z","brief":"","access":"public","type":"PropertyDoc","description":"<p>z value of the vector</p>"},{"id":"QeY_FdzRvBOCmK_EnNs43","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"l82WpmK_KJEwV0pBJCIj6","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"rc3dcJQksrPBDK6ZQ97Ti","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"3njTf_qC7tDL6odTzJtAh","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"PRgXKQ3PL5WxYkU86FdxE","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"SLct6Vymc9AM5bXeeKEI3","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"A3htJB30b5YASRMeshjng","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"Fc0AxkGcvS-1bpZt95ddz","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"c3t8QSGyCQwud5BxiATuk","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zrS8igs1476wxASryO7nr","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the components of the given vector into this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"0zUkckvi5M5U63xWTiK-7","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>calculate the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"UJpdliU1v9J5_sN4kUwPi","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"T_dr-gFvXN1Zikld5zNx0","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"hxQytkwnn4JhfGtm367GJ","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ya0fLZicP5iAbab_kCLHi","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if this vector is equal to the given values</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IBMiFxBOKvo9dQvM8r4Aa","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"LLe8PzvIH6ZTOHsOteJlu","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"CZBwr8uJ9YAdQ4Z4JN3Is","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"x6c24yDyToH6S2Ds5-e90","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qrX_oo41nSCJVK8P2aQn4","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"9TucNahlcs3qgjFMDXoMp","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"MdCmnFJNANQ11roaJvJBO","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"UK8BjJf4gtNVG16YvmyoK","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"mbLfxJEiZowYqCfQOJgju","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ksPAnDVJRFOKwYE2l1-wh","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"TjxGwH46sy8zUteXCnWKF","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ktqXgMRBRNwgeedOvLxGT","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"UVO3juhje6ISX_8FmPP9i","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"CCtyFkOsqCTeZ4NlAvbt0","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians) around the z axis</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around (on the same z axis)</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"hicbTc5eqU7y2k_mBLARB","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"CgaKGARU3D9bjX0cTMpH8","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"vHSiqx0SUo1c8S70pPVg0","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"98i3hhcshbe9aw0rayvKj","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ZqEC1B74958xQd8ga-oqY","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"vT5jiOF2zC-sp6lEcT5XV","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"-BSBL9tQqn-2nua2FvnCG","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"CPc7oepVhqdQH2qaLjnEZ","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"a9iLQNNKEhR5UT4kSAgvS","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"DpAwG53C2dF1eevVtYhOO","name":"equals","brief":"","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"92t92Qxj6Ci0DzQHFCYWr","name":"WebGLCompositor","brief":"","type":"ClassDoc","description":"<p>A WebGL Compositor object. This class handles all of the WebGL state<br>\nPushes texture regions or shape geometry into Web...","members":[{"id":"TSGKmfmjxaTOe-8D-RO__","name":"activeShader","brief":"","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the active WebGL shader</p>"},{"id":"8ROIOn4VT8MCHZdImYWxo","name":"attributes","brief":"","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>an array of vertex attribute properties</p>"},{"id":"FS5CuNZZrDI35Wls18Lnr","name":"mode","brief":"","defaultValue":"gl.TRIANGLES","scope":"instance","see":["WebGLCompositor"],"type":"PropertyDoc","description":"<p>primitive type to render (gl.POINTS, gl.LINE_STRIP, gl.LINE_LOOP, gl.LINES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN, gl.TRIANGL..."},{"id":"BayxYvQ38tjWPBakpLpmp","name":"vertexByteSize","brief":"","defaultValue":"0","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>the size of a single vertex in bytes\n(will automatically be calculated as attributes definitions are added)</p>"},{"id":"XJZ6EQO6CEdMTZYoJTUmN","name":"vertexSize","brief":"","defaultValue":"0","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>the size of a single vertex in floats\n(will automatically be calculated as attributes definitions are added)</p>"},{"id":"f-83_N7AVHPFT0s0Vbcxv","name":"addAttribute","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add vertex attribute property definition to the compositor</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the attribute in the vertex shader</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"size","optional":false,"description":"<p>number of components per vertex attribute. Must be 1, 2, 3, or 4.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"type","optional":false,"description":"<p>data type of each component in the array</p>","dataType":{"tokens":[{"value":"GLenum","kind":"canonical"},{"value":"GLenum","kind":"canonical"}],"template":"%1"}},{"identifier":"normalized","optional":false,"description":"<p>whether integer data values should be normalized into a certain range when being cast to a float</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"offset","optional":false,"description":"<p>offset in bytes of the first component in the vertex attribute array</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"aFsHg0FxSHFCUt_EiQrqs","name":"addQuad","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a textured quad</p>","params":[{"identifier":"texture","optional":false,"description":"<p>Source texture atlas</p>","dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>Destination x-coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Destination y-coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>Destination width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>Destination height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"u0","optional":false,"description":"<p>Texture UV (u0) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v0","optional":false,"description":"<p>Texture UV (v0) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"u1","optional":false,"description":"<p>Texture UV (u1) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v1","optional":false,"description":"<p>Texture UV (v1) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tint","optional":false,"description":"<p>tint color to be applied to the texture in UINT32 (argb) format</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"S_edidfHPjVYiKThq2gWf","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>delete the given WebGL texture</p>","params":[{"identifier":"texture","optional":true,"description":"<p>a WebGL texture to delete</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":true,"description":"<p>Texture unit to delete</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"D5hHOjOz49kQh_9K9wZU-","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the WebGL texture associated to the given texture unit</p>","params":[{"identifier":"unit","optional":false,"description":"<p>Texture unit to which a texture is bound</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>texture a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}}]},{"id":"Pe2tD4jsQ36GRsSRDtbqx","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>assign the given WebGL texture to the current batch</p>","params":[{"identifier":"texture","optional":false,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":false,"description":"<p>Texture unit to which the given texture is bound</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Lwdoc4FHQ2uji8PJalQXe","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clear the frame buffer</p>","params":[],"returns":[]},{"id":"V2zxXH8OE8b63dNZUB7MB","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Specify the color values used when clearing color buffers. The values are clamped between 0 and 1.</p>","params":[{"identifier":"r","optional":true,"default":"0","description":"<p>the red color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","description":"<p>the green color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"default":"0","description":"<p>the blue color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"a","optional":true,"default":"0","description":"<p>the alpha color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"kx6CJ7jVydkNYdbd_zU_m","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"renderer","optional":false,"description":"<p>the current WebGL renderer session</p>","dataType":{"tokens":[{"value":"WebGLRenderer","kind":"canonical"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"CufynoZuyOPeHvEFiAcQY","name":"createTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Create a WebGL texture from an image</p>","params":[{"identifier":"unit","optional":false,"description":"<p>Destination texture unit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image | HTMLCanvasElement | ImageData | Array<Uint8Array> | Array<Float32Array>","kind":"canonical"},{"value":"Image","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"ImageData","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Uint8Array","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1 | %2 | %3 | %4<%5> | %6<%7>"}},{"identifier":"filter","optional":false,"description":"<p>gl.LINEAR or gl.NEAREST</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":true,"default":"\"no-repeat\"","description":"<p>Image repeat behavior (see {@link ImageLayer#repeat})</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"w","optional":true,"description":"<p>Source image width (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":true,"description":"<p>Source image height (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"description":"<p>Source image border (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"premultipliedAlpha","optional":true,"default":"true","description":"<p>Multiplies the alpha channel into the other color channels</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"mipmap","optional":true,"default":"true","description":"<p>Whether mipmap levels should be generated for this texture</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}}]},{"id":"L_kvC-KOatpZ_uz2Tolso","name":"drawVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw an array of vertices</p>","params":[{"identifier":"mode","optional":false,"description":"<p>primitive type to render (gl.POINTS, gl.LINE_STRIP, gl.LINE_LOOP, gl.LINES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN, gl.TRIANGL...","dataType":{"tokens":[{"value":"GLenum","kind":"canonical"},{"value":"GLenum","kind":"canonical"}],"template":"%1"}},{"identifier":"verts","optional":false,"description":"<p>vertices</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"vertexCount","optional":true,"default":"verts.length","description":"<p>amount of points defined in the points array</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"PIFzTYcvi95-2EstU4LZo","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Flush batched texture operations to the GPU</p>","params":[{"identifier":"mode","optional":true,"default":"gl.TRIANGLES","description":"<p>the GL drawing mode</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"m-z9c_uP9vJKrxo_yovXg","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"7M5PTDkwfmDWssHrBe8NY","name":"setViewport","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Sets the viewport</p>","params":[{"identifier":"x","optional":false,"description":"<p>x position of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y position of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"A9uZXUNHVzK20ydstMpwL","name":"unbindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>unbind the given WebGL texture, forcing it to be reuploaded</p>","params":[{"identifier":"texture","optional":true,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":true,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>unit the unit number that was associated with the given texture</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"0nCQ7IQyxDXG8VQwioaoY","name":"useShader","brief":"","scope":"instance","see":["GLShader"],"type":"MethodDoc","description":"<p>Select the shader to use for compositing</p>","params":[{"identifier":"shader","optional":false,"description":"<p>a reference to a GLShader instance</p>","dataType":{"tokens":[{"value":"GLShader","kind":"canonical"},{"value":"GLShader","kind":"link"}],"template":"%1"}}],"returns":[]}]},{"id":"URDVssc788LOmC1Ty6XgW","name":"WebGLRenderer","brief":"","type":"ClassDoc","description":"<p>a WebGL renderer object</p>","extends":["Renderer"],"members":[{"id":"Wuf0RnobYYJvkVndo795i","name":"compositors","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The list of active compositors</p>"},{"id":"sPghLR-uS9G3q8ceM3c7Q","name":"currentCompositor","brief":"","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The current compositor used by the renderer</p>"},{"id":"xw7lognyWtJfbkBM98Qda","name":"currentTransform","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The current transformation matrix used for transformations on the overall scene</p>"},{"id":"CGLgVTW5OF-znOb8xCeQk","name":"gl","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The WebGL context</p>"},{"id":"ay0hjY68R_QEZVuYuzJbR","name":"GPURenderer","brief":"","defaultValue":"null","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The renderer string of the underlying graphics driver.</p>"},{"id":"owYenkM4jp9TEoVK8INh_","name":"GPUVendor","brief":"","defaultValue":"null","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The vendor string of the underlying graphics driver.</p>"},{"id":"nyN2urfvLPqQRRIA3NRHt","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"_MlQG4QlwktrHBymhCZK2","name":"maxTextures","brief":"","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>Maximum number of texture unit supported under the current context</p>"},{"id":"v-1mmM27QDiGwjFdP-RAq","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"QeJ4AVc5G1SAAtDwAPF0y","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"--dedeMVC72159O99jDe4","name":"WebGLVersion","brief":"","defaultValue":"1","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The WebGL version used by this renderer (1 or 2)</p>"},{"id":"3ojIot8hizYjyKNUAGNxd","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"aCHNhj0feV6Txt3wkEPJx","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the gl context with the given color.</p>","params":[{"identifier":"color","optional":true,"default":"\"#000000\"","description":"<p>CSS color.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"opaque","optional":true,"default":"false","description":"<p>Allow transparency [default] or clear the surface completely [true]</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"bB-CmuqoHxC8BaBAeWPXv","name":"clearMask","brief":"","scope":"instance","see":["WebGLRenderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"Cyy9Pu-55KNFmke2XvgHM","name":"clearRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Erase the pixels in the given rectangular area by setting them to transparent black (rgba(0,0,0,0)).</p>","params":[{"identifier":"x","optional":false,"description":"<p>x axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>The rectangle's width.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The rectangle's height.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"9b-NMQuXSkcXjYjiTTBtE","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"l280dEudKyfGZ1NEZMaPu","name":"clipRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clip the given region from the original canvas. Once a region is clipped,\nall future drawing will be limited to the clippe...","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"03S55NBmqa-8utXDu8k_6","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel renderering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.preferWebGL1","optional":true,"default":"false","description":"<p>if true the renderer will only use WebGL 1</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.powerPreference","optional":true,"default":"\"default\"","description":"<p>a hint to the user agent indicating what configuration of GPU is suitable for the WebGL context (&quot;default&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.compositor","optional":true,"description":"<p>A class that implements the compositor API</p>","dataType":{"tokens":[{"value":"WebGLCompositor","kind":"canonical"},{"value":"WebGLCompositor","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"pIJq4hleiHcZDkPrWWMkb","name":"createPattern","brief":"","examples":[{"caption":"","code":"\n var tileable   = renderer.createPattern(image, \"repeat\");\n var horizontal = renderer.createPattern(image, \"repeat-x\");\n var vertical   = renderer.createPattern(image, \"repeat-y\");\n var basic      = renderer.createPattern(image, \"no-repeat\");\n"}],"scope":"instance","see":["ImageLayer#repeat"],"type":"MethodDoc","description":"<p>Create a pattern with the specified repetition</p>","params":[{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":false,"description":"<p>Define how the pattern should be repeated</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}}]},{"id":"7Ha_a6lUCiKulPC1z4Hn8","name":"drawImage","brief":"","examples":[{"caption":"","code":"\n // Position the image on the canvas:\n renderer.drawImage(image, dx, dy);\n // Position the image on the canvas, and specify width and height of the image:\n renderer.drawImage(image, dx, dy, dWidth, dHeight);\n // Clip the image and position the clipped part on the canvas:\n renderer.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Draw an image to the gl context</p>","params":[{"identifier":"image","optional":false,"description":"<p>An element to draw into the context. The specification permits any canvas image source (CanvasImageSource), specifically, ...","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"sx","optional":false,"description":"<p>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sy","optional":false,"description":"<p>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sw","optional":false,"description":"<p>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rect...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sh","optional":false,"description":"<p>The height of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dx","optional":false,"description":"<p>The X coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dy","optional":false,"description":"<p>The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dw","optional":false,"description":"<p>The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dh","optional":false,"description":"<p>The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the imag...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"q3WA2Omt3RaddyTdfjnAQ","name":"drawPattern","brief":"","scope":"instance","see":["WebGLRenderer#createPattern"],"type":"MethodDoc","description":"<p>Draw a pattern within the given rectangle.</p>","params":[{"identifier":"pattern","optional":false,"description":"<p>Pattern object</p>","dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-YK02FDRqD6zdvAwMi8Bi","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"uBiD1PHkicn09NTO0-YWm","name":"fillArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"kZPD4lohk_a7UKu-sqgFV","name":"fillEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ohSuUXiPE3q0Cuj_Ka8__","name":"fillLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"QEiKuu0_0vmBh6M1b7oeQ","name":"fillPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"jwWZfzsIybKjIictzrxQB","name":"fillRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"LdtzXecXtTDIKKJa8bhuD","name":"fillRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a rounded filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ELKSZ-8drGN1oxyubk3yF","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Flush the compositor to the frame buffer</p>","params":[],"returns":[]},{"id":"UHDABBuorA43G_BgWGAJs","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"SRmgfBEdG23TUx1iP9aGe","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"Dr5ClvuY34aBE-8yWgU0g","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"1XBhVRN-zg5Y10tzNtu8O","name":"getContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the WebGLContext instance for the renderer\nreturn a reference to the system 2d Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"70wmLxiqkDXBOAkf2bOm8","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"QOmLIC22tKOq4iXR8uAOl","name":"getContextGL","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the WebGL Context object of the given Canvas</p>","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"_3BXNDm_GIO-1DLaFUj5-","name":"getGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the global alpha</p>","params":[],"returns":[{"description":"<p>global alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"QzQ71bZyOXcjBtPgC09DN","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"mgryjogpPtwI0vV9KrDf-","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"ZdFzPCrIoVyCAr6EtksKD","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding WebGL Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"p4MceWyXqDojblOc69Q3p","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"QqhqsrZ0zFdv41_z2jpz9","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NrLZsn7aV5kyEkfBsJWIj","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-lxSkAPkt1yhDjrdRmTxG","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"s2P20Z4g3n6LXM_6hx-d6","name":"resetTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the gl transform to identity</p>","params":[],"returns":[]},{"id":"Qk7OkhvGnElEX38q9fJd2","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tp9zfjYlelqT94puKwM9m","name":"restore","brief":"","scope":"instance","type":"MethodDoc","description":"<p>restores the canvas context</p>","params":[],"returns":[]},{"id":"d--Wuy4sFSXc44Tcrfao6","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotates the uniform matrix</p>","params":[{"identifier":"angle","optional":false,"description":"<p>in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"njr-22p53idiQV9b9vG4M","name":"save","brief":"","scope":"instance","type":"MethodDoc","description":"<p>saves the canvas context</p>","params":[],"returns":[]},{"id":"gukT4JlztzHGiGBoJqf2J","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scales the uniform matrix</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"TSRIji5vGrkTrjGJVnj_m","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"yf70PivdgIdvCMsBZfjli","name":"setBlendMode","brief":"","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"type":"MethodDoc","description":"<p>set a blend mode for the given context. <br>\nSupported blend mode between Canvas and WebGL remderer : <br></p>\n<ul>\n<li>&q...","params":[{"identifier":"mode","optional":true,"default":"\"normal\"","description":"<p>blend mode : &quot;normal&quot;, &quot;multiply&quot;, &quot;lighter&quot;, &quot;additive&quot;, &quot;screen&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"gl","optional":true,"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"QuhHG3tvuXspjiMmyJMY9","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the current fill &amp; stroke style color.\nBy default, or upon reset, the value is set to #000000.</p>","params":[{"identifier":"color","optional":false,"description":"<p>css color string.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"AASb8gTnJL7NMWHRR77Xf","name":"setCompositor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the active compositor for this renderer</p>","params":[{"identifier":"compositor","optional":false,"default":"\"default\"","description":"<p>a compositor name or instance</p>","dataType":{"tokens":[{"value":"WebGLCompositor | string","kind":"canonical"},{"value":"WebGLCompositor","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"Dro5NOb2g4IhE2eTjxxpZ","name":"setGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the global alpha</p>","params":[{"identifier":"alpha","optional":false,"description":"<p>0.0 to 1.0 values accepted.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wtLnGvyE1NQg15VxV6k1x","name":"setLineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the line width</p>","params":[{"identifier":"width","optional":false,"description":"<p>Line width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"I75Uj6OdrP0w5sE9oL3Rm","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>a shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"0IcYhmorQ4CrYTNFxl_tT","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"pBtsT-45up2udHrGewEgV","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gVLEv-JgF8N65R6BjzmFR","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset (overrides) the renderer transformation matrix to the\nidentity one, and then apply the given transformation matrix.</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"_ABPcwXOAmHCaQJIwSVrU","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Wn0uC2zPQ3pBLx2LG4F62","name":"strokeArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"fill","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"eCuvSp70PdKr7uNTcB1b2","name":"strokeEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"vHCWwWPX9re9xjz8csAaw","name":"strokeLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"AjNIkTgSyS0TlAztUpOH5","name":"strokePolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a me.Polygon on the screen with a specified color</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"_e4riKExUa51UzL1FYM4h","name":"strokeRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a stroke rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"fTG1wFTlK_7HorKaYvYRY","name":"strokeRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rounded rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"FYUb7yHciQrCU1GjcdevY","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"Gt_SJ-J4MTJhmTLJFPMSD","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply given matrix into the renderer tranformation matrix</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"TM0vj2_BGJXzwtRVyyvEb","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the uniform matrix by the given coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"wHeJAEn1RLyviO-WmPWef","name":"World","brief":"","type":"ClassDoc","description":"<p>an object representing the physic world, and responsible for managing and updating all childs and physics</p>","extends":["Container"],"members":[{"id":"tSna8kA-qQcCQ-O9Xz-c-","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"GaugKwhfBAyAhcU53UbK4","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"oKDcvtVyEhzLPhlMYqdr2","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"LKZrNgHkWRmbMuaQ-vSMz","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"5M9epUr92JkxJfuKuJ98R","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"dFMXoTrXwDOIr9I5DitGz","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"Fg-zlv1NHDFl-JnSDihNa","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"CEyeVB1W4g5XvxGFnwHtS","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"IblFKEYzMxBIxqtb4XG4w","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"-hs2XDfn4jj3D9lorf25D","name":"bodies","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the active physic bodies in this simulation</p>"},{"id":"85OKllD5AjeWE5iXJ44GT","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"dK-BwVkpUfjBfqAfZqTXl","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"JpejbK_MC9XcRrTnhS8hI","name":"broadphase","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the instance of the game world quadtree used for broadphase</p>"},{"id":"j4O6v7ladRqXM8mjAox9M","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"3mhYdPGQCbmDP1ZCYR5ei","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"e99Rm9YNhHZ1-18stcjR8","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"VYeYz4xGS_mW4Q0KuYitK","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"fRMrZAxyFzWHhsu0ZAHv6","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"hUAdSP06G9iOZi7gznJCx","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"d4rCtgKBm_vsI3aXRFQ4h","name":"fps","brief":"","access":"public","defaultValue":"60","scope":"instance","see":["timer.maxfps"],"type":"PropertyDoc","description":"<p>the rate at which the game world is updated,\nmay be greater than or lower than the display fps</p>"},{"id":"EAh8igXAJQhwNjohiUOEA","name":"gravity","brief":"","access":"public","defaultValue":"<0,0.98>","scope":"instance","type":"PropertyDoc","description":"<p>world gravity</p>"},{"id":"K1jTkhZZY4TW0WJv-GCoI","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"IsLsysaRx_nld5-C0ghXX","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"21bgrtpoH1tYcPanyRIW-","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"fWN4_vulh2u415SIIAZcI","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"I6lKW7r8dM4J4WQ51PK4b","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"TYB50XsMpP-HQpPgmtYvg","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"xx0H88pnZQ7mfu19VTrVG","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"nzkUzbxPw2dXzKj3ZYVuG","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"3fqk0ZJ-EobxWGzYKNLJ3","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"cn02RcNaLn8x-_yjZWKYG","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"T-62jpZqpZIEIGOMTv577","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"QU-W8iAAXc0UhDAkqrgv2","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"7qR9qNIdgCFzmaAANNZcc","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"_QeF_phQTIwAz9RWZqWBF","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"-lBDveWBTUoaesbSjJvMl","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"VwcArtemJycGmhGUv0Bja","name":"preRender","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify the rendering method for tile layers. <br>\nif false visible part of the layers are rendered dynamically,<br>\nif tr..."},{"id":"arzV0Iegyr3Tp-O7Q3Xhc","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"fNsdMFTNvgxLoLgRfYRv6","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"CHEJAkSBqKG7nKpqfTKDk","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"59Legr6zGlLhnRnotpvYZ","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"xi-x2UL3Zrnhbc2L1mOTr","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"wi3d_lVea3CsMSbJCVxYX","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"wzFpcC8y3ucpyIzZ19z6h","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"65kvviLkCyX8Vk5my9WrC","name":"addBody","brief":"","scope":"instance","see":["Container.addChild"],"type":"MethodDoc","description":"<p>Add a physic body to the game world</p>","params":[{"identifier":"body","optional":false,"dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this game world</p>","dataType":{"tokens":[{"value":"World","kind":"canonical"},{"value":"World","kind":"link"}],"template":"%1"}}]},{"id":"bbiWgc-lbucixPWiOvVtb","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"4y-ehtI8S4YYuXlxUMV5Y","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cqkOdgcWzmdX3ScaSdCAN","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"a0ys_Hw4koqwpO0OyenqZ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"d-o96kKeJ_p5XlchlGtC1","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PHO8X2HZq-WTX9ezLxGAd","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":true,"default":"game.viewport.width","description":"<p>width of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":true,"default":"game.viewport.height","description":"<p>height of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Ul6uYEJGsxzy_oUZninLB","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DFmOl8-ogOovrmdXqXg6e","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ucnPkjI8yuHKblvpjGYO0","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7S_4G_zNKauaAYfXJ16lJ","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9S7Ad0YHobnoyY--4b0QY","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"MmlxvLekjbOaC10AGv2-d","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"K_odKROAWTmoYeRzoquFI","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"vkGhIlQFUoZqJjECsdyU_","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"0c6SP_-boh1jnh7QJMn5-","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"YUALDZyWHzHgC4LEX8dDD","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2C_7c3ssDlPb8KfW7MZEd","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zt6v_e5eyFLqRx9n8kWiW","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"3xLayU-rXa322585PvMSa","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"-c4pzOjOpstOnDgpGrjKA","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"VEySvVM8QGNU5-wcFHKfw","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"pftIt2RPd2Y5YA13I_Wq7","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"XbhcSgar8jrrLmHiODJAw","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"-YCGbDLEEzjuXLa29WWaM","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ztdh14wnGmsiAttpZCIzn","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jMSh2cwyuySES6H6AGko5","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"D2GEifB8Kw3NJyUESTAl1","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"unJ_QsuvOJ-QlSdQhHX19","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gl1X5kbtAg-vV6uV5G6Xw","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZcHZjC3-WzdpF-8FIOjNs","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"spFylA7QVKchhdSDL5qGo","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ttBp_87YN5O-Z4lRySrLe","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"GNbSE9msB3QfLOqSBR5GJ","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"59z0ksaP0s_5VoKW8FxsW","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tj1hl_ALwhWENTgz-ie-p","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"aLZQWgJqovFawpR8p0_mu","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"xyuxs3DCFOqQlcsVx4UT7","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LyaAoWX0ZODzgxOlcy6Xh","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"JrLLH4XfqAG-QGP7-igU1","name":"removeBody","brief":"","scope":"instance","see":["Container.removeChild"],"type":"MethodDoc","description":"<p>Remove a physic body from the game world</p>","params":[{"identifier":"body","optional":false,"dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this game world</p>","dataType":{"tokens":[{"value":"World","kind":"canonical"},{"value":"World","kind":"link"}],"template":"%1"}}]},{"id":"GMKs_od-nDagJQHAtQgmi","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"wuU72beRZkp5LaGKn_RUY","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"WOuTippJXkXp3-22bZSNu","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the game world</p>","params":[],"returns":[]},{"id":"9u_uvK2gBmDSrb2I0UeUR","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>update the game world</p>","params":[{"identifier":"dt","optional":false,"description":"<p>the time passed since the last frame update</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the word is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"94E69A7zFswkkdTxxsHQY","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"sMeGusicx-mczHGGABDI8","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"SD7IE8DBoMZMMbJDvsy4Y","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RPhvPtWmapgxeJLt9cIBH","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"QLs-gGXIqdClUa6g7MtAq","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"NO9BfCUDGLv2glFHzO3-t","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Vvf5zFcVFXzEAs5OlaNQN","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"fD7kNektQYHMmpB-Rvn_Y","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zuoE-CUIPJZp8PVH_rkDS","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"mCJaqly6NcRE-IjQVrkPb","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Li2SLxVNlBOhzr80ihemQ","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"xhEesGorWOAmjqC5xqbWT","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"SPt_h4tF7Nj9FzzsMVZDo","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"46GhfNqjjvIC6OOYBVWTJ","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LA-agd8-Hc271tV6v-7rl","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0CY0NGilyesgqy3XKk7j2","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"2AnEWqTVewNx1qe8y2umj","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"kBrNXXGyckaC46MQrNWk8","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"_JgLrO-sGBF0GT_y-5dh5","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"nvhi_JbY9H2uPyZx_0j4y","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"FcxvD6tOCU1stJnt3W-Dz","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Juz76HysrYAmsFf02oxk9","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZLDpG9ynM3VrfC_jGR58J","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"ZaEcmy_J7tT2BMQJNGSo7","name":"version","brief":"","defaultValue":"\"__VERSION__\"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>current melonJS version</p>"},{"id":"OcMNx0bfT8_RkIEflY-pp","name":"initialized","brief":"","defaultValue":"false","readonly":true,"type":"PropertyDoc","description":"<p>a flag indicating that melonJS is fully initialized</p>"},{"id":"UENC3mfGp-Se_dLL0JBY2","name":"skipAutoInit","brief":"","defaultValue":"false","see":["boot"],"type":"PropertyDoc","description":"<p>disable melonJS auto-initialization</p>"},{"id":"8bw7CkUcw1aGzUVIuZ_qu","name":"boot","brief":"","access":"public","see":["skipAutoInit"],"type":"FunctionDoc","description":"<p>initialize the melonJS library.\nthis is automatically called unless me.skipAutoInit is set to true,\nto allow asynchronous ...","params":[],"returns":[]}]},"registry":{"pkg-JGsAk9ZHWxJOja-6sPTcE":{"uri":"/docs/melonjs.html"},"uzsOx4tMsjMFZfqI_0Sht":{"uri":"/docs/melonjs/audio.html"},"cbCc8ElnhM_75LUI4T6J9":{"uri":"/docs/melonjs/audio.html#stopOnAudioError"},"bApA_LbNURLJw2NTmchVC":{"uri":"/docs/melonjs/audio/disable.html"},"oDMURAWjt-jDwZQEF7Ciu":{"uri":"/docs/melonjs/audio/enable.html"},"-YG4qQWtPwHuq2n4KycwV":{"uri":"/docs/melonjs/audio/fade.html"},"hjWUHAlSdZcd4eZsAnerm":{"uri":"/docs/melonjs/audio/getCurrentTrack.html"},"doGchQOh9ACYkhFziIFWV":{"uri":"/docs/melonjs/audio/getVolume.html"},"czKa68QO0lOX_2l738Cr1":{"uri":"/docs/melonjs/audio/hasAudio.html"},"Go2Qmmmf1wyXCd5PsiWyD":{"uri":"/docs/melonjs/audio/hasFormat.html"},"SyfzFnPK4bvLZrdlCbXr1":{"uri":"/docs/melonjs/audio/init.html"},"rQ49QF6n8btgyJA4SlA8G":{"uri":"/docs/melonjs/audio/mute.html"},"E-dOWM-gLKPpCGZ3uGeRA":{"uri":"/docs/melonjs/audio/muteAll.html"},"8ZLzHD0DhZnmHrUuqLWTh":{"uri":"/docs/melonjs/audio/muted.html"},"CBCZlFS4xA7dPpPGOinB4":{"uri":"/docs/melonjs/audio/pause.html"},"MqNuLx5oZsDjTnYpOsHGi":{"uri":"/docs/melonjs/audio/pauseTrack.html"},"AAtXqibH6fLU4d6a7XmvA":{"uri":"/docs/melonjs/audio/play.html"},"89F0vNPrS9eJ3IsmCZu23":{"uri":"/docs/melonjs/audio/playTrack.html"},"rTLxchzzuktilDKz5yhHN":{"uri":"/docs/melonjs/audio/rate.html"},"aFGUOXKGJGx0EYuN4ufT8":{"uri":"/docs/melonjs/audio/resume.html"},"O8mxfR5PnP26ZqFMdPHgz":{"uri":"/docs/melonjs/audio/resumeTrack.html"},"yb9a__HYLLNkRbyNGU9r8":{"uri":"/docs/melonjs/audio/seek.html"},"E_RmruxnLIfYgV11AMFFO":{"uri":"/docs/melonjs/audio/setVolume.html"},"VYIZ5GvTDZBeqo7vbub_l":{"uri":"/docs/melonjs/audio/stop.html"},"eTBVyrYbgtHpKEoifoOm9":{"uri":"/docs/melonjs/audio/stopTrack.html"},"AhAM4DLDzIjd81P_rJCkG":{"uri":"/docs/melonjs/audio/unload.html"},"T4ON5F7cvXbRvjhuRBP8t":{"uri":"/docs/melonjs/audio/unloadAll.html"},"1Xolydl-xeQ29C0WmJaZK":{"uri":"/docs/melonjs/audio/unmute.html"},"-00jppIaTAJY6VDzni1qx":{"uri":"/docs/melonjs/audio/unmuteAll.html"},"UJFUcyJw6AORvhWyNl-gz":{"uri":"/docs/melonjs/collision.html"},"sMkDirrwDZxeADPhcx9TW":{"uri":"/docs/melonjs/collision/ResponseObject.html"},"B451wmEgHD3cZoqjKLaVU":{"uri":"/docs/melonjs/collision/ResponseObject.html#a"},"rSyQeY9TjTOzsyT9nwFWr":{"uri":"/docs/melonjs/collision/ResponseObject.html#aInB"},"pJK77vQBxG9Pz6KNkHmrL":{"uri":"/docs/melonjs/collision/ResponseObject.html#b"},"AlFk9SewbCw0uYUzGxChR":{"uri":"/docs/melonjs/collision/ResponseObject.html#bInA"},"EcGYvTO7FVk3RycT5SJ-i":{"uri":"/docs/melonjs/collision/ResponseObject.html#indexShapeA"},"R6MvzrSm0ALm1IIqeKrNd":{"uri":"/docs/melonjs/collision/ResponseObject.html#indexShapeB"},"bLoindrSGO4CmWqIhJBvj":{"uri":"/docs/melonjs/collision/ResponseObject.html#overlap"},"VnXGA7bEV3gxOmdbZ1r6t":{"uri":"/docs/melonjs/collision/ResponseObject.html#overlapN"},"TSkIxFtaDaJ-TyvzQeszi":{"uri":"/docs/melonjs/collision/ResponseObject.html#overlapV"},"evj0OjfBg1cEb9BPqDuOg":{"uri":"/docs/melonjs/collision/ResponseObject.html#clear"},"9ExitqA4_3-JkHKHPvl2o":{"uri":"/docs/melonjs/collision/types.html"},"_UMe6-GSKep5R7db1Ux8m":{"uri":"/docs/melonjs/collision/types.html#ACTION_OBJECT"},"pX0QSAJeqCCAHIprn2Dmg":{"uri":"/docs/melonjs/collision/types.html#ALL_OBJECT"},"bbzS5Cv9ISjtdIcswrgLh":{"uri":"/docs/melonjs/collision/types.html#COLLECTABLE_OBJECT"},"f1uQCcpjoyLHRHQghYH1O":{"uri":"/docs/melonjs/collision/types.html#ENEMY_OBJECT"},"2zalwyBns5Ad5jZE1h3xw":{"uri":"/docs/melonjs/collision/types.html#NO_OBJECT"},"zCgWimfqCV5TNJwzL3E5_":{"uri":"/docs/melonjs/collision/types.html#NO_OBJECT_"},"hRNo8O2C-5vCp0-njYOZX":{"uri":"/docs/melonjs/collision/types.html#NPC_OBJECT"},"pNbeHCRRmVO_5lb4QJdUl":{"uri":"/docs/melonjs/collision/types.html#PLAYER_OBJECT"},"Ybt85atAgCjNrsHSuc250":{"uri":"/docs/melonjs/collision/types.html#PROJECTILE_OBJECT"},"cVPkTYa24Xx_U8898JQEB":{"uri":"/docs/melonjs/collision/types.html#USER"},"4euReoluhAX17uiRYLQOm":{"uri":"/docs/melonjs/collision/types.html#WORLD_SHAPE"},"-6BcIo3RX3_D11qpBPdQE":{"uri":"/docs/melonjs/collision.html#maxChildren"},"RzwxptEVZJz211zkSLPNJ":{"uri":"/docs/melonjs/collision.html#maxDepth"},"xq_Y-_05Z3okrbA3lvmLJ":{"uri":"/docs/melonjs/collision.html#response"},"GEHJI3SMtZqqHfrt6zODe":{"uri":"/docs/melonjs/collision.html#rayCast"},"YrpgDGGJfvFD94XTed1-J":{"uri":"/docs/melonjs/device.html"},"JF5b63MQLMdfyUMdl0eiZ":{"uri":"/docs/melonjs/device.html#accelerationX"},"eGZZiCNdTQqIsZsTVDJJJ":{"uri":"/docs/melonjs/device.html#accelerationY"},"XyX5ULDf-yDkV9t5hH5-P":{"uri":"/docs/melonjs/device.html#accelerationZ"},"k8h0TJT6oxhrbd8e9WWiv":{"uri":"/docs/melonjs/device.html#alpha"},"O3Paz-LabYZ55agz287Al":{"uri":"/docs/melonjs/device.html#android"},"W53arlieEsrhW97x3da6x":{"uri":"/docs/melonjs/device.html#android2"},"8m3N_tJz6mI0b4SObPr8x":{"uri":"/docs/melonjs/device.html#autoFocus"},"dOAbBYy0M-6qfxuTtvkhP":{"uri":"/docs/melonjs/device.html#beta"},"fwRcUe6x1GIg96T5M5mDO":{"uri":"/docs/melonjs/device.html#BlackBerry"},"vupTIKe9b9x1SsTjWbgF5":{"uri":"/docs/melonjs/device.html#chromeOS"},"84pG_Fuwoal638HWSwNsK":{"uri":"/docs/melonjs/device.html#devicePixelRatio"},"Ea5LJpnKnsyxht2snSvTq":{"uri":"/docs/melonjs/device.html#ejecta"},"BCyc1bNz_J0--sj24E-ym":{"uri":"/docs/melonjs/device.html#gamma"},"aOPw5-s5OSTH50l3t-nud":{"uri":"/docs/melonjs/device.html#hasAccelerometer"},"YuZsMWizIqPWXwRgh1fyx":{"uri":"/docs/melonjs/device.html#hasDeviceOrientation"},"gXEuaRUn7jaePmq5YqnMd":{"uri":"/docs/melonjs/device.html#hasFullscreenSupport"},"Rg0GALEBEnfVx-PNQy1M4":{"uri":"/docs/melonjs/device.html#hasPointerLockSupport"},"pPPt57V_4zxiB0-S5ez9A":{"uri":"/docs/melonjs/device.html#hasWebAudio"},"GF7Z5dhxWuPueA-LTjmH9":{"uri":"/docs/melonjs/device.html#iOS"},"wmqD9OxePtx94vkcXkKJy":{"uri":"/docs/melonjs/device.html#isFullscreen"},"AuA-GNzNzJTjjUeXkh95G":{"uri":"/docs/melonjs/device.html#isMobile"},"s8onHcrU-zpIU-y5OcKSo":{"uri":"/docs/melonjs/device.html#isWeixin"},"AMZ4UTVboLwbnIGnupiji":{"uri":"/docs/melonjs/device.html#Kindle"},"CLtFkWwhRnlq_JE8vn89d":{"uri":"/docs/melonjs/device.html#language"},"JPDNEitq5zDW4FluAEido":{"uri":"/docs/melonjs/device.html#linux"},"0cTscgbUSOyX03UkJr9Nq":{"uri":"/docs/melonjs/device.html#localStorage"},"9XKlY4tCEhNkfDXgumFG-":{"uri":"/docs/melonjs/device.html#maxTouchPoints"},"sT9FRZK7ipWbUQjg7KBHI":{"uri":"/docs/melonjs/device.html#nativeBase64"},"jB8h4SVTvzmQz-bSW6eJE":{"uri":"/docs/melonjs/device.html#nodeJS"},"leIIBWmQLNX02obvayqol":{"uri":"/docs/melonjs/device.html#OffScreenCanvas"},"fhrcetXweDz6inS1td978":{"uri":"/docs/melonjs/device.html#pauseOnBlur"},"Awivtd3KM7VG8695MFYWW":{"uri":"/docs/melonjs/device.html#resumeOnFocus"},"nUJQ7TLcAudjRQMUrSS7V":{"uri":"/docs/melonjs/device.html#ScreenOrientation"},"jYkQCiN-V6dEDNN3pojkc":{"uri":"/docs/melonjs/device.html#sound"},"q4G_Y1gdlxjHmhF79cl4X":{"uri":"/docs/melonjs/device.html#stopOnBlur"},"FmmBP-UGgHmNs4CbqdxZh":{"uri":"/docs/melonjs/device.html#touch"},"3umxj2QKoSxQ4zr5cItxZ":{"uri":"/docs/melonjs/device.html#ua"},"IaKJV11aE1RIdO8-R_CQy":{"uri":"/docs/melonjs/device.html#wheel"},"Chb26dEZOMQg_0R-mQoUI":{"uri":"/docs/melonjs/device.html#wp"},"OEyWRfo04aAg1b3wg2fTU":{"uri":"/docs/melonjs/device.html#turnOffPointerLock"},"ktNjrVsZYDkn7HzfuTPAa":{"uri":"/docs/melonjs/device.html#turnOnPointerLock"},"dkz5G-nfTrXITTaJr3PkZ":{"uri":"/docs/melonjs/device/enableSwipe.html"},"Fitfv2MCrDp531X4aaoSV":{"uri":"/docs/melonjs/device/exitFullscreen.html"},"r4YD0CXCNy3s9G-vNz5a5":{"uri":"/docs/melonjs/device/focus.html"},"CV2FjPOx5LgQH6gy1fVNy":{"uri":"/docs/melonjs/device/getElement.html"},"zlRFcs4fiNRdVo4EvpWxY":{"uri":"/docs/melonjs/device/getElementBounds.html"},"iK0nzahsXMquKa8f5bmmm":{"uri":"/docs/melonjs/device/getMaxShaderPrecision.html"},"9rfxsxXFWtTposty1naem":{"uri":"/docs/melonjs/device/getParentBounds.html"},"jefnvdIG9OU_IZxwvvhga":{"uri":"/docs/melonjs/device/getParentElement.html"},"t-71xgHDDAG2nmDgzYOV2":{"uri":"/docs/melonjs/device/getScreenOrientation.html"},"6WYUfv2i8j2N-cdYYK4kr":{"uri":"/docs/melonjs/device/getStorage.html"},"tC4Z_oB50K4hEioaorwUl":{"uri":"/docs/melonjs/device/isLandscape.html"},"yYyPu8HpbkOBlKUFXn33k":{"uri":"/docs/melonjs/device/isPortrait.html"},"m-GeZOv4rygxCePrF0tj7":{"uri":"/docs/melonjs/device/isWebGLSupported.html"},"LVk1rUJ4VGNutW8-uxR-8":{"uri":"/docs/melonjs/device/lockOrientation.html"},"C2IY2WbgMqZ06tCDAMyJc":{"uri":"/docs/melonjs/device/onReady.html"},"ZHBiZgzfeBcMwcBKLqT02":{"uri":"/docs/melonjs/device/requestFullscreen.html"},"uAkrKXLT4cfrSmzA1Lkd5":{"uri":"/docs/melonjs/device/unlockOrientation.html"},"UpyoPju5Sxsx3wTabvBiz":{"uri":"/docs/melonjs/device/unwatchAccelerometer.html"},"4mHmYQCsA41HYSXudAiwA":{"uri":"/docs/melonjs/device/unwatchDeviceOrientation.html"},"_Y0mvT1dC5uPSPPRgVxtQ":{"uri":"/docs/melonjs/device/vibrate.html"},"rPTAUdqDRG5f6VfM8l6RW":{"uri":"/docs/melonjs/device/watchAccelerometer.html"},"rRL3gr_uJoW4PWr-0S-r2":{"uri":"/docs/melonjs/device/watchDeviceOrientation.html"},"4HaggF5h91GCJPoXqB-37":{"uri":"/docs/melonjs/event.html"},"PpciO4pZKyP0EtmWoIb1f":{"uri":"/docs/melonjs/event.html#BOOT"},"Hi_G6kMJy4erGTrEKQq7B":{"uri":"/docs/melonjs/event.html#CANVAS_ONRESIZE"},"4C0J2IgDSADIgvWun3RQX":{"uri":"/docs/melonjs/event.html#DRAGEND"},"CEN2AF8RikLf16r7axLOJ":{"uri":"/docs/melonjs/event.html#DRAGSTART"},"Sgn6LCVN1PGEzpsTczzwS":{"uri":"/docs/melonjs/event.html#GAME_AFTER_DRAW"},"fvw8HyuAwk6J3Oa7ih03z":{"uri":"/docs/melonjs/event.html#GAME_AFTER_UPDATE"},"J_TZRIx-criZjow5kwmsK":{"uri":"/docs/melonjs/event.html#GAME_BEFORE_DRAW"},"YwRVpng3Y3rGwNG1o14bO":{"uri":"/docs/melonjs/event.html#GAME_BEFORE_UPDATE"},"qMedFdl73bjnVxLFtkGOR":{"uri":"/docs/melonjs/event.html#GAME_INIT"},"fhqkiXhK2N1lV3ZC2tQ_m":{"uri":"/docs/melonjs/event.html#GAME_RESET"},"IRmeW8gIgvdvavgIZaq2q":{"uri":"/docs/melonjs/event.html#GAME_UPDATE"},"uW7QDP5a3IXMZXvvE7ZIH":{"uri":"/docs/melonjs/event.html#GAMEPAD_CONNECTED"},"NiftU-GQb_gXFBSjprsJN":{"uri":"/docs/melonjs/event.html#GAMEPAD_DISCONNECTED"},"v3_M0fPZ9kVru22o42rQN":{"uri":"/docs/melonjs/event.html#GAMEPAD_UPDATE"},"zQBUWxzjoU7r3p90A72OZ":{"uri":"/docs/melonjs/event.html#KEYDOWN"},"U2hOOGdfiwo0lXq614ZEF":{"uri":"/docs/melonjs/event.html#KEYUP"},"VOnRKnwMTG5JiDQMIxgjh":{"uri":"/docs/melonjs/event.html#LEVEL_LOADED"},"iqs4zdk2oNu60G8XeE65h":{"uri":"/docs/melonjs/event.html#LOADER_COMPLETE"},"6MnNNaVSPqoOoFcS-O5nY":{"uri":"/docs/melonjs/event.html#LOADER_PROGRESS"},"QkB-4REbewqydsy0vw92z":{"uri":"/docs/melonjs/event.html#ONCONTEXT_RESTORED"},"6qtokUg9NAfv7eM4JA4qo":{"uri":"/docs/melonjs/event.html#POINTERLOCKCHANGE"},"z9y5FC6h6KJmUE3FPJiEp":{"uri":"/docs/melonjs/event.html#POINTERMOVE"},"DjMoCfuXo0GAK6NT68QcF":{"uri":"/docs/melonjs/event.html#STATE_CHANGE"},"_Q2cc2O3ssUQigGjp1VW0":{"uri":"/docs/melonjs/event.html#STATE_PAUSE"},"FIwQdMN3KDzC_3OkF1Wsk":{"uri":"/docs/melonjs/event.html#STATE_RESTART"},"A5qUGKyZ37wIEU7R31tOH":{"uri":"/docs/melonjs/event.html#STATE_RESUME"},"w2wEN0yeyvA3EvsuX_je3":{"uri":"/docs/melonjs/event.html#STATE_STOP"},"cvu4Kud484hiifPou5nCK":{"uri":"/docs/melonjs/event.html#VIDEO_INIT"},"1rNZXM6eKUFOvR8pyV4vB":{"uri":"/docs/melonjs/event.html#VIEWPORT_ONCHANGE"},"pKP2Er4jS7cMuzk33uWDx":{"uri":"/docs/melonjs/event.html#VIEWPORT_ONRESIZE"},"thU_31v_LSN6S0yOUDbmb":{"uri":"/docs/melonjs/event.html#WEBGL_ONCONTEXT_LOST"},"oeh1XKZ88Ls8yfIQgLnTT":{"uri":"/docs/melonjs/event.html#WINDOW_ONORIENTATION_CHANGE"},"Ezbtlilm_W8py8sUlWruZ":{"uri":"/docs/melonjs/event.html#WINDOW_ONRESIZE"},"2xQYtMFFrV554pRr3o7UE":{"uri":"/docs/melonjs/event.html#WINDOW_ONSCROLL"},"cneiFy4QO5YAz5vELKF6m":{"uri":"/docs/melonjs/event/emit.html"},"VhHt6Krh9koH96yj0hlXg":{"uri":"/docs/melonjs/event/off.html"},"QNUyShJOMcvflapKsu5ja":{"uri":"/docs/melonjs/event/on.html"},"Pemqt5Z9Yb3b4irq3eb17":{"uri":"/docs/melonjs/event/once.html"},"tsOyR7FBHmzwCyHePpyAI":{"uri":"/docs/melonjs/game.html"},"0vAb2bfXQx2MximL3ruMl":{"uri":"/docs/melonjs/game.html#lastUpdate"},"XbrT7WALPDHuKQB4KbYvD":{"uri":"/docs/melonjs/game.html#mergeGroup"},"Ly5RI2FxNasqWMhmiJqEE":{"uri":"/docs/melonjs/game.html#sortOn"},"qRnud01JJ881PupU7QRFZ":{"uri":"/docs/melonjs/game.html#viewport"},"6DBlDXI9wSn6FoUsaWuVe":{"uri":"/docs/melonjs/game.html#world"},"6A9sCWBGMV2-kOhfqW068":{"uri":"/docs/melonjs/game/getParentContainer.html"},"v-xpw7b3VerHZRHYnDK4c":{"uri":"/docs/melonjs/game/onLevelLoaded.html"},"s3j8DjOaKMC6wCO7i7pqL":{"uri":"/docs/melonjs/game/repaint.html"},"lTkZ79dkkAzwnqk-MkPou":{"uri":"/docs/melonjs/game/reset.html"},"cbqpujaV1l0fltnTuwaMw":{"uri":"/docs/melonjs/game/updateFrameRate.html"},"zyU0jGIIsDWpAmtFuHaXc":{"uri":"/docs/melonjs/input.html"},"IEpX00IvPtzbuCUTNPVxG":{"uri":"/docs/melonjs/input/GAMEPAD.html"},"vAlUWsBkm5y5nkcxGS1Pn":{"uri":"/docs/melonjs/input/GAMEPAD/AXES.html"},"B58clkjtIheDiShG3hCty":{"uri":"/docs/melonjs/input/GAMEPAD/BUTTONS.html"},"Fw6I90DZFLbIwG6L8FQv7":{"uri":"/docs/melonjs/input/KEY.html"},"PcGEV2i-LskxstH57ijDj":{"uri":"/docs/melonjs/input/KEY.html#A"},"NItTBJOQgqanFzzT6HkMG":{"uri":"/docs/melonjs/input/KEY.html#ADD"},"kbV3m-I3Y0qCnFzdlLFsZ":{"uri":"/docs/melonjs/input/KEY.html#ALT"},"7tG6yhxCcFGTr0Q1Q8ceL":{"uri":"/docs/melonjs/input/KEY.html#B"},"mwDkgqZF0kuaHea1debfW":{"uri":"/docs/melonjs/input/KEY.html#BACK_SLASH"},"8GIq5wSfpHhUtT9d8d_CP":{"uri":"/docs/melonjs/input/KEY.html#C"},"XtbaHDSblNPdKTaaq5IId":{"uri":"/docs/melonjs/input/KEY.html#CAPS_LOCK"},"1zvhttEiKcujJWTf25N-Y":{"uri":"/docs/melonjs/input/KEY.html#CLOSE_BRACKET"},"YFeeixMZur16s0FQfI7US":{"uri":"/docs/melonjs/input/KEY.html#COMMA"},"Pyd0o2ec8iqDQ5xxk2ig1":{"uri":"/docs/melonjs/input/KEY.html#CTRL"},"k5-8CbODjwemJztcCL2F6":{"uri":"/docs/melonjs/input/KEY.html#D"},"fvoAxsO3rgGXjEm1Pm6Yi":{"uri":"/docs/melonjs/input/KEY.html#DECIMAL"},"yqyK4MBXqWQXLrHbsj1To":{"uri":"/docs/melonjs/input/KEY.html#DELETE"},"6mRwzt9eo64FEE4Tcb-Cu":{"uri":"/docs/melonjs/input/KEY.html#DIVIDE"},"cnctrm_VpL_WLJFdS22Dd":{"uri":"/docs/melonjs/input/KEY.html#DOWN"},"Ea4UQsDUP4DdVRxamCqCZ":{"uri":"/docs/melonjs/input/KEY.html#E"},"LURf6Oxx7Sf_b3szxaBhf":{"uri":"/docs/melonjs/input/KEY.html#END"},"ksUM7ortKMsBZK2GvHEdz":{"uri":"/docs/melonjs/input/KEY.html#ENTER"},"HKBgXSSuJl0ZW48MbzF9x":{"uri":"/docs/melonjs/input/KEY.html#ESC"},"nuLpnPAnz1-3mKqhRkL9w":{"uri":"/docs/melonjs/input/KEY.html#F"},"MCMBTOv_zUMUJeM0yRdE2":{"uri":"/docs/melonjs/input/KEY.html#F1"},"mkzFczzm35zavfeqyWo3v":{"uri":"/docs/melonjs/input/KEY.html#F10"},"ESLSKIMIJlB0iXnDwWLGB":{"uri":"/docs/melonjs/input/KEY.html#F11"},"IIxSiHgcAHCyiQ03kPEmg":{"uri":"/docs/melonjs/input/KEY.html#F12"},"4ZRE6aI4BnAnFE3U5jN94":{"uri":"/docs/melonjs/input/KEY.html#F2"},"VYcKySS1RSArjZn9afiYF":{"uri":"/docs/melonjs/input/KEY.html#F3"},"SmIPn82tMymDXSSxp7y42":{"uri":"/docs/melonjs/input/KEY.html#F4"},"hiDb5iwg6H6nDVQkWHB3Z":{"uri":"/docs/melonjs/input/KEY.html#F5"},"Y7aZfQ_TNBsQDzHGzx3lq":{"uri":"/docs/melonjs/input/KEY.html#F6"},"tAnyo0Qxc8AzEau1tS2SL":{"uri":"/docs/melonjs/input/KEY.html#F7"},"0gPu8G1AsvcafaqnysReD":{"uri":"/docs/melonjs/input/KEY.html#F8"},"yvEiY_JHVAKyLlxj-If7j":{"uri":"/docs/melonjs/input/KEY.html#F9"},"ZQ_wZBoljG-BCJXBa_HYQ":{"uri":"/docs/melonjs/input/KEY.html#FORWAND_SLASH"},"Zx3a-fXd25bhIetMWJ72X":{"uri":"/docs/melonjs/input/KEY.html#G"},"wcAZ5Cohy2Vfal7HcX8B6":{"uri":"/docs/melonjs/input/KEY.html#GRAVE_ACCENT"},"6WFOmjhaEP-dk9lILr-cT":{"uri":"/docs/melonjs/input/KEY.html#H"},"OLc8mBqpHdFqE2uheKUTc":{"uri":"/docs/melonjs/input/KEY.html#HOME"},"PRkQ5NpDZawTXB86C7WEO":{"uri":"/docs/melonjs/input/KEY.html#I"},"RixnHGmVYUqZrsibTPXdR":{"uri":"/docs/melonjs/input/KEY.html#INSERT"},"gPvNLJr8EqpGiwE15Cag4":{"uri":"/docs/melonjs/input/KEY.html#J"},"ml802kTzjmBERheUr97kC":{"uri":"/docs/melonjs/input/KEY.html#K"},"3QeFfWuySnXtwqozHSqrb":{"uri":"/docs/melonjs/input/KEY.html#L"},"LXB7VqOrzUH2QPtuJZc15":{"uri":"/docs/melonjs/input/KEY.html#LEFT"},"xBfndPdFXBXRZ2uwHEISG":{"uri":"/docs/melonjs/input/KEY.html#M"},"9SIjkzWWZgMPSOsvsSGjZ":{"uri":"/docs/melonjs/input/KEY.html#MINUS"},"unXviC3OFoRFlWTKKW1bB":{"uri":"/docs/melonjs/input/KEY.html#MULTIPLY"},"yStYOna9KQwgy6uUNZmBF":{"uri":"/docs/melonjs/input/KEY.html#N"},"0keKTGxvJpNWPNo_at7VZ":{"uri":"/docs/melonjs/input/KEY.html#NUM_LOCK"},"EZlItQao6KRMUerct8tsH":{"uri":"/docs/melonjs/input/KEY.html#NUM0"},"S4S8Ww67Xaf2ogkNR852H":{"uri":"/docs/melonjs/input/KEY.html#NUM1"},"V_5fw2HqAmDuQS53Tqpxa":{"uri":"/docs/melonjs/input/KEY.html#NUM2"},"hhQ4VRmJscptgttJc0QjW":{"uri":"/docs/melonjs/input/KEY.html#NUM3"},"GJ3Fdt5C_-e-vOcRvY7Th":{"uri":"/docs/melonjs/input/KEY.html#NUM4"},"-83dQbu9exdqQXRUpM4Ce":{"uri":"/docs/melonjs/input/KEY.html#NUM5"},"FXJU23CVzm_2LaukBJZjo":{"uri":"/docs/melonjs/input/KEY.html#NUM6"},"ufNf1jdBWddku3Yt7aRTl":{"uri":"/docs/melonjs/input/KEY.html#NUM7"},"oVHbqZoK7uBDJ4pWigf-_":{"uri":"/docs/melonjs/input/KEY.html#NUM8"},"rh-B8cvfFqnUPxsOO54P6":{"uri":"/docs/melonjs/input/KEY.html#NUM9"},"FXMR4dfaIY7pZZ_yBhO1r":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD0"},"3bKDcPVVVkMJJmulYsNPl":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD1"},"MKN8V9MJsTYuu8hiTiQOk":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD2"},"sK2cAluShNUtKHS8A3eck":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD3"},"bApphFduMZdccBOic5QUh":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD4"},"bYyG97rtNtCNxIVIpmQ_3":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD5"},"CMx7G40Bg1LmAogrv6yHW":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD6"},"Ose9nN5sfZ5o-km5QJ8kM":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD7"},"u7X9atXMArXU01xEKEshy":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD8"},"JFRbNQWPnnyj4jIoOXlAc":{"uri":"/docs/melonjs/input/KEY.html#NUMPAD9"},"XQM3GTuPePHsg8uSzqQgF":{"uri":"/docs/melonjs/input/KEY.html#O"},"yU1UZFkUEjV3JIjPVf5yT":{"uri":"/docs/melonjs/input/KEY.html#OPEN_BRACKET"},"3_T9ygcT_nB8D_j9O6L45":{"uri":"/docs/melonjs/input/KEY.html#P"},"3uUIUx5Juzs-C1TRSMI99":{"uri":"/docs/melonjs/input/KEY.html#PAGE_DOWN"},"0x5Cvh6TNsLdVkX9hEAuT":{"uri":"/docs/melonjs/input/KEY.html#PAGE_UP"},"ubwP0CUBpsNcgKp6r_gWF":{"uri":"/docs/melonjs/input/KEY.html#PAUSE"},"bQGkz8wrQqD_zqnoVnMdt":{"uri":"/docs/melonjs/input/KEY.html#PERIOD"},"oUC3mggiOZubgL5cnqaY8":{"uri":"/docs/melonjs/input/KEY.html#PLUS"},"IjpN6ecz1pZi7l-4KzSIw":{"uri":"/docs/melonjs/input/KEY.html#PRINT_SCREEN"},"2h5rGhi6jekrZ0HWMirvJ":{"uri":"/docs/melonjs/input/KEY.html#Q"},"jqWE5vg7Yaddk7DI9axND":{"uri":"/docs/melonjs/input/KEY.html#R"},"YD-ONYRfIzmYUGNBQJOt1":{"uri":"/docs/melonjs/input/KEY.html#RIGHT"},"UOjk1cX8bnBVSUQ7BDZY2":{"uri":"/docs/melonjs/input/KEY.html#S"},"60jKCjFb8Q6Nl4up-DdAO":{"uri":"/docs/melonjs/input/KEY.html#SCROLL_LOCK"},"LyT9tXkF7Fzj0BbDTYhFE":{"uri":"/docs/melonjs/input/KEY.html#SEMICOLON"},"bnwZjftaJ_k1kuo6s-rEC":{"uri":"/docs/melonjs/input/KEY.html#SHIFT"},"Flf4dvo_NZ6E2SgTGYt4R":{"uri":"/docs/melonjs/input/KEY.html#SINGLE_QUOTE"},"wCDGdSl7rIbo6FPqu9oFH":{"uri":"/docs/melonjs/input/KEY.html#SPACE"},"AISgZkVBlA8S8cMZKWhXx":{"uri":"/docs/melonjs/input/KEY.html#SUBSTRACT"},"4i7fLD5OXm7CquV0poqO8":{"uri":"/docs/melonjs/input/KEY.html#T"},"iOTPMzuGax4dnpPWdMRzi":{"uri":"/docs/melonjs/input/KEY.html#TAB"},"rCDklsoO3UuE4Cnb__ap-":{"uri":"/docs/melonjs/input/KEY.html#TILDE"},"MBysFXghwRw3XUU4wnSzu":{"uri":"/docs/melonjs/input/KEY.html#U"},"gwCczTfo49LYAls9IPONA":{"uri":"/docs/melonjs/input/KEY.html#UP"},"BkZ8IVNKE-2iztWaGN-VJ":{"uri":"/docs/melonjs/input/KEY.html#V"},"OPODQZcltsbKjEJh8ob45":{"uri":"/docs/melonjs/input/KEY.html#W"},"oAoVPTJVfA5XKf183Lv3w":{"uri":"/docs/melonjs/input/KEY.html#WINDOW_KEY"},"t_0lZT7mwIfvGeAUi2jD2":{"uri":"/docs/melonjs/input/KEY.html#X"},"YnSDf6qeONqDGWlxjcAkP":{"uri":"/docs/melonjs/input/KEY.html#Y"},"S9HMlOFLHABEV00j6LuCm":{"uri":"/docs/melonjs/input/KEY.html#Z"},"aMc9mseApl22ahBItYo0x":{"uri":"/docs/melonjs/input.html#keyBoardEventTarget"},"rbWKqAbXLkAhtmKPZtLi3":{"uri":"/docs/melonjs/input.html#locked"},"7yAHKl7FtcSKnX2g5cf3e":{"uri":"/docs/melonjs/input.html#pointer"},"HV8V-Zem7oBsdL_z-o6zb":{"uri":"/docs/melonjs/input.html#pointerEventTarget"},"XCc8Cf8dicU0Z2NUtbX1I":{"uri":"/docs/melonjs/input.html#preventDefault"},"mxbluWpob5iKNwdCANTDD":{"uri":"/docs/melonjs/input.html#setGamepadMapping"},"elj0A9cfK4lmxLAwdm0TW":{"uri":"/docs/melonjs/input.html#throttlingInterval"},"i8-xMZ93gnvj1xXAnRyiL":{"uri":"/docs/melonjs/input/bindGamepad.html"},"WKzgsDAY5FBNDGvmpF-4z":{"uri":"/docs/melonjs/input/bindKey.html"},"vgrKP60L_IaSP27WMKamd":{"uri":"/docs/melonjs/input/bindPointer.html"},"5VCiH1iDQxU8TaslliTD-":{"uri":"/docs/melonjs/input/exitPointerLock.html"},"2xihuEm3_vjMWeehdzCok":{"uri":"/docs/melonjs/input/getBindingKey.html"},"hu2AZ3fUs1E3GtL0VSPNT":{"uri":"/docs/melonjs/input/globalToLocal.html"},"z5Uzu5jQFn4Kacw5MJ0VI":{"uri":"/docs/melonjs/input/isKeyPressed.html"},"4Ml1ITz1bcUUW0Ew_uD9t":{"uri":"/docs/melonjs/input/keyStatus.html"},"u2ZizsjYO_3iAXQbfa9Fq":{"uri":"/docs/melonjs/input/registerPointerEvent.html"},"ibM_JtDCc3zHswB2W8kj4":{"uri":"/docs/melonjs/input/releaseAllPointerEvents.html"},"UPKbE9lbW2LoJFx7fsWvy":{"uri":"/docs/melonjs/input/releasePointerEvent.html"},"5RgQRKB534vNI_4-mcMvJ":{"uri":"/docs/melonjs/input/requestPointerLock.html"},"8gyKczZfsXfO5y4y7_oQp":{"uri":"/docs/melonjs/input/setGamepadDeadzone.html"},"uvW43xge8RFs07Nqaq0Jy":{"uri":"/docs/melonjs/input/setTouchAction.html"},"81AdJykumuKenvkXuvHQS":{"uri":"/docs/melonjs/input/triggerKeyEvent.html"},"NDmmqlT-ggMsY-CUIlNEB":{"uri":"/docs/melonjs/input/unbindGamepad.html"},"ZtZ0dwbP611FWbUtZh73G":{"uri":"/docs/melonjs/input/unbindKey.html"},"u_Cmpa521oe3NPZtKVO7j":{"uri":"/docs/melonjs/input/unbindPointer.html"},"ej-6esnr5jjZQbzFAEXFN":{"uri":"/docs/melonjs/input/unlockKey.html"},"zfZIok15ngY2d8QQAFDpu":{"uri":"/docs/melonjs/level.html"},"rnJEmvGNBp7_2RhdN7eRS":{"uri":"/docs/melonjs/level.html#add"},"9Agqc3Wg287J9Ga9HML6L":{"uri":"/docs/melonjs/level.html#getCurrentLevel"},"esIE68rK5xjbTZ4qzvgd2":{"uri":"/docs/melonjs/level.html#getCurrentLevelId"},"lUdozTnWiSwIbXvOrz12-":{"uri":"/docs/melonjs/level.html#levelCount"},"MERQR8RWskP-Sba_WRLVl":{"uri":"/docs/melonjs/level.html#load"},"kWmeEwfc7o84wLr8qRXvR":{"uri":"/docs/melonjs/level.html#next"},"IeTvGZuBUfdRjz6j8Ze14":{"uri":"/docs/melonjs/level.html#previous"},"EvLILxalbL2B0DUz_T3PI":{"uri":"/docs/melonjs/level.html#reload"},"Afk6w4WPUMXUNboEwIaQ9":{"uri":"/docs/melonjs/loader.html"},"Y3bVlI1JTZgHRy3cVBz1J":{"uri":"/docs/melonjs/loader.html#crossOrigin"},"jSIHq0cqKYkGgLDEEhGfM":{"uri":"/docs/melonjs/loader.html#onload"},"ksHUC5xFq9EM8uN1Db-w4":{"uri":"/docs/melonjs/loader.html#onProgress"},"horaoymDZI90b6UyvsNFb":{"uri":"/docs/melonjs/loader.html#withCredentials"},"kDYZq730xvEAPAISIpSzu":{"uri":"/docs/melonjs/loader.html#getBinary"},"iAlU-vQEHf61QUdYsSMHx":{"uri":"/docs/melonjs/loader.html#getImage"},"zepn0GPIc17MHwlzcYKCM":{"uri":"/docs/melonjs/loader.html#getJSON"},"LOKoR5DFPcKr9jNYknV4s":{"uri":"/docs/melonjs/loader.html#getTMX"},"x7xJ5Z5OrX_tnYOSK29bU":{"uri":"/docs/melonjs/loader.html#load"},"BSTK6gRh7wwK3Ja_EQVE8":{"uri":"/docs/melonjs/loader.html#preload"},"8KlpaBctZjOrzuKjcNZmP":{"uri":"/docs/melonjs/loader.html#setBaseURL"},"ZHRTGI1h6lGBdxlrpNt_c":{"uri":"/docs/melonjs/loader.html#unload"},"_jhuyq_AsDTz4YeBR_XLA":{"uri":"/docs/melonjs/loader.html#unloadAll"},"8JBXo53GPeODis8Y73UQ8":{"uri":"/docs/melonjs/Math.html"},"hBEp1yBt4h8u5ULkmJOoX":{"uri":"/docs/melonjs/Math.html#DEG_TO_RAD"},"EmA4LKR8F9VMhZcHXDur-":{"uri":"/docs/melonjs/Math.html#EPSILON"},"O6YuENaJcfTlflbrmtIX4":{"uri":"/docs/melonjs/Math.html#ETA"},"kEjV5jCXONLMF2pn-bbSM":{"uri":"/docs/melonjs/Math.html#RAD_TO_DEG"},"Z6jy9GYKQg9Ypc7diLEXz":{"uri":"/docs/melonjs/Math.html#TAU"},"lTLqA-ltfwD1iubQjKLP2":{"uri":"/docs/melonjs/Math/clamp.html"},"K5bfy2opcGq7sWRjJhJGS":{"uri":"/docs/melonjs/Math/degToRad.html"},"8yEyoXXWAvs9SNEERNeVL":{"uri":"/docs/melonjs/Math/isPowerOfTwo.html"},"5RVBiJWRrJLXVKSX8BRvS":{"uri":"/docs/melonjs/Math/nextPowerOfTwo.html"},"eBztmhH2eYorUiz1XODqd":{"uri":"/docs/melonjs/Math/radToDeg.html"},"YBu6CLJdSljxOtl0SghhJ":{"uri":"/docs/melonjs/Math/random.html"},"X7UoyGK30CYpuBvcSAlin":{"uri":"/docs/melonjs/Math/randomFloat.html"},"80BsruRpR2TiTUEQSN86Z":{"uri":"/docs/melonjs/Math/round.html"},"_VHzvQmrknVa15KbJs4tG":{"uri":"/docs/melonjs/Math/toBeCloseTo.html"},"BKkKHr43yqRoppYCEuzy7":{"uri":"/docs/melonjs/Math/weightedRandom.html"},"G6L-rb_YTqz732646xwqI":{"uri":"/docs/melonjs/ParticleEmitterSettings.html"},"Vrnx9mBz0_D0SRgVmTZM3":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#angle"},"mEdX7YpEAAPzKFEtQM-Eb":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#angleVariation"},"BgzJ25-rPq5rfvI8xZrss":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#blendMode"},"0ulu1lm1e5qn5cKpnOEpD":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#duration"},"ny0Q5POxA-2aFA7mieE8A":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#floating"},"CfoCMhtZ_YI2U2Qf6pdDR":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#followTrajectory"},"YWbUSyk8kATb5G2QAsaNo":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#framesToSkip"},"ekZNdloZ08GSYD4S9m1dZ":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#frequency"},"JFa4lW_IDv8aqLHG_eOHV":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#gravity"},"Hjeqg_qo3wrSQsC_cBdeG":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#height"},"A_efMgQY9v7W654oyDAJl":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#image"},"h_Uau40ciiTjmDKbszsxq":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#maxEndScale"},"Iathm4wzfbh8mOUtJEqwW":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#maxLife"},"NdyAoQaaXNDwzRccfp5Z0":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#maxParticles"},"1i8tzoxXdFKZj4iklNyvO":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#maxRotation"},"P0Oiv1_Gho2CnuQ69F5ia":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#maxStartScale"},"9z3Mmhm2TbYXihGxgZVSb":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#minEndScale"},"74bhiVYgeafmDdvyQxGg9":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#minLife"},"InqD9tiUHq4n96l9TUZRH":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#minRotation"},"OKk-dWGASYPY-Fhs33UKA":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#minStartScale"},"S3rdiG0V4haA--KyJlTaI":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#onlyInViewport"},"SEloNhO4PH0Z7cJXCJtQ8":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#speed"},"MB8MHyoycP4tPyuRqGk5E":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#speedVariation"},"RvvuMvGQedoxJGcMJJmmn":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#textureAdditive"},"rIFu4d-xTQ802xYpG6HmE":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#textureSize"},"3Bkq2xNPU2DOtIGqXh3N0":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#tint"},"rZG-jQ4Odfc4OVPjQHB4-":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#totalParticles"},"b6nPJtiNY7vO-uIR2fESg":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#width"},"VwKVmHPUoMhsvRkf4DvgY":{"uri":"/docs/melonjs/ParticleEmitterSettings.html#wind"},"phTIgFOea2BomQS6kqJlZ":{"uri":"/docs/melonjs/plugin.html"},"dYnvn-5PbbP-bWIIPn2Cs":{"uri":"/docs/melonjs/plugin/Base.html"},"zfM7EA6zmJUQxgziq_sRE":{"uri":"/docs/melonjs/plugin/Base.html#version"},"yAH1LholrbSx9XPjxX_Iz":{"uri":"/docs/melonjs/plugin/Base.html#constructor"},"XtyCnbWUdrETca-7q9sxl":{"uri":"/docs/melonjs/plugin.html#patch"},"-4oPy0U_E6nTVF_GBJPHg":{"uri":"/docs/melonjs/plugin.html#register"},"k90Jpzz2a_J_SRIIHduq0":{"uri":"/docs/melonjs/plugins.html"},"MYinERblDnp0ugOklJhOO":{"uri":"/docs/melonjs/pool.html"},"rGh3X22-c-fDvLHmSvZwo":{"uri":"/docs/melonjs/save.html"},"cKgoruU_Zx6CYcufUZRbW":{"uri":"/docs/melonjs/save.html#add"},"S_532LtSE3HzHsGYSVxiZ":{"uri":"/docs/melonjs/save.html#remove"},"pafSMVqJZyB1b-WELWL-8":{"uri":"/docs/melonjs/state.html"},"zrembNVr_lgiQl85MF4al":{"uri":"/docs/melonjs/state.html#CREDITS"},"cWsGTnqregdqMpsMNz2j4":{"uri":"/docs/melonjs/state.html#GAME_END"},"Kj8yfaNpU7MR23A_AeAdX":{"uri":"/docs/melonjs/state.html#GAMEOVER"},"aye9_OOoiabGRGuS4Dwdv":{"uri":"/docs/melonjs/state.html#LOADING"},"hFcD-obiT-lUjBTT9xDPk":{"uri":"/docs/melonjs/state.html#MENU"},"Ajr1twDEoJM0SaplE0rYR":{"uri":"/docs/melonjs/state.html#PLAY"},"qbTvgCOui6bAuV23daIEg":{"uri":"/docs/melonjs/state.html#READY"},"YDbMp3_nvx6sxhM7ABvtr":{"uri":"/docs/melonjs/state.html#SCORE"},"2-DWcFuq2xtloNuf4QPmL":{"uri":"/docs/melonjs/state.html#SETTINGS"},"LF7xjUm_NKBs4Ye8olFk3":{"uri":"/docs/melonjs/state.html#SETTINGS_"},"ZADQz5i_fZe5bXnes_aCR":{"uri":"/docs/melonjs/state.html#USER"},"Hec-NWNCk39ACqG7mfTk_":{"uri":"/docs/melonjs/state.html#change"},"JodgOyoXYx9ecfMp8Hy9P":{"uri":"/docs/melonjs/state.html#current"},"dvAOqCT5hpIfpw1kO21Ld":{"uri":"/docs/melonjs/state.html#isCurrent"},"GTwfUorrDkeG-nKWi1M_c":{"uri":"/docs/melonjs/state.html#isPaused"},"Q_KzAMt92bOFM4UyUzCvS":{"uri":"/docs/melonjs/state.html#isRunning"},"xw3JqnRIeU-IiNuYQjkvi":{"uri":"/docs/melonjs/state.html#pause"},"uf_mPv1dp8wxT6DK2xoMB":{"uri":"/docs/melonjs/state.html#restart"},"CjTWhD4crv-FZnHH8jkyV":{"uri":"/docs/melonjs/state.html#resume"},"Z7kfiWSSo6sD_v6iijZiW":{"uri":"/docs/melonjs/state.html#set"},"T0HDnaryneJlOHaydaHgr":{"uri":"/docs/melonjs/state.html#setTransition"},"MtFmbm3Op1KS6fQrvXmGC":{"uri":"/docs/melonjs/state.html#stop"},"IaprLtGc6j6i5ZwnLyAI6":{"uri":"/docs/melonjs/state.html#transition"},"A3xXUfn8PZvnQqWA54plc":{"uri":"/docs/melonjs/timer.html"},"178Wq641ET9uWdqnRMR33":{"uri":"/docs/melonjs/timer.html#fps"},"-tpKeaLujiL9jQmpnFzYU":{"uri":"/docs/melonjs/timer.html#interpolation"},"I9QErHfb7bdLAuNWd7O6D":{"uri":"/docs/melonjs/timer.html#maxfps"},"0aqv-IUw48416bx0JF2Y_":{"uri":"/docs/melonjs/timer.html#tick"},"mYJBUAZDe_DIM1imhvCEi":{"uri":"/docs/melonjs/timer.html#clearInterval"},"bfQmz8pjUcrYqDueD6zmU":{"uri":"/docs/melonjs/timer.html#clearTimeout"},"xlkI2bTjvBLXW7a5M6UOK":{"uri":"/docs/melonjs/timer.html#getDelta"},"HHuKXfxKi7Y9YXkyd4IQz":{"uri":"/docs/melonjs/timer.html#getTime"},"W1hIeCtAKVDIAba3tNt7d":{"uri":"/docs/melonjs/timer.html#setInterval"},"QV_FRK8cIL-jDzQ4DYlsN":{"uri":"/docs/melonjs/timer.html#setTimeout"},"5jpwBZBw73YPYGt5H0k5p":{"uri":"/docs/melonjs/utils.html"},"4BQtcB5-zSXOT-wL86m9z":{"uri":"/docs/melonjs/utils/agent.html"},"A_aykwmoijwh3b9dptJxe":{"uri":"/docs/melonjs/utils/agent/prefixed.html"},"vPn9U4ipdpAOpP2yLQt6Z":{"uri":"/docs/melonjs/utils/agent/setPrefixed.html"},"kf-1BMjA3sU7vGckztC7I":{"uri":"/docs/melonjs/utils/array.html"},"z_Cik0N-zBQYyCxcvfBfV":{"uri":"/docs/melonjs/utils/array/random.html"},"-pvAd_SQCES2YOKRiOQ46":{"uri":"/docs/melonjs/utils/array/remove.html"},"dwlRiyqmhfH2TsQggIiPm":{"uri":"/docs/melonjs/utils/array/weightedRandom.html"},"USWr4m1PUIdDT-IYIaYm4":{"uri":"/docs/melonjs/utils/file.html"},"fKtij9RQt8p87dCfBseMy":{"uri":"/docs/melonjs/utils/file/getBasename.html"},"wv5rJWvz1XXvmNLdRNxx5":{"uri":"/docs/melonjs/utils/file/getExtension.html"},"BXtBwdbugsfmfCJVf8ryp":{"uri":"/docs/melonjs/utils/function.html"},"OjNuLK5abEy9gVP16PVuZ":{"uri":"/docs/melonjs/utils/function/defer.html"},"w2br1BknRVKDqP_FDjfXI":{"uri":"/docs/melonjs/utils/function/throttle.html"},"tAB2Mn6rJ30mfrhg7Qqs2":{"uri":"/docs/melonjs/utils/string.html"},"d9xwjgOIAgSdRg0e0m-Eo":{"uri":"/docs/melonjs/utils/string/capitalize.html"},"2BMS1ZNE6p9PHHJhkAHTO":{"uri":"/docs/melonjs/utils/string/isBoolean.html"},"axsDfxf16p6iNWYEwJFEH":{"uri":"/docs/melonjs/utils/string/isNumeric.html"},"NojSm1KFSSiE1zaOkuHjA":{"uri":"/docs/melonjs/utils/string/toHex.html"},"XfIsOx4VBYgAzor9RpmHg":{"uri":"/docs/melonjs/utils/string/trimLeft.html"},"7W6HKlWVlkpeglVE0kAzX":{"uri":"/docs/melonjs/utils/string/trimRight.html"},"DrB8oSSoQMVKxfiftdH0D":{"uri":"/docs/melonjs/utils.html#checkVersion"},"TkpcXFTvr-VKs7ECB9r0c":{"uri":"/docs/melonjs/utils.html#getPixels"},"3s0H7ChWjgiO6Ah_TZXUZ":{"uri":"/docs/melonjs/utils.html#getUriFragment"},"-Z3UEgLzVlgHeJakTl5Il":{"uri":"/docs/melonjs/utils.html#getUriFragment#debug"},"lUFc4XZvxYoJQSylSztek":{"uri":"/docs/melonjs/utils.html#getUriFragment#debugToggleKey"},"SB1Gtigq8OLTW_Iq3Acn3":{"uri":"/docs/melonjs/utils.html#getUriFragment#hitbox"},"sM4m3TmhJ3Y_Pf9yd7byG":{"uri":"/docs/melonjs/utils.html#getUriFragment#quadtree"},"MaYIosddfwGl36SgeWJnb":{"uri":"/docs/melonjs/utils.html#getUriFragment#velocity"},"02Du-Vf0J3XFXv0Fnsm6Y":{"uri":"/docs/melonjs/utils.html#getUriFragment#webgl"},"-EZjCafbEd7IBDdL7gP_A":{"uri":"/docs/melonjs/video.html"},"FiFE0LAwpKQgy-sXXTn0T":{"uri":"/docs/melonjs/video.html#AUTO"},"8CJaDpqK-OKrOlVf-Jz-Z":{"uri":"/docs/melonjs/video.html#CANVAS"},"86IG08SuVmiNgSfXAobum":{"uri":"/docs/melonjs/video.html#renderer"},"Y1-pTxPAOLKhn5PYkhpkF":{"uri":"/docs/melonjs/video.html#scaleRatio"},"eNsCxVaOmSBc8Ge9tfr05":{"uri":"/docs/melonjs/video.html#WEBGL"},"a4Oa5d7OJx3sFG0szr4Ht":{"uri":"/docs/melonjs/video/createCanvas.html"},"tdK78FYgfKPrMmwMaDE5x":{"uri":"/docs/melonjs/video/getParent.html"},"kUR6xneu9Qp0jz2AYR_Sc":{"uri":"/docs/melonjs/video/init.html"},"PQAd91lp2TLd5m34BkfRl":{"uri":"/docs/melonjs/video/scale.html"},"e0TrpvIAH4CQHA7NhWG0u":{"uri":"/docs/melonjs/BitmapText.html"},"v_yJvteUyPtb2k3YWOPmE":{"uri":"/docs/melonjs/BitmapText.html#alpha"},"Ovy2hmhW009FJDrZz6UyS":{"uri":"/docs/melonjs/BitmapText.html#alwaysUpdate"},"NgjnXDr5eoWrbp5H_swVi":{"uri":"/docs/melonjs/BitmapText.html#ancestor"},"-mSyN-N9whVdwis9mFAsJ":{"uri":"/docs/melonjs/BitmapText.html#anchorPoint"},"5_JABKpyl4p-BNsnab3fC":{"uri":"/docs/melonjs/BitmapText.html#autoTransform"},"mrhsdJs6TQ0bmNxFtQ_to":{"uri":"/docs/melonjs/BitmapText.html#blendMode"},"qpyvrDpW0jLbLTlT60sfI":{"uri":"/docs/melonjs/BitmapText.html#body"},"K7JhAVzyR23tfRTLDWR-B":{"uri":"/docs/melonjs/BitmapText.html#bottom"},"WoxNkPktK-N4TYjvfy4BM":{"uri":"/docs/melonjs/BitmapText.html#centerX"},"d67_vQ8aHavks1IH9K-6P":{"uri":"/docs/melonjs/BitmapText.html#centerY"},"J8AScQn48_EVLG-0dCOYa":{"uri":"/docs/melonjs/BitmapText.html#currentTransform"},"Qqcc9F8QjsPz52-mStUZ6":{"uri":"/docs/melonjs/BitmapText.html#fillStyle"},"w6Pbk9AQbshnPV7HVC8Xa":{"uri":"/docs/melonjs/BitmapText.html#floating"},"8Jfpf4bWMpEaFWowLiQ9u":{"uri":"/docs/melonjs/BitmapText.html#GUID"},"n1Q7yzsQAK3ZuEE_urlru":{"uri":"/docs/melonjs/BitmapText.html#height"},"BsSZmPylCp6vhZorCiLVE":{"uri":"/docs/melonjs/BitmapText.html#inViewport"},"_z7bZ6ZMYDZXJ0O6LVrLC":{"uri":"/docs/melonjs/BitmapText.html#isDirty"},"K9cxht-JNFuC4yqmEYC0T":{"uri":"/docs/melonjs/BitmapText.html#isFlippedX"},"zH8SbF-X5SjsC9wcfrj9n":{"uri":"/docs/melonjs/BitmapText.html#isFlippedY"},"Wn-u0RWWc3acpS8u3qnpb":{"uri":"/docs/melonjs/BitmapText.html#isFloating"},"ySJK8KuvyMllV_6-PovrI":{"uri":"/docs/melonjs/BitmapText.html#isKinematic"},"p2hB__U3djY698Uf8gt0a":{"uri":"/docs/melonjs/BitmapText.html#isPersistent"},"UGptQ4fT5JHyeSkLAuhjS":{"uri":"/docs/melonjs/BitmapText.html#left"},"tl0ZHOWTf4UkntwI4Db7w":{"uri":"/docs/melonjs/BitmapText.html#lineHeight"},"7CDB0ARNlPzx6RfqBHqZY":{"uri":"/docs/melonjs/BitmapText.html#mask"},"5xZ9VEpDk9ZpNCwfOS4xP":{"uri":"/docs/melonjs/BitmapText.html#name"},"4VqildS07LlfwWGXAdm-d":{"uri":"/docs/melonjs/BitmapText.html#onVisibilityChange"},"hbVUnzI70Zx9RgR2PMtOd":{"uri":"/docs/melonjs/BitmapText.html#points"},"ZSCPEjCXBN8oTZZ94IPXU":{"uri":"/docs/melonjs/BitmapText.html#pos"},"ahYPiMmPQpkECXxNOjd47":{"uri":"/docs/melonjs/BitmapText.html#right"},"Cs2xEqSoN65Fg1yjKcOZc":{"uri":"/docs/melonjs/BitmapText.html#textAlign"},"YaZ4TKTUJFH3T4p1XAqAh":{"uri":"/docs/melonjs/BitmapText.html#textBaseline"},"5sG4ny_ukj8hjxD5BdlDw":{"uri":"/docs/melonjs/BitmapText.html#tint"},"O-uoBtRcZu2_m2UYHhFGW":{"uri":"/docs/melonjs/BitmapText.html#top"},"EARKBwvie-qgxmEk5HeJT":{"uri":"/docs/melonjs/BitmapText.html#updateWhenPaused"},"_UN1LZBC4QMjQhH9-sAe7":{"uri":"/docs/melonjs/BitmapText.html#width"},"FP7nP0S3nSNNZ7ElyHVE_":{"uri":"/docs/melonjs/BitmapText.html#wordWrapWidth"},"zHw--hwU06GO3zcsIrSf5":{"uri":"/docs/melonjs/BitmapText.html#_text"},"Owe1oUBlWagwjPuczEZK5":{"uri":"/docs/melonjs/BitmapText.html#fontData"},"hfvSOFBtg_KxZp68-q7pD":{"uri":"/docs/melonjs/BitmapText.html#fontImage"},"i5QIaxem8JnwAadQ8AiLi":{"uri":"/docs/melonjs/BitmapText.html#fontScale"},"JkWvZWRQywg7JuSaZtnWc":{"uri":"/docs/melonjs/BitmapText.html#angleTo"},"0kgE76LjDtpA0mP7F1eVr":{"uri":"/docs/melonjs/BitmapText.html#centerOn"},"lw4uc57yNk4INCYVrXHJj":{"uri":"/docs/melonjs/BitmapText.html#clone"},"aXBLLb-05LOj4UXYySORU":{"uri":"/docs/melonjs/BitmapText.html#constructor"},"uPaSsNj3WdXfl_Nh1WeDz":{"uri":"/docs/melonjs/BitmapText.html#contains"},"FeyKeJkiv0cGvrkSfSvQD":{"uri":"/docs/melonjs/BitmapText.html#copy"},"MLXd3wbRga7fAO4f5-Qk0":{"uri":"/docs/melonjs/BitmapText.html#distanceTo"},"2qIbsG0It6AZUIIe2knX7":{"uri":"/docs/melonjs/BitmapText.html#draw"},"eBdsCeYG75JD_ZntGtjHt":{"uri":"/docs/melonjs/BitmapText.html#equals"},"_MlKHCVNASlSXPj9yWKSe":{"uri":"/docs/melonjs/BitmapText.html#flipX"},"1sFDm3_W7FSNdOFE841j5":{"uri":"/docs/melonjs/BitmapText.html#flipY"},"v0wk1yqr5w9QSrYR0_ajX":{"uri":"/docs/melonjs/BitmapText.html#getAbsolutePosition"},"E0JwBdmKiy_nNF5skM5mw":{"uri":"/docs/melonjs/BitmapText.html#getBounds"},"BgiyNM4EP_tbtCpdz19A_":{"uri":"/docs/melonjs/BitmapText.html#getIndices"},"Kh4ZrcfaMTOmrk6038N39":{"uri":"/docs/melonjs/BitmapText.html#getOpacity"},"ii_3I3xL3I_mLNjEB4Tna":{"uri":"/docs/melonjs/BitmapText.html#isConvex"},"0MkmaObKkTaa98RcEz6iU":{"uri":"/docs/melonjs/BitmapText.html#isFinite"},"LBBveC2YaLPWtLrK4Vwjv":{"uri":"/docs/melonjs/BitmapText.html#lookAt"},"VRvLqmEsTTfaTxKW15br-":{"uri":"/docs/melonjs/BitmapText.html#measureText"},"uvClkNb3fM4vKypHXMyH9":{"uri":"/docs/melonjs/BitmapText.html#onCollision"},"3RCd7IDvOiqfeE67dzgRa":{"uri":"/docs/melonjs/BitmapText.html#onDestroyEvent"},"2dnpcjH1XM1sdoccgDXCO":{"uri":"/docs/melonjs/BitmapText.html#overlaps"},"XaYDMpwm6yxaBq8QCnRGq":{"uri":"/docs/melonjs/BitmapText.html#recalc"},"jPvdo2Zld9SKQM8dyZhI3":{"uri":"/docs/melonjs/BitmapText.html#resize"},"iZBxouGmp_gHHZFdxdsz9":{"uri":"/docs/melonjs/BitmapText.html#rotate"},"i3Xwn0mML8KPTo62oneM3":{"uri":"/docs/melonjs/BitmapText.html#scale"},"U-yD9zp4R1KEqgN7N2LL9":{"uri":"/docs/melonjs/BitmapText.html#scaleV"},"McoIiqRexgmrimPXHYPY9":{"uri":"/docs/melonjs/BitmapText.html#set"},"Bz_5ZdQNhxM80_7LNdhtS":{"uri":"/docs/melonjs/BitmapText.html#setOpacity"},"NrlQ1Uj-ss9JyKijqqGeZ":{"uri":"/docs/melonjs/BitmapText.html#setShape"},"9cUJTof4FgjniCYbwj2eB":{"uri":"/docs/melonjs/BitmapText.html#setText"},"ZiXH9DBZfPbGLHUbNGz2k":{"uri":"/docs/melonjs/BitmapText.html#setVertices"},"FyMHPE3ptB0Y16r8sfqMx":{"uri":"/docs/melonjs/BitmapText.html#shift"},"SjKYkFDruLbULe3uUGhBH":{"uri":"/docs/melonjs/BitmapText.html#to2d"},"BT1g7fRPZpSxhUBRrEw-J":{"uri":"/docs/melonjs/BitmapText.html#toIso"},"8oTovVbpL5bTWWn8gMnb4":{"uri":"/docs/melonjs/BitmapText.html#toPolygon"},"g1gl759qCqbi-NhSM7Cs-":{"uri":"/docs/melonjs/BitmapText.html#transform"},"P_boAWyDd-7yEx9kYYZEh":{"uri":"/docs/melonjs/BitmapText.html#translate"},"gwgRIu-rUMwgZIpmBFgRm":{"uri":"/docs/melonjs/BitmapText.html#union"},"HY8fi7Hh_ftq7BtO5HLDm":{"uri":"/docs/melonjs/BitmapText.html#postDraw"},"GTDCYWramOvGgd_1KnQ1B":{"uri":"/docs/melonjs/BitmapText.html#preDraw"},"Ds5FlFn7jsWjyQ2jawczp":{"uri":"/docs/melonjs/BitmapText.html#update"},"Cpi-bawDlB4aTk-jJpJSd":{"uri":"/docs/melonjs/BitmapText.html#onAnchorUpdate"},"kC-OuoATeiOWXz8_58F3X":{"uri":"/docs/melonjs/Body.html"},"aWJgENFf3Tn16ZdLG9tAO":{"uri":"/docs/melonjs/Body.html#ancestor"},"BmzGJ3M5RSVFGKiW6YVHD":{"uri":"/docs/melonjs/Body.html#bounce"},"6v476fwh19Nyxi8a9s8Wf":{"uri":"/docs/melonjs/Body.html#bounds"},"xOvxP9_d4UcQ8i7UejmvE":{"uri":"/docs/melonjs/Body.html#collisionType"},"t5i6AcUlSvSyK-omwKN6U":{"uri":"/docs/melonjs/Body.html#falling"},"JbsraZs4mjEo_ooxIWpQz":{"uri":"/docs/melonjs/Body.html#force"},"4H8UU_cQmQM2XXJchz6I2":{"uri":"/docs/melonjs/Body.html#friction"},"6YZscdOigd3A6j92krd0i":{"uri":"/docs/melonjs/Body.html#gravityScale"},"H7Pqbgz5rEBXXVKz4O19a":{"uri":"/docs/melonjs/Body.html#ignoreGravity"},"iSNVmcXIlxLOov6GpBpsD":{"uri":"/docs/melonjs/Body.html#isStatic"},"BfVGPBJDCIviy51MHT7_2":{"uri":"/docs/melonjs/Body.html#jumping"},"8sAcx_Huap-APbEU5SFNy":{"uri":"/docs/melonjs/Body.html#mass"},"td3EqKew9bW3dz8kUgU4Z":{"uri":"/docs/melonjs/Body.html#maxVel"},"w2VRT_RSBhDVLLB4H-h-M":{"uri":"/docs/melonjs/Body.html#vel"},"zIjL5pCxEeHvghqpL7yUc":{"uri":"/docs/melonjs/Body.html#addShape"},"4u4jX96MS6P4Q-d1cmucf":{"uri":"/docs/melonjs/Body.html#addVertices"},"npocID4I58HfkpcpBopTy":{"uri":"/docs/melonjs/Body.html#constructor"},"-8Dwv13Jp1WzCICwLO04V":{"uri":"/docs/melonjs/Body.html#contains"},"GOJ7oVhvymsFgaB9SFzpO":{"uri":"/docs/melonjs/Body.html#contains"},"L84nJwTs5B44nphWYVpQe":{"uri":"/docs/melonjs/Body.html#forEach"},"JPxsFLFGMvNCGaZ3wt4Ld":{"uri":"/docs/melonjs/Body.html#fromJSON"},"u2H-1S2mMIkkPpGTO33o2":{"uri":"/docs/melonjs/Body.html#getBounds"},"ddkLg_m6tZGPOhQND6y1-":{"uri":"/docs/melonjs/Body.html#getShape"},"YZw6TfCr5GlcwrqixXLR7":{"uri":"/docs/melonjs/Body.html#removeShape"},"jGc0_KHtWTl9lj2yLF2qd":{"uri":"/docs/melonjs/Body.html#removeShapeAt"},"0kRJLOAvsulKe3u_zeUUe":{"uri":"/docs/melonjs/Body.html#respondToCollision"},"WTpMe-vHWBetrK4GR3wl7":{"uri":"/docs/melonjs/Body.html#rotate"},"7yiJBkECRko1KIejb4pSk":{"uri":"/docs/melonjs/Body.html#setCollisionMask"},"lsS0ONNHaFKMu72yjl1Ki":{"uri":"/docs/melonjs/Body.html#setCollisionType"},"mf_po92KVGUUdvr0dCtgz":{"uri":"/docs/melonjs/Body.html#setStatic"},"z-XfjqG6W1LCrFfiYzmUP":{"uri":"/docs/melonjs/Body.html#setVertices"},"8Inuxmj5erHTt7-HM3wT4":{"uri":"/docs/melonjs/Body.html#setFriction"},"wiOnjYK2QnJcwRUYhyLT5":{"uri":"/docs/melonjs/Body.html#setMaxVelocity"},"mQ0VeQiH4316oZGeo-3mM":{"uri":"/docs/melonjs/Body.html#update"},"x3VfqWqRR5UlTBewm925P":{"uri":"/docs/melonjs/Bounds.html"},"oTtXL7EzXe7PJjDN1j_Gc":{"uri":"/docs/melonjs/Bounds.html#bottom"},"oaVvPfy5zIwg9RbjGb2UF":{"uri":"/docs/melonjs/Bounds.html#center"},"z0PtqFvOb8JwLBomQjyKO":{"uri":"/docs/melonjs/Bounds.html#centerX"},"ziW-IKkluS3mf7-xVdI4W":{"uri":"/docs/melonjs/Bounds.html#centerY"},"Z8ArjIXhoRED0d24Fdtem":{"uri":"/docs/melonjs/Bounds.html#left"},"hJnuPbNMiokemIzT-zMqH":{"uri":"/docs/melonjs/Bounds.html#right"},"wDfosbwVI60EDS4VDwr9D":{"uri":"/docs/melonjs/Bounds.html#top"},"sFqXW4g9pc2ThR0zDUYGr":{"uri":"/docs/melonjs/Bounds.html#width"},"MjK1pzR9fHMlVycUOxrdu":{"uri":"/docs/melonjs/Bounds.html#width"},"uYVbH4c4MyGZtPAItTAAJ":{"uri":"/docs/melonjs/Bounds.html#x"},"jiPU8S6Ei5Abpe8z3_S85":{"uri":"/docs/melonjs/Bounds.html#y"},"FAvfPkwt9bGcVdjOlGcb9":{"uri":"/docs/melonjs/Bounds.html#add"},"A5gDHt1TG4NuCL71e76sA":{"uri":"/docs/melonjs/Bounds.html#addBounds"},"iMs3UcO6az5Um-tV1o9_9":{"uri":"/docs/melonjs/Bounds.html#addFrame"},"9atIWCackpFUHWfHyYxtp":{"uri":"/docs/melonjs/Bounds.html#addPoint"},"eqBV2UN1SAyglmVHJikuk":{"uri":"/docs/melonjs/Bounds.html#clear"},"8NCo5dbXVEc4FlmNrAp_5":{"uri":"/docs/melonjs/Bounds.html#clone"},"EBxO-f8ezZunQCJxev2tQ":{"uri":"/docs/melonjs/Bounds.html#constructor"},"A7a39h_Fj8dLcM1rImKwd":{"uri":"/docs/melonjs/Bounds.html#contains"},"E7hCBcadsnoxx-BrGwg57":{"uri":"/docs/melonjs/Bounds.html#isFinite"},"TkP-SiK-8zsO9uDGCB0-J":{"uri":"/docs/melonjs/Bounds.html#overlaps"},"se1FUkZ2f-H9OOEartNam":{"uri":"/docs/melonjs/Bounds.html#setMinMax"},"GjuGeuA7rX9-t350-JqIh":{"uri":"/docs/melonjs/Bounds.html#shift"},"8Ws20J8rKRaTxyzo8lbu7":{"uri":"/docs/melonjs/Bounds.html#toPolygon"},"CEV8DjB-d_DH0QDxVX18d":{"uri":"/docs/melonjs/Bounds.html#translate"},"iGvScm_zwOuTctxK5t4zi":{"uri":"/docs/melonjs/Bounds.html#update"},"xr3COpUxbS8ItvPRyML2h":{"uri":"/docs/melonjs/Bounds.html#contains"},"glphcQyY2-RAOj291LN7w":{"uri":"/docs/melonjs/Bounds.html#shift"},"xWePuA2sETL9TZzo8krju":{"uri":"/docs/melonjs/Bounds.html#translate"},"DWEOhFdMiq-zTPYstLH_Y":{"uri":"/docs/melonjs/Camera2d.html"},"0MKU2TBGlTgc5ehgi1uZv":{"uri":"/docs/melonjs/Camera2d/AXIS.html"},"3s3f19pzBXx_Rmn1hohGn":{"uri":"/docs/melonjs/Camera2d/AXIS.html#BOTH"},"cNVN5ooHstbTX1IaiRwKE":{"uri":"/docs/melonjs/Camera2d/AXIS.html#HORIZONTAL"},"jm6WRRJnB3k0QazNAXLko":{"uri":"/docs/melonjs/Camera2d/AXIS.html#NONE"},"63YPPbVpONmhO3oWDkUaP":{"uri":"/docs/melonjs/Camera2d/AXIS.html#VERTICAL"},"iKkNC77VKKqjrPtd7KBHO":{"uri":"/docs/melonjs/Camera2d.html#alpha"},"FHCMfdFdI3fogX4GJWMRo":{"uri":"/docs/melonjs/Camera2d.html#alwaysUpdate"},"0CKUJyMaUatS03FOg7uK0":{"uri":"/docs/melonjs/Camera2d.html#ancestor"},"DI-on3mx7pD21fdahHTdo":{"uri":"/docs/melonjs/Camera2d.html#anchorPoint"},"byuLVjU-LYyCWLH4wGhVT":{"uri":"/docs/melonjs/Camera2d.html#autoTransform"},"PoWOjYggrhDw7RmGM7p01":{"uri":"/docs/melonjs/Camera2d.html#blendMode"},"NViowj_l6CZIeAsWJfDcX":{"uri":"/docs/melonjs/Camera2d.html#body"},"7I6Uo6BOsXVN-Gos_sf5k":{"uri":"/docs/melonjs/Camera2d.html#bottom"},"B2ntvPr0Ir14nH6TcQTE8":{"uri":"/docs/melonjs/Camera2d.html#bounds"},"tG7LgIENC1SRzuOhw9fc5":{"uri":"/docs/melonjs/Camera2d.html#centerX"},"3Fga9sb6Q4Nby5_mOBt_9":{"uri":"/docs/melonjs/Camera2d.html#centerY"},"1BjGinM2TvJrtTZC7AjOR":{"uri":"/docs/melonjs/Camera2d.html#currentTransform"},"Tox3ymi5Q6XMVSIVxlyor":{"uri":"/docs/melonjs/Camera2d.html#damping"},"__cu51_P58Rv2e72uYxcN":{"uri":"/docs/melonjs/Camera2d.html#far"},"9DmwnII3bpxxNA87E_wle":{"uri":"/docs/melonjs/Camera2d.html#floating"},"C4EMCNS1AjN3zgbMRhwyR":{"uri":"/docs/melonjs/Camera2d.html#GUID"},"e09rEv0fnfE2UCkt1c2ge":{"uri":"/docs/melonjs/Camera2d.html#height"},"ykeaERoaBSUbYbQkbTQJs":{"uri":"/docs/melonjs/Camera2d.html#inViewport"},"Qn7HnnH4MJBIMgj2Kngrm":{"uri":"/docs/melonjs/Camera2d.html#isDirty"},"NcP_eX5SFWRjMDqtT_U7f":{"uri":"/docs/melonjs/Camera2d.html#isFlippedX"},"dD7sZJ006PPtpT7kHOXH6":{"uri":"/docs/melonjs/Camera2d.html#isFlippedY"},"SQ-5GPNZF2vCnnNhk9NtR":{"uri":"/docs/melonjs/Camera2d.html#isFloating"},"Zbf_DO3SjoUlTLKZnFyVg":{"uri":"/docs/melonjs/Camera2d.html#isKinematic"},"FxHFuduTngdQhCJoXN1k8":{"uri":"/docs/melonjs/Camera2d.html#isPersistent"},"UIo9KbhIL2sAgaNww-S_0":{"uri":"/docs/melonjs/Camera2d.html#left"},"6I5kvFSH4DizkkWHwnRQV":{"uri":"/docs/melonjs/Camera2d.html#mask"},"y-q7LjLPXDlSia_mwZxx4":{"uri":"/docs/melonjs/Camera2d.html#name"},"5uFoP3Tz_KKx4i1BBRUrX":{"uri":"/docs/melonjs/Camera2d.html#near"},"u-zaUJElkMepTkx7yrvg7":{"uri":"/docs/melonjs/Camera2d.html#onVisibilityChange"},"sN-Nc2qEFrSJM1H11z1VI":{"uri":"/docs/melonjs/Camera2d.html#points"},"ghA7AWJUwNl2Cd_a8h1-4":{"uri":"/docs/melonjs/Camera2d.html#pos"},"WVYR7K6105wfeNrzfLT_Q":{"uri":"/docs/melonjs/Camera2d.html#projectionMatrix"},"9nJrDjPDuVuiNCgOl2eoG":{"uri":"/docs/melonjs/Camera2d.html#right"},"N58_NzIjQ2qmc9D_t_uAo":{"uri":"/docs/melonjs/Camera2d.html#tint"},"fCrvDdGJr3aNWFIxJdJHL":{"uri":"/docs/melonjs/Camera2d.html#top"},"Ehbu15QkxBUAYXk-TNuoc":{"uri":"/docs/melonjs/Camera2d.html#updateWhenPaused"},"H_WlYlRwwK0IG3BCvWlVf":{"uri":"/docs/melonjs/Camera2d.html#width"},"GRoc1nMGx7pOFwyhx8Ai4":{"uri":"/docs/melonjs/Camera2d.html#smoothFollow"},"t5bCuy6xk2upIrOFgx1fa":{"uri":"/docs/melonjs/Camera2d.html#angleTo"},"0AWPE9jff65DXg2OzNyzN":{"uri":"/docs/melonjs/Camera2d.html#centerOn"},"mwsUDWA568d3jWVd6fYZp":{"uri":"/docs/melonjs/Camera2d.html#clone"},"esytolyYRCl1quJ5-COPK":{"uri":"/docs/melonjs/Camera2d.html#constructor"},"zD2LigDJujQRxqgsqc4iO":{"uri":"/docs/melonjs/Camera2d.html#contains"},"mb9AzZ9PmgpBLsim5QRkI":{"uri":"/docs/melonjs/Camera2d.html#copy"},"RV8gr2QSjJ4E8rFswnMgg":{"uri":"/docs/melonjs/Camera2d.html#distanceTo"},"DGZrye_Wr4Y3ztKCaclfH":{"uri":"/docs/melonjs/Camera2d.html#equals"},"ZcyzvjJOfj79ZGRasfqjU":{"uri":"/docs/melonjs/Camera2d.html#fadeIn"},"8zkhsLh1D7oqzOXQh7lwj":{"uri":"/docs/melonjs/Camera2d.html#fadeOut"},"0nrYRXGkPGkTv_YwDMpEN":{"uri":"/docs/melonjs/Camera2d.html#flipX"},"ztfnjsiRYdF-_4hLHl-UH":{"uri":"/docs/melonjs/Camera2d.html#flipY"},"FedQMh6M3FhWTDCue0gH6":{"uri":"/docs/melonjs/Camera2d.html#focusOn"},"_Zjc_4vJ25wSQuuXyDF6u":{"uri":"/docs/melonjs/Camera2d.html#follow"},"dLvByfeqd-Ebf6Re8rN8x":{"uri":"/docs/melonjs/Camera2d.html#getAbsolutePosition"},"WHeh6Bgro679OOb1k6DrL":{"uri":"/docs/melonjs/Camera2d.html#getBounds"},"xr0aRkLNSd3xbUd691Vw0":{"uri":"/docs/melonjs/Camera2d.html#getIndices"},"NO_D1w0XoB6Cx1MEEY20K":{"uri":"/docs/melonjs/Camera2d.html#getOpacity"},"gUpJ1uTyZbP41-BigUDxD":{"uri":"/docs/melonjs/Camera2d.html#isConvex"},"tbctoJ48NypxhKI4S83-U":{"uri":"/docs/melonjs/Camera2d.html#isFinite"},"MYttA5Xsu4GRsTDUOvoW9":{"uri":"/docs/melonjs/Camera2d.html#isVisible"},"-j6NKd7PfpdaJk7Ok_kqt":{"uri":"/docs/melonjs/Camera2d.html#localToWorld"},"faHOqFZIgiPzmj4ZQDkpW":{"uri":"/docs/melonjs/Camera2d.html#lookAt"},"XjPCZlHCJG-Tj9K6m15ML":{"uri":"/docs/melonjs/Camera2d.html#move"},"EkGKE3goJeEluuq7bJNWH":{"uri":"/docs/melonjs/Camera2d.html#moveTo"},"-y39tEche8BQnUeS8-KJ0":{"uri":"/docs/melonjs/Camera2d.html#onCollision"},"jMP-Bxr56gMMx9IyXFX_E":{"uri":"/docs/melonjs/Camera2d.html#onDestroyEvent"},"k2bh41KnK92sNO2KYxBG_":{"uri":"/docs/melonjs/Camera2d.html#overlaps"},"8EPsiWl_HgonYqu4Ui6Aj":{"uri":"/docs/melonjs/Camera2d.html#recalc"},"_PMwS_zfq5X3asCn_V4Xa":{"uri":"/docs/melonjs/Camera2d.html#reset"},"Ud1yhAf2VDYtkKeULgBIt":{"uri":"/docs/melonjs/Camera2d.html#resize"},"U3Gk_J9bWUKZg7hI7GRZN":{"uri":"/docs/melonjs/Camera2d.html#rotate"},"Nl46ZQZ-thjiuCpdEzKIS":{"uri":"/docs/melonjs/Camera2d.html#scale"},"r4xLWrlU4RARZ64b1FQiN":{"uri":"/docs/melonjs/Camera2d.html#scaleV"},"pj8LKA6WP2eN1WH0Uikca":{"uri":"/docs/melonjs/Camera2d.html#setBounds"},"uxt8rGMGdFKleecpYsffv":{"uri":"/docs/melonjs/Camera2d.html#setDeadzone"},"lCw28B502NskiWmtjZ1RW":{"uri":"/docs/melonjs/Camera2d.html#setOpacity"},"l80WojRmCGFWNNZWwDyqF":{"uri":"/docs/melonjs/Camera2d.html#setShape"},"L_OokcB0RoF1XC3wZYcMN":{"uri":"/docs/melonjs/Camera2d.html#setVertices"},"gzuPeoNRZg-jSmFlxjF7e":{"uri":"/docs/melonjs/Camera2d.html#shake"},"RC4wlYkh0-WUaTlkAUQIZ":{"uri":"/docs/melonjs/Camera2d.html#shift"},"MA5OdJWj63zRShmk5HP2E":{"uri":"/docs/melonjs/Camera2d.html#to2d"},"2w8pC8Z1HnSVYYx4_OvJ7":{"uri":"/docs/melonjs/Camera2d.html#toIso"},"-fcESpgwZJI5bdjB7c6zz":{"uri":"/docs/melonjs/Camera2d.html#toPolygon"},"OsBlPtGk3Dqc-ZOkXy6uQ":{"uri":"/docs/melonjs/Camera2d.html#transform"},"FqkZ3OS2nnAokyl27P_EL":{"uri":"/docs/melonjs/Camera2d.html#translate"},"qQ3TuWsrZyBGntIt9mD8N":{"uri":"/docs/melonjs/Camera2d.html#unfollow"},"CaHpHN7uV1ISJ1ryWLotN":{"uri":"/docs/melonjs/Camera2d.html#union"},"n1IvcmkxCXb3XoyskW1Xp":{"uri":"/docs/melonjs/Camera2d.html#worldToLocal"},"2er3UQm6UmLEfM94redLB":{"uri":"/docs/melonjs/Camera2d.html#draw"},"4f3mCsKkcprTpUyn3YvZ4":{"uri":"/docs/melonjs/Camera2d.html#postDraw"},"DL6z91a3YgejjDBU-IEnu":{"uri":"/docs/melonjs/Camera2d.html#preDraw"},"1YkV7oxHjKeMKrZRoJI0_":{"uri":"/docs/melonjs/Camera2d.html#update"},"CmMNusagtDIDjKe09i2W-":{"uri":"/docs/melonjs/Camera2d.html#onAnchorUpdate"},"K22zcfngLbcS3BWz5GVcB":{"uri":"/docs/melonjs/CanvasRenderer.html"},"3eqjGV66ZPVnFW3f9GzeO":{"uri":"/docs/melonjs/CanvasRenderer.html#isContextValid"},"l6NJVSeGWeDhrCuUFP2iW":{"uri":"/docs/melonjs/CanvasRenderer.html#path2D"},"TGv91qOtTgSr3CWwPScUr":{"uri":"/docs/melonjs/CanvasRenderer.html#settings"},"2h3HY4t3l6azUZXGgc9hD":{"uri":"/docs/melonjs/CanvasRenderer.html#clear"},"bVFMPiv8erQDm3zfIV0jp":{"uri":"/docs/melonjs/CanvasRenderer.html#clearColor"},"e6nehU1H14nldrLAYTKKy":{"uri":"/docs/melonjs/CanvasRenderer.html#clearMask"},"fZq6BP1-K-aa7YcAnYfKw":{"uri":"/docs/melonjs/CanvasRenderer.html#clearRect"},"_1JMOL8AxeM5mFp2hCcc_":{"uri":"/docs/melonjs/CanvasRenderer.html#clearTint"},"mWzBx1IzVFQCwHlJSQWSD":{"uri":"/docs/melonjs/CanvasRenderer.html#clipRect"},"vMsGvhb9KQO8W4fdzCh8f":{"uri":"/docs/melonjs/CanvasRenderer.html#constructor"},"oEIe8LZkk-xtNlT81mc5f":{"uri":"/docs/melonjs/CanvasRenderer.html#createPattern"},"O0emnxrOBNtaq0ZFTe0An":{"uri":"/docs/melonjs/CanvasRenderer.html#drawImage"},"SEwEUnYb1UAaCRcD15szC":{"uri":"/docs/melonjs/CanvasRenderer.html#drawPattern"},"8xewVK-ecjqwayPlYrLa-":{"uri":"/docs/melonjs/CanvasRenderer.html#fill"},"sssHgCMLlqc0lFUrcp8ad":{"uri":"/docs/melonjs/CanvasRenderer.html#fillArc"},"QQtv4WeoudKxGcbHjVPrR":{"uri":"/docs/melonjs/CanvasRenderer.html#fillEllipse"},"WbuR--iSJElwZ5Ozs2ASg":{"uri":"/docs/melonjs/CanvasRenderer.html#fillLine"},"mfFJXwZqbvqvJcwBl34Pb":{"uri":"/docs/melonjs/CanvasRenderer.html#fillPolygon"},"K5Nst3RuNF9r9ipNxMIOZ":{"uri":"/docs/melonjs/CanvasRenderer.html#fillRect"},"BnXe00hMmLGl97GbuwEnK":{"uri":"/docs/melonjs/CanvasRenderer.html#fillRoundRect"},"bs4Bhvwxsqy_EkISMBO43":{"uri":"/docs/melonjs/CanvasRenderer.html#flush"},"5a5wAPC60wRYyGICa9qY-":{"uri":"/docs/melonjs/CanvasRenderer.html#getBlendMode"},"ilAEvwG1HY4XjjlEoQt06":{"uri":"/docs/melonjs/CanvasRenderer.html#getCanvas"},"SSVKgc9zxlB0BfEiReF5E":{"uri":"/docs/melonjs/CanvasRenderer.html#getColor"},"_pYZS3ktwulYHT-Vrg8WA":{"uri":"/docs/melonjs/CanvasRenderer.html#getContext"},"-btfldGA5lyZOJKFZfBVG":{"uri":"/docs/melonjs/CanvasRenderer.html#getContext2d"},"k4n64k3OPCU5krG3P4wEj":{"uri":"/docs/melonjs/CanvasRenderer.html#getGlobalAlpha"},"Guncupdpvri6pUU9BawkY":{"uri":"/docs/melonjs/CanvasRenderer.html#getHeight"},"qEnDJuL1TYPiVSllRqMk_":{"uri":"/docs/melonjs/CanvasRenderer.html#getScreenCanvas"},"OPbCxo-a3F8l4oY28lBrF":{"uri":"/docs/melonjs/CanvasRenderer.html#getScreenContext"},"upYkQxacWZWk4jZntBXYX":{"uri":"/docs/melonjs/CanvasRenderer.html#getWidth"},"zYK0Apg0BFgJqm-RFA6j0":{"uri":"/docs/melonjs/CanvasRenderer.html#globalAlpha"},"XnPCnveumMygU8go9u2UB":{"uri":"/docs/melonjs/CanvasRenderer.html#overlaps"},"xPJCL46WRsRC9UwOHar7N":{"uri":"/docs/melonjs/CanvasRenderer.html#reset"},"pveanLfVCle2JFVaDq2S7":{"uri":"/docs/melonjs/CanvasRenderer.html#resetTransform"},"xfiXuGsgiuJLgjdANPojd":{"uri":"/docs/melonjs/CanvasRenderer.html#resize"},"wpcwqWj7GSCBldkVIZ_se":{"uri":"/docs/melonjs/CanvasRenderer.html#restore"},"8ctNHsk4qsXpIWDxybaqL":{"uri":"/docs/melonjs/CanvasRenderer.html#rotate"},"w9TvXcrK47psGymIdQ8wL":{"uri":"/docs/melonjs/CanvasRenderer.html#save"},"MMPVa7NtJlf1y7HPhrUEc":{"uri":"/docs/melonjs/CanvasRenderer.html#scale"},"xkDAXCvqCM2x0qazrWtRT":{"uri":"/docs/melonjs/CanvasRenderer.html#setAntiAlias"},"S9XmM5Py40jbNeSrpDraC":{"uri":"/docs/melonjs/CanvasRenderer.html#setBlendMode"},"m_gyPq74GYBOqrJTF7TCi":{"uri":"/docs/melonjs/CanvasRenderer.html#setColor"},"1WOTaazwjaprB_jY5a3Ge":{"uri":"/docs/melonjs/CanvasRenderer.html#setGlobalAlpha"},"KGsshf7PAneKqhHfcfXoh":{"uri":"/docs/melonjs/CanvasRenderer.html#setLineWidth"},"0M-kTDDBA2mZfGVAqTch5":{"uri":"/docs/melonjs/CanvasRenderer.html#setMask"},"b-ni57-ZIEL2CNEmsfsGz":{"uri":"/docs/melonjs/CanvasRenderer.html#setProjection"},"4YIwKZy7ecZpl55ubAh3s":{"uri":"/docs/melonjs/CanvasRenderer.html#setTint"},"pTebgxGKIaNazYI20rVlb":{"uri":"/docs/melonjs/CanvasRenderer.html#setTransform"},"Zniy6XHCppnfk6CzuaipX":{"uri":"/docs/melonjs/CanvasRenderer.html#stroke"},"k31FLz-l2zvq2sTC3_MpI":{"uri":"/docs/melonjs/CanvasRenderer.html#strokeArc"},"Fuywe6U9U5El_RIrwbdAC":{"uri":"/docs/melonjs/CanvasRenderer.html#strokeEllipse"},"vIyx6L0Yap14C8HmFCYgx":{"uri":"/docs/melonjs/CanvasRenderer.html#strokeLine"},"5I63BLTAn6j1kv-8uwabi":{"uri":"/docs/melonjs/CanvasRenderer.html#strokePolygon"},"TjDY7VjPAPGxkRYOU02ab":{"uri":"/docs/melonjs/CanvasRenderer.html#strokeRect"},"sIT4cnaIAHR41aiVq3ANm":{"uri":"/docs/melonjs/CanvasRenderer.html#strokeRoundRect"},"Ua-HiLeE71i54oXHVmmk8":{"uri":"/docs/melonjs/CanvasRenderer.html#tint"},"z-S07WRaYHRh28cfZMfq3":{"uri":"/docs/melonjs/CanvasRenderer.html#transform"},"OhqLOgFg6yJZPtrMNW3ix":{"uri":"/docs/melonjs/CanvasRenderer.html#translate"},"hv8nXD_2n1hSC5adgcMGy":{"uri":"/docs/melonjs/CanvasTexture.html"},"W4zzzrdUyXkOQPkQn4L1s":{"uri":"/docs/melonjs/CanvasTexture.html#canvas"},"M0Ts3sGU_4Omhh_-EIbEe":{"uri":"/docs/melonjs/CanvasTexture.html#context"},"qrExYC1o5y-IC_MDlUo4y":{"uri":"/docs/melonjs/CanvasTexture.html#height"},"5Dhl-w7qoNNI_EjoK_yzh":{"uri":"/docs/melonjs/CanvasTexture.html#width"},"Koi575P7QauSb9t2jOBIQ":{"uri":"/docs/melonjs/CanvasTexture.html#clear"},"Gz7EVkLhP5G0vMaqC_EJe":{"uri":"/docs/melonjs/CanvasTexture.html#constructor"},"CKOMGzty3CgwEOHwak5du":{"uri":"/docs/melonjs/CanvasTexture.html#resize"},"Sml6ox6VSZKg7_K6yXcnt":{"uri":"/docs/melonjs/Collectable.html"},"QF4Y7tQyRE-9tIFiyjgum":{"uri":"/docs/melonjs/Collectable.html#alpha"},"UqBtjFdh7XDf8pfTe-yNi":{"uri":"/docs/melonjs/Collectable.html#alwaysUpdate"},"4FYvt3aefbaK6a25WcIAS":{"uri":"/docs/melonjs/Collectable.html#ancestor"},"at-NlgYNaN5TiALCe6z3X":{"uri":"/docs/melonjs/Collectable.html#anchorPoint"},"WY5r8tuDEwwQXVU7oRO5x":{"uri":"/docs/melonjs/Collectable.html#animationpause"},"JuWIfxuIVQna8uy4_nKJB":{"uri":"/docs/melonjs/Collectable.html#animationspeed"},"wW675RXOv3guozI7Agm49":{"uri":"/docs/melonjs/Collectable.html#autoTransform"},"KW_5RR81VWuY0BzvXZ571":{"uri":"/docs/melonjs/Collectable.html#blendMode"},"elWSRBKy5bXT0QsY12vUU":{"uri":"/docs/melonjs/Collectable.html#body"},"DvUv2LH6S4VZVyMGlMG6J":{"uri":"/docs/melonjs/Collectable.html#bottom"},"NkVS8hNe2oYxIqkTAQYUJ":{"uri":"/docs/melonjs/Collectable.html#centerX"},"svd1hG5ekQ4XGXyKgNcys":{"uri":"/docs/melonjs/Collectable.html#centerY"},"JtJBhnQzp0BsvTu7AMoHn":{"uri":"/docs/melonjs/Collectable.html#currentTransform"},"zCPb63Ibb4nd1JT00DZVp":{"uri":"/docs/melonjs/Collectable.html#floating"},"GIQ_BZpIK1veLjRjWPgB5":{"uri":"/docs/melonjs/Collectable.html#GUID"},"Dmj2FTBu5qxunddx34-zu":{"uri":"/docs/melonjs/Collectable.html#height"},"vKpTTLAon-CPxrH-3xljP":{"uri":"/docs/melonjs/Collectable.html#inViewport"},"itiA5obo1dxRzhP588oqc":{"uri":"/docs/melonjs/Collectable.html#isDirty"},"S18RmmGQQvPbh7BWsYaqu":{"uri":"/docs/melonjs/Collectable.html#isFlippedX"},"gwWMbCc849D2NKGeYRz0B":{"uri":"/docs/melonjs/Collectable.html#isFlippedY"},"UgRHI4aOBWLjQN2TgQseY":{"uri":"/docs/melonjs/Collectable.html#isFloating"},"T3JaUsIt0WmG8MEXoaPmK":{"uri":"/docs/melonjs/Collectable.html#isKinematic"},"bCf57ecVJeEIqNBLc8b2U":{"uri":"/docs/melonjs/Collectable.html#isPersistent"},"77fUoPf5427TuugK4qeCW":{"uri":"/docs/melonjs/Collectable.html#left"},"mVZKRYjBnwHjsGEACmAVq":{"uri":"/docs/melonjs/Collectable.html#mask"},"pagIdXCoZfu4o8FHbIMxr":{"uri":"/docs/melonjs/Collectable.html#name"},"SsayptvD7OheaRrdJAtKj":{"uri":"/docs/melonjs/Collectable.html#offset"},"VKN6KcfBosrM0jb0hbiAS":{"uri":"/docs/melonjs/Collectable.html#onVisibilityChange"},"NnxmNcG-uAJhw-UPsrtEn":{"uri":"/docs/melonjs/Collectable.html#points"},"2PLsM6JnFjfaLUriGFgyq":{"uri":"/docs/melonjs/Collectable.html#pos"},"rJNzdz4cyJRwqX_wDSHBS":{"uri":"/docs/melonjs/Collectable.html#right"},"kVnK9Q17lhgCA7yFWwN-Z":{"uri":"/docs/melonjs/Collectable.html#source"},"EPhIfIBNFlh_BCiKWRkMG":{"uri":"/docs/melonjs/Collectable.html#tint"},"5biPWAExrAEz2mNR1H8YM":{"uri":"/docs/melonjs/Collectable.html#top"},"f_WPMOl4wwI3oL3XNFTCn":{"uri":"/docs/melonjs/Collectable.html#updateWhenPaused"},"6mXZpfQNUiAPiGURAkmkh":{"uri":"/docs/melonjs/Collectable.html#width"},"QhZDsysc8HEOQzLOS494C":{"uri":"/docs/melonjs/Collectable.html#addAnimation"},"78-p_3xHNs3p9PdhTGulw":{"uri":"/docs/melonjs/Collectable.html#angleTo"},"aN-FEZwJ_RyIAvxfVciOQ":{"uri":"/docs/melonjs/Collectable.html#centerOn"},"dCtIbStFzD_uK1SSBkCCF":{"uri":"/docs/melonjs/Collectable.html#clone"},"yfm5PwCIIdMHrieJa_5SM":{"uri":"/docs/melonjs/Collectable.html#constructor"},"fRkaG6a7iDe62G91f1uVJ":{"uri":"/docs/melonjs/Collectable.html#contains"},"aMeuU8w3kbRKwsu_xz8sg":{"uri":"/docs/melonjs/Collectable.html#copy"},"o0lTb_jh8zufPnjEMP16W":{"uri":"/docs/melonjs/Collectable.html#distanceTo"},"cWop--hRWphZnEjwp0brQ":{"uri":"/docs/melonjs/Collectable.html#equals"},"wpCo1LLBAGFxs-vORzmCm":{"uri":"/docs/melonjs/Collectable.html#flicker"},"cVhWhsIB70X8KGXH8z6cB":{"uri":"/docs/melonjs/Collectable.html#flipX"},"iyniGBXS5fz87NlfBzMWR":{"uri":"/docs/melonjs/Collectable.html#flipY"},"VWaaMb7oh8HJ3YicamV7K":{"uri":"/docs/melonjs/Collectable.html#getAbsolutePosition"},"w4jf3YF-i0iNr2_7I_eQe":{"uri":"/docs/melonjs/Collectable.html#getBounds"},"IsTKMLJVgNT1S0C-05TAK":{"uri":"/docs/melonjs/Collectable.html#getCurrentAnimationFrame"},"35UrySZ6tR5wS5c4sv5tp":{"uri":"/docs/melonjs/Collectable.html#getIndices"},"q-3qRxgxxv2LN4m3Bp2eA":{"uri":"/docs/melonjs/Collectable.html#getOpacity"},"ZpM63dCKBECtjc5ft7HEv":{"uri":"/docs/melonjs/Collectable.html#isConvex"},"-KGB7R0-wiMYUshHboNhq":{"uri":"/docs/melonjs/Collectable.html#isCurrentAnimation"},"khzGsLFRB3jBp7BKrqydo":{"uri":"/docs/melonjs/Collectable.html#isFinite"},"ZcXM_P0MzF-XElTbu97oT":{"uri":"/docs/melonjs/Collectable.html#isFlickering"},"3h06faUIrdjwPhQtgLQ30":{"uri":"/docs/melonjs/Collectable.html#lookAt"},"9W7fUVZR4FKZ33AqGek9o":{"uri":"/docs/melonjs/Collectable.html#onCollision"},"JwbwvQIu3OeSBCNUYtrVT":{"uri":"/docs/melonjs/Collectable.html#onDestroyEvent"},"wEwbakRDll2AYvtGMagod":{"uri":"/docs/melonjs/Collectable.html#overlaps"},"eXlfG6i9ZInyRVe1uylUc":{"uri":"/docs/melonjs/Collectable.html#recalc"},"jCI5gYFLHlwAzOWju9IYW":{"uri":"/docs/melonjs/Collectable.html#resize"},"03bIr2WHhjOPvU9Qa3Wsd":{"uri":"/docs/melonjs/Collectable.html#reverseAnimation"},"3Z8CPyCX8znmbZcj6_equ":{"uri":"/docs/melonjs/Collectable.html#rotate"},"lbJY0j-Frfm5j4yX6Qdu2":{"uri":"/docs/melonjs/Collectable.html#scale"},"FUr6ZFJSS4LnJ1j6hu06x":{"uri":"/docs/melonjs/Collectable.html#scaleV"},"iNxjSMSXPxnIXOAZMY4a2":{"uri":"/docs/melonjs/Collectable.html#setAnimationFrame"},"c6cC0CSwyZeo1oAliwUwR":{"uri":"/docs/melonjs/Collectable.html#setCurrentAnimation"},"9NICYlrOU63rFi4xJ5pWF":{"uri":"/docs/melonjs/Collectable.html#setOpacity"},"jdFuDAVZMZqte59pcZ2Dz":{"uri":"/docs/melonjs/Collectable.html#setRegion"},"aTGwjzSQyLCWPw-911_7t":{"uri":"/docs/melonjs/Collectable.html#setShape"},"Q4em6c-OujFjJ0kNXF5xe":{"uri":"/docs/melonjs/Collectable.html#setVertices"},"jL8QcaNtPXfnIf9YEP5xv":{"uri":"/docs/melonjs/Collectable.html#shift"},"4AK36cJ_8COwEkdjZd0l4":{"uri":"/docs/melonjs/Collectable.html#to2d"},"OHbiJcR-gORapxgmys5UB":{"uri":"/docs/melonjs/Collectable.html#toIso"},"C_pI-9dteWWdJyZoZzZb5":{"uri":"/docs/melonjs/Collectable.html#toPolygon"},"ma1B312epqtg1S0KOVx1Q":{"uri":"/docs/melonjs/Collectable.html#transform"},"--lyQM2v4xK-WQJBgQSVT":{"uri":"/docs/melonjs/Collectable.html#translate"},"zFFj1tTUO7BWBFqDrMi45":{"uri":"/docs/melonjs/Collectable.html#union"},"2K7TZmHnRmLkDnsde21oI":{"uri":"/docs/melonjs/Collectable.html#draw"},"3W7wkSS7FkMkrFukm4E5o":{"uri":"/docs/melonjs/Collectable.html#postDraw"},"yNZzx3bm6wV1i-U28cOq8":{"uri":"/docs/melonjs/Collectable.html#preDraw"},"Qzy9WST_jXr2lZQ-2hGQn":{"uri":"/docs/melonjs/Collectable.html#update"},"x0eUFtM8xX4Ydrgo-T2dC":{"uri":"/docs/melonjs/Collectable.html#onAnchorUpdate"},"1qFD3heh9CqkWXKLy4vHX":{"uri":"/docs/melonjs/Color.html"},"j_PJfm6U57y8cLzLJSysu":{"uri":"/docs/melonjs/Color.html#alpha"},"Qlg0IHcBEoVnuSUzOFMxr":{"uri":"/docs/melonjs/Color.html#b"},"GZsj1scWdLaVJ7JZf54Y7":{"uri":"/docs/melonjs/Color.html#g"},"_VRG1D1sBu8T1uSvye9dY":{"uri":"/docs/melonjs/Color.html#r"},"EEP-AGVbQpbJpJka2J1lz":{"uri":"/docs/melonjs/Color.html#add"},"fO1yWSGpXgVm30SbOlIpp":{"uri":"/docs/melonjs/Color.html#clone"},"ZehhQ6FqTekELhgB_qKxf":{"uri":"/docs/melonjs/Color.html#constructor"},"HW3dqyMR1C4cH-EcNHjTI":{"uri":"/docs/melonjs/Color.html#copy"},"IENTDTmiCxsj3-PYi7eTs":{"uri":"/docs/melonjs/Color.html#darken"},"QWoaZsF0mUlSkKxLIlbST":{"uri":"/docs/melonjs/Color.html#equals"},"d62B11Fb50882-O2GLYWz":{"uri":"/docs/melonjs/Color.html#lerp"},"J8ugFn1W0jvQBPB4686Mt":{"uri":"/docs/melonjs/Color.html#lighten"},"jJ7WZmxIQl2gG1Vs5S1DL":{"uri":"/docs/melonjs/Color.html#parseCSS"},"Q6c14MT57sQfEes1WG51b":{"uri":"/docs/melonjs/Color.html#parseHex"},"I5_wK6M2efJ50ckR58a3F":{"uri":"/docs/melonjs/Color.html#parseRGB"},"xd-3ltZxHD3Ogyt54lYCD":{"uri":"/docs/melonjs/Color.html#random"},"1Kj2kuo7f3xNv2gA_OJKX":{"uri":"/docs/melonjs/Color.html#setColor"},"vkUXHCWvTaIeCZ2nlz8fH":{"uri":"/docs/melonjs/Color.html#toArray"},"Uv9Qd2JNpL4GlZY3cXWwR":{"uri":"/docs/melonjs/Color.html#toHex"},"_rO2JVdFoJP9nQfXxcecV":{"uri":"/docs/melonjs/Color.html#toHex8"},"xI1pI1hR5V7LmNT-XwxA-":{"uri":"/docs/melonjs/Color.html#toRGB"},"2mPH9UWxHy5bQrTJv9ros":{"uri":"/docs/melonjs/Color.html#toRGBA"},"P-ZGA92iQIuAX195hemxT":{"uri":"/docs/melonjs/Color.html#toUint32"},"7G2uJyjaiGPZ6qp_6BIJs":{"uri":"/docs/melonjs/ColorLayer.html"},"7paWlQTfxz3KwmLnY1Lw2":{"uri":"/docs/melonjs/ColorLayer.html#alpha"},"hmFRfaKfK6JKTBg9YdzIe":{"uri":"/docs/melonjs/ColorLayer.html#alwaysUpdate"},"FgKIa2vHJRB-JAxONYOYj":{"uri":"/docs/melonjs/ColorLayer.html#ancestor"},"9W8WE6lrk-HhQmf5Fw0nm":{"uri":"/docs/melonjs/ColorLayer.html#anchorPoint"},"DyEzsGl2JT9GLbfHBPc9M":{"uri":"/docs/melonjs/ColorLayer.html#autoTransform"},"rxlmp66K6-3xzkwfEx1Xj":{"uri":"/docs/melonjs/ColorLayer.html#blendMode"},"M_-9ECTx8TxJE3vgD-g2M":{"uri":"/docs/melonjs/ColorLayer.html#body"},"x3_76HrI3k3UbUPwIKX_t":{"uri":"/docs/melonjs/ColorLayer.html#bottom"},"IqjpS-TIVE3P4Vqb7gMTw":{"uri":"/docs/melonjs/ColorLayer.html#centerX"},"bFgC7ZvJGN57dxo3H5X_T":{"uri":"/docs/melonjs/ColorLayer.html#centerY"},"liaV4GyON5MeTQQicuUus":{"uri":"/docs/melonjs/ColorLayer.html#color"},"b_2_MJOjSvkwyNk-jD4Eu":{"uri":"/docs/melonjs/ColorLayer.html#currentTransform"},"94j4Ov3pTsib9znDHCQ3x":{"uri":"/docs/melonjs/ColorLayer.html#floating"},"foXhesHaqJLhP3RVfTxaw":{"uri":"/docs/melonjs/ColorLayer.html#GUID"},"UTdMCM2hrWciL3IM0zkLY":{"uri":"/docs/melonjs/ColorLayer.html#height"},"cNvrVpbBeR7sCTx1j-t_p":{"uri":"/docs/melonjs/ColorLayer.html#inViewport"},"_66ubM4oVo5HRbo7fk08Y":{"uri":"/docs/melonjs/ColorLayer.html#isDirty"},"UR6edeWaN2fA5_WskN36m":{"uri":"/docs/melonjs/ColorLayer.html#isFlippedX"},"SU_4ANY2msYheK6nVdFR2":{"uri":"/docs/melonjs/ColorLayer.html#isFlippedY"},"SrOok9VvkHzzqpvIkGsid":{"uri":"/docs/melonjs/ColorLayer.html#isFloating"},"ohiu-hQ-dVli57pL5B56c":{"uri":"/docs/melonjs/ColorLayer.html#isKinematic"},"TwczjI9hKAtR8dk6v-vec":{"uri":"/docs/melonjs/ColorLayer.html#isPersistent"},"88xChDdeSnRYZcIPhuKo-":{"uri":"/docs/melonjs/ColorLayer.html#left"},"7w9fIMpFxhQlggStVtnKQ":{"uri":"/docs/melonjs/ColorLayer.html#mask"},"RKPRGG90jq0mAv5ABN_JF":{"uri":"/docs/melonjs/ColorLayer.html#name"},"ZAWg0WvnuLBQRfNwcq4CF":{"uri":"/docs/melonjs/ColorLayer.html#onVisibilityChange"},"S4Qu02tfE3NoKpmEzB0qn":{"uri":"/docs/melonjs/ColorLayer.html#points"},"U_AvIwBjMMFJ2L3tbvg34":{"uri":"/docs/melonjs/ColorLayer.html#pos"},"deHIJwSr84-vlRbX7_D2_":{"uri":"/docs/melonjs/ColorLayer.html#right"},"78mSUpBrQI1Wyrxny5Hgz":{"uri":"/docs/melonjs/ColorLayer.html#tint"},"ikehlgNh8W0MgCu3bdhkl":{"uri":"/docs/melonjs/ColorLayer.html#top"},"IqxrD-uv2XGfCitNhwYRW":{"uri":"/docs/melonjs/ColorLayer.html#updateWhenPaused"},"psjgx1-QRy1hpyKOIK0t3":{"uri":"/docs/melonjs/ColorLayer.html#width"},"FFtQQ7XIGAA-KoR_evcrZ":{"uri":"/docs/melonjs/ColorLayer.html#angleTo"},"KdvE2XlnEIvoW2HrlXi-Y":{"uri":"/docs/melonjs/ColorLayer.html#centerOn"},"uNH-YnUSIeT9Gjjo_Brii":{"uri":"/docs/melonjs/ColorLayer.html#clone"},"8Wt2SaIS41VgsGnwIqlof":{"uri":"/docs/melonjs/ColorLayer.html#constructor"},"-Md6v7_mY2B1cOYHNUzaC":{"uri":"/docs/melonjs/ColorLayer.html#contains"},"lDltFegeoTfoyrKMMnH4k":{"uri":"/docs/melonjs/ColorLayer.html#copy"},"3SlLVnzOUgecIPHHYQEBJ":{"uri":"/docs/melonjs/ColorLayer.html#distanceTo"},"u3ILaX8Yw3N76uVfxWFq2":{"uri":"/docs/melonjs/ColorLayer.html#equals"},"PAHvrY_dUWNbvdjY5KpLd":{"uri":"/docs/melonjs/ColorLayer.html#flipX"},"9wPExnaixbU22LZDCk9TP":{"uri":"/docs/melonjs/ColorLayer.html#flipY"},"nfL8NxVTY5lcyNj96e2iv":{"uri":"/docs/melonjs/ColorLayer.html#getAbsolutePosition"},"zKl7Hd9VxTkdZuTpeib3v":{"uri":"/docs/melonjs/ColorLayer.html#getBounds"},"kZAyTZPKPY4awulIj5TUN":{"uri":"/docs/melonjs/ColorLayer.html#getIndices"},"9V9D3as_QIidz2aTBIJG8":{"uri":"/docs/melonjs/ColorLayer.html#getOpacity"},"ygay22sKZSjjf_es_BTwk":{"uri":"/docs/melonjs/ColorLayer.html#isConvex"},"tpc7riz6uC6SnVFYlwah8":{"uri":"/docs/melonjs/ColorLayer.html#isFinite"},"F3h1feGWjBOZ4_IJGA-Xg":{"uri":"/docs/melonjs/ColorLayer.html#lookAt"},"UNH1rnJ6M23RdrBRFUbyB":{"uri":"/docs/melonjs/ColorLayer.html#onCollision"},"ctLn18HXamrHbNVq8O4mF":{"uri":"/docs/melonjs/ColorLayer.html#onDestroyEvent"},"ou81aWhf2mTSgpkq_xKsJ":{"uri":"/docs/melonjs/ColorLayer.html#overlaps"},"49JOzNM1ErjhCGZZbdJhl":{"uri":"/docs/melonjs/ColorLayer.html#recalc"},"2NtDOeUV2Ki-K_0lJtTfl":{"uri":"/docs/melonjs/ColorLayer.html#resize"},"R1mrMB5bBS11y6ESxYO5v":{"uri":"/docs/melonjs/ColorLayer.html#rotate"},"cpne7S925diDSTs-xhdye":{"uri":"/docs/melonjs/ColorLayer.html#scale"},"hOja_-iwl3vGOG7XGR3KK":{"uri":"/docs/melonjs/ColorLayer.html#scaleV"},"9_-ioW81uDXFLmF9RIH97":{"uri":"/docs/melonjs/ColorLayer.html#setOpacity"},"XdpYxzLZca3upPVm691Nx":{"uri":"/docs/melonjs/ColorLayer.html#setShape"},"m4RbC98EI5nY0Fjtft-3d":{"uri":"/docs/melonjs/ColorLayer.html#setVertices"},"ihJZJK6_XRa5ggqR-8X8z":{"uri":"/docs/melonjs/ColorLayer.html#shift"},"Qf0bjc3HidyV0Cx6WfNpZ":{"uri":"/docs/melonjs/ColorLayer.html#to2d"},"8W6JWKENTmDcfbOqqKHJC":{"uri":"/docs/melonjs/ColorLayer.html#toIso"},"ePgXTxGM6O1QRc3GQ78vi":{"uri":"/docs/melonjs/ColorLayer.html#toPolygon"},"_p8GS1QotJXMUX2K8F8oA":{"uri":"/docs/melonjs/ColorLayer.html#transform"},"N1PL858bEvwYSRJRtt-40":{"uri":"/docs/melonjs/ColorLayer.html#translate"},"UtFr9M84AZPvlMAEdPjY0":{"uri":"/docs/melonjs/ColorLayer.html#union"},"HANMiWbHmpLkBMTmozAFC":{"uri":"/docs/melonjs/ColorLayer.html#draw"},"6jN5b5E6zcxY3foSz1eJ4":{"uri":"/docs/melonjs/ColorLayer.html#postDraw"},"yC_ZQDTUiZwM8BRxirlC1":{"uri":"/docs/melonjs/ColorLayer.html#preDraw"},"PbIIiZmBohdidkbDV9ASA":{"uri":"/docs/melonjs/ColorLayer.html#update"},"dIVlsyb_OKduQ2_ttK-ja":{"uri":"/docs/melonjs/ColorLayer.html#onAnchorUpdate"},"6xVKbRFIRjYFTkvEzwFo1":{"uri":"/docs/melonjs/Container.html"},"RCs7SssrxqtNJdTFcYZY6":{"uri":"/docs/melonjs/Container.html#alpha"},"6XZvkM_AY6UlUcvJEE1zs":{"uri":"/docs/melonjs/Container.html#alwaysUpdate"},"eJtpurjRd59tY5mC5_T2Z":{"uri":"/docs/melonjs/Container.html#ancestor"},"p89evTAP6uH3keJUgsb1E":{"uri":"/docs/melonjs/Container.html#anchorPoint"},"bOxEpTlXiO5Ui0dfMyZtf":{"uri":"/docs/melonjs/Container.html#autoDepth"},"bV7v0dCtRPxkV6Ln0KwzY":{"uri":"/docs/melonjs/Container.html#autoSort"},"HeKnFMTXRamek4fTRnM5R":{"uri":"/docs/melonjs/Container.html#autoTransform"},"HiMfIJdNvFdkGiUdpK1Fe":{"uri":"/docs/melonjs/Container.html#backgroundColor"},"1od-wzasoG26e2RggD-mZ":{"uri":"/docs/melonjs/Container.html#blendMode"},"JKLOhav9y16MMUA-ocWdB":{"uri":"/docs/melonjs/Container.html#body"},"cZ4en4n98ky2nBQJun19A":{"uri":"/docs/melonjs/Container.html#bottom"},"KIGDA5a8tQJl6dKxCFDxb":{"uri":"/docs/melonjs/Container.html#centerX"},"WJ9i52xG8Jd19YzOn0D6E":{"uri":"/docs/melonjs/Container.html#centerY"},"w9OuYGxD92H3_AMXa4KKo":{"uri":"/docs/melonjs/Container.html#clipping"},"LhGtQzbQJKQBJtlUnXw1D":{"uri":"/docs/melonjs/Container.html#currentTransform"},"zC0pwloCXyQwcwqzbKcg1":{"uri":"/docs/melonjs/Container.html#enableChildBoundsUpdate"},"eW2KkSFZmQk3p_6l5rixk":{"uri":"/docs/melonjs/Container.html#floating"},"VW7knnbTdNlXRETPOoksX":{"uri":"/docs/melonjs/Container.html#GUID"},"Zp_TOw2GKXDepK7gXCs47":{"uri":"/docs/melonjs/Container.html#height"},"TfOHPIhyCXRH6UAUj4nRt":{"uri":"/docs/melonjs/Container.html#inViewport"},"CDs3D3AYGk-u3qg8UjIN4":{"uri":"/docs/melonjs/Container.html#isDirty"},"dpBoyTQvTHgMgLsEAgMEr":{"uri":"/docs/melonjs/Container.html#isFlippedX"},"JoTiI2ET0FuZ3pEOU1EMA":{"uri":"/docs/melonjs/Container.html#isFlippedY"},"o1krYFLKzkHmRG9Sbsacx":{"uri":"/docs/melonjs/Container.html#isFloating"},"Q0g242wlPHTehvUaviL9m":{"uri":"/docs/melonjs/Container.html#isKinematic"},"ideyTc5An2OzYJbdvCKKU":{"uri":"/docs/melonjs/Container.html#isPersistent"},"u4r73-chrU1CJturcsUsw":{"uri":"/docs/melonjs/Container.html#left"},"tQvNbZ1JpWc9F5nHQUPxl":{"uri":"/docs/melonjs/Container.html#mask"},"XMUbiSSCcgzZNJNoNc9nj":{"uri":"/docs/melonjs/Container.html#name"},"sP3aTFC3stAenFrmkGc9o":{"uri":"/docs/melonjs/Container.html#onVisibilityChange"},"i9VGUCSz20qPx0T_IWjwK":{"uri":"/docs/melonjs/Container.html#points"},"ktBWFP0xqmUARgO9cUVpm":{"uri":"/docs/melonjs/Container.html#pos"},"98WAGwu6ArIvZBtHCN52n":{"uri":"/docs/melonjs/Container.html#right"},"_9y0J5NTpJsBeyugKQUlO":{"uri":"/docs/melonjs/Container.html#root"},"97lxcrvpTcum7bMV2taRq":{"uri":"/docs/melonjs/Container.html#sortOn"},"2Ihlo5JytL2F0yZUAoYG6":{"uri":"/docs/melonjs/Container.html#tint"},"m6xQk_c3tCuaRkNf67dOt":{"uri":"/docs/melonjs/Container.html#top"},"oHxtrtEF6LEZpZ1I5uZ4i":{"uri":"/docs/melonjs/Container.html#updateWhenPaused"},"Hqgzc6gzHA4H95npmirCe":{"uri":"/docs/melonjs/Container.html#width"},"_Bx01hWrq19BLuPx3w2Sq":{"uri":"/docs/melonjs/Container.html#addChild"},"duMVshBQRAl1-WFAu7zBq":{"uri":"/docs/melonjs/Container.html#addChildAt"},"pcT6OpkwWhOSsM9Yw8XdU":{"uri":"/docs/melonjs/Container.html#angleTo"},"2g_hy89DrBy7qc-m80N3-":{"uri":"/docs/melonjs/Container.html#centerOn"},"KOkFjbOYSxLcUadQzWOFr":{"uri":"/docs/melonjs/Container.html#clone"},"up8kLavEDCCU4v08D-6v6":{"uri":"/docs/melonjs/Container.html#constructor"},"x2dO6rIuBGjGN3-8k2Gm0":{"uri":"/docs/melonjs/Container.html#contains"},"WtxBWY3OYCi6nrLB5smqv":{"uri":"/docs/melonjs/Container.html#copy"},"c9D1ZsNFL7OUnvHEyAmZM":{"uri":"/docs/melonjs/Container.html#distanceTo"},"teqtp5R6a8WDfmy61LsE-":{"uri":"/docs/melonjs/Container.html#equals"},"jg6O9f18KluzO9V5j-ZnI":{"uri":"/docs/melonjs/Container.html#flipX"},"kkRzk1lNXoT1hj07BferA":{"uri":"/docs/melonjs/Container.html#flipY"},"ZXpFyg1QnHhr2MV5_lrXz":{"uri":"/docs/melonjs/Container.html#forEach"},"5kJSXIiLkpus3SGFhy4Z7":{"uri":"/docs/melonjs/Container.html#getAbsolutePosition"},"-s3aWJdvAwtPu5jmVU0Xa":{"uri":"/docs/melonjs/Container.html#getBounds"},"RuMf1ERPZg6tNJKfCZopr":{"uri":"/docs/melonjs/Container.html#getChildAt"},"RKqu23pP7BMnmHtiGq_N9":{"uri":"/docs/melonjs/Container.html#getChildByGUID"},"dutIXWV5rLCpHj6XGa6qD":{"uri":"/docs/melonjs/Container.html#getChildByName"},"pQQO88qcZAVZSbfpL6KZE":{"uri":"/docs/melonjs/Container.html#getChildByProp"},"etakPZkfb_yotH09sco_1":{"uri":"/docs/melonjs/Container.html#getChildByType"},"A0VzFfeUEWAE4qXODN_7a":{"uri":"/docs/melonjs/Container.html#getChildIndex"},"nws87FDG1gRXgMfDyVG0k":{"uri":"/docs/melonjs/Container.html#getChildren"},"Vns8UkTC7CuNpf4zI4Mms":{"uri":"/docs/melonjs/Container.html#getIndices"},"TKeWv-kZmIg1p9Yb-zJk-":{"uri":"/docs/melonjs/Container.html#getNextChild"},"i_7iEG00_FS7UVx8St7t4":{"uri":"/docs/melonjs/Container.html#getOpacity"},"oRsEHftTd-bLcF2s5zrOf":{"uri":"/docs/melonjs/Container.html#hasChild"},"ze2kxjNMalPY0_sGcuidW":{"uri":"/docs/melonjs/Container.html#isConvex"},"ZdheyDt6vj8oEA8mnp9Vf":{"uri":"/docs/melonjs/Container.html#isFinite"},"uOuBRPdwgKkfMPbQMaN-D":{"uri":"/docs/melonjs/Container.html#lookAt"},"FA3B9CFqVCHn6m5uD6p9z":{"uri":"/docs/melonjs/Container.html#moveDown"},"GDqgxjZw53mNzf-Hxseyx":{"uri":"/docs/melonjs/Container.html#moveToBottom"},"3rJTMnynLkUJO324OR7lV":{"uri":"/docs/melonjs/Container.html#moveToTop"},"qvzefRUjEt29dqb7ZK7ke":{"uri":"/docs/melonjs/Container.html#moveUp"},"ALovEQj_I5cceptzy9MJk":{"uri":"/docs/melonjs/Container.html#onChildChange"},"SGqXA3B8KjAHaSnu0aixC":{"uri":"/docs/melonjs/Container.html#onCollision"},"Ib1jmiJOe5mQESh-06Wxb":{"uri":"/docs/melonjs/Container.html#onDestroyEvent"},"BTSP7BkK4YORse2ylisFm":{"uri":"/docs/melonjs/Container.html#overlaps"},"yfeYWfZNE9V1aR7RdUqdd":{"uri":"/docs/melonjs/Container.html#recalc"},"QcZNyGbcr92_t8pKuspw5":{"uri":"/docs/melonjs/Container.html#removeChild"},"VVwv_WgqaPo3yaaVYQETJ":{"uri":"/docs/melonjs/Container.html#removeChildNow"},"ospPJFMt2gQv_L7r0MI0p":{"uri":"/docs/melonjs/Container.html#reset"},"YPiHSfIIMRDBrVcm8DIgG":{"uri":"/docs/melonjs/Container.html#resize"},"qTqQ2q6xfKRFAmJmYBwbX":{"uri":"/docs/melonjs/Container.html#rotate"},"B5uHMa2BxjH63T25Q07V-":{"uri":"/docs/melonjs/Container.html#scale"},"t8JcYT08B15E7DzyYA4VC":{"uri":"/docs/melonjs/Container.html#scaleV"},"DzE5B1e7a7TwWyqMsg43-":{"uri":"/docs/melonjs/Container.html#setChildsProperty"},"IAZ6aXed_kcHwioRde0fh":{"uri":"/docs/melonjs/Container.html#setOpacity"},"c9Jt9RVucid2sblinj38g":{"uri":"/docs/melonjs/Container.html#setShape"},"Xt3D2EnHGHPofJgp-h6hz":{"uri":"/docs/melonjs/Container.html#setVertices"},"eFxeRiJQ1ibpvqnH1hJra":{"uri":"/docs/melonjs/Container.html#shift"},"DWSmIzJChYc_gHbB6YXEV":{"uri":"/docs/melonjs/Container.html#sort"},"xcfPps4rq5HdGFx7TB7kO":{"uri":"/docs/melonjs/Container.html#swapChildren"},"DcMUUKQQJKfMVPwzAbY3H":{"uri":"/docs/melonjs/Container.html#to2d"},"mL4TnN0PifG4hHNSFD8QN":{"uri":"/docs/melonjs/Container.html#toIso"},"LBUkPJWF3-_6f-U1nKCaE":{"uri":"/docs/melonjs/Container.html#toPolygon"},"zBZBmk1WBwwkPhYP4tTrM":{"uri":"/docs/melonjs/Container.html#transform"},"cqeQMkEPVQRjI_6bvr6p_":{"uri":"/docs/melonjs/Container.html#translate"},"wXSqu3mcGqEegJb1ciMyx":{"uri":"/docs/melonjs/Container.html#union"},"5Ymj4cR0lmt2EADaIGuGw":{"uri":"/docs/melonjs/Container.html#draw"},"xAKVNl8pxZYTaZytFPzob":{"uri":"/docs/melonjs/Container.html#postDraw"},"YR7I5jBIkF4rlmG2o-FCh":{"uri":"/docs/melonjs/Container.html#preDraw"},"Y_PHDdTX19iiTHckR8MIn":{"uri":"/docs/melonjs/Container.html#update"},"fd_Chz5ZFevhfqrEvqAMm":{"uri":"/docs/melonjs/Container.html#isAttachedToRoot"},"yc1V-ANPrfcviLzpC4ehT":{"uri":"/docs/melonjs/Container.html#onAnchorUpdate"},"NNmsDpf4Cq4hs6oByk5AO":{"uri":"/docs/melonjs/Draggable.html"},"DvTIg6BuvuwDR3LERNecR":{"uri":"/docs/melonjs/Draggable.html#alpha"},"pv6X8YZ1L9Qfq0MGPaoAv":{"uri":"/docs/melonjs/Draggable.html#alwaysUpdate"},"MjUFK1VT5evUJCtUQEl5m":{"uri":"/docs/melonjs/Draggable.html#ancestor"},"bsl8krGdEbFvovL5grtsz":{"uri":"/docs/melonjs/Draggable.html#anchorPoint"},"w5z1CDwL3gSB0kdDdyk5f":{"uri":"/docs/melonjs/Draggable.html#autoTransform"},"Tn4c0wDlTAIO8BlL7qSHK":{"uri":"/docs/melonjs/Draggable.html#blendMode"},"12r6ebZcIehRSAHHAc0CB":{"uri":"/docs/melonjs/Draggable.html#body"},"o6N3rXKNFDElclNJ-2zte":{"uri":"/docs/melonjs/Draggable.html#bottom"},"EyB_3eponnclqjvuLNoai":{"uri":"/docs/melonjs/Draggable.html#centerX"},"Cl-YzshUEEifxNc_YBl8H":{"uri":"/docs/melonjs/Draggable.html#centerY"},"2VyCS1RUARKyer_SNA0oh":{"uri":"/docs/melonjs/Draggable.html#currentTransform"},"spOlkn86k_HoaAL_eFzGo":{"uri":"/docs/melonjs/Draggable.html#floating"},"kRurspoZitx9Rd45b8ZCu":{"uri":"/docs/melonjs/Draggable.html#GUID"},"gzUrDRx0K8HGYkwOxdvBX":{"uri":"/docs/melonjs/Draggable.html#height"},"O2TlKh_ICOmhtHdrgCuxB":{"uri":"/docs/melonjs/Draggable.html#inViewport"},"vw4d2mqY6Vt5DGehhm4v3":{"uri":"/docs/melonjs/Draggable.html#isDirty"},"XlztjxQ_32k1kK7UKkCs_":{"uri":"/docs/melonjs/Draggable.html#isFlippedX"},"Lkyu-kVH-6XnnIH9DkFdw":{"uri":"/docs/melonjs/Draggable.html#isFlippedY"},"lr8kBdNwvUvBXFcvt05lA":{"uri":"/docs/melonjs/Draggable.html#isFloating"},"h9TX8MAVv2DdYsrNQ6HuW":{"uri":"/docs/melonjs/Draggable.html#isKinematic"},"wV93xeD8QU9YIhHfcngqu":{"uri":"/docs/melonjs/Draggable.html#isPersistent"},"is2xrceBMQ8NCPI8MFROt":{"uri":"/docs/melonjs/Draggable.html#left"},"II4qiGudrWVL_Yp7bmUAJ":{"uri":"/docs/melonjs/Draggable.html#mask"},"Rc-FNnVWE7nPoaVsZsgVc":{"uri":"/docs/melonjs/Draggable.html#name"},"xz_OgC_VlEqnN-Du3w6G-":{"uri":"/docs/melonjs/Draggable.html#onVisibilityChange"},"wt1T1ynzNSsQVJZvCKK3m":{"uri":"/docs/melonjs/Draggable.html#points"},"sGlS8tgL3--3-AxsPxCMT":{"uri":"/docs/melonjs/Draggable.html#pos"},"msNOxena0kws2fmfUp6mP":{"uri":"/docs/melonjs/Draggable.html#right"},"gRojLiTBTh7tz5BrmLgxJ":{"uri":"/docs/melonjs/Draggable.html#tint"},"N4oF2xsaoX3XPo5mHj1eh":{"uri":"/docs/melonjs/Draggable.html#top"},"PBG8hQVucYCljrorrus39":{"uri":"/docs/melonjs/Draggable.html#updateWhenPaused"},"5O014e-DcfxZ5O0JlNohU":{"uri":"/docs/melonjs/Draggable.html#width"},"heBF4ARj3uUSyvYeiUh8j":{"uri":"/docs/melonjs/Draggable.html#angleTo"},"dvFA51-wJo3EEC3H-CLdt":{"uri":"/docs/melonjs/Draggable.html#centerOn"},"hCTiplTdk8ZgvKHI6gLdf":{"uri":"/docs/melonjs/Draggable.html#clone"},"K06qrJq0z-Fuo9skDIAcI":{"uri":"/docs/melonjs/Draggable.html#constructor"},"fcmwW00Iow_VeEiR63bby":{"uri":"/docs/melonjs/Draggable.html#contains"},"RoobJN72KJxgBuFI6CKQG":{"uri":"/docs/melonjs/Draggable.html#copy"},"BKRyzTtYGqAxTxM3Pmoug":{"uri":"/docs/melonjs/Draggable.html#distanceTo"},"NK6GCa9ABe8AQYyXNAPZ4":{"uri":"/docs/melonjs/Draggable.html#dragEnd"},"cQzhLM92T-UhlaOKejd0M":{"uri":"/docs/melonjs/Draggable.html#dragMove"},"1i--FXFQ3j7wurEkhw099":{"uri":"/docs/melonjs/Draggable.html#dragStart"},"2Oir791xNySnk1YM4xe8Y":{"uri":"/docs/melonjs/Draggable.html#equals"},"XvEOh7gSYlhfAg9mR2pG9":{"uri":"/docs/melonjs/Draggable.html#flipX"},"nIyOFiGW3ZITGMkNMvUjc":{"uri":"/docs/melonjs/Draggable.html#flipY"},"r_rAGFt20BvFtKUKk5Atd":{"uri":"/docs/melonjs/Draggable.html#getAbsolutePosition"},"fcZgxirPID-ZtrlR86r4q":{"uri":"/docs/melonjs/Draggable.html#getBounds"},"8h6ju6BcMdpwQOwdFrh0C":{"uri":"/docs/melonjs/Draggable.html#getIndices"},"IAZzZHDwjfuT-aLRllYcy":{"uri":"/docs/melonjs/Draggable.html#getOpacity"},"gb8Ivs9AvrZvYNIFEGdQk":{"uri":"/docs/melonjs/Draggable.html#isConvex"},"ihhxqRxoa7nxMqmK4aKCB":{"uri":"/docs/melonjs/Draggable.html#isFinite"},"Qj3iYniRWj_mxMD-Q4Dtr":{"uri":"/docs/melonjs/Draggable.html#lookAt"},"cuN-i-v_s7dbJgcntDmL5":{"uri":"/docs/melonjs/Draggable.html#onCollision"},"CD-W0a8TCqKHEC_sjFff-":{"uri":"/docs/melonjs/Draggable.html#onDestroyEvent"},"FCgWOEteeBBcCzzMa_Wmy":{"uri":"/docs/melonjs/Draggable.html#overlaps"},"Bm1x0TtFKeLm4Dh57pZTQ":{"uri":"/docs/melonjs/Draggable.html#recalc"},"3zEJdKrP412fE2Dtd97XS":{"uri":"/docs/melonjs/Draggable.html#resize"},"5oStREsjXALD2hpoDdHfm":{"uri":"/docs/melonjs/Draggable.html#rotate"},"HTROWNsdpmNADbFWDnBjN":{"uri":"/docs/melonjs/Draggable.html#scale"},"44YMFTNdb0p58BoRmzBlK":{"uri":"/docs/melonjs/Draggable.html#scaleV"},"fbHi8wr9Qk85akKVCoVl5":{"uri":"/docs/melonjs/Draggable.html#setOpacity"},"OiFfdWI-kU-w_DeZlgvFM":{"uri":"/docs/melonjs/Draggable.html#setShape"},"6n2qpQm7uoIckBY_H3p1Y":{"uri":"/docs/melonjs/Draggable.html#setVertices"},"n8kbdQQ_Uak4zkxZhDqip":{"uri":"/docs/melonjs/Draggable.html#shift"},"1Dg-YfLXUCTM2TS1j9pJS":{"uri":"/docs/melonjs/Draggable.html#to2d"},"4kW4OWuR4Lt_CoQVDIIQK":{"uri":"/docs/melonjs/Draggable.html#toIso"},"EbLovvmufsUXaXcfo9lj3":{"uri":"/docs/melonjs/Draggable.html#toPolygon"},"57E9kAu817tugAyBVwHG2":{"uri":"/docs/melonjs/Draggable.html#transform"},"KJXvUxW2Z0HLqgp_ZyX2_":{"uri":"/docs/melonjs/Draggable.html#translate"},"rHJObo9mbz9TSlL68r75y":{"uri":"/docs/melonjs/Draggable.html#union"},"3vtje6zvM40lp8xmRTXs9":{"uri":"/docs/melonjs/Draggable.html#draw"},"7x-cU7ECDByCGeOHQkcfd":{"uri":"/docs/melonjs/Draggable.html#postDraw"},"G2RTLCNNftIyTzcmALHRh":{"uri":"/docs/melonjs/Draggable.html#preDraw"},"oIHEt-XnUl9lrb4jQU7o9":{"uri":"/docs/melonjs/Draggable.html#update"},"xAjiyBvWRM4jCpcC_YwBu":{"uri":"/docs/melonjs/Draggable.html#initEvents"},"nEeXASgbIqjUpvlvKGhAc":{"uri":"/docs/melonjs/Draggable.html#onAnchorUpdate"},"_4fBRp7lj1nQljY-YIyDg":{"uri":"/docs/melonjs/DraggableEntity.html"},"nJ_Z-qnNB2ncTquOfharX":{"uri":"/docs/melonjs/DraggableEntity.html#alive"},"cD6Y4eDtQiNpjvtj5RMda":{"uri":"/docs/melonjs/DraggableEntity.html#alpha"},"LV1d3PYo8-4nNMJ5AJd3U":{"uri":"/docs/melonjs/DraggableEntity.html#alwaysUpdate"},"R3qSbtuGUFoWf1DwZv8hS":{"uri":"/docs/melonjs/DraggableEntity.html#ancestor"},"FGFVB75ZcCwr667thiO0f":{"uri":"/docs/melonjs/DraggableEntity.html#anchorPoint"},"-QEadx5ms-f4GDuETEAu3":{"uri":"/docs/melonjs/DraggableEntity.html#autoTransform"},"Ks7iJPmQiToZsBfqKhD8p":{"uri":"/docs/melonjs/DraggableEntity.html#blendMode"},"l5-6IgqLI8rN6B5YdgfQn":{"uri":"/docs/melonjs/DraggableEntity.html#bottom"},"QD_6C_mtiwQGS8qflEuPb":{"uri":"/docs/melonjs/DraggableEntity.html#centerX"},"wvfC05kwoVw2FTFps2ROS":{"uri":"/docs/melonjs/DraggableEntity.html#centerY"},"qgZ25gLccyhVUOEjWG6wf":{"uri":"/docs/melonjs/DraggableEntity.html#currentTransform"},"f1PqR-Js9NeEKjjhs7r9X":{"uri":"/docs/melonjs/DraggableEntity.html#floating"},"UZb-WMK6PSjVgCOvlQp84":{"uri":"/docs/melonjs/DraggableEntity.html#GUID"},"lrrYRe_vjIBHYqpCzunrZ":{"uri":"/docs/melonjs/DraggableEntity.html#height"},"gto1Az-8iWsxJpX6PPPQ2":{"uri":"/docs/melonjs/DraggableEntity.html#id"},"nT3x1rDUR_8VPCnz5HU5G":{"uri":"/docs/melonjs/DraggableEntity.html#inViewport"},"Ca5tF6yGIdxyBm59ZG-9u":{"uri":"/docs/melonjs/DraggableEntity.html#isDirty"},"HNENTw8rOgsxC6YhjU7P0":{"uri":"/docs/melonjs/DraggableEntity.html#isFlippedX"},"aXlaEnlFATna19nhalTKP":{"uri":"/docs/melonjs/DraggableEntity.html#isFlippedY"},"NHBMs_3gZWmx50KBEB7qU":{"uri":"/docs/melonjs/DraggableEntity.html#isFloating"},"erYkfM8K4yACmAJ9DB32K":{"uri":"/docs/melonjs/DraggableEntity.html#isKinematic"},"suZsGRJ4H9lcS7t9zSCoJ":{"uri":"/docs/melonjs/DraggableEntity.html#isPersistent"},"SdAoY6Wj301hdGa04p79J":{"uri":"/docs/melonjs/DraggableEntity.html#left"},"KRuhKeoBLg-DSl2UWeAaX":{"uri":"/docs/melonjs/DraggableEntity.html#mask"},"v7Sk6mRwYuQj1hyO7jYjq":{"uri":"/docs/melonjs/DraggableEntity.html#name"},"q1mf0ZeWjAfCzBHgEXWBS":{"uri":"/docs/melonjs/DraggableEntity.html#onVisibilityChange"},"yAyfZKZH56rhAntgzWewE":{"uri":"/docs/melonjs/DraggableEntity.html#points"},"B19l0-6s2yaOYyLcYd7g7":{"uri":"/docs/melonjs/DraggableEntity.html#pos"},"29viFS-nw1xuaRYHOgUhM":{"uri":"/docs/melonjs/DraggableEntity.html#renderable"},"xgh9aU0CSp9O5Ixjn2o0F":{"uri":"/docs/melonjs/DraggableEntity.html#right"},"nNWTi_l0APBNrEO6IaaHd":{"uri":"/docs/melonjs/DraggableEntity.html#tint"},"lq4UkkWE-brd5zMhQ_Pu2":{"uri":"/docs/melonjs/DraggableEntity.html#top"},"qOkviuDnKqc7aZuQnfQWK":{"uri":"/docs/melonjs/DraggableEntity.html#type"},"eKr8rLC9WK-6K275jFbdO":{"uri":"/docs/melonjs/DraggableEntity.html#updateWhenPaused"},"8K5I6wz08UdHWMGbo5hC8":{"uri":"/docs/melonjs/DraggableEntity.html#width"},"m7qkb21zt7C6gqOTD5oAa":{"uri":"/docs/melonjs/DraggableEntity.html#angleTo"},"1B0Faa4VzURu-j_gxk2YO":{"uri":"/docs/melonjs/DraggableEntity.html#centerOn"},"YjXmzQIk-_a2GTGJxCCr4":{"uri":"/docs/melonjs/DraggableEntity.html#clone"},"jGKhl2uomg9vpGU0p2vJP":{"uri":"/docs/melonjs/DraggableEntity.html#constructor"},"KbTW8Iqk3Wxv03tTh-uXR":{"uri":"/docs/melonjs/DraggableEntity.html#contains"},"e4qisa56s_LyVktSUGwRL":{"uri":"/docs/melonjs/DraggableEntity.html#copy"},"383y4LOCPeCNT98W8D9Nt":{"uri":"/docs/melonjs/DraggableEntity.html#distanceTo"},"qqllgtfhApS5snIFAwY0g":{"uri":"/docs/melonjs/DraggableEntity.html#equals"},"MXeIoFBh__WKpnzLHhnDA":{"uri":"/docs/melonjs/DraggableEntity.html#flipX"},"vald391F_H1x6nAf75UXZ":{"uri":"/docs/melonjs/DraggableEntity.html#flipY"},"6EVxhn7jsK0UuepnmZWJr":{"uri":"/docs/melonjs/DraggableEntity.html#getAbsolutePosition"},"KVc1qz7MQxsUhaRK5Q3iv":{"uri":"/docs/melonjs/DraggableEntity.html#getBounds"},"1TwHUvDJU1agUJsG4Yc49":{"uri":"/docs/melonjs/DraggableEntity.html#getIndices"},"UedG-BqDToLJDlJl3AERw":{"uri":"/docs/melonjs/DraggableEntity.html#getOpacity"},"C8jjOpbnDnLAnPy1LHfOU":{"uri":"/docs/melonjs/DraggableEntity.html#isConvex"},"GTljFRyDYg-r9Qu2YEgIR":{"uri":"/docs/melonjs/DraggableEntity.html#isFinite"},"hg0R3qGJAgv1M74nqxSRq":{"uri":"/docs/melonjs/DraggableEntity.html#lookAt"},"1WkySzO4YOkg-dpMcJ77q":{"uri":"/docs/melonjs/DraggableEntity.html#onCollision"},"AMvN0CqVI0X6qJggkyoQd":{"uri":"/docs/melonjs/DraggableEntity.html#onDeactivateEvent"},"J5j4OjNc__AlqX9_9Rmea":{"uri":"/docs/melonjs/DraggableEntity.html#onDestroyEvent"},"qoJVBfrHl3yPc6WDe3l-K":{"uri":"/docs/melonjs/DraggableEntity.html#overlaps"},"B5XD7Jcz49oyUAEuC9bwO":{"uri":"/docs/melonjs/DraggableEntity.html#recalc"},"OFH0SmmQ5w-Zy-CBOy-Rb":{"uri":"/docs/melonjs/DraggableEntity.html#resize"},"70VIfHCXJMH59b9XTU7Ri":{"uri":"/docs/melonjs/DraggableEntity.html#rotate"},"QlFaP87h1AySPj-mpU1Yi":{"uri":"/docs/melonjs/DraggableEntity.html#scale"},"R_u3j3rf3ITwhyIkPSfuz":{"uri":"/docs/melonjs/DraggableEntity.html#scaleV"},"NHW0YNcQ3SvVGCIVMf8QV":{"uri":"/docs/melonjs/DraggableEntity.html#setOpacity"},"Mn76lq2ExffKqK5Zg7at_":{"uri":"/docs/melonjs/DraggableEntity.html#setShape"},"-FFlZ3Aom13evcO0ps4ml":{"uri":"/docs/melonjs/DraggableEntity.html#setVertices"},"ri9XW6MkQDOX8vJozmGpx":{"uri":"/docs/melonjs/DraggableEntity.html#shift"},"WHVQss9fZId6FEJ9Co292":{"uri":"/docs/melonjs/DraggableEntity.html#to2d"},"bkvxAZE2gZ_OB1PN7-2oa":{"uri":"/docs/melonjs/DraggableEntity.html#toIso"},"zhQ7SMClQMt39SeIDoSr7":{"uri":"/docs/melonjs/DraggableEntity.html#toPolygon"},"_Q8UXnBOvvo0RVqk7jW9M":{"uri":"/docs/melonjs/DraggableEntity.html#transform"},"xmqSFgAU4NKdOH00tHp_6":{"uri":"/docs/melonjs/DraggableEntity.html#translate"},"4UyXXt_jhFflcqrMPeRg2":{"uri":"/docs/melonjs/DraggableEntity.html#union"},"6BT1nohC_TUdpB6_NxrLZ":{"uri":"/docs/melonjs/DraggableEntity.html#draw"},"MHSWAeB7fNRayNZH2PJLS":{"uri":"/docs/melonjs/DraggableEntity.html#postDraw"},"2vBRMR6PMmhihFLRLP1e2":{"uri":"/docs/melonjs/DraggableEntity.html#preDraw"},"dEqXMOchY3An6TtYMsimI":{"uri":"/docs/melonjs/DraggableEntity.html#update"},"IjDgQZ6GzoT5DgTB1uGO6":{"uri":"/docs/melonjs/DraggableEntity.html#onAnchorUpdate"},"awzeIXRbP6zGv-ZHAq3gu":{"uri":"/docs/melonjs/DropTarget.html"},"GN3eHS1tPaslPyBmDmUrE":{"uri":"/docs/melonjs/DropTarget.html#alpha"},"ZtW-vwFW507GvCB7zVmT8":{"uri":"/docs/melonjs/DropTarget.html#alwaysUpdate"},"fw6y1IKIWBuFV1NipBR6O":{"uri":"/docs/melonjs/DropTarget.html#ancestor"},"pnhX5BCvT3-L5BbCFcdiW":{"uri":"/docs/melonjs/DropTarget.html#anchorPoint"},"dsmRZoGC57DmnWHTJ4rLb":{"uri":"/docs/melonjs/DropTarget.html#autoTransform"},"_lVppoU3rD1zNH0i4hy8l":{"uri":"/docs/melonjs/DropTarget.html#blendMode"},"-knww7nWyWBVMPXtiZsYH":{"uri":"/docs/melonjs/DropTarget.html#body"},"buUXNweawsxpD33JBCpQ_":{"uri":"/docs/melonjs/DropTarget.html#bottom"},"VhGkLhFvrAdC61mhJiatq":{"uri":"/docs/melonjs/DropTarget.html#centerX"},"aAR7nnuXlZwGz6HjoHG8E":{"uri":"/docs/melonjs/DropTarget.html#centerY"},"szpxAfwaRmHAsoyBROuTR":{"uri":"/docs/melonjs/DropTarget.html#checkMethod"},"YjjDuzgiaXQi4gSJADdkd":{"uri":"/docs/melonjs/DropTarget.html#CHECKMETHOD_CONTAINS"},"MF_ulNI52xxufGF14cfr2":{"uri":"/docs/melonjs/DropTarget.html#CHECKMETHOD_OVERLAP"},"4r9ZS08iih6Ps8dmqe2oW":{"uri":"/docs/melonjs/DropTarget.html#currentTransform"},"EBPcb0Xp1jnc-KJQK56-R":{"uri":"/docs/melonjs/DropTarget.html#floating"},"Wmeo3cDBPH4hv6t1SQIkl":{"uri":"/docs/melonjs/DropTarget.html#GUID"},"EW8ceTXj4KtvPU0sp2ZJN":{"uri":"/docs/melonjs/DropTarget.html#height"},"_cl6k2hAPeh_3TikSWlNO":{"uri":"/docs/melonjs/DropTarget.html#inViewport"},"1GczYi7_iBhbKvuvYGZ8v":{"uri":"/docs/melonjs/DropTarget.html#isDirty"},"GZ_tH4VuOMKx_5oJ3SYbH":{"uri":"/docs/melonjs/DropTarget.html#isFlippedX"},"Sf87zx8_mD12G1yHjjvpi":{"uri":"/docs/melonjs/DropTarget.html#isFlippedY"},"FIirrCEQGBw6O4eBxbDe4":{"uri":"/docs/melonjs/DropTarget.html#isFloating"},"evVccoDbKCKA0qBQUw7lf":{"uri":"/docs/melonjs/DropTarget.html#isKinematic"},"yTbiSvL-SA8scU_eX-q1U":{"uri":"/docs/melonjs/DropTarget.html#isPersistent"},"zay1VTklxUneAbXQWo9Bi":{"uri":"/docs/melonjs/DropTarget.html#left"},"YHGa-gWHeboDqvo6S3NvG":{"uri":"/docs/melonjs/DropTarget.html#mask"},"GMlFd8BTJGUAP7YE5ATBO":{"uri":"/docs/melonjs/DropTarget.html#name"},"uzSTbOJaZKQjd-wAzFKhj":{"uri":"/docs/melonjs/DropTarget.html#onVisibilityChange"},"HLucTH6UMzJc-0j5hEe5Y":{"uri":"/docs/melonjs/DropTarget.html#points"},"ko46Yftj060Jp5p-tC539":{"uri":"/docs/melonjs/DropTarget.html#pos"},"bCKc3ROUHDL1sMO-c1QM5":{"uri":"/docs/melonjs/DropTarget.html#right"},"-3djZBzamqNxDJe_DLQ_d":{"uri":"/docs/melonjs/DropTarget.html#tint"},"wAWt1oJdDnTdXgpJc7xud":{"uri":"/docs/melonjs/DropTarget.html#top"},"bsEav_ZM6GvbrvIUbkx-B":{"uri":"/docs/melonjs/DropTarget.html#updateWhenPaused"},"mFW2ujbJWUmbwrq1oqk0K":{"uri":"/docs/melonjs/DropTarget.html#width"},"Z1X8ayUHYu5gJ6yyvjNs3":{"uri":"/docs/melonjs/DropTarget.html#angleTo"},"pApN5QXnUNmy_1GcHEKqJ":{"uri":"/docs/melonjs/DropTarget.html#centerOn"},"Ad1PyWldeYKlUJ_AwL2wF":{"uri":"/docs/melonjs/DropTarget.html#checkOnMe"},"cSU6uiQlPiYrGUX5jdTlc":{"uri":"/docs/melonjs/DropTarget.html#clone"},"TRQH-ztqV75FKsE7oWdKj":{"uri":"/docs/melonjs/DropTarget.html#constructor"},"D_DrbbgsMD_g6BlyyBT_P":{"uri":"/docs/melonjs/DropTarget.html#contains"},"KsoWD7DUtX1Xz8vY4buND":{"uri":"/docs/melonjs/DropTarget.html#copy"},"CnNd6IEUXoyKQUO-o7mR7":{"uri":"/docs/melonjs/DropTarget.html#distanceTo"},"A8Zn6EVfv9lLLzeoepOoS":{"uri":"/docs/melonjs/DropTarget.html#drop"},"uz81j3e3-pI5-dYy7fZrn":{"uri":"/docs/melonjs/DropTarget.html#equals"},"h4n7pi7xrRZuzB0QiD8gD":{"uri":"/docs/melonjs/DropTarget.html#flipX"},"c-rPjuK5Z7sMB95CG5w58":{"uri":"/docs/melonjs/DropTarget.html#flipY"},"j6VjnC0bkw6qlZTgOLKzI":{"uri":"/docs/melonjs/DropTarget.html#getAbsolutePosition"},"kPUomC9gEbVw5nIwzdpjJ":{"uri":"/docs/melonjs/DropTarget.html#getBounds"},"FsftxXAHEOjfD1Edy4PBa":{"uri":"/docs/melonjs/DropTarget.html#getIndices"},"SSNWNF5Kq9vRvR4w5jYxm":{"uri":"/docs/melonjs/DropTarget.html#getOpacity"},"DSXPDiBTPvUYg9gykMKXe":{"uri":"/docs/melonjs/DropTarget.html#isConvex"},"fPOhZ_AKx2vD8KDQvqvrT":{"uri":"/docs/melonjs/DropTarget.html#isFinite"},"FZcAjnS-U6Y__He59xdyl":{"uri":"/docs/melonjs/DropTarget.html#lookAt"},"4SO5OhwdAbUnNTlNFFuzR":{"uri":"/docs/melonjs/DropTarget.html#onCollision"},"bEbpmRDIBO9wAStv8lVmR":{"uri":"/docs/melonjs/DropTarget.html#onDestroyEvent"},"6qge4eFvqj_W2v08aiZJF":{"uri":"/docs/melonjs/DropTarget.html#overlaps"},"YwdcgV7eTR0DmRfgal0Rs":{"uri":"/docs/melonjs/DropTarget.html#recalc"},"qGOJey9rRxsJrNRY9nwzq":{"uri":"/docs/melonjs/DropTarget.html#resize"},"YaqOuO4oePwOaaRSDZNN3":{"uri":"/docs/melonjs/DropTarget.html#rotate"},"zzC9EGV4OFAN3m-toevKT":{"uri":"/docs/melonjs/DropTarget.html#scale"},"TJgTry6XvHFBpR-RxKaFH":{"uri":"/docs/melonjs/DropTarget.html#scaleV"},"VTcLrSJR3jqwW7yC4ODDV":{"uri":"/docs/melonjs/DropTarget.html#setCheckMethod"},"pLzv9zVpnG47zvFh70yce":{"uri":"/docs/melonjs/DropTarget.html#setOpacity"},"ivrkA-0YI8B9ta7--zDED":{"uri":"/docs/melonjs/DropTarget.html#setShape"},"Sj-fgjHS7e336gz_XxLaC":{"uri":"/docs/melonjs/DropTarget.html#setVertices"},"mAXpCbxoC6sYTT8UWeExV":{"uri":"/docs/melonjs/DropTarget.html#shift"},"uzsTaySn6B8uH0MBhJusq":{"uri":"/docs/melonjs/DropTarget.html#to2d"},"DhZeODnW7qoT3V1cun9Wq":{"uri":"/docs/melonjs/DropTarget.html#toIso"},"enZXhz6pbnnHMsRrGvkBC":{"uri":"/docs/melonjs/DropTarget.html#toPolygon"},"jAtWJfbP4KoAiaWv_KSUi":{"uri":"/docs/melonjs/DropTarget.html#transform"},"bg7P1oEe0BN65FlAjqSoK":{"uri":"/docs/melonjs/DropTarget.html#translate"},"9pBxczYrehrR7P8OEnkcx":{"uri":"/docs/melonjs/DropTarget.html#union"},"63VEyE3eRX1-B6GWD5DA5":{"uri":"/docs/melonjs/DropTarget.html#draw"},"DAcbrTQ20DY2dK328h68E":{"uri":"/docs/melonjs/DropTarget.html#postDraw"},"C4339b92D_xPtAK9yodIg":{"uri":"/docs/melonjs/DropTarget.html#preDraw"},"i6jG2aD9yruiQ_KWRqFp2":{"uri":"/docs/melonjs/DropTarget.html#update"},"QZNrxC3ZsgQhH_SRqCS7u":{"uri":"/docs/melonjs/DropTarget.html#onAnchorUpdate"},"jyI1ir744PeD4MG_3WxhN":{"uri":"/docs/melonjs/DroptargetEntity.html"},"tQ8miAJnGjMRk8LsMgxUc":{"uri":"/docs/melonjs/DroptargetEntity.html#alive"},"w_UnrgxbZMoX052QuO_RG":{"uri":"/docs/melonjs/DroptargetEntity.html#alpha"},"ng1vnVa7SrzMqR0BJivf-":{"uri":"/docs/melonjs/DroptargetEntity.html#alwaysUpdate"},"J9VZdKvqU3VIO16cG4WKD":{"uri":"/docs/melonjs/DroptargetEntity.html#ancestor"},"HQfYIlY9FRj535Gu81i6D":{"uri":"/docs/melonjs/DroptargetEntity.html#anchorPoint"},"uQ1ghOaUZYRzfBiOuWgyd":{"uri":"/docs/melonjs/DroptargetEntity.html#autoTransform"},"-5DGBXaHxawLtQkwjhtte":{"uri":"/docs/melonjs/DroptargetEntity.html#blendMode"},"Rc0Y57-tXFntjbR3YBFpu":{"uri":"/docs/melonjs/DroptargetEntity.html#bottom"},"Wwp3kL0BNZHdInKyxdNYQ":{"uri":"/docs/melonjs/DroptargetEntity.html#centerX"},"7eZgA5mmWjihgddssQcCK":{"uri":"/docs/melonjs/DroptargetEntity.html#centerY"},"0TXtepADwmZGctpn3P2Cl":{"uri":"/docs/melonjs/DroptargetEntity.html#currentTransform"},"ClWv21oPqxFQSMU9tB4VZ":{"uri":"/docs/melonjs/DroptargetEntity.html#floating"},"JpgFRBMpI1UxwLLg56-Qg":{"uri":"/docs/melonjs/DroptargetEntity.html#GUID"},"-qamZk7-R5BXdkO9qkC4z":{"uri":"/docs/melonjs/DroptargetEntity.html#height"},"9GFSHm8OlzlrIGLjpZtve":{"uri":"/docs/melonjs/DroptargetEntity.html#id"},"nQyC3tp4cdO3_mmv3sbGk":{"uri":"/docs/melonjs/DroptargetEntity.html#inViewport"},"XixPfK9z5GzooTzlpFNcq":{"uri":"/docs/melonjs/DroptargetEntity.html#isDirty"},"xbvmPvyc40quB7gF9_hMV":{"uri":"/docs/melonjs/DroptargetEntity.html#isFlippedX"},"8eqWX6k30tmz9GQ1pDOlz":{"uri":"/docs/melonjs/DroptargetEntity.html#isFlippedY"},"zWOQjJ2jHZ91CAPbHFeC2":{"uri":"/docs/melonjs/DroptargetEntity.html#isFloating"},"O9D1BC7JEI-AhJ5y6gaA4":{"uri":"/docs/melonjs/DroptargetEntity.html#isKinematic"},"OiNzy7p9mptyRb2bYIc6e":{"uri":"/docs/melonjs/DroptargetEntity.html#isPersistent"},"CZiRSrSAlbihj5SEicg96":{"uri":"/docs/melonjs/DroptargetEntity.html#left"},"rEMEsIxFSNnsAh1y1NDFs":{"uri":"/docs/melonjs/DroptargetEntity.html#mask"},"jzT6rGnHf2DegFi2bw-H0":{"uri":"/docs/melonjs/DroptargetEntity.html#name"},"Xtjwx_wDgAe44ku_C4Rc9":{"uri":"/docs/melonjs/DroptargetEntity.html#onVisibilityChange"},"eMXMV_Cmet-JCqK7YUvLM":{"uri":"/docs/melonjs/DroptargetEntity.html#points"},"J8GromgTXzLuzX0unPSl1":{"uri":"/docs/melonjs/DroptargetEntity.html#pos"},"oBaeS-Pd2RnlsfVT5HMeU":{"uri":"/docs/melonjs/DroptargetEntity.html#renderable"},"YL9oN7X4FUmqq_dNGyySM":{"uri":"/docs/melonjs/DroptargetEntity.html#right"},"vHFvpkqWPZgXm635mUhar":{"uri":"/docs/melonjs/DroptargetEntity.html#tint"},"mAfM3uGV1u60LKizScqUB":{"uri":"/docs/melonjs/DroptargetEntity.html#top"},"bScH30A_bqgirjz8ERwmv":{"uri":"/docs/melonjs/DroptargetEntity.html#type"},"ENn6B9rFBJmFoYQWu0NlE":{"uri":"/docs/melonjs/DroptargetEntity.html#updateWhenPaused"},"2ncxOM-kNx-JOty58j0hF":{"uri":"/docs/melonjs/DroptargetEntity.html#width"},"exsyKfd20JXkCI7kCAPGz":{"uri":"/docs/melonjs/DroptargetEntity.html#angleTo"},"UH_wQd4gmPUoWpcCwSriB":{"uri":"/docs/melonjs/DroptargetEntity.html#centerOn"},"GQ9YGzspXcYQYFK4zxEwx":{"uri":"/docs/melonjs/DroptargetEntity.html#clone"},"h-EmI5aAkR77RmwBpt86J":{"uri":"/docs/melonjs/DroptargetEntity.html#constructor"},"c9eBKoggVh6DFhpD1XGK4":{"uri":"/docs/melonjs/DroptargetEntity.html#contains"},"sEmhSja4EKIqwWNgf0hAZ":{"uri":"/docs/melonjs/DroptargetEntity.html#copy"},"_NHUSFaSL90djFuW5BskM":{"uri":"/docs/melonjs/DroptargetEntity.html#distanceTo"},"OPqDWtLTovWabrwZIdi0_":{"uri":"/docs/melonjs/DroptargetEntity.html#equals"},"QkrUT2KV2rM8FXld5utkl":{"uri":"/docs/melonjs/DroptargetEntity.html#flipX"},"sPOf1hvyaJABL0_F3Y-66":{"uri":"/docs/melonjs/DroptargetEntity.html#flipY"},"B7IUo634Zd7gyHvrYwLbU":{"uri":"/docs/melonjs/DroptargetEntity.html#getAbsolutePosition"},"dD78FO2wza2rBS_N0dUG9":{"uri":"/docs/melonjs/DroptargetEntity.html#getBounds"},"w3fQPEPg2Z3TDKAFNwmLr":{"uri":"/docs/melonjs/DroptargetEntity.html#getIndices"},"u-mblFw_hl07hwaEfMfm-":{"uri":"/docs/melonjs/DroptargetEntity.html#getOpacity"},"DnixMckUfLvx-4QYF0eWE":{"uri":"/docs/melonjs/DroptargetEntity.html#isConvex"},"JiH2bwHAe9s5KUr6HAEvE":{"uri":"/docs/melonjs/DroptargetEntity.html#isFinite"},"Tn7V0wf9ryqlJIv8t_Jj3":{"uri":"/docs/melonjs/DroptargetEntity.html#lookAt"},"9Ya4gZCEcntyclB34tGXm":{"uri":"/docs/melonjs/DroptargetEntity.html#onCollision"},"rRAVUrmAb1TojCQ9MxBrB":{"uri":"/docs/melonjs/DroptargetEntity.html#onDeactivateEvent"},"Nv_kij73ZM1GtgOhuY6Jx":{"uri":"/docs/melonjs/DroptargetEntity.html#onDestroyEvent"},"ip05EPndjsJyCjFel3bko":{"uri":"/docs/melonjs/DroptargetEntity.html#overlaps"},"UbOU9LkqfrEUf1d84lTiR":{"uri":"/docs/melonjs/DroptargetEntity.html#recalc"},"PAFFPsdhcExKD1HppXYzH":{"uri":"/docs/melonjs/DroptargetEntity.html#resize"},"l9aCGlyh3Esid4c3Rf6sz":{"uri":"/docs/melonjs/DroptargetEntity.html#rotate"},"_4EDp5l9uML3ki310o7Up":{"uri":"/docs/melonjs/DroptargetEntity.html#scale"},"Bc9DkDGF_IM02OHvxL_14":{"uri":"/docs/melonjs/DroptargetEntity.html#scaleV"},"cBiiiCoD10yCX7fJcHU38":{"uri":"/docs/melonjs/DroptargetEntity.html#setOpacity"},"r6K7xP5Rrwh8pUVC77Zbv":{"uri":"/docs/melonjs/DroptargetEntity.html#setShape"},"QjzvoEPX06kB4nL860ruq":{"uri":"/docs/melonjs/DroptargetEntity.html#setVertices"},"37-lDl6ccqdiPRxhjWjqC":{"uri":"/docs/melonjs/DroptargetEntity.html#shift"},"VOOvdxcMuqvwvQ1IDbCRO":{"uri":"/docs/melonjs/DroptargetEntity.html#to2d"},"_dHMInZKM83mvWMKn_xS7":{"uri":"/docs/melonjs/DroptargetEntity.html#toIso"},"D1qluY3qrVvwN-2cnIFik":{"uri":"/docs/melonjs/DroptargetEntity.html#toPolygon"},"oD1grpZnsD8S8pPeYvkmC":{"uri":"/docs/melonjs/DroptargetEntity.html#transform"},"XQqqmo_5ClR839fsxKgwi":{"uri":"/docs/melonjs/DroptargetEntity.html#translate"},"GfjH6e2P1xFjZEQqKUu4r":{"uri":"/docs/melonjs/DroptargetEntity.html#union"},"upRQMwo5fMAhyT72X5M7s":{"uri":"/docs/melonjs/DroptargetEntity.html#draw"},"uP-mVlUD3Fj4zhsZ2kZnG":{"uri":"/docs/melonjs/DroptargetEntity.html#postDraw"},"Q06820v-Ki--RpOwL9Vp_":{"uri":"/docs/melonjs/DroptargetEntity.html#preDraw"},"YmB-qxGSpIsUilsY4tp52":{"uri":"/docs/melonjs/DroptargetEntity.html#update"},"rpOw7bs5o5-m8oCZdCsqO":{"uri":"/docs/melonjs/DroptargetEntity.html#onAnchorUpdate"},"WofxLqKfPgJtfcljp5bep":{"uri":"/docs/melonjs/Ellipse.html"},"_TAYY1HUf4d8cXbF9qv_J":{"uri":"/docs/melonjs/Ellipse.html#pos"},"o78qn0shtnhfDjXcpKQw7":{"uri":"/docs/melonjs/Ellipse.html#radius"},"cYCoYmXsU6kTpwf8CWeqX":{"uri":"/docs/melonjs/Ellipse.html#radiusSq"},"wKXAdMgocuPYdXKtubB6m":{"uri":"/docs/melonjs/Ellipse.html#radiusV"},"X5E-TimizQycONlZWEhFq":{"uri":"/docs/melonjs/Ellipse.html#ratio"},"NtJMRo1uTiC2qjKIwfkYu":{"uri":"/docs/melonjs/Ellipse.html#_bounds"},"ytTg-XamcmiGdekLQbwbO":{"uri":"/docs/melonjs/Ellipse.html#clone"},"aDC7qQamhhp0dAogL6wa4":{"uri":"/docs/melonjs/Ellipse.html#constructor"},"Ok0v8vwugWxJ6JglhqLju":{"uri":"/docs/melonjs/Ellipse.html#contains"},"Cy6g53uZajpqlJwW2wNnW":{"uri":"/docs/melonjs/Ellipse.html#getBounds"},"mp03ea6uelLqNBcutgbMl":{"uri":"/docs/melonjs/Ellipse.html#rotate"},"cTFVc6RezKCeLx9dU7R4K":{"uri":"/docs/melonjs/Ellipse.html#scale"},"2njWGmAcpkURsoEPZ-ls9":{"uri":"/docs/melonjs/Ellipse.html#scale"},"5CRLUPhrmUUpc3zVqnNZA":{"uri":"/docs/melonjs/Ellipse.html#setShape"},"lGl135XWdAprDMuK4ni3z":{"uri":"/docs/melonjs/Ellipse.html#transform"},"4ImLzZwsYOzb6c4qRA9Uq":{"uri":"/docs/melonjs/Ellipse.html#translate"},"9J8REcw4ZGNfAKHbUSrPO":{"uri":"/docs/melonjs/Ellipse.html#contains"},"FRXycvfGbKIJl7bmHAQJt":{"uri":"/docs/melonjs/Ellipse.html#translate"},"yfAL4ncH8rP9sa9w3NQnX":{"uri":"/docs/melonjs/Entity.html"},"NoxEk28-6eZyg5MEIR1lY":{"uri":"/docs/melonjs/Entity.html#alive"},"bbMOmg1H17QU2BuW-Dy4M":{"uri":"/docs/melonjs/Entity.html#alpha"},"CQGGRxjBqzsHrpjqiR6ZN":{"uri":"/docs/melonjs/Entity.html#alwaysUpdate"},"ysJmceObqn81AS7FCq7KL":{"uri":"/docs/melonjs/Entity.html#ancestor"},"QBNRzrwQHk2KvYLVlTbz4":{"uri":"/docs/melonjs/Entity.html#anchorPoint"},"5ZrX7BSxPEYOMTRAbsfim":{"uri":"/docs/melonjs/Entity.html#autoTransform"},"ihE1VebBNyHVsqfHwuVgT":{"uri":"/docs/melonjs/Entity.html#blendMode"},"ctNgfepJO4LJ6J0fRUMZQ":{"uri":"/docs/melonjs/Entity.html#bottom"},"ls9Q02mVGC2gjAFavSEVD":{"uri":"/docs/melonjs/Entity.html#centerX"},"dpZHnRsx2zlVvuo8QxjgE":{"uri":"/docs/melonjs/Entity.html#centerY"},"hdCnhIi_QkGH01Bcph9A_":{"uri":"/docs/melonjs/Entity.html#currentTransform"},"q8DIYr8AZF9vKh1fWl9k2":{"uri":"/docs/melonjs/Entity.html#floating"},"3K-YpV2cg2bg2BDCDUeSD":{"uri":"/docs/melonjs/Entity.html#GUID"},"J50B56AYuXgTxitMPLSTj":{"uri":"/docs/melonjs/Entity.html#height"},"CeRVcfy5f_2DsW-TFdiiC":{"uri":"/docs/melonjs/Entity.html#id"},"aLc9Mlw47YDv0vN7fGZGt":{"uri":"/docs/melonjs/Entity.html#inViewport"},"QmSZI6NRA6CQXKx_Y9I8k":{"uri":"/docs/melonjs/Entity.html#isDirty"},"1kt4mPXlANt_BgmF3aXHi":{"uri":"/docs/melonjs/Entity.html#isFlippedX"},"YXTEpNU15YBc8PoNbsJa_":{"uri":"/docs/melonjs/Entity.html#isFlippedY"},"ZLeYG2E6pi5kGADk7oU_4":{"uri":"/docs/melonjs/Entity.html#isFloating"},"i0VCFXvV5Mw5dOwoPSS-2":{"uri":"/docs/melonjs/Entity.html#isKinematic"},"0hzTL9-KlZfhbNmobHKGy":{"uri":"/docs/melonjs/Entity.html#isPersistent"},"MGG_9-p0Fcl9m5681SHq4":{"uri":"/docs/melonjs/Entity.html#left"},"HAszrQyjUoSlUPw8c09fg":{"uri":"/docs/melonjs/Entity.html#mask"},"04Fs3AptZwopdORoqtGmS":{"uri":"/docs/melonjs/Entity.html#name"},"qbwztFX6n3DyCjhx8TXYN":{"uri":"/docs/melonjs/Entity.html#onVisibilityChange"},"0Gzsarm7WwGry8qX0248U":{"uri":"/docs/melonjs/Entity.html#points"},"wCy6YTZzDMpzRGAvlbBmt":{"uri":"/docs/melonjs/Entity.html#pos"},"poWz8j2A9rkXeUP0Leok0":{"uri":"/docs/melonjs/Entity.html#renderable"},"M-erpinGxxcKrkKN8F4Ru":{"uri":"/docs/melonjs/Entity.html#right"},"OrO-z3uPwYkxHCvK46Z-C":{"uri":"/docs/melonjs/Entity.html#tint"},"XGTGys7a1_xyfTuQTZL4I":{"uri":"/docs/melonjs/Entity.html#top"},"ECQz-Ec-fVVeENvYsbGoo":{"uri":"/docs/melonjs/Entity.html#type"},"wZAU0OlGERC_MQXRWTeEE":{"uri":"/docs/melonjs/Entity.html#updateWhenPaused"},"sl6xNtXoM3UOLtt_b1HfX":{"uri":"/docs/melonjs/Entity.html#width"},"ekhN-OzeA3C7DXwgArAhH":{"uri":"/docs/melonjs/Entity.html#body"},"zHxkDVabUbFOXuJ-R5g94":{"uri":"/docs/melonjs/Entity.html#angleTo"},"VsVToVemuLzMTV_CGQXZK":{"uri":"/docs/melonjs/Entity.html#centerOn"},"NNuqh0Kd4kanvBIo7GWR-":{"uri":"/docs/melonjs/Entity.html#clone"},"ehB44ZTtN4TGQkKx0g3sl":{"uri":"/docs/melonjs/Entity.html#constructor"},"6w-rDmXCnYEJx61KlAxh7":{"uri":"/docs/melonjs/Entity.html#contains"},"vF-epjGXviKzGtdhzwMN7":{"uri":"/docs/melonjs/Entity.html#copy"},"URPPla1jUbT4RLU3ybHgB":{"uri":"/docs/melonjs/Entity.html#distanceTo"},"oOovgMypYuTKi5NjCGVXt":{"uri":"/docs/melonjs/Entity.html#equals"},"IHLBQl60QU10FDJMienUU":{"uri":"/docs/melonjs/Entity.html#flipX"},"AJG7mBUeadsBLc2PzqdvV":{"uri":"/docs/melonjs/Entity.html#flipY"},"TAfFfEgFQ2ZUXQ-HL0Vyf":{"uri":"/docs/melonjs/Entity.html#getAbsolutePosition"},"06Fo5EwUHiYCXmoWi4wmJ":{"uri":"/docs/melonjs/Entity.html#getBounds"},"QhkevTcx_4jmu0sjpXQVP":{"uri":"/docs/melonjs/Entity.html#getIndices"},"aaDs1LU_fJrpWZAZuVV0f":{"uri":"/docs/melonjs/Entity.html#getOpacity"},"JjUDhKO2KHmaWF8nlV-wV":{"uri":"/docs/melonjs/Entity.html#isConvex"},"593FXoNyeuNaZr5WhekvV":{"uri":"/docs/melonjs/Entity.html#isFinite"},"cFwKVVMb0QP2WXIeLTUC4":{"uri":"/docs/melonjs/Entity.html#lookAt"},"rmPobeBsPX44ZEANbBTi0":{"uri":"/docs/melonjs/Entity.html#onCollision"},"np0uD1muXcbpz7LVdYMhv":{"uri":"/docs/melonjs/Entity.html#onDeactivateEvent"},"FpmpwMaxPHhTHuiMwJAAJ":{"uri":"/docs/melonjs/Entity.html#onDestroyEvent"},"BxUzyAa2ZE-sQ2snxuT0z":{"uri":"/docs/melonjs/Entity.html#overlaps"},"2UGD_9-Q1JpxnNXSsYRRq":{"uri":"/docs/melonjs/Entity.html#recalc"},"N3Mc0pI_pY8pa6glFheQl":{"uri":"/docs/melonjs/Entity.html#resize"},"TGkbZRGqgJGqHWiGCDTev":{"uri":"/docs/melonjs/Entity.html#rotate"},"hpCSzZjkTv_vJxJmKK3h2":{"uri":"/docs/melonjs/Entity.html#scale"},"jYBtElLfHigjOXtihacBE":{"uri":"/docs/melonjs/Entity.html#scaleV"},"GcuAGlTLNPfN_UNsbzXrJ":{"uri":"/docs/melonjs/Entity.html#setOpacity"},"JmjBGAgeWN_IiqNAo6gTt":{"uri":"/docs/melonjs/Entity.html#setShape"},"SGaczUofcXohqW6ie7lso":{"uri":"/docs/melonjs/Entity.html#setVertices"},"Tmz-ARG26n9MfuoRhvaE2":{"uri":"/docs/melonjs/Entity.html#shift"},"05Gyt--E4ImldnJqaHxJZ":{"uri":"/docs/melonjs/Entity.html#to2d"},"Buv04CCWLAVh09mGD7BAj":{"uri":"/docs/melonjs/Entity.html#toIso"},"tPfbuZYQDpaxciY9PUavi":{"uri":"/docs/melonjs/Entity.html#toPolygon"},"VP5WrdKx6R4BLlmwdimcc":{"uri":"/docs/melonjs/Entity.html#transform"},"7XqkVBhJzv-aYosxQG67n":{"uri":"/docs/melonjs/Entity.html#translate"},"mPiHLjrtTPhKmyV3PnQHL":{"uri":"/docs/melonjs/Entity.html#union"},"g_t8hvaPPBwINI_To9rBi":{"uri":"/docs/melonjs/Entity.html#draw"},"hNT3eiePjX_Ct8xit-xXJ":{"uri":"/docs/melonjs/Entity.html#postDraw"},"WOckDT4m7pzkT_0CRii-o":{"uri":"/docs/melonjs/Entity.html#preDraw"},"UAaq4qJHvIIex5mU9iZln":{"uri":"/docs/melonjs/Entity.html#update"},"ZQdN7X-fMw7g8T4DikPTu":{"uri":"/docs/melonjs/Entity.html#onAnchorUpdate"},"n-saqQYiZ3Whg6eMuN-38":{"uri":"/docs/melonjs/GLShader.html"},"eyUsgUSJ10EzHbN_Ioa2C":{"uri":"/docs/melonjs/GLShader.html#attributes"},"bfsDCXYw_EM1CgLDiWQD9":{"uri":"/docs/melonjs/GLShader.html#gl"},"Yeqx1yJvvfAr3OkZ4WLQ8":{"uri":"/docs/melonjs/GLShader.html#program"},"LY5u_eoeWvdzOwmDu8IjY":{"uri":"/docs/melonjs/GLShader.html#uniforms"},"yGBcC7C5A9anZIlEDq_2B":{"uri":"/docs/melonjs/GLShader.html#vertex"},"x5f-JbpkOFT8UgYPlm5-o":{"uri":"/docs/melonjs/GLShader.html#vertex"},"3e-ziXPIZBRlTfkWY4_jV":{"uri":"/docs/melonjs/GLShader.html#bind"},"Cl24YTA2uljojXyD2grsn":{"uri":"/docs/melonjs/GLShader.html#constructor"},"05FOBRU55JbJhQAVvZw6s":{"uri":"/docs/melonjs/GLShader.html#destroy"},"nqb5zR2lObouSuxLaMF0G":{"uri":"/docs/melonjs/GLShader.html#getAttribLocation"},"_ii7xmUlsN01DTiEFC57F":{"uri":"/docs/melonjs/GLShader.html#setUniform"},"z3NnWrL9LWAEkvGmJZTV0":{"uri":"/docs/melonjs/GLShader.html#setVertexAttributes"},"sLSGck36BuvPZIgKdAseX":{"uri":"/docs/melonjs/GUI_Object.html"},"vfqj5gcWx0tr78kTVPspD":{"uri":"/docs/melonjs/GUI_Object.html#alpha"},"Q0MBjYYwSDJbrnaA04wDI":{"uri":"/docs/melonjs/GUI_Object.html#alwaysUpdate"},"PEVg-BJtbHMbc0rJywV9H":{"uri":"/docs/melonjs/GUI_Object.html#ancestor"},"o4TQyljM0R1G60qx8WslG":{"uri":"/docs/melonjs/GUI_Object.html#anchorPoint"},"S6NfIbCX3wJmCJiqIj9sq":{"uri":"/docs/melonjs/GUI_Object.html#animationpause"},"BltpBqDrfNDxsvsG9883i":{"uri":"/docs/melonjs/GUI_Object.html#animationspeed"},"QxcNuwP99lf_MtajOVsXs":{"uri":"/docs/melonjs/GUI_Object.html#autoTransform"},"KuXjHNZ1Bxy6hbrcowCQq":{"uri":"/docs/melonjs/GUI_Object.html#blendMode"},"1ooVoy0Qu9myv1eRXYGTc":{"uri":"/docs/melonjs/GUI_Object.html#body"},"tyj9E9tQstNyzDeG5bT-V":{"uri":"/docs/melonjs/GUI_Object.html#bottom"},"PtlgVLfrHDdiGCIcGXfRE":{"uri":"/docs/melonjs/GUI_Object.html#centerX"},"Es5aBOj16ECssQ2X3DclO":{"uri":"/docs/melonjs/GUI_Object.html#centerY"},"GOsvXmrVyipJ6Se-5KlxS":{"uri":"/docs/melonjs/GUI_Object.html#currentTransform"},"OasZTKED9xDzDGahBm8S8":{"uri":"/docs/melonjs/GUI_Object.html#floating"},"HIaFc9xrnAMWZKH5kZbQn":{"uri":"/docs/melonjs/GUI_Object.html#GUID"},"MJgmXLY60IqVi7HR9aW0j":{"uri":"/docs/melonjs/GUI_Object.html#height"},"nQEII61nl_QIDU1mJDsHp":{"uri":"/docs/melonjs/GUI_Object.html#holdThreshold"},"p2ycj3rTmxR3-0H9szYsu":{"uri":"/docs/melonjs/GUI_Object.html#hover"},"qshzylozgyqhEvGamwmHs":{"uri":"/docs/melonjs/GUI_Object.html#inViewport"},"cf9iISp6peKyg_8GQt1fE":{"uri":"/docs/melonjs/GUI_Object.html#isClickable"},"3cfHKx_pDJQN9vgZ0AVFQ":{"uri":"/docs/melonjs/GUI_Object.html#isDirty"},"Bcs3X9dC5tzKWGsj2Hikv":{"uri":"/docs/melonjs/GUI_Object.html#isFlippedX"},"RMCaNZsaSNcox5CluGB5t":{"uri":"/docs/melonjs/GUI_Object.html#isFlippedY"},"2X0kTrm9ZNs8BN0gmX6nJ":{"uri":"/docs/melonjs/GUI_Object.html#isFloating"},"GEzkRSMUI0O8z9lZnQRf9":{"uri":"/docs/melonjs/GUI_Object.html#isHoldable"},"bzQVafitNy26NCAw2ROGU":{"uri":"/docs/melonjs/GUI_Object.html#isKinematic"},"q_xV4xhSO1ZNr4uODCzww":{"uri":"/docs/melonjs/GUI_Object.html#isPersistent"},"rGoJnBIpuaaExHxDwMvI9":{"uri":"/docs/melonjs/GUI_Object.html#left"},"2kXHfDPQ7UxQP0mW5-BbQ":{"uri":"/docs/melonjs/GUI_Object.html#mask"},"xu_7bxsadHYaA0gZo5uIJ":{"uri":"/docs/melonjs/GUI_Object.html#name"},"S7AnCr7xbRqNwFHB4x2bq":{"uri":"/docs/melonjs/GUI_Object.html#offset"},"KH3CnXCA6j06EQxdQlmRq":{"uri":"/docs/melonjs/GUI_Object.html#onVisibilityChange"},"AyadXwCTscReTGBJCGhSJ":{"uri":"/docs/melonjs/GUI_Object.html#points"},"abQ_oSb9IK22Vs_-XNLil":{"uri":"/docs/melonjs/GUI_Object.html#pos"},"YjS2-_-ZfgMdtAqBr6pFC":{"uri":"/docs/melonjs/GUI_Object.html#right"},"bNfVvApLqDJ9mH0fiqJEF":{"uri":"/docs/melonjs/GUI_Object.html#source"},"MXzqmInjHo6fS3hzMpdRG":{"uri":"/docs/melonjs/GUI_Object.html#tint"},"8edT4Lb-PzBIxFtnzoFmp":{"uri":"/docs/melonjs/GUI_Object.html#top"},"KQxQYPr76xDDelGQTD_8i":{"uri":"/docs/melonjs/GUI_Object.html#updateWhenPaused"},"3Qn8VVfK4I6dWXr7DP6lY":{"uri":"/docs/melonjs/GUI_Object.html#width"},"NQAGDOv6R5fy1J3sX7mCj":{"uri":"/docs/melonjs/GUI_Object.html#addAnimation"},"4Ng5MOq1bkndFPQ9PCIlh":{"uri":"/docs/melonjs/GUI_Object.html#angleTo"},"OFv8ZyQ_B-E9oBgMwPVtW":{"uri":"/docs/melonjs/GUI_Object.html#centerOn"},"ugY8zJXIrhVVxLfpWMu-5":{"uri":"/docs/melonjs/GUI_Object.html#clone"},"kLHbcIYs0vyhV9ScPLRCO":{"uri":"/docs/melonjs/GUI_Object.html#constructor"},"IVM0goE5JbX4FkzFtPtSg":{"uri":"/docs/melonjs/GUI_Object.html#contains"},"_7L9sjo0uiqQqPKed2e91":{"uri":"/docs/melonjs/GUI_Object.html#copy"},"UGcMBYm4TCMfJUTZCybZt":{"uri":"/docs/melonjs/GUI_Object.html#distanceTo"},"2FRGjQhBQ648GF4PnRBki":{"uri":"/docs/melonjs/GUI_Object.html#equals"},"CtHs5VMT2_bN5AuJL6WY3":{"uri":"/docs/melonjs/GUI_Object.html#flicker"},"fpxTjwe66F177rPAwuC0Q":{"uri":"/docs/melonjs/GUI_Object.html#flipX"},"_2hKjAJfIgAH9cNAXfEpE":{"uri":"/docs/melonjs/GUI_Object.html#flipY"},"3ENa6BToAPNn1zaRvkzIU":{"uri":"/docs/melonjs/GUI_Object.html#getAbsolutePosition"},"1xDXLvurECcLObk3gPjmI":{"uri":"/docs/melonjs/GUI_Object.html#getBounds"},"BcwrR2nE9VKAbzmFu_ziT":{"uri":"/docs/melonjs/GUI_Object.html#getCurrentAnimationFrame"},"kW4pwoPWNWTMei9S_TIey":{"uri":"/docs/melonjs/GUI_Object.html#getIndices"},"eG9dLodHHBX3LlF-12Dbu":{"uri":"/docs/melonjs/GUI_Object.html#getOpacity"},"d9qJOYqRz1S9Lq99yHRI4":{"uri":"/docs/melonjs/GUI_Object.html#isConvex"},"od0NTF3UnJ6KSavAUYVCf":{"uri":"/docs/melonjs/GUI_Object.html#isCurrentAnimation"},"QTP9Pb_2Cy8UGLSUhn1td":{"uri":"/docs/melonjs/GUI_Object.html#isFinite"},"PDoExZP4gpDai-xV5xqco":{"uri":"/docs/melonjs/GUI_Object.html#isFlickering"},"bYeMcn7dLj-yQQDTab3qZ":{"uri":"/docs/melonjs/GUI_Object.html#lookAt"},"2b-AOL5T35w4VcKss72HN":{"uri":"/docs/melonjs/GUI_Object.html#onClick"},"GjE9J0CTQAeorT13Q1ATb":{"uri":"/docs/melonjs/GUI_Object.html#onCollision"},"S8LWeMfjv4as2Zy8RC25y":{"uri":"/docs/melonjs/GUI_Object.html#onDestroyEvent"},"rTgDwZhlJuzx2qJY3fnMy":{"uri":"/docs/melonjs/GUI_Object.html#onHold"},"nqoB9FR0ph844Sj0SlAa6":{"uri":"/docs/melonjs/GUI_Object.html#onOut"},"urJjWGWr1e84cFdU9nvZu":{"uri":"/docs/melonjs/GUI_Object.html#onOver"},"GvxEAzx479EwR5tC6H4fe":{"uri":"/docs/melonjs/GUI_Object.html#onRelease"},"acE6EIiDimnfdbCVk2rkE":{"uri":"/docs/melonjs/GUI_Object.html#overlaps"},"PKOX68jgpbe9gRXkgr16D":{"uri":"/docs/melonjs/GUI_Object.html#recalc"},"Q7W7bpEuY4Wk_0b4uA0Ic":{"uri":"/docs/melonjs/GUI_Object.html#resize"},"3iBdUUByyyUquiUEwxzsQ":{"uri":"/docs/melonjs/GUI_Object.html#reverseAnimation"},"xwZ2obExhfvrJsZ475Cp7":{"uri":"/docs/melonjs/GUI_Object.html#rotate"},"iJs1l0aRrXlQRm8OderD6":{"uri":"/docs/melonjs/GUI_Object.html#scale"},"AJNZQNQUPKgwQeg_c3ekF":{"uri":"/docs/melonjs/GUI_Object.html#scaleV"},"ASDbfm4Yirl9eQWaTOTeB":{"uri":"/docs/melonjs/GUI_Object.html#setAnimationFrame"},"fOv3_9Y1vGb63XHpDkzDX":{"uri":"/docs/melonjs/GUI_Object.html#setCurrentAnimation"},"9IBlZqLbXRVEtsfCFkZAU":{"uri":"/docs/melonjs/GUI_Object.html#setOpacity"},"gkFkK2BSAgkB4WuLBHP5T":{"uri":"/docs/melonjs/GUI_Object.html#setRegion"},"XyKL83yExyXeMKSPnX9Yv":{"uri":"/docs/melonjs/GUI_Object.html#setShape"},"M_uYWMIwDcU1dskX9mXl5":{"uri":"/docs/melonjs/GUI_Object.html#setVertices"},"o8TNZTUG_YtJfs9JILuTl":{"uri":"/docs/melonjs/GUI_Object.html#shift"},"wD484jJOsuklOn8qgjJ8F":{"uri":"/docs/melonjs/GUI_Object.html#to2d"},"MxrY8Qtq8ZbO5_gRG5BRa":{"uri":"/docs/melonjs/GUI_Object.html#toIso"},"z9Um1y-bQdoInBAwaD8gK":{"uri":"/docs/melonjs/GUI_Object.html#toPolygon"},"uTD5b7LIUAK-y6qyfISHx":{"uri":"/docs/melonjs/GUI_Object.html#transform"},"7IHrU9SHzIpXhf_QLeQdG":{"uri":"/docs/melonjs/GUI_Object.html#translate"},"Vmv2ooXCp-fxjBAo8lITv":{"uri":"/docs/melonjs/GUI_Object.html#union"},"hJ-xdTUC17Vod59dreg6v":{"uri":"/docs/melonjs/GUI_Object.html#draw"},"ny9J6LTvJgqX80tiW89kT":{"uri":"/docs/melonjs/GUI_Object.html#postDraw"},"poKFu7b4gwUikTvKKB0Ho":{"uri":"/docs/melonjs/GUI_Object.html#preDraw"},"GHhOEKWvudvENb5pDZzvV":{"uri":"/docs/melonjs/GUI_Object.html#update"},"3HIu_YuzVtN2SYaqmhsTP":{"uri":"/docs/melonjs/GUI_Object.html#onAnchorUpdate"},"1ScXVyWF79j_iNmTwmEYu":{"uri":"/docs/melonjs/ImageLayer.html"},"1jOKM5hP9aoxLL_v6gkcy":{"uri":"/docs/melonjs/ImageLayer.html#alpha"},"0KHFa-1XwnQ9gxmk6K9_W":{"uri":"/docs/melonjs/ImageLayer.html#alwaysUpdate"},"L0t0B9ImsEACtZtkhcbbN":{"uri":"/docs/melonjs/ImageLayer.html#ancestor"},"zByubpjQic_G41t8L0XSD":{"uri":"/docs/melonjs/ImageLayer.html#anchorPoint"},"llAFB_-qkwcqUFcm-xt17":{"uri":"/docs/melonjs/ImageLayer.html#autoTransform"},"ExoWfIZ768dETITROcZIe":{"uri":"/docs/melonjs/ImageLayer.html#blendMode"},"j9uuH_2R-aMU5X35Y5n1r":{"uri":"/docs/melonjs/ImageLayer.html#body"},"IUFJ9dum7v05gt0ma8pn7":{"uri":"/docs/melonjs/ImageLayer.html#bottom"},"ATz_U61WeyE3niUYNNuk2":{"uri":"/docs/melonjs/ImageLayer.html#centerX"},"mWIKz6yTCJmWdXSGdyzeN":{"uri":"/docs/melonjs/ImageLayer.html#centerY"},"hDB8KcVEywIHNdLx9d4Xr":{"uri":"/docs/melonjs/ImageLayer.html#currentTransform"},"O420EIz22VGnnqCGKgmqh":{"uri":"/docs/melonjs/ImageLayer.html#floating"},"ujXk6ohBvgkocrN2K9Gw9":{"uri":"/docs/melonjs/ImageLayer.html#GUID"},"dMMjF5Jd7VUjcmyD-Ni1F":{"uri":"/docs/melonjs/ImageLayer.html#height"},"eckVM3CsTsXbERo5lGj-T":{"uri":"/docs/melonjs/ImageLayer.html#inViewport"},"UUCMalpYx_H1nMrkRXnBZ":{"uri":"/docs/melonjs/ImageLayer.html#isDirty"},"kKyHcxG5KD80N02mRCynz":{"uri":"/docs/melonjs/ImageLayer.html#isFlippedX"},"0b2foomyIDe8wansBCnds":{"uri":"/docs/melonjs/ImageLayer.html#isFlippedY"},"1Dga5p5FxGTXnMmlgvZUl":{"uri":"/docs/melonjs/ImageLayer.html#isFloating"},"Wqp0C9WHQn7vn0oPMNna9":{"uri":"/docs/melonjs/ImageLayer.html#isKinematic"},"2opIQBLTx65zHdgFHsc4h":{"uri":"/docs/melonjs/ImageLayer.html#isPersistent"},"i67F_fqeIaygPGgjnqXbT":{"uri":"/docs/melonjs/ImageLayer.html#left"},"qqEyTY49m0soFIGBCsv-R":{"uri":"/docs/melonjs/ImageLayer.html#mask"},"9LIR2dhONfgGEodicIqaV":{"uri":"/docs/melonjs/ImageLayer.html#name"},"7HRLkOoSBmLd64PXuhlTe":{"uri":"/docs/melonjs/ImageLayer.html#onVisibilityChange"},"SFfmRgkWHqgZCGXq-xv-d":{"uri":"/docs/melonjs/ImageLayer.html#points"},"gdY97NPtH5pvzJLAc1kOc":{"uri":"/docs/melonjs/ImageLayer.html#pos"},"AgBCWaakKVcCSiP-AGbDk":{"uri":"/docs/melonjs/ImageLayer.html#ratio"},"BpMXzqwjxsFm7SNbBLIA5":{"uri":"/docs/melonjs/ImageLayer.html#repeat"},"4k2tN6UWq1hBPwYBCWARx":{"uri":"/docs/melonjs/ImageLayer.html#right"},"wkGH5FO0JHWMe_cBtp3ko":{"uri":"/docs/melonjs/ImageLayer.html#tint"},"3ER6wEF0dsJ_TTH6yWIvT":{"uri":"/docs/melonjs/ImageLayer.html#top"},"6MiNdz4L7eBEEiTiWpEqT":{"uri":"/docs/melonjs/ImageLayer.html#updateWhenPaused"},"jnKgK1mqcBtnCbfr6oYIe":{"uri":"/docs/melonjs/ImageLayer.html#width"},"eyeF9KdULxfZ2EFCEeaLf":{"uri":"/docs/melonjs/ImageLayer.html#angleTo"},"CEWD4td8_dYp_dZ922mCV":{"uri":"/docs/melonjs/ImageLayer.html#centerOn"},"p_Py26l0wtQfCiAExAOpQ":{"uri":"/docs/melonjs/ImageLayer.html#clone"},"CF0fN0klQg0krK4LbP7NP":{"uri":"/docs/melonjs/ImageLayer.html#constructor"},"h63Y-YcRhGMMXYkSOuiQJ":{"uri":"/docs/melonjs/ImageLayer.html#contains"},"WlMeCi7L7RYIblKl1Skma":{"uri":"/docs/melonjs/ImageLayer.html#copy"},"IhG-HyKq62cIm-l7pjqOk":{"uri":"/docs/melonjs/ImageLayer.html#distanceTo"},"jXWdPqDtTKH9_W-NSlsjV":{"uri":"/docs/melonjs/ImageLayer.html#equals"},"9-GDZ98EpfGk5aOsHi76V":{"uri":"/docs/melonjs/ImageLayer.html#flipX"},"tt11m2QEYt-3pepUMjimO":{"uri":"/docs/melonjs/ImageLayer.html#flipY"},"gz2pTwQxtwYqn5tve-6P4":{"uri":"/docs/melonjs/ImageLayer.html#getAbsolutePosition"},"O2qubSsV6ED-tr7sevDIW":{"uri":"/docs/melonjs/ImageLayer.html#getBounds"},"RVISUMiLt1LIu-4KyPhBv":{"uri":"/docs/melonjs/ImageLayer.html#getIndices"},"rEQS8Ywr-uQpjqlM-QMkA":{"uri":"/docs/melonjs/ImageLayer.html#getOpacity"},"8aqiDiXKxmvVCW3WnJo2c":{"uri":"/docs/melonjs/ImageLayer.html#isConvex"},"HLShIV1COadfZwGeGeMhR":{"uri":"/docs/melonjs/ImageLayer.html#isFinite"},"iZfWb_EO0dSWXC8XkUiSW":{"uri":"/docs/melonjs/ImageLayer.html#lookAt"},"5CeKF4N7jvmOusH1iYrL-":{"uri":"/docs/melonjs/ImageLayer.html#onCollision"},"rj0-CYGUTkd4tFTb3Wksm":{"uri":"/docs/melonjs/ImageLayer.html#onDestroyEvent"},"ag1IfIN76ca7TZP9Anky1":{"uri":"/docs/melonjs/ImageLayer.html#overlaps"},"8qNctWDSm_YET54eaxzaM":{"uri":"/docs/melonjs/ImageLayer.html#recalc"},"CvBc1MGM8EDGiqlNIg0S2":{"uri":"/docs/melonjs/ImageLayer.html#resize"},"rcGrkk9p481_ltniu6Ynd":{"uri":"/docs/melonjs/ImageLayer.html#rotate"},"IgYKbpTA7F4tdf9qLh9Q4":{"uri":"/docs/melonjs/ImageLayer.html#scale"},"QsrW71s4Zfmqgo9LyQSNG":{"uri":"/docs/melonjs/ImageLayer.html#scaleV"},"ABY2lcphKGpKadanwhFtt":{"uri":"/docs/melonjs/ImageLayer.html#setOpacity"},"ZeWsGsntXRofXlLDXT8gw":{"uri":"/docs/melonjs/ImageLayer.html#setShape"},"HzXmX63sBmWaGMGd6qYS4":{"uri":"/docs/melonjs/ImageLayer.html#setVertices"},"LCNlCtFNTUDxBLrrkxusC":{"uri":"/docs/melonjs/ImageLayer.html#shift"},"1gp9fR6qQAJiuuWQ-8rny":{"uri":"/docs/melonjs/ImageLayer.html#to2d"},"NcmDd0bRk0xW1Ih8MdN3S":{"uri":"/docs/melonjs/ImageLayer.html#toIso"},"0dnJKbP_90iOnvRU9glj4":{"uri":"/docs/melonjs/ImageLayer.html#toPolygon"},"moFEdXdbQdz8GKRBdFmEV":{"uri":"/docs/melonjs/ImageLayer.html#transform"},"zPBHhcKwxrSt5X7JMnk5i":{"uri":"/docs/melonjs/ImageLayer.html#translate"},"IQ6yPCSLuMVpBBe357bzC":{"uri":"/docs/melonjs/ImageLayer.html#union"},"FNt1S2e4edV5wslYqi2cG":{"uri":"/docs/melonjs/ImageLayer.html#draw"},"h2Js9V2UX8iPQ9yWL-Cqn":{"uri":"/docs/melonjs/ImageLayer.html#postDraw"},"LFhuRQwov-JA85fvl00A1":{"uri":"/docs/melonjs/ImageLayer.html#preDraw"},"YQKvv-3VM2C8CWNfRg5c9":{"uri":"/docs/melonjs/ImageLayer.html#update"},"7NljXE1RuUTosEVwSg3Jr":{"uri":"/docs/melonjs/ImageLayer.html#onAnchorUpdate"},"-3pjXfWgM60WoKFIdkDkM":{"uri":"/docs/melonjs/Light2d.html"},"6zVSlaH_sC3ncV-Gn9R2Y":{"uri":"/docs/melonjs/Light2d.html#alpha"},"a9AlNed711flSaTB6COVb":{"uri":"/docs/melonjs/Light2d.html#alwaysUpdate"},"Hbe82-F36qOAg-X480fJj":{"uri":"/docs/melonjs/Light2d.html#ancestor"},"XOrYXUrUPOuPMA4355nA8":{"uri":"/docs/melonjs/Light2d.html#anchorPoint"},"mcJ9l6iglCH0FnMTPMmUu":{"uri":"/docs/melonjs/Light2d.html#autoTransform"},"3V62kEgs7_-ZlBfU6R1VK":{"uri":"/docs/melonjs/Light2d.html#blendMode"},"Um1CcMbq0jb5z3_vQ_l_3":{"uri":"/docs/melonjs/Light2d.html#body"},"I62KF7qs5FXSCr0VeSSIu":{"uri":"/docs/melonjs/Light2d.html#bottom"},"Tluf_aCLhOnik1ga0tGys":{"uri":"/docs/melonjs/Light2d.html#centerX"},"V9u0WjTidXhod49w2BWUU":{"uri":"/docs/melonjs/Light2d.html#centerY"},"SDdd6MJ0C745rOJq4ITjR":{"uri":"/docs/melonjs/Light2d.html#color"},"kMPPE9i01lClaThw_0WrX":{"uri":"/docs/melonjs/Light2d.html#currentTransform"},"KKe_KSIrZJ_lcF0kQABl_":{"uri":"/docs/melonjs/Light2d.html#floating"},"Xnv82b2U_QhCUyDqMFiW8":{"uri":"/docs/melonjs/Light2d.html#GUID"},"T-1Wjkc6Hb8TUPo136Jsc":{"uri":"/docs/melonjs/Light2d.html#height"},"DApZHqWIcb7ac8sKsA-Tq":{"uri":"/docs/melonjs/Light2d.html#intensity"},"5y9z6_LjRUrZziJ5Uu3FV":{"uri":"/docs/melonjs/Light2d.html#inViewport"},"3039epfPMFO-rTevVcsLL":{"uri":"/docs/melonjs/Light2d.html#isDirty"},"hlYEcOMxbzAFux-FYfxPl":{"uri":"/docs/melonjs/Light2d.html#isFlippedX"},"0mMxo9R8K74WMSFQ-jXO4":{"uri":"/docs/melonjs/Light2d.html#isFlippedY"},"1wLMhdRxzded7zIqeGrE_":{"uri":"/docs/melonjs/Light2d.html#isFloating"},"cPjVupY9CIv47KOufcXLT":{"uri":"/docs/melonjs/Light2d.html#isKinematic"},"VvJMEx7kVoCK63w1Dos0s":{"uri":"/docs/melonjs/Light2d.html#isPersistent"},"NiSGRc5e_ucs8-L2VwkYJ":{"uri":"/docs/melonjs/Light2d.html#left"},"yxU_RwqPGCGu7PEFtUfCP":{"uri":"/docs/melonjs/Light2d.html#mask"},"tqpq44zIrQFox0dx9S2C9":{"uri":"/docs/melonjs/Light2d.html#name"},"EeW8SeAeuhd3BJ5zp7Tpa":{"uri":"/docs/melonjs/Light2d.html#onVisibilityChange"},"jtCz5DefqZWJJmGGoiuVX":{"uri":"/docs/melonjs/Light2d.html#points"},"IbG-ej3k7b7g3WVoiu629":{"uri":"/docs/melonjs/Light2d.html#pos"},"6hGD67cLfThKvX4M2VpxW":{"uri":"/docs/melonjs/Light2d.html#radius"},"qa0M-6U6_CBHLKYZteve4":{"uri":"/docs/melonjs/Light2d.html#right"},"sEH9zEUlqZS3ZYSCH01k9":{"uri":"/docs/melonjs/Light2d.html#tint"},"keQDucLQiQcJpnL2K-n4y":{"uri":"/docs/melonjs/Light2d.html#top"},"eVVkZsGTB27JYKqbcwZtk":{"uri":"/docs/melonjs/Light2d.html#updateWhenPaused"},"ZO8K0jlU1HR6F2nkSzFNf":{"uri":"/docs/melonjs/Light2d.html#width"},"AUYIz1yp04wZQSbdojWSk":{"uri":"/docs/melonjs/Light2d.html#angleTo"},"9WQtyCZWCCOvOa_2-CK4E":{"uri":"/docs/melonjs/Light2d.html#centerOn"},"4QfVbswUVVMbkMDRHU6ZN":{"uri":"/docs/melonjs/Light2d.html#clone"},"oRf7eN3q9ep5e8sAz7fIp":{"uri":"/docs/melonjs/Light2d.html#constructor"},"ojBBJee2-2cPnrt0kKIII":{"uri":"/docs/melonjs/Light2d.html#contains"},"hb_R3m1EMQL-Wu6lmfk-A":{"uri":"/docs/melonjs/Light2d.html#copy"},"U4QnyZR8zsT3fOgQQhQ1p":{"uri":"/docs/melonjs/Light2d.html#distanceTo"},"8knjzw9IpkxA4wxCgDmaj":{"uri":"/docs/melonjs/Light2d.html#equals"},"OO-aChTuDnW57LW58cyY_":{"uri":"/docs/melonjs/Light2d.html#flipX"},"EsHNGCSmfK0pBd8-FVxvT":{"uri":"/docs/melonjs/Light2d.html#flipY"},"Da-dZxvHIjGVlznPh3rnP":{"uri":"/docs/melonjs/Light2d.html#getAbsolutePosition"},"qQTllxq3hw_f2HQN5PjAf":{"uri":"/docs/melonjs/Light2d.html#getBounds"},"YcoyBGJZavAM70-HvItAm":{"uri":"/docs/melonjs/Light2d.html#getIndices"},"WeTqbuHom6wrVMoE_H5Gy":{"uri":"/docs/melonjs/Light2d.html#getOpacity"},"vI3Y98nGDq8eGBobeCujh":{"uri":"/docs/melonjs/Light2d.html#getVisibleArea"},"Mi9eB4aQ_6mytkbUSsYTP":{"uri":"/docs/melonjs/Light2d.html#isConvex"},"it-LQ_z6T7sFjrP6gf6Sf":{"uri":"/docs/melonjs/Light2d.html#isFinite"},"gbEaTHdE1c1-Cx8HEdD5M":{"uri":"/docs/melonjs/Light2d.html#lookAt"},"l8VMcQ2rRKGKHqfEp3aoq":{"uri":"/docs/melonjs/Light2d.html#onCollision"},"NN1jSp1HkJdancYgl_eEn":{"uri":"/docs/melonjs/Light2d.html#onDestroyEvent"},"b04Eoz0-m59ZRTGq2GOxw":{"uri":"/docs/melonjs/Light2d.html#overlaps"},"bfaziEBq69MHuWdzFGVt3":{"uri":"/docs/melonjs/Light2d.html#recalc"},"MLt15xsPY3r5vZTYc_PgG":{"uri":"/docs/melonjs/Light2d.html#resize"},"xYYWD173kVLORX4ai5mCJ":{"uri":"/docs/melonjs/Light2d.html#rotate"},"XqHivN5M3xAx8pZj9V7Vy":{"uri":"/docs/melonjs/Light2d.html#scale"},"gFgP7YkDpeva7E3ohch9t":{"uri":"/docs/melonjs/Light2d.html#scaleV"},"5UragXLs32o2q8u7nXc5O":{"uri":"/docs/melonjs/Light2d.html#setOpacity"},"5scgwatsXBKr4hxCgEHfb":{"uri":"/docs/melonjs/Light2d.html#setShape"},"1ByDcs6qQ4Xp-J8iv3PBm":{"uri":"/docs/melonjs/Light2d.html#setVertices"},"lA2uaL-2ugBxQB8J_P8uB":{"uri":"/docs/melonjs/Light2d.html#shift"},"8TDJVP66VrtTVxrFi8VlE":{"uri":"/docs/melonjs/Light2d.html#to2d"},"_a_rZ8e7SANscvlzyIBlM":{"uri":"/docs/melonjs/Light2d.html#toIso"},"YSRD-0zi6EbAU6esEY6X-":{"uri":"/docs/melonjs/Light2d.html#toPolygon"},"uQx7Hd0sQlE2-_ki7-u5E":{"uri":"/docs/melonjs/Light2d.html#transform"},"P-NOxtRoeJ6idoyVltYLq":{"uri":"/docs/melonjs/Light2d.html#translate"},"L1Tpvznr8ao8zPNfgL04u":{"uri":"/docs/melonjs/Light2d.html#union"},"sSQchm5W25ITOsKHiHrvi":{"uri":"/docs/melonjs/Light2d.html#draw"},"x5PwAuA_sE7dCydbPeO6r":{"uri":"/docs/melonjs/Light2d.html#postDraw"},"WJjtkVNujbTWmQgCT_Rek":{"uri":"/docs/melonjs/Light2d.html#preDraw"},"1Ad3yvAMB9sjWzUpxEBt9":{"uri":"/docs/melonjs/Light2d.html#update"},"Lk-1sdcnxH2qAfEUlWh2R":{"uri":"/docs/melonjs/Light2d.html#onAnchorUpdate"},"AlYXnMRMvvvXmV3VG8E4Q":{"uri":"/docs/melonjs/Line.html"},"Tvpk7kq_nrsiDx2pkSkD1":{"uri":"/docs/melonjs/Line.html#points"},"e3A0Y_gWbn2YRrHo4c01F":{"uri":"/docs/melonjs/Line.html#pos"},"efTvFDaabFPA74sHi9Znr":{"uri":"/docs/melonjs/Line.html#clone"},"mhF27wQpKFpMA9lUMAe6x":{"uri":"/docs/melonjs/Line.html#constructor"},"JgHqhsn8T-LD3F_DgSHEN":{"uri":"/docs/melonjs/Line.html#contains"},"EW0iDirfyglfjmItzAUal":{"uri":"/docs/melonjs/Line.html#getBounds"},"M4PvKHX8NWXSMOofp14Lz":{"uri":"/docs/melonjs/Line.html#getIndices"},"HbxHTWrZXO9LPxsEF0Cfi":{"uri":"/docs/melonjs/Line.html#isConvex"},"h4f6bSAwdI-cFaN7Y24GT":{"uri":"/docs/melonjs/Line.html#recalc"},"UUSFeCrmL4CkmLXergbik":{"uri":"/docs/melonjs/Line.html#rotate"},"_5cZp_M5xeg5igHTtSDIW":{"uri":"/docs/melonjs/Line.html#scale"},"_ydIcj6EQJIbYjBMHgkaJ":{"uri":"/docs/melonjs/Line.html#scaleV"},"pvOl3rsQdGnxFmed_ouyp":{"uri":"/docs/melonjs/Line.html#setShape"},"25siNITV_OQKyqOMfGO_6":{"uri":"/docs/melonjs/Line.html#setVertices"},"-EEmlaLMueeEB5OpTug-6":{"uri":"/docs/melonjs/Line.html#shift"},"D0BWM332SIm2MdKmVHBcD":{"uri":"/docs/melonjs/Line.html#to2d"},"TQDAHKpD2cItX2oUQCvdR":{"uri":"/docs/melonjs/Line.html#toIso"},"jzvfuqWhvpiXNCJUj3buO":{"uri":"/docs/melonjs/Line.html#transform"},"_pSKVznKnBr0PCqY_DYTB":{"uri":"/docs/melonjs/Line.html#translate"},"1-N74hedvP8-Y8AvPgxnd":{"uri":"/docs/melonjs/Line.html#contains"},"OO0XOX_xMm1mNTBeRoiH9":{"uri":"/docs/melonjs/Matrix2d.html"},"Z2ooNYjK-bwBB5LfV96AN":{"uri":"/docs/melonjs/Matrix2d.html#tx"},"NrTr9oAoI_TlQN-vt0kQu":{"uri":"/docs/melonjs/Matrix2d.html#ty"},"G15Abo_DmVHcTu8oLKCJ0":{"uri":"/docs/melonjs/Matrix2d.html#apply"},"9-8tf394ct15FtoQ1tUq9":{"uri":"/docs/melonjs/Matrix2d.html#applyInverse"},"tYwxjncxhTCQEO4l0IV-3":{"uri":"/docs/melonjs/Matrix2d.html#clone"},"1IO_kV3yKk2LnBGx2w6gd":{"uri":"/docs/melonjs/Matrix2d.html#constructor"},"yQtm6eME2iDiJPRJc2DTP":{"uri":"/docs/melonjs/Matrix2d.html#copy"},"7rfd0ns_I5aOCqGH0FPHy":{"uri":"/docs/melonjs/Matrix2d.html#equals"},"0zFHTyFrCcItAQYwHLqMf":{"uri":"/docs/melonjs/Matrix2d.html#fromMat3d"},"ulFSWHGbB76CJbIpNSH9D":{"uri":"/docs/melonjs/Matrix2d.html#identity"},"Ous9f5WO-BdoC-x1mkRJU":{"uri":"/docs/melonjs/Matrix2d.html#invert"},"N55L36GN28Beg95ywcqM3":{"uri":"/docs/melonjs/Matrix2d.html#isIdentity"},"_V5p7ctIPU_oxCYWcjc9k":{"uri":"/docs/melonjs/Matrix2d.html#multiply"},"_r65mQLfRi6CogQZG6xry":{"uri":"/docs/melonjs/Matrix2d.html#rotate"},"du-0PZGyWL85cx_nhv4b3":{"uri":"/docs/melonjs/Matrix2d.html#scale"},"tTedo5Odh15vsZZgIR4Ea":{"uri":"/docs/melonjs/Matrix2d.html#scaleV"},"pgv5OqaHcf4o0G4F-Lpad":{"uri":"/docs/melonjs/Matrix2d.html#scaleX"},"_Mr1pPqBh5rfGkihXVv9I":{"uri":"/docs/melonjs/Matrix2d.html#scaleY"},"vAvXv8jpkh535ohKHVme-":{"uri":"/docs/melonjs/Matrix2d.html#setTransform"},"cjlvsLOj1TSAq6mpxeCsJ":{"uri":"/docs/melonjs/Matrix2d.html#toArray"},"32TB36nGNFIsAyqUnnZSg":{"uri":"/docs/melonjs/Matrix2d.html#toString"},"-oQA5yFtPSIu_Q4cjzjrC":{"uri":"/docs/melonjs/Matrix2d.html#translateV"},"aNz9wciWisv1HiJdc-Se8":{"uri":"/docs/melonjs/Matrix2d.html#transpose"},"WJszP-B0pD9wjb5wJ_jXC":{"uri":"/docs/melonjs/Matrix2d.html#translate"},"DMrr7qJ-MratyuvAuZRF2":{"uri":"/docs/melonjs/Matrix3d.html"},"dNy5gELa9mFzgMWw_j0fa":{"uri":"/docs/melonjs/Matrix3d.html#tx"},"pezZyG6xnMQbBVi51XT8d":{"uri":"/docs/melonjs/Matrix3d.html#ty"},"uKWOcyk_VvQMU-AmDmEl8":{"uri":"/docs/melonjs/Matrix3d.html#tz"},"IMk2uATLWuC_GzxtAT_bX":{"uri":"/docs/melonjs/Matrix3d.html#apply"},"ul_VI_9HLjvGrtQdP9cj7":{"uri":"/docs/melonjs/Matrix3d.html#applyInverse"},"AvRzRDStMQsnyHFgSKDpJ":{"uri":"/docs/melonjs/Matrix3d.html#clone"},"zpBT58DUFbUHxEcuCw1GD":{"uri":"/docs/melonjs/Matrix3d.html#constructor"},"jEF4hzKim5gVfZ77w6Erz":{"uri":"/docs/melonjs/Matrix3d.html#copy"},"dn8m27EHN5PKOWqeWhd3w":{"uri":"/docs/melonjs/Matrix3d.html#equals"},"5WFATFE5RVAgw-SUGmxGb":{"uri":"/docs/melonjs/Matrix3d.html#fromMat2d"},"XbrGqxm28vLEDfRiowPbL":{"uri":"/docs/melonjs/Matrix3d.html#identity"},"ETH94AGlTTrcOh9C9EjVJ":{"uri":"/docs/melonjs/Matrix3d.html#invert"},"CuJ0Y5_Nfx3R0S-wnfytO":{"uri":"/docs/melonjs/Matrix3d.html#isIdentity"},"MSPPtEUQIFnC2ZA9Ay16f":{"uri":"/docs/melonjs/Matrix3d.html#multiply"},"Q4KJc0mPNPIem2Tn6lm1H":{"uri":"/docs/melonjs/Matrix3d.html#ortho"},"thC9Hi3-whClSQ6fs1yWd":{"uri":"/docs/melonjs/Matrix3d.html#rotate"},"WQ-I_YzIngY-TnQZ_WCNX":{"uri":"/docs/melonjs/Matrix3d.html#scale"},"KHNUgko_6wPt3zj4biMpX":{"uri":"/docs/melonjs/Matrix3d.html#scaleV"},"2KMmlIK5bW1a8lnwd9eWN":{"uri":"/docs/melonjs/Matrix3d.html#scaleX"},"hv5Z6GzXGLVnmfzJWB9Nc":{"uri":"/docs/melonjs/Matrix3d.html#scaleY"},"zTcmb5xW0Q718kYKiG4nm":{"uri":"/docs/melonjs/Matrix3d.html#setTransform"},"ox1ZC6nl2UN9u9w8v3h9f":{"uri":"/docs/melonjs/Matrix3d.html#toArray"},"uCmMim_vuzOk1mLeTNMK1":{"uri":"/docs/melonjs/Matrix3d.html#toString"},"gNH43vCDl1yuzcYgr5NPx":{"uri":"/docs/melonjs/Matrix3d.html#translateV"},"hYBg7rZX5lBYVRVAOiA4o":{"uri":"/docs/melonjs/Matrix3d.html#transpose"},"C82TVjGTzjeDSjOKkJa4O":{"uri":"/docs/melonjs/Matrix3d.html#translate"},"p3McJq_vMoCFu2hTlDddU":{"uri":"/docs/melonjs/NineSliceSprite.html"},"jJMuuwP_QTIJkDMttor3O":{"uri":"/docs/melonjs/NineSliceSprite.html#alpha"},"y_q6vTmKg9jsE9LS-QtbA":{"uri":"/docs/melonjs/NineSliceSprite.html#alwaysUpdate"},"6RlvO2_VJj-kTVX1Fg2DN":{"uri":"/docs/melonjs/NineSliceSprite.html#ancestor"},"RKCeevcALKv55HIicdN7b":{"uri":"/docs/melonjs/NineSliceSprite.html#anchorPoint"},"E3rQCTt7_M8Xl8ney_6j8":{"uri":"/docs/melonjs/NineSliceSprite.html#animationpause"},"K2TyuTJpnCsZuhG2Sjinu":{"uri":"/docs/melonjs/NineSliceSprite.html#animationspeed"},"QfDoQrPVuaEfz7k--LhIH":{"uri":"/docs/melonjs/NineSliceSprite.html#autoTransform"},"Bb4R2H2Xz9zPdlX5l7GAQ":{"uri":"/docs/melonjs/NineSliceSprite.html#blendMode"},"XFbbuzznuHIbwgNtq_B5o":{"uri":"/docs/melonjs/NineSliceSprite.html#body"},"9k0HrEi0qLIlarv8uvFDG":{"uri":"/docs/melonjs/NineSliceSprite.html#bottom"},"1lOPEh5bz0QLn4TVhWU79":{"uri":"/docs/melonjs/NineSliceSprite.html#centerX"},"-kUKWBpSdATY5W5MR9O74":{"uri":"/docs/melonjs/NineSliceSprite.html#centerY"},"9zNDqJgj_OGYc59xe4a4V":{"uri":"/docs/melonjs/NineSliceSprite.html#currentTransform"},"ZovQdzY7K9RrN7YxJ7CSr":{"uri":"/docs/melonjs/NineSliceSprite.html#floating"},"u0byPhe6_xnJ6TsWn9RGp":{"uri":"/docs/melonjs/NineSliceSprite.html#GUID"},"mm3IC2CO2GI_BKAvJ6jgj":{"uri":"/docs/melonjs/NineSliceSprite.html#height"},"GxcZZaSwpxrYYM4ftn36f":{"uri":"/docs/melonjs/NineSliceSprite.html#inViewport"},"jT_5HurMl7-7DbdERhZCF":{"uri":"/docs/melonjs/NineSliceSprite.html#isDirty"},"YDGzb4O2P3QRxPZfIxmak":{"uri":"/docs/melonjs/NineSliceSprite.html#isFlippedX"},"S089c75F3n_s8_5tU-CIM":{"uri":"/docs/melonjs/NineSliceSprite.html#isFlippedY"},"2CZjQBB94I2mkUCiGDKND":{"uri":"/docs/melonjs/NineSliceSprite.html#isFloating"},"QbgVWUcgVyqgjp3ue9kAn":{"uri":"/docs/melonjs/NineSliceSprite.html#isKinematic"},"YfPoRmUVWs81K3e86MidW":{"uri":"/docs/melonjs/NineSliceSprite.html#isPersistent"},"1HvfrzTjgKxc8M3Hng_Rm":{"uri":"/docs/melonjs/NineSliceSprite.html#left"},"6b8FLSIh9UG3Rjuz_PF0U":{"uri":"/docs/melonjs/NineSliceSprite.html#mask"},"vdEo_LAIFYTw7PqMYuYac":{"uri":"/docs/melonjs/NineSliceSprite.html#name"},"--oO9ktuqoZakzbOv7nTm":{"uri":"/docs/melonjs/NineSliceSprite.html#offset"},"cDbiSuD94HksA8x9DINcM":{"uri":"/docs/melonjs/NineSliceSprite.html#onVisibilityChange"},"oYVqlmhep0h8jFTSQ42VZ":{"uri":"/docs/melonjs/NineSliceSprite.html#points"},"867UJOnQcZqFTqM_GEpQ5":{"uri":"/docs/melonjs/NineSliceSprite.html#pos"},"sloWKaJGx-kPKgpAardUs":{"uri":"/docs/melonjs/NineSliceSprite.html#right"},"s1-J1WT4_PWmWiBR5CvNf":{"uri":"/docs/melonjs/NineSliceSprite.html#source"},"VjEPwwqw332eQUjIkHgFm":{"uri":"/docs/melonjs/NineSliceSprite.html#tint"},"W7x7mvGPIG2QTvhkCJv2k":{"uri":"/docs/melonjs/NineSliceSprite.html#top"},"LiSOiKZOcTXXbmUCR-eae":{"uri":"/docs/melonjs/NineSliceSprite.html#updateWhenPaused"},"GFcwdkk3GgW7lcFMzWbKA":{"uri":"/docs/melonjs/NineSliceSprite.html#width"},"jvXVf_v3Nl1Fgk29fNfBd":{"uri":"/docs/melonjs/NineSliceSprite.html#addAnimation"},"gsOp_Xe_aydPv3I8yBlas":{"uri":"/docs/melonjs/NineSliceSprite.html#angleTo"},"4w_rjCt8WX2YzD26IgdzU":{"uri":"/docs/melonjs/NineSliceSprite.html#centerOn"},"Vz-peOX93DLaGfokI77c2":{"uri":"/docs/melonjs/NineSliceSprite.html#clone"},"3kt1cK_MQHVxa-9Ops7-0":{"uri":"/docs/melonjs/NineSliceSprite.html#constructor"},"wdksdskenMVynvheEZKur":{"uri":"/docs/melonjs/NineSliceSprite.html#contains"},"NWsVWvKZGuVjRgfpR9vO7":{"uri":"/docs/melonjs/NineSliceSprite.html#copy"},"5XgYVkSS5jUwY2QLyRGV3":{"uri":"/docs/melonjs/NineSliceSprite.html#distanceTo"},"NMZ-YrTlbmRR1ozP4L68E":{"uri":"/docs/melonjs/NineSliceSprite.html#equals"},"yTXe_zMlPmKFTNrCgI6oO":{"uri":"/docs/melonjs/NineSliceSprite.html#flicker"},"LWpHPDw4pNtgFVxZNagJ8":{"uri":"/docs/melonjs/NineSliceSprite.html#flipX"},"Ie_eQveT3lcSOEIXceEJQ":{"uri":"/docs/melonjs/NineSliceSprite.html#flipY"},"qo2Kz59AmCe1d5v_71VnN":{"uri":"/docs/melonjs/NineSliceSprite.html#getAbsolutePosition"},"SA47a-LnjfeZ1YC1BDoUm":{"uri":"/docs/melonjs/NineSliceSprite.html#getBounds"},"6He9-K7NU1UchlZg4zArU":{"uri":"/docs/melonjs/NineSliceSprite.html#getCurrentAnimationFrame"},"hus3zJm0ZstkhrGhAgfAN":{"uri":"/docs/melonjs/NineSliceSprite.html#getIndices"},"Urk8BbcbZVoZ7bW-kvqKc":{"uri":"/docs/melonjs/NineSliceSprite.html#getOpacity"},"bH_nvlX7CDFhyNWTu7LWt":{"uri":"/docs/melonjs/NineSliceSprite.html#isConvex"},"_LRihaZzd3rkadKh_1o_A":{"uri":"/docs/melonjs/NineSliceSprite.html#isCurrentAnimation"},"hfnqybBw_uvCdLmXVGv-6":{"uri":"/docs/melonjs/NineSliceSprite.html#isFinite"},"8WwPLkc_QJH31Bqm8Swwp":{"uri":"/docs/melonjs/NineSliceSprite.html#isFlickering"},"kj_PodcUZGQa-ifYLWXd5":{"uri":"/docs/melonjs/NineSliceSprite.html#lookAt"},"s0HQj_smNla5X6qiaFjR6":{"uri":"/docs/melonjs/NineSliceSprite.html#onCollision"},"SngwYK-0R-ISnHswjyLAU":{"uri":"/docs/melonjs/NineSliceSprite.html#onDestroyEvent"},"_5r4Q81BjFQLbcgrkXbB-":{"uri":"/docs/melonjs/NineSliceSprite.html#overlaps"},"BQ1Rs_oPjFFzIWqnXuV8p":{"uri":"/docs/melonjs/NineSliceSprite.html#recalc"},"XpU1Na9xyBkj02jPtfsjg":{"uri":"/docs/melonjs/NineSliceSprite.html#resize"},"lJSvNbxjzush6yn5rEwIO":{"uri":"/docs/melonjs/NineSliceSprite.html#reverseAnimation"},"pDMU0tTx0-FCIsD9g-755":{"uri":"/docs/melonjs/NineSliceSprite.html#rotate"},"RkPKpGBP6Wk8HBlCP3Kyz":{"uri":"/docs/melonjs/NineSliceSprite.html#scale"},"izDRxFDkAe-9Ljy4XvyjF":{"uri":"/docs/melonjs/NineSliceSprite.html#scaleV"},"GXd5ztu4YePhXdSvu-a1J":{"uri":"/docs/melonjs/NineSliceSprite.html#setAnimationFrame"},"NKX6rvQEYGM46rpAHjR5N":{"uri":"/docs/melonjs/NineSliceSprite.html#setCurrentAnimation"},"xy3O3qGgUQnRfb5UK4Wdd":{"uri":"/docs/melonjs/NineSliceSprite.html#setOpacity"},"Ai3DRciJ7xC9AIm60PCH2":{"uri":"/docs/melonjs/NineSliceSprite.html#setRegion"},"QXuRrk3cDM4GDQH08Es8l":{"uri":"/docs/melonjs/NineSliceSprite.html#setShape"},"If49E5ogc22XBb8b_-dYz":{"uri":"/docs/melonjs/NineSliceSprite.html#setVertices"},"joCNDkWFlifxyTTp_5xCD":{"uri":"/docs/melonjs/NineSliceSprite.html#shift"},"ZhW3rbbnyFkmUlcM86LD6":{"uri":"/docs/melonjs/NineSliceSprite.html#to2d"},"xy6cnMbLuawfG10mH1Qck":{"uri":"/docs/melonjs/NineSliceSprite.html#toIso"},"QScfZ2M9CjMtZmpFwGdfK":{"uri":"/docs/melonjs/NineSliceSprite.html#toPolygon"},"JxG4F1raawXwg1ZbUSs9Y":{"uri":"/docs/melonjs/NineSliceSprite.html#transform"},"DqMB3_NrjRagRbb-rGq8b":{"uri":"/docs/melonjs/NineSliceSprite.html#translate"},"-aetCeGdv0Q9dc4sinog_":{"uri":"/docs/melonjs/NineSliceSprite.html#union"},"jOO5sYdgU-HWPuFRHAy01":{"uri":"/docs/melonjs/NineSliceSprite.html#draw"},"JqQx3caiAzwZuSbOpvXHH":{"uri":"/docs/melonjs/NineSliceSprite.html#postDraw"},"50bd1nbgNjoJSwHQQTduw":{"uri":"/docs/melonjs/NineSliceSprite.html#preDraw"},"LtxT2g969JVhjWm-8vp4-":{"uri":"/docs/melonjs/NineSliceSprite.html#update"},"_SoabeyFNiDD41LrD189W":{"uri":"/docs/melonjs/NineSliceSprite.html#onAnchorUpdate"},"G3BWdFOeEb1XHF7Oz1GM7":{"uri":"/docs/melonjs/ObjectPool.html"},"MX-v3K5I3qk1gv10Dj-1b":{"uri":"/docs/melonjs/ObjectPool.html#exists"},"faomer28-yRWXW1zATG67":{"uri":"/docs/melonjs/ObjectPool.html#getInstanceCount"},"XgWFNOi2OYkHifhtgURQo":{"uri":"/docs/melonjs/ObjectPool.html#poolable"},"N5X5Y0Yj3xutxEdN2vrlx":{"uri":"/docs/melonjs/ObjectPool.html#pull"},"63uxR4gAfvHGwGkto0x2L":{"uri":"/docs/melonjs/ObjectPool.html#purge"},"Fxo3zagtc9jr80Ij4oaNS":{"uri":"/docs/melonjs/ObjectPool.html#push"},"9riFjIrqcEw4LrtTLoRir":{"uri":"/docs/melonjs/ObjectPool.html#register"},"m8cgVEfH3Wcn6T6NN_a0U":{"uri":"/docs/melonjs/ObservableVector2d.html"},"rP341Fq7lQ1aOYUjK0yKC":{"uri":"/docs/melonjs/ObservableVector2d.html#x"},"is4JUBAdLhPuSpXTCDoMc":{"uri":"/docs/melonjs/ObservableVector2d.html#y"},"qZXrpGSrdRhrbMxFObCnn":{"uri":"/docs/melonjs/ObservableVector2d.html#abs"},"zwTqYtgXz9J5kFugCAFas":{"uri":"/docs/melonjs/ObservableVector2d.html#add"},"HUoJHhbJvNrN4MYq3ssQh":{"uri":"/docs/melonjs/ObservableVector2d.html#angle"},"OBixhUgAeM_KXf_M_4WAf":{"uri":"/docs/melonjs/ObservableVector2d.html#ceil"},"HoUr_7R6sZO7kN3hC0xZX":{"uri":"/docs/melonjs/ObservableVector2d.html#ceilSelf"},"XXV9UrtZxCe0Rsp3FeAvu":{"uri":"/docs/melonjs/ObservableVector2d.html#clamp"},"eELQcijZHZznzHBN9qaZ2":{"uri":"/docs/melonjs/ObservableVector2d.html#clampSelf"},"CbO3W0OTO-lP3UVDhE5uq":{"uri":"/docs/melonjs/ObservableVector2d.html#clone"},"m3IlEKF6eyv5MXMlsQVjZ":{"uri":"/docs/melonjs/ObservableVector2d.html#constructor"},"LUUJCYj-Eu6M_8NxAiqe6":{"uri":"/docs/melonjs/ObservableVector2d.html#copy"},"6DOgQgxYvnAiGD2q9sAhp":{"uri":"/docs/melonjs/ObservableVector2d.html#cross"},"GQ1MpO_8TUqP1STf5S2Oh":{"uri":"/docs/melonjs/ObservableVector2d.html#distance"},"Q6MBcZ_e7SO5GpSpvEuBd":{"uri":"/docs/melonjs/ObservableVector2d.html#div"},"qU-Z2_UDLljWdKKQOZXp-":{"uri":"/docs/melonjs/ObservableVector2d.html#dot"},"kmnzaFs95Pda6iOj2ifGr":{"uri":"/docs/melonjs/ObservableVector2d.html#equals"},"CkFwgKPpaEnGBVCeDSFTl":{"uri":"/docs/melonjs/ObservableVector2d.html#floor"},"cXypJYbUqoa4K1CYxyiJI":{"uri":"/docs/melonjs/ObservableVector2d.html#floorSelf"},"NmOojnX-kwoPAvysfC_dg":{"uri":"/docs/melonjs/ObservableVector2d.html#length"},"ehYGnrB66qR-ceVVgSEGn":{"uri":"/docs/melonjs/ObservableVector2d.html#length2"},"cRriGXzmZfdh_yFUYVxwo":{"uri":"/docs/melonjs/ObservableVector2d.html#lerp"},"OJchQj4jLN-5d1WllHaaD":{"uri":"/docs/melonjs/ObservableVector2d.html#maxV"},"ErnT4sR56A4Hbm59iTAiY":{"uri":"/docs/melonjs/ObservableVector2d.html#minV"},"MIOyyMHQ3fiyLkiG8MUQI":{"uri":"/docs/melonjs/ObservableVector2d.html#negate"},"4EEnZLkIFW2ik1nGEK3Lp":{"uri":"/docs/melonjs/ObservableVector2d.html#negateSelf"},"N63BJWgX_YR8LqEdFMUL9":{"uri":"/docs/melonjs/ObservableVector2d.html#normalize"},"mze5ude3rnNRu81PSPI_Q":{"uri":"/docs/melonjs/ObservableVector2d.html#perp"},"Yn35xVKYZ9Na6bXHjPcGw":{"uri":"/docs/melonjs/ObservableVector2d.html#project"},"tPDSphZzDxNXH8BxaQzlP":{"uri":"/docs/melonjs/ObservableVector2d.html#projectN"},"o52LwKVBrZ5lypmhQJi5N":{"uri":"/docs/melonjs/ObservableVector2d.html#rotate"},"8VrEAE5NWn9uxTxhIGh_o":{"uri":"/docs/melonjs/ObservableVector2d.html#scale"},"6RNoUd7_eIU4wrfddAIMO":{"uri":"/docs/melonjs/ObservableVector2d.html#scaleV"},"RAufpkN1b07adz5uf4W3a":{"uri":"/docs/melonjs/ObservableVector2d.html#set"},"YLDm1peJSaIy7utQVmN9G":{"uri":"/docs/melonjs/ObservableVector2d.html#setCallback"},"tTBCX0DPBzVSXYhqzKpqh":{"uri":"/docs/melonjs/ObservableVector2d.html#setMuted"},"YhfDfny615VNEycdc2Gtf":{"uri":"/docs/melonjs/ObservableVector2d.html#setV"},"6NEgYOtUMGOl2Tr7QAoAJ":{"uri":"/docs/melonjs/ObservableVector2d.html#setZero"},"WK-ARBdFUe-7J98FdxR1k":{"uri":"/docs/melonjs/ObservableVector2d.html#sub"},"moLbDfryf8PmZzCPo2Qdv":{"uri":"/docs/melonjs/ObservableVector2d.html#to2d"},"5ugSOsbgP4odzLIc5RmUu":{"uri":"/docs/melonjs/ObservableVector2d.html#toIso"},"E7LSAukM3_NNbsEPbxh_w":{"uri":"/docs/melonjs/ObservableVector2d.html#toString"},"mA275zSTDqFoZ5ia_hmuM":{"uri":"/docs/melonjs/ObservableVector2d.html#toVector2d"},"zq8n_zPzPrw8c5NSCzZbO":{"uri":"/docs/melonjs/ObservableVector3d.html"},"JeBlDjjwVtbYBBLSFgGRo":{"uri":"/docs/melonjs/ObservableVector3d.html#x"},"FR8mRdGDLJv6jSo8FQKzu":{"uri":"/docs/melonjs/ObservableVector3d.html#y"},"PMg-lvHa0l5z-Q21JGwKL":{"uri":"/docs/melonjs/ObservableVector3d.html#z"},"E__iimMKtYrLEel5qOKqy":{"uri":"/docs/melonjs/ObservableVector3d.html#abs"},"dPD8MDoCsitfzAb8GoOor":{"uri":"/docs/melonjs/ObservableVector3d.html#add"},"B1c2ojkvWnDUvKC9lyXr_":{"uri":"/docs/melonjs/ObservableVector3d.html#angle"},"ICGKpwOO_5liwEZMxGE05":{"uri":"/docs/melonjs/ObservableVector3d.html#ceil"},"VkkQq5GLc2KEhUU1gODh6":{"uri":"/docs/melonjs/ObservableVector3d.html#ceilSelf"},"mXJPHzCWWh5dwW6viERCQ":{"uri":"/docs/melonjs/ObservableVector3d.html#clamp"},"KUgdzdDHEnlckOfX-lVuq":{"uri":"/docs/melonjs/ObservableVector3d.html#clampSelf"},"7cNCMTZEdbBH5T_ZWkTQ9":{"uri":"/docs/melonjs/ObservableVector3d.html#clone"},"zDxHfJwX3qRSMDfU1Bwk9":{"uri":"/docs/melonjs/ObservableVector3d.html#constructor"},"EE67buiUx0u-HV7hGL-r8":{"uri":"/docs/melonjs/ObservableVector3d.html#copy"},"1ey3mMcTWfOzCBFFSGXwY":{"uri":"/docs/melonjs/ObservableVector3d.html#cross"},"kIiTcYQvkVaPfdqxVB9rS":{"uri":"/docs/melonjs/ObservableVector3d.html#distance"},"n4HU210B0gxUb5tDBWylS":{"uri":"/docs/melonjs/ObservableVector3d.html#div"},"sqqm7OhR97RP8Sl22kVBs":{"uri":"/docs/melonjs/ObservableVector3d.html#dot"},"FZPuIYHzN_cVBS0E7cAIO":{"uri":"/docs/melonjs/ObservableVector3d.html#equals"},"MkuT0WUchhyi_EZfjZWPE":{"uri":"/docs/melonjs/ObservableVector3d.html#floor"},"eqCyn0kgLw17sao-S4jAl":{"uri":"/docs/melonjs/ObservableVector3d.html#floorSelf"},"GtOjre2JOZM60wy_91STn":{"uri":"/docs/melonjs/ObservableVector3d.html#length"},"i-kWew5WCbwWD2ePkRWhN":{"uri":"/docs/melonjs/ObservableVector3d.html#length2"},"euMfesoCS-Tf1xA472i5x":{"uri":"/docs/melonjs/ObservableVector3d.html#lerp"},"RkNpQnesCiO-1RMNBwHzp":{"uri":"/docs/melonjs/ObservableVector3d.html#maxV"},"5lO_LRPdDU7zmeayzOt6C":{"uri":"/docs/melonjs/ObservableVector3d.html#minV"},"TRoIxqakeGHdfFEW-J8mk":{"uri":"/docs/melonjs/ObservableVector3d.html#negate"},"PNgvIl9JanGujy43zWjMb":{"uri":"/docs/melonjs/ObservableVector3d.html#negateSelf"},"cTeoaR79DV_ygfZ7bY9bn":{"uri":"/docs/melonjs/ObservableVector3d.html#normalize"},"so536gEQsSdJNLsrvYtZ5":{"uri":"/docs/melonjs/ObservableVector3d.html#perp"},"a2OBV2KEwIBCvNYfxCes1":{"uri":"/docs/melonjs/ObservableVector3d.html#project"},"HahEVyao4qssJ9hfFLeR-":{"uri":"/docs/melonjs/ObservableVector3d.html#projectN"},"BH8BXSXJETrKIyvrGL0of":{"uri":"/docs/melonjs/ObservableVector3d.html#rotate"},"xOpNQwYzJAm0iba6ilN2F":{"uri":"/docs/melonjs/ObservableVector3d.html#scale"},"LnOEt2u8ukGVuHJNTAspY":{"uri":"/docs/melonjs/ObservableVector3d.html#scaleV"},"LYP8vGhe6BZ7m2R6zDcUj":{"uri":"/docs/melonjs/ObservableVector3d.html#set"},"WaTZITk5tDFH4JCFMuq-8":{"uri":"/docs/melonjs/ObservableVector3d.html#setCallback"},"G5gurhRTa7kZsFBYNaH_y":{"uri":"/docs/melonjs/ObservableVector3d.html#setMuted"},"zjzqEGyLQGG8q3ayCWj9d":{"uri":"/docs/melonjs/ObservableVector3d.html#setV"},"3gyh3CCyKHzQVke7R7G6Q":{"uri":"/docs/melonjs/ObservableVector3d.html#setZero"},"sb7f3w3RmiyFAzD3BnBp2":{"uri":"/docs/melonjs/ObservableVector3d.html#sub"},"NvJjDN_xTbu2yBg4xw_cb":{"uri":"/docs/melonjs/ObservableVector3d.html#to2d"},"IaxEkWJ7h3MzB5qDqJvCk":{"uri":"/docs/melonjs/ObservableVector3d.html#toIso"},"tzAZE2qzBFBclNoa6veS6":{"uri":"/docs/melonjs/ObservableVector3d.html#toString"},"bZrHEBqSgRwo0wZOR-lVK":{"uri":"/docs/melonjs/ObservableVector3d.html#toVector3d"},"lBa6QoX4w4DlKeGN88Pqi":{"uri":"/docs/melonjs/Particle.html"},"kNRh6e6HIhpHL7R8eJwWO":{"uri":"/docs/melonjs/Particle.html#alpha"},"iCld4ob7SCdByesB67xlr":{"uri":"/docs/melonjs/Particle.html#alwaysUpdate"},"c6DEYfBe3Tn2LKt0JzZ6S":{"uri":"/docs/melonjs/Particle.html#ancestor"},"Off62hoSUPcUU86l45fRr":{"uri":"/docs/melonjs/Particle.html#anchorPoint"},"CpUwb-07QbRkvZFJUAPuY":{"uri":"/docs/melonjs/Particle.html#autoTransform"},"NuX4wks613fbIO0wZkb5J":{"uri":"/docs/melonjs/Particle.html#blendMode"},"JLoDTpV3wNf1laz4pUGKh":{"uri":"/docs/melonjs/Particle.html#body"},"lGhIDucq_B_Qyl15_Ecvc":{"uri":"/docs/melonjs/Particle.html#bottom"},"VPOWyFtagdKcMfzLI2Hm2":{"uri":"/docs/melonjs/Particle.html#centerX"},"2ZVXb9aE5Q71r-EfvAaLl":{"uri":"/docs/melonjs/Particle.html#centerY"},"_axOhK3Qk_uQRLGv0Ir8L":{"uri":"/docs/melonjs/Particle.html#currentTransform"},"LtG9v-BHOiYKu7_eQqkSH":{"uri":"/docs/melonjs/Particle.html#floating"},"yvnJPSxXH0T4cLTcVYO6E":{"uri":"/docs/melonjs/Particle.html#GUID"},"t3KKrqZzxchXBMMqVXus7":{"uri":"/docs/melonjs/Particle.html#height"},"tefrWOvucrbpZhesD6me7":{"uri":"/docs/melonjs/Particle.html#inViewport"},"tcSMgZr1IaAsxPnlhfPqR":{"uri":"/docs/melonjs/Particle.html#isDirty"},"rg1IqAStq4KIxxzaBwn0J":{"uri":"/docs/melonjs/Particle.html#isFlippedX"},"0Dlz72IG7MyFKRxjZBRJp":{"uri":"/docs/melonjs/Particle.html#isFlippedY"},"7Tt_2ryORbFqobTe1vL1q":{"uri":"/docs/melonjs/Particle.html#isFloating"},"m7wRd1LBVduqRL9U2lm1J":{"uri":"/docs/melonjs/Particle.html#isKinematic"},"eRqRAdoDae5l1GlHJqsXV":{"uri":"/docs/melonjs/Particle.html#isPersistent"},"p2unB8npuseuJGO8HmQzw":{"uri":"/docs/melonjs/Particle.html#left"},"iaGrC8n84yAOkzB86MF3v":{"uri":"/docs/melonjs/Particle.html#mask"},"ZcqvDoQ6cSWpxiu-pkuPU":{"uri":"/docs/melonjs/Particle.html#name"},"BY3EH6TGt52_Chxw4qyiI":{"uri":"/docs/melonjs/Particle.html#onVisibilityChange"},"S_fiVTjjWYgUOJwwJ3C31":{"uri":"/docs/melonjs/Particle.html#points"},"SeS5lSN4PWJSVDV0G_QXG":{"uri":"/docs/melonjs/Particle.html#pos"},"bYqugIvozVamhSYwMdvNu":{"uri":"/docs/melonjs/Particle.html#right"},"7_In2M1VH4wpwmvJFMaVy":{"uri":"/docs/melonjs/Particle.html#tint"},"SLw8IhcdwehkcxfOy65f3":{"uri":"/docs/melonjs/Particle.html#top"},"GkBzIu1bwPlxPZPxb056U":{"uri":"/docs/melonjs/Particle.html#updateWhenPaused"},"9qzJzyfedI-7Abv5Bc-7O":{"uri":"/docs/melonjs/Particle.html#width"},"IG6T1272EIufyJMJl-ZW5":{"uri":"/docs/melonjs/Particle.html#angleTo"},"C5cpVJ2fQSayDTI-AQhuZ":{"uri":"/docs/melonjs/Particle.html#centerOn"},"vuqQuBageI1vnjDMUtfRw":{"uri":"/docs/melonjs/Particle.html#clone"},"I5er1AWRU2ZGgshCse8ho":{"uri":"/docs/melonjs/Particle.html#constructor"},"TjixTITwkf3hmMr_lDVjR":{"uri":"/docs/melonjs/Particle.html#contains"},"ZBIAaLoK9x7L72wtU2Yu5":{"uri":"/docs/melonjs/Particle.html#copy"},"Rw84IMVl1dIao3bc8OCt4":{"uri":"/docs/melonjs/Particle.html#distanceTo"},"ut2pIozkM5p_BFr2lcbj0":{"uri":"/docs/melonjs/Particle.html#equals"},"nohULFNY05azduuIewYyl":{"uri":"/docs/melonjs/Particle.html#flipX"},"zrz2bfAp5xWQp9pS-2Ku2":{"uri":"/docs/melonjs/Particle.html#flipY"},"iGff7R0J5Bw0v-SP7arO_":{"uri":"/docs/melonjs/Particle.html#getAbsolutePosition"},"yI0Go8cJhvWsLOzGKrTHE":{"uri":"/docs/melonjs/Particle.html#getBounds"},"BZivLidJK3z41xnom-AdW":{"uri":"/docs/melonjs/Particle.html#getIndices"},"A7pwg0gfabhDMhM27B7ZK":{"uri":"/docs/melonjs/Particle.html#getOpacity"},"w2B_t3JWX6K2_C5ytCNhd":{"uri":"/docs/melonjs/Particle.html#isConvex"},"8ejQVbKHQCeaVm91VRsLx":{"uri":"/docs/melonjs/Particle.html#isFinite"},"sE1CjO-mtCF16C-w7dIfo":{"uri":"/docs/melonjs/Particle.html#lookAt"},"bI_Xx2pbksUKihJ06XLpD":{"uri":"/docs/melonjs/Particle.html#onCollision"},"k1Mcs5SNKsCf5Qh6csvmd":{"uri":"/docs/melonjs/Particle.html#onDestroyEvent"},"OYUvOcD8y7JFlGOGKYo1g":{"uri":"/docs/melonjs/Particle.html#overlaps"},"bek-XuiijyA_8iZFm01G0":{"uri":"/docs/melonjs/Particle.html#recalc"},"hATID4_pvIBZSFlzFXnNS":{"uri":"/docs/melonjs/Particle.html#resize"},"iIqZRiwUNkhedM1RwkHZS":{"uri":"/docs/melonjs/Particle.html#rotate"},"XrS5sm5cE5aWz-ZV_VwO7":{"uri":"/docs/melonjs/Particle.html#scale"},"HBZULDIvRRnsRoSl9sOod":{"uri":"/docs/melonjs/Particle.html#scaleV"},"3QuOyXgKkVMMpHB5WtMnv":{"uri":"/docs/melonjs/Particle.html#setOpacity"},"frk0EdTdLl6ZFLFkYLiNM":{"uri":"/docs/melonjs/Particle.html#setShape"},"x12-4dFFHJmB9LxODFCp7":{"uri":"/docs/melonjs/Particle.html#setVertices"},"-d7DW5AC_MguYy3SYruyP":{"uri":"/docs/melonjs/Particle.html#shift"},"lDdGbNmU8HGdhhgcRXz59":{"uri":"/docs/melonjs/Particle.html#to2d"},"yMHX9fBGIfZ0oUuj-QHtg":{"uri":"/docs/melonjs/Particle.html#toIso"},"DVd82npmUhGm-tXQGtCL_":{"uri":"/docs/melonjs/Particle.html#toPolygon"},"cE7Q50wqykgUG6gvHDyoc":{"uri":"/docs/melonjs/Particle.html#transform"},"D0_ExBU59crF6Hfy8_sdO":{"uri":"/docs/melonjs/Particle.html#translate"},"l8dC6BzxD2eVoxNJvdW9e":{"uri":"/docs/melonjs/Particle.html#union"},"RvxKLKvFwEXyiX0ZJDgcS":{"uri":"/docs/melonjs/Particle.html#draw"},"WveWt5lMS7Y3IDU3C6a2m":{"uri":"/docs/melonjs/Particle.html#postDraw"},"Xchbc6D_yKs1E9uaKXXra":{"uri":"/docs/melonjs/Particle.html#preDraw"},"TNSyKL3a97Hr-Ru6-BhhR":{"uri":"/docs/melonjs/Particle.html#update"},"u2Tg2QKWFEkgfe57eiAip":{"uri":"/docs/melonjs/Particle.html#onAnchorUpdate"},"x1AmCcZUj5UrQskmCYxUH":{"uri":"/docs/melonjs/ParticleEmitter.html"},"BXmg7TY5oU1N-4JoEWTOI":{"uri":"/docs/melonjs/ParticleEmitter.html#alpha"},"QTROk1W394gRXmdt4qTbX":{"uri":"/docs/melonjs/ParticleEmitter.html#alwaysUpdate"},"slMA1SwNXg7Kxn7qxfPCp":{"uri":"/docs/melonjs/ParticleEmitter.html#ancestor"},"P2BI9JstRGhJxHKBg4YlI":{"uri":"/docs/melonjs/ParticleEmitter.html#anchorPoint"},"CCBzveCwiAx1JFKbioxoK":{"uri":"/docs/melonjs/ParticleEmitter.html#autoDepth"},"SUC5BzCU8qAE4j3OxmAT6":{"uri":"/docs/melonjs/ParticleEmitter.html#autoSort"},"Q8-8hqXppCfc-r-T1Pjoi":{"uri":"/docs/melonjs/ParticleEmitter.html#autoTransform"},"d7moeBVyjpIY-Iq9MsKu8":{"uri":"/docs/melonjs/ParticleEmitter.html#backgroundColor"},"OSxWLmE105Ll8MTLS8pEc":{"uri":"/docs/melonjs/ParticleEmitter.html#blendMode"},"Qq7VHGt4YB7BeD9KiSYSk":{"uri":"/docs/melonjs/ParticleEmitter.html#body"},"f8JFy2bZWYwKaWZ68bReW":{"uri":"/docs/melonjs/ParticleEmitter.html#bottom"},"uApXKT_lQN_I4sWGzuQV4":{"uri":"/docs/melonjs/ParticleEmitter.html#centerX"},"oCcCs4o1H81e1use1tkH6":{"uri":"/docs/melonjs/ParticleEmitter.html#centerY"},"hPq99mXVnVDEXoIraiNZa":{"uri":"/docs/melonjs/ParticleEmitter.html#clipping"},"ce7zRkjcmKA9ZhBUaxo_F":{"uri":"/docs/melonjs/ParticleEmitter.html#currentTransform"},"ZjginpxnTmza6CnrQZKHD":{"uri":"/docs/melonjs/ParticleEmitter.html#enableChildBoundsUpdate"},"Sdu-ORyGZNZb14171H7AS":{"uri":"/docs/melonjs/ParticleEmitter.html#floating"},"cxzG3wXjVIsV1a6MpJWnw":{"uri":"/docs/melonjs/ParticleEmitter.html#GUID"},"cXjIf5nXLEBZNdFRAZiwC":{"uri":"/docs/melonjs/ParticleEmitter.html#height"},"ioibaKYhyX4jvNXm1eHh8":{"uri":"/docs/melonjs/ParticleEmitter.html#inViewport"},"UE_rroq1YOTAFizvEFXTI":{"uri":"/docs/melonjs/ParticleEmitter.html#isDirty"},"ww59FCFyBl1LHWjwkZKXS":{"uri":"/docs/melonjs/ParticleEmitter.html#isFlippedX"},"fHYHoF1TscbD2Um1--wgt":{"uri":"/docs/melonjs/ParticleEmitter.html#isFlippedY"},"bIaV9935XE1w-98sb3KfI":{"uri":"/docs/melonjs/ParticleEmitter.html#isFloating"},"mqO0scwltag4BLVPEF5gb":{"uri":"/docs/melonjs/ParticleEmitter.html#isKinematic"},"CeH28a90noSdS7MtlhdD1":{"uri":"/docs/melonjs/ParticleEmitter.html#isPersistent"},"NY5I2d3cIf_Tm-VaJl8Cc":{"uri":"/docs/melonjs/ParticleEmitter.html#left"},"cbI38CFz_Bwwt2xO0c6V2":{"uri":"/docs/melonjs/ParticleEmitter.html#mask"},"X3rdTrz2yAI_SuQmag4RB":{"uri":"/docs/melonjs/ParticleEmitter.html#name"},"9lKM5hd3W_h6NtqMAHQki":{"uri":"/docs/melonjs/ParticleEmitter.html#onVisibilityChange"},"-xRdxse8V-D6khtqAhEvu":{"uri":"/docs/melonjs/ParticleEmitter.html#points"},"s0oe6KogcKl6s9mMyzjLt":{"uri":"/docs/melonjs/ParticleEmitter.html#pos"},"rQUIa2rysEvTDY5MWBHO4":{"uri":"/docs/melonjs/ParticleEmitter.html#right"},"nEJdKoDEWUEP_NxdMif5o":{"uri":"/docs/melonjs/ParticleEmitter.html#root"},"Qju4HIFr64XI7hOTXRo6E":{"uri":"/docs/melonjs/ParticleEmitter.html#settings"},"oqktHKz5g5x1pIYH0cwsp":{"uri":"/docs/melonjs/ParticleEmitter.html#sortOn"},"L2R_43ASQ6g8N04sfam0C":{"uri":"/docs/melonjs/ParticleEmitter.html#tint"},"n8fdC5-ahIciKdONvZ43e":{"uri":"/docs/melonjs/ParticleEmitter.html#top"},"YKBr5z5IRvlcFjzoafMpI":{"uri":"/docs/melonjs/ParticleEmitter.html#updateWhenPaused"},"HYWhKj6Obb8l9CcjUczkz":{"uri":"/docs/melonjs/ParticleEmitter.html#width"},"IE7JplHMhFWioX-tXCujo":{"uri":"/docs/melonjs/ParticleEmitter.html#addChild"},"PnKL9fdTPn58iatuDKi8e":{"uri":"/docs/melonjs/ParticleEmitter.html#addChildAt"},"KT5z5A65t1T6iDKEXC1Ay":{"uri":"/docs/melonjs/ParticleEmitter.html#angleTo"},"ad_Tq2OkwP_pBaTs0heZ-":{"uri":"/docs/melonjs/ParticleEmitter.html#burstParticles"},"nuuwNjV17QgTDhwoNeOrP":{"uri":"/docs/melonjs/ParticleEmitter.html#centerOn"},"D0_ZTKNuWMrOZIMp2OpPm":{"uri":"/docs/melonjs/ParticleEmitter.html#clone"},"4t1L4Pk1w9moKSVb_qx3b":{"uri":"/docs/melonjs/ParticleEmitter.html#constructor"},"f_eWs7Y5ds45eJ-WRWjlr":{"uri":"/docs/melonjs/ParticleEmitter.html#contains"},"cdHtOoGjy7s2ue0RDL5Zu":{"uri":"/docs/melonjs/ParticleEmitter.html#copy"},"323RgGm311N9Ui-6QZ1Zz":{"uri":"/docs/melonjs/ParticleEmitter.html#distanceTo"},"nJ-6xO_VGW2mJ3xxNJqgM":{"uri":"/docs/melonjs/ParticleEmitter.html#equals"},"0jtioJCtuw0iB-rndc1Ot":{"uri":"/docs/melonjs/ParticleEmitter.html#flipX"},"Wz-bkP743eUpVnvw7izOo":{"uri":"/docs/melonjs/ParticleEmitter.html#flipY"},"k9poKTQQsgu05k8OSB5Yv":{"uri":"/docs/melonjs/ParticleEmitter.html#forEach"},"aEAKNmGCLV_quM5TWMi4f":{"uri":"/docs/melonjs/ParticleEmitter.html#getAbsolutePosition"},"f6j6CMJh_PZhUc19JhZog":{"uri":"/docs/melonjs/ParticleEmitter.html#getBounds"},"1C2SgU6J-udMP5UEOcX2W":{"uri":"/docs/melonjs/ParticleEmitter.html#getChildAt"},"3-XLbC7RN6iDSe5ooTQXW":{"uri":"/docs/melonjs/ParticleEmitter.html#getChildByGUID"},"XXhPRt40UWQpcrtTzVWay":{"uri":"/docs/melonjs/ParticleEmitter.html#getChildByName"},"FA86fUdB6qYeRNNM6PV0I":{"uri":"/docs/melonjs/ParticleEmitter.html#getChildByProp"},"aS4WPZ0Lv-h08CGgug6v5":{"uri":"/docs/melonjs/ParticleEmitter.html#getChildByType"},"Qh59BHPBgkXOQsJqc6QbA":{"uri":"/docs/melonjs/ParticleEmitter.html#getChildIndex"},"gUWesgopSpJW2QxwYDGjs":{"uri":"/docs/melonjs/ParticleEmitter.html#getChildren"},"ef7woHErrdBbTcGqL93G6":{"uri":"/docs/melonjs/ParticleEmitter.html#getIndices"},"faMHKafYTyxR0ZH6xEOKP":{"uri":"/docs/melonjs/ParticleEmitter.html#getNextChild"},"mtbe2AqSDjqeSGNpe8mPy":{"uri":"/docs/melonjs/ParticleEmitter.html#getOpacity"},"mPnJWJBRDToaBePd2SYQ6":{"uri":"/docs/melonjs/ParticleEmitter.html#getRandomPointX"},"JmSMNkVzGPAt1eeTRQLxe":{"uri":"/docs/melonjs/ParticleEmitter.html#getRandomPointY"},"zBlyJyIQKZ8rStks5to99":{"uri":"/docs/melonjs/ParticleEmitter.html#hasChild"},"vBdB5-v_t9SqC_JPatXEe":{"uri":"/docs/melonjs/ParticleEmitter.html#isConvex"},"5MByDoi1hcmNERHhT60UM":{"uri":"/docs/melonjs/ParticleEmitter.html#isFinite"},"BovVlGzBjFbi_27g5QefA":{"uri":"/docs/melonjs/ParticleEmitter.html#isRunning"},"g4PwxCpwHxkamwjoSEvTy":{"uri":"/docs/melonjs/ParticleEmitter.html#lookAt"},"kR3_ktW6CPCF34pn0SWh9":{"uri":"/docs/melonjs/ParticleEmitter.html#moveDown"},"5dHcgVURvlvjFQebrj1gE":{"uri":"/docs/melonjs/ParticleEmitter.html#moveToBottom"},"u6NZQut0sA67Xas9ImDT4":{"uri":"/docs/melonjs/ParticleEmitter.html#moveToTop"},"sYpDiM-464hHNshzb_8OZ":{"uri":"/docs/melonjs/ParticleEmitter.html#moveUp"},"i_qVG68ZPwiR0dC75RGyE":{"uri":"/docs/melonjs/ParticleEmitter.html#onChildChange"},"_fjSlPDHbjM5r0gGE9khP":{"uri":"/docs/melonjs/ParticleEmitter.html#onCollision"},"hVGhw8mKMWKOF0vBwepAX":{"uri":"/docs/melonjs/ParticleEmitter.html#onDestroyEvent"},"rbW-LdK11oDdTRfmeq4Nx":{"uri":"/docs/melonjs/ParticleEmitter.html#overlaps"},"Yh7fTon0zKWCOBrzU6xC9":{"uri":"/docs/melonjs/ParticleEmitter.html#recalc"},"4YEjAdv7MuqqiupXSaJtH":{"uri":"/docs/melonjs/ParticleEmitter.html#removeChild"},"sL1XajcHy9ph1cYaHJ6kJ":{"uri":"/docs/melonjs/ParticleEmitter.html#removeChildNow"},"jE_ASF1iMyhyBbdzeIjdZ":{"uri":"/docs/melonjs/ParticleEmitter.html#reset"},"JHqrfGKgP0tY0K5GkkhXs":{"uri":"/docs/melonjs/ParticleEmitter.html#resize"},"6I7bf5cil3k7TZzPj5rht":{"uri":"/docs/melonjs/ParticleEmitter.html#rotate"},"BhgXd93gWe8621Q3_qEdv":{"uri":"/docs/melonjs/ParticleEmitter.html#scale"},"GcnWKo4u_T7VrxrgLdmb-":{"uri":"/docs/melonjs/ParticleEmitter.html#scaleV"},"0SNkIHjwKcf94GvQvb5ub":{"uri":"/docs/melonjs/ParticleEmitter.html#setChildsProperty"},"7cfb-zYN8H5r5TsYCVNZy":{"uri":"/docs/melonjs/ParticleEmitter.html#setOpacity"},"cp6bzexs1HQ1Mtl0MNiqO":{"uri":"/docs/melonjs/ParticleEmitter.html#setShape"},"UnwJXgYI9ZANIiynlD9mF":{"uri":"/docs/melonjs/ParticleEmitter.html#setVertices"},"OeILtPbp2wibUvqlXd7Wx":{"uri":"/docs/melonjs/ParticleEmitter.html#shift"},"0AkGEbOaQgJZtInjZhkAV":{"uri":"/docs/melonjs/ParticleEmitter.html#sort"},"K_wtLjMAQqdNkbw4kCSw0":{"uri":"/docs/melonjs/ParticleEmitter.html#stopStream"},"gAAr-yA2_B1R9Xr7Dov1w":{"uri":"/docs/melonjs/ParticleEmitter.html#streamParticles"},"_ZvKAfjQq6-JW5KpzAitN":{"uri":"/docs/melonjs/ParticleEmitter.html#swapChildren"},"VkoINouSNzJlsL6DCTnNC":{"uri":"/docs/melonjs/ParticleEmitter.html#to2d"},"6WpLTs838AliK_ISzIT21":{"uri":"/docs/melonjs/ParticleEmitter.html#toIso"},"KRmCVvIah4D7MFbjF2jVr":{"uri":"/docs/melonjs/ParticleEmitter.html#toPolygon"},"im3HQUoyvKEFfa3uPCYY4":{"uri":"/docs/melonjs/ParticleEmitter.html#transform"},"O1o9zYZ4sAkjIQ3dj01zz":{"uri":"/docs/melonjs/ParticleEmitter.html#translate"},"rE2Dy9R5sQLeqjmgF1knH":{"uri":"/docs/melonjs/ParticleEmitter.html#union"},"K8dea1FlFR5hpDQJcz_2T":{"uri":"/docs/melonjs/ParticleEmitter.html#draw"},"FBYcgMJsSJzUd7ATSq7C8":{"uri":"/docs/melonjs/ParticleEmitter.html#postDraw"},"pVJiaedANT8QNBCUKVG8s":{"uri":"/docs/melonjs/ParticleEmitter.html#preDraw"},"7M-G5Lac3MlgEO1wjrOE5":{"uri":"/docs/melonjs/ParticleEmitter.html#update"},"WuyYXI2HolbvbQ-F2iGJA":{"uri":"/docs/melonjs/ParticleEmitter.html#isAttachedToRoot"},"i45p6Kz-iOXVAfNU28GSM":{"uri":"/docs/melonjs/ParticleEmitter.html#onAnchorUpdate"},"t_IOhRTA_MSPRlMGtZoq7":{"uri":"/docs/melonjs/Path2D.html"},"YNVDd7x5WWPPnpvoU0qT3":{"uri":"/docs/melonjs/Path2D.html#arcResolution"},"sjMuaNUmrLLWoQOnKevmY":{"uri":"/docs/melonjs/Path2D.html#points"},"XSKOfKYgjdyVv_nCEDYHk":{"uri":"/docs/melonjs/Path2D.html#arc"},"mdK_GLr9Iq1QyrjAX3ITT":{"uri":"/docs/melonjs/Path2D.html#arcTo"},"Dvqe0FDnHcFXUvm5npYXj":{"uri":"/docs/melonjs/Path2D.html#beginPath"},"xvuj_gEkG5bHlGfjG048x":{"uri":"/docs/melonjs/Path2D.html#closePath"},"OrlxyS_6ySpUREp2sDc7b":{"uri":"/docs/melonjs/Path2D.html#ellipse"},"meeKXr0hwtiLl3-DC_Pwx":{"uri":"/docs/melonjs/Path2D.html#lineTo"},"-PSSTTIc6RQEkTxLJKuEx":{"uri":"/docs/melonjs/Path2D.html#moveTo"},"k7DMOUL1tjQPPHYUXkz0P":{"uri":"/docs/melonjs/Path2D.html#rect"},"aff7MRyNevEXUdRgbftSr":{"uri":"/docs/melonjs/Path2D.html#roundRect"},"W5qRveRLoPbdcOfE4u3TA":{"uri":"/docs/melonjs/Path2D.html#triangulatePath"},"eXwMnKvFKczNI2a20O0rS":{"uri":"/docs/melonjs/Pointer.html"},"VeXfuRysCgYc2uLgxc_4M":{"uri":"/docs/melonjs/Pointer.html#bottom"},"WOABYYY_t4m_jQMf_BXL9":{"uri":"/docs/melonjs/Pointer.html#button"},"0FX4lfmXBFc6K6jghorAQ":{"uri":"/docs/melonjs/Pointer.html#center"},"04NASbBjgGk5Bq3WAMxp6":{"uri":"/docs/melonjs/Pointer.html#centerX"},"NhUBF52F7rR2hPyl84Y66":{"uri":"/docs/melonjs/Pointer.html#centerY"},"Xx1rs57eUSbsHK_muQlST":{"uri":"/docs/melonjs/Pointer.html#clientX"},"rZQgJZ3E71yHTQrbaGPzi":{"uri":"/docs/melonjs/Pointer.html#clientY"},"I15TO-6IY47Z-eVbiuepW":{"uri":"/docs/melonjs/Pointer.html#deltaMode"},"8GCAABxxq9Fmnd5UEzbWh":{"uri":"/docs/melonjs/Pointer.html#deltaX"},"9e0oCb7G44Co_rjJBU6BJ":{"uri":"/docs/melonjs/Pointer.html#deltaY"},"PIfTkVvQnlec4pmMUYCgn":{"uri":"/docs/melonjs/Pointer.html#deltaZ"},"_LN448NqCJh_VoPCNUtpe":{"uri":"/docs/melonjs/Pointer.html#event"},"4n9WUH05drzKObyt7d_E1":{"uri":"/docs/melonjs/Pointer.html#gameLocalX"},"nO3cyUDikn6x4Qbfvcf6q":{"uri":"/docs/melonjs/Pointer.html#gameLocalY"},"sesL8Y7ug0Hu2yk8BoRR-":{"uri":"/docs/melonjs/Pointer.html#gameScreenX"},"3iqTGpvg5n7QdV_qQZQCI":{"uri":"/docs/melonjs/Pointer.html#gameScreenY"},"qyKXMP4dpPv7pCXyWYuzR":{"uri":"/docs/melonjs/Pointer.html#gameWorldX"},"R6gXWN1dpPt_5n-wcAG2E":{"uri":"/docs/melonjs/Pointer.html#gameWorldY"},"HhfZDe2Fw6tlN6iXNyEHa":{"uri":"/docs/melonjs/Pointer.html#gameX"},"_QX0djOnlrSUcUqO5e55u":{"uri":"/docs/melonjs/Pointer.html#gameY"},"TxvGSG4rk5u425PgVum4I":{"uri":"/docs/melonjs/Pointer.html#isNormalized"},"MU0MLD3nF4GyTJQTTTnWs":{"uri":"/docs/melonjs/Pointer.html#isPrimary"},"8bYGsl6xI0zzlFT25la5i":{"uri":"/docs/melonjs/Pointer.html#left"},"2JnqtaZndb4j5PS7MZkiY":{"uri":"/docs/melonjs/Pointer.html#LEFT"},"B_4cVP_iVdS25tIvj3B6x":{"uri":"/docs/melonjs/Pointer.html#locked"},"N9b_ft0i60UuNHlRmdPYr":{"uri":"/docs/melonjs/Pointer.html#MIDDLE"},"jFbxZG68RiQWnVS0q4CUR":{"uri":"/docs/melonjs/Pointer.html#movementX"},"NPo7lonzqZFOpZUGiMDt1":{"uri":"/docs/melonjs/Pointer.html#movementY"},"n0XZCqyORhgHWA2K578ad":{"uri":"/docs/melonjs/Pointer.html#pageX"},"ucXMvqcfx1l_eHy6HR6P-":{"uri":"/docs/melonjs/Pointer.html#pageY"},"o2Qsl0ANuBNXu3wRbm6t4":{"uri":"/docs/melonjs/Pointer.html#pointerId"},"K3gQPMh1695_Y8HYcM-A0":{"uri":"/docs/melonjs/Pointer.html#right"},"VeHj_sDpRFbhB8DzgDAfo":{"uri":"/docs/melonjs/Pointer.html#RIGHT"},"ND4QHy-wIEW-clkdJDeCP":{"uri":"/docs/melonjs/Pointer.html#top"},"fxtDg-bJh6gdSp9GziFGA":{"uri":"/docs/melonjs/Pointer.html#type"},"-FLqR_Xj_iBiLbrNVi9UI":{"uri":"/docs/melonjs/Pointer.html#width"},"Rr9DH6v2BtXoX-LdTrQak":{"uri":"/docs/melonjs/Pointer.html#x"},"tzowpj1y79A7YotMqoatW":{"uri":"/docs/melonjs/Pointer.html#y"},"Tzh9NPYmvz7i3yIvfIR7O":{"uri":"/docs/melonjs/Pointer.html#add"},"2kdYdLrZ6ozN6PfUscx4W":{"uri":"/docs/melonjs/Pointer.html#addBounds"},"XgXHdqNoq_Ma2FDnQ5t5M":{"uri":"/docs/melonjs/Pointer.html#addFrame"},"529zlDsRcfPmvPrKWwVZp":{"uri":"/docs/melonjs/Pointer.html#addPoint"},"miA_d7us29Ojc8jJ1Oi4i":{"uri":"/docs/melonjs/Pointer.html#clear"},"gqNPFIkReD9u9pohWCsVv":{"uri":"/docs/melonjs/Pointer.html#clone"},"AGvkbvM3iP6zxTepVyUkn":{"uri":"/docs/melonjs/Pointer.html#contains"},"Plw4V96P8YsJeDPh2VZ5D":{"uri":"/docs/melonjs/Pointer.html#isFinite"},"KTR_OY6Bi5avq3k4OnsM3":{"uri":"/docs/melonjs/Pointer.html#overlaps"},"DOhd5GiMYzrXQUHl0TQsb":{"uri":"/docs/melonjs/Pointer.html#setMinMax"},"XYrEXfDtn-ntATHSnztL4":{"uri":"/docs/melonjs/Pointer.html#shift"},"9FVwRDcDAN05d6x0oF1nU":{"uri":"/docs/melonjs/Pointer.html#toPolygon"},"bRK9V1aPYIGJe1FZdRy4I":{"uri":"/docs/melonjs/Pointer.html#translate"},"hH93OFIbiAxgsKZBnlgKU":{"uri":"/docs/melonjs/Pointer.html#update"},"T4onXNDxNu-fuZ1ROz_SJ":{"uri":"/docs/melonjs/Pointer.html#set"},"xvl5TXLjyMRgmGe5rpn3k":{"uri":"/docs/melonjs/Polygon.html"},"a-z9yErKNTsrAwdW_klQe":{"uri":"/docs/melonjs/Polygon.html#points"},"7cBG9QEHylxU-EfezoVzj":{"uri":"/docs/melonjs/Polygon.html#pos"},"HZdt3kVi9P3dyKCjlS3ya":{"uri":"/docs/melonjs/Polygon.html#clone"},"frIf0Jx8oWIFZ58mBxntG":{"uri":"/docs/melonjs/Polygon.html#constructor"},"dqfcvPabm0ppFKe4pr3NX":{"uri":"/docs/melonjs/Polygon.html#contains"},"pNWqJcBtpX87o9Hv6Dl6m":{"uri":"/docs/melonjs/Polygon.html#getBounds"},"hE5u6_8tGKcX9_0bMt_IZ":{"uri":"/docs/melonjs/Polygon.html#getIndices"},"S-wm4H_zZBbhPmw27ZBq-":{"uri":"/docs/melonjs/Polygon.html#isConvex"},"9PMAdkIhk65RoP4Spw9ZW":{"uri":"/docs/melonjs/Polygon.html#recalc"},"t2X8y9dHQtQOQ4KSP_cTT":{"uri":"/docs/melonjs/Polygon.html#rotate"},"NqPwtlMWPgIqgjbZBhQ75":{"uri":"/docs/melonjs/Polygon.html#scale"},"xnbr6I3wUQscno-f2Zi2k":{"uri":"/docs/melonjs/Polygon.html#scaleV"},"TYD2QrzoTozrxZHInBvaF":{"uri":"/docs/melonjs/Polygon.html#setShape"},"uwTnqS4T1teY7ze_wFqq6":{"uri":"/docs/melonjs/Polygon.html#setVertices"},"jLBTqaDFVfkN7WLNnxEQh":{"uri":"/docs/melonjs/Polygon.html#shift"},"A7HvC2eGql-mZhbaHOnvi":{"uri":"/docs/melonjs/Polygon.html#to2d"},"yl2c7KA3E9_Dw6zl_GvjF":{"uri":"/docs/melonjs/Polygon.html#toIso"},"6kNwYEAlAOff_Y7aDuc7g":{"uri":"/docs/melonjs/Polygon.html#transform"},"9_JrgrkWMrs1RE7_eyqFK":{"uri":"/docs/melonjs/Polygon.html#translate"},"7fpyB4DJP1ZE2aP7tkMRN":{"uri":"/docs/melonjs/Polygon.html#contains"},"4Zpce8UEZSO2_iWMMbM7F":{"uri":"/docs/melonjs/Polygon.html#shift"},"iLwy2TlD_L0GXHCVz5wPg":{"uri":"/docs/melonjs/Polygon.html#translate"},"M9ssn_lw-rRjYEg2yvi4X":{"uri":"/docs/melonjs/QuadTree.html"},"akIoni6nY6-jCFYcYVnxZ":{"uri":"/docs/melonjs/QuadTree.html#clear"},"f6quzT9uPbE2FnAw68xrN":{"uri":"/docs/melonjs/QuadTree.html#constructor"},"zKvs-h3dgC5ZSXRBspQAu":{"uri":"/docs/melonjs/QuadTree.html#hasChildren"},"UQn-Sfxlm5Uu2RtuzM9sF":{"uri":"/docs/melonjs/QuadTree.html#insert"},"rhqTnuMhcXigyB3E3tPaR":{"uri":"/docs/melonjs/QuadTree.html#insertContainer"},"DdluDPybm7pVxSf-I6jBi":{"uri":"/docs/melonjs/QuadTree.html#isPrunable"},"g0PGEacUyib7zN_fIu6J6":{"uri":"/docs/melonjs/QuadTree.html#remove"},"ra4q1gniSuMm0Ecm40oEg":{"uri":"/docs/melonjs/QuadTree.html#retrieve"},"-qJJtUWkmYQx3jTW763sp":{"uri":"/docs/melonjs/Rect.html"},"SD86U2klbGkGVfPLlSVvA":{"uri":"/docs/melonjs/Rect.html#bottom"},"BTPiu25aPSet4mVMCZuXB":{"uri":"/docs/melonjs/Rect.html#centerX"},"D4IJsAVH0es1ar8crtbA-":{"uri":"/docs/melonjs/Rect.html#centerY"},"VcSuZMb2h3oDZb4UqmQWF":{"uri":"/docs/melonjs/Rect.html#height"},"1PK14qV6nTJalut35_adf":{"uri":"/docs/melonjs/Rect.html#left"},"QYgnunHMlCDW9euAxpgtP":{"uri":"/docs/melonjs/Rect.html#points"},"4du5bwCpAKCh-ZoDE-JVx":{"uri":"/docs/melonjs/Rect.html#pos"},"S4Npv89bzfwM1vbNwQTN-":{"uri":"/docs/melonjs/Rect.html#right"},"z7v8tavhK3CkIoTlJ7_Bp":{"uri":"/docs/melonjs/Rect.html#top"},"V3CGt6y-WMS-ySAg3IGfm":{"uri":"/docs/melonjs/Rect.html#width"},"yezpI_Xh-cojD0eDGyjRQ":{"uri":"/docs/melonjs/Rect.html#centerOn"},"9UnJAWJwm-CV_sXb5t1MR":{"uri":"/docs/melonjs/Rect.html#clone"},"T6Upk20Q3FFvLXwRvqTPA":{"uri":"/docs/melonjs/Rect.html#constructor"},"jFLxsOvjT_ArieRZ86suq":{"uri":"/docs/melonjs/Rect.html#contains"},"lIfvqHXwzyQhIehyzxfy6":{"uri":"/docs/melonjs/Rect.html#copy"},"8gJYYarfqU8BEzbp5bLTT":{"uri":"/docs/melonjs/Rect.html#equals"},"fgdigdWBmb9dXYMBGaSGW":{"uri":"/docs/melonjs/Rect.html#getBounds"},"lvme0Y70ZJDZ0QqBqTdg5":{"uri":"/docs/melonjs/Rect.html#getIndices"},"x-GOBqfQAHdPH3FsjKgMm":{"uri":"/docs/melonjs/Rect.html#isConvex"},"sYQsqlvEZ5rxATnkn_jti":{"uri":"/docs/melonjs/Rect.html#isFinite"},"m82QEm_XwLASuHYFIo_Ph":{"uri":"/docs/melonjs/Rect.html#overlaps"},"6FvD6MfPa__Nc17N6axFK":{"uri":"/docs/melonjs/Rect.html#recalc"},"8K7L7FACjkt1kvWOWms_T":{"uri":"/docs/melonjs/Rect.html#resize"},"h3nTGmkNTLgdL_RziBnep":{"uri":"/docs/melonjs/Rect.html#rotate"},"QXWETeiuIApvivO2eth-z":{"uri":"/docs/melonjs/Rect.html#scale"},"V4hfT6P-RWLeHgDXl1kjk":{"uri":"/docs/melonjs/Rect.html#scaleV"},"67iKqctL8CViZLpwwffln":{"uri":"/docs/melonjs/Rect.html#setShape"},"wL1NEOzYboZPdKR8KOdP7":{"uri":"/docs/melonjs/Rect.html#setVertices"},"wLiV5diEWksxsMylZ3ef_":{"uri":"/docs/melonjs/Rect.html#shift"},"MkfgHG-LnpdwIHbUhcr2U":{"uri":"/docs/melonjs/Rect.html#to2d"},"3mNUCdlVESgszfx5RAVot":{"uri":"/docs/melonjs/Rect.html#toIso"},"KmUNSWjlfdbZv0IyIhtOc":{"uri":"/docs/melonjs/Rect.html#toPolygon"},"QiuhuKmdjdgLTXe706Z23":{"uri":"/docs/melonjs/Rect.html#transform"},"kM9YpBeiduY4UmVIK2okf":{"uri":"/docs/melonjs/Rect.html#translate"},"uAQKmweemEL9zad-L3tec":{"uri":"/docs/melonjs/Rect.html#union"},"VB8YFmPu3kK8FUmfDlev_":{"uri":"/docs/melonjs/Rect.html#contains"},"kVgHglATK0YlZDS_jnAl4":{"uri":"/docs/melonjs/Rect.html#contains"},"i0XP2yFPGVjN7euq6Lz6a":{"uri":"/docs/melonjs/Renderable.html"},"63727ms1T_mRASllGDUJD":{"uri":"/docs/melonjs/Renderable.html#alpha"},"jLN9R5XRII0lJP_-Zu6P4":{"uri":"/docs/melonjs/Renderable.html#alwaysUpdate"},"Xr8pLuYsJNjT6LR1QYdQH":{"uri":"/docs/melonjs/Renderable.html#ancestor"},"UbxgU_QaagsKwieN1xu31":{"uri":"/docs/melonjs/Renderable.html#anchorPoint"},"NUQgoLxobmmj3JmRgWkV5":{"uri":"/docs/melonjs/Renderable.html#autoTransform"},"s_Pqb5bEKmx8Gag_dhPQ0":{"uri":"/docs/melonjs/Renderable.html#blendMode"},"NHCpzPo_ARsmhOMi1mP8w":{"uri":"/docs/melonjs/Renderable.html#body"},"Kd3y4SD2tEuvZIuCAEoGr":{"uri":"/docs/melonjs/Renderable.html#bottom"},"mA3e9vZ8cJZeqTBcD21YM":{"uri":"/docs/melonjs/Renderable.html#centerX"},"TdYWOMVM0TCugQwSoeYXf":{"uri":"/docs/melonjs/Renderable.html#centerY"},"2BJrla5GBW5OEvcXxM0tf":{"uri":"/docs/melonjs/Renderable.html#currentTransform"},"M-8IKlfoZpfi61UBrHufT":{"uri":"/docs/melonjs/Renderable.html#floating"},"cFoW3unEMmjcekMBmstDm":{"uri":"/docs/melonjs/Renderable.html#GUID"},"_TlicebIXBTmWKWA0ZJg9":{"uri":"/docs/melonjs/Renderable.html#height"},"3AaBJbtBWh64Z3FYa_wrL":{"uri":"/docs/melonjs/Renderable.html#inViewport"},"H3LoEP6Be4WXjYreZJVBi":{"uri":"/docs/melonjs/Renderable.html#isDirty"},"T4e3OK9AHFjgwC9W20wI7":{"uri":"/docs/melonjs/Renderable.html#isFlippedX"},"fucJwHW8_P0FyJtMXDId9":{"uri":"/docs/melonjs/Renderable.html#isFlippedY"},"JC9RaQ0OY-yydC7KcaQob":{"uri":"/docs/melonjs/Renderable.html#isFloating"},"sdjPKTHWRywN79ifxCtSe":{"uri":"/docs/melonjs/Renderable.html#isKinematic"},"SQ2wFNXxLCOdhsYy1QL5v":{"uri":"/docs/melonjs/Renderable.html#isPersistent"},"pRP_8pZm9o5KxkMQY93Nb":{"uri":"/docs/melonjs/Renderable.html#left"},"_L7DUUzv3Uvxm0yxxFzTs":{"uri":"/docs/melonjs/Renderable.html#mask"},"rdZNFw5a8Xstc1TT5JP9f":{"uri":"/docs/melonjs/Renderable.html#name"},"5tfBAvJQ3dqOBqlIaObsC":{"uri":"/docs/melonjs/Renderable.html#onVisibilityChange"},"VtXfWiJ1zD9DwhCb5VP07":{"uri":"/docs/melonjs/Renderable.html#points"},"DSZl5OU02sqscWaIqf0Rh":{"uri":"/docs/melonjs/Renderable.html#pos"},"rE5xaW06C5pKaEW__jXeF":{"uri":"/docs/melonjs/Renderable.html#right"},"uWJWBKhSzuo1UPwb6b7VC":{"uri":"/docs/melonjs/Renderable.html#tint"},"cbJ5Aq3aeiac9Yzr3Nivh":{"uri":"/docs/melonjs/Renderable.html#top"},"ER8NsnuMGSDG-xr6CCm6h":{"uri":"/docs/melonjs/Renderable.html#updateWhenPaused"},"BFkLzTI5TmQLQ-VhBvU66":{"uri":"/docs/melonjs/Renderable.html#width"},"OROEprtSBAb4on8u3A86Z":{"uri":"/docs/melonjs/Renderable.html#angleTo"},"HW7R1IFrETAuqesj---0n":{"uri":"/docs/melonjs/Renderable.html#centerOn"},"0NL60VYGLPRAWrOiBWBgG":{"uri":"/docs/melonjs/Renderable.html#clone"},"s9urTQoXK21WFRFQYc56R":{"uri":"/docs/melonjs/Renderable.html#constructor"},"AXUzvKwmW1_4_U6uAXnDw":{"uri":"/docs/melonjs/Renderable.html#contains"},"eEtO2Bq-z_slWqMT2oNRt":{"uri":"/docs/melonjs/Renderable.html#copy"},"N8cqXW9og2voTeXGhmGK8":{"uri":"/docs/melonjs/Renderable.html#distanceTo"},"7V6SxcOk5vAJYPOcM50r2":{"uri":"/docs/melonjs/Renderable.html#equals"},"TbRVwu6cvSaHUAT6eGMBn":{"uri":"/docs/melonjs/Renderable.html#flipX"},"B7wbRGqgTmDIE7yniZlUR":{"uri":"/docs/melonjs/Renderable.html#flipY"},"lvlh3vtcByAh9OtZdyBoY":{"uri":"/docs/melonjs/Renderable.html#getAbsolutePosition"},"ENEhGiLF2SN09tx7XRGa3":{"uri":"/docs/melonjs/Renderable.html#getBounds"},"ft4KLnj4KkMcSKbLBSxv8":{"uri":"/docs/melonjs/Renderable.html#getIndices"},"bUryTfM-ZvNd3TsmJdUjC":{"uri":"/docs/melonjs/Renderable.html#getOpacity"},"7Jmvz5JyVz_gWL8VkbDTr":{"uri":"/docs/melonjs/Renderable.html#isConvex"},"7IqH4NflTPm_t0uVWu0We":{"uri":"/docs/melonjs/Renderable.html#isFinite"},"YAzJvYvmrV2Gy9ACgUsNj":{"uri":"/docs/melonjs/Renderable.html#lookAt"},"hOYRn3zwVmw22B5k_9PoT":{"uri":"/docs/melonjs/Renderable.html#onCollision"},"WJcSOyElFAJ59XbvinMOC":{"uri":"/docs/melonjs/Renderable.html#onDestroyEvent"},"GzALDKq57IQ4oK7qc1N0I":{"uri":"/docs/melonjs/Renderable.html#overlaps"},"GQv8uXJ0pIt9Y0xxNSzqq":{"uri":"/docs/melonjs/Renderable.html#recalc"},"freNOpqmaIxkMfQR2NlTx":{"uri":"/docs/melonjs/Renderable.html#resize"},"0FHQ7GISVtnvuKTiJYcQK":{"uri":"/docs/melonjs/Renderable.html#rotate"},"GUze96F5NhCvJMGu0p57b":{"uri":"/docs/melonjs/Renderable.html#scale"},"9JONEXrsoZVtYyAyr_Uvs":{"uri":"/docs/melonjs/Renderable.html#scaleV"},"7yydfyHWa1MuuIVRSBuDg":{"uri":"/docs/melonjs/Renderable.html#setOpacity"},"4TblWTTdDUCaC2lBcOPfb":{"uri":"/docs/melonjs/Renderable.html#setShape"},"XB5jgYNvkGHVXzqhQMhpp":{"uri":"/docs/melonjs/Renderable.html#setVertices"},"g8uR1cHq8Ryb68kxXXCx3":{"uri":"/docs/melonjs/Renderable.html#shift"},"05KvTG4fWXMIyi60zl58B":{"uri":"/docs/melonjs/Renderable.html#to2d"},"tA9J1mB0VH5nSlb33cUdL":{"uri":"/docs/melonjs/Renderable.html#toIso"},"ChUt_IEo8xzDQInu8tumf":{"uri":"/docs/melonjs/Renderable.html#toPolygon"},"4mvwmEIgTQZJ-swTzTKCa":{"uri":"/docs/melonjs/Renderable.html#transform"},"9zbJ42R6l2jzxaf3Mra51":{"uri":"/docs/melonjs/Renderable.html#translate"},"MQyshBpz3tcdfcyLl86yL":{"uri":"/docs/melonjs/Renderable.html#union"},"xQXNqW0vJg85-2EbvmVbU":{"uri":"/docs/melonjs/Renderable.html#draw"},"e1cy35g452LnLT09OZcIB":{"uri":"/docs/melonjs/Renderable.html#postDraw"},"Wu96ayEkztZ5R_NZ-Z9p6":{"uri":"/docs/melonjs/Renderable.html#preDraw"},"8HpzL3TIMG1cXJT25pjgu":{"uri":"/docs/melonjs/Renderable.html#update"},"umQ_ZzalAPWvcXrWT4I9L":{"uri":"/docs/melonjs/Renderable.html#onAnchorUpdate"},"LLvksO0ycZnKyeyQxXRcR":{"uri":"/docs/melonjs/Renderer.html"},"cmvekY6KA1TG9nl2z8_H-":{"uri":"/docs/melonjs/Renderer/Texture.html"},"mvOYThUShXaTy1bTm9d3x":{"uri":"/docs/melonjs/Renderer/Texture.html#constructor"},"2HJsfDfMgg97IH-94x6JD":{"uri":"/docs/melonjs/Renderer.html#isContextValid"},"9dbV6qMm35b1wNnPkdauE":{"uri":"/docs/melonjs/Renderer.html#path2D"},"sFCWre2EH6fvQIWrjbQmz":{"uri":"/docs/melonjs/Renderer.html#settings"},"N5q7QPvsQLLsTLvuEqSP4":{"uri":"/docs/melonjs/Renderer.html#clear"},"uDopDivEPiDIv4dQjIfFE":{"uri":"/docs/melonjs/Renderer.html#clearMask"},"MzpokibV7G7y_aSsS87eO":{"uri":"/docs/melonjs/Renderer.html#clearTint"},"dSgMcudi99OyFPYu93aNt":{"uri":"/docs/melonjs/Renderer.html#constructor"},"7Jrjibs3BQZjdw3q9QLIt":{"uri":"/docs/melonjs/Renderer.html#fill"},"vUucV2Ig7gptPyCGlYy6V":{"uri":"/docs/melonjs/Renderer.html#getBlendMode"},"csj6KbEJPKEZHuINjNhta":{"uri":"/docs/melonjs/Renderer.html#getCanvas"},"KCTczy3xZeVeV7zZzwyHL":{"uri":"/docs/melonjs/Renderer.html#getColor"},"CXFYZqbbVPIZyz_OfHG9P":{"uri":"/docs/melonjs/Renderer.html#getContext2d"},"uN9TpLGnc1Vp6oK-KxTHZ":{"uri":"/docs/melonjs/Renderer.html#getHeight"},"cL56K6LL9R-xpZzJbChYO":{"uri":"/docs/melonjs/Renderer.html#getScreenCanvas"},"qkgbYg6E6GN2ERDyO6I1T":{"uri":"/docs/melonjs/Renderer.html#getScreenContext"},"ymnTyRABLQUqo9j42QBm4":{"uri":"/docs/melonjs/Renderer.html#getWidth"},"c1QMnrAKmvhhqTGyBauzj":{"uri":"/docs/melonjs/Renderer.html#globalAlpha"},"iN8ZaCcB9ZVyCm8ODEGr1":{"uri":"/docs/melonjs/Renderer.html#overlaps"},"fetYFq1cNac5km4tE811J":{"uri":"/docs/melonjs/Renderer.html#reset"},"t7SWFtz4mq2Y0IC2Mv8a0":{"uri":"/docs/melonjs/Renderer.html#resize"},"-LQlB6PXkyZnQ7MH43Gz0":{"uri":"/docs/melonjs/Renderer.html#setAntiAlias"},"RgnkDQBLpPGox11m6dr_L":{"uri":"/docs/melonjs/Renderer.html#setMask"},"emqt75HdHXWAQ6zimqBVC":{"uri":"/docs/melonjs/Renderer.html#setProjection"},"LMITJwhG52gSrXNKviVAp":{"uri":"/docs/melonjs/Renderer.html#setTint"},"fgS2h706_KEtNdtLOt93l":{"uri":"/docs/melonjs/Renderer.html#stroke"},"yY3Mq1PF0cipvvUNb_guR":{"uri":"/docs/melonjs/Renderer.html#tint"},"5v1jacdoiybrU2-ZpUbi-":{"uri":"/docs/melonjs/RoundRect.html"},"utytTsCsfKiB2fXdyB1Je":{"uri":"/docs/melonjs/RoundRect.html#bottom"},"V1zhdAni5-VN9m9pN8Qae":{"uri":"/docs/melonjs/RoundRect.html#centerX"},"buOE9wH7qPfeqPsdekY6Y":{"uri":"/docs/melonjs/RoundRect.html#centerY"},"vpNjWbem7j667s9yz1F0p":{"uri":"/docs/melonjs/RoundRect.html#height"},"k-gKEwevSJMMoRNm3S4Mp":{"uri":"/docs/melonjs/RoundRect.html#left"},"J1eBz4sCrANbcI7MmAbsQ":{"uri":"/docs/melonjs/RoundRect.html#points"},"Fv5md7PS5RgYmdJq9Q-F6":{"uri":"/docs/melonjs/RoundRect.html#pos"},"vuvf7G8nyGijiomNY9lsC":{"uri":"/docs/melonjs/RoundRect.html#radius"},"b6Q4TLK5tMU6t-dCJvWzf":{"uri":"/docs/melonjs/RoundRect.html#right"},"72xvH1Az7LhTeFjAoEmE-":{"uri":"/docs/melonjs/RoundRect.html#top"},"7FQsl0tMMlIjqTPXmTDOi":{"uri":"/docs/melonjs/RoundRect.html#width"},"hfquV7wPdVMYJhL3IGbqc":{"uri":"/docs/melonjs/RoundRect.html#centerOn"},"ByxKMdVlZ_TfC4r9cWvLA":{"uri":"/docs/melonjs/RoundRect.html#clone"},"VaavR-ZXNQVrOAN3KkN2M":{"uri":"/docs/melonjs/RoundRect.html#constructor"},"LWDWFc1P9DvuL-VTVKWmJ":{"uri":"/docs/melonjs/RoundRect.html#contains"},"gik5JPnfoCMH2EQMK18s-":{"uri":"/docs/melonjs/RoundRect.html#copy"},"_Mkidz_sim1S0CWbUrGR0":{"uri":"/docs/melonjs/RoundRect.html#equals"},"Wf9qxCcoWcai14pTlHFBg":{"uri":"/docs/melonjs/RoundRect.html#getBounds"},"cyvjH24SWaq4cjrPCOdE7":{"uri":"/docs/melonjs/RoundRect.html#getIndices"},"pqof5w71t9Dxp2TcCVpTR":{"uri":"/docs/melonjs/RoundRect.html#isConvex"},"gVxM_EWSxV-XRMtxGzjBg":{"uri":"/docs/melonjs/RoundRect.html#isFinite"},"MTgJcjfDgkAq9cxiScrRA":{"uri":"/docs/melonjs/RoundRect.html#overlaps"},"2fCUyk5AnNxrB1AWIiCMD":{"uri":"/docs/melonjs/RoundRect.html#recalc"},"BiEq1suhahso467mQl7_D":{"uri":"/docs/melonjs/RoundRect.html#resize"},"XzQz_IYL_oe-Ocim4FKAW":{"uri":"/docs/melonjs/RoundRect.html#rotate"},"VaPDoC8e5MoPtmGAr_UE-":{"uri":"/docs/melonjs/RoundRect.html#scale"},"qeUppBXhAgbfwZb4ZIV2n":{"uri":"/docs/melonjs/RoundRect.html#scaleV"},"hRrHm9FCO9CWMj2Qy1w1W":{"uri":"/docs/melonjs/RoundRect.html#setShape"},"UKvB_niCurbLRYDp4Dt3V":{"uri":"/docs/melonjs/RoundRect.html#setVertices"},"csQp7abYpZ-Z_YiYPgegg":{"uri":"/docs/melonjs/RoundRect.html#shift"},"R13M2MbN7uztr-NV6AUfF":{"uri":"/docs/melonjs/RoundRect.html#to2d"},"txzqhnt1pwyMesKkYWuZN":{"uri":"/docs/melonjs/RoundRect.html#toIso"},"Lnj__GAjH9EbBNbQsR4s6":{"uri":"/docs/melonjs/RoundRect.html#toPolygon"},"-LvVUd70JFH3p_0aWpEAj":{"uri":"/docs/melonjs/RoundRect.html#transform"},"FOTOOIIJ2Q2grfWoRgvLE":{"uri":"/docs/melonjs/RoundRect.html#translate"},"Mi27DIdqO4vOdAtMg9edu":{"uri":"/docs/melonjs/RoundRect.html#union"},"g7mhufy4jKVNUQLSPmlkh":{"uri":"/docs/melonjs/RoundRect.html#contains"},"idQrBgV51C1vWQigjsWBS":{"uri":"/docs/melonjs/Sprite.html"},"1OdVM9JpUVwhwOI_wNzde":{"uri":"/docs/melonjs/Sprite.html#alpha"},"KaSj2yzvpjW5hmdcgIxLA":{"uri":"/docs/melonjs/Sprite.html#alwaysUpdate"},"YwJOqNs5vdgLlU65MrFBf":{"uri":"/docs/melonjs/Sprite.html#ancestor"},"WZwFScHAqz65hv0G2DjMj":{"uri":"/docs/melonjs/Sprite.html#anchorPoint"},"yn1jnN5jdTnZxS8_CADZH":{"uri":"/docs/melonjs/Sprite.html#animationpause"},"yVjmLAL2sMHQG-F2Bn6BL":{"uri":"/docs/melonjs/Sprite.html#animationspeed"},"kMBdjMGqz-W4LS3AJU1w6":{"uri":"/docs/melonjs/Sprite.html#autoTransform"},"3Lv9SeZb_l11ACo4XdHOF":{"uri":"/docs/melonjs/Sprite.html#blendMode"},"3ekvY2hnjLYGiVZcMdtyc":{"uri":"/docs/melonjs/Sprite.html#body"},"ADv47sDxIuHzksOh41-gv":{"uri":"/docs/melonjs/Sprite.html#bottom"},"egcBlV-iCGyCZKtPLUwFy":{"uri":"/docs/melonjs/Sprite.html#centerX"},"IIVeWC-Fap2uVF-Jyw1zj":{"uri":"/docs/melonjs/Sprite.html#centerY"},"Lj8m3THYqePPLsEmZatPK":{"uri":"/docs/melonjs/Sprite.html#currentTransform"},"OHei_ve24fIxFuwb2HjNc":{"uri":"/docs/melonjs/Sprite.html#floating"},"mSNApsh9KT3t3jTVv0fGs":{"uri":"/docs/melonjs/Sprite.html#GUID"},"2f1G_8flrrZVzD0uyShLx":{"uri":"/docs/melonjs/Sprite.html#height"},"EK4ttXnxJQmmBH855BK1N":{"uri":"/docs/melonjs/Sprite.html#inViewport"},"47ysEtU-FjQpCg04y6FNB":{"uri":"/docs/melonjs/Sprite.html#isDirty"},"U6QFwR9ZRYKjHuoUMY4Qx":{"uri":"/docs/melonjs/Sprite.html#isFlippedX"},"2PIldA_v1OhCfK2kYIGh3":{"uri":"/docs/melonjs/Sprite.html#isFlippedY"},"3pdCAzPAB5w0VeI1ei_BM":{"uri":"/docs/melonjs/Sprite.html#isFloating"},"3BaOOH7-2eQd0cE9Hs3hy":{"uri":"/docs/melonjs/Sprite.html#isKinematic"},"MZS_Z_k1czF3YIJWXyPWT":{"uri":"/docs/melonjs/Sprite.html#isPersistent"},"Qr60wwA3rXW_-H6T5G6qk":{"uri":"/docs/melonjs/Sprite.html#left"},"iXnFPGzQIT3pWziJ00wIX":{"uri":"/docs/melonjs/Sprite.html#mask"},"LWdnfayywWhjRDtguUzgj":{"uri":"/docs/melonjs/Sprite.html#name"},"M4-gJzkVp2roPIV6Y3NVX":{"uri":"/docs/melonjs/Sprite.html#offset"},"cykyA6A68JLVPOBrUrI6S":{"uri":"/docs/melonjs/Sprite.html#onVisibilityChange"},"CJJrpLJRLS139IzQNFu4b":{"uri":"/docs/melonjs/Sprite.html#points"},"4K9kZcdP5xcqEHGOaOera":{"uri":"/docs/melonjs/Sprite.html#pos"},"TTwQ8wOZUXf3N5x2yElSD":{"uri":"/docs/melonjs/Sprite.html#right"},"pCN4uriM0COAHjYz40UIC":{"uri":"/docs/melonjs/Sprite.html#source"},"wa3FLQMLkkkNoj9WPDT3z":{"uri":"/docs/melonjs/Sprite.html#tint"},"Bg6J-apJkx9ynESZxEFQk":{"uri":"/docs/melonjs/Sprite.html#top"},"rxbP5P8bce01Fo7hGq60D":{"uri":"/docs/melonjs/Sprite.html#updateWhenPaused"},"OGUsQ1pBi3t4LoQkEm0Rn":{"uri":"/docs/melonjs/Sprite.html#width"},"GbEoBin7OC0goOs3J3wmg":{"uri":"/docs/melonjs/Sprite.html#addAnimation"},"I-gEKUhotUhZq7IFWyNxL":{"uri":"/docs/melonjs/Sprite.html#angleTo"},"x4vYABdR_RCof60vv_HNS":{"uri":"/docs/melonjs/Sprite.html#centerOn"},"f8N8duCEvwmL3PUzwi_Uy":{"uri":"/docs/melonjs/Sprite.html#clone"},"QnC9YF0MeiAMnyo0U-ei5":{"uri":"/docs/melonjs/Sprite.html#constructor"},"sRnx6ymmypKgHKee9MJEP":{"uri":"/docs/melonjs/Sprite.html#contains"},"Os5C75DnH4ltb6akQWnvZ":{"uri":"/docs/melonjs/Sprite.html#copy"},"mlIPT18VJ8CchpdX3MO99":{"uri":"/docs/melonjs/Sprite.html#distanceTo"},"tazKF3WhY8vsopPOH25uP":{"uri":"/docs/melonjs/Sprite.html#equals"},"ygQ_TY_H5igD_Qblfuryu":{"uri":"/docs/melonjs/Sprite.html#flicker"},"ZC1wPFOcVD8PrCovg3aYC":{"uri":"/docs/melonjs/Sprite.html#flipX"},"U86p1ENRFcVfnkJLb-Lvu":{"uri":"/docs/melonjs/Sprite.html#flipY"},"5jZWi90dmqEnF6_4tDhxs":{"uri":"/docs/melonjs/Sprite.html#getAbsolutePosition"},"--yyBG3EIfYf_W5FhQiJA":{"uri":"/docs/melonjs/Sprite.html#getBounds"},"v1DquLyc1RidzGMdkARqi":{"uri":"/docs/melonjs/Sprite.html#getCurrentAnimationFrame"},"Ia-5ldFxGzvlEXFUcLWcm":{"uri":"/docs/melonjs/Sprite.html#getIndices"},"ELuAY6MYlktAAZ2RmzmjJ":{"uri":"/docs/melonjs/Sprite.html#getOpacity"},"cdnznRv3EmodUv_dm59jC":{"uri":"/docs/melonjs/Sprite.html#isConvex"},"qSJ8OdzWuUsOH9roniQek":{"uri":"/docs/melonjs/Sprite.html#isCurrentAnimation"},"pKA1T4o1FdrKLcGAjJqlk":{"uri":"/docs/melonjs/Sprite.html#isFinite"},"lAgW4UM69ck2TTZlRtqOA":{"uri":"/docs/melonjs/Sprite.html#isFlickering"},"bQqKpnMObZSrG1qIfLgX_":{"uri":"/docs/melonjs/Sprite.html#lookAt"},"X9vyC1qN9C2t7VPGBxCXT":{"uri":"/docs/melonjs/Sprite.html#onCollision"},"IJRrCfHO4sDGMHK-wrbrI":{"uri":"/docs/melonjs/Sprite.html#onDestroyEvent"},"vt-16WMu85W3Xn7UO-kJw":{"uri":"/docs/melonjs/Sprite.html#overlaps"},"UrkDy61GT5mHu-vFwYs85":{"uri":"/docs/melonjs/Sprite.html#recalc"},"I53TZTfUBSMtW2M-ocCpd":{"uri":"/docs/melonjs/Sprite.html#resize"},"ppOP3Tdhm37uJLorXZp9k":{"uri":"/docs/melonjs/Sprite.html#reverseAnimation"},"fOC2POhkykTb6Cb3j9udu":{"uri":"/docs/melonjs/Sprite.html#rotate"},"Q4ud5JnoEcrorwfr3Fc8H":{"uri":"/docs/melonjs/Sprite.html#scale"},"6rC-5NR1OWfpXDqNQFYIc":{"uri":"/docs/melonjs/Sprite.html#scaleV"},"2cUOwhRjbtPZ06WOs4ZOE":{"uri":"/docs/melonjs/Sprite.html#setAnimationFrame"},"4I3qLNvSXYIv2S8xreUHG":{"uri":"/docs/melonjs/Sprite.html#setCurrentAnimation"},"Bqp_Tc4Mn5s_05C8rzmTq":{"uri":"/docs/melonjs/Sprite.html#setOpacity"},"W7zG9_SXuuFr_GKA8Ys4v":{"uri":"/docs/melonjs/Sprite.html#setRegion"},"abe1j6QXATDSD8aqV4-ax":{"uri":"/docs/melonjs/Sprite.html#setShape"},"21lnlUH8S1oHtdICsUMAd":{"uri":"/docs/melonjs/Sprite.html#setVertices"},"l1kbLCjJpfE0-_9bkAG7B":{"uri":"/docs/melonjs/Sprite.html#shift"},"TJPLSb1R_kgs5nHA1nNxx":{"uri":"/docs/melonjs/Sprite.html#to2d"},"YIVRp5lNwPep0tiMy_U7b":{"uri":"/docs/melonjs/Sprite.html#toIso"},"F-j80D99jJGGislNykgcK":{"uri":"/docs/melonjs/Sprite.html#toPolygon"},"t3K5zr9UnrzV5BlTUqYPm":{"uri":"/docs/melonjs/Sprite.html#transform"},"QEAKPUvFdVlQbguADeLJH":{"uri":"/docs/melonjs/Sprite.html#translate"},"tHnCTtO1yL2x7ClFnOAbC":{"uri":"/docs/melonjs/Sprite.html#union"},"nDjI_wqV3C1Ppf10Sta_X":{"uri":"/docs/melonjs/Sprite.html#draw"},"S2AVI3VDmkFFVQVBq06yj":{"uri":"/docs/melonjs/Sprite.html#postDraw"},"76jRYS2rhAVGnnm40oLbZ":{"uri":"/docs/melonjs/Sprite.html#preDraw"},"LZsH9CP_rfBta1DNMsmKH":{"uri":"/docs/melonjs/Sprite.html#update"},"0yIMWN7DmbEc4WaxqtjqP":{"uri":"/docs/melonjs/Sprite.html#onAnchorUpdate"},"Ud58O-yiNJRBXydSf9-uT":{"uri":"/docs/melonjs/Stage.html"},"jqTlYXiBCpkWfcaz7jyys":{"uri":"/docs/melonjs/Stage.html#ambientLight"},"BGphUxdcMjltC3zvqpnBE":{"uri":"/docs/melonjs/Stage.html#cameras"},"Nilq-AqhptuSfl3SDqaXM":{"uri":"/docs/melonjs/Stage.html#lights"},"x5jabFma8bM8OtKBP9KvF":{"uri":"/docs/melonjs/Stage.html#settings"},"4DvEWGAVUuzm6UCAMrDH_":{"uri":"/docs/melonjs/Stage.html#constructor"},"AQjow3Jy9ACxSkZa-w7LR":{"uri":"/docs/melonjs/Stage.html#onDestroyEvent"},"WA1u9r03sTbBsyDm05cfj":{"uri":"/docs/melonjs/Stage.html#onResetEvent"},"poYISlIt7CfD8gKPq-oqT":{"uri":"/docs/melonjs/Text.html"},"3hLix5ewDO6BLOrKp6vMN":{"uri":"/docs/melonjs/Text.html#alpha"},"vuTkaoVo73foli3muWur3":{"uri":"/docs/melonjs/Text.html#alwaysUpdate"},"f2y8FWgG6c4HDUJcOBgXN":{"uri":"/docs/melonjs/Text.html#ancestor"},"tX6QrtdNWlwW3TbmF-P5S":{"uri":"/docs/melonjs/Text.html#anchorPoint"},"93IYRgsz_tlZVjUVri0gF":{"uri":"/docs/melonjs/Text.html#autoTransform"},"cxzPeb88fcCRzpfCP0mwA":{"uri":"/docs/melonjs/Text.html#blendMode"},"A87ILvHg63mCYdO4H42Og":{"uri":"/docs/melonjs/Text.html#body"},"Rrj5G2EU85yZ7Ge2kAguQ":{"uri":"/docs/melonjs/Text.html#bottom"},"8qUSnYhcRaoQX4MU4Wzll":{"uri":"/docs/melonjs/Text.html#centerX"},"_Uia_Gf75DkFNN3Bkctjy":{"uri":"/docs/melonjs/Text.html#centerY"},"hd-Hi5fYKzHusQIw41lQq":{"uri":"/docs/melonjs/Text.html#currentTransform"},"dOiAMaP_G-uCC9twpcLar":{"uri":"/docs/melonjs/Text.html#fillStyle"},"OJy5wCuNLbjKESlTJl8Kl":{"uri":"/docs/melonjs/Text.html#floating"},"d2Gnu_geJZD7CHahAybNW":{"uri":"/docs/melonjs/Text.html#fontSize"},"ti546XaJH7vu18_BPE5-o":{"uri":"/docs/melonjs/Text.html#GUID"},"Rqu31mQHsRW3Zez25u90s":{"uri":"/docs/melonjs/Text.html#height"},"NaqEGVv14wQ-2_sgmoIXn":{"uri":"/docs/melonjs/Text.html#inViewport"},"W1m-YiAx0_TjYW1wwm4VX":{"uri":"/docs/melonjs/Text.html#isDirty"},"KaYYZg-PP_NxDxJFJzDZ0":{"uri":"/docs/melonjs/Text.html#isFlippedX"},"SP1oaey_gbPRcAIuAyWxE":{"uri":"/docs/melonjs/Text.html#isFlippedY"},"9CEiyIgUZuEAae6GMY-1A":{"uri":"/docs/melonjs/Text.html#isFloating"},"-bk8ym4lOOpNmK9CwfMN_":{"uri":"/docs/melonjs/Text.html#isKinematic"},"2o811yfMNimR8L0KETbnp":{"uri":"/docs/melonjs/Text.html#isPersistent"},"tn06C5i8GaBECira3EeZx":{"uri":"/docs/melonjs/Text.html#left"},"e3xl1asAx4cEHy_Dt1q2j":{"uri":"/docs/melonjs/Text.html#lineHeight"},"Vr1WYcxXq9zyrMZdcrVop":{"uri":"/docs/melonjs/Text.html#lineWidth"},"MBfOkBRdtJA1KYyjs4Wq1":{"uri":"/docs/melonjs/Text.html#mask"},"BoJ_LwlRejTQeaZDhDEi9":{"uri":"/docs/melonjs/Text.html#name"},"2MK9jZF6aywVZc3Nbdx0H":{"uri":"/docs/melonjs/Text.html#offScreenCanvas"},"mCDILnf09h4veTnFgwG38":{"uri":"/docs/melonjs/Text.html#onVisibilityChange"},"fLOLl0MZi-JwFaXtrHCEC":{"uri":"/docs/melonjs/Text.html#points"},"FyikEVK8mjs65Xg5DGTr9":{"uri":"/docs/melonjs/Text.html#pos"},"cTW-Ezb7UZt-6uDo5DKe2":{"uri":"/docs/melonjs/Text.html#right"},"aN7qeLPcInS2FCVBSx_xh":{"uri":"/docs/melonjs/Text.html#textAlign"},"Cnc3BrzmxQ5RnxT-TpDg7":{"uri":"/docs/melonjs/Text.html#textBaseline"},"dvbFEE1rlimymSfvkmjcW":{"uri":"/docs/melonjs/Text.html#tint"},"FUUvI7h8zbkD-WY_alWTT":{"uri":"/docs/melonjs/Text.html#top"},"CFYAMBMVwYQdo4EYuIUXi":{"uri":"/docs/melonjs/Text.html#updateWhenPaused"},"lPR51i1Y8rGItXmI4JyBS":{"uri":"/docs/melonjs/Text.html#width"},"3VEIDa0GNk7SON0hwh-71":{"uri":"/docs/melonjs/Text.html#wordWrapWidth"},"iO6KPgdGrD80tIWB8vZBg":{"uri":"/docs/melonjs/Text.html#_text"},"dUgUDwNa26rySJrYpt165":{"uri":"/docs/melonjs/Text.html#angleTo"},"WzEfNe1ZdrgkURazAa3Vj":{"uri":"/docs/melonjs/Text.html#bold"},"xfmodNiTonZ6tFCloOCxC":{"uri":"/docs/melonjs/Text.html#centerOn"},"vj0CqpaZoZcGIqCl7y_V7":{"uri":"/docs/melonjs/Text.html#clone"},"z8Lcoxma9jiGJcgNWiFO1":{"uri":"/docs/melonjs/Text.html#constructor"},"RrhVWFa2sq6HlOzv906Hn":{"uri":"/docs/melonjs/Text.html#contains"},"pRFnAxO2oVazVhDr9lcAZ":{"uri":"/docs/melonjs/Text.html#copy"},"KiiCO9LfK6kR4m2s8AIiv":{"uri":"/docs/melonjs/Text.html#distanceTo"},"fTrm_z0OgRIAexEosBauH":{"uri":"/docs/melonjs/Text.html#draw"},"H2nCGLRM-5H4TyDP-YxrV":{"uri":"/docs/melonjs/Text.html#drawStroke"},"-7OrB1DbTmdH9dqHR3aUO":{"uri":"/docs/melonjs/Text.html#equals"},"wMUS9xeygOV7MG8-Ut_op":{"uri":"/docs/melonjs/Text.html#flipX"},"T3rAo7GhAQDFsCeafRZVQ":{"uri":"/docs/melonjs/Text.html#flipY"},"fhSUpzG5I2ZDeRjqqn8wg":{"uri":"/docs/melonjs/Text.html#getAbsolutePosition"},"nOLIKzqtYLyaXPT_ZB3EX":{"uri":"/docs/melonjs/Text.html#getBounds"},"vsnCfgCgSyxV4_MIMF_L_":{"uri":"/docs/melonjs/Text.html#getIndices"},"jGlvvM6DTZGQ8_G8So47w":{"uri":"/docs/melonjs/Text.html#getOpacity"},"UChxIoOp2Uc9VQZzUhD81":{"uri":"/docs/melonjs/Text.html#isConvex"},"OU64TMLH2fmPY_UWPxHlu":{"uri":"/docs/melonjs/Text.html#isFinite"},"E4m-k65h5ciIq8kckrLTi":{"uri":"/docs/melonjs/Text.html#italic"},"gy6JTcaeIN7b_sw-bHK_9":{"uri":"/docs/melonjs/Text.html#lookAt"},"pVlpYOrO0QrigpbMJ31LU":{"uri":"/docs/melonjs/Text.html#measureText"},"iBBNZF4PYA8Fx5_uIQ7Xk":{"uri":"/docs/melonjs/Text.html#onCollision"},"LkykBd1fyJkSCoFWpYGQ9":{"uri":"/docs/melonjs/Text.html#onDestroyEvent"},"YZHhGploC4KI5L6NM6lrT":{"uri":"/docs/melonjs/Text.html#overlaps"},"1n99y29ebudDbzVNa8PWv":{"uri":"/docs/melonjs/Text.html#recalc"},"rll96FJQkHB37DKkGN0OU":{"uri":"/docs/melonjs/Text.html#resize"},"f4BgJ1nMZfxTdE8qCVqgp":{"uri":"/docs/melonjs/Text.html#rotate"},"S32SrpcoYnVwDOBRF-CnE":{"uri":"/docs/melonjs/Text.html#scale"},"FJKPDpBsdurBjjR3TdrS_":{"uri":"/docs/melonjs/Text.html#scaleV"},"LcjxNIseyY9ocBfKKpujh":{"uri":"/docs/melonjs/Text.html#setFont"},"etkTOc5uODamwvKYNG9ga":{"uri":"/docs/melonjs/Text.html#setOpacity"},"i00v4d64N9W6bey1MOke9":{"uri":"/docs/melonjs/Text.html#setShape"},"pGjgwqrD3mHbrzocKeJp3":{"uri":"/docs/melonjs/Text.html#setText"},"VM4_sVP5n8iPQmg1Ot9vt":{"uri":"/docs/melonjs/Text.html#setVertices"},"qm5q-1DCHSxNw5fycBQo4":{"uri":"/docs/melonjs/Text.html#shift"},"jxHCsBbQ9sWmooQ6fALoR":{"uri":"/docs/melonjs/Text.html#to2d"},"rO16HiretB_cxWBxk0iu9":{"uri":"/docs/melonjs/Text.html#toIso"},"BJ_j7LVDGYZJc8LlVuzG-":{"uri":"/docs/melonjs/Text.html#toPolygon"},"DlUX9LAohQ_JrfXMJtau4":{"uri":"/docs/melonjs/Text.html#transform"},"rB1fx_To8rNbb2Z3ENbR4":{"uri":"/docs/melonjs/Text.html#translate"},"uwyl253AoSr_8weDKGP1k":{"uri":"/docs/melonjs/Text.html#union"},"1FBFnaxIc77w7wgnlBdoT":{"uri":"/docs/melonjs/Text.html#postDraw"},"ZClYJtxjPEMJ63kUNKfD8":{"uri":"/docs/melonjs/Text.html#preDraw"},"C75Ct1uJLQ1rmwhISO3eg":{"uri":"/docs/melonjs/Text.html#update"},"t3Iaz5vUKhjk0CDNNZSDr":{"uri":"/docs/melonjs/Text.html#onAnchorUpdate"},"PyDwM_IRsVgiPYO6JlgZP":{"uri":"/docs/melonjs/TextMetrics.html"},"iNJ_eVZpbQRXo8pVh_0gp":{"uri":"/docs/melonjs/TextMetrics.html#ancestor"},"t1KmgP88lshkCLm2wGAUu":{"uri":"/docs/melonjs/TextMetrics.html#bottom"},"6nYtYITUCDbx1sHP90K4O":{"uri":"/docs/melonjs/TextMetrics.html#center"},"DtEYo-9LlfJdTYEh3aZXk":{"uri":"/docs/melonjs/TextMetrics.html#centerX"},"QmKtxOakiPyVGwnf5KqHh":{"uri":"/docs/melonjs/TextMetrics.html#centerY"},"KQjThPbCc5HQgnsY7Ijoe":{"uri":"/docs/melonjs/TextMetrics.html#left"},"ckSTju4tTClCzes0CA1NM":{"uri":"/docs/melonjs/TextMetrics.html#right"},"bInwtRNH6QJP654iZLAY2":{"uri":"/docs/melonjs/TextMetrics.html#top"},"l2iFiPH36zdBDy9NT2Ej3":{"uri":"/docs/melonjs/TextMetrics.html#width"},"tb2B6sjTYxyBej-V1_ezP":{"uri":"/docs/melonjs/TextMetrics.html#x"},"nGQdbvq5uX8-nY7yXAtuf":{"uri":"/docs/melonjs/TextMetrics.html#y"},"iXmZWyo-hhzkdGqblDn__":{"uri":"/docs/melonjs/TextMetrics.html#add"},"tigwWm-iwF3ytpzhJuuKP":{"uri":"/docs/melonjs/TextMetrics.html#addBounds"},"brJLsE31c2G3P7wXo4-oh":{"uri":"/docs/melonjs/TextMetrics.html#addFrame"},"4XjtVF6Ym9A8qi7PESGR3":{"uri":"/docs/melonjs/TextMetrics.html#addPoint"},"j7f8v6-lPhf89fL0f56QJ":{"uri":"/docs/melonjs/TextMetrics.html#clear"},"IuJdbK-1YuECoRD87wKIK":{"uri":"/docs/melonjs/TextMetrics.html#clone"},"12Ar1KdwirMY6f_0INRu4":{"uri":"/docs/melonjs/TextMetrics.html#constructor"},"tYMiTGm0oFuILbkrw0ZSC":{"uri":"/docs/melonjs/TextMetrics.html#contains"},"dVgDvZXra8W4OQp2PBZRB":{"uri":"/docs/melonjs/TextMetrics.html#isFinite"},"0_DZtP5HHzlbGoEJYh5Ir":{"uri":"/docs/melonjs/TextMetrics.html#lineHeight"},"1ZbAFxJ7Wrr2M1jHAXMMi":{"uri":"/docs/melonjs/TextMetrics.html#lineWidth"},"ur1bz8hV7EHzmk8xYWwNp":{"uri":"/docs/melonjs/TextMetrics.html#measureText"},"vGb31TQ0OScnATBju1eem":{"uri":"/docs/melonjs/TextMetrics.html#overlaps"},"lSIHWSr2BF-6OHPWYszuR":{"uri":"/docs/melonjs/TextMetrics.html#setMinMax"},"hD6jIM97JiVpfn1Yznomt":{"uri":"/docs/melonjs/TextMetrics.html#shift"},"TVUJZESyewdqNdmahECL6":{"uri":"/docs/melonjs/TextMetrics.html#toPolygon"},"FHHw8_ECUUW7AyVJ46al3":{"uri":"/docs/melonjs/TextMetrics.html#translate"},"tlS4zfPOyJbrsp6N_yogo":{"uri":"/docs/melonjs/TextMetrics.html#update"},"mfKGpOHxOl8qD3ACIicSV":{"uri":"/docs/melonjs/TextMetrics.html#wordWrap"},"nmiJQqmaQqjvtalXM1HLd":{"uri":"/docs/melonjs/TextureAtlas.html"},"w2l9eEUC2fuzaAcvTe2v3":{"uri":"/docs/melonjs/TextureAtlas.html#addRegion"},"JhfZ24mjbNEasoHd5hAOa":{"uri":"/docs/melonjs/TextureAtlas.html#addUVs"},"ZGsH9zIjO6qMItx19ROwz":{"uri":"/docs/melonjs/TextureAtlas.html#constructor"},"tLha3l606l0AndAQ10X5y":{"uri":"/docs/melonjs/TextureAtlas.html#createAnimationFromName"},"KPZuHKQebk6R1KiWj5zge":{"uri":"/docs/melonjs/TextureAtlas.html#createSpriteFromName"},"JZTaW7VaG3a9pYol6O4H1":{"uri":"/docs/melonjs/TextureAtlas.html#getAtlas"},"I19BYgpdOMckIZsBOD_00":{"uri":"/docs/melonjs/TextureAtlas.html#getFormat"},"ZruyDdN8SI6ADLkDPUh4S":{"uri":"/docs/melonjs/TextureAtlas.html#getRegion"},"xs9e9PellDBv9QMV8ULJb":{"uri":"/docs/melonjs/TextureAtlas.html#getTexture"},"sQkTFl_vPXf_NvVPW1tZd":{"uri":"/docs/melonjs/TextureAtlas.html#getUVs"},"03A0KS0tegN6NOoD-1_oe":{"uri":"/docs/melonjs/Tile.html"},"rcjyaToOCzuuHElII8-Db":{"uri":"/docs/melonjs/Tile.html#bottom"},"hPHseCK_fqBc5X6fGKVb9":{"uri":"/docs/melonjs/Tile.html#center"},"FldZSP5px2wIG0EL2iOpG":{"uri":"/docs/melonjs/Tile.html#centerX"},"5QvixXefa5v2vWwm56-ar":{"uri":"/docs/melonjs/Tile.html#centerY"},"nGHZKOawfxXfTrok2i4Ph":{"uri":"/docs/melonjs/Tile.html#flipped"},"_-zsgI7-w_uayu-X58GYm":{"uri":"/docs/melonjs/Tile.html#flippedAD"},"wnt0t21OiTqYLY_vH7jES":{"uri":"/docs/melonjs/Tile.html#flippedY"},"TgUptgYY_ji7jHS3nEWIt":{"uri":"/docs/melonjs/Tile.html#flipX"},"LdDPK5ICktUOqpxz_4TLR":{"uri":"/docs/melonjs/Tile.html#left"},"QqBrJa4wkb4CZbmILCxK4":{"uri":"/docs/melonjs/Tile.html#right"},"byXh0FM2jy_EzrNPdHHnc":{"uri":"/docs/melonjs/Tile.html#tileId"},"wEI_lvgF58H5YTKiqgqgz":{"uri":"/docs/melonjs/Tile.html#tileset"},"dEAWruibvoxUE52F0w4Ym":{"uri":"/docs/melonjs/Tile.html#top"},"MjC8XC5pxiLokzAf0KlWa":{"uri":"/docs/melonjs/Tile.html#width"},"0fqBRL4Ew6e9_D6VVarWZ":{"uri":"/docs/melonjs/Tile.html#x"},"dJOnUVorcdp6DIcVgQc6b":{"uri":"/docs/melonjs/Tile.html#y"},"jj3TpRz-szRxNcqzsvAzP":{"uri":"/docs/melonjs/Tile.html#add"},"qiMVTi1GAR8IkwzOisAZ7":{"uri":"/docs/melonjs/Tile.html#addBounds"},"IU15RZAfaNkYlqJGlHDDh":{"uri":"/docs/melonjs/Tile.html#addFrame"},"szMmpMeqabNeFJ44BNV1j":{"uri":"/docs/melonjs/Tile.html#addPoint"},"E6PFHimn4vPvMtzE0tvQp":{"uri":"/docs/melonjs/Tile.html#clear"},"KQkTbRhy3qnq5auHWzBvC":{"uri":"/docs/melonjs/Tile.html#clone"},"paIPymOVxFjS9xIcD4apw":{"uri":"/docs/melonjs/Tile.html#constructor"},"WOq5oc74oc8fnf-ndbfao":{"uri":"/docs/melonjs/Tile.html#contains"},"l03VobN5DfFQHIu9Ovt4F":{"uri":"/docs/melonjs/Tile.html#getRenderable"},"vxsANBITtHmm_fG-W7bo2":{"uri":"/docs/melonjs/Tile.html#isFinite"},"Mj51mKz-BbgxRxFP10MVn":{"uri":"/docs/melonjs/Tile.html#overlaps"},"nHFVmNAOoKJ8zMqAeg9jI":{"uri":"/docs/melonjs/Tile.html#setMinMax"},"9fiW4C9jf9RsyKZcCYp0B":{"uri":"/docs/melonjs/Tile.html#shift"},"9ebMexQ-WsPBJjDKNI7b-":{"uri":"/docs/melonjs/Tile.html#toPolygon"},"iQt6dBQUWVuJu-FA3NJGW":{"uri":"/docs/melonjs/Tile.html#translate"},"-q8UkAxtPFqOB0GVbGMvi":{"uri":"/docs/melonjs/Tile.html#update"},"FwLsZEZm5j0m7pNbzcdBI":{"uri":"/docs/melonjs/Timer.html"},"Cb_ubSLNsQZOYgg97gm1d":{"uri":"/docs/melonjs/TMXHexagonalRenderer.html"},"-a-I-mIf9A4CgWbMxEc8l":{"uri":"/docs/melonjs/TMXHexagonalRenderer.html#canRender"},"eSXY8Ae71LYOvN6xCmKGf":{"uri":"/docs/melonjs/TMXHexagonalRenderer.html#constructor"},"ahknEbxYkoMLDEhKkj-WS":{"uri":"/docs/melonjs/TMXHexagonalRenderer.html#drawTile"},"_SAUn4QWfEXFznBoiHN9C":{"uri":"/docs/melonjs/TMXHexagonalRenderer.html#drawTileLayer"},"ioa32gdKU0D3G8omGy4o3":{"uri":"/docs/melonjs/TMXHexagonalRenderer.html#getBounds"},"CCusH5pQbaE4PySOezNbl":{"uri":"/docs/melonjs/TMXHexagonalRenderer.html#pixelToTileCoords"},"jChOIjWLHBHm5YZRpUktT":{"uri":"/docs/melonjs/TMXHexagonalRenderer.html#tileToPixelCoords"},"m7RESS2YDyUp9xptj5n5j":{"uri":"/docs/melonjs/TMXIsometricRenderer.html"},"eoHShfsQ4SmqPAk0HoIy8":{"uri":"/docs/melonjs/TMXIsometricRenderer.html#canRender"},"KYvBwC50aRtJLO5MTJDtx":{"uri":"/docs/melonjs/TMXIsometricRenderer.html#constructor"},"4Rd7e_xiyImOTQvzsDs24":{"uri":"/docs/melonjs/TMXIsometricRenderer.html#drawTile"},"DeK6mZhDPyfnLYyFIPI28":{"uri":"/docs/melonjs/TMXIsometricRenderer.html#drawTileLayer"},"uaMMZcj-l3eK3I0cVUko9":{"uri":"/docs/melonjs/TMXIsometricRenderer.html#getBounds"},"8iqddqPWuN1hYjI2hpMTo":{"uri":"/docs/melonjs/TMXIsometricRenderer.html#pixelToTileCoords"},"9-mbI_Mswd7-jiBjfUDks":{"uri":"/docs/melonjs/TMXIsometricRenderer.html#tileToPixelCoords"},"8-2vgRxjps1LJVIgkjjv5":{"uri":"/docs/melonjs/TMXLayer.html"},"PZw9oEIq1lks1kOF28F04":{"uri":"/docs/melonjs/TMXLayer.html#alpha"},"vT3TpTbse9IyV47f_S_D0":{"uri":"/docs/melonjs/TMXLayer.html#alwaysUpdate"},"ias7PKdum4gWLr3MAqXsA":{"uri":"/docs/melonjs/TMXLayer.html#ancestor"},"0LLYQplvIjKm0hD6wIq3N":{"uri":"/docs/melonjs/TMXLayer.html#anchorPoint"},"eHGu8CrozBt1hlNTEveO9":{"uri":"/docs/melonjs/TMXLayer.html#autoTransform"},"-oiBTN1FeC8xoy_Jjuo3Q":{"uri":"/docs/melonjs/TMXLayer.html#blendMode"},"5u29PpsV8wwNmBBjv5jze":{"uri":"/docs/melonjs/TMXLayer.html#body"},"KsniUGZ0DVSwc4PVuQcV3":{"uri":"/docs/melonjs/TMXLayer.html#bottom"},"70iWQ2_dE93a_bKWaNtNJ":{"uri":"/docs/melonjs/TMXLayer.html#centerX"},"cp67vZatqIDRMGD5uzqia":{"uri":"/docs/melonjs/TMXLayer.html#centerY"},"WeRN-nvusGtHGDwDrORZJ":{"uri":"/docs/melonjs/TMXLayer.html#currentTransform"},"LeZwQN68OHCIUv_t4j-3N":{"uri":"/docs/melonjs/TMXLayer.html#floating"},"QkTREjWOCkDrka7jJIjXo":{"uri":"/docs/melonjs/TMXLayer.html#GUID"},"y877b3ONqjQr0YQzRqLrv":{"uri":"/docs/melonjs/TMXLayer.html#height"},"T8GIZsuVo0-17kTsMaUf2":{"uri":"/docs/melonjs/TMXLayer.html#inViewport"},"gq8Q1G0YkAUb72ZaJ_3ke":{"uri":"/docs/melonjs/TMXLayer.html#isAnimated"},"DZTjISCdUwe5UyIwGwl-B":{"uri":"/docs/melonjs/TMXLayer.html#isDirty"},"9kUF8ecw8eePx2jx_0yxG":{"uri":"/docs/melonjs/TMXLayer.html#isFlippedX"},"nViIWEVLaL_kIvXIPgFNS":{"uri":"/docs/melonjs/TMXLayer.html#isFlippedY"},"QOGH5YZxyu8v1GRwhubO2":{"uri":"/docs/melonjs/TMXLayer.html#isFloating"},"tv9TLRZC13Oc3ys242Cd3":{"uri":"/docs/melonjs/TMXLayer.html#isKinematic"},"W2us0PfMrGvQtuIl6uj1c":{"uri":"/docs/melonjs/TMXLayer.html#isPersistent"},"rUirEUa3FjY_manev1sYe":{"uri":"/docs/melonjs/TMXLayer.html#left"},"cDropQaRj6bXS-Esr3sD4":{"uri":"/docs/melonjs/TMXLayer.html#mask"},"3undYQ4KQskrLxzTXpPT1":{"uri":"/docs/melonjs/TMXLayer.html#name"},"2peDOpHtTrY20CMTgW6Su":{"uri":"/docs/melonjs/TMXLayer.html#onVisibilityChange"},"3jr2l1WAdC-6Au6U-41PC":{"uri":"/docs/melonjs/TMXLayer.html#points"},"TwJ8P2MZcZ7MnNzMe7IXS":{"uri":"/docs/melonjs/TMXLayer.html#pos"},"g0LFlXXVJgLP7jhF45QZM":{"uri":"/docs/melonjs/TMXLayer.html#renderorder"},"AEmRwQOhHyi9tKr53MQij":{"uri":"/docs/melonjs/TMXLayer.html#right"},"LCI6Rm19J3yrNcdXvlYGL":{"uri":"/docs/melonjs/TMXLayer.html#tilesets"},"42VMwDRL6DrDhYLLMCDPi":{"uri":"/docs/melonjs/TMXLayer.html#tint"},"B9-h5lN6C_pRbH2EUTcm7":{"uri":"/docs/melonjs/TMXLayer.html#top"},"Q2aE0yZLK6Dsk0Y8AcDqM":{"uri":"/docs/melonjs/TMXLayer.html#updateWhenPaused"},"dbGHKc61bi9CF_snQPWIN":{"uri":"/docs/melonjs/TMXLayer.html#width"},"O1Jql0C5CmHBTITRDMzWq":{"uri":"/docs/melonjs/TMXLayer.html#angleTo"},"gVFu-PwivSTl-QxJYZHPS":{"uri":"/docs/melonjs/TMXLayer.html#cellAt"},"7NhTzykKDXq7vbyvSwP2U":{"uri":"/docs/melonjs/TMXLayer.html#centerOn"},"yXxKqdR9nIEreURvjh7Lg":{"uri":"/docs/melonjs/TMXLayer.html#clearTile"},"odISl5Inlg8Hz2Jihxpu7":{"uri":"/docs/melonjs/TMXLayer.html#clone"},"_vWpR_tngmRc9bnAS2Wvr":{"uri":"/docs/melonjs/TMXLayer.html#constructor"},"qhrzACuSL3VMhad2ncnhv":{"uri":"/docs/melonjs/TMXLayer.html#contains"},"SrJWjU-3BgFYPbVjr-OfG":{"uri":"/docs/melonjs/TMXLayer.html#copy"},"pTjKKCLYXTVem6z7d9urP":{"uri":"/docs/melonjs/TMXLayer.html#distanceTo"},"6iT9qNz76S_HIDCNGwzho":{"uri":"/docs/melonjs/TMXLayer.html#equals"},"JABFiSC_iIX0eZ6Ivv74I":{"uri":"/docs/melonjs/TMXLayer.html#flipX"},"WldpVPd9N2p6dLyF3HLrp":{"uri":"/docs/melonjs/TMXLayer.html#flipY"},"bT4v9wFThdfhVpOnP8W0b":{"uri":"/docs/melonjs/TMXLayer.html#getAbsolutePosition"},"FScjMGTEgm23yp_esBYrE":{"uri":"/docs/melonjs/TMXLayer.html#getBounds"},"eJ5DvAQ8gjl32NF34eA8r":{"uri":"/docs/melonjs/TMXLayer.html#getIndices"},"GUPQsY4f3QU6hank15Uvj":{"uri":"/docs/melonjs/TMXLayer.html#getOpacity"},"9FY5Wr8aJEsUoBxx2FtEr":{"uri":"/docs/melonjs/TMXLayer.html#getRenderer"},"YXzD1nKqD9No7buyKvykR":{"uri":"/docs/melonjs/TMXLayer.html#getTile"},"vGVmtOnsDtcJ-FuwI-BLD":{"uri":"/docs/melonjs/TMXLayer.html#getTile"},"2UPr__5MpD9j7P4nSb6mc":{"uri":"/docs/melonjs/TMXLayer.html#getTileId"},"IRwhAY8_3d5dQsJSXSSKn":{"uri":"/docs/melonjs/TMXLayer.html#isConvex"},"7oUJJ_w8Li1DoXqYek0_C":{"uri":"/docs/melonjs/TMXLayer.html#isFinite"},"GDy5_A2KnYU-VPgCrS-i3":{"uri":"/docs/melonjs/TMXLayer.html#lookAt"},"ZegietpxXk7arCH_RZ5pd":{"uri":"/docs/melonjs/TMXLayer.html#onCollision"},"2Ns2BQz3y4ESXTdQa5lU_":{"uri":"/docs/melonjs/TMXLayer.html#onDestroyEvent"},"NuSARC9teGsXfuzgtfeX_":{"uri":"/docs/melonjs/TMXLayer.html#overlaps"},"YPfWwf1aEhlmPF6xzuNzv":{"uri":"/docs/melonjs/TMXLayer.html#recalc"},"WFXyeRAc1SM319IVpLJKA":{"uri":"/docs/melonjs/TMXLayer.html#resize"},"b-FWtfene_WTg6KBooMB4":{"uri":"/docs/melonjs/TMXLayer.html#rotate"},"idPEXL950E9-fgRYw8f8X":{"uri":"/docs/melonjs/TMXLayer.html#scale"},"CXAQOjqR1_oKEeYk7XC-S":{"uri":"/docs/melonjs/TMXLayer.html#scaleV"},"01YLl5CxMLLHgUtAb_FYU":{"uri":"/docs/melonjs/TMXLayer.html#setOpacity"},"m8b1uC6cMc5xZ203KL9mm":{"uri":"/docs/melonjs/TMXLayer.html#setRenderer"},"rRvK-dYVvPyNqPrzRl3xL":{"uri":"/docs/melonjs/TMXLayer.html#setShape"},"R5CFRw0Ft2d1MmvZ6voS6":{"uri":"/docs/melonjs/TMXLayer.html#setTile"},"BGzqMisDuo9NimLh9FgKe":{"uri":"/docs/melonjs/TMXLayer.html#setVertices"},"mBDxjMCtRnVKGqSXnrNxQ":{"uri":"/docs/melonjs/TMXLayer.html#shift"},"tEbufQQDM3KmUkbSSnVn1":{"uri":"/docs/melonjs/TMXLayer.html#to2d"},"u0BQeT-CZW1t5nBrcXi_a":{"uri":"/docs/melonjs/TMXLayer.html#toIso"},"aQohg-9rxKzvhLHBopPdr":{"uri":"/docs/melonjs/TMXLayer.html#toPolygon"},"vuF6G2CWmgFRWJONS5k1l":{"uri":"/docs/melonjs/TMXLayer.html#transform"},"Vv1DWJ-9HG6yEKOTDp3qK":{"uri":"/docs/melonjs/TMXLayer.html#translate"},"hbcIG9lEnqYWTHCAJCEtV":{"uri":"/docs/melonjs/TMXLayer.html#union"},"hsE4HIh6KIETyMKRvL_KL":{"uri":"/docs/melonjs/TMXLayer.html#draw"},"fwWZDhAHvkS2dQXveVNmN":{"uri":"/docs/melonjs/TMXLayer.html#postDraw"},"iOf0qGx3tYZQA5BdPtGyf":{"uri":"/docs/melonjs/TMXLayer.html#preDraw"},"rY5WQMh41O32qUhfNQbe8":{"uri":"/docs/melonjs/TMXLayer.html#update"},"Q0zE2V57NJ0Z-2OqA9kun":{"uri":"/docs/melonjs/TMXLayer.html#onAnchorUpdate"},"Khh8NbPU2gJ8OShhYo9fx":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html"},"LcnkFgQOD0KZ1sJ2C0SR2":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html#canRender"},"QLnFhtltnxYOrap363X3R":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html#constructor"},"8MTx-jubBM6jCMF-tXjxp":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html#drawTile"},"WsHi8bj6W72DfT8yBRY0Z":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html#drawTileLayer"},"PLM2Ds0N9HwFYlrWwljFL":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html#getBounds"},"M6eXibIMu4vRnW-ac4e7P":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html#getBounds"},"RucC-kq54z8JUIMcybAvB":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html#pixelToTileCoords"},"eu64X20OHuoO14lAkBoM-":{"uri":"/docs/melonjs/TMXOrthogonalRenderer.html#tileToPixelCoords"},"tDQHbHLACvTi6YdKek-so":{"uri":"/docs/melonjs/TMXRenderer.html"},"VjiBAJGhcMVWfVNk4R58_":{"uri":"/docs/melonjs/TMXRenderer.html#canRender"},"WlkrAfF_P2Wt_dvDjXG37":{"uri":"/docs/melonjs/TMXRenderer.html#constructor"},"nayoy5YWQvyEJNOuYd-yI":{"uri":"/docs/melonjs/TMXRenderer.html#drawTile"},"PoZAKo3c7d5hzZKhAXGxg":{"uri":"/docs/melonjs/TMXRenderer.html#drawTileLayer"},"VqXCIgBAJFqKS3WM07jDb":{"uri":"/docs/melonjs/TMXRenderer.html#getBounds"},"S2v03PfkpzH1HMyFQ5f9i":{"uri":"/docs/melonjs/TMXRenderer.html#getBounds"},"CDSmjE9B7R7RlvtKb-r5n":{"uri":"/docs/melonjs/TMXRenderer.html#pixelToTileCoords"},"Dy2gNCnca5nuADg2MHFpb":{"uri":"/docs/melonjs/TMXRenderer.html#tileToPixelCoords"},"iGFudYurbJ4cYACuYcvSZ":{"uri":"/docs/melonjs/TMXStaggeredRenderer.html"},"a9WsJJxSkFJDnsKU6pmkP":{"uri":"/docs/melonjs/TMXStaggeredRenderer.html#canRender"},"33Mb2VJ4UpAQb5EVLO-je":{"uri":"/docs/melonjs/TMXStaggeredRenderer.html#constructor"},"t-YdcKeYHLtKs5z8Y_LUg":{"uri":"/docs/melonjs/TMXStaggeredRenderer.html#drawTile"},"w31Vqhp6vjI-KZ4a2-Wbt":{"uri":"/docs/melonjs/TMXStaggeredRenderer.html#drawTileLayer"},"2YYnS2Y1Ea086q89Z3uAj":{"uri":"/docs/melonjs/TMXStaggeredRenderer.html#getBounds"},"odD--ucLVbWivUtucE_B9":{"uri":"/docs/melonjs/TMXStaggeredRenderer.html#pixelToTileCoords"},"Qo9jK9oZPUo-qB7ytuac4":{"uri":"/docs/melonjs/TMXStaggeredRenderer.html#tileToPixelCoords"},"UpslBtV1kdCiM6ELJ3wrA":{"uri":"/docs/melonjs/TMXTileMap.html"},"JJH0J1R6GCFCBinQdJEg4":{"uri":"/docs/melonjs/TMXTileMap.html#cols"},"kP_zwfFilLstR5lH8Koe7":{"uri":"/docs/melonjs/TMXTileMap.html#infinite"},"4MQjJQdbvSpPDx1tbiztl":{"uri":"/docs/melonjs/TMXTileMap.html#name"},"HAQhltvPj3W1AsvoHjCq2":{"uri":"/docs/melonjs/TMXTileMap.html#orientation"},"UJyARk0Y4OE9WPPlXs5uC":{"uri":"/docs/melonjs/TMXTileMap.html#renderorder"},"IrycdX_71nE1r3zLaE-WU":{"uri":"/docs/melonjs/TMXTileMap.html#rows"},"jMHYBwtkAsa_x5zLPjnww":{"uri":"/docs/melonjs/TMXTileMap.html#tiledversion"},"TG5erfa3HVQ0DX8ZnvAkN":{"uri":"/docs/melonjs/TMXTileMap.html#tileheight"},"hRtz-Q8qi_tYv5fydw-QS":{"uri":"/docs/melonjs/TMXTileMap.html#tilewidth"},"eCjJO8QgH1yD_OO69f9-r":{"uri":"/docs/melonjs/TMXTileMap.html#version"},"BeMYgylUNvJzhXALid3jN":{"uri":"/docs/melonjs/TMXTileMap.html#addTo"},"wHkmPCU2vfQrYbyqSY7zK":{"uri":"/docs/melonjs/TMXTileMap.html#constructor"},"nPp2ipCpQGI4bUgLjWFZS":{"uri":"/docs/melonjs/TMXTileMap.html#destroy"},"H_7vBtGNxL8-9-aEuKm-4":{"uri":"/docs/melonjs/TMXTileMap.html#getLayers"},"4W_VH6Q7HQfhlzZDJqy3b":{"uri":"/docs/melonjs/TMXTileMap.html#getObjects"},"HOE7yqWlIhFb8oIvpUigt":{"uri":"/docs/melonjs/TMXTileMap.html#getRenderer"},"BdoYwdBrf9hRrHHPughWo":{"uri":"/docs/melonjs/TMXTileset.html"},"doaNTElKcdcDRLPQVNHlS":{"uri":"/docs/melonjs/TMXTileset.html#isAnimated"},"p8WrUsbKGtGeL8zDAqUBi":{"uri":"/docs/melonjs/TMXTileset.html#isCollection"},"kYMqdXnwE-wzQ0saliDkQ":{"uri":"/docs/melonjs/TMXTileset.html#_lastUpdate"},"NlRopgmfomhR5wfOu6bOJ":{"uri":"/docs/melonjs/TMXTileset.html#animations"},"wLPYmNBLzqhPPJmGTSny2":{"uri":"/docs/melonjs/TMXTileset.html#constructor"},"Xw5a_kJHnsAODWvBNaDRJ":{"uri":"/docs/melonjs/TMXTileset.html#contains"},"BA74AL__w4GCQFrny9Vgh":{"uri":"/docs/melonjs/TMXTileset.html#getTileImage"},"qtrupMW7m5wGr1N2eYu6s":{"uri":"/docs/melonjs/TMXTileset.html#getTileProperties"},"nRFwY4GYpWDgt_SDrJt1j":{"uri":"/docs/melonjs/TMXTileset.html#getViewTileId"},"gvN1VXz3me5li-uQy3HhG":{"uri":"/docs/melonjs/TMXTilesetGroup.html"},"I39wlUOc6Y2Wqfsm1UlD6":{"uri":"/docs/melonjs/TMXTilesetGroup.html#add"},"XkJm91DGlGraClwkyy9CF":{"uri":"/docs/melonjs/TMXTilesetGroup.html#getTilesetByGid"},"BMMCwnN4DfaIsosTCx9MB":{"uri":"/docs/melonjs/TMXTilesetGroup.html#getTilesetByIndex"},"KnuZUo-x95bQRofmGujuv":{"uri":"/docs/melonjs/Trigger.html"},"Op8XOnWIMSfZPrAlXHvTK":{"uri":"/docs/melonjs/Trigger.html#alpha"},"JXevDgFTtlqXRoh8ksUI_":{"uri":"/docs/melonjs/Trigger.html#alwaysUpdate"},"mtRfPzkKVwVAIIbPix50f":{"uri":"/docs/melonjs/Trigger.html#ancestor"},"EuVhmw8vrRou5WDDiTizJ":{"uri":"/docs/melonjs/Trigger.html#anchorPoint"},"kpBfik6yLd7-VBP9Ys1kE":{"uri":"/docs/melonjs/Trigger.html#autoTransform"},"2o4ARY_dPcJXzyYuoCM8l":{"uri":"/docs/melonjs/Trigger.html#blendMode"},"xcm1yi8hkHGdqFiDwbXu3":{"uri":"/docs/melonjs/Trigger.html#body"},"zZiUhnsjkGxAzyotCaMpk":{"uri":"/docs/melonjs/Trigger.html#bottom"},"lF3Fa9kCKQ-TYNgjphqzJ":{"uri":"/docs/melonjs/Trigger.html#centerX"},"mduoY7ZWgH5t54pVkEIpG":{"uri":"/docs/melonjs/Trigger.html#centerY"},"PgyNYENZxQP_oMkWJcd1S":{"uri":"/docs/melonjs/Trigger.html#currentTransform"},"PL8iZ8-yb4IHRUcRUpOdw":{"uri":"/docs/melonjs/Trigger.html#floating"},"vIy-E6sbtEYLTh5lCl1Yt":{"uri":"/docs/melonjs/Trigger.html#GUID"},"5rqz7YxZ_sKc_JTT9WJxI":{"uri":"/docs/melonjs/Trigger.html#height"},"swzdrr76pDPqxQqiaAHCi":{"uri":"/docs/melonjs/Trigger.html#inViewport"},"p9nibMac4KnUoPakIwuOX":{"uri":"/docs/melonjs/Trigger.html#isDirty"},"R8VaGNEqZiowK1B04x-0m":{"uri":"/docs/melonjs/Trigger.html#isFlippedX"},"41iYK1HBbOMkzBgEkkDfU":{"uri":"/docs/melonjs/Trigger.html#isFlippedY"},"WHFeBvkfu1aDrtb5T41wT":{"uri":"/docs/melonjs/Trigger.html#isFloating"},"l3GF1UfTZm9aOmuO5DjHL":{"uri":"/docs/melonjs/Trigger.html#isKinematic"},"-JUDoNz4ssB14z_csstsb":{"uri":"/docs/melonjs/Trigger.html#isPersistent"},"HGTDie6UdVOraSTxxR96f":{"uri":"/docs/melonjs/Trigger.html#left"},"pOygpkQ3ufdtWMce85G6X":{"uri":"/docs/melonjs/Trigger.html#mask"},"tDi7rNpWuilf59YbDsYPS":{"uri":"/docs/melonjs/Trigger.html#name"},"e2EFHcdgwkC33mHLHYUCd":{"uri":"/docs/melonjs/Trigger.html#onVisibilityChange"},"Hy0juncTY30JjeIAkV5Pm":{"uri":"/docs/melonjs/Trigger.html#points"},"2tIOqruvn3M7L4xg5vcYf":{"uri":"/docs/melonjs/Trigger.html#pos"},"mRj9ustgBoJDZrfA9Efo2":{"uri":"/docs/melonjs/Trigger.html#right"},"8uQFVzNY3pSK3D9dXrvde":{"uri":"/docs/melonjs/Trigger.html#tint"},"YjCwA49Mq_2O3XEv2zu3S":{"uri":"/docs/melonjs/Trigger.html#top"},"iT8KHCcMAoBI-p5UX17U0":{"uri":"/docs/melonjs/Trigger.html#updateWhenPaused"},"qu_2LV6eh7OL3TN5Yn--n":{"uri":"/docs/melonjs/Trigger.html#width"},"5reVCG7oB7jEF3ZvUT8nr":{"uri":"/docs/melonjs/Trigger.html#angleTo"},"8xgh5zSKe1T8i9mZRjsyr":{"uri":"/docs/melonjs/Trigger.html#centerOn"},"JdOvouqV37VBQrvGD9yH6":{"uri":"/docs/melonjs/Trigger.html#clone"},"b47ycLzhjUsSSauRWpbEd":{"uri":"/docs/melonjs/Trigger.html#constructor"},"Q-rR1FrwawGCuBo7qkFsm":{"uri":"/docs/melonjs/Trigger.html#contains"},"EsKbIh5rZD04MVpyaengh":{"uri":"/docs/melonjs/Trigger.html#copy"},"KZwbv71TRhShbAw8RaiPv":{"uri":"/docs/melonjs/Trigger.html#distanceTo"},"ZzrbExGM_BhSNA9pOTRsg":{"uri":"/docs/melonjs/Trigger.html#equals"},"QzOzURa58n5joCQ1wJYTG":{"uri":"/docs/melonjs/Trigger.html#flipX"},"n7d7INraI0CGPZeK6I9po":{"uri":"/docs/melonjs/Trigger.html#flipY"},"LlfpY9QzphuOGPhGyVhtK":{"uri":"/docs/melonjs/Trigger.html#getAbsolutePosition"},"6oWu4jXr2xVo6nNEtqRt4":{"uri":"/docs/melonjs/Trigger.html#getBounds"},"tRtyI_FK0iYSwnm5WGk5E":{"uri":"/docs/melonjs/Trigger.html#getIndices"},"TDFFZWHK6lOwlW8wf1N__":{"uri":"/docs/melonjs/Trigger.html#getOpacity"},"41XdIxj9SoYbOHqGP2jbp":{"uri":"/docs/melonjs/Trigger.html#isConvex"},"QcCzws26at0lrZLPOIldk":{"uri":"/docs/melonjs/Trigger.html#isFinite"},"cO0MUtKv0qbr58an6L385":{"uri":"/docs/melonjs/Trigger.html#lookAt"},"A7u-ZybNOKp3_Prdbje8x":{"uri":"/docs/melonjs/Trigger.html#onCollision"},"m8J1EaPPu6Sg28NCi3UEh":{"uri":"/docs/melonjs/Trigger.html#onDestroyEvent"},"ohISNnFkcXothJg5gQge5":{"uri":"/docs/melonjs/Trigger.html#overlaps"},"Mk8snCSqcyFuk9QqMx4zp":{"uri":"/docs/melonjs/Trigger.html#recalc"},"dm5FbuD-3uXkgYVgG4T7_":{"uri":"/docs/melonjs/Trigger.html#resize"},"ZdhXXr4Jvf3k0HL_9oBTG":{"uri":"/docs/melonjs/Trigger.html#rotate"},"1TylXFDUrIh8APyLWbDTi":{"uri":"/docs/melonjs/Trigger.html#scale"},"p7HCScZjqQGvSpHIhEeFW":{"uri":"/docs/melonjs/Trigger.html#scaleV"},"nXr2aYnTdLHsotTr6lCU3":{"uri":"/docs/melonjs/Trigger.html#setOpacity"},"A6l7Btogz-F_BEeGDG3sK":{"uri":"/docs/melonjs/Trigger.html#setShape"},"nkcN2g97lY-okIH6FYrI-":{"uri":"/docs/melonjs/Trigger.html#setVertices"},"4iWVKWFjRgpO9XMPyObFS":{"uri":"/docs/melonjs/Trigger.html#shift"},"NKUon2dPYRj2Zp8BReEN7":{"uri":"/docs/melonjs/Trigger.html#to2d"},"NPl0TIv39TDXElkLle8_b":{"uri":"/docs/melonjs/Trigger.html#toIso"},"F6vqPmY-CKkIjnWnH_Wj_":{"uri":"/docs/melonjs/Trigger.html#toPolygon"},"sbBgNRiXMy5W3VAfCE6yA":{"uri":"/docs/melonjs/Trigger.html#transform"},"5yLYyURmQ6gni2Gv09_Fs":{"uri":"/docs/melonjs/Trigger.html#translate"},"AAIaCnc0WrCkdq8uZJJAF":{"uri":"/docs/melonjs/Trigger.html#union"},"cLqGjTNKCdahlJBf9Sql2":{"uri":"/docs/melonjs/Trigger.html#draw"},"ZGAnObgHBHPq5DCoYYq8n":{"uri":"/docs/melonjs/Trigger.html#postDraw"},"h-2CGx6utys94YcoSZUPb":{"uri":"/docs/melonjs/Trigger.html#preDraw"},"nJrdDWk42y8qHJKG-Uvqh":{"uri":"/docs/melonjs/Trigger.html#triggerEvent"},"meN2EaQ-DbAnctqdhk1-y":{"uri":"/docs/melonjs/Trigger.html#update"},"ogJAqJA8ENsEV0-iaSCkZ":{"uri":"/docs/melonjs/Trigger.html#onAnchorUpdate"},"w4IkYTRudbWzZmgh4JthZ":{"uri":"/docs/melonjs/Tween.html"},"Qhopho0ZNyt2_oddfA4WN":{"uri":"/docs/melonjs/Tween/Easing.html"},"QpDS84dV1m1GRiRfLX0ie":{"uri":"/docs/melonjs/Tween/Interpolation.html"},"BnEvbh8EYCRHW3ijGa2CD":{"uri":"/docs/melonjs/Tween.html#chain"},"Q5VDs0oCbRIq0I4TvAg4x":{"uri":"/docs/melonjs/Tween.html#constructor"},"myPZZnhvrqWx0qi6eA3sJ":{"uri":"/docs/melonjs/Tween.html#delay"},"0C7T_cAVoiL2E-ZCfid8q":{"uri":"/docs/melonjs/Tween.html#easing"},"QTpjnJqJwKO9Q64RDJ16H":{"uri":"/docs/melonjs/Tween.html#interpolation"},"bQNMu7QQ7N85jIfsKxTg4":{"uri":"/docs/melonjs/Tween.html#onComplete"},"EY_kGFNLI5uOkN8Qe6vCs":{"uri":"/docs/melonjs/Tween.html#onStart"},"fEUrUlrIweZZ7bin9FHBd":{"uri":"/docs/melonjs/Tween.html#onUpdate"},"biaHgla3q8MZUGTxLYQVp":{"uri":"/docs/melonjs/Tween.html#repeat"},"AtV_NHocIhHRtu4ALRUmZ":{"uri":"/docs/melonjs/Tween.html#start"},"YCogtKStSGeuS13_p3PSi":{"uri":"/docs/melonjs/Tween.html#stop"},"gL0lUNvVOrrpWGtnU-_xF":{"uri":"/docs/melonjs/Tween.html#to"},"l_6xHKgtFU0SDHwW5cyur":{"uri":"/docs/melonjs/Tween.html#yoyo"},"-ElhojcNppWikdl5FxRDU":{"uri":"/docs/melonjs/Vector2d.html"},"P51El6UwUOFhOcbiDCrnX":{"uri":"/docs/melonjs/Vector2d.html#x"},"pzqJlg5L7ghTtJxfvIDco":{"uri":"/docs/melonjs/Vector2d.html#y"},"_n3a2_A49652RmTkhShtP":{"uri":"/docs/melonjs/Vector2d.html#abs"},"HTTGjyVqzM3E05SSvTy15":{"uri":"/docs/melonjs/Vector2d.html#add"},"jrlzIGAG2HjgeqxIhftn9":{"uri":"/docs/melonjs/Vector2d.html#angle"},"X7fdwD2axKdbiO4J4MZkG":{"uri":"/docs/melonjs/Vector2d.html#ceil"},"_whvTKsswLMKvFgqBrKcU":{"uri":"/docs/melonjs/Vector2d.html#ceilSelf"},"m_rdX8K-m8-7xDFFJJXtd":{"uri":"/docs/melonjs/Vector2d.html#clamp"},"-UVP9czqYQ6VdHP9iR4tv":{"uri":"/docs/melonjs/Vector2d.html#clampSelf"},"4XQkVLlIPDwSK8J_laox4":{"uri":"/docs/melonjs/Vector2d.html#clone"},"ELmo6nxpcTKcSqqh5mkB2":{"uri":"/docs/melonjs/Vector2d.html#constructor"},"lyBpZcv374UfCCJfY9AEi":{"uri":"/docs/melonjs/Vector2d.html#copy"},"3fMUwZNiz7OV7xanLr8fI":{"uri":"/docs/melonjs/Vector2d.html#cross"},"dsdmm-LbyXDxNxxhhaaaf":{"uri":"/docs/melonjs/Vector2d.html#distance"},"p00kRz1RbXWDb2rJg_Yyb":{"uri":"/docs/melonjs/Vector2d.html#div"},"PtdULrXNrfmmiZ9DJVrG6":{"uri":"/docs/melonjs/Vector2d.html#dot"},"vlg3lYj6m3nIyIsAYflqM":{"uri":"/docs/melonjs/Vector2d.html#equals"},"1KCl88LsDVvXXRHyb4nqk":{"uri":"/docs/melonjs/Vector2d.html#floor"},"S9ZXh8SwjQN1CVgEqJV4G":{"uri":"/docs/melonjs/Vector2d.html#floorSelf"},"xF5VO2JCfxNkAV7KyVdQi":{"uri":"/docs/melonjs/Vector2d.html#length"},"V3-8sHM9OEWXyjHEcw6k3":{"uri":"/docs/melonjs/Vector2d.html#length2"},"LtlOc2TDxbdPWKCzEiS7p":{"uri":"/docs/melonjs/Vector2d.html#lerp"},"TDAaTv-QdANOl9aAdR3oy":{"uri":"/docs/melonjs/Vector2d.html#maxV"},"c7gU_LEG8KfYyD0G9pV-z":{"uri":"/docs/melonjs/Vector2d.html#minV"},"9PqvIb6s1s2JAVRQMsXC2":{"uri":"/docs/melonjs/Vector2d.html#negate"},"_vz7SeD0YdpUOd32USKsg":{"uri":"/docs/melonjs/Vector2d.html#negateSelf"},"EJ1jXRNxr4dx7i8xwXCff":{"uri":"/docs/melonjs/Vector2d.html#normalize"},"ZaKy4sexbaUvwzm81eU_F":{"uri":"/docs/melonjs/Vector2d.html#perp"},"OK0wbvGQf7xVGrjRQfMIp":{"uri":"/docs/melonjs/Vector2d.html#project"},"J9VAu3LW3DDV4Cs7qdWLl":{"uri":"/docs/melonjs/Vector2d.html#projectN"},"E12Tkj5JwAPp9WUuM1BM0":{"uri":"/docs/melonjs/Vector2d.html#rotate"},"Ip_kAdENrjY4nlVHPCVuh":{"uri":"/docs/melonjs/Vector2d.html#scale"},"4JLlX-zGmkjiJRR_nZm20":{"uri":"/docs/melonjs/Vector2d.html#scaleV"},"4ZL3RoWuaVIM0z4GhvoUA":{"uri":"/docs/melonjs/Vector2d.html#set"},"kS6rOZdAJRppg2Ptz61TX":{"uri":"/docs/melonjs/Vector2d.html#setV"},"XS_vVKy0mbu3QeG0A-KWO":{"uri":"/docs/melonjs/Vector2d.html#setZero"},"1acgpTU6LFcLlZFQz9uDN":{"uri":"/docs/melonjs/Vector2d.html#sub"},"h4BVzcht3584U9zzkY92p":{"uri":"/docs/melonjs/Vector2d.html#to2d"},"6cLZnqSqvnCNlJp50UNU4":{"uri":"/docs/melonjs/Vector2d.html#toIso"},"5dibeAmEUHljdpSFuR161":{"uri":"/docs/melonjs/Vector2d.html#toString"},"q2GIJDVsFgwxccxqiAAfX":{"uri":"/docs/melonjs/Vector2d.html#equals"},"pnnKSlrz17FZEWwRI5CDK":{"uri":"/docs/melonjs/Vector3d.html"},"epAHJKTTopYPF1ktmyZyL":{"uri":"/docs/melonjs/Vector3d.html#x"},"3tfLtxLZYhrc8eGeS-KSw":{"uri":"/docs/melonjs/Vector3d.html#y"},"yzb5bR6krMF5GoXZhwqFR":{"uri":"/docs/melonjs/Vector3d.html#z"},"QeY_FdzRvBOCmK_EnNs43":{"uri":"/docs/melonjs/Vector3d.html#abs"},"l82WpmK_KJEwV0pBJCIj6":{"uri":"/docs/melonjs/Vector3d.html#add"},"rc3dcJQksrPBDK6ZQ97Ti":{"uri":"/docs/melonjs/Vector3d.html#angle"},"3njTf_qC7tDL6odTzJtAh":{"uri":"/docs/melonjs/Vector3d.html#ceil"},"PRgXKQ3PL5WxYkU86FdxE":{"uri":"/docs/melonjs/Vector3d.html#ceilSelf"},"SLct6Vymc9AM5bXeeKEI3":{"uri":"/docs/melonjs/Vector3d.html#clamp"},"A3htJB30b5YASRMeshjng":{"uri":"/docs/melonjs/Vector3d.html#clampSelf"},"Fc0AxkGcvS-1bpZt95ddz":{"uri":"/docs/melonjs/Vector3d.html#clone"},"c3t8QSGyCQwud5BxiATuk":{"uri":"/docs/melonjs/Vector3d.html#constructor"},"zrS8igs1476wxASryO7nr":{"uri":"/docs/melonjs/Vector3d.html#copy"},"0zUkckvi5M5U63xWTiK-7":{"uri":"/docs/melonjs/Vector3d.html#cross"},"UJpdliU1v9J5_sN4kUwPi":{"uri":"/docs/melonjs/Vector3d.html#distance"},"T_dr-gFvXN1Zikld5zNx0":{"uri":"/docs/melonjs/Vector3d.html#div"},"hxQytkwnn4JhfGtm367GJ":{"uri":"/docs/melonjs/Vector3d.html#dot"},"ya0fLZicP5iAbab_kCLHi":{"uri":"/docs/melonjs/Vector3d.html#equals"},"IBMiFxBOKvo9dQvM8r4Aa":{"uri":"/docs/melonjs/Vector3d.html#floor"},"LLe8PzvIH6ZTOHsOteJlu":{"uri":"/docs/melonjs/Vector3d.html#floorSelf"},"CZBwr8uJ9YAdQ4Z4JN3Is":{"uri":"/docs/melonjs/Vector3d.html#length"},"x6c24yDyToH6S2Ds5-e90":{"uri":"/docs/melonjs/Vector3d.html#length2"},"qrX_oo41nSCJVK8P2aQn4":{"uri":"/docs/melonjs/Vector3d.html#lerp"},"9TucNahlcs3qgjFMDXoMp":{"uri":"/docs/melonjs/Vector3d.html#maxV"},"MdCmnFJNANQ11roaJvJBO":{"uri":"/docs/melonjs/Vector3d.html#minV"},"UK8BjJf4gtNVG16YvmyoK":{"uri":"/docs/melonjs/Vector3d.html#negate"},"mbLfxJEiZowYqCfQOJgju":{"uri":"/docs/melonjs/Vector3d.html#negateSelf"},"ksPAnDVJRFOKwYE2l1-wh":{"uri":"/docs/melonjs/Vector3d.html#normalize"},"TjxGwH46sy8zUteXCnWKF":{"uri":"/docs/melonjs/Vector3d.html#perp"},"ktqXgMRBRNwgeedOvLxGT":{"uri":"/docs/melonjs/Vector3d.html#project"},"UVO3juhje6ISX_8FmPP9i":{"uri":"/docs/melonjs/Vector3d.html#projectN"},"CCtyFkOsqCTeZ4NlAvbt0":{"uri":"/docs/melonjs/Vector3d.html#rotate"},"hicbTc5eqU7y2k_mBLARB":{"uri":"/docs/melonjs/Vector3d.html#scale"},"CgaKGARU3D9bjX0cTMpH8":{"uri":"/docs/melonjs/Vector3d.html#scaleV"},"vHSiqx0SUo1c8S70pPVg0":{"uri":"/docs/melonjs/Vector3d.html#set"},"98i3hhcshbe9aw0rayvKj":{"uri":"/docs/melonjs/Vector3d.html#setV"},"ZqEC1B74958xQd8ga-oqY":{"uri":"/docs/melonjs/Vector3d.html#setZero"},"vT5jiOF2zC-sp6lEcT5XV":{"uri":"/docs/melonjs/Vector3d.html#sub"},"-BSBL9tQqn-2nua2FvnCG":{"uri":"/docs/melonjs/Vector3d.html#to2d"},"CPc7oepVhqdQH2qaLjnEZ":{"uri":"/docs/melonjs/Vector3d.html#toIso"},"a9iLQNNKEhR5UT4kSAgvS":{"uri":"/docs/melonjs/Vector3d.html#toString"},"DpAwG53C2dF1eevVtYhOO":{"uri":"/docs/melonjs/Vector3d.html#equals"},"92t92Qxj6Ci0DzQHFCYWr":{"uri":"/docs/melonjs/WebGLCompositor.html"},"TSGKmfmjxaTOe-8D-RO__":{"uri":"/docs/melonjs/WebGLCompositor.html#activeShader"},"8ROIOn4VT8MCHZdImYWxo":{"uri":"/docs/melonjs/WebGLCompositor.html#attributes"},"FS5CuNZZrDI35Wls18Lnr":{"uri":"/docs/melonjs/WebGLCompositor.html#mode"},"BayxYvQ38tjWPBakpLpmp":{"uri":"/docs/melonjs/WebGLCompositor.html#vertexByteSize"},"XJZ6EQO6CEdMTZYoJTUmN":{"uri":"/docs/melonjs/WebGLCompositor.html#vertexSize"},"f-83_N7AVHPFT0s0Vbcxv":{"uri":"/docs/melonjs/WebGLCompositor.html#addAttribute"},"aFsHg0FxSHFCUt_EiQrqs":{"uri":"/docs/melonjs/WebGLCompositor.html#addQuad"},"S_edidfHPjVYiKThq2gWf":{"uri":"/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"D5hHOjOz49kQh_9K9wZU-":{"uri":"/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"Pe2tD4jsQ36GRsSRDtbqx":{"uri":"/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"Lwdoc4FHQ2uji8PJalQXe":{"uri":"/docs/melonjs/WebGLCompositor.html#clear"},"V2zxXH8OE8b63dNZUB7MB":{"uri":"/docs/melonjs/WebGLCompositor.html#clearColor"},"kx6CJ7jVydkNYdbd_zU_m":{"uri":"/docs/melonjs/WebGLCompositor.html#constructor"},"CufynoZuyOPeHvEFiAcQY":{"uri":"/docs/melonjs/WebGLCompositor.html#createTexture2D"},"L_kvC-KOatpZ_uz2Tolso":{"uri":"/docs/melonjs/WebGLCompositor.html#drawVertices"},"PIFzTYcvi95-2EstU4LZo":{"uri":"/docs/melonjs/WebGLCompositor.html#flush"},"m-z9c_uP9vJKrxo_yovXg":{"uri":"/docs/melonjs/WebGLCompositor.html#setProjection"},"7M5PTDkwfmDWssHrBe8NY":{"uri":"/docs/melonjs/WebGLCompositor.html#setViewport"},"A9uZXUNHVzK20ydstMpwL":{"uri":"/docs/melonjs/WebGLCompositor.html#unbindTexture2D"},"0nCQ7IQyxDXG8VQwioaoY":{"uri":"/docs/melonjs/WebGLCompositor.html#useShader"},"URDVssc788LOmC1Ty6XgW":{"uri":"/docs/melonjs/WebGLRenderer.html"},"Wuf0RnobYYJvkVndo795i":{"uri":"/docs/melonjs/WebGLRenderer.html#compositors"},"sPghLR-uS9G3q8ceM3c7Q":{"uri":"/docs/melonjs/WebGLRenderer.html#currentCompositor"},"xw7lognyWtJfbkBM98Qda":{"uri":"/docs/melonjs/WebGLRenderer.html#currentTransform"},"CGLgVTW5OF-znOb8xCeQk":{"uri":"/docs/melonjs/WebGLRenderer.html#gl"},"ay0hjY68R_QEZVuYuzJbR":{"uri":"/docs/melonjs/WebGLRenderer.html#GPURenderer"},"owYenkM4jp9TEoVK8INh_":{"uri":"/docs/melonjs/WebGLRenderer.html#GPUVendor"},"nyN2urfvLPqQRRIA3NRHt":{"uri":"/docs/melonjs/WebGLRenderer.html#isContextValid"},"_MlQG4QlwktrHBymhCZK2":{"uri":"/docs/melonjs/WebGLRenderer.html#maxTextures"},"v-1mmM27QDiGwjFdP-RAq":{"uri":"/docs/melonjs/WebGLRenderer.html#path2D"},"QeJ4AVc5G1SAAtDwAPF0y":{"uri":"/docs/melonjs/WebGLRenderer.html#settings"},"--dedeMVC72159O99jDe4":{"uri":"/docs/melonjs/WebGLRenderer.html#WebGLVersion"},"3ojIot8hizYjyKNUAGNxd":{"uri":"/docs/melonjs/WebGLRenderer.html#clear"},"aCHNhj0feV6Txt3wkEPJx":{"uri":"/docs/melonjs/WebGLRenderer.html#clearColor"},"bB-CmuqoHxC8BaBAeWPXv":{"uri":"/docs/melonjs/WebGLRenderer.html#clearMask"},"Cyy9Pu-55KNFmke2XvgHM":{"uri":"/docs/melonjs/WebGLRenderer.html#clearRect"},"9b-NMQuXSkcXjYjiTTBtE":{"uri":"/docs/melonjs/WebGLRenderer.html#clearTint"},"l280dEudKyfGZ1NEZMaPu":{"uri":"/docs/melonjs/WebGLRenderer.html#clipRect"},"03S55NBmqa-8utXDu8k_6":{"uri":"/docs/melonjs/WebGLRenderer.html#constructor"},"pIJq4hleiHcZDkPrWWMkb":{"uri":"/docs/melonjs/WebGLRenderer.html#createPattern"},"7Ha_a6lUCiKulPC1z4Hn8":{"uri":"/docs/melonjs/WebGLRenderer.html#drawImage"},"q3WA2Omt3RaddyTdfjnAQ":{"uri":"/docs/melonjs/WebGLRenderer.html#drawPattern"},"-YK02FDRqD6zdvAwMi8Bi":{"uri":"/docs/melonjs/WebGLRenderer.html#fill"},"uBiD1PHkicn09NTO0-YWm":{"uri":"/docs/melonjs/WebGLRenderer.html#fillArc"},"kZPD4lohk_a7UKu-sqgFV":{"uri":"/docs/melonjs/WebGLRenderer.html#fillEllipse"},"ohSuUXiPE3q0Cuj_Ka8__":{"uri":"/docs/melonjs/WebGLRenderer.html#fillLine"},"QEiKuu0_0vmBh6M1b7oeQ":{"uri":"/docs/melonjs/WebGLRenderer.html#fillPolygon"},"jwWZfzsIybKjIictzrxQB":{"uri":"/docs/melonjs/WebGLRenderer.html#fillRect"},"LdtzXecXtTDIKKJa8bhuD":{"uri":"/docs/melonjs/WebGLRenderer.html#fillRoundRect"},"ELKSZ-8drGN1oxyubk3yF":{"uri":"/docs/melonjs/WebGLRenderer.html#flush"},"UHDABBuorA43G_BgWGAJs":{"uri":"/docs/melonjs/WebGLRenderer.html#getBlendMode"},"SRmgfBEdG23TUx1iP9aGe":{"uri":"/docs/melonjs/WebGLRenderer.html#getCanvas"},"Dr5ClvuY34aBE-8yWgU0g":{"uri":"/docs/melonjs/WebGLRenderer.html#getColor"},"1XBhVRN-zg5Y10tzNtu8O":{"uri":"/docs/melonjs/WebGLRenderer.html#getContext"},"70wmLxiqkDXBOAkf2bOm8":{"uri":"/docs/melonjs/WebGLRenderer.html#getContext2d"},"QOmLIC22tKOq4iXR8uAOl":{"uri":"/docs/melonjs/WebGLRenderer.html#getContextGL"},"_3BXNDm_GIO-1DLaFUj5-":{"uri":"/docs/melonjs/WebGLRenderer.html#getGlobalAlpha"},"QzQ71bZyOXcjBtPgC09DN":{"uri":"/docs/melonjs/WebGLRenderer.html#getHeight"},"mgryjogpPtwI0vV9KrDf-":{"uri":"/docs/melonjs/WebGLRenderer.html#getScreenCanvas"},"ZdFzPCrIoVyCAr6EtksKD":{"uri":"/docs/melonjs/WebGLRenderer.html#getScreenContext"},"p4MceWyXqDojblOc69Q3p":{"uri":"/docs/melonjs/WebGLRenderer.html#getWidth"},"QqhqsrZ0zFdv41_z2jpz9":{"uri":"/docs/melonjs/WebGLRenderer.html#globalAlpha"},"NrLZsn7aV5kyEkfBsJWIj":{"uri":"/docs/melonjs/WebGLRenderer.html#overlaps"},"-lxSkAPkt1yhDjrdRmTxG":{"uri":"/docs/melonjs/WebGLRenderer.html#reset"},"s2P20Z4g3n6LXM_6hx-d6":{"uri":"/docs/melonjs/WebGLRenderer.html#resetTransform"},"Qk7OkhvGnElEX38q9fJd2":{"uri":"/docs/melonjs/WebGLRenderer.html#resize"},"tp9zfjYlelqT94puKwM9m":{"uri":"/docs/melonjs/WebGLRenderer.html#restore"},"d--Wuy4sFSXc44Tcrfao6":{"uri":"/docs/melonjs/WebGLRenderer.html#rotate"},"njr-22p53idiQV9b9vG4M":{"uri":"/docs/melonjs/WebGLRenderer.html#save"},"gukT4JlztzHGiGBoJqf2J":{"uri":"/docs/melonjs/WebGLRenderer.html#scale"},"TSRIji5vGrkTrjGJVnj_m":{"uri":"/docs/melonjs/WebGLRenderer.html#setAntiAlias"},"yf70PivdgIdvCMsBZfjli":{"uri":"/docs/melonjs/WebGLRenderer.html#setBlendMode"},"QuhHG3tvuXspjiMmyJMY9":{"uri":"/docs/melonjs/WebGLRenderer.html#setColor"},"AASb8gTnJL7NMWHRR77Xf":{"uri":"/docs/melonjs/WebGLRenderer.html#setCompositor"},"Dro5NOb2g4IhE2eTjxxpZ":{"uri":"/docs/melonjs/WebGLRenderer.html#setGlobalAlpha"},"wtLnGvyE1NQg15VxV6k1x":{"uri":"/docs/melonjs/WebGLRenderer.html#setLineWidth"},"I75Uj6OdrP0w5sE9oL3Rm":{"uri":"/docs/melonjs/WebGLRenderer.html#setMask"},"0IcYhmorQ4CrYTNFxl_tT":{"uri":"/docs/melonjs/WebGLRenderer.html#setProjection"},"pBtsT-45up2udHrGewEgV":{"uri":"/docs/melonjs/WebGLRenderer.html#setTint"},"gVLEv-JgF8N65R6BjzmFR":{"uri":"/docs/melonjs/WebGLRenderer.html#setTransform"},"_ABPcwXOAmHCaQJIwSVrU":{"uri":"/docs/melonjs/WebGLRenderer.html#stroke"},"Wn0uC2zPQ3pBLx2LG4F62":{"uri":"/docs/melonjs/WebGLRenderer.html#strokeArc"},"eCuvSp70PdKr7uNTcB1b2":{"uri":"/docs/melonjs/WebGLRenderer.html#strokeEllipse"},"vHCWwWPX9re9xjz8csAaw":{"uri":"/docs/melonjs/WebGLRenderer.html#strokeLine"},"AjNIkTgSyS0TlAztUpOH5":{"uri":"/docs/melonjs/WebGLRenderer.html#strokePolygon"},"_e4riKExUa51UzL1FYM4h":{"uri":"/docs/melonjs/WebGLRenderer.html#strokeRect"},"fTG1wFTlK_7HorKaYvYRY":{"uri":"/docs/melonjs/WebGLRenderer.html#strokeRoundRect"},"FYUb7yHciQrCU1GjcdevY":{"uri":"/docs/melonjs/WebGLRenderer.html#tint"},"Gt_SJ-J4MTJhmTLJFPMSD":{"uri":"/docs/melonjs/WebGLRenderer.html#transform"},"TM0vj2_BGJXzwtRVyyvEb":{"uri":"/docs/melonjs/WebGLRenderer.html#translate"},"wHeJAEn1RLyviO-WmPWef":{"uri":"/docs/melonjs/World.html"},"tSna8kA-qQcCQ-O9Xz-c-":{"uri":"/docs/melonjs/World.html#alpha"},"GaugKwhfBAyAhcU53UbK4":{"uri":"/docs/melonjs/World.html#alwaysUpdate"},"oKDcvtVyEhzLPhlMYqdr2":{"uri":"/docs/melonjs/World.html#ancestor"},"LKZrNgHkWRmbMuaQ-vSMz":{"uri":"/docs/melonjs/World.html#anchorPoint"},"5M9epUr92JkxJfuKuJ98R":{"uri":"/docs/melonjs/World.html#autoDepth"},"dFMXoTrXwDOIr9I5DitGz":{"uri":"/docs/melonjs/World.html#autoSort"},"Fg-zlv1NHDFl-JnSDihNa":{"uri":"/docs/melonjs/World.html#autoTransform"},"CEyeVB1W4g5XvxGFnwHtS":{"uri":"/docs/melonjs/World.html#backgroundColor"},"IblFKEYzMxBIxqtb4XG4w":{"uri":"/docs/melonjs/World.html#blendMode"},"-hs2XDfn4jj3D9lorf25D":{"uri":"/docs/melonjs/World.html#bodies"},"85OKllD5AjeWE5iXJ44GT":{"uri":"/docs/melonjs/World.html#body"},"dK-BwVkpUfjBfqAfZqTXl":{"uri":"/docs/melonjs/World.html#bottom"},"JpejbK_MC9XcRrTnhS8hI":{"uri":"/docs/melonjs/World.html#broadphase"},"j4O6v7ladRqXM8mjAox9M":{"uri":"/docs/melonjs/World.html#centerX"},"3mhYdPGQCbmDP1ZCYR5ei":{"uri":"/docs/melonjs/World.html#centerY"},"e99Rm9YNhHZ1-18stcjR8":{"uri":"/docs/melonjs/World.html#clipping"},"VYeYz4xGS_mW4Q0KuYitK":{"uri":"/docs/melonjs/World.html#currentTransform"},"fRMrZAxyFzWHhsu0ZAHv6":{"uri":"/docs/melonjs/World.html#enableChildBoundsUpdate"},"hUAdSP06G9iOZi7gznJCx":{"uri":"/docs/melonjs/World.html#floating"},"d4rCtgKBm_vsI3aXRFQ4h":{"uri":"/docs/melonjs/World.html#fps"},"EAh8igXAJQhwNjohiUOEA":{"uri":"/docs/melonjs/World.html#gravity"},"K1jTkhZZY4TW0WJv-GCoI":{"uri":"/docs/melonjs/World.html#GUID"},"IsLsysaRx_nld5-C0ghXX":{"uri":"/docs/melonjs/World.html#height"},"21bgrtpoH1tYcPanyRIW-":{"uri":"/docs/melonjs/World.html#inViewport"},"fWN4_vulh2u415SIIAZcI":{"uri":"/docs/melonjs/World.html#isDirty"},"I6lKW7r8dM4J4WQ51PK4b":{"uri":"/docs/melonjs/World.html#isFlippedX"},"TYB50XsMpP-HQpPgmtYvg":{"uri":"/docs/melonjs/World.html#isFlippedY"},"xx0H88pnZQ7mfu19VTrVG":{"uri":"/docs/melonjs/World.html#isFloating"},"nzkUzbxPw2dXzKj3ZYVuG":{"uri":"/docs/melonjs/World.html#isKinematic"},"3fqk0ZJ-EobxWGzYKNLJ3":{"uri":"/docs/melonjs/World.html#isPersistent"},"cn02RcNaLn8x-_yjZWKYG":{"uri":"/docs/melonjs/World.html#left"},"T-62jpZqpZIEIGOMTv577":{"uri":"/docs/melonjs/World.html#mask"},"QU-W8iAAXc0UhDAkqrgv2":{"uri":"/docs/melonjs/World.html#name"},"7qR9qNIdgCFzmaAANNZcc":{"uri":"/docs/melonjs/World.html#onVisibilityChange"},"_QeF_phQTIwAz9RWZqWBF":{"uri":"/docs/melonjs/World.html#points"},"-lBDveWBTUoaesbSjJvMl":{"uri":"/docs/melonjs/World.html#pos"},"VwcArtemJycGmhGUv0Bja":{"uri":"/docs/melonjs/World.html#preRender"},"arzV0Iegyr3Tp-O7Q3Xhc":{"uri":"/docs/melonjs/World.html#right"},"fNsdMFTNvgxLoLgRfYRv6":{"uri":"/docs/melonjs/World.html#root"},"CHEJAkSBqKG7nKpqfTKDk":{"uri":"/docs/melonjs/World.html#sortOn"},"59Legr6zGlLhnRnotpvYZ":{"uri":"/docs/melonjs/World.html#tint"},"xi-x2UL3Zrnhbc2L1mOTr":{"uri":"/docs/melonjs/World.html#top"},"wi3d_lVea3CsMSbJCVxYX":{"uri":"/docs/melonjs/World.html#updateWhenPaused"},"wzFpcC8y3ucpyIzZ19z6h":{"uri":"/docs/melonjs/World.html#width"},"65kvviLkCyX8Vk5my9WrC":{"uri":"/docs/melonjs/World.html#addBody"},"bbiWgc-lbucixPWiOvVtb":{"uri":"/docs/melonjs/World.html#addChild"},"4y-ehtI8S4YYuXlxUMV5Y":{"uri":"/docs/melonjs/World.html#addChildAt"},"cqkOdgcWzmdX3ScaSdCAN":{"uri":"/docs/melonjs/World.html#angleTo"},"a0ys_Hw4koqwpO0OyenqZ":{"uri":"/docs/melonjs/World.html#centerOn"},"d-o96kKeJ_p5XlchlGtC1":{"uri":"/docs/melonjs/World.html#clone"},"PHO8X2HZq-WTX9ezLxGAd":{"uri":"/docs/melonjs/World.html#constructor"},"Ul6uYEJGsxzy_oUZninLB":{"uri":"/docs/melonjs/World.html#contains"},"DFmOl8-ogOovrmdXqXg6e":{"uri":"/docs/melonjs/World.html#copy"},"ucnPkjI8yuHKblvpjGYO0":{"uri":"/docs/melonjs/World.html#distanceTo"},"7S_4G_zNKauaAYfXJ16lJ":{"uri":"/docs/melonjs/World.html#equals"},"9S7Ad0YHobnoyY--4b0QY":{"uri":"/docs/melonjs/World.html#flipX"},"MmlxvLekjbOaC10AGv2-d":{"uri":"/docs/melonjs/World.html#flipY"},"K_odKROAWTmoYeRzoquFI":{"uri":"/docs/melonjs/World.html#forEach"},"vkGhIlQFUoZqJjECsdyU_":{"uri":"/docs/melonjs/World.html#getAbsolutePosition"},"0c6SP_-boh1jnh7QJMn5-":{"uri":"/docs/melonjs/World.html#getBounds"},"YUALDZyWHzHgC4LEX8dDD":{"uri":"/docs/melonjs/World.html#getChildAt"},"2C_7c3ssDlPb8KfW7MZEd":{"uri":"/docs/melonjs/World.html#getChildByGUID"},"zt6v_e5eyFLqRx9n8kWiW":{"uri":"/docs/melonjs/World.html#getChildByName"},"3xLayU-rXa322585PvMSa":{"uri":"/docs/melonjs/World.html#getChildByProp"},"-c4pzOjOpstOnDgpGrjKA":{"uri":"/docs/melonjs/World.html#getChildByType"},"VEySvVM8QGNU5-wcFHKfw":{"uri":"/docs/melonjs/World.html#getChildIndex"},"pftIt2RPd2Y5YA13I_Wq7":{"uri":"/docs/melonjs/World.html#getChildren"},"XbhcSgar8jrrLmHiODJAw":{"uri":"/docs/melonjs/World.html#getIndices"},"-YCGbDLEEzjuXLa29WWaM":{"uri":"/docs/melonjs/World.html#getNextChild"},"ztdh14wnGmsiAttpZCIzn":{"uri":"/docs/melonjs/World.html#getOpacity"},"jMSh2cwyuySES6H6AGko5":{"uri":"/docs/melonjs/World.html#hasChild"},"D2GEifB8Kw3NJyUESTAl1":{"uri":"/docs/melonjs/World.html#isConvex"},"unJ_QsuvOJ-QlSdQhHX19":{"uri":"/docs/melonjs/World.html#isFinite"},"gl1X5kbtAg-vV6uV5G6Xw":{"uri":"/docs/melonjs/World.html#lookAt"},"ZcHZjC3-WzdpF-8FIOjNs":{"uri":"/docs/melonjs/World.html#moveDown"},"spFylA7QVKchhdSDL5qGo":{"uri":"/docs/melonjs/World.html#moveToBottom"},"ttBp_87YN5O-Z4lRySrLe":{"uri":"/docs/melonjs/World.html#moveToTop"},"GNbSE9msB3QfLOqSBR5GJ":{"uri":"/docs/melonjs/World.html#moveUp"},"59z0ksaP0s_5VoKW8FxsW":{"uri":"/docs/melonjs/World.html#onChildChange"},"tj1hl_ALwhWENTgz-ie-p":{"uri":"/docs/melonjs/World.html#onCollision"},"aLZQWgJqovFawpR8p0_mu":{"uri":"/docs/melonjs/World.html#onDestroyEvent"},"xyuxs3DCFOqQlcsVx4UT7":{"uri":"/docs/melonjs/World.html#overlaps"},"LyaAoWX0ZODzgxOlcy6Xh":{"uri":"/docs/melonjs/World.html#recalc"},"JrLLH4XfqAG-QGP7-igU1":{"uri":"/docs/melonjs/World.html#removeBody"},"GMKs_od-nDagJQHAtQgmi":{"uri":"/docs/melonjs/World.html#removeChild"},"wuU72beRZkp5LaGKn_RUY":{"uri":"/docs/melonjs/World.html#removeChildNow"},"WOuTippJXkXp3-22bZSNu":{"uri":"/docs/melonjs/World.html#reset"},"9u_uvK2gBmDSrb2I0UeUR":{"uri":"/docs/melonjs/World.html#reset"},"94E69A7zFswkkdTxxsHQY":{"uri":"/docs/melonjs/World.html#resize"},"sMeGusicx-mczHGGABDI8":{"uri":"/docs/melonjs/World.html#rotate"},"SD7IE8DBoMZMMbJDvsy4Y":{"uri":"/docs/melonjs/World.html#scale"},"RPhvPtWmapgxeJLt9cIBH":{"uri":"/docs/melonjs/World.html#scaleV"},"QLs-gGXIqdClUa6g7MtAq":{"uri":"/docs/melonjs/World.html#setChildsProperty"},"NO9BfCUDGLv2glFHzO3-t":{"uri":"/docs/melonjs/World.html#setOpacity"},"Vvf5zFcVFXzEAs5OlaNQN":{"uri":"/docs/melonjs/World.html#setShape"},"fD7kNektQYHMmpB-Rvn_Y":{"uri":"/docs/melonjs/World.html#setVertices"},"zuoE-CUIPJZp8PVH_rkDS":{"uri":"/docs/melonjs/World.html#shift"},"mCJaqly6NcRE-IjQVrkPb":{"uri":"/docs/melonjs/World.html#sort"},"Li2SLxVNlBOhzr80ihemQ":{"uri":"/docs/melonjs/World.html#swapChildren"},"xhEesGorWOAmjqC5xqbWT":{"uri":"/docs/melonjs/World.html#to2d"},"SPt_h4tF7Nj9FzzsMVZDo":{"uri":"/docs/melonjs/World.html#toIso"},"46GhfNqjjvIC6OOYBVWTJ":{"uri":"/docs/melonjs/World.html#toPolygon"},"LA-agd8-Hc271tV6v-7rl":{"uri":"/docs/melonjs/World.html#transform"},"0CY0NGilyesgqy3XKk7j2":{"uri":"/docs/melonjs/World.html#translate"},"2AnEWqTVewNx1qe8y2umj":{"uri":"/docs/melonjs/World.html#union"},"kBrNXXGyckaC46MQrNWk8":{"uri":"/docs/melonjs/World.html#draw"},"_JgLrO-sGBF0GT_y-5dh5":{"uri":"/docs/melonjs/World.html#postDraw"},"nvhi_JbY9H2uPyZx_0j4y":{"uri":"/docs/melonjs/World.html#preDraw"},"FcxvD6tOCU1stJnt3W-Dz":{"uri":"/docs/melonjs/World.html#update"},"Juz76HysrYAmsFf02oxk9":{"uri":"/docs/melonjs/World.html#isAttachedToRoot"},"ZLDpG9ynM3VrfC_jGR58J":{"uri":"/docs/melonjs/World.html#onAnchorUpdate"},"ZaEcmy_J7tT2BMQJNGSo7":{"uri":"global.html#version"},"OcMNx0bfT8_RkIEflY-pp":{"uri":"global.html#initialized"},"UENC3mfGp-Se_dLL0JBY2":{"uri":"global.html#skipAutoInit"},"8bw7CkUcw1aGzUVIuZ_qu":{"uri":"/docs/melonjs/boot.html"}}}