{"version":"1.0.0","metadata":{"linker":"(unsigned)","siteRoot":"melonJS/docs"},"root":{"id":"root-Qc1-XgTXgcmQb-Ny8h6ml","name":"","type":"RootDoc","members":[{"id":"Jb95Tq1Ormq41JYWldNdf","name":"audio","brief":"","type":"NSDoc","members":[{"id":"5CfVahtCrXX4N56kjJ7lN","name":"stopOnAudioError","brief":"","defaultValue":"true","type":"PropertyDoc","description":"<p>Specify either to stop on audio loading error or not<br>\nif true, melonJS will throw an exception and stop loading<br>\nif ..."},{"id":"iufDyFdytp8WBd8hqawGG","name":"disable","brief":"","scope":"static","type":"FunctionDoc","description":"<p>disable audio output</p>","params":[],"returns":[]},{"id":"QMGPAuX65Pgvlws7oQsK6","name":"enable","brief":"","scope":"static","see":["audio#disable"],"type":"FunctionDoc","description":"<p>enable audio output <br>\nonly useful if audio supported and previously disabled through</p>","params":[],"returns":[]},{"id":"mjMzXPyfuWbOEwkemxzNg","name":"fade","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Fade a currently playing sound between two volumee.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"from","optional":false,"description":"<p>Volume to fade from (0.0 to 1.0).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"to","optional":false,"description":"<p>Volume to fade to (0.0 to 1.0).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"duration","optional":false,"description":"<p>Time in milliseconds to fade.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will fade.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"LzH42v01PU-mCIWjWYY19","name":"getCurrentTrack","brief":"","scope":"static","type":"FunctionDoc","description":"<p>returns the current track Id</p>","params":[],"returns":[{"description":"<p>audio track name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"j0ts_18F0xU8lAqqiJzQ4","name":"getVolume","brief":"","scope":"static","type":"FunctionDoc","description":"<p>get the default global volume</p>","params":[],"returns":[{"description":"<p>current volume value in Float [0.0 - 1.0] .</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_DGJe3gShiAdVnYH-uTrl","name":"hasAudio","brief":"","scope":"static","type":"FunctionDoc","description":"<p>check if audio (HTML5 or WebAudio) is supported</p>","params":[],"returns":[{"description":"<p>return true if audio (HTML5 or WebAudio) is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"prFEQ6fhQ9_NsEB82qrco","name":"hasFormat","brief":"","scope":"static","type":"FunctionDoc","description":"<p>check if the given audio format is supported</p>","params":[{"identifier":"codec","optional":false,"description":"<p>audio format : &quot;mp3&quot;, &quot;mpeg&quot;, opus&quot;, &quot;ogg&quot;, &quot;oga&quot;, &quot;wav&quot;, &quot;aac...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>return true if the given audio format is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Y1o4GrdvA2KAknqt4ApGP","name":"init","brief":"","examples":[{"caption":"","code":"\n // initialize the \"sound engine\", giving \"webm\" as default desired audio format, and \"mp3\" as a fallback\n if (!me.audio.init(\"webm,mp3\")) {\n     alert(\"Sorry but your browser does not support html 5 audio !\");\n     return;\n }\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Initialize and configure the audio support.<br>\nmelonJS supports a wide array of audio codecs that have varying browser su...","params":[{"identifier":"format","optional":true,"default":"\"mp3\"","description":"<p>audio format to prioritize</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Indicates whether audio initialization was successful</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0llYTdWsAuuFN7SazSD9A","name":"mute","brief":"","examples":[{"caption":"","code":"\n // mute the background music\n me.audio.mute(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>mute or unmute the specified sound, but does not pause the playback.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will mute.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"mute","optional":true,"default":"true","description":"<p>True to mute and false to unmute</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"LdFAPj3oKx5ujrVNp-6tV","name":"muteAll","brief":"","scope":"static","type":"FunctionDoc","description":"<p>mute all audio</p>","params":[],"returns":[]},{"id":"Cy28zDwIx7wueKOEMIHBU","name":"muted","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Returns true if audio is muted globally.</p>","params":[],"returns":[{"description":"<p>true if audio is muted globally</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kpnj8HPM58bYilfrQcawF","name":"pause","brief":"","examples":[{"caption":"","code":"\n me.audio.pause(\"cling\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>pause the specified sound on all channels<br>\nthis function does not reset the currentTime property</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will pause.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"2hiAKbPjSAyYgUtp5s8V0","name":"pauseTrack","brief":"","examples":[{"caption":"","code":"\n me.audio.pauseTrack();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>pause the current audio track</p>","params":[],"returns":[]},{"id":"HnUwumeRZd_6ZtGDiIMoN","name":"play","brief":"","examples":[{"caption":"","code":"\n // play the \"cling\" audio clip\n me.audio.play(\"cling\");\n // play & repeat the \"engine\" audio clip\n me.audio.play(\"engine\", true);\n // play the \"gameover_sfx\" audio clip and call myFunc when finished\n me.audio.play(\"gameover_sfx\", false, myFunc);\n // play the \"gameover_sfx\" audio clip with a lower volume level\n me.audio.play(\"gameover_sfx\", false, null, 0.5);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>play the specified sound</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"loop","optional":true,"default":"false","description":"<p>loop audio</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onend","optional":true,"description":"<p>Function to call when sound instance ends playing.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"volume","optional":true,"default":"default","description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the sound instance ID.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"TB-vwV_eNe_iiuetq68kX","name":"playTrack","brief":"","examples":[{"caption":"","code":"\n me.audio.playTrack(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>play the specified audio track<br>\nthis function automatically set the loop property to true<br>\nand keep track of the cur...","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio track name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"volume","optional":true,"default":"default","description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the sound instance ID.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"swmIc-6Wp3Gr-HH7iCsbM","name":"rate","brief":"","examples":[{"caption":"","code":"\n // get the playback rate of the background music\n var rate = me.audio.rate(\"dst-gameforest\");\n // speed up the playback of the background music\n me.audio.rate(\"dst-gameforest\", 2.0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>get or set the rate of playback for a sound.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"rate","optional":true,"variadic":true,"description":"<p>playback rate : 0.5 to 4.0, with 1.0 being normal speed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will be changed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>return the current playback rate (if no extra parameters were given)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"C3AvhHntGrFOzXr7hZWxG","name":"resume","brief":"","examples":[{"caption":"","code":"\n // play a audio clip\n var id = me.audio.play(\"myClip\");\n ...\n // pause it\n me.audio.pause(\"myClip\", id);\n ...\n // resume\n me.audio.resume(\"myClip\", id);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>resume the specified sound on all channels<br></p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will resume.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"llAZXNptXi5WtgLkn40_q","name":"resumeTrack","brief":"","examples":[{"caption":"","code":"\n // play an awesome music\n me.audio.playTrack(\"awesome_music\");\n // pause the audio track\n me.audio.pauseTrack();\n // resume the music\n me.audio.resumeTrack();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>resume the previously paused audio track</p>","params":[],"returns":[]},{"id":"B_KjAEGxnrjCcEoQ9X7vV","name":"seek","brief":"","examples":[{"caption":"","code":"\n // return the current position of the background music\n var current_pos = me.audio.seek(\"dst-gameforest\");\n // set back the position of the background music to the beginning\n me.audio.seek(\"dst-gameforest\", 0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>get/set the position of playback for a sound.</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"seek","optional":true,"variadic":true,"description":"<p>the position to move current playback to (in seconds).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will changed.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>return the current seek position (if no extra parameters were given)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ncFKWs3CKV-OrmlbLUub-","name":"setVolume","brief":"","scope":"static","type":"FunctionDoc","description":"<p>set the default global volume</p>","params":[{"identifier":"volume","optional":false,"description":"<p>Float specifying volume (0.0 - 1.0 values accepted).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"thqeBb_bF15BTrQSSl1Qh","name":"stop","brief":"","examples":[{"caption":"","code":"\n me.audio.stop(\"cling\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>stop the specified sound on all channels</p>","params":[{"identifier":"sound_name","optional":true,"description":"<p>audio clip name (case sensitive). If none is passed, all sounds are stopped.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will stop.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ebx8kkhoLJgxtX1GBOe0w","name":"stopTrack","brief":"","examples":[{"caption":"","code":"\n // play a awesome music\n me.audio.playTrack(\"awesome_music\");\n // stop the current music\n me.audio.stopTrack();\n"}],"scope":"static","see":["audio#playTrack"],"type":"FunctionDoc","description":"<p>stop the current audio track</p>","params":[],"returns":[]},{"id":"wXTDeEQKi8znNB6ey64-j","name":"unload","brief":"","examples":[{"caption":"","code":"\n me.audio.unload(\"awesome_music\");\n"}],"scope":"static","type":"FunctionDoc","description":"<p>unload specified audio track to free memory</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio track name - case sensitive</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if unloaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fWKzxIWsxkd_UQg4RSQ9_","name":"unloadAll","brief":"","examples":[{"caption":"","code":"\n me.audio.unloadAll();\n"}],"scope":"static","type":"FunctionDoc","description":"<p>unload all audio to free memory</p>","params":[],"returns":[]},{"id":"pW_900qoCn2CQhObaz1Cr","name":"unmute","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unmute the specified sound</p>","params":[{"identifier":"sound_name","optional":false,"description":"<p>audio clip name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"id","optional":true,"description":"<p>the sound instance ID. If none is passed, all sounds in group will unmute.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7R9X0_C3HWo4PtpOO9wYK","name":"unmuteAll","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unmute all audio</p>","params":[],"returns":[]}]},{"id":"BOhuCovTBEsyV_voqVM2z","name":"collision","brief":"","type":"NSDoc","description":"<p>Collision detection (and projection-based collision response) of 2D shapes.<br>\nBased on the Separating Axis Theorem and s...","members":[{"id":"R-qcALg-eA5Hlv_e2JAIx","name":"ResponseObject","brief":"","access":"public","type":"ClassDoc","description":"<p>An object representing the result of an intersection.</p>","members":[{"id":"atnzAsVGO5vGV2vzo7S4N","name":"a","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The first object participating in the intersection</p>"},{"id":"sIfZM6heY0TaRmatESF8q","name":"aInB","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Whether the first object is entirely inside the second</p>"},{"id":"LWRyiRYJOjTUiZ1yBKFTg","name":"b","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The second object participating in the intersection</p>"},{"id":"-ZHOe85kmnPxuPFGnhsK0","name":"bInA","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Whether the second object is entirely inside the first</p>"},{"id":"zzpNjPR8oZoMDmTlzfFwA","name":"indexShapeA","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The index of the colliding shape for the object a body</p>"},{"id":"UN8Y2b0fmTsnGZwPnu3u2","name":"indexShapeB","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The index of the colliding shape for the object b body</p>"},{"id":"NjAgkUT88dK4l2jr6D_Ri","name":"overlap","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Magnitude of the overlap on the shortest colliding axis</p>"},{"id":"9Da0f5dCuN3NYcD7wuaTg","name":"overlapN","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The shortest colliding axis (unit-vector)</p>"},{"id":"hpWfKbVG3VPjrS-gZnLOB","name":"overlapV","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The overlap vector (i.e. <code>overlapN.scale(overlap, overlap)</code>). If this vector is subtracted from the position of..."},{"id":"f2QgIAwPkfh6nbmTI1VBV","name":"clear","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Set some values of the response back to their defaults. <br>\nCall this between tests if you are going to reuse a single <b...","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]}]},{"id":"JwGRD4wCMKI2BhdN9qZ-E","name":"types","brief":"","examples":[{"caption":"","code":"\n // set the body collision type\n myEntity.body.collisionType = me.collision.types.PLAYER_OBJECT;\n\n // filter collision detection with collision shapes, enemies and collectables\n myEntity.body.setCollisionMask(\n     me.collision.types.WORLD_SHAPE |\n     me.collision.types.ENEMY_OBJECT |\n     me.collision.types.COLLECTABLE_OBJECT\n );\n\n // User-defined collision types are defined using BITWISE LEFT-SHIFT:\n game.collisionTypes = {\n     LOCKED_DOOR : me.collision.types.USER << 0,\n     OPEN_DOOR   : me.collision.types.USER << 1,\n     LOOT        : me.collision.types.USER << 2,\n };\n\n // Set collision type for a door entity\n myDoorEntity.body.collisionType = game.collisionTypes.LOCKED_DOOR;\n\n // Set collision mask for the player entity, so it collides with locked doors and loot\n myPlayerEntity.body.setCollisionMask(\n     me.collision.types.ENEMY_OBJECT |\n     me.collision.types.WORLD_SHAPE |\n     game.collisionTypes.LOCKED_DOOR |\n     game.collisionTypes.LOOT\n );\n"}],"readonly":true,"scope":"static","see":["Body.setCollisionMask","Body.collisionType"],"type":"EnumDoc","description":"<p>Enum for collision type values.</p>","members":[{"id":"mn86S-Z6Rt8myTG9cc9JP","name":"ACTION_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. doors</p>"},{"id":"3BFJUScTKDFhG7cnLovLS","name":"ALL_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>all of the above (including user-defined types)</p>"},{"id":"nfJSGJzydUHN7mInnXCcs","name":"COLLECTABLE_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>collectable objects</p>"},{"id":"4VzpszZXtN-ui9f8GAnK8","name":"ENEMY_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>enemies objects</p>"},{"id":"Mmh2-7sttiNpxVIE8eGJZ","name":"NO_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>to disable collision check</p>"},{"id":"HiA0cpgKiTcHDZNVZY-Gb","name":"NO_OBJECT","brief":"<p>to disable collision check</p>","defaultValue":"0","scope":"static","type":"PropertyDoc"},{"id":"xpdGAfvOU-lVuoAeCu_oE","name":"NPC_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>non playable characters</p>"},{"id":"PZI1OjOZePvwq2H62wW9U","name":"PLAYER_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>playbable characters</p>"},{"id":"OldkcoU48hu6Wkk8P2KR3","name":"PROJECTILE_OBJECT","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. missiles</p>"},{"id":"XC6Tf_u84UHm4ictwyB3g","name":"USER","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>user-defined collision types (see example)</p>"},{"id":"NIUgtQKnALWaJqz9wDxDj","name":"WORLD_SHAPE","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>e.g. walls; for map collision shapes</p>"}]},{"id":"x8OKEiXnzZI487SHKWuL1","name":"maxChildren","brief":"","access":"public","defaultValue":"8","scope":"static","see":["game.world.broadphase"],"type":"PropertyDoc","description":"<p>The maximum number of children that a quadtree node can contain before it is split into sub-nodes.</p>"},{"id":"v4_MfHwO6loyI1CxDBxl7","name":"maxDepth","brief":"","access":"public","defaultValue":"4","scope":"static","see":["game.world.broadphase"],"type":"PropertyDoc","description":"<p>The maximum number of levels that the quadtree will create.</p>"},{"id":"jhkkl8cWjim0N0c-NU372","name":"response","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>a global instance of a response object used for collision detection <br>\nthis object will be reused amongst collision dete..."},{"id":"G7ErAxUYwqmEnY_OGhHkc","name":"rayCast","brief":"","access":"public","examples":[{"caption":"","code":"\n    // define a line accross the viewport\n    var ray = new me.Line(\n        // absolute position of the line\n        0, 0, [\n        // starting point relative to the initial position\n        new me.Vector2d(0, 0),\n        // ending point\n        new me.Vector2d(me.game.viewport.width, me.game.viewport.height)\n    ]);\n\n    // check for collition\n    result = me.collision.rayCast(ray);\n\n    if (result.length > 0) {\n        // ...\n    }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Checks for object colliding with the given line</p>","params":[{"identifier":"line","optional":false,"description":"<p>line to be tested for collision</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}},{"identifier":"result","optional":true,"description":"<p>a user defined array that will be populated with intersecting physic objects.</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>an array of intersecting physic objects</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]}]},{"id":"Em3YJ-1psiXqjvq4hYWrX","name":"device","brief":"<p>The device capabilities and specific events</p>","type":"NSDoc","members":[{"id":"5pT2YeMeDr3IjX5QP2so4","name":"accelerationX","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the x-axis.</p>"},{"id":"8EMi0P2dpSzyn6GspCpP3","name":"accelerationY","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the y-axis.</p>"},{"id":"POe9_OdKxbRxLuwnbliyN","name":"accelerationZ","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchAccelerometer"],"type":"PropertyDoc","description":"<p>contains the g-force acceleration along the z-axis.</p>"},{"id":"tNQlul0UD3G54z51LHB2o","name":"alpha","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Alpha property. Gives angle based on the rotation of the phone around its z axis.\nThe z-axis is perpend..."},{"id":"751iX2UOb9Lvq18Y_OWrq","name":"android","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an Android platform.</p>"},{"id":"_VeqmUL0osbsjgXFN77Jm","name":"android2","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an Android 2.x platform.</p>"},{"id":"8GDkQnujLfIX7nfwN1eJn","name":"autoFocus","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to automatically bring the window to the front</p>"},{"id":"eeCL1IZ6CPh5VGMweW8qj","name":"beta","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Beta property. Gives angle on tilting a portrait held phone forward or backward</p>"},{"id":"jmp0ygb2Za-1FcFSOxXjp","name":"BlackBerry","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a BlackBerry platform.</p>"},{"id":"4hipSHKpoTTxy4DzFXd_k","name":"chromeOS","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is running on ChromeOS.</p>"},{"id":"11omZf8c1_nxti6CFtlhE","name":"devicePixelRatio","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Ratio of the resolution in physical pixels to the resolution in CSS pixels for the current display device.</p>","returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UK_lBZdK-Hg_7C1R_3n-1","name":"ejecta","brief":"","defaultValue":"false","readonly":true,"scope":"static","see":["http://impactjs.com/ejecta"],"type":"PropertyDoc","description":"<p>equals to true if the game is running under Ejecta.</p>"},{"id":"eU95ZmWNmdJ2YBZ-qfW-T","name":"gamma","brief":"","access":"public","defaultValue":"0","readonly":true,"scope":"static","see":["device.watchDeviceOrientation"],"type":"PropertyDoc","description":"<p>Device orientation Gamma property. Gives angle on tilting a portrait held phone left or right</p>"},{"id":"IswablfnVr3v5nCneHrwT","name":"hasAccelerometer","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser accelerometer capabilities</p>"},{"id":"whRoy6BrqX876Ll1sfaTU","name":"hasDeviceOrientation","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser device orientation</p>"},{"id":"3yB9Dbvzi870tL-t_x_H8","name":"hasFullscreenSupport","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser full screen support</p>"},{"id":"0e69k5uOQNqpPTd67ZsiZ","name":"hasPointerLockSupport","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser pointerlock api support</p>"},{"id":"CXYxxotsCqj2Qig_cOIWA","name":"hasWebAudio","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Device WebAudio Support</p>"},{"id":"umKrxHlqPqF3iVTe134QL","name":"iOS","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is an iOS platform.</p>"},{"id":"oEkN8aN9NQLXIabW24Onn","name":"isFullscreen","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Returns true if the browser/device is in full screen mode.</p>","returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"YPODL17_GfKJkKE649kWK","name":"isMobile","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if a mobile device <br>\n(Android | iPhone | iPad | iPod | BlackBerry | Windows Phone | Kindle)</p>"},{"id":"HAiNMvve_qKhHT2DXXorg","name":"isWeixin","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the  is running under Wechat.</p>"},{"id":"H45WcvDlS-mlB7z7M8d7f","name":"Kindle","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Kindle platform.</p>"},{"id":"k2jeki9erj7co2Vsl2Xev","name":"language","brief":"","access":"public","readonly":true,"scope":"static","see":["http://www.w3schools.com/tags/ref_language_codes.asp"],"type":"PropertyDoc","description":"<p>a string representing the preferred language of the user, usually the language of the browser UI.\n(will default to &quot;e..."},{"id":"WshxdxgZ2RdhYHtpLqlJC","name":"linux","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Linux platform.</p>"},{"id":"HJYvReql_LvbEnArbOktS","name":"localStorage","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser Local Storage capabilities <br>\n(this flag will be set to false if cookies are blocked)</p>"},{"id":"kYHqryuPZj9I0-BzRB0if","name":"maxTouchPoints","brief":"","defaultValue":"1","examples":[{"caption":"","code":"\n if (me.device.maxTouchPoints > 1) {\n     // device supports multi-touch\n }\n"}],"readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Return the maximum number of simultaneous touch contact points are supported by the current device.</p>"},{"id":"X9OFs3Ok5C3GqEGuCVpgi","name":"nativeBase64","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Browser Base64 decoding capability</p>"},{"id":"MuHd9jZdmjYrvDQN1elTk","name":"nodeJS","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if running under node.js</p>"},{"id":"7NzCPbSgnfTHy1YWK6jDU","name":"OffScreenCanvas","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device browser supports OffScreenCanvas.</p>"},{"id":"zFhxC2-vHoeRJttTVXRqB","name":"pauseOnBlur","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to pause the game when losing focus</p>"},{"id":"HGJlIlsLfv0G3aK63smqn","name":"resumeOnFocus","brief":"","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to unpause the game when gaining focus</p>"},{"id":"WO9VIy7BxGlKuQgo7Z7wW","name":"ScreenOrientation","brief":"","defaultValue":"false","readonly":true,"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation/onchange"],"type":"PropertyDoc","description":"<p>Supports the ScreenOrientation API</p>"},{"id":"qXtBaTELx-R7wgaOzO3CD","name":"sound","brief":"","access":"public","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Returns true if the browser/device has audio capabilities.</p>","returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-HC8z99YZVG-oDuRqS3QS","name":"stopOnBlur","brief":"","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Specify whether to stop the game when losing focus or not.\nThe engine restarts on focus if this is enabled.</p>"},{"id":"ejRkcwGvMKe2ZiEaNWWL9","name":"touch","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>Touch capabilities</p>"},{"id":"AeAeuKaaL0JHN8s3sHa5C","name":"ua","brief":"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>the <code>ua</code> read-only property returns the user agent string for the current browser.</p>"},{"id":"x7w-MMFRBpJgJJWHWRMpW","name":"wheel","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>W3C standard wheel events</p>"},{"id":"g-1X8JavEbYVe32GWk2Sd","name":"wp","brief":"","defaultValue":"false","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>equals to true if the device is a Windows Phone platform.</p>"},{"id":"IOhvAJySNvY8GRXTwSRDO","name":"turnOffPointerLock","brief":"","access":"public","deprecated":"since 10.3.0","scope":"instance","see":["input.exitPointerLock"],"type":"MethodDoc","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3HfNvKGN_9A7aE7fe6DYG","name":"turnOnPointerLock","brief":"","access":"public","deprecated":"since 10.3.0","scope":"instance","see":["input.requestPointerLock"],"type":"MethodDoc","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MxN1_88-N0yPX9fCcknKV","name":"enableSwipe","brief":"","scope":"static","type":"FunctionDoc","description":"<p>enable/disable swipe on WebView.</p>","params":[{"identifier":"enable","optional":true,"default":"true","description":"<p>enable or disable swipe.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"KVOVvGjvh8e1HRF4XV9Db","name":"exitFullscreen","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Exit fullscreen mode. Requires fullscreen support from the browser/device.</p>","params":[],"returns":[]},{"id":"K_S26JVxD_JUPQkkovpld","name":"focus","brief":"","examples":[{"caption":"","code":"\n  if (clicked) {\n    me.device.focus();\n  }\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Makes a request to bring this device window to the front.</p>","params":[],"returns":[]},{"id":"Qh83VMibSUXBnSoifOWnP","name":"getElement","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the DOM element for the given element name or HTMLElement object</p>","params":[{"identifier":"element","optional":false,"description":"<p>the parent element name or a HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the corresponding DOM Element or null if not existing</p>","dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"bVySmxpozRCIsZOnxc9CB","name":"getElementBounds","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/DOMRect"],"type":"FunctionDoc","description":"<p>returns the size of the given HTMLElement and its position relative to the viewport\n<br><img src=\"images/element-box-diagr...","params":[{"identifier":"element","optional":false,"description":"<p>an HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the size and position of the element relatively to the viewport</p>","dataType":{"tokens":[{"value":"DOMRect","kind":"canonical"},{"value":"DOMRect","kind":"canonical"}],"template":"%1"}}]},{"id":"PWEqcgvvc49iRR7FyhUyP","name":"getMaxShaderPrecision","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the highest precision format supported by this device for GL Shaders</p>","params":[{"identifier":"gl","optional":false,"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>&quot;lowp&quot;, &quot;mediump&quot;, or &quot;highp&quot;</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RUjbox7pCy-XHYW_zG8Hh","name":"getParentBounds","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/DOMRect"],"type":"FunctionDoc","description":"<p>returns the size of the given HTMLElement Parent and its position relative to the viewport\n<br><img src=\"images/element-bo...","params":[{"identifier":"element","optional":false,"description":"<p>an HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the size and position of the given element parent relative to the viewport</p>","dataType":{"tokens":[{"value":"DOMRect","kind":"canonical"},{"value":"DOMRect","kind":"canonical"}],"template":"%1"}}]},{"id":"GFHcDIaVhdg4b0SMgTLIc","name":"getParentElement","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return the parent DOM element for the given parent name or HTMLElement object</p>","params":[{"identifier":"element","optional":false,"description":"<p>the parent element name or a HTMLElement object</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}}],"returns":[{"description":"<p>the parent Element</p>","dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"NaGiLw_MtikrQ_nOaapAI","name":"getScreenOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation"],"type":"FunctionDoc","description":"<p>Return a string representing the orientation of the device screen.\nIt can be &quot;any&quot;, &quot;natural&quot;, &quot;l...","params":[],"returns":[{"description":"<p>the screen orientation</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"z75kYzzq_PQ4N6Pbj_nCq","name":"getStorage","brief":"","scope":"static","see":["save"],"type":"FunctionDoc","description":"<p>return the device storage</p>","params":[{"identifier":"type","optional":true,"default":"\"local\"","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a reference to the device storage</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"CPQZKz9m0tdMdZjuZp7RQ","name":"isLandscape","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return true if the device screen orientation is in Portrait mode</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"K8TQFOhYYqaBkg-0KIq4n","name":"isPortrait","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return true if the device screen orientation is in Portrait mode</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6zjCwubh0ekdgXhgrWOK2","name":"isWebGLSupported","brief":"","scope":"static","type":"FunctionDoc","description":"<p>returns true if the device supports WebGL</p>","params":[{"identifier":"options","optional":true,"description":"<p>context creation options</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if WebGL is supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WmrYXLHN2yEUUGUKJ9AIz","name":"lockOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation"],"type":"FunctionDoc","description":"<p>locks the device screen into the specified orientation.<br>\nThis method only works for installed Web apps or for Web pages...","params":[{"identifier":"orientation","optional":false,"description":"<p>The orientation into which to lock the screen.</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[{"description":"<p>true if the orientation was unsuccessfully locked</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"msKJ3Q23EbtrEtnaX1fDB","name":"onReady","brief":"","examples":[{"caption":"","code":"\n // small game skeleton\n var game = {\n    // called by the me.device.onReady function\n    onload : function () {\n       // init video\n       if (!me.video.init('screen', 640, 480, true)) {\n          alert(\"Sorry but your browser does not support html 5 canvas.\");\n          return;\n       }\n\n       // initialize the \"audio\"\n       me.audio.init(\"mp3,ogg\");\n\n       // set callback for ressources loaded event\n       me.loader.onload = this.loaded.bind(this);\n\n       // set all ressources to be loaded\n       me.loader.preload(game.assets);\n\n       // load everything & display a loading screen\n       me.state.change(me.state.LOADING);\n    },\n\n    // callback when everything is loaded\n    loaded : function () {\n       // define stuff\n       // ....\n\n       // change to the menu screen\n       me.state.change(me.state.PLAY);\n    }\n }, // game\n\n // \"bootstrap\"\n me.device.onReady(function () {\n    game.onload();\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>specify a function to execute when the Device is fully loaded and ready</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to be executed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"LpuneO7DxZCDzbn_Hp572","name":"requestFullscreen","brief":"","examples":[{"caption":"","code":"\n // add a keyboard shortcut to toggle Fullscreen mode on/off\n me.input.bindKey(me.input.KEY.F, \"toggleFullscreen\");\n me.event.on(me.event.KEYDOWN, function (action, keyCode, edge) {\n    // toggle fullscreen on/off\n    if (action === \"toggleFullscreen\") {\n       if (!me.device.isFullscreen) {\n          me.device.requestFullscreen();\n       } else {\n          me.device.exitFullscreen();\n       }\n    }\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Triggers a fullscreen request. Requires fullscreen support from the browser/device.</p>","params":[{"identifier":"element","optional":true,"default":"default canvas object","description":"<p>the element to be set in full-screen mode.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"mLDWeO-Lz3K5rUoNeREXw","name":"unlockOrientation","brief":"","scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation"],"type":"FunctionDoc","description":"<p>unlocks the device screen into the specified orientation.<br>\nThis method only works for installed Web apps or for Web pag...","params":[],"returns":[{"description":"<p>true if the orientation was unsuccessfully unlocked</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fw8tPxthG6OraK3vYLFQ5","name":"unwatchAccelerometer","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unwatch Accelerometor event</p>","params":[],"returns":[]},{"id":"4BPQ5eqD_OziKfNaVZGU6","name":"unwatchDeviceOrientation","brief":"","scope":"static","type":"FunctionDoc","description":"<p>unwatch Device orientation event</p>","params":[],"returns":[]},{"id":"kjFzQPnO4VDTw8AbcgiaM","name":"vibrate","brief":"","examples":[{"caption":"","code":"\n // vibrate for 1000 ms\n me.device.vibrate(1000);\n // or alternatively\n me.device.vibrate([1000]);\n // vibrate for 50 ms, be still for 100 ms, and then vibrate for 150 ms:\n me.device.vibrate([50, 100, 150]);\n // cancel any existing vibrations\n me.device.vibrate(0);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>the vibrate method pulses the vibration hardware on the device, <br>\nIf the device doesn't support vibration, this method ...","params":[{"identifier":"pattern","optional":false,"description":"<p>pattern of vibration and pause intervals</p>","dataType":{"tokens":[{"value":"number | Array<number>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | %3<%2>"}}],"returns":[]},{"id":"oMEeniq5NFTV1FatTpMXq","name":"watchAccelerometer","brief":"","examples":[{"caption":"","code":"\n // try to enable device accelerometer event on user gesture\n me.input.registerPointerEvent(\"pointerleave\", me.game.viewport, function() {\n     if (me.device.watchAccelerometer() === true) {\n         // Success\n         me.input.releasePointerEvent(\"pointerleave\", me.game.viewport);\n     } else {\n         // ... fail at enabling the device accelerometer event\n     }\n });\n"}],"scope":"static","see":["device.accelerationX","device.accelerationY","device.accelerationZ"],"type":"FunctionDoc","description":"<p>Enable monitor of the device accelerator to detect the amount of physical force of acceleration the device is receiving.\n(...","params":[],"returns":[{"description":"<p>false if not supported or permission not granted by the user</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rBKvUCd5KU2HKLlJ0NZW_","name":"watchDeviceOrientation","brief":"","examples":[{"caption":"","code":"\n // try to enable device orientation event on user gesture\n me.input.registerPointerEvent(\"pointerleave\", me.game.viewport, function() {\n     if (me.device.watchDeviceOrientation() === true) {\n         // Success\n         me.input.releasePointerEvent(\"pointerleave\", me.game.viewport);\n     } else {\n         // ... fail at enabling the device orientation event\n     }\n });\n"}],"scope":"static","see":["device.alpha","device.beta","device.gamma"],"type":"FunctionDoc","description":"<p>Enable monitor of the device orientation to detect the current orientation of the device as compared to the Earth coordina...","params":[],"returns":[{"description":"<p>false if not supported or permission not granted by the user</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"j0dqaktBh8cCeo0_Hr4Dk","name":"event","brief":"","type":"NSDoc","description":"<p>an event system based on nodeJS EventEmitter interface</p>","members":[{"id":"tFJudfYkKcjHEqk6XQc_6","name":"BOOT","brief":"","access":"public","defaultValue":"\"me.boot\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the system is booting</p>"},{"id":"ow1WHwKuzs32ao9nefQRE","name":"CANVAS_ONRESIZE","brief":"","access":"public","defaultValue":"\"canvas.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the canvas is resized <br>\n(this usually follows a WINDOW_ONRESIZE event).<br>\nData passed : {number} canva..."},{"id":"NLZJgxgo01cRsp0rwj01j","name":"DRAGEND","brief":"","access":"public","defaultValue":"\"me.game.dragend\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for dragend events on a Draggable entity <br>\nData passed:\n{object} the drag event <br>\n{object} the Draggable entit..."},{"id":"j0CwxO-p_7f-LFPwG49tk","name":"DRAGSTART","brief":"","access":"public","defaultValue":"\"me.game.dragstart\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for dragstart events on a Draggable entity <br>\nData passed:\n{object} the drag event <br>\n{object} the Draggable ent..."},{"id":"9ENTHtogVdZxV4ityB9dA","name":"GAME_AFTER_DRAW","brief":"","access":"public","defaultValue":"\"me.game.afterDraw\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for the start of the draw loop\nData passed : {number} time the current time stamp</p>"},{"id":"f4Le1Dv2HSCdcBpXO11tr","name":"GAME_AFTER_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.afterUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for the end of the update loop\nData passed : {number} time the current time stamp</p>"},{"id":"qY8GWIxWNrPe-1Q0XUgQf","name":"GAME_BEFORE_DRAW","brief":"","access":"public","defaultValue":"\"me.game.beforeDraw\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for the end of the draw loop\nData passed : {number} time the current time stamp</p>"},{"id":"z6zDp6PYZxj0mMTYIhZgz","name":"GAME_BEFORE_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.beforeUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the engine is about to start a new game loop\nData passed : {number} time the current time stamp</p>"},{"id":"TDDwOfYIR-lB0FCTXit-j","name":"GAME_INIT","brief":"","access":"public","defaultValue":"\"me.game.onInit\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game manager is initialized <br>\nData passed : none <br></p>"},{"id":"EJ1Itt35nxj4GNQlQ0L_1","name":"GAME_RESET","brief":"","access":"public","defaultValue":"\"me.game.onReset\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game manager is resetted <br>\nData passed : none <br></p>"},{"id":"H-f_QJ8A9-luEQPKFRNB2","name":"GAME_UPDATE","brief":"","access":"public","defaultValue":"\"me.game.onUpdate\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the game is updated (will be impacted by frame skip, frame interpolation and pause/resume state) <br>\nData ..."},{"id":"3-3VrXvtmK9GycN_2BLFS","name":"GAMEPAD_CONNECTED","brief":"","access":"public","defaultValue":"\"gamepad.connected\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a gamepad is connected <br>\nData passed : {object} gamepad object</p>"},{"id":"jCkCQaOwuvCPBuyWCJPcp","name":"GAMEPAD_DISCONNECTED","brief":"","access":"public","defaultValue":"\"gamepad.disconnected\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a gamepad is disconnected <br>\nData passed : {object} gamepad object</p>"},{"id":"OIcoEserx9pNZgZKE_mV3","name":"GAMEPAD_UPDATE","brief":"","access":"public","defaultValue":"\"gamepad.update\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when gamepad button/axis state is updated <br>\nData passed : {number} index <br>\nData passed : {string} type : &..."},{"id":"yBYOOf0_ojxvaSQtEXHfr","name":"KEYDOWN","brief":"","access":"public","defaultValue":"\"me.input.keydown\"","examples":[{"caption":"","code":"\n me.input.bindKey(me.input.KEY.X, \"jump\", true); // Edge-triggered\n me.input.bindKey(me.input.KEY.Z, \"shoot\"); // Level-triggered\n me.event.on(me.event.KEYDOWN, (action, keyCode, edge) => {\n   // Checking bound keys\n   if (action === \"jump\") {\n       if (edge) {\n           this.doJump();\n       }\n\n       // Make character fall slower when holding the jump key\n       this.vel.y = this.body.gravity;\n   }\n });\n"}],"readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for pressing a binded key <br>\nData passed : {string} user-defined action, {number} keyCode,\n{boolean} edge state <b..."},{"id":"_a-JQMvaSqwoTwk5tBTa3","name":"KEYUP","brief":"","access":"public","defaultValue":"\"me.input.keyup\"","examples":[{"caption":"","code":"\n me.event.on(me.event.KEYUP, (action, keyCode) => {\n   // Checking unbound keys\n   if (keyCode == me.input.KEY.ESC) {\n       if (me.state.isPaused()) {\n           me.state.resume();\n       }\n       else {\n           me.state.pause();\n       }\n   }\n });\n"}],"readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for releasing a binded key <br>\nData passed : {string} user-defined action, {number} keyCode</p>"},{"id":"7xKxMqBTIOBz-VqotLSDC","name":"LEVEL_LOADED","brief":"","access":"public","defaultValue":"\"me.game.onLevelLoaded\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when a level is loaded <br>\nData passed : {string} Level Name</p>"},{"id":"YYFGQlmoto4FloO4rzt5-","name":"LOADER_COMPLETE","brief":"","access":"public","defaultValue":"\"me.loader.onload\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when everything has loaded <br>\nData passed : none <br></p>"},{"id":"pXkBHAjV9n94I0kWoHGkG","name":"LOADER_PROGRESS","brief":"","access":"public","defaultValue":"\"me.loader.onProgress\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for displaying a load progress indicator <br>\nData passed : {number} [0 .. 1], {Resource} resource object<br></p>"},{"id":"NZG7gj2A8ad8zPF-6e1gC","name":"ONCONTEXT_RESTORED","brief":"","access":"public","defaultValue":"\"renderer.contextrestored\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the current context is restored <br>\nData passed : {me.Renderer} the current renderer instance`</p>"},{"id":"_fMBByLzcZp25qLaBUNd5","name":"POINTERLOCKCHANGE","brief":"","access":"public","defaultValue":"\"me.event.pointerlockChange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for onPointerLockChange event <br>\nData passed : {boolean} pointer lock status (true/false)</p>"},{"id":"Pau-rzu1rHehdiQ3wVYg1","name":"POINTERMOVE","brief":"","access":"public","defaultValue":"\"me.event.pointermove\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for pointermove events on the screen area <br>\nData passed : {me.Pointer} a Pointer object</p>"},{"id":"7_NydVaTK_n2BeC7f-u5G","name":"STATE_CHANGE","brief":"","access":"public","defaultValue":"\"me.state.onChange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the changing to a different stage</p>"},{"id":"3AlyPgg0XAdqw2uLWLmdI","name":"STATE_PAUSE","brief":"","access":"public","defaultValue":"\"me.state.onPause\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the game is paused <br>\nData passed : none <br></p>"},{"id":"a2Zy_bKo6pEWRJfkuiakj","name":"STATE_RESTART","brief":"","access":"public","defaultValue":"\"me.state.onRestart\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game is restarted <br>\nData passed : {number} time in ms the game was stopped</p>"},{"id":"w6zopmHBgwsaXL2VUWOff","name":"STATE_RESUME","brief":"","access":"public","defaultValue":"\"me.state.onResume\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event for when the game is resumed <br>\nData passed : {number} time in ms the game was paused</p>"},{"id":"UaTDCIuPjpIbO1bIUiqVn","name":"STATE_STOP","brief":"","access":"public","defaultValue":"\"me.state.onStop\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>event when the game is stopped <br>\nData passed : none <br></p>"},{"id":"G6WnO8AYo6amiHfsP4xru","name":"VIDEO_INIT","brief":"","access":"public","defaultValue":"\"me.video.onInit\"","readonly":true,"see":["video.init","event.on"],"type":"PropertyDoc","description":"<p>event for when the video is initialized<br>\nData passed : none <br></p>"},{"id":"1UfxROGq0355f7Ya2EUUa","name":"VIEWPORT_ONCHANGE","brief":"","access":"public","defaultValue":"\"viewport.onchange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the viewport position is updated <br>\nData passed : {me.Vector2d} viewport position vector</p>"},{"id":"UulLfEAb0WXJ7oeiTqTHZ","name":"VIEWPORT_ONRESIZE","brief":"","access":"public","defaultValue":"\"viewport.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the viewport is resized <br>\n(this usually follows a WINDOW_ONRESIZE event, when using the <code>flex</code..."},{"id":"oxCGeGZcp3Ld7HYx6vYZO","name":"WEBGL_ONCONTEXT_LOST","brief":"","access":"public","defaultValue":"\"renderer.contextlost\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the current context is lost <br>\nData passed : {me.Renderer} the current renderer instance</p>"},{"id":"Zzgh9BgnXDgGldVdsZH0u","name":"WINDOW_ONORIENTATION_CHANGE","brief":"","access":"public","defaultValue":"\"globalThis.orientationchange\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the device is rotated <br>\nData passed : {Event} Event object <br></p>"},{"id":"87G8_T1TA_8LHWdR28V3g","name":"WINDOW_ONRESIZE","brief":"","access":"public","defaultValue":"\"globalThis.onresize\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the (browser) window is resized <br>\nData passed : {Event} Event object</p>"},{"id":"pNFdqB1ByJ7iPdzVfXJjv","name":"WINDOW_ONSCROLL","brief":"","access":"public","defaultValue":"\"globalThis.onscroll\"","readonly":true,"see":["event.on"],"type":"PropertyDoc","description":"<p>Event for when the (browser) window is scrolled <br>\nData passed : {Event} Event object</p>"},{"id":"hKWXs_tYzx_l9c2s1O-bs","name":"emit","brief":"","examples":[{"caption":"","code":"\n me.event.emit(\"event-name\", a, b, c);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>calls each of the listeners registered for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>arguments to be passed to all listeners</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the event had listeners, false otherwise.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LceSsTDVWmTYnEX6dUF24","name":"off","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.off(\"event-name\", myFunction);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>remove the given listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]},{"id":"qM47Xr89JN-2E8Jlrw61b","name":"on","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.on(\"event-name\", myFunction, this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Add a listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"context","optional":true,"default":"this","description":"<p>The context to invoke the listener with.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]},{"id":"1Pr-HMW6SERoyfyYdAk0v","name":"once","brief":"","access":"public","examples":[{"caption":"","code":"\n me.event.once(\"event-name\", myFunction, this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Add a one-time listener for a given event.</p>","params":[{"identifier":"eventName","optional":false,"description":"<p>The event name.</p>","dataType":{"tokens":[{"value":"string | symbol","kind":"canonical"},{"value":"symbol","kind":"canonical"}],"template":"string | %1"}},{"identifier":"listener","optional":false,"description":"<p>The listener function.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"context","optional":true,"default":"this","description":"<p>The context to invoke the listener with.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p><code>this</code>.</p>","dataType":{"tokens":[{"value":"EventEmitter","kind":"canonical"},{"value":"EventEmitter","kind":"canonical"}],"template":"%1"}}]}]},{"id":"KJUmIqPCiM3weOwO3UsCR","name":"game","brief":"","defaultValue":"true","type":"NSDoc","description":"<p>game represents your current game, it contains all the objects,\ntilemap layers, current viewport, collision map, etc...<br...","members":[{"id":"hZpin17RI_gjOr0JWaOht","name":"lastUpdate","brief":"","access":"public","type":"PropertyDoc","description":"<p>Last time the game update loop was executed. <br>\nUse this value to implement frame prediction in drawing events,\nfor crea..."},{"id":"26h78rNhygfOXcAg_vUL_","name":"mergeGroup","brief":"","access":"public","defaultValue":"true","type":"PropertyDoc","description":"<p>when true, all objects will be added under the root world container.<br>\nWhen false, a <code>me.Container</code> object wi..."},{"id":"Vs7qKFL4lFYzMWkaioezz","name":"sortOn","brief":"","access":"public","defaultValue":"\"z\"","type":"PropertyDoc","description":"<p>Specify the property to be used when sorting entities.\nAccepted values : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"peRjfkDLJU4exuyGGdvCs","name":"viewport","brief":"","access":"public","type":"PropertyDoc","description":"<p>a reference to the current active stage &quot;default&quot; camera</p>"},{"id":"cvzmNGOkocR5tGeYYzZGz","name":"world","brief":"","access":"public","type":"PropertyDoc","description":"<p>a reference to the game world, <br>\na world is a virtual environment containing all the game objects</p>"},{"id":"WmNTI7BhsLI51cOx6tbrN","name":"getParentContainer","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Returns the parent container of the specified Child in the game world</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}}]},{"id":"pyc_Y-ELsKitiTVB6XbVg","name":"onLevelLoaded","brief":"","examples":[{"caption":"","code":"\n // call myFunction () everytime a level is loaded\n me.game.onLevelLoaded = this.myFunction.bind(this);\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Fired when a level is fully loaded and all entities instantiated. <br>\nAdditionnaly the level id will also be passed to th...","params":[],"returns":[]},{"id":"GmjhuaaOtu-FRG38tho0k","name":"repaint","brief":"","scope":"static","type":"FunctionDoc","description":"<p>force the redraw (not update) of all objects</p>","params":[],"returns":[]},{"id":"o7g68Flm8bDuSLWDpkncu","name":"reset","brief":"","scope":"static","type":"FunctionDoc","description":"<p>reset the game Object manager<br>\ndestroy all current objects</p>","params":[],"returns":[]},{"id":"qtEKPMSr4FJXsJBkwKt3m","name":"updateFrameRate","brief":"","scope":"static","see":["timer.maxfps","World.fps"],"type":"FunctionDoc","description":"<p>Update the renderer framerate using the system config variables.</p>","params":[],"returns":[]}]},{"id":"Bx85V3pls-ixAb-SIB3mm","name":"input","brief":"","type":"NSDoc","members":[{"id":"jcqk9plfOPhJssP1hfLfl","name":"GAMEPAD","brief":"","access":"public","type":"NSDoc","description":"<p>Namespace for standard gamepad mapping constants</p>","members":[{"id":"RfqVobp--Nfudq7fPWX4e","name":"AXES","brief":"","access":"public","scope":"static","see":["https://w3c.github.io/gamepad/#remapping"],"type":"EnumDoc","description":"<p>Standard gamepad mapping information for axes<br></p>\n <ul>\n   <li>Left control stick: <code>LX</code> (horizontal), <code..."},{"id":"EoL78PltDNm_BVGGusIrr","name":"BUTTONS","brief":"","access":"public","scope":"static","see":["https://w3c.github.io/gamepad/#remapping"],"type":"EnumDoc","description":"<p>Standard gamepad mapping information for buttons<br></p>\n <ul>\n   <li>Face buttons: <code>FACE_1</code>, <code>FACE_2</cod..."}]},{"id":"10RzsIAl_0o1G3J5uIujh","name":"KEY","brief":"","access":"public","readonly":true,"type":"EnumDoc","description":"<p>standard keyboard constants</p>","members":[{"id":"UGi_xAC2z0f5c0ctuj2RB","name":"A","brief":"","defaultValue":"65","scope":"static","type":"PropertyDoc"},{"id":"hymyG0H_B_6fhniuWxtCG","name":"ADD","brief":"","defaultValue":"107","scope":"static","type":"PropertyDoc"},{"id":"mMY0lJhZTVF6GgbqAAF_T","name":"ALT","brief":"","defaultValue":"18","scope":"static","type":"PropertyDoc"},{"id":"vcCopGg6ZXX2VEDlayrUR","name":"B","brief":"","defaultValue":"66","scope":"static","type":"PropertyDoc"},{"id":"hDeF1xMKWUZB2KWT7IGfU","name":"BACK_SLASH","brief":"","defaultValue":"220","scope":"static","type":"PropertyDoc"},{"id":"sWzxxl8937JATUohRj2GU","name":"C","brief":"","defaultValue":"67","scope":"static","type":"PropertyDoc"},{"id":"r8J1r5H4pXYHAU2vpnfZp","name":"CAPS_LOCK","brief":"","defaultValue":"20","scope":"static","type":"PropertyDoc"},{"id":"mBe-wQcBR-nbPMMWC_JJf","name":"CLOSE_BRACKET","brief":"","defaultValue":"221","scope":"static","type":"PropertyDoc"},{"id":"VIoRgUK6woqoaAFtzwKdA","name":"COMMA","brief":"","defaultValue":"188","scope":"static","type":"PropertyDoc"},{"id":"FkgBAdFk56Oqo6Abv_Yf2","name":"CTRL","brief":"","defaultValue":"17","scope":"static","type":"PropertyDoc"},{"id":"5PqJW8WnFDR9YHi6d4SLt","name":"D","brief":"","defaultValue":"68","scope":"static","type":"PropertyDoc"},{"id":"ZlM1a_lFoK9GONs_lWjFg","name":"DECIMAL","brief":"","defaultValue":"110","scope":"static","type":"PropertyDoc"},{"id":"qfSkBd92WL9N_NyR1iH8q","name":"DELETE","brief":"","defaultValue":"46","scope":"static","type":"PropertyDoc"},{"id":"yJoYrOEIUejRcL1ZkeS0t","name":"DIVIDE","brief":"","defaultValue":"111","scope":"static","type":"PropertyDoc"},{"id":"zRt977cj2mJuNT-cNdXvM","name":"DOWN","brief":"","defaultValue":"40","scope":"static","type":"PropertyDoc"},{"id":"g0ieH2gKHoCZSHMe6UrTN","name":"E","brief":"","defaultValue":"69","scope":"static","type":"PropertyDoc"},{"id":"koi-c9JgfUAWgx3U0fIYl","name":"END","brief":"","defaultValue":"35","scope":"static","type":"PropertyDoc"},{"id":"EMZgtlWWANeq8U03v4Lo_","name":"ENTER","brief":"","defaultValue":"13","scope":"static","type":"PropertyDoc"},{"id":"VUWVOToXpF-SQtBlp3OZ8","name":"ESC","brief":"","defaultValue":"27","scope":"static","type":"PropertyDoc"},{"id":"edXeqUCii8-0PkrvQFi4S","name":"F","brief":"","defaultValue":"70","scope":"static","type":"PropertyDoc"},{"id":"4w8ULFmrLZu5aC3XA3SHm","name":"F1","brief":"","defaultValue":"112","scope":"static","type":"PropertyDoc"},{"id":"_g9m3Bux4CX1cekz1ZT_z","name":"F10","brief":"","defaultValue":"121","scope":"static","type":"PropertyDoc"},{"id":"1IJZmSRZP06Gz17T8ICn4","name":"F11","brief":"","defaultValue":"122","scope":"static","type":"PropertyDoc"},{"id":"YKkYbrT_7-CxlgRnIWK2C","name":"F12","brief":"","defaultValue":"123","scope":"static","type":"PropertyDoc"},{"id":"R9n2KqULzzv-UVYw9-0EF","name":"F2","brief":"","defaultValue":"113","scope":"static","type":"PropertyDoc"},{"id":"BGhfqUSnLi9hw0YZR4B69","name":"F3","brief":"","defaultValue":"114","scope":"static","type":"PropertyDoc"},{"id":"EL0u054brt-kzA1RFYDAX","name":"F4","brief":"","defaultValue":"115","scope":"static","type":"PropertyDoc"},{"id":"IzEMyXfbu8C-iiV61SvME","name":"F5","brief":"","defaultValue":"116","scope":"static","type":"PropertyDoc"},{"id":"vIj4FTEBEsEvCaPvkpzYG","name":"F6","brief":"","defaultValue":"117","scope":"static","type":"PropertyDoc"},{"id":"jJS4eMrEKHVFj6PrtZzPt","name":"F7","brief":"","defaultValue":"118","scope":"static","type":"PropertyDoc"},{"id":"bnbjn0hkh5v5cZRI6TiEZ","name":"F8","brief":"","defaultValue":"119","scope":"static","type":"PropertyDoc"},{"id":"IoKxwyRYa4bUl7H4M64tC","name":"F9","brief":"","defaultValue":"120","scope":"static","type":"PropertyDoc"},{"id":"3PtVubfbBb36hMfupNmbv","name":"FORWAND_SLASH","brief":"","defaultValue":"191","scope":"static","type":"PropertyDoc"},{"id":"Ri2tc1JmwDBLB4OItjsFp","name":"G","brief":"","defaultValue":"71","scope":"static","type":"PropertyDoc"},{"id":"F3jQcCTR5OT1akMxaPXZy","name":"GRAVE_ACCENT","brief":"","defaultValue":"192","scope":"static","type":"PropertyDoc"},{"id":"okZdL0eCbwgCKUzR2KaSz","name":"H","brief":"","defaultValue":"72","scope":"static","type":"PropertyDoc"},{"id":"j8GHRZL20jSVpSZcwwlrl","name":"HOME","brief":"","defaultValue":"36","scope":"static","type":"PropertyDoc"},{"id":"mM5rUigoGtG9GMX2kBS5M","name":"I","brief":"","defaultValue":"73","scope":"static","type":"PropertyDoc"},{"id":"_UEjQaj32XtQJWKQcQXLf","name":"INSERT","brief":"","defaultValue":"45","scope":"static","type":"PropertyDoc"},{"id":"_pitooT8KL0oZvctPd3Gb","name":"J","brief":"","defaultValue":"74","scope":"static","type":"PropertyDoc"},{"id":"aFD1Llyuam5ULaBHTCtJF","name":"K","brief":"","defaultValue":"75","scope":"static","type":"PropertyDoc"},{"id":"djRvnRks5ETnKm8L_A3hM","name":"L","brief":"","defaultValue":"76","scope":"static","type":"PropertyDoc"},{"id":"Ql0pVht8WhPPM59GU64sI","name":"LEFT","brief":"","defaultValue":"37","scope":"static","type":"PropertyDoc"},{"id":"qidz2xHbt-rH9t2x88osk","name":"M","brief":"","defaultValue":"77","scope":"static","type":"PropertyDoc"},{"id":"2KD0832bBff_MWBa2nfUh","name":"MINUS","brief":"","defaultValue":"189","scope":"static","type":"PropertyDoc"},{"id":"NmZuLM4XpZLNLDfU52dgG","name":"MULTIPLY","brief":"","defaultValue":"106","scope":"static","type":"PropertyDoc"},{"id":"bHbTGRi4MRCQ-RGBKqM_V","name":"N","brief":"","defaultValue":"78","scope":"static","type":"PropertyDoc"},{"id":"FG9OdrvaKSp6ePK4_nzam","name":"NUM_LOCK","brief":"","defaultValue":"144","scope":"static","type":"PropertyDoc"},{"id":"_BBI9KqxvcOiCZocWjPJ_","name":"NUM0","brief":"","defaultValue":"48","scope":"static","type":"PropertyDoc"},{"id":"-rgHfbJ9DVMyv2c-lOyG-","name":"NUM1","brief":"","defaultValue":"49","scope":"static","type":"PropertyDoc"},{"id":"-R_rK1bRKb5w0fPTbYSzL","name":"NUM2","brief":"","defaultValue":"50","scope":"static","type":"PropertyDoc"},{"id":"CdRTHq0dNMEnlnL4blBOz","name":"NUM3","brief":"","defaultValue":"51","scope":"static","type":"PropertyDoc"},{"id":"d3LXYOdM15yhijs6Et04q","name":"NUM4","brief":"","defaultValue":"52","scope":"static","type":"PropertyDoc"},{"id":"cxGOT8eHai30_VuTDhxql","name":"NUM5","brief":"","defaultValue":"53","scope":"static","type":"PropertyDoc"},{"id":"Kzq9pk3Eg2amxbWlwixJn","name":"NUM6","brief":"","defaultValue":"54","scope":"static","type":"PropertyDoc"},{"id":"8hiYD6hQI1-FozOTu_qOm","name":"NUM7","brief":"","defaultValue":"55","scope":"static","type":"PropertyDoc"},{"id":"kNrm9eqjrfxdTmhBaasXg","name":"NUM8","brief":"","defaultValue":"56","scope":"static","type":"PropertyDoc"},{"id":"OcL91iogXu33DG6xFmVAB","name":"NUM9","brief":"","defaultValue":"57","scope":"static","type":"PropertyDoc"},{"id":"xpi7-2Sc4mRnYCFXeCdfj","name":"NUMPAD0","brief":"","defaultValue":"96","scope":"static","type":"PropertyDoc"},{"id":"EFFPl4sLw1Zj9OkvfpcMF","name":"NUMPAD1","brief":"","defaultValue":"97","scope":"static","type":"PropertyDoc"},{"id":"2G9L3xz-T7IxM3NCFJHOp","name":"NUMPAD2","brief":"","defaultValue":"98","scope":"static","type":"PropertyDoc"},{"id":"XNMhZ6kTYHzsTHhwq9jJI","name":"NUMPAD3","brief":"","defaultValue":"99","scope":"static","type":"PropertyDoc"},{"id":"_sJjnea_KVwehFu8Nf__5","name":"NUMPAD4","brief":"","defaultValue":"100","scope":"static","type":"PropertyDoc"},{"id":"a8Gel6NX2IOgmmdOyh9Aj","name":"NUMPAD5","brief":"","defaultValue":"101","scope":"static","type":"PropertyDoc"},{"id":"biWrT1THrM2QmJwriZR_T","name":"NUMPAD6","brief":"","defaultValue":"102","scope":"static","type":"PropertyDoc"},{"id":"wR-JqTeyLnSKdKWhK2f9y","name":"NUMPAD7","brief":"","defaultValue":"103","scope":"static","type":"PropertyDoc"},{"id":"jgaDi4Jsh5FcHDO4oSzkI","name":"NUMPAD8","brief":"","defaultValue":"104","scope":"static","type":"PropertyDoc"},{"id":"sIiYVyj1_RjKJS4S_xLbi","name":"NUMPAD9","brief":"","defaultValue":"105","scope":"static","type":"PropertyDoc"},{"id":"pq-oxfPL13nwC0ZLkCIEk","name":"O","brief":"","defaultValue":"79","scope":"static","type":"PropertyDoc"},{"id":"BhBbAlZkhBl-txpQrvVYV","name":"OPEN_BRACKET","brief":"","defaultValue":"219","scope":"static","type":"PropertyDoc"},{"id":"xBuV0GpFUr1RokwqBpEgR","name":"P","brief":"","defaultValue":"80","scope":"static","type":"PropertyDoc"},{"id":"PUxq_anf231VLYZwibfQI","name":"PAGE_DOWN","brief":"","defaultValue":"34","scope":"static","type":"PropertyDoc"},{"id":"idV3TeVviCF5sie2AutRW","name":"PAGE_UP","brief":"","defaultValue":"33","scope":"static","type":"PropertyDoc"},{"id":"cGKGlKhRP-aWRE8Mi6nKh","name":"PAUSE","brief":"","defaultValue":"19","scope":"static","type":"PropertyDoc"},{"id":"JC0_R3ppZ1EM_dpNFwsIW","name":"PERIOD","brief":"","defaultValue":"190","scope":"static","type":"PropertyDoc"},{"id":"U4MNWi1lUo-1DOuuBejJF","name":"PLUS","brief":"","defaultValue":"187","scope":"static","type":"PropertyDoc"},{"id":"-vzH5CNUxAYa9I0TlirP4","name":"PRINT_SCREEN","brief":"","defaultValue":"42","scope":"static","type":"PropertyDoc"},{"id":"d2bPeOXe9wVuKdD1yLWGC","name":"Q","brief":"","defaultValue":"81","scope":"static","type":"PropertyDoc"},{"id":"a3vdLlgLalS2tuDXJUMmw","name":"R","brief":"","defaultValue":"82","scope":"static","type":"PropertyDoc"},{"id":"fYdQxDl6CecmuKTp-kU8D","name":"RIGHT","brief":"","defaultValue":"39","scope":"static","type":"PropertyDoc"},{"id":"XvHOFBSu7BQmJvpgEt3jK","name":"S","brief":"","defaultValue":"83","scope":"static","type":"PropertyDoc"},{"id":"La4OYOKsMiex6tNeyIQ0N","name":"SCROLL_LOCK","brief":"","defaultValue":"145","scope":"static","type":"PropertyDoc"},{"id":"678UqgodgSNi2hiRiI74w","name":"SEMICOLON","brief":"","defaultValue":"186","scope":"static","type":"PropertyDoc"},{"id":"yDWcUla2jfvOJ0P_F9XgL","name":"SHIFT","brief":"","defaultValue":"16","scope":"static","type":"PropertyDoc"},{"id":"-Qwckk22c_wkdYWDiL8-A","name":"SINGLE_QUOTE","brief":"","defaultValue":"222","scope":"static","type":"PropertyDoc"},{"id":"KF7iC06AsGST1TwFlwEEd","name":"SPACE","brief":"","defaultValue":"32","scope":"static","type":"PropertyDoc"},{"id":"XgsOvGppurBJm9Qw41Bra","name":"SUBSTRACT","brief":"","defaultValue":"109","scope":"static","type":"PropertyDoc"},{"id":"rnhmLzp_x17Vx4mQ366Wr","name":"T","brief":"","defaultValue":"84","scope":"static","type":"PropertyDoc"},{"id":"ekn9xmfqnjC6WepgrmFUS","name":"TAB","brief":"","defaultValue":"9","scope":"static","type":"PropertyDoc"},{"id":"j2N91T84x9RlSA_efpxi7","name":"TILDE","brief":"","defaultValue":"126","scope":"static","type":"PropertyDoc"},{"id":"iqSRCvGL9lJ4RH7aK5pSd","name":"U","brief":"","defaultValue":"85","scope":"static","type":"PropertyDoc"},{"id":"0n_1lJcViuNcc3z-Q_ElT","name":"UP","brief":"","defaultValue":"38","scope":"static","type":"PropertyDoc"},{"id":"6_e1Boc9NupPQO_JKQiuO","name":"V","brief":"","defaultValue":"86","scope":"static","type":"PropertyDoc"},{"id":"UN-n4mm_5RXPMGQ8xpCiq","name":"W","brief":"","defaultValue":"87","scope":"static","type":"PropertyDoc"},{"id":"0FGCId4ZhLwPXFPICsY8I","name":"WINDOW_KEY","brief":"","defaultValue":"91","scope":"static","type":"PropertyDoc"},{"id":"B0Oa4VZ1Cm0rwj8mXYLxH","name":"X","brief":"","defaultValue":"88","scope":"static","type":"PropertyDoc"},{"id":"3JMpEKN-3V90BrxqIzeWG","name":"Y","brief":"","defaultValue":"89","scope":"static","type":"PropertyDoc"},{"id":"eXnovdE7VkEJJL7HSjFi5","name":"Z","brief":"","defaultValue":"90","scope":"static","type":"PropertyDoc"}]},{"id":"oOn11UB3udFfq_MBxUwgP","name":"keyBoardEventTarget","brief":"","access":"public","defaultValue":"undefined","type":"PropertyDoc","description":"<p>the default target element for keyboard events (usually the window element in which the game is running)</p>"},{"id":"elNS8pMmEg1IqDdQFD-xX","name":"locked","brief":"","access":"public","defaultValue":"false","type":"PropertyDoc","description":"<p>indicates if the pointer is currently locked</p>"},{"id":"icZW2GpikmWp5kAaz5COb","name":"pointer","brief":"","access":"public","type":"PropertyDoc","description":"<p>Pointer information (current position and size)</p>"},{"id":"lgstVpiriRBg8uOKvp1Fk","name":"pointerEventTarget","brief":"","access":"public","defaultValue":"undefined","type":"PropertyDoc","description":"<p>the default target element for pointer events (usually the canvas element in which the game is rendered)</p>"},{"id":"t-T-lAZfynh3spCbcF1ms","name":"preventDefault","brief":"","access":"public","defaultValue":"true","type":"PropertyDoc","description":"<p>specify if melonJS should prevent all default browser action on registered events.</p>"},{"id":"x1RkQmy1nBd_6UCKJZfw7","name":"setGamepadMapping","brief":"","access":"public","examples":[{"caption":"","code":"\n // A weird controller that has its axis mappings reversed\n me.input.setGamepadMapping(\"Generic USB Controller\", {\n   \"axes\" : [ 3, 2, 1, 0 ],\n   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]\n });\n\n // Mapping extra axes to analog buttons\n me.input.setGamepadMapping(\"Generic Analog Controller\", {\n   \"axes\" : [ 0, 1, 2, 3 ],\n   \"buttons\" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ],\n\n   // Raw axis 4 is mapped to GAMEPAD.BUTTONS.FACE_1\n   // Raw axis 5 is mapped to GAMEPAD.BUTTONS.FACE_2\n   // etc...\n   // Also maps left and right triggers\n   \"analog\" : [ 4, 5, 6, 7, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1 ],\n\n   // Normalize the value of button L2: [-1.0..1.0] => [0.0..1.0]\n   \"normalize_fn\" : function (value, axis, button) {\n     return ((button === me.input.GAMEPAD.BUTTONS.L2) ? ((value + 1) / 2) : value) || 0;\n   }\n });\n"}],"type":"PropertyDoc","description":"<p>specify a custom mapping for a specific gamepad id<br>\nsee below for the default mapping : <br></p>\n <center><img src=\"ima...","params":[{"identifier":"id","description":"<p>Gamepad id string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"mapping","description":"<p>A hash table</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"mapping.axes","description":"<p>Standard analog control stick axis locations</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.buttons","description":"<p>Standard digital button locations</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.analog","optional":true,"description":"<p>Analog axis locations for buttons</p>","dataType":{"tokens":[{"value":"Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2>"}},{"identifier":"mapping.normalize_fn","optional":true,"description":"<p>a function that returns a normalized value in range [-1.0..1.0] for the given value, axis and button</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}]},{"id":"h-aczgBVaLKEH6VLU0Ei1","name":"throttlingInterval","brief":"","access":"public","type":"PropertyDoc","description":"<p>time interval for event throttling in milliseconds<br>\ndefault value : &quot;1000/me.timer.maxfps&quot; ms<br>\nset to 0 ms..."},{"id":"tohOdRWA5AUy_DdkeDP4z","name":"bindGamepad","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.X, \"shoot\");\n ...\n // map the lower face button on the first gamepad to the X key\n me.input.bindGamepad(0, {type:\"buttons\", code: me.input.GAMEPAD.BUTTONS.FACE_1}, me.input.KEY.X);\n // map the left axis value on the first gamepad to the LEFT key\n me.input.bindGamepad(0, {type:\"axes\", code: me.input.GAMEPAD.AXES.LX, threshold: -0.5}, me.input.KEY.LEFT);\n"}],"type":"FunctionDoc","description":"<p>Associate a gamepad event to a keycode</p>","params":[{"identifier":"index","optional":false,"description":"<p>Gamepad index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button","optional":false,"description":"<p>Button/Axis definition</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"button.type","description":"<p>&quot;buttons&quot; or &quot;axes&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"button.code","description":"<p>button or axis code id (See {@link input.GAMEPAD.BUTTONS}, {@link input.GAMEPAD.AXES})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button.threshold","optional":true,"default":"1","description":"<p>value indicating when the axis should trigger the keycode (e.g. -0.5 or 0.5)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"keyCode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bAGdau-MDPiou4li0pzf5","name":"bindKey","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.LEFT,  \"left\");\n me.input.bindKey(me.input.KEY.RIGHT, \"right\");\n me.input.bindKey(me.input.KEY.X,     \"jump\", true);\n me.input.bindKey(me.input.KEY.F1,    \"options\", true, true);\n"}],"type":"FunctionDoc","description":"<p>associate a user defined action to a keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"lock","optional":true,"default":"false","description":"<p>cancel the keypress event once read</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"preventDefault","optional":true,"default":"input.preventDefault","description":"<p>prevent default browser action</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"6iu-DRRoyUbBr0utR_gHb","name":"bindPointer","brief":"","access":"public","examples":[{"caption":"","code":"\n // enable the keyboard\n me.input.bindKey(me.input.KEY.X, \"shoot\");\n // map the left button click on the X key (default if the button is not specified)\n me.input.bindPointer(me.input.KEY.X);\n // map the right button click on the X key\n me.input.bindPointer(me.input.pointer.RIGHT, me.input.KEY.X);\n"}],"type":"FunctionDoc","description":"<p>Associate a pointer event to a keycode<br>\nLeft button – 0\nMiddle button – 1\nRight button – 2</p>","params":[{"identifier":"button","optional":true,"default":"input.pointer.LEFT","description":"<p>(accordingly to W3C values : 0,1,2 for left, middle and right buttons)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"keyCode","dataType":{"tokens":[{"value":"input.KEY","kind":"canonical"},{"value":"input.KEY","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"b9XKYooO0RK7mkqtPHie4","name":"exitPointerLock","brief":"","access":"public","type":"FunctionDoc","description":"<p>Initiates an exit from pointer lock state</p>","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ovwXOHqEbW93vqngkw391","name":"getBindingKey","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the action associated with the given keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>user defined associated action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"2A8HL6gCDxkw5A71R9Cfb","name":"globalToLocal","brief":"","access":"public","examples":[{"caption":"","code":"\n onMouseEvent : function (pointer) {\n    // convert the given into local (viewport) relative coordinates\n    var pos = me.input.globalToLocal(pointer.clientX, pointer.clientY);\n    // do something with pos !\n };\n"}],"type":"FunctionDoc","description":"<p>Translate the specified x and y values from the global (absolute)\ncoordinate to local (viewport) relative coordinate.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the global x coordinate to be translated.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the global y coordinate to be translated.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the translated coordinates</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>A vector object with the corresponding translated coordinates</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Rx67Zd_kI0y3_zpwPKGCl","name":"isKeyPressed","brief":"","access":"public","examples":[{"caption":"","code":"\n if (me.input.isKeyPressed('left')) {\n    //do something\n }\n else if (me.input.isKeyPressed('right')) {\n    //do something else...\n }\n"}],"type":"FunctionDoc","description":"<p>return the key press status of the specified action</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if pressed</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TB7a1bpEVJfDx7QEG4LHq","name":"keyStatus","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the key status of the specified action</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>down (true) or up(false)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KeRI9wntto8Td11yyvVQ-","name":"registerPointerEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n  // onActivate function\n  onActivateEvent: function () {\n     // register on the 'pointerdown' event\n     me.input.registerPointerEvent('pointerdown', this, this.pointerDown.bind(this));\n  },\n\n  // pointerDown event callback\n  pointerDown: function (pointer) {\n    // do something\n    ....\n    // don\"t propagate the event to other objects\n    return false;\n  },\n"}],"see":["Pointer","{@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}"],"type":"FunctionDoc","description":"<p>allows registration of event listeners on the object target. <br>\nmelonJS will pass a me.Pointer object to the defined cal...","params":[{"identifier":"eventType","optional":false,"description":"<p>The event type for which the object is registering <br>\nmelonJS currently supports: <br></p>\n <ul>\n   <li><code>\"pointermo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"region","optional":false,"description":"<p>a shape representing the region to register on</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}},{"identifier":"callback","optional":false,"description":"<p>methods to be called when the event occurs.\nReturning <code>false</code> from the defined callback will prevent the event ...","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"YIU0ya2bdlTUBivzCmxm_","name":"releaseAllPointerEvents","brief":"","access":"public","examples":[{"caption":"","code":"\n // release all registered event on the\n me.input.releaseAllPointerEvents(this);\n"}],"type":"FunctionDoc","description":"<p>allows the removal of all registered event listeners from the object target.</p>","params":[{"identifier":"region","optional":false,"description":"<p>the registered region to release event from</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[]},{"id":"-mTxCqELyPNUDNdLI9xOT","name":"releasePointerEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n // release the registered region on the 'pointerdown' event\n me.input.releasePointerEvent('pointerdown', this);\n"}],"see":["{@link http://www.w3.org/TR/pointerevents/#list-of-pointer-events|W3C Pointer Event list}"],"type":"FunctionDoc","description":"<p>allows the removal of event listeners from the object target.</p>","params":[{"identifier":"eventType","optional":false,"description":"<p>The event type for which the object was registered. See {@link input.registerPointerEvent}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"region","optional":false,"description":"<p>the registered region to release for this event</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4"}},{"identifier":"callback","optional":true,"default":"\"all\"","description":"<p>if specified unregister the event only for the specific callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"fH2Ee1u2XnBGBbuEtW0gA","name":"requestPointerLock","brief":"","access":"public","examples":[{"caption":"","code":"\n // register on the pointer lock change event\n event.on(event.POINTERLOCKCHANGE, (locked)=> {\n     console.log(\"pointer lock: \" + locked);\n });\n // request for pointer lock\n me.input.requestPointerLock();\n"}],"type":"FunctionDoc","description":"<p>request for the pointer to be locked on the parent DOM element.\n(Must be called in a click event or an event that requires...","params":[],"returns":[{"description":"<p>return true if the request was successfully submitted</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Scqf_k9NS-AFZX8zvCQdz","name":"setGamepadDeadzone","brief":"","access":"public","type":"FunctionDoc","description":"<p>Set deadzone for analog gamepad inputs<br>\nThe default deadzone is 0.1 (10%) Analog values less than this will be ignored</p>","params":[{"identifier":"value","optional":false,"description":"<p>Deadzone value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vPJ5HyDyDkwdKkI-h-pwU","name":"setTouchAction","brief":"","access":"public","see":["https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action"],"type":"FunctionDoc","description":"<p>enable/disable all gestures on the given element.<br>\nby default melonJS will disable browser handling of all panning and ...","params":[{"identifier":"element","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"value","optional":true,"default":"\"none\"","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"1iyXvGQXuGdTsqWvxL49F","name":"triggerKeyEvent","brief":"","access":"public","examples":[{"caption":"","code":"\n // trigger a key press\n me.input.triggerKeyEvent(me.input.KEY.LEFT, true);\n"}],"type":"FunctionDoc","description":"<p>trigger the specified key (simulated) event <br></p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"status","optional":true,"default":"false","description":"<p>true to trigger a key down event, or false for key up event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"mouseButton","optional":true,"description":"<p>the mouse button to trigger</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"FIhK7geVKqgjnI7w2Pvpm","name":"unbindGamepad","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindGamepad(0, me.input.GAMEPAD.BUTTONS.FACE_1);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"index","optional":false,"description":"<p>Gamepad index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"button","optional":false,"description":"<p>(See {@link input.GAMEPAD.BUTTONS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bs_f5FuCTUOV-k9mTXBF8","name":"unbindKey","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindKey(me.input.KEY.LEFT);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"keycode","optional":false,"description":"<p>(See {@link input.KEY})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tqUfA_9DvfdkjJyQovb-B","name":"unbindPointer","brief":"","access":"public","examples":[{"caption":"","code":"\n me.input.unbindPointer(me.input.pointer.LEFT);\n"}],"type":"FunctionDoc","description":"<p>unbind the defined keycode</p>","params":[{"identifier":"button","optional":true,"default":"input.pointer.LEFT","description":"<p>(accordingly to W3C values : 0,1,2 for left, middle and right buttons)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"BMKOPmZneqiIZm6Z4cxB7","name":"unlockKey","brief":"","access":"public","examples":[{"caption":"","code":"\n // Unlock jump when touching the ground\n if (!this.falling && !this.jumping) {\n     me.input.unlockKey(\"jump\");\n }\n"}],"type":"FunctionDoc","description":"<p>unlock a key manually</p>","params":[{"identifier":"action","optional":false,"description":"<p>user defined corresponding action</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]}]},{"id":"jh0kugFmYs1AWHxRqdhMz","name":"level","brief":"","type":"NSDoc","description":"<p>a level manager. once ressources loaded, the level manager contains all references of defined levels.</p>","members":[{"id":"31VxuEvo5dnlx1NF2A9P-","name":"add","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>add a level into the game manager (usually called by the preloader)</p>","params":[{"identifier":"format","optional":false,"description":"<p>level format (only &quot;tmx&quot; supported)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"levelId","optional":false,"description":"<p>the level id (or name)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"callback","optional":true,"description":"<p>a function to be called once the level is loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>true if the level was loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"c3QIV5D4KtcZLsHhfJqdh","name":"getCurrentLevel","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the current level definition.\nfor a reference to the live instantiated level,\nrather use the container in which it ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}]},{"id":"6JjZOxpKd7bZwzrWXxukk","name":"getCurrentLevelId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the current level id<br></p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"32ReunP-vfccm5R4VQ-SY","name":"levelCount","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the amount of level preloaded</p>","params":[],"returns":[{"description":"<p>the amount of level preloaded</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"JPQFtaAP6EmUJJ57F0kcK","name":"load","brief":"","access":"public","examples":[{"caption":"","code":"\n // the game assets to be be preloaded\n // TMX maps\n var resources = [\n     {name: \"a4_level1\",   type: \"tmx\",   src: \"data/level/a4_level1.tmx\"},\n     {name: \"a4_level2\",   type: \"tmx\",   src: \"data/level/a4_level2.tmx\"},\n     {name: \"a4_level3\",   type: \"tmx\",   src: \"data/level/a4_level3.tmx\"},\n     // ...\n ];\n\n // ...\n\n // load a level into the game world\n me.level.load(\"a4_level1\");\n ...\n ...\n // load a level into a specific container\n var levelContainer = new me.Container();\n me.level.load(\"a4_level2\", {container:levelContainer});\n // add a simple transformation\n levelContainer.currentTransform.translate(levelContainer.width / 2, levelContainer.height / 2 );\n levelContainer.currentTransform.rotate(0.05);\n levelContainer.currentTransform.translate(-levelContainer.width / 2, -levelContainer.height / 2 );\n // add it to the game world\n me.game.world.addChild(levelContainer);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>load a level into the game manager<br>\n(will also create all level defined entities, etc..)</p>","params":[{"identifier":"levelId","optional":false,"description":"<p>level id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"ame.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.setViewportBounds","optional":true,"default":"true","description":"<p>if true, set the viewport bounds to the map size</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pxRRklWyJBrQMZ95gofTB","name":"next","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>load the next level</p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the next level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wsZLtBAVCFub_2nNf9H3c","name":"previous","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>load the previous level<br></p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the previous level was successfully loaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Mmp3Rf9GwNnFcIFB0O9Uv","name":"reload","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>reload the current level</p>","params":[{"identifier":"options","optional":true,"description":"<p>additional optional parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.container","optional":true,"default":"game.world","description":"<p>container in which to load the specified level</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"options.onLoaded","optional":true,"default":"game.onLevelLoaded","description":"<p>callback for when the level is fully loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"options.flatten","optional":true,"default":"game.mergeGroup","description":"<p>if true, flatten all objects into the given container</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>the current level</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]}]},{"id":"LSiZvW8sc5aPu1NrVPOj2","name":"loader","brief":"","type":"NSDoc","description":"<p>a small class to manage loading of stuff and manage resources</p>","members":[{"id":"11676zJnYHXtCh8sBnRiK","name":"crossOrigin","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n  // allow for cross-origin texture loading in WebGL\n me.loader.crossOrigin = \"anonymous\";\n\n // set all ressources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes"],"type":"PropertyDoc","description":"<p>crossOrigin attribute to configure the CORS requests for Image data element.\nBy default (that is, when the attribute is no..."},{"id":"6u8i_MdOSJy3HAR62cpqq","name":"onload","brief":"","access":"public","examples":[{"caption":"","code":"\n // set a callback when everything is loaded\n me.loader.onload = this.loaded.bind(this);\n"}],"scope":"static","type":"PropertyDoc","description":"<p>onload callback</p>"},{"id":"AULjrEsGmCSq70gy9Qs4D","name":"onProgress","brief":"","access":"public","examples":[{"caption":"","code":"\n // set a callback for progress notification\n me.loader.onProgress = this.updateProgress.bind(this);\n"}],"scope":"static","type":"PropertyDoc","description":"<p>onProgress callback<br>\neach time a resource is loaded, the loader will fire the specified function,\ngiving the actual pro..."},{"id":"Ig284h7rMolYowjFi7mxQ","name":"withCredentials","brief":"","access":"public","defaultValue":"false","examples":[{"caption":"","code":"\n  // enable withCredentials\n me.loader.withCredentials = true;\n\n // set all ressources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"static","see":["https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials"],"type":"PropertyDoc","description":"<p>indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies,\nauthorizatio..."},{"id":"6U9Xm-8JBjl_r8K7I6HX2","name":"getBinary","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified Binary object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the binary object (&quot;ymTrack&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"v11Pkfsv-MbrzSOSFPqmx","name":"getImage","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified Image Object</p>","params":[{"identifier":"image","optional":false,"description":"<p>name of the Image element (&quot;tileset-platformer&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"}],"template":"%1"}}]},{"id":"bO5abjk-3OjQAGFYhLJP7","name":"getJSON","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified JSON Object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the json file to load</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"xKFyncXryWdeg5Q9lIRTB","name":"getTMX","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the specified TMX/TSX object</p>","params":[{"identifier":"elt","optional":false,"description":"<p>name of the tmx/tsx element (&quot;map1&quot;);</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>requested element or null if not found</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"DoJPHumpdtseYDTdjB7UZ","name":"load","brief":"","access":"public","examples":[{"caption":"","code":"\n // load an image asset\n me.loader.load({name: \"avatar\",  type:\"image\",  src: \"data/avatar.png\"}, this.onload.bind(this), this.onerror.bind(this));\n\n // start loading music\n me.loader.load({\n     name   : \"bgmusic\",\n     type   : \"audio\",\n     src    : \"data/audio/\"\n }, function () {\n     me.audio.play(\"bgmusic\");\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Load a single resource (to be used if you need to load additional resource during the game)</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;tmx&quot;, &quot;tsx&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.src","description":"<p>path and/or file name of the resource (for audio assets only the path is required)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.stream","optional":true,"description":"<p>Set to true to force HTML5 Audio, which allows not to wait for large file to be downloaded before playing.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onload","optional":false,"description":"<p>function to be called when the resource is loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"onerror","optional":false,"description":"<p>function to be called in case of error</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>the amount of corresponding resource to be preloaded</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"r1fID12OdQoe__AuDgfaj","name":"preload","brief":"","access":"public","examples":[{"caption":"","code":"\n game_resources = [\n   // PNG tileset\n   {name: \"tileset-platformer\", type: \"image\",  src: \"data/map/tileset.png\"},\n   // PNG packed texture\n   {name: \"texture\", type:\"image\", src: \"data/gfx/texture.png\"}\n   // TSX file\n   {name: \"meta_tiles\", type: \"tsx\", src: \"data/map/meta_tiles.tsx\"},\n   // TMX level (XML & JSON)\n   {name: \"map1\", type: \"tmx\", src: \"data/map/map1.json\"},\n   {name: \"map2\", type: \"tmx\", src: \"data/map/map2.tmx\"},\n   {name: \"map3\", type: \"tmx\", format: \"json\", data: {\"height\":15,\"layers\":[...],\"tilewidth\":32,\"version\":1,\"width\":20}},\n   {name: \"map4\", type: \"tmx\", format: \"xml\", data: {xml representation of tmx}},\n   // audio resources\n   {name: \"bgmusic\", type: \"audio\",  src: \"data/audio/\"},\n   {name: \"cling\",   type: \"audio\",  src: \"data/audio/\"},\n   // binary file\n   {name: \"ymTrack\", type: \"binary\", src: \"data/audio/main.ym\"},\n   // JSON file (used for texturePacker)\n   {name: \"texture\", type: \"json\", src: \"data/gfx/texture.json\"},\n   // JavaScript file\n   {name: \"plugin\", type: \"js\", src: \"data/js/plugin.js\"},\n   // Font Face\n   { name: \"'kenpixel'\", type: \"fontface\",  src: \"url('data/font/kenvector_future.woff2')\" }\n ];\n ...\n // set all resources to be loaded\n me.loader.preload(game.resources, this.loaded.bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set all the specified game resources to be preloaded.</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;,&quot;js&quot;, &quot;tmx&quot;, &quot;tsx&quot;, &qu...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.src","description":"<p>path and/or file name of the resource (for audio assets only the path is required)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.stream","optional":true,"description":"<p>Set to true to force HTML5 Audio, which allows not to wait for large file to be downloaded before playing.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"onload","optional":true,"default":"loader.onload","description":"<p>function to be called when all resources are loaded</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"switchToLoadState","optional":true,"default":"true","description":"<p>automatically switch to the loading screen</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"bm7wkJrQP37M9cKVMZPZn","name":"setBaseURL","brief":"","access":"public","examples":[{"caption":"","code":"\n // change the base URL relative address for audio assets\n me.loader.setBaseURL(\"audio\", \"data/audio/\");\n // change the base URL absolute address for all object types\n me.loader.setBaseURL(\"*\", \"http://myurl.com/\")\n"}],"scope":"instance","type":"MethodDoc","description":"<p>change the default baseURL for the given asset type.<br>\n(this will prepend the asset URL and must finish with a '/')</p>","params":[{"identifier":"type","optional":false,"description":"<p>&quot;*&quot;, &quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;js&quot;, &quot;tmx&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"url","optional":true,"default":"\"./\"","description":"<p>default base URL</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"NvtUxkYKE0xl-wYcTUBil","name":"unload","brief":"","access":"public","examples":[{"caption":"","code":"me.loader.unload({name: \"avatar\",  type:\"image\"});\n"}],"scope":"instance","type":"MethodDoc","description":"<p>unload specified resource to free memory</p>","params":[{"identifier":"res","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"res.name","description":"<p>internal name of the resource</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"res.type","description":"<p>&quot;audio&quot;, binary&quot;, &quot;image&quot;, &quot;json&quot;, &quot;tmx&quot;, &quot;tsx&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if unloaded</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lmd-tspRZ0xh6GrOFq-Et","name":"unloadAll","brief":"","access":"public","examples":[{"caption":"","code":"me.loader.unloadAll();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>unload all resources to free memory</p>","params":[],"returns":[]}]},{"id":"jRn2KB5BDSXU_1IdbTR2l","name":"Math","brief":"","type":"NSDoc","description":"<p>a collection of math utility functions</p>","members":[{"id":"3TOt1CK4CuAraJ-OdcRQM","name":"DEG_TO_RAD","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant to convert from degrees to radians</p>"},{"id":"jZADgDeDIkvNHrtJqzAof","name":"EPSILON","brief":"","access":"public","defaultValue":"0.000001","readonly":true,"type":"PropertyDoc","description":"<p>the difference between 1 and the smallest floating point number greater than 1</p>"},{"id":"6by67P_B2Oi41GX5B-xPt","name":"ETA","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant equals to half pi</p>"},{"id":"t4ouRwRIshUIVjHJYeQRm","name":"RAD_TO_DEG","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant to convert from radians to degrees</p>"},{"id":"Z68_nkgKzc-8R7MZpizxj","name":"TAU","brief":"","access":"public","readonly":true,"type":"PropertyDoc","description":"<p>constant equals to 2 times pi</p>"},{"id":"f9HVWW3dhdnvOfso2PnLS","name":"clamp","brief":"","access":"public","type":"FunctionDoc","description":"<p>clamp the given value</p>","params":[{"identifier":"val","optional":false,"description":"<p>the value to clamp</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"low","optional":false,"description":"<p>lower limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"description":"<p>higher limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>clamped value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qPbMkzll0v2olHL_LktUb","name":"degToRad","brief":"","access":"public","examples":[{"caption":"","code":"\n // convert a specific angle\n me.Math.degToRad(60); // return 1.0471...\n"}],"type":"FunctionDoc","description":"<p>Converts an angle in degrees to an angle in radians</p>","params":[{"identifier":"angle","optional":false,"description":"<p>angle in degrees</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"uQvJ2eOQNx3kGgW8K5xJX","name":"isPowerOfTwo","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given value is a power of two</p>","params":[{"identifier":"val","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VXbEtiX3a2XM57cUhJKRR","name":"nextPowerOfTwo","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the next power of two for the given value</p>","params":[{"identifier":"val","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TDQROBDGaQEG46O7yBjGu","name":"radToDeg","brief":"","access":"public","examples":[{"caption":"","code":"\n // convert a specific angle\n me.Math.radToDeg(1.0471975511965976); // return 60\n"}],"type":"FunctionDoc","description":"<p>Converts an angle in radians to an angle in degrees.</p>","params":[{"identifier":"radians","optional":false,"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding angle in degrees</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jxZXB4NXFfEMmNZCE148S","name":"random","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.random(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a random integer between min (included) and max (excluded)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"G-CXDR8_f5VPwg4sL2tyq","name":"randomFloat","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.randomFloat(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a random float between min, max (exclusive)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"SSYWEMRU8MaSEhYV0JuvI","name":"round","brief":"","access":"public","examples":[{"caption":"","code":"\n // round a specific value to 2 digits\n me.Math.round(10.33333, 2); // return 10.33\n"}],"type":"FunctionDoc","description":"<p>round a value to the specified number of digit</p>","params":[{"identifier":"num","optional":false,"description":"<p>value to be rounded.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dec","optional":true,"default":"0","description":"<p>number of decimal digit to be rounded to.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>rounded value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7Of6Vz-WdtL7Jb4tX3oZ9","name":"toBeCloseTo","brief":"","access":"public","examples":[{"caption":"","code":"\n // test if the given value is close to 10\n if (me.Math.toBeCloseTo(10, value)) {\n     // do something\n }\n"}],"type":"FunctionDoc","description":"<p>check if the given value is close to the expected one</p>","params":[{"identifier":"expected","optional":false,"description":"<p>value to be compared with.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"actual","optional":false,"description":"<p>actual value to compare</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"precision","optional":true,"default":"2","description":"<p>float precision for the comparison</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>if close to</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lFD3OrrxTNZQQJYN5X4Ax","name":"weightedRandom","brief":"","access":"public","examples":[{"caption":"","code":"\n // Print a random number; one of 5, 6, 7, 8, 9\n console.log(me.Math.weightedRandom(5, 10) );\n"}],"type":"FunctionDoc","description":"<p>return a weighted random between min, max (exclusive)</p>","params":[{"identifier":"min","optional":false,"description":"<p>minimum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":false,"description":"<p>maximum value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"ZAFqEViErSAD7AtGlAebb","name":"ParticleEmitterSettings","brief":"","readonly":true,"see":["ParticleEmitter"],"type":"NSDoc","description":"<p>ParticleEmitterSettings contains the default settings for ParticleEmitter</p>","members":[{"id":"aTRi9UU7jUZX6gldlt4Ch","name":"angle","brief":"","access":"public","defaultValue":"Math.PI / 2","scope":"static","type":"PropertyDoc","description":"<p>Start angle for particle launch in Radians</p>"},{"id":"zx894xXrBNtwLe5XCwx-X","name":"angleVariation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Variation in the start angle for particle launch in Radians.</p>"},{"id":"1tfEXsDHB58_6xfJljKAY","name":"blendMode","brief":"","access":"public","defaultValue":"normal","scope":"static","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied when rendering particles.\n(note: this will superseed the <code>textureAdditive</code> setting..."},{"id":"Xh4gndogB-2kE6nznjrjA","name":"duration","brief":"","access":"public","defaultValue":"Infinity","scope":"static","type":"PropertyDoc","description":"<p>Duration that the emitter releases particles in ms (used only if emitter is Stream).\nAfter this period, the emitter stop t..."},{"id":"0uKxF33PnaSQX8nsUuXF1","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Render particles in screen space.</p>"},{"id":"Y0cXqPdnW0cMrZwPZBggy","name":"followTrajectory","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>Update the rotation of particle in accordance the particle trajectory.<br>\nThe particle sprite should aim at zero angle (d..."},{"id":"ObY_iS6RaR9lX7UvYqVu-","name":"framesToSkip","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Skip n frames after updating the particle system once.\nThis can be used to reduce the performance impact of emitters with ..."},{"id":"T26PqYMZmu1uriEsW1O4L","name":"frequency","brief":"","access":"public","defaultValue":"100","scope":"static","type":"PropertyDoc","description":"<p>How often a particle is emitted in ms (used only if emitter is a Stream).</p>"},{"id":"v9EWyV6wJUk4wGUr2VdmN","name":"gravity","brief":"","access":"public","defaultValue":"0","scope":"static","see":["game.world.gravity"],"type":"PropertyDoc","description":"<p>Vertical force (Gravity) for each particle</p>"},{"id":"ztuovLhNv1GyISeIWkGLk","name":"height","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Height of the particle spawn area</p>"},{"id":"mOF8ifOuv81_ktfMu9qEd","name":"image","brief":"","access":"public","defaultValue":"undefined","scope":"static","see":["ParticleEmitterSettings.textureSize"],"type":"PropertyDoc","description":"<p>image used for particles texture\n(by default melonJS will create an white 8x8 texture image)</p>"},{"id":"sMFAfQIzDlyYe4kFeSu5Q","name":"maxEndScale","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Maximum end scale ratio for particles</p>"},{"id":"ORI6s-6M1hZl5agdIxGRB","name":"maxLife","brief":"","access":"public","defaultValue":"3000","scope":"static","type":"PropertyDoc","description":"<p>Maximum time each particle lives once it is emitted in ms.</p>"},{"id":"XBF78Oj_iMvy6TI398wv0","name":"maxParticles","brief":"","access":"public","defaultValue":"10","scope":"static","type":"PropertyDoc","description":"<p>Maximum number of particles launched each time in this emitter (used only if emitter is Stream).</p>"},{"id":"mhl3v5-Uu4dFgmjSRHeFF","name":"maxRotation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Maximum start rotation for particles sprites in Radians</p>"},{"id":"5OQ3s5iINroKB8mQ9CQjc","name":"maxStartScale","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Maximum start scale ratio for particles (1 = no scaling)</p>"},{"id":"o__TeAABcp9vN0WZln4wv","name":"minEndScale","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Minimum end scale ratio for particles</p>"},{"id":"GuK-pZA6fTlTDgTjtYznj","name":"minLife","brief":"","access":"public","defaultValue":"1000","scope":"static","type":"PropertyDoc","description":"<p>Minimum time each particle lives once it is emitted in ms.</p>"},{"id":"BRDtH7FW05J9joHceZSAI","name":"minRotation","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Minimum start rotation for particles sprites in Radians</p>"},{"id":"TjDuCxMeTxf55rxmceH1T","name":"minStartScale","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Minimum start scale ratio for particles (1 = no scaling)</p>"},{"id":"4jhS7gBI9WHIfobDE_BoD","name":"onlyInViewport","brief":"","access":"public","defaultValue":"true","scope":"static","type":"PropertyDoc","description":"<p>Update particles only in the viewport, remove it when out of viewport.</p>"},{"id":"OpSGrA0cBBki_KQRgGWEG","name":"speed","brief":"","access":"public","defaultValue":"2","scope":"static","type":"PropertyDoc","description":"<p>Start speed of particles.<br></p>"},{"id":"Qc3kogO0TsNJ_xJkiNp-M","name":"speedVariation","brief":"","access":"public","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Variation in the start speed of particles</p>"},{"id":"vALYKEUxyObbSf3TycvHs","name":"textureAdditive","brief":"","access":"public","defaultValue":"false","scope":"static","see":["ParticleEmitterSettings.blendMode"],"type":"PropertyDoc","description":"<p>Enable the Texture Additive by composite operation (&quot;additive&quot; blendMode)</p>"},{"id":"o8kCJc5c47AyH5oRnhosp","name":"textureSize","brief":"","access":"public","defaultValue":"8","scope":"static","see":["ParticleEmitterSettings.image"],"type":"PropertyDoc","description":"<p>default texture size used for particles if no image is specified\n(by default melonJS will create an white 8x8 texture imag..."},{"id":"FJdrVIICSWWRCJ1NQ7GyV","name":"tint","brief":"","access":"public","defaultValue":"\"#fff\"","scope":"static","type":"PropertyDoc","description":"<p>tint to be applied to particles</p>"},{"id":"RNcrdgnlxpiW_AQbVoAvZ","name":"totalParticles","brief":"","access":"public","defaultValue":"50","scope":"static","type":"PropertyDoc","description":"<p>Total number of particles in the emitter</p>"},{"id":"z4kOHKji70oOf-xWo7qH2","name":"width","brief":"","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>Width of the particle spawn area.</p>"},{"id":"ZM1RafoPuYGRaHHRXMAkv","name":"wind","brief":"","access":"public","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>Horizontal force (like a Wind) for each particle</p>"}]},{"id":"t16bq3wVZKG0BtoUWwEpC","name":"plugin","brief":"","type":"NSDoc","members":[{"id":"bGadQWhdaiExl8EOUeMav","name":"Base","brief":"","scope":"static","see":["plugin"],"type":"ClassDoc","description":"<p>a base Object for plugin <br>\nplugin must be installed using the register function</p>","members":[{"id":"zM8IQUXG6QFiybT6pQ132","name":"version","brief":"","access":"public","defaultValue":"\"__VERSION__\"","scope":"instance","type":"PropertyDoc","description":"<p>define the minimum required version of melonJS<br>\nthis can be overridden by the plugin</p>"},{"id":"ParHuKAKex7jF3jwL4OAf","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[]}]},{"id":"TbUPFkpCz3aQ-rmursL82","name":"patch","brief":"","access":"public","examples":[{"caption":"","code":"\n // redefine the me.game.update function with a new one\n me.plugin.patch(me.game, \"update\", function () {\n   // display something in the console\n   console.log(\"duh\");\n   // call the original me.game.update function\n   this._patched();\n });\n"}],"scope":"static","type":"MethodDoc","description":"<p>patch a melonJS function</p>","params":[{"identifier":"proto","optional":false,"description":"<p>target object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"name","optional":false,"description":"<p>target function</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"fn","optional":false,"description":"<p>replacement function</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"G6ah9T-9cN7aYAprJJrPP","name":"register","brief":"","access":"public","examples":[{"caption":"","code":"\n // register a new plugin\n me.plugin.register(TestPlugin, \"testPlugin\");\n // the plugin then also become available\n // under then me.plugins namespace\n me.plugins.testPlugin.myfunction ();\n"}],"scope":"static","see":["Base"],"type":"MethodDoc","description":"<p>Register a plugin.</p>","params":[{"identifier":"pluginObj","optional":false,"description":"<p>Plugin object to instantiate and register</p>","dataType":{"tokens":[{"value":"plugin.Base","kind":"canonical"},{"value":"plugin.Base","kind":"link"}],"template":"%1"}},{"identifier":"name","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>all extra parameters will be passed to the plugin constructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]}]},{"id":"asfV1qpeRD2gTuP7dyAoH","name":"plugins","brief":"","see":["plugin.register"],"type":"NSDoc","description":"<p>This namespace is a container for all registered plugins.</p>"},{"id":"xAe4rNiSaCB57VeIgjxlk","name":"pool","brief":"","examples":[{"caption":"","code":"\n // register our bullet object into the object pool\n pool.register(\"bullet\", BulletEntity, true);\n // ...\n // when we need to manually create a new bullet:\n var bullet = pool.pull(\"bullet\", x, y, direction, velocity);\n // ...\n // when we want to destroy existing object, the remove\n // function will ensure the object can then be reallocated later\n game.world.removeChild(bullet);\n"}],"see":["ObjectPool"],"type":"NSDoc","description":"<p>a default global ObjectPool instance</p>"},{"id":"bmd2mOZr0ZiGN-plnCp0N","name":"save","brief":"","examples":[{"caption":"","code":"\n // Initialize \"score\" and \"lives\" with default values\n // This loads the properties from localStorage if they exist, else it sets the given defaults\n me.save.add({ score : 0, lives : 3 });\n\n // Print all\n // On first load, this prints { score : 0, lives : 3 }\n // On further reloads, it prints { score : 31337, lives : 3, complexObject : ... }\n // Because the following changes will be saved to localStorage\n console.log(JSON.stringify(me.save));\n\n // Save score\n me.save.score = 31337;\n\n // Also supports complex objects thanks to the JSON backend\n me.save.add({ complexObject : {} })\n me.save.complexObject = { a : \"b\", c : [ 1, 2, 3, \"d\" ], e : { f : [{}] } };\n\n // WARNING: Do not set any child properties of complex objects directly!\n // Changes made that way will not save. Always set the entire object value at once.\n // If you cannot live with this limitation, there's a workaround:\n me.save.complexObject.c.push(\"foo\"); // Modify a child property\n me.save.complexObject = me.save.complexObject; // Save the entire object!\n\n // Remove \"lives\" from localStorage\n me.save.remove(\"lives\");"}],"type":"NSDoc","description":"<p>allow to access and manage the device localStorage</p>","members":[{"id":"vZj3O3eAPiqLaeK5lWOc1","name":"add","brief":"","examples":[{"caption":"","code":"\n // Initialize \"score\" and \"lives\" with default values\n me.save.add({ score : 0, lives : 3 });\n // get or set the value through me.save\n me.save.score = 1000;\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Add new keys to localStorage and set them to the given default values if they do not exist</p>","params":[{"identifier":"props","optional":false,"description":"<p>key and corresponding values</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"FArKiJdzIu5EJngDbAz7W","name":"remove","brief":"","examples":[{"caption":"","code":"\n // Remove the \"score\" key from localStorage\n me.save.remove(\"score\");\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Remove a key from localStorage</p>","params":[{"identifier":"key","optional":false,"description":"<p>key to be removed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]}]},{"id":"iBYJ_qIFby_M6YzW3uYAC","name":"state","brief":"","type":"NSDoc","description":"<p>a State Manager (state machine)</p>","members":[{"id":"Q0VPGi3PUHE04ggRuZI_g","name":"CREDITS","brief":"","defaultValue":"7","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Credits Stage</p>"},{"id":"lQuGFtDfiG4VHw8GufCGu","name":"GAME_END","brief":"","defaultValue":"5","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Game End Stage</p>"},{"id":"rtX4swAmR7eCfO5NOwHnK","name":"GAMEOVER","brief":"","defaultValue":"4","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Game Over Stage</p>"},{"id":"ybMKE9NhNI6c6vvonNg2e","name":"LOADING","brief":"","defaultValue":"0","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Loading Stage</p>"},{"id":"UcNLCIY4PPW8kT_iA1cRZ","name":"MENU","brief":"","defaultValue":"1","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Menu Stage</p>"},{"id":"tSypCWn4wvWjlVjUMp8Ry","name":"PLAY","brief":"","defaultValue":"3","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Play Stage</p>"},{"id":"2VpQr3SIcNg65thas_EuR","name":"READY","brief":"","defaultValue":"2","scope":"static","type":"PropertyDoc","description":"<p>default state ID for &quot;Ready&quot; Stage</p>"},{"id":"LZHhtZDvGY6Q6SH1h-G-P","name":"SCORE","brief":"","defaultValue":"6","scope":"static","type":"PropertyDoc","description":"<p>default state ID for High Score Stage</p>"},{"id":"NsfA8-whGHNcflCRZH7eF","name":"SETTINGS","brief":"","defaultValue":"8","scope":"static","type":"PropertyDoc","description":"<p>default state ID for Settings Stage</p>"},{"id":"cc2o8nt246j3Ifye2bsAO","name":"SETTINGS","brief":"","defaultValue":"9","scope":"static","type":"PropertyDoc","description":"<p>default state ID for the default Stage\n(the default stage is the one running as soon as melonJS is started)</p>"},{"id":"QlqtdhQse55ORx_FmGByc","name":"USER","brief":"","defaultValue":"100","examples":[{"caption":"","code":"\n var STATE_INFO = me.state.USER + 0;\n var STATE_WARN = me.state.USER + 1;\n var STATE_ERROR = me.state.USER + 2;\n var STATE_CUTSCENE = me.state.USER + 3;\n"}],"scope":"static","type":"PropertyDoc","description":"<p>default state ID for user defined constants<br></p>"},{"id":"p0AVT5PgxgEu31AdvTqCr","name":"change","brief":"","access":"public","examples":[{"caption":"","code":"\n // The onResetEvent method on the play screen will receive two args:\n // \"level_1\" and the number 3\n me.state.change(me.state.PLAY, \"level_1\", 3);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>change the game/app state</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"forceChange","optional":false,"description":"<p>if true the state will be changed immediately</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>extra arguments to be passed to the reset functions</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"auDGRddIGL4G8Mtqih3pq","name":"current","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the current stage<br>\nuseful to call a object specific method</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}}]},{"id":"gNx9J5eTkQymR6wSAfLcc","name":"isCurrent","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the specified state is the current one</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the specified state is the current one</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fv6hOP_mrhbwY77xUG7uq","name":"isPaused","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the pause state of the state manager</p>","params":[],"returns":[{"description":"<p>true if the game is paused</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rwJZNA3faWXTKj5liYC2d","name":"isRunning","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the running state of the state manager</p>","params":[],"returns":[{"description":"<p>true if a &quot;process is running&quot;</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pnUhVB8X8iNu4ejMn-kbV","name":"pause","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>pause the current stage</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>pause current music track on screen pause</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"GtXyEOqrADAB8UAD6jIfO","name":"restart","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Restart the current stage from a full stop.</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>resume current music track on screen resume</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"MtDC1UewUIJimzbSp5tyP","name":"resume","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>resume the current stage</p>","params":[{"identifier":"music","optional":true,"default":"false","description":"<p>resume current music track on screen resume</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"yBB5jaLreib-5Kc1ej2HU","name":"set","brief":"","access":"public","examples":[{"caption":"","code":"\n class MenuButton extends me.GUI_Object {\n     onClick() {\n         // Change to the PLAY state when the button is clicked\n         me.state.change(me.state.PLAY);\n         return true;\n     }\n };\n\n class MenuScreen extends me.Stage {\n     onResetEvent() {\n         // Load background image\n         me.game.world.addChild(\n             new me.ImageLayer(0, 0, {\n                 image : \"bg\",\n                 z: 0 // z-index\n             }\n         );\n\n         // Add a button\n         me.game.world.addChild(\n             new MenuButton(350, 200, { \"image\" : \"start\" }),\n             1 // z-index\n         );\n\n         // Play music\n         me.audio.playTrack(\"menu\");\n     }\n\n     onDestroyEvent() {\n         // Stop music\n         me.audio.stopTrack();\n     }\n };\n\n me.state.set(me.state.MENU, new MenuScreen());\n"}],"scope":"instance","type":"MethodDoc","description":"<p>associate the specified state with a Stage</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"stage","optional":false,"description":"<p>Instantiated Stage to associate with state ID</p>","dataType":{"tokens":[{"value":"Stage","kind":"canonical"},{"value":"Stage","kind":"link"}],"template":"%1"}},{"identifier":"start ","optional":true,"default":" false","description":"<p>if true the state will be changed immediately after adding it.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"EFWyeNcDbuP47KsB5RkCR","name":"setTransition","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>enable/disable transition for a specific state (by default enabled for all)</p>","params":[{"identifier":"state","optional":false,"description":"<p>State ID (see constants)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":false,"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"LD8xZ_CnI7u70zZXm7ep-","name":"stop","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Stop the current stage.</p>","params":[{"identifier":"pauseTrack","optional":true,"default":"false","description":"<p>pause current track on screen stop.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"evnqkFIAR7KdEqq5GGyEa","name":"transition","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>specify a global transition effect</p>","params":[{"identifier":"effect","optional":false,"description":"<p>(only &quot;fade&quot; is supported for now)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"OKx15uHAgHNCsnIA5uYnw","name":"timer","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" after 1000ms\n timer.setTimeout(myFunction, 1000);\n // set a timer to call \"myFunction\" after 1000ms (respecting the pause state) and passing param1 and param2\n timer.setTimeout(myFunction, 1000, true, param1, param2);\n // set a timer to call \"myFunction\" every 1000ms\n timer.setInterval(myFunction, 1000);\n // set a timer to call \"myFunction\" every 1000ms (respecting the pause state) and passing param1 and param2\n timer.setInterval(myFunction, 1000, true, param1, param2);\n"}],"readonly":true,"see":["Timer"],"type":"NSDoc","description":"<p>the default global Timer instance</p>","members":[{"id":"pAyc0mBfvGzxGIpPucg55","name":"fps","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Last measured fps rate.<br/>\nThis feature is disabled by default, unless the debugPanel is enabled/visible</p>"},{"id":"FJ7IVoSKg1J1P-9RKMng5","name":"interpolation","brief":"","defaultValue":"false","scope":"instance","see":["timer.tick"],"type":"PropertyDoc","description":"<p>Enable/disable frame interpolation</p>"},{"id":"B1oIRjy6Z4pazvhaMX5p0","name":"maxfps","brief":"","access":"public","defaultValue":"60","scope":"instance","see":["timer.tick"],"type":"PropertyDoc","description":"<p>Set the maximum target display frame per second</p>"},{"id":"ozzo2pbkyg_6ae4THE7et","name":"tick","brief":"","access":"public","defaultValue":"1","scope":"instance","see":["timer.interpolation"],"type":"PropertyDoc","description":"<p>Last game tick value.<br/>\nUse this value to scale velocities during frame drops due to slow\nhardware or when setting an F..."},{"id":"FZ1HBlMuQ1eYEpvR3U_Rh","name":"clearInterval","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the Interval set by me.timer.setInterval().</p>","params":[{"identifier":"intervalID","optional":false,"description":"<p>ID of the interval to be cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"q878M4GppKGu21BrdL7qu","name":"clearTimeout","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the delay set by me.timer.setTimeout().</p>","params":[{"identifier":"timeoutID","optional":false,"description":"<p>ID of the timeout to be cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"I2MiIHuxQCXdO6fU2XpZY","name":"getDelta","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return elapsed time in milliseconds since the last update</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"MsbiIEmdUfbf9zX7hD8XM","name":"getTime","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the current timestamp in milliseconds <br>\nsince the game has started or since linux epoch (based on browser suppor...","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2SrrQ0k9vOBino-x6xuO8","name":"setInterval","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" every 1000ms\n me.timer.setInterval(myFunction, 1000);\n // set a timer to call \"myFunction\" every 1000ms (respecting the pause state) and passing param1 and param2\n me.timer.setInterval(myFunction, 1000, true, param1, param2);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Calls a function continously at the specified interval.  See setTimeout to call function a single time.</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to execute</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>the number of milliseconds (thousandths of a second) on how often to execute the function</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pauseable","optional":true,"default":"true","description":"<p>respects the pause state of the engine.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>optional parameters which are passed through to the function specified by fn once the timer expires.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>The numerical ID of the timer, which can be used later with me.timer.clearInterval().</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"sToUcBBTEpNX8Y9T7vv0A","name":"setTimeout","brief":"","examples":[{"caption":"","code":"\n // set a timer to call \"myFunction\" after 1000ms\n me.timer.setTimeout(myFunction, 1000);\n // set a timer to call \"myFunction\" after 1000ms (respecting the pause state) and passing param1 and param2\n me.timer.setTimeout(myFunction, 1000, true, param1, param2);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Calls a function once after a specified delay. See me.timer.setInterval to repeativly call a function.</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function you want to execute after delay milliseconds.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>the number of milliseconds (thousandths of a second) that the function call should be delayed by.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pauseable","optional":true,"default":"true","description":"<p>respects the pause state of the engine.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>optional parameters which are passed through to the function specified by fn once the timer expires.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>The numerical ID of the timer, which can be used later with me.timer.clearTimeout().</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"pkpPmeARxEABw8KkCm46p","name":"utils","brief":"","defaultValue":"\"\"","type":"NSDoc","description":"<p>a collection of utility functions</p>","members":[{"id":"mrs3Fj5rNO15tiENV20Fy","name":"agent","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of utility functons to ease porting between different user agents.</p>","members":[{"id":"UTkvIcMajroY3TwTq5tdq","name":"prefixed","brief":"","access":"public","type":"FunctionDoc","description":"<p>Get a vendor-prefixed property</p>","params":[{"identifier":"name","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"obj","optional":true,"default":"globalThis","description":"<p>Object or element reference to access</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Value of property</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"29_oVEp2LOt9aS-w4BCxW","name":"setPrefixed","brief":"","access":"public","type":"FunctionDoc","description":"<p>Set a vendor-prefixed property</p>","params":[{"identifier":"name","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Property value</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"obj","optional":true,"default":"globalThis","description":"<p>Object or element reference to access</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if one of the vendor-prefixed property was found</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"UoWnVaSNVqTNsDokIk3JK","name":"array","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of array utility functions</p>","members":[{"id":"_Kp7_5fOq_2pJ1lS3B5Yn","name":"random","brief":"","access":"public","examples":[{"caption":"","code":"\n // Select a random array element\n var arr = [ \"foo\", \"bar\", \"baz\" ];\n console.log(me.utils.array.random(arr));\n"}],"type":"FunctionDoc","description":"<p>return a random array element</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array to pick a element</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random member of array</p>","dataType":{"tokens":[{"value":"any","kind":"canonical"}],"template":"any"}}]},{"id":"GDdnGX7q--gfjGvZamM5d","name":"remove","brief":"","access":"public","type":"FunctionDoc","description":"<p>Remove the specified object from the given Array</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array from which to remove an object</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}},{"identifier":"obj","optional":false,"description":"<p>to be removed</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the modified Array\nvar arr = [ &quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot; ];\n// remove &quot;foo&quot; from the arr...","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"GsM_e_QnnZggZd3H-Xkjv","name":"weightedRandom","brief":"","access":"public","type":"FunctionDoc","description":"<p>return a weighted random array element, favoring the earlier entries</p>","params":[{"identifier":"arr","optional":false,"description":"<p>array to pick a element</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>random member of array</p>","dataType":{"tokens":[{"value":"any","kind":"canonical"}],"template":"any"}}]}]},{"id":"OUW277mQ2FB6r-SmurWcA","name":"file","brief":"","defaultValue":"undefined","readonly":true,"scope":"static","type":"NSDoc","description":"<p>a collection of file utility functions</p>","members":[{"id":"bbjU2VcHBsLmkngtTDnZY","name":"getBasename","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the base name of the file without path info</p>","params":[{"identifier":"path","optional":false,"description":"<p>path containing the filename</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the base name without path information.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"APxlexTBzp0WkOfHEexNo","name":"getExtension","brief":"","access":"public","type":"FunctionDoc","description":"<p>return the extension of the file in the given path</p>","params":[{"identifier":"path","optional":false,"description":"<p>path containing the filename</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>filename extension.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]}]},{"id":"0WosvuhtDSEQZg1ThLGFY","name":"function","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of utility functions</p>","members":[{"id":"zL_Sn5wX4joutTFMFjrgW","name":"defer","brief":"","access":"public","examples":[{"caption":"","code":"\n // execute myFunc() when the stack is empty,\n // with the current context and [1, 2, 3] as parameter\n me.utils.function.defer(myFunc, this, 1, 2, 3);\n"}],"type":"FunctionDoc","description":"<p>Executes a function as soon as the interpreter is idle (stack empty).</p>","params":[{"identifier":"func","optional":false,"description":"<p>The function to be deferred.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":false,"description":"<p>The value to be passed as the this parameter to the target function when the deferred function is called</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"args","optional":false,"variadic":true,"description":"<p>Optional additional arguments to carry for the function.</p>","dataType":{"tokens":[{"value":"unknown","kind":"canonical"}],"template":"unknown"}}],"returns":[{"description":"<p>id that can be used to clear the deferred function using\nclearTimeout</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-ZgR-0lE0dYuh56v9dD4l","name":"throttle","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns a function that, when invoked will only be triggered at most\nonce during a given window of time</p>","params":[{"identifier":"fn","optional":false,"description":"<p>the function to be throttled.</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"delay","optional":false,"description":"<p>The delay in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"no_trailing","optional":false,"description":"<p>disable the execution on the trailing edge</p>","dataType":{"tokens":[{"value":"no_trailing","kind":"canonical"},{"value":"no_trailing","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the function that will be throttled</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}]}]},{"id":"JxlmOS7EPV-58ONY_hp1K","name":"string","brief":"","scope":"static","type":"NSDoc","description":"<p>a collection of string utility functions</p>","members":[{"id":"xM75iXU5mfA4VKeAiy6Z1","name":"capitalize","brief":"","access":"public","type":"FunctionDoc","description":"<p>converts the first character of the given string to uppercase</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be capitalized</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the capitalized string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"sRvZJdAPyYzjihqNVD-hX","name":"isBoolean","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given string contains a true or false</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be tested</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if the string is either true or false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"r5liEDI8rvoU0Cg3lQOH_","name":"isNumeric","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns true if the given string contains a numeric integer or float value</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be tested</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if string contains only digits</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GW60WFhIDheJxTo57Y0va","name":"toHex","brief":"","access":"public","type":"FunctionDoc","description":"<p>convert a string to the corresponding hexadecimal value</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be converted</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>the converted hexadecimal value</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"PtEQOve1ExWUoTLMj-T3j","name":"trimLeft","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the string stripped of whitespace from the left.</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be trimmed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>trimmed string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"TCsh-5Z2nwBtymjCnY_um","name":"trimRight","brief":"","access":"public","type":"FunctionDoc","description":"<p>returns the string stripped of whitespace from the right.</p>","params":[{"identifier":"str","optional":false,"description":"<p>the string to be trimmed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>trimmed string</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]}]},{"id":"oFZfYh61DdvRSgt6ZeCEU","name":"checkVersion","brief":"","access":"public","examples":[{"caption":"","code":"\n if (me.utils.checkVersion(\"7.0.0\") > 0) {\n     console.error(\n         \"melonJS is too old. Expected: 7.0.0, Got: 6.3.0\"\n     );\n }\n"}],"scope":"static","type":"MethodDoc","description":"<p>Compare two version strings</p>","params":[{"identifier":"first","optional":false,"description":"<p>First version string to compare</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"second","optional":true,"default":"version","description":"<p>Second version string to compare</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>comparison result <br>&lt; 0 : first &lt; second<br>\n0 : first == second<br>\n&gt; 0 : first &gt; second</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"rO8K4siv_LGTeHbFYl5ok","name":"getPixels","brief":"","access":"public","scope":"static","type":"MethodDoc","description":"<p>Get image pixels</p>","params":[{"identifier":"image","optional":false,"description":"<p>Image to read</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>ImageData object</p>","dataType":{"tokens":[{"value":"ImageData","kind":"canonical"},{"value":"ImageData","kind":"canonical"}],"template":"%1"}}]},{"id":"_ZiAUms3Cv427_OpcDHKO","name":"getUriFragment","brief":"","access":"public","examples":[{"caption":"","code":"\n // http://www.example.com/index.html#debug&hitbox=true&mytag=value\n var UriFragment = me.utils.getUriFragment();\n console.log(UriFragment[\"mytag\"]); //> \"value\"\n"}],"scope":"static","type":"MethodDoc","description":"<p>parse the fragment (hash) from a URL and returns them into</p>","params":[{"identifier":"url","optional":true,"default":"document.location","description":"<p>an optional params string or URL containing fragment (hash) params to be parsed</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>an object representing the deserialized params string.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"members":[{"id":"1Ls-Dt96qUO59g1rGkZaf","name":"debug","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>display the debug panel (if preloaded)</p>"},{"id":"EZLtmhBhwZj4Nx7726t0o","name":"debugToggleKey","brief":"","access":"public","defaultValue":"\"s\"","scope":"static","type":"PropertyDoc","description":"<p>show/hide the debug panel (if preloaded)</p>"},{"id":"6YFkU-gH9BirvCCCPS6NQ","name":"hitbox","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the hitbox in the debug panel (if enabled)</p>"},{"id":"urof_q0u3BHEZ2hAFUtce","name":"quadtree","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the quadtree in the debug panel (if enabled)</p>"},{"id":"3GvRWAKDsDKTUS_ARPxEN","name":"velocity","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>draw the entities velocity in the debug panel (if enabled)</p>"},{"id":"IQ7piM--v95l89Hf2Rdx-","name":"webgl","brief":"","access":"public","defaultValue":"false","scope":"static","type":"PropertyDoc","description":"<p>force the renderer to WebGL</p>"}]}]},{"id":"Rc46KLLVLaxjwZYXMk8E2","name":"video","brief":"","defaultValue":"1","type":"NSDoc","description":"<p>video functions</p>","members":[{"id":"W2Jcw3P9jokV72F04ZUwd","name":"AUTO","brief":"","defaultValue":"2","readonly":true,"type":"PropertyDoc","description":"<p>Auto-select the renderer (Attempt WebGL first, with fallback to Canvas)</p>"},{"id":"A2Kl7aJR6qfvxXgE47Q8k","name":"CANVAS","brief":"","defaultValue":"0","readonly":true,"type":"PropertyDoc","description":"<p>Select the HTML5 Canvas renderer</p>"},{"id":"BcwqfIzG544mzSHGrJNOt","name":"renderer","brief":"","defaultValue":"undefined","type":"PropertyDoc","description":"<p>A reference to the active Canvas or WebGL active renderer renderer</p>"},{"id":"GwbLIQvzwn2fDNY1i5-lV","name":"scaleRatio","brief":"","defaultValue":"<1,1>","type":"PropertyDoc","description":"<p>the scaling ratio to be applied to the display canvas</p>"},{"id":"DV7wgIV9DH_WrCuAvz6WR","name":"WEBGL","brief":"","defaultValue":"1","readonly":true,"type":"PropertyDoc","description":"<p>Select the WebGL renderer</p>"},{"id":"fB_bIH3sNoI3o7BrTT8t6","name":"createCanvas","brief":"","scope":"static","type":"FunctionDoc","description":"<p>Create and return a new Canvas element</p>","params":[{"identifier":"width","optional":false,"description":"<p>width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"offscreenCanvas","optional":true,"default":"false","description":"<p>will return an OffscreenCanvas if supported</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"Ljc9ISArnNej2GNHyNOjO","name":"getParent","brief":"","scope":"static","type":"FunctionDoc","description":"<p>return a reference to the parent DOM element holding the main canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"%1"}}]},{"id":"UF_QVOoPG9zgOaOysPsmF","name":"init","brief":"","examples":[{"caption":"","code":"\n // init the video with a 640x480 canvas\n me.video.init(640, 480, {\n     parent : \"screen\",\n     renderer : me.video.AUTO,\n     scale : \"auto\",\n     scaleMethod : \"fit\",\n     doubleBuffering : true\n });\n"}],"scope":"static","type":"FunctionDoc","description":"<p>Initialize the &quot;video&quot; system (create a canvas based on the given arguments, and the related renderer). <br>\nmel...","params":[{"identifier":"width","optional":false,"description":"<p>The width of the canvas viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The height of the canvas viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options","optional":true,"description":"<p>The optional video/renderer parameters.<br> (see Renderer(s) documentation for further specific options)</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.parent","optional":true,"default":"document.body","description":"<p>the DOM parent element to hold the canvas in the HTML file</p>","dataType":{"tokens":[{"value":"string | HTMLElement","kind":"canonical"},{"value":"HTMLElement","kind":"canonical"}],"template":"string | %1"}},{"identifier":"options.renderer","optional":true,"default":"video.AUTO","description":"<p>renderer to use (me.video.CANVAS, me.video.WEBGL, me.video.AUTO)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>enable/disable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.scale","optional":true,"default":"1.0","description":"<p>enable scaling of the canvas ('auto' for automatic scaling)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"options.scaleMethod","optional":true,"default":"\"fit\"","description":"<p>screen scaling modes ('fit','fill-min','fill-max','flex','flex-width','flex-height','stretch')</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.preferWebGL1","optional":true,"default":"false","description":"<p>if true the renderer will only use WebGL 1</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.powerPreference","optional":true,"default":"\"default\"","description":"<p>a hint to the user agent indicating what configuration of GPU is suitable for the WebGL context (&quot;default&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>whether to allow transparent pixels in the front buffer (screen).</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>whether to enable or not video scaling interpolation</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.consoleHeader","optional":true,"default":"true","description":"<p>whether to display melonJS version and basic device information in the console</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>false if initialization failed (canvas not supported)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AptVXw6QY-lU9Ge3yUXGs","name":"scale","brief":"","scope":"static","see":["video.init"],"type":"FunctionDoc","description":"<p>scale the &quot;displayed&quot; canvas by the given scalar.\nthis will modify the size of canvas element directly.\nOnly use...","params":[{"identifier":"x","optional":false,"description":"<p>x scaling multiplier</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y scaling multiplier</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"FttMZygYX3nh7FdQ5k7nL","name":"BitmapText","brief":"","type":"ClassDoc","description":"<p>a bitmap font object</p>","extends":["Renderable"],"members":[{"id":"W2GwD_BpiS-x3HyEXnuPq","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"7wjNP2XLfslCQav5WRD_O","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"vcMGg6FuAMA787btQH9uN","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"pmpaOCAEuEii43jyzyM3g","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"Y0RugB3UKUOc8c0W1VPY7","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"WesLQyBf8XW9sCz3O0S-Q","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"E6iJYEzHFv42rl57QPJF1","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"P6A4zZwdqnWnUQAc6GnME","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"PaYjHxZAg78d0y5wW2sHe","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"1CpSYWjLdMX-mXpLD4EXV","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"zZqvQqZH6D0ePXI2q6j74","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"lWa3Ss8FIsHVa7iqQj4RD","name":"fillStyle","brief":"","access":"public","scope":"instance","see":["Renderable#tint"],"type":"PropertyDoc","description":"<p>defines the color used to tint the bitmap text</p>"},{"id":"2vC3Ci-cp_X8xyoFZuWTc","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"ShGY5x6jgVucex8DWQ56i","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"SM92ENSOl_u0uG0Wp-zlk","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"kg0z53Q7ebWVx_tDEtWPr","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"K1Vslu_Db4aYU3ugQUYQu","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"u73z9xPdpigP-xZRBuxXY","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"qjlDrFydQMb1oCOrDpLL0","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"UbaqXJwirBTyIxr7VqaLL","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"3_nh9yYiv7xCnW5sg1ovq","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"PPgMEy7Sutpo4h7U5YdGp","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"ZVxE5Z-FBqQlOFvYeMYQF","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"A3-V5R8eKL9Y6ImUM1Ws7","name":"lineHeight","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Set the line spacing height (when displaying multi-line strings). <br>\nCurrent font height will be multiplied with this va..."},{"id":"QersKu-ihNh-aWZ8qBmnO","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"Rvd812E3-XOvgOKcniGSF","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"_K7Ibh9Yz9xYu4EpMMMAu","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"L9RtNM6eMAYB9xBJLCLIk","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"nMH77j6prI5xh2YHxUM7y","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"7-IvauBnCe1Qkj7dsVaQ0","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"ftWQItp0BSc0nEAHyen4s","name":"textAlign","brief":"","access":"public","defaultValue":"\"left\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the default text alignment (or justification),<br>\npossible values are &quot;left&quot;, &quot;right&quot;, and &quot;..."},{"id":"VfVCNspcBwyNPig7GiQXw","name":"textBaseline","brief":"","access":"public","defaultValue":"\"top\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\npossible values are &quot;top&quot;, &quot;hang..."},{"id":"tYBcropdOXzKJ5RE8Omo0","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"UxqbgRX2eXJeuaLUw-MUW","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"U1pwDKzj3TXLODbTPylIH","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"noHTuHHrsdHOOsMFu7f4d","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"c9E6vieksxahNBS6ZK6lC","name":"wordWrapWidth","brief":"","access":"public","defaultValue":"-1","scope":"instance","type":"PropertyDoc","description":"<p>the maximum length in CSS pixel for a single segment of text.\n(use -1 to disable word wrapping)</p>"},{"id":"Sfo35NAkELnmkAv8h0f7G","name":"_text","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>the text to be displayed</p>"},{"id":"Uzyh7EFkJrWrzj_2ID2Tm","name":"fontData","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>font data</p>"},{"id":"467uDA3b2X9b5Nox1UUE9","name":"fontImage","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>font image</p>"},{"id":"XMSB_7RRnImLnxxNRnPry","name":"fontScale","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>scaled font size</p>"},{"id":"8PCn3oA5K7gW6_s7GYv5C","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UKldIr5_CrK5nyURnFKyr","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"iTbHyYBRAzNysSngYP69M","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"UkjchFXjQeGZQU20L-TSh","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // Use me.loader.preload or me.loader.load to load assets\n me.loader.preload([\n     { name: \"arial\", type: \"binary\" src: \"data/font/arial.fnt\" },\n     { name: \"arial\", type: \"image\" src: \"data/font/arial.png\" },\n ])\n // Then create an instance of your bitmap font:\n var myFont = new me.BitmapText(x, y, {font:\"arial\", text:\"Hello\"});\n // two possibilities for using \"myFont\"\n // either call the draw function from your Renderable draw function\n myFont.draw(renderer, \"Hello!\", 0, 0);\n // or just add it to the word container\n me.game.world.addChild(myFont);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>the text configuration</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.font","description":"<p>a font name to identify the corresponing source image</p>","dataType":{"tokens":[{"value":"string | Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"string | %1"}},{"identifier":"settings.fontData","optional":true,"default":"settings.font","description":"<p>the bitmap font data corresponding name, or the bitmap font data itself</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.size","optional":true,"description":"<p>size a scaling ratio</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.fillStyle","optional":true,"description":"<p>a CSS color value used to tint the bitmapText (@see BitmapText.tint)</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.lineWidth","optional":true,"default":"1","description":"<p>line width, in pixels, when drawing stroke</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.textAlign","optional":true,"default":"\"left\"","description":"<p>horizontal text alignment</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.textBaseline","optional":true,"default":"\"top\"","description":"<p>the text baseline</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.lineHeight","optional":true,"default":"1.0","description":"<p>line spacing height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.0, y:0.0}","description":"<p>anchor point to draw the text at</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.wordWrapWidth","optional":true,"description":"<p>the maximum length in CSS pixel for a single segment of text</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.text","optional":true,"description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[]},{"id":"4Fta8SPZCC3qX_ZDgjBMM","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"W_L9iXixFtNh6YVLskDgb","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"X6EHj0BIem_Z3CtFetD_A","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"onv_TP8_gv7S7ARXoca4z","name":"draw","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw the bitmap font</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"qVVbHzgEYcu7lBHatsDUw","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DebuCE0fxo-mpohTKX5e2","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"TN6Ndord0o8J6TckHkWrW","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"4cpmxG6KEkthxPq-MQhXS","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"QQhkvMOhNg93ujOcF_06w","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Lb3_Dihq9Pp46n4_secYn","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"ynC6d7FC7zDferl58TgYE","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"nrbQ2Drx8Ixj5eukVC6RR","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WNZGTufhjq2zhTVv8e2ck","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vZ0-HJvejyPiEx7XVbiCd","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ai5LVutCpOVomSFcMgJ7F","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in pixels</p>","params":[{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a TextMetrics object with two properties: <code>width</code> and <code>height</code>, defining the output dimensions</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"-cYL6pEtaVDrh0PBOHHlu","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Yz4XEOyfkTJghhRYqdRhv","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"Q_u7FDWcB29ZTNfppczLp","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kZb8lOAegxuUwaAAFuX67","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-7M1bdo-v2NKZ45BhGrHS","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the font display size</p>","params":[{"identifier":"scale","optional":false,"description":"<p>ratio</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"vCmmkQ9PHwiPEhbICyKZ5","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9l7POOaRSHatSlaglMSHR","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"qf364Isiorl8oXj6_KWMN","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3Vrh1S66W9pG8seDsP2Km","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the font settings</p>","params":[{"identifier":"textAlign","optional":false,"description":"<p>(&quot;left&quot;, &quot;center&quot;, &quot;right&quot;)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"scale","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"xZZGYXtA49uDzcF39pddC","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"xPS9AJyDlwSk18TVUNh8S","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"1Orirr3-qbLqQ42NQ7H3e","name":"setText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the text to be displayed</p>","params":[{"identifier":"value","optional":false,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"number | string | Array<string>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | string | %2<string>"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"BitmapText","kind":"canonical"},{"value":"BitmapText","kind":"link"}],"template":"%1"}}]},{"id":"G-aeq8ho-32RV6fwwC8oL","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YOy8V8GYEWml3LrTh3hWG","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"1sO2oKgCrfdsXO-BMJ5dA","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"OYbmXPzTyky-hAlMwMqVZ","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"k4Pn6cgxisfofawRzQUoE","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NQW0tfhZrn7j6FUfmHFeG","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0f6GIVhTU8Y9hTF3I86eh","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"JvEKUjcSZ29fI2euxdGBK","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"uEQk3z-ZdTDfD3I627NpM","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"53HkNyU_Mi1ID7ytkYyY1","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"dBqt8Ur5Ll-eXLttnvjcC","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"D_KKoXsrtDqr8kSWyO_gX","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"VH54cwYy9M87MlUmFWWE_","name":"Body","brief":"","type":"ClassDoc","description":"<p>a Generic Physic Body Object with some physic properties and behavior functionality, to as a member of a Renderable.</p>","members":[{"id":"sRiXPvxChL2CWn3GSZeki","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this body,\nor undefined if it has not been added to one.</p>"},{"id":"9-k7782e7W5iKQptg_8tN","name":"bounce","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>the body bouciness level when colliding with other solid bodies :\na value of 0 will not bounce, a value of 1 will fully re..."},{"id":"L70VJcUbNPYtbbNFi-YNt","name":"bounds","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The AABB bounds box reprensenting this body</p>"},{"id":"k-1iTopdjoh5xy5LhL4Cy","name":"collisionType","brief":"","access":"public","defaultValue":"collision.types.ENEMY_OBJECT","examples":[{"caption":"","code":"\n // set the body collision type\n body.collisionType = me.collision.types.PLAYER_OBJECT;\n"}],"scope":"instance","see":["collision.types"],"type":"PropertyDoc","description":"<p>define the collision type of the body for collision filtering</p>"},{"id":"EBdL2DQFD4e-nkCSJW5sh","name":"falling","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>falling state of the body<br>\ntrue if the object is falling<br>\nfalse if the object is standing on something<br></p>"},{"id":"o8Jh2QDskiLfn_Wld-5Y-","name":"force","brief":"","access":"public","defaultValue":"<0,0>","examples":[{"caption":"","code":"\n // define a default maximum acceleration, initial force and friction\n this.body.force.set(0, 0);\n this.body.friction.set(0.4, 0);\n this.body.setMaxVelocity(3, 15);\n\n // apply a postive or negative force when pressing left of right key\n update(dt) {\n     if (me.input.isKeyPressed(\"left\"))    {\n          this.body.force.x = -this.body.maxVel.x;\n      } else if (me.input.isKeyPressed(\"right\")) {\n         this.body.force.x = this.body.maxVel.x;\n     } else {\n         this.body.force.x = 0;\n     }\n }\n"}],"scope":"instance","see":["Body.setMaxVelocity"],"type":"PropertyDoc","description":"<p>body force or acceleration (automatically) applied to the body.\nwhen defining a force, user should also define a max veloc..."},{"id":"viK3hu8X430pQ700z4cuu","name":"friction","brief":"","access":"public","defaultValue":"<0,0>","scope":"instance","type":"PropertyDoc","description":"<p>body friction</p>"},{"id":"dI-oPZkAuDhanyYtycXvy","name":"gravityScale","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["World.gravity"],"type":"PropertyDoc","description":"<p>The degree to which this body is affected by the world gravity</p>"},{"id":"relOGfJjOzIDu7394At_t","name":"ignoreGravity","brief":"","access":"public","defaultValue":"false","scope":"instance","see":["World.gravity"],"type":"PropertyDoc","description":"<p>If true this body won't be affected by the world gravity</p>"},{"id":"OTpUyQgRrbAP9p41foXXX","name":"isStatic","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>Either this body is a static body or not.\nA static body is completely fixed and can never change position or angle.</p>"},{"id":"X110wzAdWcaAtJq3vXYpz","name":"jumping","brief":"","access":"public","defaultValue":"false","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>jumping state of the body<br>\nequal true if the body is jumping<br></p>"},{"id":"lAneIIPVZXed46skgmdfD","name":"mass","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>the body mass</p>"},{"id":"Fa1N9SEND03KyUPLh8xqg","name":"maxVel","brief":"","access":"public","defaultValue":"<490,490>","scope":"instance","type":"PropertyDoc","description":"<p>max velocity (to limit body velocity)</p>"},{"id":"cHwP-4NG-J1p7aX3Ur3dc","name":"vel","brief":"","access":"public","defaultValue":"<0,0>","scope":"instance","type":"PropertyDoc","description":"<p>body velocity</p>"},{"id":"XLAYAviCF9ewBPN7mMopC","name":"addShape","brief":"","examples":[{"caption":"","code":"\n // add a rectangle shape\n this.body.addShape(new me.Rect(0, 0, image.width, image.height));\n // add a shape from a JSON object\n this.body.addShape(me.loader.getJSON(\"shapesdef\").banana);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>add a collision shape to this body <br>\n(note: me.Rect objects will be converted to me.Polygon before being added)</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape or JSON object</p>","dataType":{"tokens":[{"value":"Rect | Polygon | Line | Ellipse | Bounds | object","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5 | object"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"pHIblexM4J9DJ_R58In4b","name":"addVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the body shape</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points defining a convex hull</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object for which to set the vertices</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7TtiRnGzKPUQp73G0vrYq","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"ancestor","optional":false,"description":"<p>the parent object this body is attached to</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"shapes","optional":true,"description":"<p>a initial shape, list of shapes, or JSON object defining the body</p>","dataType":{"tokens":[{"value":"Rect | Array<Rect> | Polygon | Array<Polygon> | Line | Array<Line> | Ellipse | Array<Ellipse> | Bounds | Array<Bounds> | object","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"},{"value":"Bounds","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1 | %3<%2> | %4 | %5<%6> | %7 | %8<%9> | %10 | %11<%12> | %13 | %14<%15> | object"}},{"identifier":"onBodyUpdate","optional":true,"description":"<p>callback for when the body is updated (e.g. add/remove shapes)</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"PNsBYuepo0zX3mPYJ6ivg","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the any of the shape composing the body contains the given point.</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-clu28vHDZxQYwz9S-NdA","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the any of the shape composing the body contains the given point.</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"eb1avkif288uqITQpsTgb","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all shapes of the physic body\n mySprite.body.forEach((shape) => {\n    shape.doSomething();\n });\n mySprite.body.forEach((shape, index) => { ... });\n mySprite.body.forEach((shape, index, array) => { ... });\n mySprite.body.forEach((shape, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per body shape element. <br>\nthe callback function is invoked with ...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"51yMiSEH2ZoiCwmi3AdXp","name":"fromJSON","brief":"","examples":[{"caption":"","code":"\n // define the body based on the banana shape\n this.body.fromJSON(me.loader.getJSON(\"shapesdef\").banana);\n // or ...\n this.body.fromJSON(me.loader.getJSON(\"shapesdef\"), \"banana\");\n"}],"scope":"instance","see":["https://www.codeandweb.com/physicseditor"],"type":"MethodDoc","description":"<p>add collision mesh based on a JSON object\n(this will also apply any physic properties defined in the given JSON file)</p>","params":[{"identifier":"json","optional":false,"description":"<p>a JSON object as exported from a Physics Editor tool</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"id","optional":true,"description":"<p>an optional shape identifier within the given the json object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>how many shapes were added to the body</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dddQRnSJA0hZ7COiMuiui","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the AABB bounding box for this body</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"gF5WsU4lpGY6k4oqKEs75","name":"getShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the collision shape at the given index</p>","params":[{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object at the specified index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>shape a shape object if defined</p>","dataType":{"tokens":[{"value":"Polygon | Line | Ellipse","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3"}}]},{"id":"fjEeiwIshCFTR6JyAjRhO","name":"removeShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>remove the specified shape from the body shape list</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object</p>","dataType":{"tokens":[{"value":"Polygon | Line | Ellipse","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"CCoyPZXQJFZGXd3tmjooZ","name":"removeShapeAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>remove the shape at the given index from the body shape list</p>","params":[{"identifier":"index","optional":false,"description":"<p>the shape object at the specified index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the shape array length</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"uMIsCPvrCY6rk4ZBnnTEj","name":"respondToCollision","brief":"","scope":"instance","type":"MethodDoc","description":"<p>the built-in function to solve the collision response</p>","params":[{"identifier":"response","optional":false,"description":"<p>the collision response object (see {@link collision.ResponseObject})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"Yu-xP5nlkrf-Y7Vh_PqA5","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this body (counter-clockwise) by the specified angle (in radians).\nUnless specified the body will be rotated around...","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"default":"Body.getBounds().center","description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}]},{"id":"UhS_6LT185RXTuSKNoVtS","name":"setCollisionMask","brief":"","examples":[{"caption":"","code":"\n // filter collision detection with collision shapes, enemies and collectables\n body.setCollisionMask(me.collision.types.WORLD_SHAPE | me.collision.types.ENEMY_OBJECT | me.collision.types.COLLECTABLE_OBJECT);\n ...\n // disable collision detection with all other objects\n body.setCollisionMask(me.collision.types.NO_OBJECT);\n"}],"scope":"instance","see":["collision.types"],"type":"MethodDoc","description":"<p>By default all physic bodies are able to collide with all other bodies, <br>\nbut it's also possible to specify 'collision ...","params":[{"identifier":"bitmask ","optional":true,"default":" collision.types.ALL_OBJECT","description":"<p>the collision mask</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"4yg-AvjJsbkD-pp6VKakF","name":"setCollisionType","brief":"","examples":[{"caption":"","code":"\n // set the body collision type\n body.collisionType = me.collision.types.PLAYER_OBJECT;\n"}],"scope":"instance","see":["collision.types"],"type":"MethodDoc","description":"<p>define the collision type of the body for collision filtering</p>","params":[{"identifier":"type","optional":false,"description":"<p>the collision type</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jOL4vtLC1bzzDmIczYrbQ","name":"setStatic","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body as a static body\nstatic body do not move automatically and do not check againt collision with others</p>","params":[{"identifier":"isStatic","optional":true,"default":"true","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"NmagobDC8j5hEAL_oAtaR","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the body vertices to the given one</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points defining a convex hull</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"index","optional":true,"default":"0","description":"<p>the shape object for which to set the vertices</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"true","description":"<p>either to reset the body definition before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ViAE-5nq4sRLzKreRoPKS","name":"setFriction","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>set the body default friction</p>","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>horizontal friction</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>vertical friction</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zXzes8r2ODj-2iyMrxUIL","name":"setMaxVelocity","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>cap the body velocity (body.maxVel property) to the specified value<br></p>","params":[{"identifier":"x","optional":false,"description":"<p>max velocity on x axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>max velocity on y axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"xoDTjzCt3i066ndGZ3WWn","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>Updates the parent's position as well as computes the new body's velocity based\non the values of force/friction/gravity.  ...","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if resulting velocity is different than 0</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"omQ7eRxqtQvqa0Ih_Zdze","name":"Bounds","brief":"","type":"ClassDoc","description":"<p>a bound object contains methods for creating and manipulating axis-aligned bounding boxes (AABB).</p>","members":[{"id":"V5Ly0dsgeuuyPBJokjssa","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"FZ-8Ak-nGNQhBAmDq_WIi","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"lEi9RQIcMgUNAI3cO9xhQ","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"IwsoktmQShNQqMkzBf323","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"K0pIuUXG664RzZKxthnjP","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"xj0wVOJIWDUTtCpk8DI9H","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"GEccJaB0ValFeMv5soXbx","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"yYu_nOPKc4yAwmDEfPP2D","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"ZJWfvst1HjJ4t0ZspdYLI","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"J1IiOLqOo3n1wE339ebj2","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"uWNBP4pnEo8IU1HUaNWDV","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"lYvaoUXL9R3wrFpKxkum6","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"QNsnHG1-voeFjuMXfoX65","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"Q12oVCy8XJY9n55CQ-OnJ","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"kaQAhcYygZmkK4VKFMRVM","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"cg1WdBvbOMTtZf4btlYvy","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"MeeEpWPHUwDsaQ0bWJ_vo","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"gvYkX5mfT8rJZ8InAe3eR","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"vertices","optional":true,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"GMPUeT-HWPyxzus8i5fSz","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1DwmXtKjCVKhIDT79-49s","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GjJCOyWi3Se1axfLNYToB","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pFMOZ3RXWZ6sADVhtwRBq","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Dc2SMYEo4-g8-E-VL_ngP","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"lg-e_gSoq3XuH-FjjrMub","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"bNSxI6j1NhDxKoCDwyGvs","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CUPcvCwgMuKDrppzaq8LT","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"XrNYu5wtI7K5PwqxS4DF9","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"iysOqSvyLcN59W8FA2rP4","name":"shift","brief":"","type":"MethodDoc","description":"<p>Shifts the bounds to the given position vector.</p>","params":[{"identifier":"position","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"l8AdGTemHAPkRVWUgUh_l","name":"translate","brief":"","type":"MethodDoc","description":"<p>Translates the bounds by the given vector.</p>","params":[{"identifier":"vector","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"yJdAg4x1NTVogMPtHHpcg","name":"Camera2d","brief":"","type":"ClassDoc","description":"<p>a 2D orthographic camera</p>","extends":["Renderable"],"members":[{"id":"Qr4g1IRKG3XCfZyoJV8uq","name":"AXIS","brief":"","readonly":true,"type":"EnumDoc","description":"<p>Axis definition</p>","members":[{"id":"tgok10myHTE76qfewWzXc","name":"BOTH","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>both axis</p>"},{"id":"Lh-Dp8Z2Fi3KUXki-nB9b","name":"HORIZONTAL","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>horizontal axis only</p>"},{"id":"uHVLu3uU6Fc_z9JRXrjVQ","name":"NONE","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>no axis</p>"},{"id":"ujQVmPj_V6CCkSQN-abCn","name":"VERTICAL","brief":"","access":"public","scope":"static","type":"PropertyDoc","description":"<p>vertical axis only</p>"}]},{"id":"Rup5g_y2EnIMKjOq2ahQO","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"ql6CQgLk6OfLklGASy7Vq","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"gMYVdJPVDMUkQrXvz_aSP","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"BP1QLaUB2PB2YZcAk7P5i","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"i8U9JaXk7phWmSQQBQfjN","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"J2I-L20lN3rqJsyFNsRIW","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"vjS-JG9NZ1gjzpNTySOXY","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"4AVS28oNEcQcQcPUjQ-8W","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"bHBD0wi6IJiVRG2PsSGYJ","name":"bounds","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Camera bounds</p>"},{"id":"sEwGqUzMcaZNkSK50mf_j","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"_iCyF2o-39rE3EXMUtMPW","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"qzlvGbrzBvloNLFnHtkDd","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"8U7lwRFW3e1QPAkji9ry2","name":"damping","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Camera damping for smooth transition [0 .. 1].\n1 being the maximum value and will snap the camera to the target position</p>"},{"id":"xAKYmZ3rdZzAL-O4zDNMA","name":"far","brief":"","access":"public","defaultValue":"1000","scope":"instance","type":"PropertyDoc","description":"<p>the furthest point relative to the camera.</p>"},{"id":"kcE_CVmAkqlPWYmZEs1Jn","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"nf3soBk9kES6jRiyVSl-S","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"gQmfQGtrGNoqYFe1-FGYg","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"mzJDoJodbr4ciVP-RgiaQ","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"SN4mN5tEkfaaWZc5EzQeJ","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"DcUdqF3RhXHSIYBf-fUwE","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"eC39aJW_2CdxjQ6_fJQvv","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"Bp8QpBzj940rjmwmsMfs7","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"au6-bPZZmtZ91g6tkiWwk","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"Z1v-Keylr0hbhN-S03TFH","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"39Z5gJKoebz6l2JMxX9QZ","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"eninTRvpt3UOdFucJvDyb","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"rPv-AHjYUgbnbFU3mS7O6","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"gL8wpdaxGvxSjdMnjuD1b","name":"near","brief":"","access":"public","defaultValue":"-1000","scope":"instance","type":"PropertyDoc","description":"<p>the closest point relative to the camera</p>"},{"id":"2hgD8OaPbNb6__3cKHBUa","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"Jkoa50ay8v3tXWwFTuqnh","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"D9FgtJ7_Ok22jk-1_d1Xm","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"d-5qw1ccGrFiH568ktvcv","name":"projectionMatrix","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the default camera projection matrix\n(2d cameras use an orthographic projection by default).</p>"},{"id":"LnjaVartHLXHuUgFut8Tt","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"15fqGNc0NUrUs77iS8fzo","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"hws7jlgOnJoJekwRIjz8l","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"PchGMdpC1oxQSMlOrE1d_","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"zBcgq_sqL53zav8MKnBG3","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"krXaPclYCROhSYW4IutRi","name":"smoothFollow","brief":"","access":"private","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>enable or disable damping</p>"},{"id":"cc924O1SRuceEplE4oLN9","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"cybDHZTbeIu_y-ANQOGPj","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"8cRk-B7TkKyUyrefx175t","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Z3TBtxl4VH609ahhHHDkp","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"minX","optional":false,"description":"<p>start x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"description":"<p>start y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"description":"<p>end x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"description":"<p>end y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hphvBerfDgaGsqhiZL3Nz","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TemcfDEWqebF55OxaMI2Q","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"U-XXXy7oXD_DFfvYzY4CL","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"rP7bkz5I7EqMK6dJ6nhoj","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"oFFtRanpgVUrBBLLN5u7i","name":"fadeIn","brief":"","examples":[{"caption":"","code":"\n // flash the camera to white for 75ms\n me.game.viewport.fadeIn(\"#FFFFFF\", 75);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>fadeIn effect <p>\nfade to the specified color</p>","params":[{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"FR_ny8GxIPqaq2kdlZ2F-","name":"fadeOut","brief":"","examples":[{"caption":"","code":"\n // fade the camera to white upon dying, reload the level, and then fade out back\n me.game.viewport.fadeIn(\"#fff\", 150, function() {\n     me.audio.play(\"die\", false);\n     me.level.reload();\n     me.game.viewport.fadeOut(\"#fff\", 150);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>fadeOut(flash) effect<p>\nscreen is filled with the specified color and slowly goes back to normal</p>","params":[{"identifier":"color","optional":false,"description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"duration","optional":true,"default":"1000","description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"K-XFrPALI2VkIqokYeCho","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"aAiLYXcioeYalKUoa--4z","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"nKuvmA5k8QFWWWdQJWhw3","name":"focusOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the camera position around the specified object</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable to focus the camera on</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"T0TaDasgdByZxAKNpL4E3","name":"follow","brief":"","examples":[{"caption":"","code":"\n // set the camera to follow this renderable on both axis, and enable damping\n me.game.viewport.follow(this, me.game.viewport.AXIS.BOTH, 0.1);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the camera to follow the specified renderable. <br>\n(this will put the camera center around the given target)</p>","params":[{"identifier":"target","optional":false,"description":"<p>renderable or position vector to follow</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"axis","optional":true,"default":"me.game.viewport.AXIS.BOTH","description":"<p>Which axis to follow (see {@link Camera2d.AXIS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"damping","optional":true,"default":"1","description":"<p>default damping value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UaFiVvty0c1PHYFVr-ZdD","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"2yYsjeUJU8q8QnXhahj6E","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"JmUk2YxsdgGHNEqqJXqRf","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"znSt9VK-Oc6V1R97LUbLp","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NYRZwA9v98FtI6kECy5vY","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1BlYxM5MIWP0U5VXqRaox","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AuUjaqbiNhFWrwSZiweRA","name":"isVisible","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the specified renderable is in the camera</p>","params":[{"identifier":"obj","optional":false,"description":"<p>to be checked against</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"floating ","optional":true,"default":" obj.floating","description":"<p>if visibility check should be done against screen coordinates</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RoKwlEdjMp_DvoUs1EKOe","name":"localToWorld","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the given &quot;local&quot; (screen) coordinates into world coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the\nconverted value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"PI8iGQn3wH-xwDC24fMqW","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"5rMRerQxameawvanI_hGf","name":"move","brief":"","examples":[{"caption":"","code":"\n // Move the camera up by four pixels\n me.game.viewport.move(0, -4);\n"}],"scope":"instance","see":["Camera2d.focusOn"],"type":"MethodDoc","description":"<p>move the camera upper-left position by the specified offset.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"pJJtN1V3p8uUig0cAdsqD","name":"moveTo","brief":"","scope":"instance","see":["Camera2d.focusOn"],"type":"MethodDoc","description":"<p>move the camera upper-left position to the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"A2KzhVAXZjETqAnk-AfgI","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zYRaWKhoM24Abc0_w1MX8","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"TrqnEGENu5aXYMAx1Z77u","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"5MjUNH5MKFIepmzs2a_WD","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"mCmelU8qCpu_1Qv06s4KE","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the camera position to specified coordinates</p>","params":[{"identifier":"x","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VPpCqbEehcKF-gJVvLewM","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the camera</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the camera</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the camera</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this camera</p>","dataType":{"tokens":[{"value":"Camera2d","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1"}}]},{"id":"LpxGQq6ndXZFyVHFEmHb9","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"It0s40VgQGbvRUtYNh_b6","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"z38ZZuLjn7twxoqPmoTo5","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"NtWM89HpqeccRBXsuh2C1","name":"setBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the camera boundaries (set to the world limit by default).\nthe camera is bound to the given coordinates and cannot mov...","params":[{"identifier":"x","optional":false,"description":"<p>world left limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>world top limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>world width limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>world height limit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jNo-3D7fX_pmtzSChKhaV","name":"setDeadzone","brief":"","scope":"instance","see":["Camera2d.follow"],"type":"MethodDoc","description":"<p>change the deadzone settings.\nthe &quot;deadzone&quot; defines an area within the current camera in which\nthe followed ren...","params":[{"identifier":"w","optional":false,"description":"<p>deadzone width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>deadzone height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VqTMWFpQndYGw94K_sh66","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DTb18LJ7lTMsv4le1UEfS","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"VkCy_kXzCjyYrYEjwSBSL","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yWsVm6f1iGGEF_RZBV-7w","name":"shake","brief":"","examples":[{"caption":"","code":"\n // shake it baby !\n me.game.viewport.shake(10, 500, me.game.viewport.AXIS.BOTH);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>shake the camera</p>","params":[{"identifier":"intensity","optional":false,"description":"<p>maximum offset that the screen can be moved\nwhile shaking</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"axis","optional":true,"default":"me.game.viewport.AXIS.BOTH","description":"<p>specify on which axis to apply the shake effect (see {@link Camera2d.AXIS})</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"onComplete","optional":true,"description":"<p>callback once shaking effect is over</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"force","optional":true,"description":"<p>if true this will override the current effect</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"nJZsfCItSy6HMnVXX_m4U","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"My34yX3bkAyUy0c_AS2iL","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"AdC1Z3xqXrmIQX-ix3ngA","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"3BYH9TIu_PqNZ2Ibf-Klt","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"u4ip6BWIXHbC0m0SAaa3l","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"HtNRIJhLHHHweMDGO0W8A","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"i8VI-zivq1ohGct9JNKRb","name":"unfollow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>unfollow the current target</p>","params":[],"returns":[]},{"id":"dNs9fn8_ikNuYd5QrzYKv","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"iPmDYUy4OBvOrNyXFGERk","name":"worldToLocal","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the given world coordinates into &quot;local&quot; (screen) coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to set the\nconverted value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"GJHpQtOoITL6VDFeNqJLx","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"cJtWkHduSjWw5JY3uudke","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"yYQeAJbmivuxVl1yxExVJ","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"xBL9JjtIzv2KNHoUCVdjy","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DKJMlst9l_r8sEq2gT71l","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"GFa353Oc6UkNKGEJNV62c","name":"CanvasRenderer","brief":"","type":"ClassDoc","description":"<p>a canvas renderer object</p>","extends":["Renderer"],"members":[{"id":"sziZa_7DKMDOdk9lC_DKc","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"XlrFJ3atL1EVxnvGUi5o8","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"u0GkuZCSssdYC_HGC6ZWd","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"exLoB4FG5DqI8c_vuUYjH","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"2Sbimuaq0XEPCKu9zekoF","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the main framebuffer with the given color</p>","params":[{"identifier":"color","optional":true,"default":"\"#000000\"","description":"<p>CSS color.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"opaque","optional":true,"default":"false","description":"<p>Allow transparency [default] or clear the surface completely [true]</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"wsXQcZCCKXuSF_uwD219Q","name":"clearMask","brief":"","scope":"instance","see":["CanvasRenderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"nWmrgM3MC0-tO3OVS8G_8","name":"clearRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Erase the pixels in the given rectangular area by setting them to transparent black (rgba(0,0,0,0)).</p>","params":[{"identifier":"x","optional":false,"description":"<p>x axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>The rectangle's width.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The rectangle's height.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"KCIqbEVWSzjxQ4FkMq7eN","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"F89ZQ5d6bW7p0dyeDtm35","name":"clipRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clip the given region from the original canvas. Once a region is clipped,\nall future drawing will be limited to the clippe...","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"mpSVURu6r9IzSwZbJ8pmi","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel renderering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.textureSeamFix","optional":true,"default":"true","description":"<p>enable the texture seam fix when rendering Tile when antiAlias is off for the canvasRenderer</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"rJVUkqyBe_fMEIB4eLj8f","name":"createPattern","brief":"","examples":[{"caption":"","code":"\n var tileable   = renderer.createPattern(image, \"repeat\");\n var horizontal = renderer.createPattern(image, \"repeat-x\");\n var vertical   = renderer.createPattern(image, \"repeat-y\");\n var basic      = renderer.createPattern(image, \"no-repeat\");\n"}],"scope":"instance","see":["ImageLayer#repeat"],"type":"MethodDoc","description":"<p>Create a pattern with the specified repetition</p>","params":[{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":false,"description":"<p>Define how the pattern should be repeated</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasPattern","kind":"canonical"},{"value":"CanvasPattern","kind":"canonical"}],"template":"%1"}}]},{"id":"rB7WYn1aNSA75PMQ4w31N","name":"drawImage","brief":"","examples":[{"caption":"","code":"\n // Position the image on the canvas:\n renderer.drawImage(image, dx, dy);\n // Position the image on the canvas, and specify width and height of the image:\n renderer.drawImage(image, dx, dy, dWidth, dHeight);\n // Clip the image and position the clipped part on the canvas:\n renderer.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Draw an image onto the main using the canvas api</p>","params":[{"identifier":"image","optional":false,"description":"<p>An element to draw into the context. The specification permits any canvas image source (CanvasImageSource), specifically, ...","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"sx","optional":false,"description":"<p>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sy","optional":false,"description":"<p>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sw","optional":false,"description":"<p>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rect...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sh","optional":false,"description":"<p>The height of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dx","optional":false,"description":"<p>The X coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dy","optional":false,"description":"<p>The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dw","optional":false,"description":"<p>The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dh","optional":false,"description":"<p>The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the imag...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zSqJFK9xhHuKk59pF1-sa","name":"drawPattern","brief":"","scope":"instance","see":["CanvasRenderer#createPattern"],"type":"MethodDoc","description":"<p>Draw a pattern within the given rectangle.</p>","params":[{"identifier":"pattern","optional":false,"description":"<p>Pattern object</p>","dataType":{"tokens":[{"value":"CanvasPattern","kind":"canonical"},{"value":"CanvasPattern","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"n84yEuYanaVNAt_wWYgvW","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"MNyzK72s7NC35DHCoUxl8","name":"fillArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"GDHKuFKBrUTL7VWLF_lhY","name":"fillEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"1v2nOA6dS6hgg12OT2f0c","name":"fillLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"aBfjttpTAatctMtuRSpXH","name":"fillPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill the given me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"uFJVUz5zdgJB2bpboH6aM","name":"fillRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HwP3o5Y1EGsIgEbsGAcx5","name":"fillRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a rounded filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"EKCKZ-vHMS5wXsvSVFWHk","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>render the main framebuffer on screen</p>","params":[],"returns":[]},{"id":"kgeLAXGzS0j6932wtUgjc","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"fVzOKcofKWLTw1USQXdN4","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"b9A8zfwnB_-oXDrW7MluB","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"A97vwonlGN-YZgV_AxTc5","name":"getContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system 2d Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"3-L_Ut4X_Mav_x2MnRmZS","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"GSpOP151mZJbwFueAGfbG","name":"getGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the global alpha</p>","params":[],"returns":[{"description":"<p>global alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1uEgGaNBOkLqfmZ23sk9a","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"RPy0KXwZdsmMKDtZTPE5-","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"4F1Gk9sCAK5Z6Erqqg97m","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding 2d Context<br>\n(will return buffered context if double buffering is ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"rLc9TrPZYinK2knJtROM8","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jKpq8glH2NSjFPAMXDbm8","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-hyX1kR9cgBuiz0cWx55b","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XTsrlsomBtbdz2P66-dy1","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"7VEpTc9iQ0Ge3J_G6vJm8","name":"resetTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the canvas transform to identity</p>","params":[],"returns":[]},{"id":"CD1zqcc_OA1g66C6uLZQR","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nSfGr8LsS0qF3MUMCrzUw","name":"restore","brief":"","scope":"instance","type":"MethodDoc","description":"<p>restores the canvas context</p>","params":[],"returns":[]},{"id":"zBY9LWLWQhZI3zprbFzWZ","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotates the canvas context</p>","params":[{"identifier":"angle","optional":false,"description":"<p>in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"emcM6SZiOCvAf7p_3Bt7x","name":"save","brief":"","scope":"instance","type":"MethodDoc","description":"<p>save the canvas context</p>","params":[],"returns":[]},{"id":"ikSWDNd7iEmRTt4xnFTAG","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scales the canvas context</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"qgRAC_RxeKB7l1rr17jfw","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"-JjuUA0g1aoxf26QcCH2c","name":"setBlendMode","brief":"","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"type":"MethodDoc","description":"<p>set a blend mode for the given context. <br>\nSupported blend mode between Canvas and WebGL remderer : <br></p>\n<ul>\n<li>&q...","params":[{"identifier":"mode","optional":true,"default":"\"normal\"","description":"<p>blend mode : &quot;normal&quot;, &quot;multiply&quot;, &quot;lighter, &quot;additive&quot;, &quot;screen&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"oIXbPBTRY5lROV_SsjzBZ","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the current fill &amp; stroke style color.\nBy default, or upon reset, the value is set to #000000.</p>","params":[{"identifier":"color","optional":false,"description":"<p>css color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"vCa2B2I-10cGDdbeM7gfP","name":"setGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the global alpha</p>","params":[{"identifier":"alpha","optional":false,"description":"<p>0.0 to 1.0 values accepted.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"iRUTSY7PiUj0famFA4wpH","name":"setLineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the line width on the context</p>","params":[{"identifier":"width","optional":false,"description":"<p>Line width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Pe1UHYHHdTw5nsZjDVmK-","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>the shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"TR9-oUXBT19IzXDgWdUk8","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"XiZqhZpBZGA15xDAgC2an","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"c1XjEh0W_ACGQHWpbtWyJ","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset (overrides) the renderer transformation matrix to the\nidentity one, and then apply the given transformation matrix.</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"kemgNS3cIpp1lK9nIfq0w","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"7sLR1n2Dgbs-MrBRr159V","name":"strokeArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"hTzKvlrO_uBfS5Aknhvgt","name":"strokeEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"z0awxoKf_xCr36Jc0b3OU","name":"strokeLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Qt9zGcU_LF19KxIF4OxKq","name":"strokePolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke the given me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"WNhvfrvHQqlLlCogBYdnM","name":"strokeRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"-gLOIJs1C8fA9LgfrJ8Qs","name":"strokeRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rounded rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"i_QnPQoCTvWvbf-w-MVol","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"HwwaybatOTz8SC-qa0UzF","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply given matrix into the renderer tranformation matrix</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"2NbBH3e6zfmbY0Nv2iOe4","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the context to the given position</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"_aGvis8biFiinxvyx21ER","name":"CanvasTexture","brief":"<p>Creates a Canvas Texture of the given size</p>","type":"ClassDoc","members":[{"id":"ji79diVc-fel4AVJht3zv","name":"canvas","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>the canvas created for this CanvasTexture</p>"},{"id":"oPtaOiij3vIs-liMZNX9G","name":"context","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>the rendering context of this CanvasTexture</p>"},{"id":"ivgKt10xy0bT3Taogjbt3","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The height of this canvas texture in pixels</p>"},{"id":"0sMGJr264NkEl8h9DTmvP","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The width of this canvas texture in pixels</p>"},{"id":"Zuu7ZbAfNZApW08NFMHIe","name":"clear","brief":"<p>Clears the content of the canvas texture</p>","scope":"instance","type":"MethodDoc","params":[],"returns":[]},{"id":"88qv3EjZqLHY2kKqLYym6","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"width","optional":false,"description":"<p>the desired width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the desired height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"attributes","optional":false,"description":"<p>The attributes to create both the canvas and 2d context</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"attributes.offscreenCanvas","optional":true,"default":"false","description":"<p>will create an offscreenCanvas if true instead of a standard canvas</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"attributes.willReadFrequently","optional":true,"default":"false","description":"<p>Indicates whether or not a lot of read-back operations are planned</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"KSQuhixvXMKaCMq8J00ig","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Resizes the canvas texture to the given width and height.</p>","params":[{"identifier":"width","optional":false,"description":"<p>the desired width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the desired height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"c57WTONYqcv-zueyZhyAc","name":"Collectable","brief":"","type":"ClassDoc","description":"<p>a basic collectable helper class for immovable object (e.g. a coin)</p>","extends":["Sprite"],"members":[{"id":"cbCxZA4NW4UTut4pjaVXf","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"nQz7BkBkZorFS0CFAM9-e","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"2EN7iJdDqFCTQNopvydHV","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"r8HLHz-vU1MQ_CsGlsdF-","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"8841487T2dJB49eOcdPtW","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"TnL2A3cW6RTVd5JoZzxAu","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"kAn3WY0OJUacjh1MFrY47","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"v-7swJ_XohP_skVP0q1uT","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"gEYUsfE__xQq4TwNcZ5WY","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"iNOBYLDY4EEqhQE52aKT9","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"59xb1GzCRezkOqiIRgaZ0","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"pJumV6JmdNCYqkx6sPhoe","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"_xIWIkintSJQ72bsCk49I","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"Lfxs9ZoszCU62omVPI2zN","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"X5R9cDqtrTz5Khl9S295d","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"XiEvmCDeMNLmKqtXgk3M3","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"yQB2iKetu6htWuJD5F0HY","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"MT99xwuS3JTlUDc8Vgk_o","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"WEOmgKLH1_cbh18CgMmsM","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"K7vh4ASlWXEOrULrI9hIw","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"jwo8oRJbye4cjsJnr5aaE","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"rz6jCBPdM1H_K1-_aBEEJ","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"ESv2YpMfDKgqWWn7aB6WR","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"wRXnelu7pXLXl62mvR3P_","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"VFsDxNwBR5gv8oX4kLh6J","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"PcKkdACCa37w4mWlnYlp7","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"6X9K6kduV_Se1ZI3lqI5B","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"lCMbAn6VHnDKDI_SO3ybL","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"-nqbslpRrzigAjcRCkkFB","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"Zc46GpQAi7a7HLZZMqZOw","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"_Jm1Mb1FnsQZv1F3Ova49","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"U5IuKb3qQjL7S1UGvoxhQ","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"N8_tmXs4NCIeZ6iKfutzX","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"LH7CG-QkFtPYgYBpDiWsV","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"BRJZpMsisZx-2U2nq3iBn","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"nzHRIU3sx1vKG-p815yzA","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"7ALriTvSdpgtvlpY5HBZk","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"rsXZAty4Fu0CJJxadfvij","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vAGoLeusJA-u4cUmzf_kj","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0vHm2M1-_jc3h0uuvqk1D","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"2OxoS6hSv3apO5KdKCvrH","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the collectable</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the collectable</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>See {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"Y5arF03j8DYFqmmwJWdYn","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ofKoFgT4r79UmXNxHLGvY","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"z1RJ5LzltuiT41Y8P63TI","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"bmFGPrSRyVu6S1j_elHLQ","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"94Y2yhn5Bz2-XiUrQwGf5","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"nlcLjru-seysVRaqG1tRA","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RF4q_w3SIyk_GZPr02L91","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"gw-CNRZ4dKcfx9XkWKvnz","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"pa670xTP3kgcCl3kHtWHg","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"0SxEQhvmzlfhGH8qU84rN","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"u2tzpPlBpVVzK3q4H3m9e","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"bA1SRKNtRSMOuYs7ebx0c","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"0Glg1cm55afQXszGuJX_f","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OntxBV73K18Og4glSDl6m","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AsClWd0gzWQFIaDwPj7n5","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"b4dWp23-_N9nepV_n_fSg","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pl2N0N2u8ubJiZ-5rBabc","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"u_BsQDKIsxB-bIndELb3S","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WpoUx4jjnzsf3phHpXwV3","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"rudvZdf0d2Ujk-4M3d8vQ","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"1Db9E_24d2gfnNXLD02Mt","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1zLa7_MPmMcyFLq-URyfO","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"lu5b8O3OhXk2szzu52goY","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"Bfv9MiTQru0CMr003x2Fz","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cmzkSUNRuI4p8oXu16SSv","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"G8fdP-QXNLCpQ-enLJuUL","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3E8S6s3P-HL60GnKYfHb0","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"pUJAM2CXWPZjgwp7st504","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"fSZpVPqnqpUF1iU2hHmpw","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"T84FOCGaTfYvx5EewN_HH","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"uKVE-m6XsPkFOh1jegyLK","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"TszWIuJAQIT6G2KM-jIMn","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uOpNPgHiytPNgLLAVJ5q6","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"AQy5Ao6IG-F9frIBvbIJd","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"we6TI6-J4iVLI9MtHf2o9","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"923iT6vF7K2PxYhpUMW4z","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"a8_nph629an5vEPfbajhr","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"BXT-Ts35bBAS1n1Pl0j2n","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"S7HT24gDf0NFDLbJmSo9r","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"foh2WCL7_hBFmsMDqYs3S","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Ttl5rB5yU_RX0A6G4lPRX","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"fqZH2V30ucmf-w7pEe-5w","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Zg_HRJEUDa1a9p4ObMiYV","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"sgzf4LzBJO0iciyaA0op5","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"hTOumMmAw4mvA7GESVMMD","name":"Color","brief":"","type":"ClassDoc","description":"<p>A color manipulation object.</p>","members":[{"id":"f_FhderLiqVKiysjWJ2lY","name":"alpha","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Alpha Component [0.0 .. 1.0]</p>"},{"id":"128WcbU34rAJ1il7RKwJW","name":"b","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Blue Component [0 .. 255]</p>"},{"id":"BbV1tavnaYVTR89B7ePid","name":"g","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Green Component [0 .. 255]</p>"},{"id":"QFSaYB4ctiDTnps9IgKJ4","name":"r","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>Color Red Component [0 .. 255]</p>"},{"id":"AntKhASJPxxWeHW2BkF7f","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Blend this color with the given one using addition.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"WhNac33-8_VDXKg_Db2kM","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Create a new copy of this color object.</p>","params":[],"returns":[{"description":"<p>Reference to the newly cloned object</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"A0MIsVYgTl2SJw7_LywbE","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"r","optional":true,"default":"0","description":"<p>red component or array of color components</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","description":"<p>green component</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"default":"0","description":"<p>blue component</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"7XpbbSHriOPwiR2YiuneM","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy a color object or CSS color into this one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"0hXtzLHBNgzHDpYptXwOV","name":"darken","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Darken this color value by 0..1</p>","params":[{"identifier":"scale","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"LwOy7CceEcEiv6WwJgiB4","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return true if the r,g,b,a values of this color are equal with the\ngiven one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"b_yFxSK3QP3gwoQrKGwGq","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this color and the given one.</p>","params":[{"identifier":"color","optional":false,"dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>with alpha = 0 being this color, and alpha = 1 being the given one.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"WmBdQav2rQtl_3zj7WOEQ","name":"lighten","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Lighten this color value by 0..1</p>","params":[{"identifier":"scale","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"AToL7b90nGtQuWoQk5Bz6","name":"parseCSS","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse a CSS color string and set this color to the corresponding\nr,g,b values</p>","params":[{"identifier":"cssColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"AQpNM5quxfdKDaOJw1HCk","name":"parseHex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse a Hex color (&quot;#RGB&quot;, &quot;#RGBA&quot; or &quot;#RRGGBB&quot;, &quot;#RRGGBBAA&quot; format) and set this ...","params":[{"identifier":"hexColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"argb ","optional":true,"default":" false","description":"<p>true if format is #ARGB, or #AARRGGBB (as opposed to #RGBA or #RGGBBAA)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"DTH5xugyYr193Qs15_Ryk","name":"parseRGB","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Parse an RGB or RGBA CSS color string</p>","params":[{"identifier":"rgbColor","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"7CjRJtUTFErFrP_Rr3EvB","name":"random","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Generate random r,g,b values for this color object</p>","params":[{"identifier":"min","optional":true,"default":"0","description":"<p>minimum value for the random range</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max","optional":true,"default":"255","description":"<p>maxmium value for the random range</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"-Od4Un8mBZUxutPpqs-hp","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set this color to the specified value.</p>","params":[{"identifier":"r","optional":false,"description":"<p>red component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":false,"description":"<p>green component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":false,"description":"<p>blue component [0 .. 255]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"pEXm-CrINoL3-swqG9AJQ","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"9RVOn-Dwd0POPTbM8m_4B","name":"toHex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;#RRGGBB&quot; format</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"yfwdInI9NJmbFcutYHYxB","name":"toHex8","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;#RRGGBBAA&quot; format</p>","params":[{"identifier":"alpha","optional":false}],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"nQo9yza170tuKfaG2Kwcy","name":"toRGB","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;rgb(R,G,B)&quot; format</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"1FLCkiSzh56x2WQbxYXaM","name":"toRGBA","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Get the color in &quot;rgba(R,G,B,A)&quot; format</p>","params":[{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"olm_4d2-7D0rs_dX65ZuK","name":"toUint32","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Pack this color into a Uint32 ARGB representation</p>","params":[{"identifier":"alpha","optional":true,"default":"1.0","description":"<p>alpha value [0.0 .. 1.0]</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"7pTcywzWi_e3mkil5j4xy","name":"ColorLayer","brief":"","type":"ClassDoc","description":"<p>a generic Color Layer Object.  Fills the entire Canvas with the color not just the container the object belongs to.</p>","extends":["Renderable"],"members":[{"id":"RB9kCTx_cjI1U_b1cvq-r","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"A28-MKMndqi2QFogxaa6a","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"ROwHYT-2iFBN1PDEgA9lq","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"SolmOcZLqCsWtVyj3udCC","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"YofHAFDgOuXu9g0zh7J0K","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"DdaesbpnARcnTYdGS4Hdu","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"WqGIq5bCVHwILlvI4hzaR","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"-LG0jfXty9H53Ny7Xq5Ga","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"slQ9g04eg-6y5tY7fqYwk","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Ikho466kmIqKsrCOrfcyi","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"fQBlsugKeAowg9vJKJYPr","name":"color","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the layer color component</p>"},{"id":"LnKBgklisgRdwcNSOyKKc","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"w9g1wyzrJAZcj-jkaT-9C","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"pOrubG88GAbb_nFhZhOnE","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"-5V5oPiJLk1bJFpxSv4YG","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"tbk5ytMOdGRAcuw8LtCSv","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"hnqTZxcnTnwmemaoqQ0lf","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"gRNL8wVjmhIhcOUeHo2H5","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"yAilmapd4SWSFzYch2G-k","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"n6GlcXX60LMemY9RUpvDA","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"dEFMBO4Ecd5F51OseDARa","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"VOweX2D7gddG_-7xrcizc","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"bK5tUOkoGTDTyTPlUX-L9","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"AnpoYcBmHmltHvtUKWeCe","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"5H0G6Yfixx3woyyD7zG7g","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"iiJZE_pjBUR97JMxpU8fJ","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"8oBKj0V6Tqzg36zNk_4wr","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"kNmxDBhmFb6wYBy8Tw5jp","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"fS-3jB0XTDoSzXWhdThwc","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"D-N_VP-r89jaNeBCUwf_5","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"EkcL9Ra7aZCCndromg0VH","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"mDIsGdJeeXmmlNOExbaFn","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"VUimNWlNp4gUshD08xxRZ","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"kySELqJihILvRwy851WHL","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"lwXDyrbs0136IacgFRceH","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"N-0v94aQMt2MHh2QOWeLG","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"dj_sKF5UIULCkj_pekSwf","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"name","optional":false,"description":"<p>Layer name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"color","optional":false,"description":"<p>CSS color</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"z ","optional":true,"default":" 0","description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"h4lNlfAqhnsjp_-5FQsHt","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ANiF4hW3eKggveH6tNpEQ","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9-K6vxFRwaGJayaWunZMi","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Hb4mJjY6kwa1tT78w_OOj","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"R4s8sTA7Svf6Z58G4LUYH","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ohTRoGHtwwKTwPVefjR06","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"qzg3oed0ww3B0KqNM37YJ","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"A2LvpP9A66rLOvA8Rf7Lf","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"VKRkWX85dsbGr1BZT-5LT","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"eI1PtD3RpfZqFXo5t305M","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5mMuP6xwNIx_3axABi133","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ATHIcJ_sp-xhupxNTZhpt","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"I_BwMlXck8xoPstcJ3UDp","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0yIoR0T-1dLCCsbMOaVk1","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"k7dkiQFrmhigd7vrA3GJZ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"NApZMRg1eBIcsi_5jwaTv","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tks_qoiDXnV5aPdtH8IP4","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Zyysj2FcHIFov4o3vUW9g","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"agQwcC6CbeRrZ0ow0uNYG","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"wsnmfyAkecGbOnQAXokai","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3d5sdrxyboRyPhNMr9Crl","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"jxHaRJ-v9JrTvKl14NUnk","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nk1zw5sT05gkC0s-94a91","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"o6iYjmqcwfMKUsXZ24brK","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yLix9H3JOxpw8SfQZvPEa","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"TaOBbCbJx7cQIczwOTMRG","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"z2U_cJWm2whC8VRTyaYzs","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"JeEU0rWNAw4HkVxOKNMmf","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"lA9nFk8yrjkf8QvyW_K4a","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Ts7c0kRhp8vqorZbow7mE","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9CMsFiApSistjOjmWgV4k","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"psJaA02m21mlVLwN3-k1J","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"1PEfEtBIHTlry8gn3LiYv","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"1co2Qrkq_h0RcTDJrVYLH","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"0bBbRk450rwweXG3VnxXw","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0kkdfCBi6HVqP1ANpLFyL","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"rqQwdjDvS5xm2rSFM2u9T","name":"Container","brief":"","type":"ClassDoc","description":"<p>Container represents a collection of child objects</p>","extends":["Renderable"],"members":[{"id":"nWZKYFyl6mkRsiBR4G4Lm","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"UKJYVFywbnZeaV_ZjSvLO","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"NNtM4nraVih_IP_-ZM6TM","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"j9s9bVj5fslWP7Cxevazp","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"vtmdFasVWD_AtRdUBFnTZ","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"Wy2M8om7QfjCszYxxgYXF","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"9t6aLQfGaKAYsqOsWnv_9","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"c4NpuVEuWmEbuRgmyUDjQ","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"2grfN48cwcfyrIOnYss8r","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"wbMFz5YsPGJ88PFQFk4cd","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"7lgpkOEd6ZGsDPP3xuGqt","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"QM2K_rW7unzlgw_hxVWxk","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"tQowmb_C8bnCyKsZY_7PA","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"uuXoSOJTzXOTOh8H1WNBB","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"tkNEx8Ch-nHjaC0hz-aeH","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"1Qe9AKEd2rMmoSS-QHZHr","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"Hxr18c4-Bm5up0CegKCcx","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"0YTto8HtrNsqsCTvKAJ8_","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"8jc8RQaooBGAJiQL7dAF7","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"4wCLYSQfUIvulg7sfBHLu","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"0PWJ6kF7hN1iBK7-8EIqp","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"CJ2sP2t5g9H5LVkIcng59","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"EVhqoJlGUTQNrBBzaVohe","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"g6wM1Yl7na2_yADoukq-v","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"hIoB2OFLJvipgEl8vchGy","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"D8M6Nt2y8gweDazaBSjRx","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"I-qyPzMpE_wdLDVKPx2qH","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"BT71j-EsRhcWxArwhpHAy","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"gqRw7C6xvRNwDU91mLlGE","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"ZW1v77NXjScN-yjXEqh3u","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"QWUd_syeQSOM0iC4vC9zT","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"sJwyqaoO_df4lyZRUwjEq","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"gYdej568dPGgJQnGE8wA1","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"L6Imu6AB3hw8Xd5RRsSPW","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"cSWLrBS90h7fYKCpRwrdb","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"nG--GJ6v6d0M4yMUqXuWt","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"pGZPlTGUNxmMKWpHbasxi","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"E6qd8oZedgwWktePrmBdY","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"8lDwQIKTNbXzzQKQHIHFG","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"yuDQ_r7eHTk3g-qk_kAje","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"atDioQqrpMxDGmRrEvoP8","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7Tp3XzQyNlDiFz41-HemL","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"NNWf_znDqIQPUL8j4uT7J","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"_vt0wzuZ-vE0zopzWxzri","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"aeukGqILDF5COqN8M7sk2","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":true,"default":"game.viewport.width","description":"<p>width of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":true,"default":"game.viewport.height","description":"<p>height of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YnoOptXPcHVbYazpkZNCt","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"V0yYylNjTziuDbOuuUGaQ","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"LwujFHdXCkEwXQYzjB0T0","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dH00sZSbbwb_cSp70Pia9","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RyEJ-nutVJT-Co7z3WCnq","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"69A59aAlsFbnUpW6uR38S","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"gKYBew55QunrZo0LY6kyR","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"MZmha8DCggtYLO4j66Gu_","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"u1fHpIEZ5Q8vDzBK7U1j4","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"HbbHN5SST2xVLCcvsyVES","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"qiwRpzZP5MsSqsPW_lb_f","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"PIgpdN1Lj89oqBvGc-FOF","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"HCdVLLawLGmuXaTXYEvJS","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"UxJPFyhhT4sKhQXcR8YAj","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"vMasHH71IzYjb9l2fdOec","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"LM_nGpQc7awbrBVst36uj","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"RVwC5nxahD_oYnW2ETUZK","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"QfinochOFSom-H3MnVsQG","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"KLC78zY2rtsXsPXtC639Y","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"9SzwLkcXtPuq5rsZ54phf","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MAJHaL7wCmcV4zjZg9lVH","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TzUaSuisXdn3JZOTiOneP","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7hkYOCf9aLERaF32WIMUp","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"3vxF0RT_7yyYibbwSyag1","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"vwPY-S4fWBUnEHVryCRLP","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Opqllb1AG3aMO47ZmldqG","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"-Lhg7nkAs-8pMf-uThPJM","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"LDRRQFMyAvS-WwoC1S-73","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"pn8LV4r3REyepTN6d6kDq","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"AZMrllJ3k4B6VVpLo2TV2","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"ApQKfR1P2CDkZam-WsP5V","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"LQ0JqlS96rRdBsNe5KPAD","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"lSUBGjzTQxLotTkoqpuyC","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"vcojBd8MSMFgJdi8JlNsU","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"nHUKD0ZZIDUq8ppeXXTE0","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the container, removing all childrens, and reseting transforms.</p>","params":[],"returns":[]},{"id":"KJwb8wZAvxjwjasvKFa6f","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"QDFhjchBWEWtxCSDOJULd","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zP4wc3BxuhEOL0i0hdUFJ","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"sqbAON2-UMt1ADmn6DzXM","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cmSnm1TLmfjjQmmTGLwGr","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"OevoauATGw5pj7xkdvU9d","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DOqNiEs_hNmeXvIpKK-ih","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"2WNp_pJgv0stQ53xTf5tR","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"iigTNvByGSdD20f273S3n","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"X6j3aIcvYwk_nOjXmq4jF","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"O38HRsTyK_BgFcpozqi-8","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"RlDABDQsoSJkwpMNgC1Pc","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"MqG1K6U1PzZ9aPVTc3T9R","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"d6UY00EEGSdWJqD-v0gPP","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"sAyGqXWohLMLD0pFkfUEz","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"DXQlIEeJtSCR53a7wkAG8","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"EiS4jm8_BT8NWkJQxRnnr","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9QM8_fxDPWEfdP7SIE6RD","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"_kPcrMG55JdJLtFISA1oS","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Tz6CF92F49unsOPNeo06P","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"s7qNcrFqHaiBdL8E_aeyS","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4qCuJi9gbYe8IZ4h58Owb","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"j3Xhb1ymNDy-hIC9qhsVX","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"2xkWNbfgi_v85cxulx_hi","name":"Draggable","brief":"","see":["DropTarget"],"type":"ClassDoc","description":"<p>A Draggable base object</p>","extends":["Renderable"],"members":[{"id":"-toHU2SnImSEYw8JhccKy","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"Jx9jv4jZBvHqfgSBcmv5M","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"rZAXbP7SDUZNea5iKSLoJ","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"f-xNQKNuzNoyMJE7AW67I","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"XDm9IIaI-5GUwPDkUrNY1","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"eOmSOaA1irrgQcck8KcPu","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"Knu9krYfXCV1myoN68R4L","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"BxyVYngnOhXJ3-Zpzc5pj","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"yT5YepodPFh1ZngzhcRLT","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"cgHK7t2-esDcgHYQ7b_KG","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"v1Hb0c8zZOA33wTGKEhln","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"cDHsfCfTAZLri3j-o-_a1","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"q6Y6zHej5Qm2-2M-idrVZ","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"yxAphiraeTkQVTNqKhRgp","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"jHV6k_iQLN9mTiS16ypJy","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"mZrbGj7toqNuPpQPVgCRd","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"BlH5570SnWQa2OUj2pgBI","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"L6nWpG0e5dEcBshQ7skka","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"MnWV0AB5Gm5VFU7b6DlO8","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"IZnmWtWnI7oPZJtaKzjTG","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"4VzmDHjC3y3bf3OyfElpD","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"o0tUCZarPt3BMhKXBXXWC","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"YCBHslrhehJ1tkDOo1aee","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"9X8YSkSbbke-YrXynyLxl","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"cR8NszFkrslQ92Ypuqaht","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"fZ2QoUqNLXTaQI5LHiDP0","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"5vXLhTjqxwimN2uzeP7j3","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"mjJdBHBDuORzHwt_Bh5Lb","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"cE1wB5MVSQS31FsLAq0An","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"NWtO3IdgsAU_SK3VFvlB4","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"r8VbhBXDHtteZyrb4QX8V","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"NSYcfFRasR3NdbA8gvivR","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"DjoFMddlITT6K8F7xSf1p","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"WLYfI1C3Fq8GDp_LAsppK","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"UH9srX81rHeuqDSzJ5QJB","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"NjmfJrztcj9Rl2Kqgckfn","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>draggable object width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>draggable object height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"LROUwivsWgzKqZy127ggD","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tYD64E6ITZ-NtVRAqH-Dc","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"D-GwXFJxQiOhGkgUKSqhC","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"_knolHWeWCL5QHF-ZKZ0b","name":"dragEnd","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user stops dragging the entity</p>","params":[],"returns":[{"description":"<p>false if the object stopped being dragged</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Va0c49aPf09YArVJiq6k-","name":"dragMove","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user drags this entity around</p>","params":[{"identifier":"e","optional":false,"description":"<p>the pointer event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"rjuce1OSZZtzJYnRBxx4H","name":"dragStart","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when the user starts dragging the entity</p>","params":[{"identifier":"e","optional":false,"description":"<p>the pointer event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>false if the object is being dragged</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Yxh_qWuqNulyrmEsuFRDt","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8y1FrlxL47z4I8dy8UHby","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Lq4IDh2PlJkCq8wiLSi2p","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XJHv9mFe7vK32dAvtXTfQ","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"YW86DyJUbJKrNwPoOw3Wc","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"YJZvzWJHfKXEsIe6z5oOO","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Sw1xX5hgKd21ZNS_geAWo","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"sasocTrKOFsKk0RypFpuy","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WSDMEDq-nhh6HsdaDnaPE","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-j0kcOKAeJ6OTVWcGExiC","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"4s0vQuHGnDi1C8Ldd6pBT","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"6QPjTcDWpe1IQ40iV0TNg","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"mC-TCXQ7_aOTl5obuGxJz","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0g7r75FRg4bktG0mwOsg0","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"-mFxHxR4ADeKShQ1noD0b","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Hx0HQDuTK5RU42yap5FQP","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"yO7i9zdS3RPYmbHtjlpKC","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"_zZYpMsscziifL4z9uN53","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"w20SENphW6CStOcnGUmAO","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zdYLZrkio8RT6k-SLO3jf","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"z4fCGBgcKIwn-NKndn14L","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"iD75yXZJ9-m-wYCvdDoFX","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"9mXF8KyjQSXjCFGA_d5S_","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"nwUmnJ1rtSu4jzM0mn6JF","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"77r-4oJjRv1Wkgg-hK1Vi","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"3tKMYDHQMhPk2lRlJAsw1","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZxtayMnWROMdvTmo9ZFFa","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"L862y3WjOzkaRA4oxVgF1","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"DeqwnkXUjGiEOw0SVj14c","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"JkOUH65pm5tfsVkNNCaL3","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"xdnHbCSrJMbBcm6CumbMA","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"BePtui_Oy77CW6kRtEb2n","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"qwDAoCD1CW8HN5unNdNDB","name":"initEvents","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Initializes the events the modules needs to listen to\nIt translates the pointer events to me.events\nin order to make them ...","params":[],"returns":[]},{"id":"jHMTcyxrm3NX2_2FuwoBr","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"EUBQwy5whLCeo0gwdj4DF","name":"DraggableEntity","brief":"","deprecated":"since 10.5.0","see":["Draggable"],"type":"ClassDoc","description":"<p>Used to make a game entity draggable</p>","extends":["Entity"],"members":[{"id":"3EPPm1WO6AAl3vedSZqXg","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"hErMvlxBMrprL_3pkOfy2","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"NY6trF6RQd4sFMef88V6W","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"r6sA5HBURpiFrFwjbHuAS","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"sOY5nVQf-7pKBGpjy9pn9","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"5Sic2FXxnJKCHb4kal7Ca","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"pzXMv-XAjff8QmVCbIj8K","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"u54RyYW0ARMoOoXEM8G3n","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"GVkh6Zqfx9SEfBB_x9umf","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"f5pYUQHdIwGveVse3pqaD","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"hn3fGiwYaP_ewKziry8sO","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"v5GQIiuK2yLNkWvAD9pw6","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"XF_TLLmYIr5MeaelGSCR_","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"VOW0_WmhrvRYoH6N1b7vJ","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"NdBUVsGNYmBx-2ZK0K6Lu","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"sjvhWgfGYSA4jfbPFKgNS","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"HEhFH3A7njyKg6MM8yO_H","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"1rkphceSNNruJYIjMTt8L","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"EfrbX-QlQQEjL_jBm8HV6","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"KdAL58ro0nugspdbS2qtm","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"fFDbJmjDsvXW5bKMMg4Dw","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"EoW7y_nqqu6r_RnJQ6VD7","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"sQOhA6HdRYyt8aHR_Rokq","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"cIjfD0OaiRIOI5Fhig2rJ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"Yb0BEZssSyRDo2C2Ck8nP","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"5k9816vD2Xd8dAqaOi8ws","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"p2UyaG92BJNXcS-FLRFap","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"j1VXmyx2Ve-N8DqYt57Ad","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"0pv-j4MKN4IOQojglP62X","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"ZcVkhFc7xsVRAI3hXSKas","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"QvvAKAKxwPJ0de1sPCw1M","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"yUYV7NLMgGPG_fpKRI-75","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"J5wzK8alWKfLsgtpEYGWp","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"iUjFuRxuJ6Q2WSneazZHM","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"z4_PCJ77jQ8uUMLkdsvTr","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"1a71GqCTriH_wHHj31wnn","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UFeB8ernapT4yXT54w3d5","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"rNys-8R33yGuvVBl6tEQB","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"h9W_dUSnSsD-9FwehYLef","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties (see {@link Entity})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"8KlVZAHmaZdfIGAYu4qDQ","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"FKv8s0uG-HoQvHa4dFO9P","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HLGdbV5llpk8T64rhg-qv","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jkuTSVrAnmhz-mRQVOgcu","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tGZ4wXrlhsMfdGz34NnCf","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7umMj_h5obS8EX7W4igFC","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"kKT12PEjJw545rARp-D9Y","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"p_7YXbaPkSQt93E_V74yy","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"GnppCIBCZ623dAExLtnHl","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"FccpFq6It_VkzU05nsChK","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"eZeWL7nsMXl6jttWahCFB","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ez4PO00Hckg_LvhJbl3CZ","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WGSzoolg6XZnPVfNDBaP-","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VWSUh4NldmzhF0ONFaPbL","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_Re7gAEKLMYad5Y0S4tRr","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"lR2iIaT59m01bd9pQUYTa","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"cCm3S_03z8vZ1fSWDMg_w","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kAycLXr0lPqVKg2ieXpvi","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"M-Dzlo6Y-asRuug3Cljjv","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"RTucN4URirIM8xdhjsWyM","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"B2Vj8LaZ-_q4f3VDlkJLA","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"XhvS9KjqVi-TLH2QutQvv","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"oA09yuJCrL66Q8aW3Vwan","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"RIiNNMvfB3_hujkf4a0sa","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"dxPuod0JrNguHk8UEGp3z","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"SH8vOnAi5HDvm1Y-X9jDE","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"IMliN4C2ZwPoku79YRWtG","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"afWC3G2PHgqQintZiGzrd","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1mMd6QAXApUBZlW070odf","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_Z5m2l3r2c8Ffj68JobgO","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"agFjpMCWENiCFFGAZSrMI","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"571J9dRyx4UD4QJJS0jv8","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"oSV3nX7W5fgiKr1X_S-IM","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"MVoW_ep9QTEL3xpJW0iy1","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"j2eTV1rsMLNX72Tg31_kD","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"_lTRE0n1A3EQoXh-TpP9R","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"eR8ROz9Y8V6310OdtS71H","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"FI_T3ic6pAW-VWcF_6GHf","name":"DropTarget","brief":"","see":["Draggable"],"type":"ClassDoc","description":"<p>a base drop target object</p>","extends":["Renderable"],"members":[{"id":"ZKqmzufIrBIKKZh0_Mkcm","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"7eTAhLQf_UYbAiK0PJC3J","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"EgJ_0MPg2ShEjpqe3GHx2","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"c_aRdxKbvFCxu4Xt5v3tx","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"RYk30FGUYq4NwWaDfKUUT","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"mbDzui7tHd6Qz7SSrk5sO","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"uPUFHdh3-Jw89P8O8H8jY","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"UplTQ7x6f-8J08HGQY4PJ","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"6w5y-ablM1jwteQnsNXsy","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"8mTG89pAWTCjxSuPVC4EY","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"3XiT7gymHrU-_-0awvX-g","name":"checkMethod","brief":"","access":"public","defaultValue":"\"overlaps\"","scope":"instance","type":"PropertyDoc","description":"<p>the checkmethod we want to use</p>"},{"id":"zBdZLsspOT6mPHNY_SjOa","name":"CHECKMETHOD_CONTAINS","brief":"","access":"public","defaultValue":"\"contains\"","scope":"instance","type":"PropertyDoc","description":"<p>constant for the contains method</p>"},{"id":"0z60Hsxs_w_ZlFdyyplms","name":"CHECKMETHOD_OVERLAP","brief":"","access":"public","defaultValue":"\"overlaps\"","scope":"instance","type":"PropertyDoc","description":"<p>constant for the overlaps method</p>"},{"id":"_hWxUe6ge5z8ObkMt9D9F","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"y84cTHzLPw3p0GrrgJuOk","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"kKAn3GvC8cQb7PpQph26C","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"PM4dgWKL1wV1VuAnh_OSf","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"wdrGwTU1PMTjov-GUzq1m","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"Jm8ME8JQLcYCVuBelCFxd","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"TUlQpzOyZEELZowJJrgPB","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"PQq4z4MVt7krN4uNjJWx1","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"N9NbtEHex096gpg96GUVw","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"fX26g5b7XLYdIGw3gau2K","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"kfDXEpnPDtWlfbUQMtuQz","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"GiGN-hmBq5zNxls31MqzQ","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"VvGr2-smACYCco-YTDi2r","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"DI99gMfpQdkRQiFRyJ2x7","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"O_FMxPGbN4W6cca0rruM9","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"anz1VBSKgve1zt27mtQeK","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"nbkTRAp9xoDo7wxlEQ3Ok","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"2MNlr8bAv2nYfL2nVecKZ","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"tIGys6zKbnPbvjD0EHEoy","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"bAMKPY4Iru9ALKAbnJ2o0","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"vD2tw7_JAcClsxESJpg44","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"clXZrPsPYZbLkEXfANtwP","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"9Z2B7Va-wWzuFrIoDpIOt","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"wqsZgp0q7eAsx-G-RqVdk","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HmNkkdI2Y0-3f6Y0zfoOP","name":"checkOnMe","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Checks if a dropped entity is dropped on the current entity</p>","params":[{"identifier":"e","optional":false,"description":"<p>the triggering event</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"draggable","optional":false,"description":"<p>the draggable object that is dropped</p>","dataType":{"tokens":[{"value":"Draggable","kind":"canonical"},{"value":"Draggable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"OkREOquoJVkNVS9aOUQBj","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CvD61Rj_14IkRJICQDWRv","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the drop target</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the drop target</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>drop target width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>drop target height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"akeiQ2AaR9rRnWiZM0DBY","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"r9ctkkYit0Iff46-4arMg","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Ibs08NR2ItZPGSSAkbJkq","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"cx5fRFdQ4QeZ3mlnvUxJ1","name":"drop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Gets called when a draggable entity is dropped on the current entity</p>","params":[{"identifier":"draggable","description":"<p>the draggable object that is dropped</p>","dataType":{"tokens":[{"value":"Draggable","kind":"canonical"},{"value":"Draggable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"p2q0gTB60Q5D4dy4sbEAU","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gSzPg9IY8FAm9ixJmCpts","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"TcLTLOJewr0hvG1D-PiuI","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"J9jO9WNdISS-hYqDuf2Bf","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Xu4DaGR6XtMw6EWhQaooq","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"I5N3AIWzUTTutQEg4zgAo","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"e5kTSDYRv3zzArjST_rXU","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ArT6iePMbbfJzOmi3Ed3-","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gofPDCWFeaIgzTXLBZjPf","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ncvcgRKWYvNLvJUaEzmDa","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"uPuM_gXdXizZZNWe4mASc","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bJyiKQYhs7nmsKft1CaZa","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"2NVCt78otxmKvphqM-her","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rPDfELQzE7Cvv6PTohl8V","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"5LQ1SzHPiIerOZQlMp0YI","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"TmDnTwq7LCOckya0bwpPp","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"SxnpC7k9EVMbgTKnbQXy1","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"MU1WO-VvIm8bcLO7XeiFj","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"r1l1NivMBfkuzcSOYAcum","name":"setCheckMethod","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Sets the collision method which is going to be used to check a valid drop</p>","params":[{"identifier":"checkMethod","optional":false,"description":"<p>the checkmethod (defaults to CHECKMETHOD_OVERLAP)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"ee48Lwn8TBuabEfJNWWvm","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"TiK6WU0qoyHEmarUDOgrE","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ClWdkIvC9sQwKO-19NpdW","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NBi_7NOMWbMPDtQjNhNyD","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"AHIYcgdRYH3NQ5w1v-eeZ","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"JaW3x_A_dnAW7OOutbQbG","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Or_7EF9gkXqVZ-jXAU6XW","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wqGctggBwJUB48u74HFym","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"8A0ThbbdCiU8BixTA8UUc","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1QewNxtuY1DiiaExTR9CB","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Ie3k7kJSwVDMlFuSdhmw-","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"NxGNouepmiZeVcIcOgASL","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"qmUPu9tQvJuRubaQl6Lhv","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"aUBDe9LyBAlg-9vNoS_-c","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EAeaf3mlZewl8VqAGPCXd","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"l39vP0JclB9MMdL-WUs98","name":"DroptargetEntity","brief":"","deprecated":"since 10.5.0","see":["DropTarget"],"type":"ClassDoc","description":"<p>Used to make a game entity a droptarget</p>","extends":["Entity"],"members":[{"id":"y8-1r37eXJhECwiTV4I0G","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"Pje6UgU4LhZOSgA80vLcM","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"xYUmHyMA--3XYwBic5Zyu","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"LB7EDq9dr-LclK4QHINlj","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"SZvIDwvoZ1zOKesZL2Keh","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"AmMgaFLmAUlc8jJhjNWFD","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"31fBRG_3054JWWWff2eC_","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"MMr2PT0Yyudt4L-AShiN_","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"zC2YvnpUId7vf3ZzfZ1hv","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"uRYk1cHEyHeCzOpqOIg9F","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"hMdwUhbzFEeqRSfxuTBfW","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"syoo5LPWR_bVEDxjCUyF4","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"MtEwJ6pEOuqMwZHQS8KOU","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"P0je3S3E_Lbo6NSwvrtvq","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"-duHYxuxm4iMw9FDppZPa","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"YMMRgbnXV3ddsBZrHLkzN","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"fjCLhvcaJ6G0IObEeqDz3","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"RKaJSEaThuTc0_F1d9DVJ","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"Gj_4HIbq64IlpcZKhq4ws","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"YHJ1BEQUStzB7Q78fXlb0","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"IZ1wVHCZrZiRxhlDYULz4","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"XZ4cn75Oy4SHjACmXBwqk","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"U80BQCF9k9rwopoCeUz6n","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"VWpRKF76nYJ8kXZjKeJoz","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"R8_oQ8YOsh43Wns4uEj-H","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"0nmLts5YEup_JxrvUviSh","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"7zEhMr8h-OPIiX73BbeVz","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"P1dSBJy14KmLtXKMuuT-I","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"Q7FYKRCmYyO_muR0uu-Yi","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"yB0wGbJbOXIZ30dtIqKIG","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"-j7hAlI6IZW0G2wcDFvXr","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"DG57fAgypiU8sH5UfETN3","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"_ttVxtxxtAlOitNVlLCKc","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"IbIDz3c1ApEGXRtFEpVix","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"gfkplo5NtznQwOrwUFOpq","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"wYt8cMSKty5yFmZ4zqHSE","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5YbEm7UZczNaL9dOvpQjo","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Km0_LduHmmMDL-JfuYo3V","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"7cwmn3DsAyvLabj7Ibm8n","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the draggable object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties (see {@link Entity})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"u01sERK_0n_fsycfNNp6t","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IfMfTjRsVHkAUJeH4cQ49","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"65EHLi-9DX3lL4Iaa_XT9","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5Ch3s-yQ2EJ_r-bsI_SZj","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Y_DtoD8zkqtk8LO2TQuXn","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zozZgjA29Q2QNnorLXObr","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2Ov6oSLoI5iexsDNwXFD4","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ezL2V2DahP3rfEEW5py_V","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"32uOcDYU_EoMQNu_BInWu","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"67grqi0k3PwkGVvKDfLxn","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"wqBfM6lhGxhCGOB0BfEfb","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fOlmQUePIXd5THNCjvvvP","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TAKQaAAxnVM0O-EJZIbP3","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6Bww_7bI11wSz7QtIDc5N","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7z9WMM70YQTnRczkyYEbv","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"8oMdAnwtOlRGKdj7tkMyI","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"OIgrrs2lHkNuQF6lwtgi4","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_xvgIB-m-f6PPS1s-CXyw","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ZReNd9xX2pPTHVCj5YqcG","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"EFgRDzqDaoiJvbRkKOBH2","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZXcnbomwN48E-qNfceGrF","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UZ7WRNed-KMdMZM-eYIBR","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"SWCh8o87CRbJOwLjHaGim","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Faza1gD0LbqgUOC0CNsnt","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"nNhW15wCvgVcB3zBFYGnG","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"D5eoC6WQVfVtuKpwNlGVy","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"GxAh69Z7pSBz5HavbA6JL","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8lNKplCu2PZ3mZ23Hbdqh","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"nFQ3yFcuAqepbsulLycUS","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yfgw9TulAR-YeELD8T-Z4","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2TsKta_v9MVqo4ALtjntE","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ioAhvmqj5aet1e3sM4Sbr","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"KBGAvivha_cfahKVg0zUf","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"_f-m5gtw9zrD0IN5bEI78","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"sll9PUAmcy5MsIdxal30g","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"7kG4P7siEiSia9W_co4xP","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"fjIaevSQzpeqkO9la8q2x","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"FPN3Dn27noETMJK0eaKF4","name":"Ellipse","brief":"","type":"ClassDoc","description":"<p>an ellipse Object</p>","members":[{"id":"v5cDdSgTXcziVhJ4ENJFV","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the center coordinates of the ellipse</p>"},{"id":"87oGQv0BYPOIwcC9C-795","name":"radius","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Maximum radius of the ellipse</p>"},{"id":"yhRy0h7Wz1gBj_3XyiorG","name":"radiusSq","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Radius squared, for pythagorean theorom</p>"},{"id":"MVISw9PpqLDTv4Hl9ddBl","name":"radiusV","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Pre-scaled radius vector for ellipse</p>"},{"id":"Q0dwReolji-w02075CdmQ","name":"ratio","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x/y scaling ratio for ellipse</p>"},{"id":"-TTzRWUp3G80bi4DWiiME","name":"_bounds","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>The bounding rectangle for this shape</p>"},{"id":"0bWjYY0eiTX8xOScTrkbv","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this Ellipse</p>","params":[],"returns":[{"description":"<p>new Ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"UmmtewYnl5E8LaCzfD1eB","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the center x coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the center y coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"5Ij0G577vM97l9rb_w1W4","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this circle/ellipse contains the specified point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"U_9XduMEbrOxLEjdwtRxu","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"bxPOIbPQzhoImrGtnVF1U","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Ellipse (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"mi0Q4z9yVDfQ7wDQajym6","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Ellipse by the specified scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"MN2gXmp-WHZZnPCmCHIE9","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Ellipse by the specified vector.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"MtDnPHs-UUTCuPOKLGKu3","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Ellipse shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>the center x coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the center y coordinate of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height (diameter) of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"YVGwT-OzHrNgbJb_qSYHp","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this ellipse</p>","params":[{"identifier":"matrix","description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"hkdkj-QnDskMQYrrtDPHV","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the circle/ellipse by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"l6-IBzbAUSL9MvdHkv4Ju","name":"contains","brief":"","type":"MethodDoc","description":"<p>check if this circle/ellipse contains the specified point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"16tqKJrRnfVKLqfP6GPEF","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the circle/ellipse by the specified offset</p>","params":[{"identifier":"x","description":"<p>x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this ellipse</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]}]},{"id":"E_Ac_mOBv3FHlfArvmXaz","name":"Entity","brief":"","see":["Renderable"],"type":"ClassDoc","description":"<p>a Generic Object Entity</p>","extends":["Renderable"],"members":[{"id":"JabV9awuM0__nzmgofV8l","name":"alive","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>dead/living state of the entity<br>\ndefault value : true</p>"},{"id":"YaILFsxRpCEm1fy8whTRx","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"fx4WeyPqVFZn4O-9GXB62","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"nNC22AP_kxtpDHi3ooOxk","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"N_j-BAgZ4kZvjGxyrBCr9","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"l-q0Cdm5KGrpxqO2nc3FY","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"GOui0_MNJ3W4BBosjBMHc","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"l29kSm7Vo176GrmaTOlEP","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"ZqBQixPIHPNCw8U7g8REB","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Oocfb36zAHxBhCsORCwQK","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"fAvCQitRENnXMTLO_xH1y","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"IkbRkgEH5it9DbGQoW2VU","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"K9RSKU-94Th0OsmrXNNZ8","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"KAb7lAOLcrG1qnPxqontx","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"sVp-uZt_eGwcFThJTGxa5","name":"id","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object unique ID (as defined in Tiled)</p>"},{"id":"ph2wrkLugz_x0WzUkN_8b","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"ij_asOP4VBkR-8PYsawXG","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"g6ZpkbZrZaUXgJBgoC3s4","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"bOP1dcPEgm1j8G1Q9GCAr","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"vWOBHxTDAYtGqTbTtxm5-","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"iWRRD24-2n0YmG6mwljIJ","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"n2nFHroQ7GgDAtK8BPkbR","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"CRtD4iPfpN9Do9JojAxiA","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"r6lVlGsS6C5MzKcdVDhcQ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"frcyTrw6Dkbbw3S-hD-QL","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"mz464h6c5dgVCmjV5xtsA","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"eKDHuW8fhntkzuZCFMVUg","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"_zZZAIsUEm9vhzG1Ip27h","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"eW2XuUoHuWpTBOTHYN916","name":"renderable","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The entity renderable component (can be any objects deriving from me.Renderable, like me.Sprite for example)</p>"},{"id":"QdNBWV7VlNd2d8mIYXN-1","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"hix82Nh2A95NvsTd8ylqu","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"OE-G4f-DxTqb6OrXt_dfv","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"FLYX5hCVa9LvdB2IisjQo","name":"type","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>object type (as defined in Tiled)</p>"},{"id":"OjJo_ASyHfPDhWc_4B32O","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"GfHxcm-Ej_UB0BbJGCkoE","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"fDzAZQ0DDVrpUYmxjUMl_","name":"body","brief":"","access":"public","type":"PropertyDoc","description":"<p>the entity body object</p>"},{"id":"umi6zA8hv9SVyK4n8pu6A","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"xlxHOp5OhG1UymVcUd_uw","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"OzsEWw6LWnaJXM9_HNaYc","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Vpudc_hW1bvhQnursaJUH","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the entity object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the entity object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Entity properties, to be defined through Tiled or when calling the entity constructor\n<img src=\"images/object_properties.p...","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.width","description":"<p>the physical width the entity takes up in game</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","description":"<p>the physical height the entity takes up in game</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.name","optional":true,"description":"<p>object entity name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.id","optional":true,"description":"<p>object unique IDs</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.image","optional":true,"description":"<p>resource name of a spritesheet to use for the entity renderable component</p>","dataType":{"tokens":[{"value":"Image | string","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"settings.anchorPoint","optional":true,"default":"0.0","description":"<p>Entity anchor point</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.framewidth","optional":true,"default":"settings.width","description":"<p>width of a single frame in the given spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"default":"settings.width","description":"<p>height of a single frame in the given spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.type","optional":true,"description":"<p>object type</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.collisionMask","optional":true,"description":"<p>Mask collision detection for this object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.shapes","optional":true,"description":"<p>the initial list of collision shapes (usually populated through Tiled)</p>","dataType":{"tokens":[{"value":"Array<Rect> | Array<Polygon> | Array<Line> | Array<Ellipse>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1<%2> | %3<%4> | %5<%6> | %7<%8>"}}],"returns":[]},{"id":"IE1WBFHR7H8jdHO5-PXbp","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TbuOP8P6s_-7kg09IGNtG","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"VNJ0Pluk7PSqSCROMBLYN","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"52k__qcqR_ddEfWxnW-8j","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"V5MT7N6ugA_kDR5s1sN7y","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UCLbUdnupzDsj7d4D_7ZN","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"O27B_H3j3kKHdGR30gfY0","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"TTDOOl0TK9ZamfuZmYWfH","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"THcIsyZDmh6OBjCsv4X50","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"5MODm3_oDRQ5euarEBZx1","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2F33alRObo-Ccilm7yLEL","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rWiwcRKTUo6ykM3gMA-eK","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MqVvHBPJYldjLErkrMEwn","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"fi0mrTkirf-FtOcZeVIDc","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"OoqE5sdlElF2zQjEFUPs6","name":"onDeactivateEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDeactivateEvent Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"eLLQZTkDZY4Z-4gGTvllJ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"BFOUPsaasUQNoGFeBVRJH","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lLzZGSlzipT_5RS-f8hro","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LelfO4xL7MNaejWGrPTHm","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"wdYDhZG91M8oFVX3e8D0j","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"V8-CnFI6R18YMdf2ap4HI","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pnZLTbHmd-5_HZDhP5Mmv","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"fGVxh_MtoBPDURWajF5Nx","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"OnchL9Y8Y_7vJB0dmR_OW","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ZKw2yy-vDC7djgh_Haqum","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"oHfTxPU4FTHYF3lPZlNJQ","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_Hr7-hl3otiKnqeVUTdKT","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"g6MqMVHMekHQF4lkxog7c","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PAWIo4JOOm7hoQ5gOVt7e","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Wn72QbXHjEKebytBtwc6D","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"uOnHgRKii2YmUcyIhP_l7","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NI7aCIhU179aREWjmD6mE","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"aqUdKK2qHnZUeMaFMR22n","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw<br>\nnot to be called by the end user<br>\ncalled by the game manager on each game loop</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":false,"description":"<p>region to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"aLQ_motQAEGoZBBZ1rffS","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"8diMP6i1fECgiNcdx_tP2","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"SQ4LoXLpIvlKaDvgd3jDh","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rd4O10wRcEYAE0V4tkTjP","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"5nQ1ZF0vyK0qdrInQemPF","name":"GLShader","brief":"","type":"ClassDoc","description":"<p>a base GL Shader object</p>","members":[{"id":"PlIoH5vF6yyfqShWqimsG","name":"attributes","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the location attributes of the shader</p>"},{"id":"RwdVLxiqlVTmmeAPnriDs","name":"gl","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the active gl rendering context</p>"},{"id":"jjDYzs2WAMVrLCTN-jvWq","name":"program","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the shader program (once compiled)</p>"},{"id":"bDRgpg88FNHaeQVZ6Q-zd","name":"uniforms","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the uniforms of the shader</p>"},{"id":"9xJuqJ1fRYsdUXQVSLIl7","name":"vertex","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the vertex shader source code</p>"},{"id":"POjcULgjttZyBKlxOHToh","name":"vertex","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the fragment shader source code</p>"},{"id":"oM2BjbnSzWn2Ax-GsFPOH","name":"bind","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Installs this shader program as part of current rendering state</p>","params":[],"returns":[]},{"id":"1-1MeaZRn-K_KWF-kaBvm","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a basic shader\n var myShader = new me.GLShader(\n    // WebGL rendering context\n    gl,\n    // vertex shader\n    [\n        \"void main() {\",\n        \"    gl_Position = doMathToMakeClipspaceCoordinates;\",\n        \"}\"\n    ].join(\"\\n\"),\n    // fragment shader\n    [\n        \"void main() {\",\n        \"    gl_FragColor = doMathToMakeAColor;\",\n        \"}\"\n    ].join(\"\\n\")\n  )\n // use the shader\n myShader.bind();\n"}],"scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/GLSL_Shaders"],"type":"MethodDoc","params":[{"identifier":"gl","optional":false,"description":"<p>the current WebGL rendering context</p>","dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}},{"identifier":"vertex","optional":false,"description":"<p>a string containing the GLSL source code to set</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"fragment","optional":false,"description":"<p>a string containing the GLSL source code to set</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"precision","optional":true,"default":"auto detected","description":"<p>float precision ('lowp', 'mediump' or 'highp').</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[]},{"id":"7HaVYGyQ6JY8pGpjoTQCQ","name":"destroy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>destroy this shader objects resources (program, attributes, uniforms)</p>","params":[],"returns":[]},{"id":"ByC5XfJUwec96u7uioT65","name":"getAttribLocation","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the location of an attribute variable in this shader program</p>","params":[{"identifier":"name","optional":false,"description":"<p>the name of the attribute variable whose location to get.</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>number indicating the location of the variable name if found. Returns -1 otherwise</p>","dataType":{"tokens":[{"value":"GLint","kind":"canonical"},{"value":"GLint","kind":"canonical"}],"template":"%1"}}]},{"id":"TLBuGXRDHecOU-DBOI054","name":"setUniform","brief":"","examples":[{"caption":"","code":"\n myShader.setUniform(\"uProjectionMatrix\", this.projectionMatrix);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Set the uniform to the given value</p>","params":[{"identifier":"name","optional":false,"description":"<p>the uniform name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>the value to assign to that uniform</p>","dataType":{"tokens":[{"value":"object | Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"object | %1"}}],"returns":[]},{"id":"DTgqT-gRw5kJTKjCkEJis","name":"setVertexAttributes","brief":"","scope":"instance","type":"MethodDoc","description":"<p>activate the given vertex attribute for this shader</p>","params":[{"identifier":"gl","optional":false,"description":"<p>the current WebGL rendering context</p>","dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}},{"identifier":"attributes","optional":false,"description":"<p>an array of vertex attributes</p>","dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}},{"identifier":"vertexByteSize","optional":false,"description":"<p>the size of a single vertex in bytes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"oDzsbo8ni7nzUNwTP6utn","name":"GUI_Object","brief":"","type":"ClassDoc","description":"<p>GUI Object<br>\nA very basic object to manage GUI elements <br>\nThe object simply register on the &quot;pointerdown&quot; <...","extends":["Sprite"],"members":[{"id":"xswwX7Iy1IW6LmE_1NWbG","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"1VpK15PvaOnbLwMufgMBI","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Ctp2OqMZn9nNQjF6GZAER","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"WmxPjeuBn3v_Twd5_Lm2v","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"Nq0Aqkoli_Pf-iK77y8kw","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"1SENk_BiFQ9W1iqBXowvE","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"1ve1HzSKmFPeYB8lpSqwN","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"hqoDarIRlTplQZn8gMKSl","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"COZqxfMT6cDDmTwfyCf3Z","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"-TnY7MRrFyn_hZMvfNb1I","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"3vcwWsgDTaF_ldrjDocih","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"ApMFPMO8JZoadphU32CgI","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"zk04gf2cLESXoIOvceDYV","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"pKPOMXLj1jASsweZn2Pa8","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"t3BagjlrV8V6igzWsPSMK","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"P_C-bkoCdab2ZN52p570f","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"Uva-9nWXJrGZ0UAwnxv4Z","name":"holdThreshold","brief":"","defaultValue":"250","scope":"instance","type":"PropertyDoc","description":"<p>Tap and hold threshold timeout in ms</p>"},{"id":"eHx6rc-1lUbIVkojn_-XM","name":"hover","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the pointer is over the object</p>"},{"id":"VUAXaNCeg7hLqpw6j2ve2","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"ddSAFkLSf0MN7NpGP2cUQ","name":"isClickable","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>object can be clicked or not</p>"},{"id":"0-ALLc8WdsjnhKXCwfgQv","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"N6DWIiKZySGz-pqWYSKHC","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"iPzBH1HHmmPz9NQ-n0gfa","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"PWHSCFHTnSHxVIZ-mqeHp","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"AYJCOFXfkeJ3NsiyYOt-C","name":"isHoldable","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>object can be tap and hold</p>"},{"id":"mMjjTPcDFWVjADy7K3mEV","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"vNH8oxj-3w6yT4FhM7U02","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"QyJEtfAygxqyyF3mr8SDu","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"JLLaqtqJs2ZhgxvRi7e5k","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"yiloaCK2Ygz-X9noaSnN2","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"qCnhwACnZYgL7dRtJZ643","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"e1qPeUaFgBeCcXB1AujEj","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"1KvjFj5kuRfdb2rZ68PlM","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"r2G330E6xugekL4GyWYOU","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"xlhqFhr2EfRTnwEf_oyuk","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"KpDg4DOGEv-eUBviapRTt","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"bBJiG6DJ78xF9r0Ju16VI","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"ZKp_-fmM5VYs1EUJNaZvH","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"Q7MXzrEhRm1O9pgaKUsSC","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"0ev5lJSs31ckWqNfmcpS3","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"OYQ4s9QQCOLieUKDPNcNg","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2zhT3IDbG7zS4sBv9Y63o","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"PqcB6pqnahdBf4ZyBlOTu","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"fXiZ3oMA5ZjFtjrmQNCKp","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"tOXwT8hDQ7xlmxeHHnw25","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a basic GUI Object\n class myButton extends GUI_Object {\n    constructor(x, y) {\n       var settings = {}\n       settings.image = \"button\";\n       settings.framewidth = 100;\n       settings.frameheight = 50;\n       // super constructor\n       super(x, y, settings);\n       // define the object z order\n       this.pos.z = 4;\n    }\n\n    // output something in the console\n    // when the object is clicked\n    onClick:function (event) {\n       console.log(\"clicked!\");\n       // don't propagate the event\n       return false;\n    }\n });\n\n // add the object at pos (10,10)\n me.game.world.addChild(new myButton(10,10));\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate of the GUI Object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinate of the GUI Object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>See {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"X7tvoqVII7nX8IdqtCXus","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"udh-m1cscN2Mw34EbnF3G","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0Bsoo5cIc15A_f9GvJVtm","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Zyub0515wo_U8qMMLYx4f","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"O830fT3Zt8rMhDlpjN4nk","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"7xP_t1fikNDM5mnGH701q","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"fhvF4UHUL35Y2y_v0f-i4","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GAAa8fMEylywkBVVVw1Wj","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"sw3ZvYsGdmi0EWOod7wZF","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Q4rb6Q2LkJDkpZa1KTCgA","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"yL13-ti4MZjL5DhTgSLOw","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"zkv1HLe_C_bpWAiO8FBSE","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7HQUrB9GFuYOFfTwStZkg","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"a-a2KuvU8O5CfRjXrUsEC","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wL2stZIV3d8MkqVaCICds","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"XpIgFTHXtJjSLxn4633F2","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hgHM7kpPtCubkM2hKTNtH","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"d-vUu7Yn2_cJOS-LMWPUq","name":"onClick","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed (to be extended)</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>return false if we need to stop propagating the event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"MDuKyGKUJeFGtSffQcitb","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"D13jhvcCpc_HonqNUduUJ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"F-5v3sYsF__qjRCrJpplP","name":"onHold","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed and held<br>\nto be extended <br></p>","params":[],"returns":[]},{"id":"6tq8XjRZvLWoofyDnvA1r","name":"onOut","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the pointer is leaving the object area</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"3xSyastelZsqp8gv0lAyY","name":"onOver","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the pointer is over the object</p>","params":[{"identifier":"event","description":"<p>the event object</p>","dataType":{"tokens":[{"value":"Pointer","kind":"canonical"},{"value":"Pointer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ONX97An7SLp3JHww7fM1U","name":"onRelease","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>function called when the object is pressed and released (to be extended)</p>","params":[],"returns":[{"description":"<p>return false if we need to stop propagating the event</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4qHko4tSazTb2mOxEYt8F","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"T97gNUhRtYVjk_onjPX_9","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QAeMK3Ix-kMYXF4H9l1yA","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"jBs07925w0HTe3hEG0dvA","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"kYuXlbp3FfUpQKPRYGPdS","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7lINjNgsJVT0PMBat7Rjy","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lvYV-Y08-L_XTqPsqm281","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0s6InnQ_hl3xIsyGs7gd8","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"J8lzgZcQfdxlOKGbsBdLw","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"2CNFUpAAcRwuEDxeQETAA","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"gAXJFFXRMjbgKk_Ddr3ou","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"kh9dY5Gy1TR21PKtRznW8","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"9MFolR2lSamhUMCkh31K9","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_qYpOPKvNj3_y-25t7Ri_","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"D5nkQUBjFg8FOFdh50eCK","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BvkEleYwVpEUGf37_Rs7F","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Z7mQ7pkH4LB5uVnU6gUK_","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8qfR3KhVEC_9b57fdmeAw","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"CdxfKbyce3Z8m06yN6UPV","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"sVlSkGl5CE9oOiQm3cjZq","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"YJ3MECPfYuwqjRj5cZ1fo","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"dsPHD5u20DRZsTdINn_GW","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"SR0FzBzBHUCp9MO4HhUni","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"WE91OQ8nb_oNVe9WOWrP_","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"FWCQLzZpPCCdFJAHOb7oS","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"tCOoI-y4eN8791exA_UZY","name":"ImageLayer","brief":"","type":"ClassDoc","description":"<p>a generic Image Layer Object</p>","extends":["Renderable"],"members":[{"id":"uUiMlb01_Iq5PwCv-gXkN","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"A_n6gbwEeU9NSEh2ow5eb","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"iwsDo4Xkx-KZXRyONQP-e","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"yDKqcYdUuf-oNBKeY9ige","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>Define how the image is anchored to the viewport bounds<br>\nBy default, its upper-left corner is anchored to the viewport ..."},{"id":"FalrIxmY5Bn6oF4IMi0HW","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"TSnNJDnzq01WAUwPISjUq","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"btfIsoha2Ph7_pg1DKntR","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"ticliSRNFGQmAtRENW2GN","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"8CMlsQaSoD8QoyBz3WaTA","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"QPj_wr2FFb-GoJNzjw_CM","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"5yGyngbeu65Lh7UGe81NG","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"nHgnZ9UgoJeR9sgB1KrW7","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"St4Glj5y3xrxkIwsjvGOa","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"85hsEQzJVULoP5qimL9Ye","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"GcGIgFstILSnBevl-N0IT","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"5KuojUq2RseQB8HqkhVc5","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"EG310FzNolJGUtmBd4KHz","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"nvSt2u4jlink7EoZYDfyP","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"HRUu42pJIjY8KayFb6zP5","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"-FRcdLFrY3cIOzEOEUNCY","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"wVDjXRiX5COo1-4R0oDUT","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"uffJLr98ImfQJ-UWPhal3","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"rrBMdQqLpsblbTeY4PD2f","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"zWtHPVjiUHGykQ8oz0I7C","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"HC7tqS6ugCMIWOJyQ7-Al","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"6_O4wa62jBB8PDCGkxloF","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"pXxz7hb8LN3dYwCCSrFUF","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"2stR_J4pWC-Fa6TmAMlro","name":"ratio","brief":"","access":"public","defaultValue":"<1.0,1.0>","scope":"instance","type":"PropertyDoc","description":"<p>Define the image scrolling ratio<br>\nScrolling speed is defined by multiplying the viewport delta position by the specifie..."},{"id":"0y6-1qNFYOHAvS5DIP8lu","name":"repeat","brief":"","access":"public","defaultValue":"'repeat'","scope":"instance","type":"PropertyDoc","description":"<p>Define if and how an Image Layer should be repeated.<br>\nBy default, an Image Layer is repeated both vertically and horizo..."},{"id":"8kXiXdgBAe1iWZDyahq1E","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"EuFr12GCJdGwgEZ7fy0Pg","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"0o0F_ayjt4PvZl8amzo--","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"nidmkxmDT2ov6x3o-8bBe","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"IBDwRsiGvET3E-d_EcPi-","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"L2t-SP1SwwANB7Crmte8Z","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"v9wTeMMbtZcToqeguc7oe","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"xAwqaLzfOm_yCONBJgmRP","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"WF-pX4GsVMgWnu3u1Z35Y","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a repetitive background pattern on the X axis using the citycloud image asset\n me.game.world.addChild(new me.ImageLayer(0, 0, {\n     image:\"citycloud\",\n     repeat :\"repeat-x\"\n }), 1);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>ImageLayer properties</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.image","description":"<p>Image reference. See {@link loader.getImage}</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2 | string"}},{"identifier":"settings.name","optional":true,"default":"\"me.ImageLayer\"","description":"<p>layer name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.z","optional":true,"default":"0","description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.ratio","optional":true,"default":"1.0","description":"<p>Scrolling ratio to be applied. See {@link ImageLayer#ratio}</p>","dataType":{"tokens":[{"value":"number | Vector2d","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"settings.repeat","optional":true,"default":"'repeat'","description":"<p>define if and how an Image Layer should be repeated (accepted values are 'repeat', 'repeat-x', 'repeat-y', 'no-repeat'). S...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.anchorPoint","optional":true,"default":"0.0","description":"<p>Image origin. See {@link ImageLayer#anchorPoint}</p>","dataType":{"tokens":[{"value":"number | Vector2d","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"zRJFpuXOLo8-mnQjMFaJ7","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"580eBSe3b14WEdfMyYunZ","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"jP2L3nG7qtekgbyKr80ry","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5kNtYprpNN72UwREkCZXZ","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4Atgq4qt0Lo0qIrhxdeUR","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"7frYZP_fqg0pK0fK_dBxp","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"IdhcXCQDMdNirz4BKDx2O","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"1pKAXNykRp1d_MlxGC3VH","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"-EHa2MhQpY0VrWTCfSx5j","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"lxQZQ92NYIAaAzn3ddohg","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"bZSeBe0L5MEx9xEZGvLcv","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JM2BPzUXO6dWgCJ2ztiMh","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lCwttzeL7fTElnR9xmaID","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"kHofyZLarCrRsbxqak8aa","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dXipwdB-bLoXy04Gp0va8","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"O-fN1DXEoxv7skIg0PDqP","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"JualXVMIIkk8ei0mbZjnS","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"biBvoJ-q_hvBI_PaXvO6H","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the Image Layer to match the given size</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jAeOyci-VWRZWDTNOpBHt","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"nyvjPgqExxD1IbcApVsHt","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"RkfhGAREYn1s_kXmLkal6","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"LIi_fRpZzQLStOJ67AKU7","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"eL7BCLSjwqbt-s72g6JQY","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"VYU0zA6y-88AlRkfFB_oU","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wbmTWFxoE13HTdn_ghqIm","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"qVy58gNgXZaXZUy4PZ2Py","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"VrY-o8DZSELVZZfuYVVK6","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9HcneMB3xRWx-0HD44RAm","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"oBcN9J4YjlFhpk8lTQ3JO","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"QOQTTPT_sQI2IIML01PBA","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"NCAKaH7x7Xb91sL6JKKTn","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"PRKP-XfKMl-uGIakUisAN","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the ImageLayer. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ER0RmSvsLFLPnHZM3SqB0","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"qZGiudWogeCFeipY5i7Q3","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"IglMYv02_ANLY0kkm8C4d","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yd1igdjCOIK1Zt_aDKP4g","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"9wu4njMeUXjOZGem_2tEw","name":"Light2d","brief":"","see":["stage.lights"],"type":"ClassDoc","description":"<p>A 2D point light.\nNote: this is a very experimental and work in progress feature, that provides a simple spot light effect...","extends":["Renderable"],"members":[{"id":"iohqkASXUhgrCth3JWKwm","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"u12TaYEvZM5I4ED3iOXof","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"tnBtKeZ-XXQq-M1DhMhK_","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"9KPzO31ZAqr5-hOCx-F4Z","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"w9XP0R8sYXY09XcDhI1nt","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"9GyQ5Lbg4B7rhMwlqHqTv","name":"blendMode","brief":"","defaultValue":"\"lighter\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the default blend mode to be applied when rendering this light</p>"},{"id":"-W2o2wtlLLtdTb-1GmKiD","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"dvc1zp8yVm_0PUnpiND0o","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"grHdIrjTxdJuKcEAAYyx1","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"xCFfG0CR4zFOyaAipexXV","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"P29R4-meJ7Y-OvEkh6zQh","name":"color","brief":"","defaultValue":"\"#FFF\"","scope":"instance","type":"PropertyDoc","description":"<p>the color of the light</p>"},{"id":"Fac5ReHT0TABeaZG6qxIS","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"Qw7YRrgVRBCvyUF4Xg0ow","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"_Wu0Zm5cgIrC-Ch2FKA5x","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"OaGXqd778td9N3ALoai38","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"9kJoMIIjexnE-fcXlOMyQ","name":"intensity","brief":"","defaultValue":"0.7","scope":"instance","type":"PropertyDoc","description":"<p>The intensity of the light</p>"},{"id":"AAPJwkZxHydvuSKF_zWUa","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"UxlLxOfynOxYarBk87hBy","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"toJFeqEyE_mdiygjOhae0","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"sLdvaQqJW-j3c3S53wKKT","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"d8Q1AbzSIb3TAo9LRKsEE","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"I9QE2YZBKTO0V5QG-P3_y","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"PMdOMCPWKcje48ua-TsLw","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"nlNhQXqMdvgZgjVH0rdhO","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"cokbcliOgO21ATQrTL1AS","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"dvGdfJ10xm79F_POAKD9-","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"yGfpyPh9IDFMyk6wAn2_0","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"FDHTKZ9hQUdYWvPVst1w1","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"RKIn8ZlmA5s9WOSE9a9yB","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"NULi2wVgpoX2IyxVpt-cb","name":"radius","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The radius of the light</p>"},{"id":"ERHMwWmvizPBzE7NiugXL","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"gpZrtLSSMD1eK6HYyMGIT","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"rDhbfhU7uhcRV7GHpEwo4","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"dcjfO07_xu96YBENGdFC-","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"2q1rFsgZrvRFXJjotjt34","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"-5orbZUOVDWIoZntvRS37","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"TFQ2PuA34t7EuKKq5zpP5","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"J7IIe3okSLybpYE3I5rw7","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"J-WxmOYgtxQ1Xh5LQjpvB","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>The horizontal position of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>The vertical position of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>The radius of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"color","optional":true,"default":"\"#FFF\"","description":"<p>the color of the light</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"intensity","optional":true,"default":"0.7","description":"<p>The intensity of the light.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"4OLMMLEATwkrMQt0rOSbA","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Fa9lERTSsXtg36wRTFvMi","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"DpjL8CcVs_f9mN3skWwgF","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"FNLQO0LU4Ft_0jmIP8rgS","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"7FdoZGoTSmdXD2eq3dpkk","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"tv3NInuyVW-piWXwKq69K","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"-Y_WBDPe9QZhH0Wp12Atb","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"fu_Z98uig6RGsvIsp9I7m","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"ziLjlYuq-tM38QuxpVrLr","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Jv419ILdRxJGH7c2oP-Ot","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-u0tcv2ZOWkSQKtnHprHL","name":"getVisibleArea","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a geometry representing the visible area of this light</p>","params":[],"returns":[{"description":"<p>the light visible mask</p>","dataType":{"tokens":[{"value":"Ellipse","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1"}}]},{"id":"E1yWcabxbTv49lewfSGjH","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BjiLP8kYzjfQB6HU3Szw9","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3uATP6ZXTKpfKHMtKeTSW","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"KpiPUj6mkQA7QMDzXXSKe","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HJlvg3zNJWTxWkNaI5het","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"PrQAh1J9qOnKMLtAlkY9p","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"33nIJqRmPk1WJb_EcvCxW","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"M92fJSRMiqiEnoCEbG9TF","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"kecoDzWuzhIoPlxbcJwZ1","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2_d0rxIHW2mgGOclxTw4x","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"oQnuXA_9V9JPNdLgfbj50","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"WkRiJUEs2T0YI9WiUZr9J","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HaFGz0QvS-1g6PXh_b5Uc","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"V7zwgl0WrEq9hfiKxcdte","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"TigYDttK8c-4ERVykpJgG","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_8tP7L_8mwUswDdmEYTBH","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wsPKmnVsAK03qEKGF9SGQ","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"w3dC5BXEMM5Z0zXAqVrle","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kAVIkdvT0DcfOyppbPqJx","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"mf4mDVyXscHbuVykC0uT_","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"GpyQC9D35yBNywyaohS0k","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"NaGqREtsudT7Z9_EkY7kn","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"9ywW8yMnOIW9jNVYOLhAh","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"55Ej7D3fxXNuQIFBw23gg","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"ZU2VdMFXzuRok1eOscW7T","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rzOgpuSAwr1LaqlzXYTHH","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"rno5G6INUDIpstUE3wcKx","name":"Line","type":"ClassDoc","description":"<p>a line segment Object</p>","params":[{"identifier":"x","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","description":"<p>array of vectors defining the Line</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"extends":["Polygon"],"members":[{"id":"WBBhUANke72AG-M8DGDX2","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"hoDyz0Rhu4lIuOGx3ncd9","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"ITvLGFNIL13Ur5hIGB2OV","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this line segment</p>","params":[],"returns":[{"description":"<p>new Line</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}}]},{"id":"GJqGecX0u9ZRiOtwKUnx0","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>origin point of the Line</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","description":"<p>array of vectors defining the Line</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}]},{"id":"kSdWUvGJp9Iv2HXGRFpYV","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the Line contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"mUQ05M3bEoU4nfrglLylY","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"2MLua4uCEesfLd-M2h-wP","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"xzv_83IE73sTQ9H0iLtv_","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4__082TdcsJdoeIOXCOPu","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision edges and normals.\nThis <strong>must</strong> be called if the <code>points</code> array...","params":[],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Line","kind":"canonical"},{"value":"Line","kind":"link"}],"template":"%1"}}]},{"id":"NFGh0oCOFE6OpWK3kdTje","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"a-o_U6R334ITClaODSBI3","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"BJKoHJqW63izJz810M27Q","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"2l8vSkZ6HAKZqatYJv7Mv","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Polygon</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2> | %3<%4>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"cuw4Hj5_iE2hNZlMX8rHv","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ilkiJx7pNtVc8AC2P4jSq","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"GjzPZITmghPoXa3DW_6sb","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"gUN27Bw7YiUQD0mM4UWEQ","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"C4x2Tb4t816htCP7Hx5KV","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4srv8kY60xbdgBaXA938j","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"pbbR0M983ES591ITZbg6h","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the Line contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"Iwfzq6A4itAUiGfBpQpf4","name":"Matrix2d","brief":"","type":"ClassDoc","description":"<p>a Matrix2d Object.<br>\nthe identity matrix and parameters position : <br>\n<img src=\"images/identity-matrix_2x.png\"/></p>","members":[{"id":"_AH2SkZAj1pVU4HJjNjFZ","name":"tx","brief":"","access":"public","scope":"instance","see":["Matrix2d.translate"],"type":"PropertyDoc","description":"<p>tx component of the matrix</p>"},{"id":"uE8Y0a2fE7tLLhC0XSnYJ","name":"ty","brief":"","access":"public","scope":"instance","see":["Matrix2d.translate"],"type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"12QNdwc6G0OdhkQP4BtbL","name":"apply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"F5RlksSQLpRTi2lRkllrf","name":"applyInverse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the inverted current transform to the given 2d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"WuZBH9rMnSqGguYlLBRnl","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clone the Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"A86NhxeJ4w6x_tYjPObN8","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"args","optional":false,"variadic":true,"description":"<p>an instance of me.Matrix2d or me.Matrix3d to copy from, or individual matrix components (See {@link Matrix2d.setTransform}...","dataType":{"tokens":[{"value":"Matrix2d | Matrix3d | number","kind":"canonical"},{"value":"Matrix2d","kind":"link"},{"value":"Matrix3d","kind":"link"},{"value":"number","kind":"canonical"}],"template":"%1 | %2 | %3"}}],"returns":[]},{"id":"NzBM7ElIziIDz5nNVPBlj","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the values from another me.Matrix2d.</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"9hkw8vaHX-FqbpYLeZrRI","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two matrices are identical</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if both are equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bqJDf1bmkXu9gXctcSmUR","name":"fromMat3d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the upper-left 3x3 values from the given me.Matrix3d</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"ua1b1MKKjebomlVsBYMP8","name":"identity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the transformation matrix to the identity matrix (no transformation).<br>\nthe identity matrix and parameters positio...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"2JAUHN0By8Wtj6oo395so","name":"invert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>invert this matrix, causing it to apply the opposite transformation.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"6DFoDyP1zuotPKq6h5FVz","name":"isIdentity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns true if the matrix is an identity matrix.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cXsdDKAsifGlQfuk_Xe50","name":"multiply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>multiply both matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"yCMqMsj4nt0vEoDIvkiI3","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotate the matrix (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>Rotation angle in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"Sseg1gm5xt_phtGcB6pQt","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the matrix</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"ISIDT3qmx3vydqcAPP6wh","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a 2D scaling transformation.</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"dKApN7Qtg5DfJgD0Qr_MZ","name":"scaleX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [sx, 1] scaling vector</p>","params":[{"identifier":"x","optional":false,"description":"<p>x scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"LOhc4I_1b4f7v8VZhRiqH","name":"scaleY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [1,sy] scaling vector</p>","params":[{"identifier":"y","optional":false,"description":"<p>y scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"uP2m-JImjSFjVnPzrx8EX","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the matrix to the specified value</p>","params":[{"identifier":"a","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"c","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"d","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"e","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"f","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"i","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"zyO90Npa3QzITo8nwhPAr","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"9jjNpTuk4q4EGqzSoS2tf","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"nORDoNCgMIR4bUHI2xEnQ","name":"translateV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the matrix by a vector on the horizontal and vertical axis</p>","params":[{"identifier":"v","description":"<p>the vector to translate the matrix by</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"Zb0psz2I-p8AHNPqrU6o2","name":"transpose","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Transpose the value of this matrix.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"RgfmF2tkBG4O89dwA-lb4","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the matrix position on the horizontal and vertical axis</p>","params":[{"identifier":"x","description":"<p>the x coordindates to translate the matrix by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>the y coordindates to translate the matrix by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]}]},{"id":"yxtHu1KRWLkB0Qvsxi5Cw","name":"Matrix3d","brief":"","type":"ClassDoc","description":"<p>a 4x4 Matrix3d Object</p>","members":[{"id":"5ipVfgERCIsYCOsPEj3WE","name":"tx","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tx component of the matrix</p>"},{"id":"fymVjB-QWKXvItCshChwZ","name":"ty","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"Xm0yW_xhy4vpzNak71j5L","name":"tz","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>ty component of the matrix</p>"},{"id":"KwfZ26VbT6AfBDrCW0VUq","name":"apply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"kvf4XGwcWn4Avh54Zz4Gj","name":"applyInverse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the inverted current transform to the given 2d or 3d vector</p>","params":[{"identifier":"v","optional":false,"description":"<p>the vector object to be transformed</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>result vector object.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}]},{"id":"aLPLMADQvUPxC7xNtlnpt","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clone the Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"ZB7BPETp0O6N4Yqvuh1ph","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"args","optional":false,"variadic":true,"description":"<p>An instance of me.Matrix3d to copy from, or individual Matrix components (See {@link Matrix3d.setTransform}). If not argum...","dataType":{"tokens":[{"value":"Matrix3d | number","kind":"canonical"},{"value":"Matrix3d","kind":"link"},{"value":"number","kind":"canonical"}],"template":"%1 | %2"}}],"returns":[]},{"id":"9JFop3KVuB6HHSHXuznwl","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the values from another me.Matrix3d.</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"OgWaYOoR0j6I3uZUoiM8d","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two matrices are identical</p>","params":[{"identifier":"m","optional":false,"description":"<p>the other matrix</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if both are equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tdgyWNkAC8GqAs-LYuFTV","name":"fromMat2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copies over the upper-left 2x2 values from the given me.Matrix2d</p>","params":[{"identifier":"m","optional":false,"description":"<p>the matrix object to copy from</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}]},{"id":"3P1gJuNl9vL22O_XHnLb6","name":"identity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the transformation matrix to the identity matrix (no transformation).<br>\nthe identity matrix and parameters positio...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"uT6oJfaBTq_5U8rpMxh_C","name":"invert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>invert this matrix, causing it to apply the opposite transformation.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"IwTe31g9dRXwWLeJ1-arN","name":"isIdentity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns true if the matrix is an identity matrix.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tAgN3SvA_oYUVfBzclDl3","name":"multiply","brief":"","scope":"instance","type":"MethodDoc","description":"<p>multiply both matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>Other matrix</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"tlA5yh74KePywakv4lM6h","name":"ortho","brief":"","scope":"instance","type":"MethodDoc","description":"<p>generate an orthogonal projection matrix, with the result replacing the current matrix\n<img src=\"images/glOrtho.gif\"/><br>...","params":[{"identifier":"left","optional":false,"description":"<p>farthest left on the x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"right","optional":false,"description":"<p>farthest right on the x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"bottom","optional":false,"description":"<p>farthest down on the y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"top","optional":false,"description":"<p>farthest up on the y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"near","optional":false,"description":"<p>distance to the near clipping plane along the -Z axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"far","optional":false,"description":"<p>distance to the far clipping plane along the -Z axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"ZvgyM1V8FOg_aFMlKLA4z","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotate this matrix (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>Rotation angle in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":false,"description":"<p>the axis to rotate around</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"bzIry67zmAlyZjYZV4xAe","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the matrix</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>a number representing the depth vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"5jgPVPRQRZlas92KoMGt_","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a 2D scaling transformation.</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"SfBsZrLkQ0yjtzfDONDAT","name":"scaleX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [sx, 1] scaling vector</p>","params":[{"identifier":"x","optional":false,"description":"<p>x scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"7iGltufkV7YZ9pfumTnXf","name":"scaleY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>specifies a 2D scale operation using the [1,sy] scaling vector</p>","params":[{"identifier":"y","optional":false,"description":"<p>y scaling vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"dZlxRBUxuDPBLSbqRIW3u","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the matrix to the specified value</p>","params":[{"identifier":"m00","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m01","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m02","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m03","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m10","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m11","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m12","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m13","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m20","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m21","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m22","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m23","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m30","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m31","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m32","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m33","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"l6OV1vVPbSZKOZ4ebqo3w","name":"toArray","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return an array representation of this Matrix</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"qouAJJhPPu6htSS-TsuOM","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"RH5FmQ1h_tp0FPFDhAPej","name":"translateV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the matrix by a vector on the horizontal and vertical axis</p>","params":[{"identifier":"v","description":"<p>the vector to translate the matrix by</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"iOJm3lgt4USBO7veGy-XC","name":"transpose","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Transpose the value of this matrix.</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]},{"id":"Ep1SJ0k260Wv190PwsNb-","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the matrix position using the given vector</p>","params":[{"identifier":"x","description":"<p>a number representing the abscissa of the vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>a number representing the depth of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}]}]},{"id":"sgskYSMYYsQswiapE0WcW","name":"NineSliceSprite","brief":"","see":["https://en.wikipedia.org/wiki/9-slice_scaling"],"type":"ClassDoc","description":"<p>A NineSliceSprite is similar to a Sprite, but it uses 9-slice scaling to strech its inner area to fit the size of the Rend...","extends":["Sprite"],"members":[{"id":"8GKdiV0Hbmd9CA2Dtc_5Z","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"XVrScn6IRR8CMcK0e8THf","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"36g9wXYpQKuEeaQvHCtCw","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"f8UZS0yiuNij3lq4aKNgH","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"tqYhNXoX3rbYMpH1VzYYA","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"qAYH9YyF78PamJAl2m9zV","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"TxF7f9owFjy0ZDqeqrer7","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"p2I79Jr-yj9nOiWpXPEc0","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"K2VzDMjXhq0P2KvrutJr2","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Qu4NavO8_OTnwdR25IAph","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"o0qRMeeF-JS8bvw05fGP1","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Mm4RmIK8jrAL6HAog0Uwl","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"gMNUjxbtMaZymZnNgrDhz","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"6sKJMfHeIQj5unR0uHBbu","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"yTBC95IeVkO_X8zJAMB-f","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"RnV2qvuLzeQvbE3Yy7DxI","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"bClADuce0TZXF_DvbWNc0","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"u073FTAbDIoHVXD7cFG8M","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"J-mXQhEsFfs8B7ZECT9TY","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"1oLZINFVBeNE63aqwABGJ","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"yWbaYQm2ANlAChIlJ7H7L","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"ARSPEYcgf79GqEjeAVhvt","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"DhzMLZiIVqOuF4k8ZFUf2","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"iP1lzGwW8-aebs_4z2XpI","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"oOb5WNfhNtJQOwWlyAe9V","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"vSiYbeVG7z_G416p0AlBh","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"EU0W8_QFONZyxyygPbSDl","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"gKpmzBctNgCXLnNnbA14H","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"8763T0cLhNbf4rJSbh2jg","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"nlk5zZVsIQhehURRNUj77","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"P9vFIs1JKAh_9vdVORbfp","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"Y7rGGTTd3XqdcLPwDRdEw","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"j_prSwh7CTZRD21vXy9hS","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"pxoPrEAQv0rXVrxIrm5R_","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"e1WSav2xCZVHubeRDxrtM","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"pqjrf3tjhs-ew7pvOMyyR","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"w5o3rrjW9Ps-oqSfySXDz","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2sAGqJd8t96ppUYGnQlAF","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"i5DIWK7zpRJUEjykDNPXo","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0ruKCH1a2dEXIkG1nUh11","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"bDkmtoJSEzNCyRjN9BQQB","name":"constructor","brief":"","examples":[{"caption":"","code":"\n this.panelSprite = new me.NineSliceSprite(0, 0, {\n     image : game.texture,\n     region : \"grey_panel\",\n     width : this.width,\n     height : this.height\n });\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Configuration parameters for the Sprite object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.width","description":"<p>the width of the Renderable over which the sprite needs to be stretched</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","description":"<p>the height of the Renderable over which the sprite needs to be stretched</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.insetx","optional":true,"description":"<p>the width of a corner over which the sprite is unscaled (default is a quarter of the sprite width)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.insety","optional":true,"description":"<p>the height of a corner over which the sprite is unscaled (default is a quarter of the sprite height)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.image","description":"<p>reference to spritesheet image, a texture atlas or to a texture atlas</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | TextureAtlas | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1 | %2 | %3 | string"}},{"identifier":"settings.name","optional":true,"default":"\"\"","description":"<p>name of this object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.region","optional":true,"description":"<p>region name of a specific region to use when using a texture atlas, see {@link TextureAtlas}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.framewidth","optional":true,"description":"<p>Width of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"description":"<p>Height of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.tint","optional":true,"description":"<p>a tint to be applied to this sprite</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.flipX","optional":true,"description":"<p>flip the sprite on the horizontal axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.flipY","optional":true,"description":"<p>flip the sprite on the vertical axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.5, y:0.5}","description":"<p>Anchor point to draw the frame at (defaults to the center of the frame).</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Jgo8h-wUY093ayh_UM9pV","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"z2pvrPod5snf-YG_U5zjp","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HfoRXWrND5YshCXlx9vta","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"qv0T0ViHnpIVD72tJmRUu","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"utXerQu6BHLOe53Oj2wrz","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"th9mKg5g2GOxAQBz4tu_l","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"8m0n9f3Y-bNOTxN42Ud6c","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZxGdGUR2VEeH4ZKxlhbhZ","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"28yJXnJ5226LiYgcuF3BN","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"Hv55K9PG4kVTmg_726zva","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"asXvNcO9By63PX3VsKN1A","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Twqd_NG6r9MgOk82-1A9Z","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"hlVnHJMal-m7Onb-BmyhO","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3J0YJJG5FnkeJsWAKpbvR","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"M-lE82v390wk1V2wjqC6n","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4Hi8qyPMOM2DPnsyKbajl","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"KAJMGNTEmqHKNJ-HhojO6","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"z_KYsOWQcQ7PLf6C0XWar","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dqW4kOZH_nWFVJmNdJiJZ","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"Orfm7TKRqGyB7EDeRvMJb","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"b5nUhH17PtSPEEYce-DdV","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"nJ8C8gkLgY4NACeqkzqia","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"DZGN_1BZ4xkVq1AE3sKG7","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"jVlmBtka9oKHl3NVu-ftD","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2luke6wuc9TP4D_kx7Nuw","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"LmzTJLUpX5XG3qM7ta-WE","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"b8zB4X5qENDOMxGWKQUfD","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"ReIPjErwMmPIFC7k1_wWG","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"dHCXOhrV5i_kjlTTc0qtP","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"cH0P0skSuYwUnDZ2pWz02","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"RLxdWjCr_2C7cF65FoIpr","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4k3U-2oUJqU4SIm6jlfXJ","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"__1FXr7muf9icSMVlsn10","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"khvyn3Gr8SarnK-bYXhMj","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"6-WUrZpuFHgI_esnxbPkV","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"sVGP2DxIyK4kKlBbTcNIH","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"9B-FEJALhZuSRSyDop7P2","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"I-xbl0aj6gwItF5yeF8xO","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Iv9c6sYuQrzKTqT1Ll68-","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"QktMMhP2VswESsECr8G8Y","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"YEXVVaMS1oe2jSWmKX2OI","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"xTHhqBtHLG8e8nqoDJHsj","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Al7YBFXlx9YC8PTPPfo4G","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DYRHrs6y8ntXKrW4SiV99","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"GgNKqcL_ebT-MuHbYH7uU","name":"ObjectPool","brief":"","see":["{@link pool} the default global instance of ObjectPool"],"type":"ClassDoc","description":"<p>Object pooling - a technique that might speed up your game if used properly.<br>\nIf some of your classes will be instantia...","members":[{"id":"UdxgIa188ZbLYEZEFgDN7","name":"exists","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Check if an object with the provided name is registered</p>","params":[{"identifier":"name","optional":false,"description":"<p>of the registered object class</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>true if the classname is registered</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TORND_7h1ZVCsonvrKfCr","name":"getInstanceCount","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the amount of object instance currently in the pool</p>","params":[],"returns":[{"description":"<p>amount of object instance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-wxC1sHDGuioCQqdkMIrR","name":"poolable","brief":"","examples":[{"caption":"","code":"\n if (!me.pool.poolable(myCherryEntity)) {\n     // object was not properly registered\n }\n"}],"scope":"instance","see":["register"],"type":"MethodDoc","description":"<p>Check if an object is poolable\n(was properly registered with the recycling feature enable)</p>","params":[{"identifier":"obj","optional":false,"description":"<p>object to be checked</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the object is poolable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"GBqnLSfxG7ZSb0NY8AWhZ","name":"pull","brief":"","examples":[{"caption":"","code":"\n me.pool.register(\"bullet\", BulletEntity, true);\n me.pool.register(\"enemy\", EnemyEntity, true);\n // ...\n // when we need to manually create a new bullet:\n var bullet = me.pool.pull(\"bullet\", x, y, direction);\n // ...\n // params aren't a fixed number\n // when we need new enemy we can add more params, that the object construct requires:\n var enemy = me.pool.pull(\"enemy\", x, y, direction, speed, power, life);\n // ...\n // when we want to destroy existing object, the remove\n // function will ensure the object can then be reallocated later\n me.game.world.removeChild(enemy);\n me.game.world.removeChild(bullet);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Pull a new instance of the requested object (if added into the object pool)</p>","params":[{"identifier":"name","optional":false,"description":"<p>as used in {@link pool.register}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>arguments to be passed when instantiating/reinitializing the object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the instance of the requested object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"u9TyBIYy77cDZY_P5gn-p","name":"purge","brief":"","scope":"instance","type":"MethodDoc","description":"<p>purge the object pool from any inactive object <br>\nObject pooling must be enabled for this function to work<br>\nnote: thi...","params":[],"returns":[]},{"id":"oSzuDBffcocwG6ZpiOv7E","name":"push","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Push back an object instance into the object pool <br>\nObject pooling for the object class must be enabled,\nand object mus...","params":[{"identifier":"obj","optional":false,"description":"<p>instance to be recycled</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"throwOnError","optional":true,"default":"true","description":"<p>throw an exception if the object cannot be recycled</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>true if the object was successfully recycled in the object pool</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"pKv4WKojdSaiB5HzaTuDc","name":"register","brief":"","examples":[{"caption":"","code":"\n // implement CherryEntity\n class CherryEntity extends Spritesheet {\n    onResetEvent() {\n        // reset object mutable properties\n        this.lifeBar = 100;\n    }\n };\n // add our users defined entities in the object pool and enable object recycling\n me.pool.register(\"cherryentity\", CherryEntity, true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>register an object to the pool. <br>\nPooling must be set to true if more than one such objects will be created. <br>\n(Note...","params":[{"identifier":"className","optional":false,"description":"<p>as defined in the Name field of the Object Properties (in Tiled)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"classObj","optional":false,"description":"<p>corresponding Class to be instantiated</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recycling","optional":true,"default":"false","description":"<p>enables object recycling for the specified class</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]}]},{"id":"H_Ol6Dztd4PGBDe5qhkM6","name":"ObservableVector2d","brief":"","type":"ClassDoc","description":"<p>A Vector2d object that provide notification by executing the given callback when the vector is changed.</p>","extends":["Vector2d"],"members":[{"id":"xJUA0FDiySMldpvjWN8Vy","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"Pk1cRdo2Q3ke7WM9ZHQb_","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"3KaQPBNl9cy4vEzcDJpYb","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"_UGBE6NYj2LxUVITdQqap","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"6EdhiaucmZ7h28OOCFKO0","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"3WPoNHMYa440esvDZ8eJM","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"x091PTNUgQkTeJY0AZPFu","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"AS9yHbcDki67JAM-ZYQcg","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"EgjtsoyaPgK_Zh89n59jp","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"FZgobg6fOgbZ89iRWMh12","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"93SmRiPvcO3hBkufKHMnf","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>additional required parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.onUpdate","description":"<p>the callback to be executed when the vector is changed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.scope","optional":true,"description":"<p>the value to use as this when calling onUpdate</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"ANkZAeIyKq3eN9KTJsfQz","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the x,y values of the passed vector to this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"Bd_bE5VdFfChBqDAFIYKK","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The cross product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"6CORSM0JYKjTAP5vdtoP8","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"iJY4gRRy0q-0zAjr-lHjD","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"j4iuxpvfxuxvD81XpAbbM","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"rx7xneDbTcuKN4j8VzCKI","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"NIjN4y5D8Y8xv7tgtDj8y","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"ZKCjzSiSvUHf-BgYYuB_p","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"PAyeE6BKo96VnOom_UZRD","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1MOf9NTo83l3wS-DDvuLm","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"1n8V92EQ3iDDLSy3QdhcT","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"TvkprGGvCZmx4TWT_idIC","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"aCkOVUut0evJBBC3gJiiV","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"krOEn3EAf0mcWhmDK0wVJ","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector2d</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"XUu0qR0s2VJnNP2QtQtWd","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"2_HQNJh6h5QglVVInyXXw","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"mCc8a7eMuWUMbsdnN8MgL","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"X9_BDRrRH3mQi8mOLw2TD","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"jdGQWUsteqXMlZvACcWlh","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"dkhb2zyq7c6MtI-DLW77v","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"tus5o8UBNJaKOc6rbCj-c","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"ytCfbWq7tcIyedJvfnyon","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"YTGt_0tVLWT_r3-YQFoRr","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"fG9QgSQlOYgkZI1al-78T","name":"setCallback","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the callback to be executed when the vector is changed</p>","params":[{"identifier":"fn","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"scope","optional":true,"default":"null","description":"<p>scope</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"3wx9gW6ZUtsNWXiulLPGm","name":"setMuted","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vector value without triggering the callback</p>","params":[{"identifier":"x","optional":false,"description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"bsKl8ZqdV4UsHMzXx6T7p","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"1ClLlQjSmSIJjzMRArrCw","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4hp4rqh7oHeyQ1iUTYTDW","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector2d","kind":"canonical"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1"}}]},{"id":"-iLKYkSzC2kdOKMGQ2gcx","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"T_hvcksZSEkKen7qIW9Un","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"SYhuxp0lJPw0p9irTuL-a","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"fZbmGi4W3CVzdaXJrmre3","name":"toVector2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a <code>me.Vector2d</code> copy of this <code>me.ObservableVector2d</code> object</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"0aOIySF_Lfcw2Svjz-034","name":"ObservableVector3d","brief":"","type":"ClassDoc","description":"<p>A Vector3d object that provide notification by executing the given callback when the vector is changed.</p>","extends":["Vector3d"],"members":[{"id":"-9tiZZA2yohj0-SyrqgZK","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"QV92uhoQ2uMNsmOAUJ3kz","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"RSeGybGNaiuVsTneMWvTQ","name":"z","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>z value of the vector</p>"},{"id":"X8BUMfFmjvaiH6W-6zTs0","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"W36LNkhUkzwDdpSG7dJ__","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"Bi1HCiWD4WGJGXYhCjKo9","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"nz4-koSZivlvA6hn4xFNn","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"PYoxKZpb5_wiMmHPSu7E3","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"BRWXR_s8lcGMuqUggXwOK","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"rFAuCB81tNn0iSreU4dQd","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"bY4vW9yDYZ8OiyQWn7aWy","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"lqUM2YtNnE1G5YaC7PXM9","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":false,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>additional required parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.onUpdate","description":"<p>the callback to be executed when the vector is changed</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.scope","optional":true,"description":"<p>the value to use as this when calling onUpdate</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"8MeUHF1PTr81DS5UGDFU4","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the components of the given vector into this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"V5hxx5M7h6ZtKnysw6D6s","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>calculate the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d | ObservableVector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"Vv_XFbha1a8rj-6uTeJiB","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"kZKLs805kYyFk30DoXCuV","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"fgwA8s0dIYeG3Aoe7hwsF","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-eMfOhoxHd6xc8UJcHcRN","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"52gsPhnYMsLoYWzyhGvzF","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"7dykOSXCTcdyxQBd3PEFr","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"aC80x4393ZxPYtNZ1HLpx","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"A61MGZH2BC7NoeID5D8IR","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"c0_FRcs4oIuA6w5FaSyFI","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d | ObservableVector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"pNuSQDQ_emZrERxlPxCqd","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"-JTI55Od0UZH8U7aTOUXH","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"PSwMGpZv-ZoUgveSDcLcV","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.ObservableVector3d</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"eArUHf_yY6fg67m7A53Yh","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"jMNPkwBa9pqb31YFDNG49","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"K5FWLg2EJF1TVrcZe5Zvg","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"XHVPcDanf3zAiCnYMkHcr","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"DoAQztdSBCdC7yFF_Ctl7","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"dtF6qv6y7rDuZJpoHHozX","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around (on the same z axis)</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"F_Ywg9Bqh0ztSZBQdAuZR","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"oxcxWHFKt2ivUS4fiyTsL","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"8orNlJmu051-hKQ2A4Myt","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"qCef7TWwUtPpi7xUrEdyD","name":"setCallback","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the callback to be executed when the vector is changed</p>","params":[{"identifier":"fn","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"scope","optional":true,"default":"null","description":"<p>scope</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"0FPgshylb2uoGlsum6ycx","name":"setMuted","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vector value without triggering the callback</p>","params":[{"identifier":"x","optional":false,"description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"9lEM8yhYBaXhWiG71XlcH","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"88nhIR1VOrHL6k8hlhgWe","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"bwjjPR3YF5z3yErlHrWu_","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d | ObservableVector2d | ObservableVector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"},{"value":"ObservableVector2d","kind":"link"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1 | %2 | %3 | %4"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"ObservableVector3d","kind":"canonical"},{"value":"ObservableVector3d","kind":"link"}],"template":"%1"}}]},{"id":"KxzgVzreR4-OfC0OpeHDY","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"Z7jZVnPHSt5FibN5YQnWy","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ojH7a8tzCodc8P6tDC1SY","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"aq31VfWRcsUtSCLT-diaz","name":"toVector3d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a <code>me.Vector3d</code> copy of this <code>me.ObservableVector3d</code> object</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]}]},{"id":"Ms2rodSvcpM81zn_NALB1","name":"Particle","brief":"","type":"ClassDoc","description":"<p>Single Particle Object.</p>","extends":["Renderable"],"members":[{"id":"t-cycacflAca5hfXacqvy","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"UCfzUeNlitwUSkfIcx2aT","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"Y46LTML_XvHfM2iu00ODk","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"luOTuyK6eZZ9d_4N6ED6l","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"SWY_4erWu4N8ZVmC7Qdnj","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"wpYZZIcDC7mMwjfcONrUS","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"nxPm-SSTl9qLeMJHh1h8A","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"TfeAcAm07QiyzHW9Coon6","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"rnHlDCimNeRXcs-23cJSU","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"3Omb3AUFAdk9fFemtilNa","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"1dned9R0Q975pts4s18qk","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"CXfcOuQT8AvAv6bFyzv84","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"Uj3LXj4uDIoTn73Z0qLcl","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"UJEXY9TLU6zhUk3uDqrrN","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"v3cp9UqkcFZcnmwbuP4Iz","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"DfJJBn3zoJv1M0HCrfR_2","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"zfkW2QYsrHcW809CLsXoR","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"ZWIJQSp1i5CJcMKUcqvtA","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"gu4_EfNPGUCbhhZYuptPp","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"Rnjqjr06CWtkWZK5DqiW7","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"o_jrSyH1-Mlr4UEFjVhbU","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"aLgF--JBVk5tCixhjAoia","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"9L07ZizUvDjlwFn_adWHQ","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"aKHwQ_OyhaU6NFVrhOOiT","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"qsaoId2piaq6vrbzI8aOP","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"lN2mrWNA-9AND8_AlAA6d","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"KZyBrvFItTasPN9BjUtyB","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"-9LcGrJuvHoLXl6ccrWax","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"wx09VphIsBCdKJGvTSDZW","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"AV4V2Dopfc1WOglFXF1vm","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"H7m1LBqSlp1k6vhxYDNUE","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"bhD0fHOPPjNH--9xxCaHV","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"VeQAQVcNZggKE63nh-RPo","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"gqrVrNiMV1igFsD9-i-sj","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Z-mVX72f00E06yrMrXR0D","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"h5DWG1Rx29ByOOmhE6JPh","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"emitter","optional":false,"description":"<p>the particle emitter</p>","dataType":{"tokens":[{"value":"ParticleEmitter","kind":"canonical"},{"value":"ParticleEmitter","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"N8zVkEICcIaHJFXANxtX3","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"66vw4sIey-4Z24X_kEe_K","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"pk37zWb2pVTiZdv15m0Yd","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2qezE8pyJRPQ8obYkV6Yx","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hhfHEtwF1Fqms0F-vrDal","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"P9J8x9rFNLJsTTLeyql_h","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"wDi5br8puqOz8fBTzjTMf","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"lAjkxClok_HgHlMzSjxEi","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"KZAWGKEXjX5ZUW_wEwzmV","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Qy-KJtrv4hlMJsIiwBgvd","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"V1Y4hRiq2riPjxgEH072B","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"rkG6DdsX6ti7_E0j__j-A","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ZwFzD59nJfSDcUZ9HQge7","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"tPvTb1sjheKK6wT5D0_1S","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-zla0t_1VaxR2lcbnhvpg","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"EjJwkQx6XvXIjx_1N2knP","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"d5EfVsHdffdjRnFSDyLIy","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"IROcpwaW5Hsr2-qongUxK","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"sw3mvQgh1GAXN6sgsfj0u","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pqoIwP6AtPYe4cPZTlTjV","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"0TWV5UO6uXPOVkMq9uZ5h","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Cco7-Hc1XA3sgjgtbRhqE","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"YcMz0me5Gx8vfgINAXYvZ","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4mPNDWhgh3WABkS_psLOr","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"DxcVc6ximJZ_pCAVItTaT","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"eldNpihvKdUSgnAbSR4dc","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Rf75rWMwlg3RA97sB-XQw","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"HC3hUPEsK4Zwsd4OpUZ6w","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LpXx2uAxAWgHcjKc7tzZn","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"PV3j5wvTg3jIfTZkCRVBt","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LIvxKN5wDQwgrArCpjSOg","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"mmvANp2IUfrVv_lpsIpsU","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"w854JvIGHEoKxXN8JX10K","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"MW-N6KonFFOEhzeOMCe_I","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"42JFLdhJJzXmc1DL4wDEG","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-20PcLBU0Hc7KIA94qI_y","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"zos3itLOGIM6epj3Dydu0","name":"ParticleEmitter","brief":"","type":"ClassDoc","description":"<p>Particle Emitter Object.</p>","extends":["Container"],"members":[{"id":"rLfeg1ONsQdNtGMEErAEY","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"VVbAitMs7L4luVOVIpcxm","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"CE-Y3DBI2VMKngQcoQCC-","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"qqjptlE_EY7513um3o1xP","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"0p_4Eokhyl5xRGwqA4uuS","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"Pe5qbhEA30-BnA_FljPI1","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"fmEFJZs9VwIw_kgeudfx4","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"ZoG9nDuioh7nTf9jCOBwb","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"N_vuwW1n-1YV8Xtbo7a-x","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"XP3x3AYYqA4YLsWOm18EI","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"HEW39KfHyWVXGIFPlobaq","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"CKlBpA3ryVZ6yaGFePwCt","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"Jw1vy8qgCW_JMwwglQTIe","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"C0QL2AwqBaX2NXmM9XSjD","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"HuMScVx4YPz5NrisPApCI","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"vgXgPmmOo2TfqEnsNUmoi","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"NY8eo6GIs1S4SePBhT9Cp","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"PHJOkPUrBuxo1drFZMS9Z","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"PO3b4FP6O7jt9VDt1kjWT","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"e6x3bI97XpoKc7z-yBuju","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"xnwZyVbYJGQtcdw7-Wn2S","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"gwC717OWo71mgzpYHL2Dq","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"iWE5f4F-lJVn5Yf-h11Pn","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"qJXI7hq4b_IQFIrYlniz7","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"vRSTXAHJa0LloO-BDh_9h","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"BC_Ejhls8VOIAvlcfVGi8","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"kgfErPNwaU84e6rT-9tKR","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"1OOe2fIDjrVuILmc6jLML","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"xy8IPTaswd9xQ2uzLH99n","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"FKRKV7w2h8T2_PK66_xDv","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"hmFs1KfJXSsxotOtbxH3G","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"FgbsQpmNg3ZzHJGzv3i5L","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"4Xor3V7B_q6IYfadkYZUj","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"WRoRbg7ye266u4n7vuQOr","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"OHImFU_B1Gv_bd3dthZCL","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the current (active) emitter settings</p>"},{"id":"UA3KAH9mBVb-fL_EsR8iR","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"r2cxA9udA_WCprcV2_Ulc","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"3yXslz8Hj35nVYy4iMYha","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"ZoeCWTnAoDxgZ8daeN7g2","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"0KTe7iVQ3UT4tqgNa5wsX","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"6njJbaRFlllJNOxXe2dB-","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ppDkOT0OubY92J8OD6XKz","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"szBX5YlnlSaRA97T1Kgbl","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-POYkMM6eF7ZfRynLxMQ0","name":"burstParticles","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Launch all particles from emitter and stop (e.g. for explosion)</p>","params":[{"identifier":"total","optional":false,"description":"<p>[optional] number of particles to launch</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"b_WMUCj0jQYELyoaqJbXE","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0D0q7aKZxKmc0RYJCVD20","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"L5svjqaC7PN9bPLnJIINu","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // Create a particle emitter at position 100, 100\n var emitter = new ParticleEmitter(100, 100, {\n     width: 16,\n     height : 16,\n     tint: \"#f00\",\n     totalParticles: 32,\n     angle: 0,\n     angleVariation: 6.283185307179586,\n     maxLife: 5,\n     speed: 3\n });\n\n // Add the emitter to the game world\n me.game.world.addChild(emitter);\n\n // Launch all particles one time and stop, like a explosion\n emitter.burstParticles();\n\n // Launch constantly the particles, like a fountain\n emitter.streamParticles();\n\n // At the end, remove emitter from the game world\n // call this in onDestroyEvent function\n me.game.world.removeChild(emitter);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x position of the particle emitter</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y position of the particle emitter</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":true,"default":"ParticleEmitterSettings","description":"<p>the settings for the particle emitter.</p>","dataType":{"tokens":[{"value":"ParticleEmitterSettings","kind":"canonical"},{"value":"ParticleEmitterSettings","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"lF4QDDFl1MuEhI2-Wbo5f","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"iFEGFGQYkczZrZCiecT9N","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Fdg-PtL89TPz1ECH1q-fv","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jvZ0hjJXcoG7H7V43xs1y","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"W4bsVY55nZlVUMb152AiR","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"mSYbY-EPzI5ffULYNoZBr","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"kFvvExKIc2C47ZyhGX-hs","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"591SJjK-0xe9EMvWTFWLs","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"HF1yc0Fb12anWpgTCLniE","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"MDWvt2Tpx8Tz1S0MQl9SL","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"YC-awLQov2hO48pSUlDid","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"bEB8pP-HQj-pkMRFZRo12","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"wVD52gH4Cl9W14BaUWuDh","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"tv543MLY651-rW0ZWVugU","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"aOVeXKCmsfRp1omZCXRsJ","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jR6T5zL8KUvlTaB4YzVKN","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"lk9FQuN-QffcIccE76kuN","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Ii3WldkmUcQSALh7kYtSM","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"SLoBDHZT_R1E-LCbnU4qq","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"RpHhi_QdQ2iEVb5nEm_Yx","name":"getRandomPointX","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a random point on the x axis within the bounds of this emitter</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"h0ZBw1TKwxG4dLcXS-HMT","name":"getRandomPointY","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a random point on the y axis within the bounds this emitter</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"5EI6a5xjW3L0H_-aSJBkx","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0SoxLYxY-4oLWkbitdU-r","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Tg85FaGHBNL1N8FMMckFZ","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"CiWdXi8oEQHvwuX6p5GaX","name":"isRunning","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Emitter is of type stream and is launching particles</p>","params":[],"returns":[{"description":"<p>Emitter is Stream and is launching particles</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"RlXeiteRUmBhcMHMXDakb","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"PlprvVz2m-RqNLtau9ZQc","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"9UPN7CPcmkBwmMNhWyItr","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"C_UhHKIPM2R-_rovAZZj2","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"FT7RZCB5KpZiNUfmZ4e4B","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"RxYxcmMuVFyWTQvMKondw","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"b2ySMixv8FPhiLwzP9Omb","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"4M8hwljKRxwo9yg52jSWU","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"Ecx7Ksnv2zal7mzSiStwj","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HszJGlaSW5lcOfliF570H","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jPWeLva6LB-o_QNsv47OL","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ItGF87MFAfor6SajQbBL7","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"sE-xlKP-HwuSeFWWgf7fv","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the emitter with particle emitter settings.</p>","params":[{"identifier":"settings","optional":false,"description":"<p>[optional] object with emitter settings. See {@link ParticleEmitterSettings}</p>","dataType":{"tokens":[{"value":"ParticleEmitterSettings","kind":"canonical"},{"value":"ParticleEmitterSettings","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"fEImSZu0vhk7WL23TVl1S","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"0fqOadgoZimDxtfGHUokx","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UAZwremJedV4GUG6Jgi7y","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"bezMqmatwVbx7e58H_8IU","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"GcVcFTvDdhpD9VDys5D4X","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"2gjdrCjWD4MuZycdFy5M4","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UKmsEsnbTnv4dvHdwPdcn","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"js7CHwNeWYqxndzigAnwJ","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"1lZd_kghm7qmUSE2tRqE5","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jfDZ6k8HHpMsaW0g09I_B","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"WcMuE6ZesmcIW1HRR3y4y","name":"stopStream","brief":"<p>Stop the emitter from generating new particles (used only if emitter is Stream)</p>","scope":"instance","type":"MethodDoc","params":[],"returns":[]},{"id":"wA33WDtTemKkbR23FNyxI","name":"streamParticles","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Launch particles from emitter constantly (e.g. for stream)</p>","params":[{"identifier":"duration","optional":false,"description":"<p>[optional] time that the emitter releases particles in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"X_zhq_3Qzbmm0AkMlVTWx","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"OZONxAZWDv7ftNqMC_6fd","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"AADQPuXAN52JT_8q8d1AM","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"47CzjYsu4AXqMJJZ2e4RG","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"XjkDX2ok-6SEY7sDiEZi8","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"eHKyEWcFmtfmtP6L6HW32","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"eimaIQ0SdVgmYwcizW5CB","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Int8jvyqkS7moVTPvjOL6","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"-vw8vy7kt3qzYjFGbBHkL","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"5pIUiMk27vB-nmeoW9X0i","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"F6KQr1zlzmLiQWz3PAtaw","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"P28n-CVLu_me79HdOW727","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"npjZ2-mbbklJD7SLV_3UJ","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"aLcef8BjXEHuuKASi3qN9","name":"Path2D","brief":"","type":"ClassDoc","description":"<p>a simplified path2d implementation, supporting only one path</p>","members":[{"id":"IiojRdIyjEn32D8if27O4","name":"arcResolution","brief":"","access":"public","defaultValue":"5","scope":"instance","type":"PropertyDoc","description":"<p>space between interpolated points for quadratic and bezier curve approx. in pixels.</p>"},{"id":"4qy4fDHM0tjHO6YWHhA78","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the points defining the current path</p>"},{"id":"ry2-3AD1kd51PClYESZUV","name":"arc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an arc to the current path which is centered at (x, y) position with the given radius,\nstarting at startAngle and end...","params":[{"identifier":"x","optional":false,"description":"<p>the horizontal coordinate of the arc's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the vertical coordinate of the arc's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startAngle","optional":false,"description":"<p>the angle at which the arc starts in radians, measured from the positive x-axis.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endAngle","optional":false,"description":"<p>the angle at which the arc ends in radians, measured from the positive x-axis.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"anticlockwise","optional":true,"default":"false","description":"<p>an optional boolean value. If true, draws the arc counter-clockwise between the start and end angles.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"-btEOFqjzrQUosNO4CoAd","name":"arcTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds a circular arc to the path with the given control points and radius, connected to the previous point by a straight li...","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the first control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the first control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the second control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the second control point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"SiPkwhXPEivC7VBYwPzel","name":"beginPath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>begin a new path</p>","params":[],"returns":[]},{"id":"XY6wVPs1yecwy8He5yCkd","name":"closePath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>causes the point of the pen to move back to the start of the current path.\nIt tries to draw a straight line from the curre...","params":[],"returns":[]},{"id":"78ojHHIge6fBQ9ypVRha_","name":"ellipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an elliptical arc to the path which is centered at (x, y) position with the radii radiusX and radiusY\nstarting at sta...","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis (horizontal) coordinate of the ellipse's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the  y-axis (vertical) coordinate of the ellipse's center.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radiusX","optional":false,"description":"<p>the ellipse's major-axis radius. Must be non-negative.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radiusY","optional":false,"description":"<p>the ellipse's minor-axis radius. Must be non-negative.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"rotation","optional":false,"description":"<p>the rotation of the ellipse, expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startAngle","optional":false,"description":"<p>the angle at which the ellipse starts, measured clockwise from the positive x-axis and expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endAngle","optional":false,"description":"<p>the angle at which the ellipse ends, measured clockwise from the positive x-axis and expressed in radians.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"anticlockwise","optional":true,"default":"false","description":"<p>an optional boolean value which, if true, draws the ellipse counterclockwise (anticlockwise).</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"GJQTsBiYau9bD4BT462Fm","name":"lineTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>connects the last point in the current patch to the (x, y) coordinates with a straight line.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the line's end point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the line's end point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"L45Q4v7rpuAk31dbn_N_B","name":"moveTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>moves the starting point of the current path to the (x, y) coordinates.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis (horizontal) coordinate of the point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis (vertical) coordinate of the point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"z--6R8TAj6_8WuyAnTo-o","name":"rect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>creates a path for a rectangle at position (x, y) with a size that is determined by width and height.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle's width. Positive values are to the right, and negative to the left.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle's height. Positive values are down, and negative are up.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"cWjTqwntM0gmn5D8W5kvW","name":"roundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>adds an rounded rectangle to the current path.</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y-axis coordinate of the rectangle's starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle's width. Positive values are to the right, and negative to the left.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle's height. Positive values are down, and negative are up.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"description":"<p>the arc's radius to draw the borders. Must be positive.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ZGQLuE9lcWprfKuPMh0ES","name":"triangulatePath","brief":"","scope":"instance","type":"MethodDoc","description":"<p>triangulate the shape defined by this path into an array of triangles</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}]}]},{"id":"I5yVakr5LvkdfEYdhVS8a","name":"Pointer","brief":"","type":"ClassDoc","description":"<p>a pointer object, representing a single finger on a touch enabled device.</p>","extends":["Bounds"],"members":[{"id":"BwVErESgcYfIOi9IEBraA","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"Jd5aGepXwKeTQcrZJGPbU","name":"button","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button"],"type":"PropertyDoc","description":"<p>the button property indicates which button was pressed on the mouse to trigger the event.</p>"},{"id":"BQxrrIgCXYR8Nl1OFJ783","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"bKoJK-R6yEFwWwvlOr1zT","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"Pogz_XvWlHqBpnVtxU-cu","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"QUm13GpBaH4EPmlPmNGVE","name":"clientX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX"],"type":"PropertyDoc","description":"<p>the horizontal coordinate within the application's client area at which the event occurred</p>"},{"id":"tX8rXDtW5iNrdEPVhrEMv","name":"clientY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientY"],"type":"PropertyDoc","description":"<p>the vertical coordinate within the application's client area at which the event occurred</p>"},{"id":"Nmdv-eUb_Ovwx13J2c705","name":"deltaMode","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaMode"],"type":"PropertyDoc","description":"<p>an unsigned long representing the unit of the delta values scroll amount</p>"},{"id":"wb_mngdJfQwPBgui55Tfi","name":"deltaX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaX"],"type":"PropertyDoc","description":"<p>a double representing the horizontal scroll amount in the Wheel Event deltaMode unit.</p>"},{"id":"3f9Ap8WnnCSMgwWz39b25","name":"deltaY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaY"],"type":"PropertyDoc","description":"<p>a double representing the vertical scroll amount in the Wheel Event deltaMode unit.</p>"},{"id":"-bTratlg9MD2fTmOoHQHS","name":"deltaZ","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaZ"],"type":"PropertyDoc","description":"<p>a double representing the scroll amount in the z-axis, in the Wheel Event deltaMode unit.</p>"},{"id":"dhpDyfQ7ap9F1ggXpWluU","name":"event","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent","https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent","https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent"],"type":"PropertyDoc","description":"<p>the originating Event Object</p>"},{"id":"FnepvNtVGAgKXqopA5A-_","name":"gameLocalX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the holding container</p>"},{"id":"7RRBDwr3L3Jzvl3WiPmLj","name":"gameLocalY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the holding container</p>"},{"id":"GzCF1DTeS0j78JtTA1-Pl","name":"gameScreenX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the viewport</p>"},{"id":"Q2o4jodk_pumReBrq25rI","name":"gameScreenY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the viewport</p>"},{"id":"mW6FwqxF2GuskdKyvfMWt","name":"gameWorldX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event X coordinate relative to the map</p>"},{"id":"7-sv91cfCHH_WPsiBbFgO","name":"gameWorldY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event Y coordinate relative to the map</p>"},{"id":"IWl2x9mgEBEpQXiQeIDx0","name":"gameX","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event normalized X coordinate within the game canvas itself<br>\n<img src=\"images/event_coord.png\"/></p>"},{"id":"7eD7LAq2PYAsAo0_WiRow","name":"gameY","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Event normalized Y coordinate within the game canvas itself<br>\n<img src=\"images/event_coord.png\"/></p>"},{"id":"HVzlnoYSX4v9RLyb7bMuD","name":"isNormalized","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if not originally a pointer event</p>"},{"id":"a5ghnAqhbhGfweEna9qqp","name":"isPrimary","brief":"","access":"public","defaultValue":"false","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary"],"type":"PropertyDoc","description":"<p>indicates whether or not the pointer device that created the event is the primary pointer.</p>"},{"id":"gdVQSVFYcVZrAuli9Jx2h","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"Mr6FE4TQUVqoU11kq97kv","name":"LEFT","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>constant for left button</p>"},{"id":"OQON5WZsB5cshWmvswY7j","name":"locked","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the pointer is currently locked</p>"},{"id":"Amn-bJioA_6S2cIVP72OW","name":"MIDDLE","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>constant for middle button</p>"},{"id":"9UsLlYtYPibURGVnm9RRd","name":"movementX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX"],"type":"PropertyDoc","description":"<p>the difference in the X coordinate of the pointer since the previous move event</p>"},{"id":"nS2JGTkk5JTxolNMNq9md","name":"movementY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementY"],"type":"PropertyDoc","description":"<p>the difference in the Y coordinate of the pointer since the previous move event</p>"},{"id":"oryieMFlBsTAfOmXz4ByO","name":"pageX","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageX"],"type":"PropertyDoc","description":"<p>the horizontal coordinate at which the event occurred, relative to the left edge of the entire document.</p>"},{"id":"hOfSPfNTCAH828ROgEnVr","name":"pageY","brief":"","access":"public","defaultValue":"0","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageY"],"type":"PropertyDoc","description":"<p>the vertical coordinate at which the event occurred, relative to the left edge of the entire document.</p>"},{"id":"PN3R_Kw5SwPLYKFfG81eZ","name":"pointerId","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerId"],"type":"PropertyDoc","description":"<p>The unique identifier of the contact for a touch, mouse or pen</p>"},{"id":"sO7JOUTjMchPrV8DT752W","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"6b2MyRMDoqSq91aIGfBr5","name":"RIGHT","brief":"","access":"public","defaultValue":"2","scope":"instance","type":"PropertyDoc","description":"<p>constant for right button</p>"},{"id":"V1SSUDvZ3cU3g6-QdXUbL","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"XKzis6vZC_T02mzo-pAfe","name":"type","brief":"","access":"public","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/Event/type"],"type":"PropertyDoc","description":"<p>a string containing the event's type.</p>"},{"id":"yfof5Y-i54kD1p_a_lqP3","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"Vr8VOzRHMt1HtcaFnYf7P","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"So-zCFVYm9m26ga7UX_Vh","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"xBLOTPxCGceCv1B5yf7fn","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"TmmvvjwtUaZ7QidXaChqF","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ZbJF7rfqTN6wKdogDrmLb","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"kh9bAgUVFytc3LD4ih1ET","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"CRXf4YozF7iyDuiV6DXkZ","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"rBTtpP5RwSeChJBUc9NmS","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"y7pqu3ZIf20ViGbUvggkU","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"BAk8nPLa9UtgQAZkzEfMb","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"aSfMZjQglu1woM41bLYaO","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"00Xo7IGkAK7Wid2nRnkl5","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tkLK_sLI2A0S8EoqLhiHb","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"wYoMQ9iZHySCprMSjRokn","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"SYut2rOkq04pUS1KRyBdn","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"S-SGIL4Bhh8vRdRx_m6v6","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"3haDbee1aEywJaPZJbcs3","name":"set","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>initialize the Pointer object using the given Event Object</p>","params":[{"identifier":"event","optional":false,"description":"<p>the original Event object</p>","dataType":{"tokens":[{"value":"Event","kind":"canonical"},{"value":"Event","kind":"canonical"}],"template":"%1"}},{"identifier":"pageX","optional":true,"default":"0","description":"<p>the horizontal coordinate at which the event occurred, relative to the left edge of the entire document</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pageY","optional":true,"default":"0","description":"<p>the vertical coordinate at which the event occurred, relative to the left edge of the entire document</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clientX","optional":true,"default":"0","description":"<p>the horizontal coordinate within the application's client area at which the event occurred</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"clientY","optional":true,"default":"0","description":"<p>the vertical coordinate within the application's client area at which the event occurred</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"pointerId","optional":true,"default":"1","description":"<p>the Pointer, Touch or Mouse event Id (1)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"UtI1OxbnLtxCO5oyIsUWn","name":"Polygon","brief":"","type":"ClassDoc","description":"<p>a polygon Object.<br>\nPlease do note that melonJS implements a simple Axis-Aligned Boxes collision algorithm, which requir...","members":[{"id":"LavvrtZL_tOep9APgjT3x","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"pSAy8C09g7LScFOECoWRT","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"pwEmnfOJQ4j0VM9SU7RBM","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this Polygon</p>","params":[],"returns":[{"description":"<p>new Polygon</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"vkka9k8gLv7nKF-KmyIBD","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>origin point of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>origin point of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"qTE-c2Z_sKTsUQEvDq0Jp","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the polygon contains the given point. <br>\n(Note: it is highly recommended to first do a hit test on the c...","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"O9ZaOfCpwcd59o4N2JBC2","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"otBEi-S3GPwqqQpsNar6d","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Imbo84EhoBpVvseHfcCcJ","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"t6LV9Qy5L46oVQS_vJHZJ","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Pt8JNVS9JlbaNMJA0MZQv","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"guLduL2HyXUSZQwFfny90","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given scalar.</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"gGdfaOH98xcjOBGDM4zy2","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"npO5pbTUwvNSdDy5bnalB","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the Polygon</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Polygon</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"points","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<%2> | %3<%4>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"l3l3tvS-n1nXMRNCwjEZb","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Yf18IJVVpaVp_WzqpiKK5","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"g_CANZyJqa2-qs6zKvjix","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"bEXYKj36RJwLf3kl0wZXC","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"PoNjfp5xv8J-AN_w_oRQh","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"xubVxau75mm44UyDYzuLW","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"qeCCJ0GQ0hIiZlIP8L7sc","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the polygon contains the given point.\n(Note: it is highly recommended to first do a hit test on the corres...","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Js8nnJiQqPc28mN99b_5C","name":"shift","brief":"","type":"MethodDoc","description":"<p>Shifts the Polygon to the given position vector.</p>","params":[{"identifier":"position","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"r7DMK5_53TwSwimkGPgqf","name":"translate","brief":"","type":"MethodDoc","description":"<p>translate the Polygon by the specified offset</p>","params":[{"identifier":"x","description":"<p>x offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y offset</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this Polygon</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]}]},{"id":"HAIbe2iLTaRQl1pYb1lRk","name":"QuadTree","brief":"","see":["game.world.broadphase"],"type":"ClassDoc","description":"<p>a QuadTree implementation in JavaScript, a 2d spatial subdivision algorithm.</p>","members":[{"id":"Tea8_VA6BbHaLZCoFZ_Ey","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clear the quadtree</p>","params":[{"identifier":"bounds","optional":true,"default":"this.bounds","description":"<p>the bounds to be cleared</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"eRP0JTnZNnFTOdeyOUyP2","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"bounds","optional":false,"description":"<p>bounds of the node</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"max_objects","optional":true,"default":"4","description":"<p>max objects a node can hold before splitting into 4 subnodes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"max_levels","optional":true,"default":"4","description":"<p>total max levels inside root Quadtree</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"level","optional":true,"default":"0","description":"<p>deepth level, required for subnodes</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"yiQ72UArcQLAzsRy2JgRm","name":"hasChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the node has any children</p>","params":[],"returns":[{"description":"<p>true if the node has any children</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Y3f8_RV48evvMM4QsDibP","name":"insert","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Insert the given object into the node. If the node\nexceeds the capacity, it will split and add all\nobjects to their corres...","params":[{"identifier":"item","optional":false,"description":"<p>object to be added</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"r_BCEdR7pIr4qboVAveiJ","name":"insertContainer","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Insert the given object container into the node.</p>","params":[{"identifier":"container","optional":false,"description":"<p>group of objects to be added</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"TmqIVUxxQcLw44tfdwIyW","name":"isPrunable","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if the node is prunable</p>","params":[],"returns":[{"description":"<p>true if the node is prunable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"YGWXXq063k_E7li4HfyY3","name":"remove","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Remove the given item from the quadtree.\n(this function won't recalculate the impacted node)</p>","params":[{"identifier":"item","optional":false,"description":"<p>object to be removed</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>true if the item was found and removed.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Cn-yUKE7o5deEE9P9YR5x","name":"retrieve","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return all objects that could collide with the given object</p>","params":[{"identifier":"item","optional":false,"description":"<p>object to be checked against</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"fn","optional":true,"description":"<p>a sorting function for the returned array</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>array with all detected objects</p>","dataType":{"tokens":[{"value":"Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<object>"}}]}]},{"id":"4ySu4LaM7RN9upNER3KGs","name":"Rect","brief":"","type":"ClassDoc","description":"<p>a rectangle Object</p>","extends":["Polygon"],"members":[{"id":"y5vCRgLvEjysvThdLHZoG","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"1KD3z11-32lbl1a7LZjKk","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"LlhXQJK2ywxmUmbweQvZz","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"oAHYqjRfzbPBKqbAmW1lJ","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"qjFfnkx4jR3JuNdd_EaJt","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"WZmm3hiOofyvVQfhKLh9D","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"l3sSLscgc-0Il2thtn5VB","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"xP7UheUlZaF0K09TmrLxS","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"kn58A34vfwiHg5OLCjvGI","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"Bcf2oBaD1inVcEp6h5Qkn","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"U-UjzbPIz7ENpX057plcQ","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4-oCUsuUU2Q4TvDjplJ-P","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"wn1u9CstcF1sEEm4ZCV-V","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"AZc_G7lwro2ZSovRdH84R","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Ie83mA0tnmN6fYaYJa009","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"FTIE5srE--YWsi__Y_9BO","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"h4c0zxh1esuD4b80rS37o","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"dix8bwKUOAtvgxB571n0q","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"rRDvdjMS_aBzQ9_0sPblY","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"cRSpPFDlch2-HoQQr7OGR","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wVtzUkeIr35jGq9DwbULF","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"tiet6x9lOEDuKoCcI-32T","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rnqPPQ9u4jbQEkGFD52Py","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Uf_mowHOA9i0RQz_F3Div","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"RbXgwSahsFGytzbwUNsob","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the rectangle</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"VjOEVNwkLi4IaX8lXuCRT","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"VLcyh2E__P-XgGf4sqcWh","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"2wOzj4qjoofRaM6KMTaPq","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"G6iZZTLwn4-mmM16Hdcum","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ktUTO4_g6Jd-JjycROm2q","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"8JW63yBtOdNkifrufFu1X","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ZAskVniCmF20ZIrP1NF_X","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Wd_TVgtgRRV-XiE5ohgo_","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"TMr29ZMASzaN_9HF_dbUq","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"jpqKABYWwedR8piLmEOrV","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"nDNWcfvTrN2-qLFM9cm8D","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given rectangle</p>","params":[{"identifier":"rect","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0kiE-qnBH7o3iPkhXnyqD","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"C5D0xuWxVbbNvACrz5UJI","name":"Renderable","brief":"","type":"ClassDoc","description":"<p>A base class for renderable objects.</p>","extends":["Rect"],"members":[{"id":"iS32JCjirZrPxb9eVFHNY","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"gagYaA5H-DWvr44KIIKLQ","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"owIFGRGzVFbCXSlGge7NP","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"hpk5zJLLB7zwDNqbbf8ey","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"FXxLeZXnxiqg0L61oPu6k","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"5gec4B9xth7tCWSTFs7IA","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"KOK8U9593q0RAoMW2Tvm7","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Btiy97fAd0WGCty4dIIG4","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"7AeNL7n4Udihqko8jaW2n","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"PZ1MURbfe9QPSUJTNOPEm","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"BjDjDARdvYVYA0bMbxSCm","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"7cRxufnKA_ZDcchEltYk-","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"Gakgvbm6IKC-aMaJg_F-C","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"3LzROiGJ4gDQg3unpWF2h","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"VKsmSwKB-0i3aJEttvtdR","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"6-AvLUSoOslDq6OuPAgWW","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"QQbKCsolP8yHxJMYOfj1P","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"Tn2At8gfhcR2XwCXdOAGy","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"FSQKnYfphugmAax8XM6Ag","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"M4ViLTSNtT2JtLeVtM5Z7","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"0nRfecqucyc4rzZACFfB6","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"4w-nxsbC3EmwiVGMAlna4","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"dyP0OBcsrYA7gCcYpaAJq","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"UK2q6RH6V5sij6CBtyQ8-","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"IXjWS5CVCi_sQRpLmU2Hh","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"LQxPijOfFtQZFawbFgJan","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"TTKbSP9Mt2dg7O-n39d38","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"O76ysvHjtYR8fEEMQQ2Qu","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"VuZPQkymWPlNfJkj-ZWtE","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"PFoBqen-wj1xZGM22hAx9","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"wXZz2NSUyJCDRSDMyZYFi","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"UTE-_L9rjpTjMQtJpvggz","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"UvL5FsDsq8ekenGLLs_fu","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2MQ-dit4hvjNYUGVIKXgL","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"T_kEAZioLoRj8fN9RQzQv","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4vjYPG3EbX7x9qB8MlquE","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the renderable object (accessible through inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the renderable object (accessible through inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>object width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>object height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"R2u6ZJw5wx310Wv3uTKna","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"kAkdP2iSr0Gc2NuMXz1PH","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"h5TDF72QQQ3YuRu_EuOE5","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"QbaL0mBgiCcgo5WE6glj7","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yeGDETj_BFSlfj0ImGz55","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"4h92UjWeDXjjaPKzFdCzR","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"1wRw6E-FAaBMdG_2A0bjj","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"WK4FQxmBOsCE-Id9hy9VY","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"H-p-W8tYsKRtlJEF3IsHN","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"iX0QkJMGj_TK7ZrWh_2RK","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"KraFSnaqBez93Z5FhwKM5","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wqZeRoCL0-Gua9Bo88fsS","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"T-H1zNkai7ctCNYyZ-LzO","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"wqLbi1Dt5nZOZBB2eoHuS","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Cv9sO4KgNdFQlunsvIO_v","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"6TwYFZgME5eo5WEaqf5Ie","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"y6dUOTznXPzUlg1azQI6U","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"COJehGLCYZopgFr299Rve","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"fs-rF1oHLOkQiaIf5fE_o","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"2SAAoUVjTAPbx6qXDChGE","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"kfY_ZmGcXzt2oBbxlTY2T","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"b4hY_chiNWm1b57EAHX5d","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"3fpCXsbUqoygrJ_8wg05I","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"VyrnyJfyUhCmw5iOtAaih","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"adSam8qRvKfQx-wYVyz2N","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"HpoFaDsXycWIOaVuorJce","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"sPqox32S6BkCzQKS7bZiv","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"f83RMmMiTOuoiyUKhBhcC","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Ex5vHmNjGROXjl37e0PD-","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"DIePQIAg488FdEVMBtLid","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zYkTZHDP9cOydfiO4pFvy","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"b7vrQqHQoFHkZqnzbN_ql","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"l9Y-dnJbvIRTodyTmYqie","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"JphypSkdMsM9hNDSwqPed","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"S_kEoBStfRNU6yNA8iKZW","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"doWLNIDH5FMIHB-MJBoA2","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"gStOmM9A6Qk4WeGcpjxFE","name":"Renderer","brief":"","type":"ClassDoc","description":"<p>a base renderer object</p>","members":[{"id":"YMbaX_oNjlHgyvqUFAovB","name":"Texture","brief":"<p>Alias of {@link TextureAtlas}</p>","access":"public","deprecated":"since 10.4.0","see":["TextureAtlas"],"type":"ClassDoc","members":[{"id":"I2Jf_GBu2gt6XXTou5QKn","name":"constructor","brief":"<p>Alias of {@link TextureAtlas}</p>","access":"public","scope":"instance","type":"MethodDoc","params":[]}]},{"id":"EcoppvfPm92fTWewDDs3t","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"1Szs21p3abJrI47ndvrFf","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"ChQCYRLdp7N8wUB7Aej6e","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"5FcWKrMzkUkRBUIbqOJgb","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"1YoY-N9HCsTqx1L8MMGg3","name":"clearMask","brief":"","scope":"instance","see":["Renderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"she9BdU4eY0q82w-P5diJ","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"vTeUT8clHxmgho60FDg21","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing, use false (default) for a pixelated effect.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.blendMode","optional":true,"default":"\"normal\"","description":"<p>the default blend mode to use (&quot;normal&quot;, &quot;multiply&quot;)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel rendering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.verbose","optional":true,"default":"false","description":"<p>Enable the verbose mode that provides additional details as to what the renderer is doing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ZN7Ds06MiMC9qIny7_73A","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"dpqOmRf0svOUreh1Xw_Vx","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"vGYxyxACPAcBDS0IuuHbi","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"0zzaSUG_IuABBsSFLrGLH","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"awpKLMpdD5DoaSX7kUCAF","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"Dh58xqTQF-P7tgqyeJelD","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"9YxOtkZQwqMOFthylgDsF","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"_FoRG8iBNtqBXR0OToyof","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding 2d Context<br>\n(will return buffered context if double buffering is ...","params":[],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"IbzfzOsYB2nCL-lKN4JJg","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"2j4Q2FXWZ6lw2mcXAJqZH","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"hDNNmuHf9t2cTCwlHAj51","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"WF61S7mqntLcJv0fQHIMG","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"wDNHoJfBioh_d8xjDyY8A","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"2rpGjo6uqixykFIssjQeJ","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"1p0odOhTil8CH9qApzW3b","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>the shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"UmJdg_9pOP9CYCsaCwj8B","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"BFPbam6WZyHN_UZpzkjH-","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-uXmhiueHY1x1gjF-I69R","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"TPkjmtyFgL5NKZd4MFl1Z","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]}]},{"id":"0aJooFfqnH-umkR0PIFXg","name":"RoundRect","brief":"","type":"ClassDoc","description":"<p>a rectangle object with rounded corners</p>","extends":["Rect"],"members":[{"id":"qawI1gD04Bpl5x5EYg6Uz","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"8pbeeEJ2Xuv47iutOMfMP","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"45hpA1iW4gpQnrv_JrEqa","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"0MtIFP0Eq3zIi1MsO6E8I","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"CCuo7d0wApgj_ut8efVOV","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"sQrj-DFXixP6LwE3l4ePW","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"ZBQHnmOmL3RNJizzHPfvs","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>origin point of the Polygon</p>"},{"id":"1Vin-oj_RgpdFttA4imxt","name":"radius","brief":"","access":"public","defaultValue":"20","scope":"instance","type":"PropertyDoc","description":"<p>the radius of the rounded corner</p>"},{"id":"0X3CvVL7Rrj6PgA-DtY3v","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"1XZk_mz00yOzdVAaZsmgx","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"GAyLQees-mEhzGFjxcf4U","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"IDLUQH5nx9lldjLq0Hn0x","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"JmAGyV662X20i0LeFMfBI","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this RoundRect</p>","params":[],"returns":[{"description":"<p>new RoundRect</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}]},{"id":"7TYH37SIW5d3uc7-brmbT","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the rounded rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the rounded rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>the rectangle width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>the rectangle height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":true,"default":"20","description":"<p>the radius of the rounded corner</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tLXQdNFjPCgrb5ZZGIird","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rounded rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"r4Eg2r0vZBGh0QKU4_KFW","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position, size and radius of the given rounded rectangle into this one</p>","params":[{"identifier":"rrect","optional":false,"description":"<p>source rounded rectangle</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}]},{"id":"N4XrswFppH7y3NV-DwsxZ","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this RoundRect is identical to the specified one</p>","params":[{"identifier":"rrect","optional":false,"dataType":{"tokens":[{"value":"RoundRect","kind":"canonical"},{"value":"RoundRect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"8t0GbhL_Qe1tWsvDSFCZ0","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this shape, the smallest Rectangle object completely containing this shape.</p>","params":[],"returns":[{"description":"<p>this shape bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"_VxB67VslqEGOkdUfPNQ8","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"z4arJ94EiaTYG99hDjfuj","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"71m3EMHXHV3T9whGGnwUa","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"O5jjWlHRIG922NcdmdKcZ","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gFFvRnMlzts3WT7R_8B3n","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"k2E2AbHl6d0m3WvVVG-un","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CtqDw-GRP6dHU2FCeqyAs","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this Polygon (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"msoXbG5kBGOdTcCKf5-mp","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the rectangle</p>","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"mhWOThPcQDc2E_aC5vbOy","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Scale this Polygon by the given vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"sHwNRda5VtB46FULUMx4O","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"6i9sUNQKulzJxdzt2axHG","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"KH4PaFNLDCViP5MYQPsnL","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ig8yKK2erfugwZodq9S6-","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"4SQAzrLhxr50MbLZhP6jq","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"S9AZxJM51v0KWAsHz4uov","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"CVKJFM6m2NCIXzt52DIqE","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply the given transformation matrix to this Polygon</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"wL0K_d3xk0qy4ouBwtl8e","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"QkpCrsNXG3I7UoGXxYjoD","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"1ogtPrJxy6bIXO1xzK6-8","name":"contains","brief":"","type":"MethodDoc","description":"<p>Returns true if the rounded rectangle contains the given point</p>","params":[{"identifier":"x","description":"<p>x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","description":"<p>y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"eMZntIVc6jsLDVraRuNl4","name":"Sprite","brief":"","type":"ClassDoc","description":"<p>An object to display a fixed or animated sprite on screen.</p>","extends":["Renderable"],"members":[{"id":"uholXa-TZyXSIxIxIJAu1","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"P2cZse5EdpVwds4br5Q20","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"VBetBZAac7pRlNxr470dS","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"vTV-LDMhvsM1TENBVNyF7","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"EvEW5up9EjdL1LOXc4tiC","name":"animationpause","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>pause and resume animation</p>"},{"id":"z9TQp89lcp23n-Tpj4buI","name":"animationspeed","brief":"","access":"public","defaultValue":"100","scope":"instance","type":"PropertyDoc","description":"<p>animation cycling speed (delay between frame in ms)</p>"},{"id":"-8ApvfD-EI56FdByhkofU","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"rr9FqV-Qrh3OWLU-68kkX","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"dZE6J7e7FI7uF38-aMFsB","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"mQQSbI277Sxw1Wkdeg4u2","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"v42UJYHaWXq-HxAf8JXEF","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"ewBqY5YfQ3aSuu2bq0qSv","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"jrvf1CHTZcZPYwhaaPT8m","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"0JRnq1OBp5ZV4yBqQO8Rn","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"9BOX2IZ-4oWd2BADFOunB","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"dTkwfMckY6jwou1_uBmJM","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"QiUMIZZ1LCFkNVvjV8mM_","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"oHObkDiAUaJzEnlT_22cF","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"kJEjXv8NnS7HJEKVFJSSs","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"_2--MRvVEuNxtyoOhgoxj","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"wGsrn3bTqVD4lil2vyGY5","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"B8Uw9GqItY-bf44XwL28W","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"nHLZI7ogqkSwpUGYQBLh5","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"KUUfvl5nZevTINHrN_D4t","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"-G7tes2kSauuEP77GgsdU","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"51LIasJz144rzFIQRdOXo","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"2HlxpakA2rKcggycfrpbb","name":"offset","brief":"","access":"public","defaultValue":"<0.0,0.0>","scope":"instance","type":"PropertyDoc","description":"<p>global offset for the position to draw from on the source image.</p>"},{"id":"vQOsc4JoFofPEA2OFICX8","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"hm0eTpmXxNZv_hMHwAHmB","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"ieNlPBusSqy2SIMup5eMp","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"azdiLc60Jgh-e0C-yd_xR","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"O4VxxfVs-win4LkKELO40","name":"source","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The source texture object this sprite object is using</p>"},{"id":"z7uaYq36V3bjdNi7eSFG1","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"oetQ_o06nSOablalDVgch","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"F7aqrzIGVvUgBkBQwjMUI","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"Aw3nBtaBcUW2tg0rYFiTw","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"GLdB9xyY4zdvHy1H0oMoc","name":"addAnimation","brief":"","examples":[{"caption":"","code":"\n // walking animation\n this.addAnimation(\"walk\", [ 0, 1, 2, 3, 4, 5 ]);\n // standing animation\n this.addAnimation(\"stand\", [ 11, 12 ]);\n // eating animation\n this.addAnimation(\"eat\", [ 6, 6 ]);\n // rolling animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ]);\n // slower animation\n this.addAnimation(\"roll\", [ 7, 8, 9, 10 ], 200);\n // or get more specific with delay for each frame. Good solution instead of repeating:\n this.addAnimation(\"turn\", [{ name: 0, delay: 200 }, { name: 1, delay: 100 }])\n // can do this with atlas values as well:\n this.addAnimation(\"turn\", [{ name: \"turnone\", delay: 200 }, { name: \"turntwo\", delay: 100 }])\n // define an dying animation that stop on the last frame\n this.addAnimation(\"die\", [{ name: 3, delay: 200 }, { name: 4, delay: 100 }, { name: 5, delay: Infinity }])\n // set the standing animation as default\n this.setCurrentAnimation(\"stand\");\n"}],"scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>add an animation <br>\nFor fixed-sized cell sprite sheet, the index list must follow the\nlogic as per the following example...","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"index","optional":false,"description":"<p>list of sprite index or name\ndefining the animation. Can also use objects to specify delay for each frame, see below</p>","dataType":{"tokens":[{"value":"Array<number> | Array<string> | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<%2> | %3<string> | %4<object>"}},{"identifier":"animationspeed","optional":true,"description":"<p>cycling speed for animation in ms</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>frame amount of frame added to the animation (delay between each frame).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"jKquL75hnc4te6LNVkQ7f","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Ap0QKUBwekm0TS7w2W0Mt","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"R8f0Yh8xhIv69DTToptT5","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"w9486s7oOqsxG0o3iRUXJ","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a single sprite from a standalone image, with anchor in the center\n var sprite = new me.Sprite(0, 0, {\n     image : \"PlayerTexture\",\n     framewidth : 64,\n     frameheight : 64,\n     anchorPoint : new me.Vector2d(0.5, 0.5)\n });\n\n // create a single sprite from a packed texture\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\"),\n     me.loader.getImage(\"texture\")\n );\n var sprite = new me.Sprite(0, 0, {\n     image : game.texture,\n     region : \"npc2.png\",\n });\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the sprite object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>Configuration parameters for the Sprite object</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.image","description":"<p>reference to spritesheet image, a texture atlas or to a texture atlas</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | TextureAtlas | string","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1 | %2 | %3 | string"}},{"identifier":"settings.name","optional":true,"default":"\"\"","description":"<p>name of this object</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.region","optional":true,"description":"<p>region name of a specific region to use when using a texture atlas, see {@link TextureAtlas}</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.framewidth","optional":true,"description":"<p>Width of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.frameheight","optional":true,"description":"<p>Height of a single frame within the spritesheet</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.tint","optional":true,"description":"<p>a tint to be applied to this sprite</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.flipX","optional":true,"description":"<p>flip the sprite on the horizontal axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.flipY","optional":true,"description":"<p>flip the sprite on the vertical axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.5, y:0.5}","description":"<p>Anchor point to draw the frame at (defaults to the center of the frame).</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"KiU799Fe6cxBOqLXr_30j","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0EpcDjuIhnI6x6kctgh9V","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"aY6WnmKLkNI6bNOq3XQUE","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"28xI2GvmYf4EwIZAU0JoG","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xOQKoVbiKokYFVaA57dOL","name":"flicker","brief":"","examples":[{"caption":"","code":"\n // make the object flicker for 1 second\n // and then remove it\n this.flicker(1000, function () {\n     me.game.world.removeChild(this);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>make the object flicker</p>","params":[{"identifier":"duration","optional":false,"description":"<p>expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"callback","optional":false,"description":"<p>Function to call when flickering ends</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"H6G1AhGuiruV5OCmkLLjD","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"pz7J4F3r55W3T8fOYTjYu","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"kjdtJ-xRSsKONXfaHfrPG","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"whd6nYQGa11rli07ivv6c","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"hDifMW3iPxeRXk0Fxcnro","name":"getCurrentAnimationFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current animation frame index.</p>","params":[],"returns":[{"description":"<p>current animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ABHxWjdwbbIykLCsDReCf","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"8jb06sKVwR6HgfO-Aj7tX","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"ajFTeIaqzUzzWHuqmOqtf","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"IefEPquVZ68bTk21St1sg","name":"isCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n if (!this.isCurrentAnimation(\"walk\")) {\n     // do something funny...\n }\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return true if the specified animation is the current one.</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vHbU0_u5buyfPMbEc4Jr2","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"EeFhSdqmFjoCM_zEDeJzW","name":"isFlickering","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the flickering state of the object</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hLcH7xTZgApFW1FepMtFT","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"QVDlGwvBWtb3DzsnEkrYd","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"b8cBqExnNaU5SmxzXTbfB","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"9SCWJ5Q5EO6Cav8B9d9Nf","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"m8KSyENimbexsRBoZr5e2","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"u8Xy55QPfW_06JW83u17T","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"_8_K61sM4ZqdeqPS4FfAz","name":"reverseAnimation","brief":"","scope":"instance","see":["Sprite#animationspeed"],"type":"MethodDoc","description":"<p>reverse the given or current animation if none is specified</p>","params":[{"identifier":"name","optional":true,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"GWFbKHHDHhLZYSPSWhFcX","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ltL3Du7OWqXXPWowUaVCY","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"g2R6ShvNfeFH-EWoZPTk1","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"A3tSOjbBf3F4M04I-G6pr","name":"setAnimationFrame","brief":"","examples":[{"caption":"","code":"\n // reset the current animation to the first frame\n this.setAnimationFrame();\n"}],"scope":"instance","type":"MethodDoc","description":"<p>force the current animation frame index.</p>","params":[{"identifier":"idx","optional":true,"default":"0","description":"<p>animation frame index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"M429_mWyPrfMxPZUuJqlN","name":"setCurrentAnimation","brief":"","examples":[{"caption":"","code":"\n // set \"walk\" animation\n this.setCurrentAnimation(\"walk\");\n\n // set \"walk\" animation if it is not the current animation\n if (this.isCurrentAnimation(\"walk\")) {\n     this.setCurrentAnimation(\"walk\");\n }\n\n // set \"eat\" animation, and switch to \"walk\" when complete\n this.setCurrentAnimation(\"eat\", \"walk\");\n\n // set \"die\" animation, and remove the object when finished\n this.setCurrentAnimation(\"die\", (function () {\n    me.game.world.removeChild(this);\n    return false; // do not reset to first frame\n }).bind(this));\n\n // set \"attack\" animation, and pause for a short duration\n this.setCurrentAnimation(\"die\", (function () {\n    this.animationpause = true;\n\n    // back to \"standing\" animation after 1 second\n    setTimeout(function () {\n        this.setCurrentAnimation(\"standing\");\n    }, 1000);\n\n    return false; // do not reset to first frame\n }).bind(this));\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the current animation\nthis will always change the animation &amp; set the frame to zero</p>","params":[{"identifier":"name","optional":false,"description":"<p>animation id</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"resetAnim","optional":true,"description":"<p>animation id to switch to when complete, or callback</p>","dataType":{"tokens":[{"value":"string | Function","kind":"canonical"}],"template":"string | Function"}},{"identifier":"preserve_dt","optional":true,"default":"false","description":"<p>if false will reset the elapsed time counter since last frame</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"FxyW-IeQrR7Yz1YCY_zh3","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"CWLDmOqynjrsiKKCAsNnR","name":"setRegion","brief":"","examples":[{"caption":"","code":"\n // change the sprite to \"shadedDark13.png\";\n mySprite.setRegion(game.texture.getRegion(\"shadedDark13.png\"));\n"}],"scope":"instance","see":["Texture.getRegion"],"type":"MethodDoc","description":"<p>change the current texture atlas region for this sprite</p>","params":[{"identifier":"region","optional":false,"description":"<p>typically returned through me.Texture.getRegion()</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"0_5oLEB5E1rE2puIaZgsQ","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Xy-6Jo6CCb1tv5sGlsgRg","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"iactF6F_jcVd8wkw6rn6J","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bT0w8kjyBP64QWWDg0fv1","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"YM5XuRLLLlMUkIyQzf9Pc","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"xMCzehx05nyteAP3I9_g7","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ITDDVBV5qAyRNLE6E8vON","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"tHmuzxH1w-v9dgAJ6XXKr","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LLUmIUjU5CdMtz4VwS_Oy","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"dVsFWQHDP9CiAqLhgDwAQ","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>sprite draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"NNPIkz8eVlDeLiKnfjDBo","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"05CYSvSJ6tjHIqyWg_Wbu","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"6RkMOWqQO9IuqcbYIy1XB","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Sprite is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"uVNCl-xVjnqX-TGdVs0Q1","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"_MbCDc0UTa6kI0g7wT9Ff","name":"Stage","brief":"","see":["state"],"type":"ClassDoc","description":"<p>a default &quot;Stage&quot; object.\nevery &quot;stage&quot; object (title screen, credits, ingame, etc...) to be managed\nt...","members":[{"id":"othGWfgN0GuT-R6Kk_kjK","name":"ambientLight","brief":"","access":"public","defaultValue":"\"#000000\"","scope":"instance","see":["Light2d"],"type":"PropertyDoc","description":"<p>an ambient light that will be added to the stage rendering</p>"},{"id":"TRh3picKfZ7L0FTCj9Joi","name":"cameras","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The list of active cameras in this stage.\nCameras will be renderered based on this order defined in this list.\nOnly the &q..."},{"id":"tYXA3shOlxn-FxFokJKt7","name":"lights","brief":"","access":"public","examples":[{"caption":"","code":"\n // create a white spot light\n var whiteLight = new me.Light2d(0, 0, 140, \"#fff\", 0.7);\n // and add the light to this current stage\n this.lights.set(\"whiteLight\", whiteLight);\n // set a dark ambient light\n this.ambientLight.parseCSS(\"#1117\");\n // make the light follow the mouse\n me.input.registerPointerEvent(\"pointermove\", me.game.viewport, (event) => {\n    whiteLight.centerOn(event.gameX, event.gameY);\n });\n"}],"scope":"instance","see":["Light2d","Stage.ambientLight"],"type":"PropertyDoc","description":"<p>The list of active lights in this stage.\n(Note: Canvas Renderering mode will only properly support one light per stage)</p>"},{"id":"2LIkoBM4wUtRZrml2mljo","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"QiGFietra6rm3cj13reLu","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"settings","optional":true,"description":"<p>The stage` parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.cameras","optional":true,"default":"[new me.Camera2d()]","description":"<p>a list of cameras (experimental)</p>","dataType":{"tokens":[{"value":"Array<Camera2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Camera2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"settings.onResetEvent","optional":true,"description":"<p>called by the state manager when reseting the object</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.onDestroyEvent","optional":true,"description":"<p>called by the state manager before switching to another state</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[]},{"id":"-SFXMLygZghHm9A0ZoAnc","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>onDestroyEvent function<br>\ncalled by the state manager before switching to another state</p>","params":[],"returns":[]},{"id":"0wBr-iAJMPD8QZG3WTjZF","name":"onResetEvent","brief":"","scope":"instance","see":["state#change"],"type":"MethodDoc","description":"<p>onResetEvent function<br>\ncalled by the state manager when reseting the object\nthis is typically where you will load a lev...","params":[{"identifier":"...arguments","optional":true,"variadic":true,"description":"<p>optional arguments passed when switching state</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]}]},{"id":"hdiwmzUV1ZOM9Tu0F4I40","name":"Text","brief":"","type":"ClassDoc","description":"<p>a generic system font object.</p>","extends":["Renderable"],"members":[{"id":"G4F2o8vClqHRRT_SbZDFB","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"0ebD5ndFmnrcfOIkSeS1Y","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"3KhxGPIYYY-n3WZEzZwQ0","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"-UDSFwnitvd13NLEziT6U","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"0GZnzmN10DOyopeWh_iOj","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"U8j0Vg5wP55Hu3Wf40btl","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"sEozxDYT8vI19h-XR9zlt","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"Y_CPC9E0GqUluP6kOKOLr","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"Vv1WEpcDWookL0fcYiLy4","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"XPnueFVOQxn5NNk2qay8R","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"7oFMDKIWnNVakSBnjwuDS","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"-QYAfbq01BjvcHjbPmy9S","name":"fillStyle","brief":"","access":"public","defaultValue":"black","scope":"instance","type":"PropertyDoc","description":"<p>defines the color used to draw the font.<br></p>"},{"id":"wIBmd5ZO93zK_rXp3HH3Z","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"bcEkl0gKYOVxZBVu0lZaz","name":"fontSize","brief":"","access":"public","defaultValue":"10","scope":"instance","type":"PropertyDoc","description":"<p>the font size (in px)</p>"},{"id":"l8w2GO7BpUtR3tooLfE4Q","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"bjNEXu4OmdLcxXbP_e9l1","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"X48UMGCadwdcGBmFthNhB","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"zOEjbd8mpNhiWjBSnc6v_","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"LCG-GStnV1basrUezhanO","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"csRXEwTgx8E1eh1PwtfIq","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"xWaI0Q534yNAvN_L2hsp-","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"1AAmuVQtFqqbVAbUxHDcc","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"SZjI91yUqPg8Tl6r1hQZ8","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"iQaIibkjcWFp0wwyEyq-y","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"Wg4nNlaTPlwbKfqAt4ZQl","name":"lineHeight","brief":"","access":"public","defaultValue":"1.0","scope":"instance","type":"PropertyDoc","description":"<p>Set the line spacing height (when displaying multi-line strings). <br>\nCurrent font height will be multiplied with this va..."},{"id":"Jg-I3ZUnVlXZfet00oqSm","name":"lineWidth","brief":"","access":"public","defaultValue":"1","scope":"instance","type":"PropertyDoc","description":"<p>sets the current line width, in pixels, when drawing stroke</p>"},{"id":"7-IpoBaT8HS6xFt6gC99o","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"jn9IHUMYuj6Z0zQyZTyhx","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"nszf-D9zhvZI03xbEnKAW","name":"offScreenCanvas","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether to draw the font to a indidividual offscreen canvas texture first <br>\nNote: this will improve performances when u..."},{"id":"4598sDnlPuTbE5JPfH6vj","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"NwQki-bKf-05DkHlr40Ph","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"16vu8DbLSkYxf9HhxahvO","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"9gz84eutWsTc4IvtGnMgj","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"ybzfXZyv8vVG_bfyqzhtx","name":"textAlign","brief":"","access":"public","defaultValue":"\"left\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the default text alignment (or justification),<br>\npossible values are &quot;left&quot;, &quot;right&quot;, and &quot;..."},{"id":"8WnJwjudKJr3yqEv64TDW","name":"textBaseline","brief":"","access":"public","defaultValue":"\"top\"","scope":"instance","type":"PropertyDoc","description":"<p>Set the text baseline (e.g. the Y-coordinate for the draw operation), <br>\npossible values are &quot;top&quot;, &quot;hang..."},{"id":"msEcYsNIY_WqdGqAjxypd","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"vlDdqxwugHfY0Wsln6h86","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"v9A8UI_AZxcSCDCqcPMom","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"kkJDDwX1bde3lQpy3rZDR","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"iwaSvtoNBXxUVpNFaw0iR","name":"wordWrapWidth","brief":"","access":"public","defaultValue":"-1","scope":"instance","type":"PropertyDoc","description":"<p>the maximum length in CSS pixel for a single segment of text.\n(use -1 to disable word wrapping)</p>"},{"id":"ky_DcCKUXBw2imsn9cK1u","name":"_text","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>the text to be displayed</p>"},{"id":"937DCGVEwsfBdKTvn4jRs","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"SBzO7ZNCckmrnqMsUmWJh","name":"bold","brief":"","scope":"instance","type":"MethodDoc","description":"<p>make the font bold</p>","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"rq5FPkfBFTxC8nZXybmjl","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"chiQOEBKbYKpeptoryKfo","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"7ydN9ZYD8Ayy54zx6iCGG","name":"constructor","brief":"","examples":[{"caption":"","code":"\n var font = new me.Text(0, 0, {font: \"Arial\", size: 8, fillStyle: this.color});\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the text object</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings","optional":false,"description":"<p>the text configuration</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"settings.font","description":"<p>a CSS family font name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.size","description":"<p>size, or size + suffix (px, em, pt)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}},{"identifier":"settings.fillStyle","optional":true,"default":"\"#000000\"","description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.strokeStyle","optional":true,"default":"\"#000000\"","description":"<p>a CSS color value</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"settings.lineWidth","optional":true,"default":"1","description":"<p>line width, in pixels, when drawing stroke</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.textAlign","optional":true,"default":"\"left\"","description":"<p>horizontal text alignment</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.textBaseline","optional":true,"default":"\"top\"","description":"<p>the text baseline</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.lineHeight","optional":true,"default":"1.0","description":"<p>line spacing height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.anchorPoint","optional":true,"default":"{x:0.0, y:0.0}","description":"<p>anchor point to draw the text at</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"settings.offScreenCanvas","optional":true,"default":"false","description":"<p>whether to draw the font to an individual &quot;cache&quot; texture first</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"settings.wordWrapWidth","optional":true,"description":"<p>the maximum length in CSS pixel for a single segment of text</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.text","optional":true,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}}],"returns":[]},{"id":"jE2749Nf_z0WnK3F1vpXc","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"0iIT7Vta2yG7lF6UXLhyt","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"n8rkbLAQd2M7fOX-eMvN6","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"K1_Vh2TtoqvACsyc3qPxc","name":"draw","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw a text at the specified coord</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"stroke","optional":true,"default":"false","description":"<p>draw stroke the the text if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"XGL_1AhZGdJ61vb6B5dhn","name":"drawStroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>draw a stroke text at the specified coord, as defined <br>\nby the <code>lineWidth</code> and <code>fillStroke</code> prope...","params":[{"identifier":"renderer","optional":false,"description":"<p>Reference to the destination renderer instance</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":false,"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"0DpTpyo3dM-q5CUHLM1or","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"bGOIyzGF0F81AWU7nf5Rf","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"fs26JIJOH4qpSLxfzoTHJ","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"UV9nqjFIn568xNSi3MetN","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"nvzqMjE_hzsd4losjJJgC","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"UUVCRdlKMxnOQo3uy8qqm","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"Nji0WrtUiMXYrtzgF3afl","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"Bu1UG1hbwa4tj8jcONBRm","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"qQGU7BQzmEJWxklTXv5MX","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"S1DPDwaLFnR0z5eS_qnQ_","name":"italic","brief":"","scope":"instance","type":"MethodDoc","description":"<p>make the font italic</p>","params":[],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"tH6XWOoOWDdtHC2OOIunK","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Jib-Cb5OmLSIJT0s3un18","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in pixels</p>","params":[{"identifier":"renderer","optional":true,"description":"<p>reference to the active renderer</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"text","optional":true,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a TextMetrics object defining the dimensions of the given piece of text</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"fvtYQGJO7tIphs-LBWEbn","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SkXiFzTbCEZ6qCC-61O5v","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"aXMcGwrR_1dWgO1lvhZQW","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Z_JSUM6ljAAeXatM7yrLc","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"g3XBJ20C4Lad2RR7X5NQk","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"apMU_yCfSEreDox83z5JO","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"si24J2jse2KZrh-X7B-Bo","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"-2_kp_kVybEUyGHBoD_Yf","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Jb43K_OVq4d1WUV383C3q","name":"setFont","brief":"","examples":[{"caption":"","code":"\n font.setFont(\"Arial\", 20);\n font.setFont(\"Arial\", \"1.5em\");\n"}],"scope":"instance","type":"MethodDoc","description":"<p>set the font family and size</p>","params":[{"identifier":"font","optional":false,"description":"<p>a CSS font name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"size","optional":true,"default":"10","description":"<p>size in px, or size + suffix (px, em, pt)</p>","dataType":{"tokens":[{"value":"number | string","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1 | string"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"zTeWvYTBbkKj_-Mw5pfab","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"1Ah17N13teuCq0QqoieN6","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"IJVVb2kCFgdbVzl1jx3XD","name":"setText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change the text to be displayed</p>","params":[{"identifier":"value","optional":false,"default":"\"\"","description":"<p>a string, or an array of strings</p>","dataType":{"tokens":[{"value":"number | string | Array<string>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | string | %2<string>"}}],"returns":[{"description":"<p>this object for chaining</p>","dataType":{"tokens":[{"value":"Text","kind":"canonical"},{"value":"Text","kind":"link"}],"template":"%1"}}]},{"id":"DCbw-aFM2yR1P6KpRVaul","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"uSUpkip6kTA0HdsjvFgkq","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"P9ZMAFZ9rGXaivhxpSIMd","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"zKoTQYurP68uQERm0XJZ_","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LTsDI9VqEgLHLMsT3Ju0M","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"KiPsCnksXHrzqF8i2C7Ml","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"uNH47bulrgh_pNqFi1dvq","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"sSlvzTeISf9m4BH41P6Np","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"1eJeFu9kfREYaaxmlEYXl","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"CzFJGWIzQQRkeBdVFk1WL","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"lL9xB2UtckV8ue70uOjlp","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HXW7aQq0vS3e2bQrJ6Mst","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"RDkFrdx9MOEElPMqPCykX","name":"TextMetrics","brief":"","type":"ClassDoc","description":"<p>a Text Metrics object that contains helper for text manipulation</p>","extends":["Bounds"],"members":[{"id":"BUZHiB9jtOD2b5Skv_BEI","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this TextMetrics object</p>"},{"id":"3yeCtG0QQKibimaQLBryF","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"9evfiwKVA48wL2DPjOGXy","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"HqABMxcc7LYV-ROamWSoW","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"Qw4dZgpM_P1Mi09fNu1vH","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"ccEqeeXWH24Sg715LMeCW","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"HY06rfSm72RXg1TXxW6iP","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"cppx3g1KjBGkICJU9x2pU","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"wj4ws87At4HGAvfz_RghG","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"qMJe_M_ypbBU_0wvAxpMp","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"GE6gbChXwquB6Z4K6of3H","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"Ihpt4DhVZ2ZSvOYWmThEy","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"SVIvZXOW-OMkwjHMcvI9G","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"HnS9LH2N1Ua_z_qs8qbtB","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"avBlKfqWWtkyTjHU-fSMh","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"xKk8r-njR9CY9t-QeHDK8","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"N_lcxtn0lYMPrjHZc9E-f","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"sye-jPibCD17F0HJ82uYI","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"ancestor","optional":false,"description":"<p>the parent object that contains this TextMetrics object</p>","dataType":{"tokens":[{"value":"Text | BitmapText","kind":"canonical"},{"value":"Text","kind":"link"},{"value":"BitmapText","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"Lw_GT9SMisNQuCMhrq66H","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"xrTJFGQUQn0qaLzGjo3ot","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"TKDVO1ulQynwL4bVW_QWy","name":"lineHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the height of a segment of inline text in CSS pixels.</p>","params":[],"returns":[{"description":"<p>the height of a segment of inline text in CSS pixels.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"UzGLE-0rCnLrO1hm84tmi","name":"lineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the width of the given segment of inline text in CSS pixels.</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the width of the given segment of inline text in CSS pixels.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"nvUTzPSUc1oZymRA94WME","name":"measureText","brief":"","scope":"instance","type":"MethodDoc","description":"<p>measure the given text size in CSS pixels</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be measured</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this</p>","dataType":{"tokens":[{"value":"TextMetrics","kind":"canonical"},{"value":"TextMetrics","kind":"link"}],"template":"%1"}}]},{"id":"9KXqu4ZadA2HtVE62z3tj","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"iE0UBEGh0w0031dLSOQGD","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"9dnWE_lcq9AHu_79Gd6l7","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"GOIQD5CZL98DUkNS1ZNMG","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"huBNB0j6rF23EVTcFooTO","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"qPiCtKpIPXM-5Vpj8Ktc4","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]},{"id":"ZAaBFTaJNsOxjJPYh1j3R","name":"wordWrap","brief":"","scope":"instance","type":"MethodDoc","description":"<p>wrap the given text based on the given width</p>","params":[{"identifier":"text","optional":false,"description":"<p>the text to be wrapped</p>","dataType":{"tokens":[{"value":"string | Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"string | %1<string>"}},{"identifier":"width","optional":false,"description":"<p>maximum width of one segment of text in css pixel</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"context","optional":true,"description":"<p>reference to an active 2d context for canvas rendering</p>","dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>an array of string representing wrapped text</p>","dataType":{"tokens":[{"value":"Array<string>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1<string>"}}]}]},{"id":"E9bb0hQ-jceIfHB5Vsc4d","name":"TextureAtlas","brief":"","type":"ClassDoc","description":"<p>A Texture atlas class, currently supports : <br></p>\n<ul>\n<li>[TexturePacker]{@link http://www.codeandweb.com/texturepacke...","members":[{"id":"HUakpg_s5I3oZyG1B0DMV","name":"addRegion","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add a region to the atlas</p>","params":[{"identifier":"name","optional":false,"description":"<p>region mame</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"x","optional":false,"description":"<p>x origin of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y origin of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of the region</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the created region</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"FhiJ1uM8ymeYN4ie7dbhR","name":"addUVs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add uvs mapping for the given region</p>","params":[{"identifier":"atlas","optional":false,"description":"<p>the atlas dictionnary where the region is define</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"name","optional":false,"description":"<p>region (or frame) name</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>the created region UVs</p>","dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]},{"id":"5PrTMqaqMlxITLjxYN203","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a texture atlas from a JSON Object\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\")\n );\n\n // create a texture atlas from a multipack JSON Object\n game.texture = new me.TextureAtlas([\n     me.loader.getJSON(\"texture-0\"),\n     me.loader.getJSON(\"texture-1\"),\n     me.loader.getJSON(\"texture-2\")\n ]);\n\n // create a texture atlas for a spritesheet with an anchorPoint in the center of each frame\n game.texture = new me.TextureAtlas(\n     {\n         framewidth : 32,\n         frameheight : 32,\n         anchorPoint : new me.Vector2d(0.5, 0.5)\n     },\n     me.loader.getImage(\"spritesheet\")\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"atlases","optional":false,"description":"<p>atlas information. See {@link loader.getJSON}</p>","dataType":{"tokens":[{"value":"object | Array<object>","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"object | %1<object>"}},{"identifier":"src","optional":true,"default":"atlas.meta.image","description":"<p>Image source</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | string | Array<HTMLImageElement> | Array<HTMLCanvasElement> | Array<string>","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1 | %2 | string | %3<%4> | %5<%6> | %7<string>"}},{"identifier":"cache","optional":true,"default":"false","description":"<p>Use true to skip caching this Texture</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"uGomRbcPPwUFFRDcZqiaq","name":"createAnimationFromName","brief":"","examples":[{"caption":"","code":"\n // create a new texture object under the `game` namespace\n game.texture = new me.TextureAtlas(\n     me.loader.getJSON(\"texture\"),\n     me.loader.getImage(\"texture\")\n );\n\n // create a new Animated Sprite\n var sprite = game.texture.createAnimationFromName([\n     \"walk0001.png\", \"walk0002.png\", \"walk0003.png\",\n     \"walk0004.png\", \"walk0005.png\", \"walk0006.png\",\n     \"walk0007.png\", \"walk0008.png\", \"walk0009.png\",\n     \"walk0010.png\", \"walk0011.png\"\n ]);\n\n // define an additional basic walking animation\n sprite.addAnimation (\"simple_walk\", [0,2,1]);\n // you can also use frame name to define your animation\n sprite.addAnimation (\"speed_walk\", [\"walk0007.png\", \"walk0008.png\", \"walk0009.png\", \"walk0010.png\"]);\n // set the default animation\n sprite.setCurrentAnimation(\"simple_walk\");\n // set the renderable position to bottom center\n sprite.anchorPoint.set(0.5, 1.0);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Create an animation object using the first region found using all specified names</p>","params":[{"identifier":"names","optional":false,"description":"<p>list of names for each sprite\n(when manually creating a Texture out of a spritesheet, only numeric values are authorized)</p>","dataType":{"tokens":[{"value":"Array<string> | Array<number>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1<string> | %3<%2>"}},{"identifier":"settings","optional":true,"description":"<p>Additional settings passed to the {@link Sprite} contructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"dataType":{"tokens":[{"value":"Sprite","kind":"canonical"},{"value":"Sprite","kind":"link"}],"template":"%1"}}]},{"id":"55MmXDT6wkflfIlGwurer","name":"createSpriteFromName","brief":"","examples":[{"caption":"","code":"\n // create a new texture object under the `game` namespace\n game.texture = new me.TextureAtlas(\n    me.loader.getJSON(\"texture\"),\n    me.loader.getImage(\"texture\")\n );\n ...\n ...\n // create a new \"coin\" sprite\n var sprite = game.texture.createSpriteFromName(\"coin.png\");\n // set the renderable position to bottom center\n sprite.anchorPoint.set(0.5, 1.0);\n ...\n ...\n // create a 9-slice sprite\n var dialogPanel = game.texture.createSpriteFromName(\n    \"rpg_dialo.png\",\n    // width & height are mandatory for 9-slice sprites\n    { width: this.width, height: this.height },\n    true\n );\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Create a sprite object using the first region found using the specified name</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the sprite</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings","optional":true,"description":"<p>Additional settings passed to the {@link Sprite} contructor</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"nineSlice","optional":true,"default":"false","description":"<p>if true returns a 9-slice sprite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"Sprite | NineSliceSprite","kind":"canonical"},{"value":"Sprite","kind":"link"},{"value":"NineSliceSprite","kind":"link"}],"template":"%1 | %2"}}]},{"id":"9rL2xHxEspaXXJv-RlHzM","name":"getAtlas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the default or specified atlas dictionnary</p>","params":[{"identifier":"name","optional":true,"description":"<p>atlas name in case of multipack textures</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"fpGlj3ZVh3yHidq13qqYR","name":"getFormat","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the format of the atlas dictionnary</p>","params":[],"returns":[{"description":"<p>will return &quot;texturepacker&quot;, or &quot;ShoeBox&quot;, or &quot;melonJS&quot;, or &quot;Spritesheet (fixed cell si...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"dqn4JmvE-WUkTu02RD2ql","name":"getRegion","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a normalized region (or frame) information for the specified sprite name</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the sprite</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"atlas","optional":true,"description":"<p>name of a specific atlas where to search for the region</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"Xs-IlkY90H-r-8nXYmaji","name":"getTexture","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the source texture for the given region (or default one if none specified)</p>","params":[{"identifier":"region","optional":true,"description":"<p>region name in case of multipack textures</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"slvG0ZMyodt2VFvoB8g4y","name":"getUVs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the uvs mapping for the given region</p>","params":[{"identifier":"name","optional":false,"description":"<p>region (or frame) name</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>region Uvs</p>","dataType":{"tokens":[{"value":"Float32Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1"}}]}]},{"id":"72XoFU7AB_GkudeFsA_Mf","name":"Tile","brief":"","type":"ClassDoc","description":"<p>a basic tile object</p>","extends":["Bounds"],"members":[{"id":"5LojmRUmuScgKsnAhoJSB","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the bound</p>"},{"id":"_lm7NFcupgdvlvKE6_yiE","name":"center","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>return the center position of the bound</p>"},{"id":"-XcnDNgaZPGVWatgwCIDn","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the x axis</p>"},{"id":"lgOSaZCBTDfxV5jlxr_3C","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>center position of the bound on the y axis</p>"},{"id":"in70z4WV_2Xn4uMIp9-fH","name":"flipped","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Global flag that indicates if the tile is flipped<br></p>"},{"id":"nRm8xP1jpHlbl5kR92lst","name":"flippedAD","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped anti-diagonally<br></p>"},{"id":"aJg1qaVX0TsEyhjGsl0gl","name":"flippedY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped vertically<br></p>"},{"id":"pYoRQGiwQU5L8c_OEmbWz","name":"flipX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>True if the tile is flipped horizontally<br></p>"},{"id":"pMBe48VbYsP--AaSndi2u","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the bound</p>"},{"id":"cji3qqibXV958sObm5t9M","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the bound</p>"},{"id":"Fmi6rvPpsTrmbCU-Uq_AT","name":"tileId","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tileId</p>"},{"id":"KgGN0FZ20fECl-llYI7Xm","name":"tileset","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>tileset</p>"},{"id":"gpV-HjZOTPDwZ8H_7b9Wt","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the bound</p>"},{"id":"U4eVpZHVqvZ3xL-oijrOr","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the bounds</p>"},{"id":"tBps9VaLXNe_C9Yfv10ey","name":"x","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>x position of the bound</p>"},{"id":"joKZid72KC_i2O7DKJoR6","name":"y","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>y position of the bounds</p>"},{"id":"N9IzT_gTPp1d_Dz-l0Rk9","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given vertices to the bounds definition.</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"UnuGT6-Gzru9AfT_l6XtX","name":"addBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given bounds to the bounds definition.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}},{"identifier":"clear","optional":true,"default":"false","description":"<p>either to reset the bounds before adding the new vertices</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"XurgfUzDki1NFk8YtP2Yh","name":"addFrame","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given quad coordinates to this bound definition, multiplied by the given matrix</p>","params":[{"identifier":"x0","optional":false,"description":"<p>left X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y0","optional":false,"description":"<p>top Y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x1","optional":false,"description":"<p>right X coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y1","optional":false,"description":"<p>bottom y coordinates of the quad</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given frame coordinates</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"wGcpnXA6ZRi7bwKVgKhon","name":"addPoint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add the given point to the bounds definition.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"m","optional":true,"description":"<p>an optional transform to apply to the given point</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"49k1MNXix70aR-ojJ-Ivs","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the bound</p>","params":[],"returns":[]},{"id":"Acqb7Nbg7B7eDqrwVn4tN","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this bounds</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"jwBdmHqEHK41q1ZcXeIWm","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>x index of the Tile in the map</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y index of the Tile in the map</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"gid","optional":false,"description":"<p>tile gid</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileset","optional":false,"description":"<p>the corresponding tileset object</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"r9x3rg8gCQviSKumRLXyR","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the bounds contains the given point.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>True if the bounds contain the point, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Znh9swEL-ZkvCc-OQHWr6","name":"getRenderable","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a renderable object for this Tile object</p>","params":[{"identifier":"settings","optional":true,"description":"<p>see {@link Sprite}</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>a me.Sprite object</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"VhnAtFkTohBC66X0y6wxc","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this bounds are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HeQvvQ1TbC7sFw1X6eNoX","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the two bounds intersect.</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Bounds | Rect","kind":"canonical"},{"value":"Bounds","kind":"link"},{"value":"Rect","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>True if the bounds overlap, otherwise false</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"SA7TsnPY8saqmaWcXbG3-","name":"setMinMax","brief":"","scope":"instance","type":"MethodDoc","description":"<p>sets the bounds to the given min and max value</p>","params":[{"identifier":"minX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"minY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxX","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"maxY","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ecnnJp-qosdGAO3ITyfX-","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the bounds to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"DvupE8BJLDLi0J3KStde2","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this bounds.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this bounds.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"CjzmvCBP57_XNua1Ku9Kr","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the bounds by x on the x axis, and y on the y axis</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_HaNdtXFt7i84iyal4y_0","name":"update","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Updates bounds using the given vertices</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>an array of me.Vector2d points</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[]}]},{"id":"QIY6jBVCO8-A0HjCuIyqa","name":"Timer","brief":"","see":["{@link timer} the default global timer instance"],"type":"ClassDoc","description":"<p>a Timer class to manage timing related function (FPS, Game Tick, Time...)</p>"},{"id":"284-NnXgkTGKKHgeceT5t","name":"TMXHexagonalRenderer","brief":"","type":"ClassDoc","description":"<p>an Hexagonal Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"EOorMP5P25BeyzTB_XMKx","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DrXSHOVp3kjSCaLwlh_Jg","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"tbUCHLueH2JDU4ds1rHxJ","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"YFKamN6zlM18ZyDeHeeQI","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"qxYG0PZ0YJTuxwUt95guC","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"gTfCP9q8H-L1Hraq4riZ-","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"42tzNBWszEjEaIIJjiwdf","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"Ic9-8sqOC9sGwy1v0A90t","name":"TMXIsometricRenderer","brief":"","type":"ClassDoc","description":"<p>an Isometric Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"pNEmMafXl-qHh9GsTbVAU","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"nJegzWJYjhs1Od5Pwa9c0","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"reqZrgu1xPq6jYkbY18NS","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"VLEWGsRnR-pHV65cjFW7Y","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"qJqy4UJSYKyGGzJvKIh33","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"2iGUs5B4hN-PwI5N-Fy1A","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"lMbkz43P0PMTrqWNlViqZ","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"vQkI_IIS-adQLwwgGf0nf","name":"TMXLayer","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Layer Object\nTiled QT 0.7.x format</p>","extends":["Renderable"],"members":[{"id":"tUkfQHE3EOgr7HUxPXYwu","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"Vouj1AFs0_5NV8_pyTrRV","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"FNXD9xhPCIBoCwpoN1OYH","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"RVUojlK8B4RpGL_wQ2kvb","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"HnBpcqgBG8keA8CR-FkoX","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"VnhLNrQZwk5EzAHo8jUaZ","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"YQlPqxq_at9WU8ogF-Qnn","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"LjEWBd8uvxzu_zMFZ89zI","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"pePoZJ7H4evUg8kEt8vj0","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"PE7hH9iPpRQaPgGKEjw7l","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"d21FSc2fSAQ9mMesTjfNs","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"bz36FeTx6gpocp6uzJJ5L","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"0NqMVK7aOsacAviC6FuZS","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"CY1pjRbILVheAh0ysopjL","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"MIkWNme5-8CTPcC6hbz9z","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"TmkKK6fj_K0MTE-QN_8YG","name":"isAnimated","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Layer contains tileset animations</p>"},{"id":"6rN2SurLXwfejGRwjm3dD","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"_SfM7wp7kPtXadB84exS3","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"qmPdKkWtDVXZOfL_fhWoP","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"KDVQCCjUWx1nJO0XJ8Hhh","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"cnaiuBs6A_XGMagnV5MCJ","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"e1MtMyp4AzmwS-wdyydVG","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"vGEMkWrFPGMhW5wMY0NdD","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"OrUL-LrWdEpRTJuXUfjAs","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"jS7NDWokrGb4jzvl2Fqd8","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"XrXML1y-Vnqjnk5qWNDPX","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"J_IgF7B1guVGrG_-JX8HP","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"BHYKZ9ikrj_H5z6tFfQxl","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"9cqFCutMAj4Yo2EkIBAqw","name":"renderorder","brief":"","access":"public","defaultValue":"\"right-down\"","scope":"instance","type":"PropertyDoc","description":"<p>the order in which tiles on orthogonal tile layers are rendered.\n(valid values are &quot;left-down&quot;, &quot;left-up&qu..."},{"id":"X4LBwzVIbHR5Me67sCCm_","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"mIsRYMFYRbzD23QQU5nlW","name":"tilesets","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The Layer corresponding Tilesets</p>"},{"id":"SgeeBlky8-T1kWgPKZEjf","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"JkBJIPg-Na1-If6OII9MV","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"cOdJvy4Yzwo51e-CNTgPd","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"0XUofq_Dwg9SH7xQEnXW_","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"realqQUbaARPaw_PpLGDM","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"opuxQ7cqC6CPiNY372jKD","name":"cellAt","brief":"","access":"public","examples":[{"caption":"","code":"\n // return the first tile at offset 0, 0\n var tile = layer.cellAt(0, 0);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Return the Tile object at the specified tile coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>x position of the tile (in Tile unit)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>x position of the tile (in Tile unit)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"boundsCheck","optional":true,"default":"true","description":"<p>check first if within the layer bounds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tile or null if there is no defined tile at the position or if outside of the layer bounds</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"-VsZV8ryIACBx7g8CfEU5","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"pSBZda6q4JaTKMzAO3i8G","name":"clearTile","brief":"","access":"public","examples":[{"caption":"","code":"\n me.game.world.getChildByType(me.TMXLayer).forEach(function(layer) {\n     // clear all tiles at the given x,y coordinates\n     layer.clearTile(x, y);\n });\n"}],"scope":"instance","type":"MethodDoc","description":"<p>clear the tile at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in map coordinates: row/column)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in map coordinates: row/column)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"G_rVN8hP9Tw-qKHeJASJD","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"WHC2hsujv0qFkNw-33GxL","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>layer data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#layer})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"data","optional":false,"description":"<p>layer data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#layer})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"tilewidth","optional":false,"description":"<p>width of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileheight","optional":false,"description":"<p>height of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"orientation","optional":false,"description":"<p>&quot;isometric&quot; or &quot;orthogonal&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"tilesets","optional":false,"description":"<p>tileset as defined in Tiled</p>","dataType":{"tokens":[{"value":"TMXTilesetGroup","kind":"canonical"},{"value":"TMXTilesetGroup","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":false,"description":"<p>z-index position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"bIsNf9SmHMtNHFc2-c0Tp","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gL9A-hyEoeQPWNX7mcJXU","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"MplRf1jg9YHmHy5WJ1VL5","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"7vvHGuU_Nz3SkhSz2a__J","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"i2TfJs0UKAgZMvU1Mlppx","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"P9v5KOmQHsSaW4YEBTA7F","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"mwAMgZZ5PMJ8BaFyZdbBF","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"l_QQm9tH0eZfC0wEfv3Kt","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"68rm9i8Ieac5cE8hmS090","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"lYGvtvumzBFZTdm20tkCW","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"xU-D-cCuXG2uJXbSCeeek","name":"getRenderer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the layer current renderer object</p>","params":[],"returns":[{"description":"<p>renderer</p>","dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}]},{"id":"OaoUoG17id4XOQ5S5kLVm","name":"getTile","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the TMX Map Layer called \"Front layer\"\n var layer = me.game.world.getChildByName(\"Front Layer\")[0];\n // get the tile object corresponding to the latest pointer position\n var tile = layer.getTile(me.input.pointer.x, me.input.pointer.y);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Return the Tile object at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tile or null if there is no defined tile at the coordinate or if outside of the layer bounds</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"nz9J0M74cD2ipCyTEjLVX","name":"getTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>assign the given Tile object to the specified position</p>","params":[{"identifier":"tile","optional":false,"description":"<p>the tile object to be assigned</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>x coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the tile object</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"87m2OKmyZbWuV1DMDNbnu","name":"getTileId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the TileId of the Tile at the specified position</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>TileId or null if there is no Tile at the given position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"60EoMVmKUSH4q71JVwpQd","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"9jUln9IqN05iGgUlU6tA4","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ddepUUk_SpKjZwEJ2yw2v","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ZeKlMHI2uUNcakGRptajF","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"-SP_QeFlaJEYrLRsPBj9g","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"QMD_T-_BfauFdGljhqe-1","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"vXQDxf5u9OwypdN6RXneY","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"LOk_j0M9rLU6BrO4V37kU","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ydh8AQPm4veKaAOIRgIlF","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Jz47A9zZdG2fbpKQlI-Nt","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"28951JDQVDVm0r_JZQr51","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"D7RMQ4FwuiPXyi9UcTDwa","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"FjC2HZ7VUc6Qht-jHotNa","name":"setRenderer","brief":"","access":"public","examples":[{"caption":"","code":"\n // use the parent map default renderer\n var layer = new me.TMXLayer(...);\n layer.setRenderer(map.getRenderer());\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Set the TMX renderer for this layer object</p>","params":[{"identifier":"renderer","optional":false,"dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"QI5S1DIRGVm8efSm1HNDT","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"dHkMScUWnUcykyALLJAN1","name":"setTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return a new the Tile object corresponding to the given tile id</p>","params":[{"identifier":"tileId","optional":false,"description":"<p>tileId</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>X coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate (in world/pixels coordinates)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the tile object</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}]},{"id":"DoKk3dJCNhDqyNC-QlK1B","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"2DQMP_9Qg6NnuVWWeIK3n","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"17Eb7r2uFSy0V9hU-klqD","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"v0AAHZNwU4zQYIIDHK6M2","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Yab70Nlhu7RoGN5bb6DyE","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Dx7Rm8nD60EAkxa1z9GK0","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"f5qELVI_GqQE7UClHPchT","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"r-PGAyD3lZTW5tGBt9VKv","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Ze4mSDy6xPBmDSycIRbEA","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"dM6naFwMO-yEgMmDQjeGD","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"9xZwDEbU0z_oXZtQXta04","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"OyiRJS7VWGA3HKD31vIfk","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"glt81iuE_9kVos4xt2gcP","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"RDPCQHoFe2lDakoBWK4Pp","name":"TMXOrthogonalRenderer","brief":"","type":"ClassDoc","description":"<p>an Orthogonal Map Renderder</p>","extends":["TMXRenderer"],"members":[{"id":"SR4PWKjqfESqTbEf3-S_y","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"UpfpyeX94SF7b7muyhbNx","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"map","optional":false,"description":"<p>the TMX map</p>","dataType":{"tokens":[{"value":"TMXTileMap","kind":"canonical"},{"value":"TMXTileMap","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"iLAvz9x_UF-W_HDclR12S","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"elK_HG51DppV7ctbBmEWo","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ruoWv8UDgNwxWNXbjM-5i","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the map bounding rect</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"WlEHeoDcE80LpxVhwPXl6","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"ugeHR9nZHBGQ8NYP6Sbut","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"g8UKcc-7tv8_3MI5sf_Lq","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"AlSFphUiQQU7zmV33a0AU","name":"TMXRenderer","brief":"","type":"ClassDoc","description":"<p>The map renderer base class</p>","members":[{"id":"0aVdGZ8JE-6lLGzS6Th0u","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"e4UJNozkjNdrtKvYUyvEe","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"cols","optional":false,"description":"<p>width of the tilemap in tiles</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"rows","optional":false,"description":"<p>height of the tilemap in tiles</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tilewidth","optional":false,"description":"<p>width of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tileheight","optional":false,"description":"<p>height of each tile in pixels</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"hba_nLEcGboU4VJnoImh8","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"k0GX1jCnGd2v7ta33lj8C","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"D6Z-4oQkEU8TBpDs5Ujha","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the map bounding rect</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"k2EtLFqI_d_X6e6zH1l-8","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"0LTc1mguZAtRtimQRFdnC","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"lv_28fqCpdYl6sQlqqxQ5","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"FxSerVSCNBOIjnvaDr1G_","name":"TMXStaggeredRenderer","type":"ClassDoc","description":"<p>a Staggered Map Renderder</p>","extends":["TMXHexagonalRenderer"],"members":[{"id":"QmewMKZVqXNrjBAX4I9NE","name":"canRender","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the renderer can render the specified map or layer</p>","params":[{"identifier":"component","optional":false,"description":"<p>TMX Map or Layer</p>","dataType":{"tokens":[{"value":"TMXTileMap | TMXLayer","kind":"canonical"},{"value":"TMXTileMap","kind":"link"},{"value":"TMXLayer","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"jCG_iWxgmhhbfTov_Vq-v","name":"constructor","brief":"","access":"public","scope":"instance","type":"MethodDoc","params":[]},{"id":"4FQdt4VV2MjPLR0ZnXxhJ","name":"drawTile","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given tile at the specified layer</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"x","optional":false,"description":"<p>X coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate where to draw the tile</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tile","optional":false,"description":"<p>the tile object to draw</p>","dataType":{"tokens":[{"value":"Tile","kind":"canonical"},{"value":"Tile","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"Fc3fHzS9FCCiory8IF0UX","name":"drawTileLayer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>draw the given TMX Layer for the given area</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"layer","optional":false,"description":"<p>a TMX Layer object</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}},{"identifier":"rect","optional":false,"description":"<p>the area of the layer to draw</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ds-bwPf3PkTpv6CSKWGPk","name":"getBounds","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the bounding rect for this map renderer</p>","params":[{"identifier":"layer","optional":true,"description":"<p>calculate the bounding rect for a specific layer (will return a new bounds object)</p>","dataType":{"tokens":[{"value":"TMXLayer","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"m4TUoxUkd8-R8iQnL1hMr","name":"pixelToTileCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile position corresponding to the specified pixel</p>","params":[{"identifier":"x","optional":false,"description":"<p>X coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"Ks3dHV66dLuu0AOwVgSOV","name":"tileToPixelCoords","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the pixel position corresponding of the specified tile</p>","params":[{"identifier":"col","optional":false,"description":"<p>tile horizontal position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"row","optional":false,"description":"<p>tile vertical position</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional vector object where to put the return values</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]}]},{"id":"Rf9-QuflYUnVzBhW1pHeg","name":"TMXTileMap","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Map Object\nTiled QT +0.7.x format</p>","members":[{"id":"oJsRk3S_iQImKMrojR7d0","name":"cols","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>width of the tilemap in tiles</p>"},{"id":"ypI-hftwlhhRJQoxjE93Z","name":"infinite","brief":"","access":"public","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>is the map an infinite map</p>"},{"id":"2GQn6uqJs7hWBdueeGgpQ","name":"name","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>name of the tilemap</p>"},{"id":"zEEqUazA5FZ5ijNP2mBlx","name":"orientation","brief":"","access":"public","defaultValue":"\"orthogonal\"","scope":"instance","type":"PropertyDoc","description":"<p>the map orientation type. melonJS supports “orthogonal”, “isometric”, “staggered” and “hexagonal”.</p>"},{"id":"3TZRMmWOJGKsZ0zCb4UZc","name":"renderorder","brief":"","access":"public","defaultValue":"\"right-down\"","scope":"instance","type":"PropertyDoc","description":"<p>the order in which tiles on orthogonal tile layers are rendered.\n(valid values are &quot;left-down&quot;, &quot;left-up&qu..."},{"id":"4T0u47MwEMjA30LLH3_a0","name":"rows","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>height of the tilemap in tiles</p>"},{"id":"62c0qJusKMiSrSdbgtEFF","name":"tiledversion","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The Tiled version used to save the file (since Tiled 1.0.1).</p>"},{"id":"UjdVr7B4iuhTjanQ15KQh","name":"tileheight","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>Tile height</p>"},{"id":"tQCRpuOgv__HZLYaRMOgw","name":"tilewidth","brief":"","access":"public","defaultValue":"-","scope":"instance","type":"PropertyDoc","description":"<p>Tile width</p>"},{"id":"7XW4wGWeHJ-Y_0whw-xuW","name":"version","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the TMX format version</p>"},{"id":"VEAKrVty5Ao_81a8zEBms","name":"addTo","brief":"","access":"public","examples":[{"caption":"","code":"\n // create a new level object based on the TMX JSON object\n var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n // add the level to the game world container\n level.addTo(me.game.world, true, true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>add all the map layers and objects to the given container.\nnote : this will not automatically update the camera viewport</p>","params":[{"identifier":"container","optional":false,"description":"<p>target container</p>","dataType":{"tokens":[{"value":"Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"%1"}},{"identifier":"flatten","optional":true,"default":"true","description":"<p>if true, flatten all objects into the given container, else a <code>me.Container</code> object will be created for each co...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"setViewportBounds","optional":true,"default":"false","description":"<p>if true, set the viewport bounds to the map size, this should be set to true especially if adding a level to the game worl...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"my8EnrSt9vRqH1IX1uC6V","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // create a new level object based on the TMX JSON object\n var level = new me.TMXTileMap(levelId, me.loader.getTMX(levelId));\n // add the level to the game world container\n level.addTo(me.game.world, true);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"levelId","optional":false,"description":"<p>name of TMX map</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"data","optional":false,"description":"<p>TMX map in JSON format</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"WybywpSAZ_hDvdKn2GUJs","name":"destroy","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>destroy function, clean all allocated objects</p>","params":[],"returns":[]},{"id":"Sn9Svy-Aw_WEfpjOmGew7","name":"getLayers","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all the existing layers</p>","params":[],"returns":[{"description":"<p>Array of Layers</p>","dataType":{"tokens":[{"value":"Array<TMXLayer>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"TMXLayer","kind":"link"}],"template":"%1<%2>"}}]},{"id":"iWww4cGFafubFwwX8diEP","name":"getObjects","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return an Array of instantiated objects, based on the map object definition</p>","params":[{"identifier":"flatten","optional":true,"default":"true","description":"<p>if true, flatten all objects into the returned array.\nwhen false, a <code>me.Container</code> object will be created for e...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Array of Objects</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"wCZ6jugGug5Q6ncvSfZTi","name":"getRenderer","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Return the map default renderer</p>","params":[],"returns":[{"description":"<p>a TMX renderer</p>","dataType":{"tokens":[{"value":"TMXRenderer","kind":"canonical"},{"value":"TMXRenderer","kind":"link"}],"template":"%1"}}]}]},{"id":"BTDuWP8hf2Kwoi2bKcWw8","name":"TMXTileset","brief":"","type":"ClassDoc","description":"<p>a TMX Tile Set Object</p>","members":[{"id":"V7ump3pFjUSLqXBPtVy-U","name":"isAnimated","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Tileset contains animated tiles</p>"},{"id":"Z2vTDfRvzHzWeJGUDqOPn","name":"isCollection","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>true if the tileset is a &quot;Collection of Image&quot; Tileset</p>"},{"id":"0pluNgb3CuPsq_CEPrJrs","name":"_lastUpdate","brief":"","access":"private","defaultValue":"0","scope":"instance","type":"PropertyDoc","description":"<p>Remember the last update timestamp to prevent too many animation updates</p>"},{"id":"JOcI1BVvylTH0g8kz52JZ","name":"animations","brief":"","access":"private","scope":"instance","type":"PropertyDoc","description":"<p>Tileset animations</p>"},{"id":"2u5mWCe1tAe3j9yIf7IpP","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"tileset","optional":false,"description":"<p>tileset data in JSON format ({@link http://docs.mapeditor.org/en/stable/reference/tmx-map-format/#tileset})</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"X-kFExineTnczsBAi3yJm","name":"contains","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return true if the gid belongs to the tileset</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"hkJ20IT3O4xOtwunmBUZW","name":"getTileImage","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tile image from a &quot;Collection of Image&quot; tileset</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding image or undefined</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}}]},{"id":"Bpp9subfamnAGUz1dccRN","name":"getTileProperties","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the properties of the specified tile</p>","params":[{"identifier":"tileId","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}]},{"id":"y6PanRun9lAp1EODVV08s","name":"getViewTileId","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Get the view (local) tile ID from a GID, with animations applied</p>","params":[{"identifier":"gid","optional":false,"description":"<p>Global tile ID</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>View tile ID</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]}]},{"id":"dEbjIStCeyMmc7JXYNRSb","name":"TMXTilesetGroup","brief":"","type":"ClassDoc","description":"<p>an object containing all tileset</p>","members":[{"id":"B2FTrW1XZHjuIYDXlll4b","name":"add","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>add a tileset to the tileset group</p>","params":[{"identifier":"tileset","optional":false,"dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"I8LCcKJjYYbs2SDq9IsyX","name":"getTilesetByGid","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tileset corresponding to the specified id <br>\nwill throw an exception if no matching tileset is found</p>","params":[{"identifier":"gid","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tileset</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}]},{"id":"shlrTMDy3emWW2M3H5JBN","name":"getTilesetByIndex","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the tileset at the specified index</p>","params":[{"identifier":"i","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>corresponding tileset</p>","dataType":{"tokens":[{"value":"TMXTileset","kind":"canonical"},{"value":"TMXTileset","kind":"link"}],"template":"%1"}}]}]},{"id":"wUL3zRsK1XjSIvmId505J","name":"Trigger","brief":"","type":"ClassDoc","description":"<p>trigger an event when colliding with another object</p>","extends":["Renderable"],"members":[{"id":"uymRiUzmTZkyqCqdfFRKL","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"bm_oBVPPfG_AeCC0_p8cs","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"ul4hfuw48ET46xr7jtl2o","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"T8ezlWCkUiJot-z_DBY2s","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"LHgpkMCUkB7Bwz7UZxb_r","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"UQr02784UlQ0F7n3qR9AZ","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"GI5wjWn2o7VAFnNDfaJVp","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"nw3qPCbADmXothd0XS5qr","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"af4eZEqIZZx0oCxxTj8vI","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"7s0lH5wds1EIZpgONruE1","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"icZKv2kcB6On3ai8rM53j","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"8ZFUuoXHQwVu_nWc3aExJ","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"ohGMbk8QPLYgQEbUgdMAw","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"_dkal-dbKcCRjP_DXcnXS","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"QqjSsToX5IYKR765yq5d6","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"rYYfarvBg43JQTrpzw-d8","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"UCJwe00YnJrk-BVy3RGWX","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"ZqM3nxoNxgH5TkFIDlSa7","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"_uG4gV8wIlvfOjrrFXMxC","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"vH4S5WCDzl2qUXKDRdR2s","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"w6ug4XOu6-Egn_xUg_rxk","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"-4ZQ88pow5gQZXA34-soP","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"dCOnM9O8hdYhkhBvxDd6Q","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"XjTrEhPe1NLcZRObxl5kV","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"VaG00sh6WSsGYFjtyijkx","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"_GLLujZdPNJ6lkrviPSMF","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"XjCHH7LruVm8sPunBpLqP","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"WFriYUAaP_KIklH_M3iGX","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"07A69fsMt9LOYedmrPJiG","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"lCCruyhHf2Bf8zX7qO6De","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"m4NZ96fkvf8I8sRApsVde","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"uyGCxmNTS8Y0Db-wNjgNL","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"EnYSg9HCA4WsUBBxpH_2M","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"SydFckNDT7q9LaNUEyIoC","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"NJuyOd5X0ucq---qQoOSt","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"E1aQHyifhkwUOzA8oBjUN","name":"constructor","brief":"","examples":[{"caption":"","code":"\n me.game.world.addChild(new me.Trigger(\n     x, y, {\n         shapes: [new me.Rect(0, 0, 100, 100)],\n         \"duration\" : 250,\n         \"color\" : \"#000\",\n         \"to\" : \"mymap2\"\n     }\n ));\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinates of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the y coordinates of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.width","optional":true,"description":"<p>width of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.height","optional":true,"description":"<p>height of the trigger area</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"settings.shapes","optional":true,"description":"<p>collision shape(s) that will trigger the event</p>","dataType":{"tokens":[{"value":"Array<Rect> | Array<Polygon> | Array<Line> | Array<Ellipse>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Polygon","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Line","kind":"link"},{"value":"Array","kind":"canonical"},{"value":"Ellipse","kind":"link"}],"template":"%1<%2> | %3<%4> | %5<%6> | %7<%8>"}},{"identifier":"settings.duration","optional":true,"description":"<p>Fade duration (in ms)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.color","optional":true,"description":"<p>Fade color</p>","dataType":{"tokens":[{"value":"string | Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.event","optional":true,"default":"\"level\"","description":"<p>the type of event to trigger (only &quot;level&quot; supported for now)</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.to","optional":true,"description":"<p>level to load if level trigger</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"settings.container","optional":true,"description":"<p>Target container. See {@link level.load}</p>","dataType":{"tokens":[{"value":"string | Container","kind":"canonical"},{"value":"Container","kind":"link"}],"template":"string | %1"}},{"identifier":"settings.onLoaded","optional":true,"description":"<p>Level loaded callback. See {@link level.load}</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"settings.flatten","optional":true,"description":"<p>Flatten all objects into the target container. See {@link level.load}</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"settings.setViewportBounds","optional":true,"description":"<p>Resize the viewport to match the level. See {@link level.load}</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"M8PFIQtlC4cPOlckh4Yv8","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"POiRTzkFFw_k8_1l0XNCc","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ejtvqeHsMp6h9_t1SaJuo","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"zTKH1IOcowFvdgpB2emfE","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"Hl6-XCtFKsZx4_bVAZLjN","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"SRgmFQG9Zx0aR6MLVn6Lx","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"cPD-sV2HrSuRjuGY53acx","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ES5kU1Ou9ynIMf-XN5Qrw","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"3uvFM2VX3S48rjqG88QXi","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"a4fczMbi4OQfwyGhXoQUC","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"BAkiafE6vIhJfnRMm-Nz6","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"zH-yaVTz7XfKzZn8HX3DN","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"lzA_txa-D0iZahZshPyh7","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"ROZyTYIQ4-y0FTqt0ktmr","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"QjVdhvuFmrCp1Q324Dosw","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"1v0HVTg79vuDzcN8W5h7l","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"DuLh5ui1BBtfhXTT-LNrK","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"O_nrKN3_guu0XpIIDXW5s","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Xjg2Ft-0ORhDzwXCqbImy","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"jRzJILE_CV5FG74iYhphr","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"oWPckJ8DUtaa1jZjaEWi-","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"YIBDoNVsQfzd6PqVcRhwX","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"x3JtO9WquhKMrVffh8JnR","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"CjTUMBKkyrJCOTHUuYV7u","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"rwNvEkovn2vFQ-RXctmxy","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"LomULfOpxE9VeeFkFHE-y","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"SYRLRoSU4N8k_J7c3OuYT","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"Vd_B6OKgZqR1DpyFVHD1f","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"vwoerCo9yFSRdAcj00xUP","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"Ujoo70JjnCVQXY7sotDjb","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"kZc_HBb1EkYODrfj1crQs","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"ryKtxiQTWVygZVsDlqLJ2","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>object draw. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"WwlFgbbV8MB1P_I2KfPex","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"KHxoZiP_IlqN7J6tOL5sL","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"SPQMkVrFAyaqg4AqV5cIv","name":"triggerEvent","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>trigger this event</p>","params":[],"returns":[]},{"id":"9RyN6Wp9cTT1DFXqzcpa1","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the renderable is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"izKBLBosSFlssSvYZQDEJ","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"cH9-RIKLggiir1l5EA13y","name":"Tween","brief":"","type":"ClassDoc","description":"<p>Javascript Tweening Engine<p>\nSuper simple, fast and easy to use tweening engine which incorporates optimised Robert Penne...","members":[{"id":"5TPTLSKwQoCmmxL3RYyx-","name":"Easing","brief":"","access":"public","type":"EnumDoc","description":"<p>Easing Function :<br></p>\n <p>\n Easing.Linear.None<br>\n Easing.Quadratic.In<br>\n Easing.Quadratic.Out<br>\n Easing.Quadrati..."},{"id":"ToAgHmCOmKVoq_nAibCOM","name":"Interpolation","brief":"","access":"public","type":"EnumDoc","description":"<p>Interpolation Function :<br></p>\n <p>\n Interpolation.Linear<br>\n Interpolation.Bezier<br>\n Interpolation.CatmullRom\n </p>"},{"id":"vf0zrIK-7Pq5q4FewUZor","name":"chain","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>chain the tween</p>","params":[{"identifier":"chainedTween","description":"<p>Tween(s) to be chained</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"NlD-1UmkK30MeELSXn75f","name":"constructor","brief":"","examples":[{"caption":"","code":"\n // add a tween to change the object pos.x and pos.y variable to 200 in 3 seconds\n tween = new me.Tween(myObject.pos).to({\n       x: 200,\n       y: 200,\n    }, {\n       duration: 3000,\n       easing: me.Tween.Easing.Bounce.Out,\n       autoStart : true\n }).onComplete(myFunc);\n"}],"scope":"instance","type":"MethodDoc","params":[{"identifier":"object","optional":false,"description":"<p>object on which to apply the tween</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"FRVyxxbhCdVV0Hd5GW5MD","name":"delay","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>delay the tween</p>","params":[{"identifier":"amount","optional":false,"description":"<p>delay amount expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"qo55R5ol0dYyzIAxamskI","name":"easing","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>set the easing function</p>","params":[{"identifier":"easing","optional":false,"description":"<p>easing function</p>","dataType":{"tokens":[{"value":"Tween.Easing","kind":"canonical"},{"value":"Easing","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"H79KuuhlJKH5_FMutsSLX","name":"interpolation","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>set the interpolation function</p>","params":[{"identifier":"interpolation","optional":false,"description":"<p>interpolation function</p>","dataType":{"tokens":[{"value":"Tween.Interpolation","kind":"canonical"},{"value":"Interpolation","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"RYP-b3PzP9LQXqTVcpYRy","name":"onComplete","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onComplete callback</p>","params":[{"identifier":"onCompleteCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"VrMrABvkY3oL7wlcfrTcb","name":"onStart","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onStart callback</p>","params":[{"identifier":"onStartCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"GM7iQu13ZKIOFYmmbQLAY","name":"onUpdate","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>onUpdate callback</p>","params":[{"identifier":"onUpdateCallback","optional":false,"description":"<p>callback</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"71suOK5Q8kaAL3DRRPvis","name":"repeat","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Repeat the tween</p>","params":[{"identifier":"times","optional":false,"description":"<p>amount of times the tween should be repeated</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"coXgrSIHjLFrh0jRy1juS","name":"start","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>start the tween</p>","params":[{"identifier":"time","optional":true,"description":"<p>the current time when the tween was started</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"wjqWvkcJ_hVJugZcUIe6U","name":"stop","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>stop the tween</p>","params":[],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"9jye6_VbBTZt5fpoCNIqT","name":"to","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>object properties to be updated and duration</p>","params":[{"identifier":"properties","optional":false,"description":"<p>hash of properties</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options","optional":true,"description":"<p>object of tween properties, or a duration if a numeric value is passed</p>","dataType":{"tokens":[{"value":"object | number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"object | %1"}},{"identifier":"options.duration","optional":true,"description":"<p>tween duration</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.easing","optional":true,"description":"<p>easing function</p>","dataType":{"tokens":[{"value":"Tween.Easing","kind":"canonical"},{"value":"Easing","kind":"link"}],"template":"%1"}},{"identifier":"options.delay","optional":true,"description":"<p>delay amount expressed in milliseconds</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.yoyo","optional":true,"description":"<p>allows the tween to bounce back to their original value when finished. To be used together with repeat to create endless l...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.repeat","optional":true,"description":"<p>amount of times the tween should be repeated</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.interpolation","optional":true,"description":"<p>interpolation function</p>","dataType":{"tokens":[{"value":"Tween.Interpolation","kind":"canonical"},{"value":"Interpolation","kind":"link"}],"template":"%1"}},{"identifier":"options.autoStart","optional":true,"description":"<p>allow this tween to start automatically. Otherwise call me.Tween.start().</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]},{"id":"ff-NvKXKUwU2h3On0rSVb","name":"yoyo","brief":"","access":"public","scope":"instance","see":["Tween#repeat"],"type":"MethodDoc","description":"<p>Allows the tween to bounce back to their original value when finished.\nTo be used together with repeat to create endless l...","params":[{"identifier":"yoyo","optional":false,"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>this instance for object chaining</p>","dataType":{"tokens":[{"value":"Tween","kind":"canonical"},{"value":"Tween","kind":"link"}],"template":"%1"}}]}]},{"id":"LMPDl2W9q-Z-uSmA5ujAf","name":"Vector2d","brief":"","type":"ClassDoc","description":"<p>a generic 2D Vector Object</p>","members":[{"id":"v0z7vlNze8VC07dMa0zSL","name":"x","brief":"","access":"public","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"A9RMBWD4XpsUIObg8DzOI","name":"y","brief":"","access":"public","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"KV9_oQM6cAe1c52ds8TRW","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4LwkdauXiZSAgwQBFUbus","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"sGaCCfJ7gu7abnXiETgfY","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"I2dSEKfBzY2_4xdkHVt8V","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"rMjdebIxY2j0fg-IM1pc-","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"0b6qIUoKqcmnnmJVy53zK","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"V4VkUue2KyUt6XQcWCFha","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"C_vifzP5M6svVrcAmZ8Pl","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"3oiMouUWlMewkddr-kkh0","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"nUGkgHKUUJjtFBSFjcc0O","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the x,y values of the passed vector to this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"ywNiz303lwRN2YFtOx-WV","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The cross product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"fciMn78TdbCVafzgIfhGy","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"SVrMpJV_ZAjYKnWQTDRrt","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"GKfEDtowezLSpSD8YMjQ8","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"T2-j5fKrS_C9-rgK-9Ctu","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if this vector is equal to the given values</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"gnN1QOaELUlkpV-Vc8Dig","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"5IfNT8RDe7BaXON70GsX6","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"oVRNf1rxgpBXAWLQHf714","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"3gciGKx_qqg3yRhYlNq21","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"MdCSX9QjY6rAMuRBRi0N4","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"w08kpJX_rVP8biNs7XpQF","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"sJrGe6K8SfMbOe_a_s209","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"U-SRFaZ0E_BrOTz2lsgb0","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector2d</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"gFpF-Vj_PFRq1Z_Xiap32","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"0rpItB7zD_sflc7RmJHqd","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"LUUyc7mA3yhgV9TimqJqw","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"W0o7uRVp68YLme5_txYN8","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"MjsadiruWowIy52VZruaw","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"d8w5kcgsHxPW6ZKgMa5dN","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"2q9R-R17iJNI5g8swKtKf","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"9YSRTpjYfX_gHCb2nXEQv","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"4f5qa0jMrqTYzwsRvvTv9","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"6t5kcIk722mJi4_ZizEK_","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"AbAxCogRy5RCp_wYNVdTM","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"iSXMheE2m-mvXM0XM_UCW","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"idGnVEHzpSQGU9i0BrFJ_","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"qWGftZmvihDlddSZWr2lJ","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"BYol5G8tZKGXStEVzPquX","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"s-7ddKDAeFbC78B_Iy4DF","name":"equals","brief":"","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"p6giKk1giHHBJeBCP4Bim","name":"Vector3d","brief":"","type":"ClassDoc","description":"<p>a generic 3D Vector Object</p>","members":[{"id":"LYPag7zjFAsqtkPohfoSp","name":"x","brief":"","access":"public","type":"PropertyDoc","description":"<p>x value of the vector</p>"},{"id":"YOwochH0skFzdnq3BFmuf","name":"y","brief":"","access":"public","type":"PropertyDoc","description":"<p>y value of the vector</p>"},{"id":"dqYLhvxdhApADVPpmC0r9","name":"z","brief":"","access":"public","type":"PropertyDoc","description":"<p>z value of the vector</p>"},{"id":"BRPL7twKNGi2aekeU6aQ9","name":"abs","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector values to absolute values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"a-ctpRCYV0D4s4PN1ImPk","name":"add","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"14qqY6YJqL9fNUDXMS_RM","name":"angle","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"3idIVrVi9caxrbZx7QLRC","name":"ceil","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"EhaQsJ9NqGcmGUVnB8oyx","name":"ceilSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Ceil this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"8s7y5BB5W2k3LufgZs0Tr","name":"clamp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp the vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"_DdW9ij7mA1Q93eMrFAP9","name":"clampSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clamp this vector value within the specified value range</p>","params":[{"identifier":"low","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"high","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"MIpmQ_fXnRmd7shc3X1Io","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a clone copy of this vector</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"CUa2RmiNQYY8rF27QA1vS","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>x value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>y value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","description":"<p>z value of the vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"vQrI-X6v0Vd5N75a4gFaw","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Copy the components of the given vector into this one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"UZFhBeS8ciMScs11zYR3c","name":"cross","brief":"","scope":"instance","type":"MethodDoc","description":"<p>calculate the cross product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"0tOaJOLXMDFW0tVMLRfCr","name":"distance","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance between this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"r5VJwuppl17z7zFqz1jaG","name":"div","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Divide this vector values by the passed value</p>","params":[{"identifier":"n","optional":false,"description":"<p>the value to divide the vector by</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"DgjkKeMb3kfTBtx13YLtL","name":"dot","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the dot product of this vector and the passed one</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>The dot product.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"CrlLGmOaMviVyoK-OE3ES","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return true if this vector is equal to the given values</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wgNQesWD_7IDdHjv5N0zn","name":"floor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"009fagQe2H2XfksdK2dC2","name":"floorSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Floor this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ltPXXbGma1RJ3xeanp7HZ","name":"length","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the length (magnitude) of this vector</p>","params":[],"returns":[{"description":"<p>the length of this vector</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"dc6lOHsdbhZI87l2frZ0y","name":"length2","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the square length of this vector</p>","params":[],"returns":[{"description":"<p>The length^2 of this vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"SvpNtWIis-_Q6WW5TaRN8","name":"lerp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Linearly interpolate between this vector and the given one.</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":false,"description":"<p>distance along the line (alpha = 0 will be this vector, and alpha = 1 will be the given one).</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"8xdCtZV_J9-E21WtI0TkI","name":"maxV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the maximum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"9zjdfXiip6PdIscs4FPDj","name":"minV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Update this vector with the minimum value between this and the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"OekDUcdilKKgOvis9ASC9","name":"negate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate the vector values</p>","params":[],"returns":[{"description":"<p>new me.Vector3d</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"_hoSnhUvTZrP6PVeHyUQM","name":"negateSelf","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Negate this vector values</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"tR1oQMBhN6NRkiviTnOyv","name":"normalize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>normalize this vector (scale the vector so that its magnitude is 1)</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"Gl_9IwydbAY5UHmxWkyni","name":"perp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>change this vector to be perpendicular to what it was before.<br>\n(Effectively rotates it 90 degrees in a clockwise direct...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"tMacthyM94IHKyW3bXEXj","name":"project","brief":"","scope":"instance","type":"MethodDoc","description":"<p>project this vector on to another vector.</p>","params":[{"identifier":"v","optional":false,"description":"<p>The vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"hh318DPc0zh0wpz5WoShg","name":"projectN","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Project this vector onto a vector of unit length.<br>\nThis is slightly more efficient than <code>project</code> when deali...","params":[{"identifier":"v","optional":false,"description":"<p>The unit vector to project onto.</p>","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"jIFj_meHA3UtnoyH0Povu","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this vector (counter-clockwise) by the specified angle (in radians) around the z axis</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around (on the same z axis)</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"ieQ9eXqgQD7tC7a51DrwJ","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the given scalar</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"1","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"RAE3r3UptKZPz8T6OhV4Q","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply this vector values by the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"G-yNQ0c0BaRLoReTlAXj4","name":"set","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to the given values<br></p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"z","optional":true,"default":"0","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"g2-28LEsFUtO4ZUeVKHLH","name":"setV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties using the passed vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"iSn0hobYPvWSJCJEqxn7P","name":"setZero","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the Vector x and y properties to 0</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"51J3nqBImUHpQYwkNErtx","name":"sub","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Substract the passed vector to this vector</p>","params":[{"identifier":"v","optional":false,"dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"MSVKN8AE9N1hGdyraTYMa","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into 2d coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"yf898YHdk5E0LBPO6vc2W","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Convert this vector into isometric coordinate space</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Vector3d","kind":"canonical"},{"value":"Vector3d","kind":"link"}],"template":"%1"}}]},{"id":"OIu0mHJwGHQE5CnjbgpgB","name":"toString","brief":"","scope":"instance","type":"MethodDoc","description":"<p>convert the object to a string representation</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"qmrCsWWcC9HG2GM_CsyCB","name":"equals","brief":"","type":"MethodDoc","description":"<p>return true if the two vectors are the same</p>","params":[{"identifier":"v","dataType":{"tokens":[{"value":"Vector2d | Vector3d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]}]},{"id":"kML216H9B0RhcmVpx31-5","name":"WebGLCompositor","brief":"","type":"ClassDoc","description":"<p>A WebGL Compositor object. This class handles all of the WebGL state<br>\nPushes texture regions or shape geometry into Web...","members":[{"id":"panxttRFoeMrprrmBUY1j","name":"activeShader","brief":"","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the active WebGL shader</p>"},{"id":"Ae2RM44-s_8SP4aPpbbja","name":"attributes","brief":"","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>an array of vertex attribute properties</p>"},{"id":"jqbYjMyrXyCdmjjxMb9Tb","name":"mode","brief":"","defaultValue":"gl.TRIANGLES","scope":"instance","see":["WebGLCompositor"],"type":"PropertyDoc","description":"<p>primitive type to render (gl.POINTS, gl.LINE_STRIP, gl.LINE_LOOP, gl.LINES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN, gl.TRIANGL..."},{"id":"M3i29yOtoyLNf8TzV4c9M","name":"vertexByteSize","brief":"","defaultValue":"0","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>the size of a single vertex in bytes\n(will automatically be calculated as attributes definitions are added)</p>"},{"id":"zcLZRqU89C8AzIcBDxp3p","name":"vertexSize","brief":"","defaultValue":"0","scope":"instance","see":["WebGLCompositor.addAttribute"],"type":"PropertyDoc","description":"<p>the size of a single vertex in floats\n(will automatically be calculated as attributes definitions are added)</p>"},{"id":"eHtNQIVuAjZGNohp2YQ_h","name":"addAttribute","brief":"","scope":"instance","type":"MethodDoc","description":"<p>add vertex attribute property definition to the compositor</p>","params":[{"identifier":"name","optional":false,"description":"<p>name of the attribute in the vertex shader</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"size","optional":false,"description":"<p>number of components per vertex attribute. Must be 1, 2, 3, or 4.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"type","optional":false,"description":"<p>data type of each component in the array</p>","dataType":{"tokens":[{"value":"GLenum","kind":"canonical"},{"value":"GLenum","kind":"canonical"}],"template":"%1"}},{"identifier":"normalized","optional":false,"description":"<p>whether integer data values should be normalized into a certain range when being cast to a float</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"offset","optional":false,"description":"<p>offset in bytes of the first component in the vertex attribute array</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"NQZy1TxvnW5bvYksfOOow","name":"addQuad","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a textured quad</p>","params":[{"identifier":"texture","optional":false,"description":"<p>Source texture atlas</p>","dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>Destination x-coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>Destination y-coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>Destination width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>Destination height</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"u0","optional":false,"description":"<p>Texture UV (u0) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v0","optional":false,"description":"<p>Texture UV (v0) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"u1","optional":false,"description":"<p>Texture UV (u1) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v1","optional":false,"description":"<p>Texture UV (v1) value.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"tint","optional":false,"description":"<p>tint color to be applied to the texture in UINT32 (argb) format</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"aNIY6xZH_uH8WwXsKRVdr","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>delete the given WebGL texture</p>","params":[{"identifier":"texture","optional":true,"description":"<p>a WebGL texture to delete</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":true,"description":"<p>Texture unit to delete</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"6-bpyZqtlkF1ZYvSii3fK","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the WebGL texture associated to the given texture unit</p>","params":[{"identifier":"unit","optional":false,"description":"<p>Texture unit to which a texture is bound</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>texture a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}}]},{"id":"LaVqZaSYWZk36eiiwDd9J","name":"bindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>assign the given WebGL texture to the current batch</p>","params":[{"identifier":"texture","optional":false,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":false,"description":"<p>Texture unit to which the given texture is bound</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"0sd3RBAniWeCvDA1VtiEm","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clear the frame buffer</p>","params":[],"returns":[]},{"id":"lC7b4xzp2rayPFhPSWOyZ","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Specify the color values used when clearing color buffers. The values are clamped between 0 and 1.</p>","params":[{"identifier":"r","optional":true,"default":"0","description":"<p>the red color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"g","optional":true,"default":"0","description":"<p>the green color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"default":"0","description":"<p>the blue color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"a","optional":true,"default":"0","description":"<p>the alpha color value used when the color buffers are cleared</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"dMEXTRq6Gi-_V1Mj_-rie","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"renderer","optional":false,"description":"<p>the current WebGL renderer session</p>","dataType":{"tokens":[{"value":"WebGLRenderer","kind":"canonical"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"DEk3cRPEFZ-yFKFtBLuAW","name":"createTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Create a WebGL texture from an image</p>","params":[{"identifier":"unit","optional":false,"description":"<p>Destination texture unit</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image | HTMLCanvasElement | ImageData | Array<Uint8Array> | Array<Float32Array>","kind":"canonical"},{"value":"Image","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"ImageData","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Uint8Array","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Float32Array","kind":"canonical"}],"template":"%1 | %2 | %3 | %4<%5> | %6<%7>"}},{"identifier":"filter","optional":false,"description":"<p>gl.LINEAR or gl.NEAREST</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":true,"default":"\"no-repeat\"","description":"<p>Image repeat behavior (see {@link ImageLayer#repeat})</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"w","optional":true,"description":"<p>Source image width (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":true,"description":"<p>Source image height (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"b","optional":true,"description":"<p>Source image border (Only use with UInt8Array[] or Float32Array[] source image)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"premultipliedAlpha","optional":true,"default":"true","description":"<p>Multiplies the alpha channel into the other color channels</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"mipmap","optional":true,"default":"true","description":"<p>Whether mipmap levels should be generated for this texture</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}}]},{"id":"BM4q8snLYpsJ5xQBi3Lte","name":"drawVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw an array of vertices</p>","params":[{"identifier":"mode","optional":false,"description":"<p>primitive type to render (gl.POINTS, gl.LINE_STRIP, gl.LINE_LOOP, gl.LINES, gl.TRIANGLE_STRIP, gl.TRIANGLE_FAN, gl.TRIANGL...","dataType":{"tokens":[{"value":"GLenum","kind":"canonical"},{"value":"GLenum","kind":"canonical"}],"template":"%1"}},{"identifier":"verts","optional":false,"description":"<p>vertices</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}},{"identifier":"vertexCount","optional":true,"default":"verts.length","description":"<p>amount of points defined in the points array</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"UBDdWbIpvDKhz1YRDugEy","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Flush batched texture operations to the GPU</p>","params":[{"identifier":"mode","optional":true,"default":"gl.TRIANGLES","description":"<p>the GL drawing mode</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VSDkKTpGxIvgZsazmN8Db","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"4t67NGc8w54S6TmNplbHC","name":"setViewport","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Sets the viewport</p>","params":[{"identifier":"x","optional":false,"description":"<p>x position of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y position of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>height of viewport</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"VA5IsF3_Mqq2q56oA9qon","name":"unbindTexture2D","brief":"","scope":"instance","type":"MethodDoc","description":"<p>unbind the given WebGL texture, forcing it to be reuploaded</p>","params":[{"identifier":"texture","optional":true,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"WebGLTexture","kind":"canonical"},{"value":"WebGLTexture","kind":"canonical"}],"template":"%1"}},{"identifier":"unit","optional":true,"description":"<p>a WebGL texture</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>unit the unit number that was associated with the given texture</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"vbFbt52PJrtY5wUKUEEQn","name":"useShader","brief":"","scope":"instance","see":["GLShader"],"type":"MethodDoc","description":"<p>Select the shader to use for compositing</p>","params":[{"identifier":"shader","optional":false,"description":"<p>a reference to a GLShader instance</p>","dataType":{"tokens":[{"value":"GLShader","kind":"canonical"},{"value":"GLShader","kind":"link"}],"template":"%1"}}],"returns":[]}]},{"id":"f26nsMS88NAJc66e0kFl5","name":"WebGLRenderer","brief":"","type":"ClassDoc","description":"<p>a WebGL renderer object</p>","extends":["Renderer"],"members":[{"id":"tz6Ev0E1qji_KbMeikx4o","name":"compositors","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The list of active compositors</p>"},{"id":"iBpvZGC_BSUOhhPwjstYn","name":"currentCompositor","brief":"","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>The current compositor used by the renderer</p>"},{"id":"KxrYaJoi54iP0KPGZ-Ong","name":"currentTransform","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The current transformation matrix used for transformations on the overall scene</p>"},{"id":"v5QUks00DlHtLYh0PpnZM","name":"gl","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The WebGL context</p>"},{"id":"AC5cfR7XDvBxJVnp2_c2a","name":"GPURenderer","brief":"","defaultValue":"null","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The renderer string of the underlying graphics driver.</p>"},{"id":"MIrGg5oY7vHJQuXfJpdEx","name":"GPUVendor","brief":"","defaultValue":"null","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The vendor string of the underlying graphics driver.</p>"},{"id":"6rNPLnaUPzBji63wE3tPE","name":"isContextValid","brief":"","defaultValue":"true\n type {boolean}","scope":"instance","type":"PropertyDoc","description":"<p>true if the current rendering context is valid</p>"},{"id":"urfzGwKpX5qVJG5dSjr_V","name":"maxTextures","brief":"","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>Maximum number of texture unit supported under the current context</p>"},{"id":"jkkQ4IEFIOeEwYZvJDODX","name":"path2D","brief":"","scope":"instance","type":"PropertyDoc","description":"<p>The Path2D instance used by the renderer to draw primitives</p>"},{"id":"DiywGvIw-IoiZ7YNw9UMH","name":"settings","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>The given constructor options</p>"},{"id":"8uZKItJ109B-RLISQ7Y6j","name":"WebGLVersion","brief":"","defaultValue":"1","readonly":true,"scope":"instance","type":"PropertyDoc","description":"<p>The WebGL version used by this renderer (1 or 2)</p>"},{"id":"L9gjFMxBdhYO-0VnWwqLB","name":"clear","brief":"","scope":"instance","type":"MethodDoc","description":"<p>prepare the framebuffer for drawing a new frame</p>","params":[],"returns":[]},{"id":"AUpoZA_02zX6viwa89_8E","name":"clearColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Clears the gl context with the given color.</p>","params":[{"identifier":"color","optional":true,"default":"\"#000000\"","description":"<p>CSS color.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"opaque","optional":true,"default":"false","description":"<p>Allow transparency [default] or clear the surface completely [true]</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"4uA_0B_hkar0ieTQlqPZ-","name":"clearMask","brief":"","scope":"instance","see":["WebGLRenderer#setMask"],"type":"MethodDoc","description":"<p>disable (remove) the rendering mask set through setMask.</p>","params":[],"returns":[]},{"id":"sZ9gROT_AzBL_UVqcRLGt","name":"clearRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Erase the pixels in the given rectangular area by setting them to transparent black (rgba(0,0,0,0)).</p>","params":[{"identifier":"x","optional":false,"description":"<p>x axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>y axis of the coordinate for the rectangle starting point.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"description":"<p>The rectangle's width.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>The rectangle's height.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"-7UOojc0zngiRpxPHqEER","name":"clearTint","brief":"","scope":"instance","see":["Renderer#setTint"],"type":"MethodDoc","description":"<p>clear the rendering tint set through setTint.</p>","params":[],"returns":[]},{"id":"gv6suwrilADGzJlcOcdUJ","name":"clipRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clip the given region from the original canvas. Once a region is clipped,\nall future drawing will be limited to the clippe...","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Syz6pTrmThiMxgyPpsT0p","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"options","optional":false,"description":"<p>The renderer parameters</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"options.width","description":"<p>The width of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.height","description":"<p>The height of the canvas without scaling</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.canvas","optional":true,"description":"<p>The html canvas to draw to on screen</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"options.doubleBuffering","optional":true,"default":"false","description":"<p>Whether to enable double buffering</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.antiAlias","optional":true,"default":"false","description":"<p>Whether to enable anti-aliasing</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.failIfMajorPerformanceCaveat","optional":true,"default":"true","description":"<p>If true, the renderer will switch to CANVAS mode if the performances of a WebGL context would be dramatically lower than t...","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.transparent","optional":true,"default":"false","description":"<p>Whether to enable transparency on the canvas (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.subPixel","optional":true,"default":"false","description":"<p>Whether to enable subpixel renderering (performance hit when enabled)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.preferWebGL1","optional":true,"default":"false","description":"<p>if true the renderer will only use WebGL 1</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"options.powerPreference","optional":true,"default":"\"default\"","description":"<p>a hint to the user agent indicating what configuration of GPU is suitable for the WebGL context (&quot;default&quot;, &quo...","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"options.zoomX","optional":true,"default":"width","description":"<p>The actual width of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.zoomY","optional":true,"default":"height","description":"<p>The actual height of the canvas with scaling applied</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"options.compositor","optional":true,"description":"<p>A class that implements the compositor API</p>","dataType":{"tokens":[{"value":"WebGLCompositor","kind":"canonical"},{"value":"WebGLCompositor","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"rMkmH7a79DxxdNRe2yYy4","name":"createPattern","brief":"","examples":[{"caption":"","code":"\n var tileable   = renderer.createPattern(image, \"repeat\");\n var horizontal = renderer.createPattern(image, \"repeat-x\");\n var vertical   = renderer.createPattern(image, \"repeat-y\");\n var basic      = renderer.createPattern(image, \"no-repeat\");\n"}],"scope":"instance","see":["ImageLayer#repeat"],"type":"MethodDoc","description":"<p>Create a pattern with the specified repetition</p>","params":[{"identifier":"image","optional":false,"description":"<p>Source image</p>","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"repeat","optional":false,"description":"<p>Define how the pattern should be repeated</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}}]},{"id":"YMecUx5Ncq6JPo_xYrLO9","name":"drawImage","brief":"","examples":[{"caption":"","code":"\n // Position the image on the canvas:\n renderer.drawImage(image, dx, dy);\n // Position the image on the canvas, and specify width and height of the image:\n renderer.drawImage(image, dx, dy, dWidth, dHeight);\n // Clip the image and position the clipped part on the canvas:\n renderer.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>Draw an image to the gl context</p>","params":[{"identifier":"image","optional":false,"description":"<p>An element to draw into the context. The specification permits any canvas image source (CanvasImageSource), specifically, ...","dataType":{"tokens":[{"value":"Image","kind":"canonical"},{"value":"Image","kind":"canonical"}],"template":"%1"}},{"identifier":"sx","optional":false,"description":"<p>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sy","optional":false,"description":"<p>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sw","optional":false,"description":"<p>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rect...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"sh","optional":false,"description":"<p>The height of the sub-rectangle of the source image to draw into the destination context.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dx","optional":false,"description":"<p>The X coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dy","optional":false,"description":"<p>The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dw","optional":false,"description":"<p>The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"dh","optional":false,"description":"<p>The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the imag...","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"8d0r9fSmaDpjhNnzaHFp6","name":"drawPattern","brief":"","scope":"instance","see":["WebGLRenderer#createPattern"],"type":"MethodDoc","description":"<p>Draw a pattern within the given rectangle.</p>","params":[{"identifier":"pattern","optional":false,"description":"<p>Pattern object</p>","dataType":{"tokens":[{"value":"TextureAtlas","kind":"canonical"},{"value":"TextureAtlas","kind":"link"}],"template":"%1"}},{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"zhaVyjI-kGM53Yjgn0whw","name":"fill","brief":"","scope":"instance","type":"MethodDoc","description":"<p>fill the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to fill</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}}],"returns":[]},{"id":"g4FRtSnxXHYpVWGd6F3JP","name":"fillArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"ZziYVMN6_yEApudMiULMV","name":"fillEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"S9jpTL1mdOxx5V0klWYbC","name":"fillLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"OofOWnvr7fBEqXMtdaIR-","name":"fillPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Fill a me.Polygon on the screen</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"JdN_RK1rohp8lprfaXgRB","name":"fillRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"EgorhqKwTaP0BdOAi93Sb","name":"fillRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a rounded filled rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"XrdgT0sozU8MERgd55zx8","name":"flush","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Flush the compositor to the frame buffer</p>","params":[],"returns":[]},{"id":"vzUVVsjAKj2gwd6mEnuKM","name":"getBlendMode","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the current blend mode for this renderer</p>","params":[],"returns":[{"description":"<p>blend mode</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}]},{"id":"bDbI6B34npWSLsm72X-e9","name":"getCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the system canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"mjF1tDS-JShAn9DL1YDvf","name":"getColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the current fill &amp; stroke style color.</p>","params":[],"returns":[{"description":"<p>current global color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}}]},{"id":"mI0cLlspQZBslLeOZAphq","name":"getContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the WebGLContext instance for the renderer\nreturn a reference to the system 2d Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"Ev3ix2wXytiVhfOjLhSk2","name":"getContext2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the 2D Context object of the given Canvas<br>\nAlso configures anti-aliasing and blend modes based on constructor o...","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}}]},{"id":"8B-v--QboUiOAUCLg9zau","name":"getContextGL","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the WebGL Context object of the given Canvas</p>","params":[{"identifier":"canvas","optional":false,"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}},{"identifier":"transparent","optional":true,"default":"true","description":"<p>use false to disable transparency</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"HCpBopwepsEWpP3sPhRAV","name":"getGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Return the global alpha</p>","params":[],"returns":[{"description":"<p>global alpha value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"OY-F_rOHIg3EcEafTehkf","name":"getHeight","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the height of the system Canvas</p>","params":[],"returns":[{"description":"<p>height of the system Canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"JNhrpORiBnpoONUMMDPLo","name":"getScreenCanvas","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"}],"template":"%1"}}]},{"id":"pQ41J4pOjzx-Hj9Hd2SGU","name":"getScreenContext","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return a reference to the screen canvas corresponding WebGL Context</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}]},{"id":"uDI6Du6alr6SKhmO1w2_n","name":"getWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the width of the system Canvas</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"E8SdYPqNnmFEe3ssUBl6d","name":"globalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the current global alpha</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"HTPWIHXYYpgiWM03y-47V","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if the given rect or bounds overlaps with the renderer screen coordinates</p>","params":[{"identifier":"bounds","optional":false,"dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"_6LUbPn9H_JZrLdELKP7O","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset context state</p>","params":[],"returns":[]},{"id":"enMBTYB8tJyoxWTCPgtZW","name":"resetTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset the gl transform to identity</p>","params":[],"returns":[]},{"id":"174Ulug04yASCWzl9j4zz","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resizes the system canvas</p>","params":[{"identifier":"width","optional":false,"description":"<p>new width of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"description":"<p>new height of the canvas</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"cy3P3ybA-skd_6w072lxn","name":"restore","brief":"","scope":"instance","type":"MethodDoc","description":"<p>restores the canvas context</p>","params":[],"returns":[]},{"id":"OKEsBZh5DnwFTm-cCpERp","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>rotates the uniform matrix</p>","params":[{"identifier":"angle","optional":false,"description":"<p>in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"EsnZYwjNgYp3m9SmFmLdn","name":"save","brief":"","scope":"instance","type":"MethodDoc","description":"<p>saves the canvas context</p>","params":[],"returns":[]},{"id":"N-v_4DTBuiu6I17sEUm0-","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scales the uniform matrix</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"tFt_R7wBdiRX4AU8PsdJq","name":"setAntiAlias","brief":"","scope":"instance","type":"MethodDoc","description":"<p>enable/disable image smoothing (scaling interpolation) for the given context</p>","params":[{"identifier":"context","optional":false,"dataType":{"tokens":[{"value":"CanvasRenderingContext2D","kind":"canonical"},{"value":"CanvasRenderingContext2D","kind":"canonical"}],"template":"%1"}},{"identifier":"enable","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"GKkMIcJMKzq8cSFpAsJ82","name":"setBlendMode","brief":"","scope":"instance","see":["https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"],"type":"MethodDoc","description":"<p>set a blend mode for the given context. <br>\nSupported blend mode between Canvas and WebGL remderer : <br></p>\n<ul>\n<li>&q...","params":[{"identifier":"mode","optional":true,"default":"\"normal\"","description":"<p>blend mode : &quot;normal&quot;, &quot;multiply&quot;, &quot;lighter&quot;, &quot;additive&quot;, &quot;screen&quot;</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"gl","optional":true,"dataType":{"tokens":[{"value":"WebGLRenderingContext","kind":"canonical"},{"value":"WebGLRenderingContext","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"ehNZ3lbgIDL7IT5CBDANe","name":"setColor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the current fill &amp; stroke style color.\nBy default, or upon reset, the value is set to #000000.</p>","params":[{"identifier":"color","optional":false,"description":"<p>css color string.</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"uSFhBhUMYa3SfB8_92YbZ","name":"setCompositor","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the active compositor for this renderer</p>","params":[{"identifier":"compositor","optional":false,"default":"\"default\"","description":"<p>a compositor name or instance</p>","dataType":{"tokens":[{"value":"WebGLCompositor | string","kind":"canonical"},{"value":"WebGLCompositor","kind":"link"}],"template":"%1 | string"}}],"returns":[]},{"id":"IJd7SXOUESz-6vvOCO9XW","name":"setGlobalAlpha","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the global alpha</p>","params":[{"identifier":"alpha","optional":false,"description":"<p>0.0 to 1.0 values accepted.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"yQ2-sBnJ5yKv5zRjXXmIO","name":"setLineWidth","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Set the line width</p>","params":[{"identifier":"width","optional":false,"description":"<p>Line width</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"rfVzaxxY0zspA6_gWIugF","name":"setMask","brief":"","scope":"instance","type":"MethodDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ...","params":[{"identifier":"mask","optional":true,"description":"<p>a shape defining the mask to be applied</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"invert","optional":true,"default":"false","description":"<p>either the given shape should define what is visible (default) or the opposite</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"sOrUi1Jg2zE_SgEvPwqnG","name":"setProjection","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set/change the current projection matrix (WebGL only)</p>","params":[{"identifier":"matrix","optional":false,"dataType":{"tokens":[{"value":"Matrix3d","kind":"canonical"},{"value":"Matrix3d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"HePPOVuW6xf8m8TfiHXPI","name":"setTint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set a coloring tint for sprite based renderables</p>","params":[{"identifier":"tint","optional":false,"description":"<p>the tint color</p>","dataType":{"tokens":[{"value":"Color","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1"}},{"identifier":"alpha","optional":true,"description":"<p>an alpha value to be applied to the tint</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"Cs6bkg50k4OFVQn3_QCSx","name":"setTransform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Reset (overrides) the renderer transformation matrix to the\nidentity one, and then apply the given transformation matrix.</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"D1kgLGhxkfdKofTDClGXn","name":"stroke","brief":"","scope":"instance","type":"MethodDoc","description":"<p>stroke the given shape</p>","params":[{"identifier":"shape","optional":false,"description":"<p>a shape object to stroke</p>","dataType":{"tokens":[{"value":"Rect | RoundRect | Polygon | Line | Ellipse","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"RoundRect","kind":"link"},{"value":"Polygon","kind":"link"},{"value":"Line","kind":"link"},{"value":"Ellipse","kind":"link"}],"template":"%1 | %2 | %3 | %4 | %5"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"EI7g-RtzZ1QxoYbphAPCw","name":"strokeArc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an arc at the specified coordinates with given radius, start and end points</p>","params":[{"identifier":"x","optional":false,"description":"<p>arc center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>arc center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"start","optional":false,"description":"<p>start angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"end","optional":false,"description":"<p>end angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"antiClockwise","optional":true,"default":"false","description":"<p>draw arc anti-clockwise</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}},{"identifier":"fill","optional":true,"default":"false","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"zjS4C0kGzJvTJwLpggTeB","name":"strokeEllipse","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke an ellipse at the specified coordinates with given radius</p>","params":[{"identifier":"x","optional":false,"description":"<p>ellipse center point x-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>ellipse center point y-axis</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>horizontal radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>vertical radius of the ellipse</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"6zZbaGcax5i1XCYBI8eNH","name":"strokeLine","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a line of the given two points</p>","params":[{"identifier":"startX","optional":false,"description":"<p>the start x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"startY","optional":false,"description":"<p>the start y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endX","optional":false,"description":"<p>the end x coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"endY","optional":false,"description":"<p>the end y coordinate</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"jJGfMzBi5s4bEo_cLf2nP","name":"strokePolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a me.Polygon on the screen with a specified color</p>","params":[{"identifier":"poly","optional":false,"description":"<p>the shape to draw</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"5Ypqot2YuUYNgcQbzKbE_","name":"strokeRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Draw a stroke rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"RiUs5zKwR-QYDX616FTIo","name":"strokeRoundRect","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Stroke a rounded rectangle at the specified coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"radius","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"fill","optional":true,"default":"false","description":"<p>also fill the shape with the current color if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"f94-XC5_kRkIduhAoVwDY","name":"tint","brief":"","scope":"instance","type":"MethodDoc","description":"<p>tint the given image or canvas using the given color</p>","params":[{"identifier":"src","optional":false,"description":"<p>the source image to be tinted</p>","dataType":{"tokens":[{"value":"HTMLImageElement | HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLImageElement","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2 | %3"}},{"identifier":"color","optional":false,"description":"<p>the color that will be used to tint the image</p>","dataType":{"tokens":[{"value":"Color | string","kind":"canonical"},{"value":"Color","kind":"link"}],"template":"%1 | string"}},{"identifier":"mode","optional":true,"default":"\"multiply\"","description":"<p>the composition mode used to tint the image</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}}],"returns":[{"description":"<p>a new canvas element representing the tinted image</p>","dataType":{"tokens":[{"value":"HTMLCanvasElement | OffscreenCanvas","kind":"canonical"},{"value":"HTMLCanvasElement","kind":"canonical"},{"value":"OffscreenCanvas","kind":"canonical"}],"template":"%1 | %2"}}]},{"id":"xAs-IEJZGiD71jCqUycEO","name":"transform","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Multiply given matrix into the renderer tranformation matrix</p>","params":[{"identifier":"mat2d","optional":false,"description":"<p>Matrix to transform by</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"YnRq5rRtQ8G_VsnBdSu3a","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Translates the uniform matrix by the given coordinates</p>","params":[{"identifier":"x","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"tstKtFQzT5qZfuYrvrkRc","name":"World","brief":"","type":"ClassDoc","description":"<p>an object representing the physic world, and responsible for managing and updating all childs and physics</p>","extends":["Container"],"members":[{"id":"RoxqnEZHv0hkSeEd4kNSo","name":"alpha","brief":"","access":"public","defaultValue":"1.0","scope":"instance","see":["Renderable#setOpacity","Renderable#getOpacity"],"type":"PropertyDoc","description":"<p>Define the renderable opacity<br>\nSet to zero if you do not wish an object to be drawn</p>"},{"id":"grYOhZ9eOi5bJr8i1xcGs","name":"alwaysUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object will always update, even when outside of the viewport<br></p>"},{"id":"p1lqa6wlJlWoz7AkTumQj","name":"ancestor","brief":"","access":"public","defaultValue":"undefined","scope":"instance","type":"PropertyDoc","description":"<p>a reference to the parent object that contains this renderable</p>"},{"id":"sikhrcOoKw01VE368k-ze","name":"anchorPoint","brief":"","access":"public","defaultValue":"<0.5,0.5>","scope":"instance","type":"PropertyDoc","description":"<p>The anchor point is used for attachment behavior, and/or when applying transformations.<br>\nThe coordinate system places t..."},{"id":"gv0go5j3hf3qmVwTAhgug","name":"autoDepth","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children z index should automatically be managed by the parent container</p>"},{"id":"abEIMrBf2nO7I07DP9cKP","name":"autoSort","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the children list should be automatically sorted when adding a new child</p>"},{"id":"xfb1qRDO6l8lm3LtS4o95","name":"autoTransform","brief":"","access":"public","defaultValue":"true","examples":[{"caption":"","code":"\n // enable \"automatic\" transformation when the object is activated\n onActivateEvent: function () {\n     // reset the transformation matrix\n     this.currentTransform.identity();\n     // ensure the anchor point is the renderable center\n     this.anchorPoint.set(0.5, 0.5);\n     // enable auto transform\n     this.autoTransform = true;\n     ....\n }\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>When enabled, an object container will automatically apply\nany defined transformation before calling the child draw method..."},{"id":"CDhuQ-Xolv36MC4itcszX","name":"backgroundColor","brief":"","access":"public","defaultValue":"(0, 0, 0, 0.0)","examples":[{"caption":"","code":"\n // add a red background color to this container\n this.backgroundColor.setColor(255, 0, 0);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a background color for this container</p>"},{"id":"b48JvNu7cpfF_ND6io-S7","name":"blendMode","brief":"","access":"public","defaultValue":"\"normal\"","scope":"instance","see":["CanvasRenderer#setBlendMode","WebGLRenderer#setBlendMode"],"type":"PropertyDoc","description":"<p>the blend mode to be applied to this renderable (see renderer setBlendMode for available blend mode)</p>"},{"id":"uzMsXCt8RzRbtfTvTExv_","name":"bodies","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the active physic bodies in this simulation</p>"},{"id":"Khfq2b4r0_w10n5a73bHP","name":"body","brief":"","access":"public","examples":[{"caption":"","code":"\n  // define a new Player Class\n  class PlayerEntity extends me.Sprite {\n      // constructor\n      constructor(x, y, settings) {\n          // call the parent constructor\n          super(x, y , settings);\n\n          // define a basic walking animation\n          this.addAnimation(\"walk\",  [...]);\n          // define a standing animation (using the first frame)\n          this.addAnimation(\"stand\",  [...]);\n          // set the standing animation as default\n          this.setCurrentAnimation(\"stand\");\n\n          // add a physic body\n          this.body = new me.Body(this);\n          // add a default collision shape\n          this.body.addShape(new me.Rect(0, 0, this.width, this.height));\n          // configure max speed, friction, and initial force to be applied\n          this.body.setMaxVelocity(3, 15);\n          this.body.setFriction(0.4, 0);\n          this.body.force.set(3, 0);\n\n          // set the display to follow our position on both axis\n          me.game.viewport.follow(this.pos, me.game.viewport.AXIS.BOTH);\n      }\n\n      ...\n\n }\n"}],"scope":"instance","see":["Body"],"type":"PropertyDoc","description":"<p>the renderable physic body</p>"},{"id":"XQoiejqOuNij15lYgQfaq","name":"bottom","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>bottom coordinate of the Rectangle</p>"},{"id":"4oAZDsYseTihtqDNlypfQ","name":"broadphase","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the instance of the game world quadtree used for broadphase</p>"},{"id":"2g5GD-F8DHuszoMQov_Za","name":"centerX","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the horizontal axis</p>"},{"id":"bnClKR8y-yTEnl5BwG_2G","name":"centerY","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>absolute center of this rectangle on the vertical axis</p>"},{"id":"yjG06UY3HX4SY_KPoYjcx","name":"clipping","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container draw operation should clip his children to its own bounds</p>"},{"id":"RGDEt-mCR6OSmqQJM-jv4","name":"currentTransform","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>the renderable default transformation matrix</p>"},{"id":"gLDCjo6ajge9HqwWvxtmU","name":"enableChildBoundsUpdate","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify if the container bounds should automatically take in account\nall child bounds when updated (this is expensive and ..."},{"id":"uAp3YXKfCZqLFlMVtJYrz","name":"floating","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>If true, this renderable will be rendered using screen coordinates,\nas opposed to world coordinates. Use this, for example..."},{"id":"as4Xmd-Z7rKKOb4nZvLTJ","name":"fps","brief":"","access":"public","defaultValue":"60","scope":"instance","see":["timer.maxfps"],"type":"PropertyDoc","description":"<p>the rate at which the game world is updated,\nmay be greater than or lower than the display fps</p>"},{"id":"1i4J3ieTiLCb0dGjkJms2","name":"gravity","brief":"","access":"public","defaultValue":"<0,0.98>","scope":"instance","type":"PropertyDoc","description":"<p>world gravity</p>"},{"id":"zApLdmiRhEePxfv06Ovxw","name":"GUID","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>(G)ame (U)nique (Id)entifier&quot; <br>\na GUID will be allocated for any renderable object added <br>\nto an object contain..."},{"id":"L16EIx6b_uVMOSAKULbkm","name":"height","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>height of the Rectangle</p>"},{"id":"TUXJoWfGbGb2nHOEKVJMR","name":"inViewport","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether the renderable object is visible and within the viewport</p>"},{"id":"1_RSIxuQUzH7voYL9EJIj","name":"isDirty","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>when true the renderable will be redrawn during the next update cycle</p>"},{"id":"Vrr44gnFkqH2nUE6BN45u","name":"isFlippedX","brief":"","access":"public","scope":"instance","see":["Renderable#flipX"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the horizontal axis</p>"},{"id":"BlVIrmSrzLl54AxnTY59_","name":"isFlippedY","brief":"","access":"public","scope":"instance","see":["Renderable#flipY"],"type":"PropertyDoc","description":"<p>returns true if this renderable is flipped on the vertical axis</p>"},{"id":"8oLLJNdJYRZUGs1UKc4id","name":"isFloating","brief":"","access":"public","scope":"instance","see":["Renderable#floating"],"type":"PropertyDoc","description":"<p>Whether the renderable object is floating, or contained in a floating container</p>"},{"id":"1c4lgSPwx3BJXlULt2ZJa","name":"isKinematic","brief":"","access":"public","defaultValue":"true","scope":"instance","type":"PropertyDoc","description":"<p>If true then physic collision and input events will not impact this renderable</p>"},{"id":"cApoSxSyZUz8bXuLR6KSW","name":"isPersistent","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>make the renderable object persistent over level changes<br></p>"},{"id":"pkmm4Ypn9FU-DetXgSiSw","name":"left","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>left coordinate of the Rectangle</p>"},{"id":"1eO4qKzR7vjPmJRpEQoyH","name":"mask","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n // apply a mask in the shape of a Star\n myNPCSprite.mask = new me.Polygon(myNPCSprite.width / 2, 0, [\n    // draw a star\n    {x: 0, y: 0},\n    {x: 14, y: 30},\n    {x: 47, y: 35},\n    {x: 23, y: 57},\n    {x: 44, y: 90},\n    {x: 0, y: 62},\n    {x: -44, y: 90},\n    {x: -23, y: 57},\n    {x: -47, y: 35},\n    {x: -14, y: 30}\n ]);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>A mask limits rendering elements to the shape and position of the given mask object.\nSo, if the renderable is larger than ..."},{"id":"ap78MNfpRChBjmZoKTkts","name":"name","brief":"","access":"public","defaultValue":"\"\"","scope":"instance","type":"PropertyDoc","description":"<p>The name of the renderable</p>"},{"id":"OB589rDbAiNvG-NstUqG0","name":"onVisibilityChange","brief":"","access":"public","defaultValue":"undefined","examples":[{"caption":"","code":"\n this.onVisibilityChange = function(inViewport) {\n     if (inViewport === true) {\n         console.log(\"object has entered the in a camera viewport!\");\n     }\n };\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>an event handler that is called when the renderable leave or enter a camera viewport</p>"},{"id":"qfHTt-lFfzHOGT8a3RZZm","name":"points","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Array of points defining the Polygon <br>\nNote: If you manually change <code>points</code>, you <strong>must</strong> call..."},{"id":"1dTdSUsf6lUxhfq6TEblc","name":"pos","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>Position of the Renderable relative to its parent container</p>"},{"id":"PexkNAaD0S2E-zlscH0Il","name":"preRender","brief":"","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Specify the rendering method for tile layers. <br>\nif false visible part of the layers are rendered dynamically,<br>\nif tr..."},{"id":"bF6OREWpSen76ySivfcmI","name":"right","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>right coordinate of the Rectangle</p>"},{"id":"c7ieAoNBrRRyWXNPJAxc5","name":"root","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>whether the container is the root of the scene</p>"},{"id":"DCz78pb-yJD7_727ELmg8","name":"sortOn","brief":"","access":"public","defaultValue":"me.game.sortOn","scope":"instance","type":"PropertyDoc","description":"<p>The property of the child object that should be used to sort on <br>\nvalue : &quot;x&quot;, &quot;y&quot;, &quot;z&quot;</p>"},{"id":"hvNFXIrMnjfWjQm0OWyWw","name":"tint","brief":"","access":"public","defaultValue":"(255, 255, 255)","examples":[{"caption":"","code":"\n // add a red tint to this renderable\n this.tint.setColor(255, 128, 128);\n // remove the tint\n this.tint.setColor(255, 255, 255);\n"}],"scope":"instance","type":"PropertyDoc","description":"<p>define a tint for this renderable. a (255, 255, 255) r, g, b value will remove the tint effect.</p>"},{"id":"xTOyub9YGOseeJzhyBWaC","name":"top","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>top coordinate of the Rectangle</p>"},{"id":"vp9cD7O0S1mGF0r8hiXz-","name":"updateWhenPaused","brief":"","access":"public","defaultValue":"false","scope":"instance","type":"PropertyDoc","description":"<p>Whether to update this object when the game is paused.</p>"},{"id":"imjmv5MmAQiWPQt7J4N6L","name":"width","brief":"","access":"public","scope":"instance","type":"PropertyDoc","description":"<p>width of the Rectangle</p>"},{"id":"JRzhuLMuX3ult9WBaiMOR","name":"addBody","brief":"","scope":"instance","see":["Container.addChild"],"type":"MethodDoc","description":"<p>Add a physic body to the game world</p>","params":[{"identifier":"body","optional":false,"dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this game world</p>","dataType":{"tokens":[{"value":"World","kind":"canonical"},{"value":"World","kind":"link"}],"template":"%1"}}]},{"id":"JztDPFvR1Jhu3rVMBJBAN","name":"addChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container <br>\nif auto-sort is disable, the object will be appended at the bottom of the list.\nAdding a...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"z","optional":true,"description":"<p>forces the z index of the child to the specified value</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"EGVz1u0pQwG43cHtlkBVt","name":"addChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Add a child to the container at the specified index<br>\n(the list won't be sorted after insertion)</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the added child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"wd0nzXUAwhYVdamdbaHHr","name":"angleTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the angle to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>angle in radians</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"iQ8Bd5eu-veiof2WXeS6D","name":"centerOn","brief":"","scope":"instance","type":"MethodDoc","description":"<p>center the rectangle position around the given coordinates</p>","params":[{"identifier":"x","optional":false,"description":"<p>the x coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"x","optional":false,"description":"<p>the y coordinate around which to center this rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"4Q-NAGaDwProqlJA5pgz3","name":"clone","brief":"","scope":"instance","type":"MethodDoc","description":"<p>clone this rectangle</p>","params":[],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"OeZrn8UcFgMcZr3MWyvM5","name":"constructor","brief":"","scope":"instance","type":"MethodDoc","params":[{"identifier":"x","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.x property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"0","description":"<p>position of the container (accessible via the inherited pos.y property)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"width","optional":true,"default":"game.viewport.width","description":"<p>width of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"height","optional":true,"default":"game.viewport.height","description":"<p>height of the container</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"umjhcaUVylQOtc3H-QnA3","name":"contains","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the rectangle contains the given point</p>","params":[{"identifier":"point","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if contains</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"VRHgO3y75E68CrvF_1kpW","name":"copy","brief":"","scope":"instance","type":"MethodDoc","description":"<p>copy the position and size of the given rectangle into this one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>Source rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>new rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"Do80lRb5olxsi6Mn52eu0","name":"distanceTo","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the distance to the specified target</p>","params":[{"identifier":"target","optional":false,"dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>distance</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"sxAwl09lYdhSW438U4VHN","name":"equals","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is identical to the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if equals</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"3j02g35cHo2f_ktS0JGoz","name":"flipX","brief":"","scope":"instance","see":["Matrix2d#scaleX"],"type":"MethodDoc","description":"<p>flip the renderable on the horizontal axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"lM6o_lcNBF90jJ8fJ7Wlq","name":"flipY","brief":"","scope":"instance","see":["Matrix2d#scaleY"],"type":"MethodDoc","description":"<p>flip the renderable on the vertical axis (around the center of the renderable)</p>","params":[{"identifier":"flip","optional":true,"default":"true","description":"<p><code>true</code> to flip this renderable.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"rdymxlFmhIeNx2iPFHEhQ","name":"forEach","brief":"","examples":[{"caption":"","code":"\n // iterate through all children of the root container\n me.game.world.forEach((child) => {\n    // do something with the child\n    child.doSomething();\n });\n me.game.world.forEach((child, index) => { ... });\n me.game.world.forEach((child, index, array) => { ... });\n me.game.world.forEach((child, index, array) => { ... }, thisArg);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>The forEach() method executes a provided function once per child element. <br>\nthe callback function is invoked with three...","params":[{"identifier":"callback","optional":false,"description":"<p>fnction to execute on each element</p>","dataType":{"tokens":[{"value":"Function","kind":"canonical"}],"template":"Function"}},{"identifier":"thisArg","optional":true,"description":"<p>value to use as this(i.e reference Object) when executing callback.</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[]},{"id":"a7lqArl7jMOmQUm7Qha3_","name":"getAbsolutePosition","brief":"","scope":"instance","type":"MethodDoc","description":"<p>return the renderable absolute position in the game world</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}]},{"id":"wFz9BnVqsHkXRtPQbQR6o","name":"getBounds","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns the bounding box for this renderable</p>","params":[],"returns":[{"description":"<p>bounding box Rectangle object</p>","dataType":{"tokens":[{"value":"Bounds","kind":"canonical"},{"value":"Bounds","kind":"link"}],"template":"%1"}}]},{"id":"wUW2WfqZtX7OSe5CU6inp","name":"getChildAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the Child at the specified index</p>","params":[{"identifier":"index","optional":false,"dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>the child at the specified index</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"eZK8LtIkHVINV6tcKqFqt","name":"getChildByGUID","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the specified GUID<br>\nnote : avoid calling this function every frame since\nit parses th...","params":[{"identifier":"guid","optional":false,"description":"<p>child GUID</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>corresponding child or null</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"DWzWuKNbyhG_WIOv6SoZG","name":"getChildByName","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified name<br>\nas defined in Tiled (Name field of the Object Properties)<br>\nnote ...","params":[{"identifier":"name","optional":false,"description":"<p>child name</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"kq9vB4XZKrnSdeaVBcCTL","name":"getChildByProp","brief":"","access":"public","examples":[{"caption":"","code":"\n // get the first child object called \"mainPlayer\" in a specific container :\n var ent = myContainer.getChildByProp(\"name\", \"mainPlayer\");\n\n // or query the whole world :\n var ent = me.game.world.getChildByProp(\"name\", \"mainPlayer\");\n\n // partial property matches are also allowed by using a RegExp.\n // the following matches \"redCOIN\", \"bluecoin\", \"bagOfCoins\", etc :\n var allCoins = me.game.world.getChildByProp(\"name\", /coin/i);\n\n // searching for numbers or other data types :\n var zIndex10 = me.game.world.getChildByProp(\"z\", 10);\n var inViewport = me.game.world.getChildByProp(\"inViewport\", true);\n"}],"scope":"instance","type":"MethodDoc","description":"<p>return the child corresponding to the given property and value.<br>\nnote : avoid calling this function every frame since\ni...","params":[{"identifier":"prop","optional":false,"description":"<p>Property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>Value of the property</p>","dataType":{"tokens":[{"value":"string | RegExp | number | boolean","kind":"canonical"},{"value":"RegExp","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"string | %1 | %2 | boolean"}}],"returns":[{"description":"<p>Array of childs</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"aZ5gh4mIKwzLgBs4HD8eY","name":"getChildByType","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>returns the list of childs with the specified class type</p>","params":[{"identifier":"classType","optional":false,"dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}}],"returns":[{"description":"<p>Array of children</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"hkYFC7gc0C6uQ-y1wcCwO","name":"getChildIndex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the index of the given Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"8OuWqRTGOO7Um7_zmYBQI","name":"getChildren","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>return all child in this container</p>","params":[],"returns":[{"description":"<p>an array of renderable object</p>","dataType":{"tokens":[{"value":"Array<Renderable>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1<%2>"}}]},{"id":"xepo2udzd5m0n3H6W_spZ","name":"getIndices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>returns a list of indices for all triangles defined in this polygon</p>","params":[],"returns":[{"description":"<p>an array of vertex indices for all triangles forming this polygon.</p>","dataType":{"tokens":[{"value":"Array","kind":"canonical"},{"value":"Array","kind":"canonical"}],"template":"%1"}}]},{"id":"F_PxLRmuEpkySnBUxX4ji","name":"getNextChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns the next child within the container or undefined if none</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>child</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"JZfcJfUt4rqD0Rg4BzUZ7","name":"getOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>get the renderable alpha channel value<br></p>","params":[],"returns":[{"description":"<p>current opacity value between 0 and 1</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}]},{"id":"-s31e4X1Tuh5LdNXj5Dfv","name":"hasChild","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if contains the specified Child</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"yqjWzHCBHyQTaKhyKJ-95","name":"isConvex","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns true if the vertices composing this polygon form a convex shape (vertices must be in clockwise order).</p>","params":[],"returns":[{"description":"<p>true if the vertices are convex, false if not, null if not computable</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"wNRjagccvIrmGj_xfdikX","name":"isFinite","brief":"","scope":"instance","type":"MethodDoc","description":"<p>determines whether all coordinates of this rectangle are finite numbers.</p>","params":[],"returns":[{"description":"<p>false if all coordinates are positive or negative Infinity or NaN; otherwise, true.</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"ObLVoJ9TyOBheoRB_6k9m","name":"lookAt","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable towards the given target.</p>","params":[{"identifier":"target","optional":false,"description":"<p>the renderable or position to look at</p>","dataType":{"tokens":[{"value":"Renderable | Vector2d | Vector3d","kind":"canonical"},{"value":"Renderable","kind":"link"},{"value":"Vector2d","kind":"link"},{"value":"Vector3d","kind":"link"}],"template":"%1 | %2 | %3"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"zFO9S4Y2iZ85JlsjEcGuh","name":"moveDown","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step backward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"1aYNa6TAh_KqA19mjiBzp","name":"moveToBottom","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child the bottom (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"vPeFjN6uV3XWPbIhnShgw","name":"moveToTop","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the specified child to the top(z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"KuQMPVVHLwZ-AzSz8B69w","name":"moveUp","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Move the child in the group one step forward (z depth).</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"IFoEbTGU6m1pqlVnUWaZd","name":"onChildChange","brief":"","scope":"instance","type":"MethodDoc","description":"<p>a callback to be extended, triggered after a child has been added or removed</p>","params":[{"identifier":"index","description":"<p>added or removed child index</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"2UpRQCAw2J1G22oaeccfj","name":"onCollision","brief":"","examples":[{"caption":"","code":"\n // colision handler\n onCollision(response) {\n     if (response.b.body.collisionType === me.collision.types.ENEMY_OBJECT) {\n         // makes the other object solid, by substracting the overlap vector to the current position\n         this.pos.sub(response.overlapV);\n         this.hurt();\n         // not solid\n         return false;\n     }\n     // Make the object solid\n     return true;\n },\n"}],"scope":"instance","type":"MethodDoc","description":"<p>onCollision callback, triggered in case of collision,\nwhen this renderable body is colliding with another one</p>","params":[{"identifier":"response","description":"<p>the collision response object</p>","dataType":{"tokens":[{"value":"collision.ResponseObject","kind":"canonical"},{"value":"collision.ResponseObject","kind":"link"}],"template":"%1"}},{"identifier":"other","description":"<p>the other renderable touching this one (a reference to response.a or response.b)</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if the object should respond to the collision (its position and velocity will be corrected)</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"dmBjknrCihV4dXn-gttOX","name":"onDestroyEvent","brief":"","scope":"instance","type":"MethodDoc","description":"<p>OnDestroy Notification function<br>\nCalled by engine before deleting the object</p>","params":[],"returns":[]},{"id":"yCGt3TaxPYdT2N-WTfXFA","name":"overlaps","brief":"","scope":"instance","type":"MethodDoc","description":"<p>check if this rectangle is intersecting with the specified one</p>","params":[{"identifier":"rect","optional":false,"dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>true if overlaps</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"P89IVgBj7X5YTJWz1K1zK","name":"recalc","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Computes the calculated collision polygon.\nThis <strong>must</strong> be called if the <code>points</code> array, <code>an...","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"y8_bj9o7-KtDB1Dfghy4t","name":"removeBody","brief":"","scope":"instance","see":["Container.removeChild"],"type":"MethodDoc","description":"<p>Remove a physic body from the game world</p>","params":[{"identifier":"body","optional":false,"dataType":{"tokens":[{"value":"Body","kind":"canonical"},{"value":"Body","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>this game world</p>","dataType":{"tokens":[{"value":"World","kind":"canonical"},{"value":"World","kind":"link"}],"template":"%1"}}]},{"id":"X2OwFkVFfVrJ5MF2MLUME","name":"removeChild","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Invokes the removeChildNow in a defer, to ensure the child is removed safely after the update &amp; draw stack has complet...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"bmIsChyXyXiZyk0xw2ETI","name":"removeChildNow","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Removes (and optionally destroys) a child from the container.<br>\n(removal is immediate and unconditional)<br>\nNever use k...","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"keepalive","optional":true,"default":"False","description":"<p>True to prevent calling child.destroy()</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"8onmS3B1rKygEfzP2202h","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>reset the game world</p>","params":[],"returns":[]},{"id":"mP4zZUwm4jqeJqFU3sStq","name":"reset","brief":"","scope":"instance","type":"MethodDoc","description":"<p>update the game world</p>","params":[{"identifier":"dt","optional":false,"description":"<p>the time passed since the last frame update</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the word is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"FmujD3G8uStf_h4zIzh7s","name":"resize","brief":"","scope":"instance","type":"MethodDoc","description":"<p>resize the rectangle</p>","params":[{"identifier":"w","optional":false,"description":"<p>new width of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"h","optional":false,"description":"<p>new height of the rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"xbaOje9QuL1wXr8MaM0LM","name":"rotate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Rotate this renderable by the specified angle (in radians).</p>","params":[{"identifier":"angle","optional":false,"description":"<p>The angle to rotate (in radians)</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"v","optional":true,"description":"<p>an optional point to rotate around</p>","dataType":{"tokens":[{"value":"Vector2d | ObservableVector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"},{"value":"ObservableVector2d","kind":"link"}],"template":"%1 | %2"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"6ZHiUmQvfj6V0v1NARAf5","name":"scale","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point.  Scaling actually applies changes\nto the currentTransform member wich is use...","params":[{"identifier":"x","optional":false,"description":"<p>a number representing the abscissa of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":true,"default":"x","description":"<p>a number representing the ordinate of the scaling vector.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"YXxGFW8vlY9Fr9lIdScWO","name":"scaleV","brief":"","scope":"instance","type":"MethodDoc","description":"<p>scale the renderable around his anchor point</p>","params":[{"identifier":"v","optional":false,"description":"<p>scaling vector</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"LqTJ82mRBoSIPv9Hq10Wy","name":"setChildsProperty","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Automatically set the specified property of all childs to the given value</p>","params":[{"identifier":"prop","optional":false,"description":"<p>property name</p>","dataType":{"tokens":[{"value":"string","kind":"canonical"}],"template":"string"}},{"identifier":"value","optional":false,"description":"<p>property value</p>","dataType":{"tokens":[{"value":"object","kind":"canonical"}],"template":"object"}},{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively apply the value to child containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"lRSB1QC1WgACjtces16Ja","name":"setOpacity","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the renderable alpha channel value<br></p>","params":[{"identifier":"alpha","optional":false,"description":"<p>opacity value between 0.0 and 1.0</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"_juC0lNbc4WkibCmEw2Ti","name":"setShape","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set new value to the rectangle shape</p>","params":[{"identifier":"x","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>position of the Rectangle</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"w","optional":false,"description":"<p>width of the rectangle, or an array of vector defining the rectangle</p>","dataType":{"tokens":[{"value":"number | Array<Vector2d>","kind":"canonical"},{"value":"number","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1 | %3<%2>"}},{"identifier":"h","optional":true,"description":"<p>height of the rectangle, if a numeral width parameter is specified</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>this rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"G55bKORotSYTwaS2YsY9Z","name":"setVertices","brief":"","scope":"instance","type":"MethodDoc","description":"<p>set the vertices defining this Polygon</p>","params":[{"identifier":"vertices","optional":false,"description":"<p>array of vector or vertice defining the Polygon</p>","dataType":{"tokens":[{"value":"Array<Vector2d>","kind":"canonical"},{"value":"Array","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1<%2>"}}],"returns":[{"description":"<p>this instance for objecf chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"_TQoT-gr9VAYSu6sNfNJw","name":"shift","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Shifts the Polygon to the given x, y position.</p>","params":[{"identifier":"x","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]},{"id":"aJhd_51n4xhOFWZIzMjgn","name":"sort","brief":"","access":"public","scope":"instance","type":"MethodDoc","description":"<p>Manually trigger the sort of all the childs in the container</p></p>","params":[{"identifier":"recursive","optional":true,"default":"false","description":"<p>recursively sort all containers if true</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}],"returns":[]},{"id":"mHPJHw9kuM42WUTbtFM3t","name":"swapChildren","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Swaps the position (z-index) of 2 children</p>","params":[{"identifier":"child","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}},{"identifier":"child2","optional":false,"dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}],"returns":[]},{"id":"ewphIfHftdeSG9AwMJ94g","name":"to2d","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply a 2d projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"0ojjPc6ltAUOS2bOoI4rB","name":"toIso","brief":"","scope":"instance","type":"MethodDoc","description":"<p>apply an isometric projection to this shape</p>","params":[],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"ivcqSpinszrF2UpSRO0I1","name":"toPolygon","brief":"","scope":"instance","type":"MethodDoc","description":"<p>Returns a polygon whose edges are the same as this box.</p>","params":[],"returns":[{"description":"<p>a new Polygon that represents this rectangle.</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"yLrjpGI19wUjsN4nLrrPi","name":"transform","brief":"","scope":"instance","see":["Renderable#currentTransform"],"type":"MethodDoc","description":"<p>multiply the renderable currentTransform with the given matrix</p>","params":[{"identifier":"m","optional":false,"description":"<p>the transformation matrix</p>","dataType":{"tokens":[{"value":"Matrix2d","kind":"canonical"},{"value":"Matrix2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Renderable","kind":"canonical"},{"value":"Renderable","kind":"link"}],"template":"%1"}}]},{"id":"9tWD44Np2EGTF3N-RsNys","name":"translate","brief":"","scope":"instance","type":"MethodDoc","description":"<p>translate the Polygon by the specified vector</p>","params":[{"identifier":"v","description":"<p>vector offset</p>","dataType":{"tokens":[{"value":"Vector2d","kind":"canonical"},{"value":"Vector2d","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>Reference to this object for method chaining</p>","dataType":{"tokens":[{"value":"Polygon","kind":"canonical"},{"value":"Polygon","kind":"link"}],"template":"%1"}}]},{"id":"y9Q1JXz2YnbnSjsAyjHkw","name":"union","brief":"","scope":"instance","type":"MethodDoc","description":"<p>merge this rectangle with another one</p>","params":[{"identifier":"rect","optional":false,"description":"<p>other rectangle to union with</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}],"returns":[{"description":"<p>the union(ed) rectangle</p>","dataType":{"tokens":[{"value":"Rect","kind":"canonical"},{"value":"Rect","kind":"link"}],"template":"%1"}}]},{"id":"HYANUeQ8bxb-l35d1jAMk","name":"draw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>draw the container. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}},{"identifier":"rect","optional":true,"description":"<p>the area or viewport to (re)draw</p>","dataType":{"tokens":[{"value":"Rect | Bounds","kind":"canonical"},{"value":"Rect","kind":"link"},{"value":"Bounds","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"GX5Fmt_EhqBGUPOgw5f29","name":"postDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>restore the rendering context after drawing. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"bRXOonQFMWaOdYbMyZNRV","name":"preDraw","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>prepare the rendering context before drawing\n(apply defined transforms, anchor point). <br>\nautomatically called by the ga...","params":[{"identifier":"renderer","optional":false,"description":"<p>a renderer object</p>","dataType":{"tokens":[{"value":"CanvasRenderer | WebGLRenderer","kind":"canonical"},{"value":"CanvasRenderer","kind":"link"},{"value":"WebGLRenderer","kind":"link"}],"template":"%1 | %2"}}],"returns":[]},{"id":"F78grCyM_Ov8WBqUI08Wx","name":"update","brief":"","access":"protected","scope":"instance","type":"MethodDoc","description":"<p>container update function. <br>\nautomatically called by the game manager {@link game}</p>","params":[{"identifier":"dt","optional":false,"description":"<p>time since the last update in milliseconds.</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[{"description":"<p>true if the Container is dirty</p>","dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"oSpssAs-CGHNI0jpJfCb9","name":"isAttachedToRoot","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>Checks if this container is root or if it's attached to the root container.</p>","params":[],"returns":[{"dataType":{"tokens":[{"value":"boolean","kind":"canonical"}],"template":"boolean"}}]},{"id":"HuRAFdZPNgaCBC9UUoO3N","name":"onAnchorUpdate","brief":"","access":"private","scope":"instance","type":"MethodDoc","description":"<p>called when the anchor point value is changed</p>","params":[{"identifier":"x","optional":false,"description":"<p>the new X value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}},{"identifier":"y","optional":false,"description":"<p>the new Y value to be set for the anchor</p>","dataType":{"tokens":[{"value":"number","kind":"canonical"},{"value":"number","kind":"canonical"}],"template":"%1"}}],"returns":[]}]},{"id":"3c6VakBBJgIQX00Nl-wG5","name":"version","brief":"","defaultValue":"\"__VERSION__\"","readonly":true,"scope":"static","type":"PropertyDoc","description":"<p>current melonJS version</p>"},{"id":"o1Pbz4AeztMOoFvDaZAGk","name":"initialized","brief":"","defaultValue":"false","readonly":true,"type":"PropertyDoc","description":"<p>a flag indicating that melonJS is fully initialized</p>"},{"id":"096f-D47vsQO1T2CxlXTS","name":"skipAutoInit","brief":"","defaultValue":"false","see":["boot"],"type":"PropertyDoc","description":"<p>disable melonJS auto-initialization</p>"},{"id":"Ea7WOaTZBdXIrsPipMJU8","name":"boot","brief":"","access":"public","see":["skipAutoInit"],"type":"FunctionDoc","description":"<p>initialize the melonJS library.\nthis is automatically called unless me.skipAutoInit is set to true,\nto allow asynchronous ...","params":[],"returns":[]}]},"registry":{"pkg-RN0e5ctuR5nA8RHjbNKPZ":{"uri":"/melonJS/docs/melonjs.html"},"Jb95Tq1Ormq41JYWldNdf":{"uri":"/melonJS/docs/melonjs/audio.html"},"5CfVahtCrXX4N56kjJ7lN":{"uri":"/melonJS/docs/melonjs/audio.html#stopOnAudioError"},"iufDyFdytp8WBd8hqawGG":{"uri":"/melonJS/docs/melonjs/audio/disable.html"},"QMGPAuX65Pgvlws7oQsK6":{"uri":"/melonJS/docs/melonjs/audio/enable.html"},"mjMzXPyfuWbOEwkemxzNg":{"uri":"/melonJS/docs/melonjs/audio/fade.html"},"LzH42v01PU-mCIWjWYY19":{"uri":"/melonJS/docs/melonjs/audio/getCurrentTrack.html"},"j0ts_18F0xU8lAqqiJzQ4":{"uri":"/melonJS/docs/melonjs/audio/getVolume.html"},"_DGJe3gShiAdVnYH-uTrl":{"uri":"/melonJS/docs/melonjs/audio/hasAudio.html"},"prFEQ6fhQ9_NsEB82qrco":{"uri":"/melonJS/docs/melonjs/audio/hasFormat.html"},"Y1o4GrdvA2KAknqt4ApGP":{"uri":"/melonJS/docs/melonjs/audio/init.html"},"0llYTdWsAuuFN7SazSD9A":{"uri":"/melonJS/docs/melonjs/audio/mute.html"},"LdFAPj3oKx5ujrVNp-6tV":{"uri":"/melonJS/docs/melonjs/audio/muteAll.html"},"Cy28zDwIx7wueKOEMIHBU":{"uri":"/melonJS/docs/melonjs/audio/muted.html"},"kpnj8HPM58bYilfrQcawF":{"uri":"/melonJS/docs/melonjs/audio/pause.html"},"2hiAKbPjSAyYgUtp5s8V0":{"uri":"/melonJS/docs/melonjs/audio/pauseTrack.html"},"HnUwumeRZd_6ZtGDiIMoN":{"uri":"/melonJS/docs/melonjs/audio/play.html"},"TB-vwV_eNe_iiuetq68kX":{"uri":"/melonJS/docs/melonjs/audio/playTrack.html"},"swmIc-6Wp3Gr-HH7iCsbM":{"uri":"/melonJS/docs/melonjs/audio/rate.html"},"C3AvhHntGrFOzXr7hZWxG":{"uri":"/melonJS/docs/melonjs/audio/resume.html"},"llAZXNptXi5WtgLkn40_q":{"uri":"/melonJS/docs/melonjs/audio/resumeTrack.html"},"B_KjAEGxnrjCcEoQ9X7vV":{"uri":"/melonJS/docs/melonjs/audio/seek.html"},"ncFKWs3CKV-OrmlbLUub-":{"uri":"/melonJS/docs/melonjs/audio/setVolume.html"},"thqeBb_bF15BTrQSSl1Qh":{"uri":"/melonJS/docs/melonjs/audio/stop.html"},"ebx8kkhoLJgxtX1GBOe0w":{"uri":"/melonJS/docs/melonjs/audio/stopTrack.html"},"wXTDeEQKi8znNB6ey64-j":{"uri":"/melonJS/docs/melonjs/audio/unload.html"},"fWKzxIWsxkd_UQg4RSQ9_":{"uri":"/melonJS/docs/melonjs/audio/unloadAll.html"},"pW_900qoCn2CQhObaz1Cr":{"uri":"/melonJS/docs/melonjs/audio/unmute.html"},"7R9X0_C3HWo4PtpOO9wYK":{"uri":"/melonJS/docs/melonjs/audio/unmuteAll.html"},"BOhuCovTBEsyV_voqVM2z":{"uri":"/melonJS/docs/melonjs/collision.html"},"R-qcALg-eA5Hlv_e2JAIx":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html"},"atnzAsVGO5vGV2vzo7S4N":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#a"},"sIfZM6heY0TaRmatESF8q":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#aInB"},"LWRyiRYJOjTUiZ1yBKFTg":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#b"},"-ZHOe85kmnPxuPFGnhsK0":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#bInA"},"zzpNjPR8oZoMDmTlzfFwA":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#indexShapeA"},"UN8Y2b0fmTsnGZwPnu3u2":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#indexShapeB"},"NjAgkUT88dK4l2jr6D_Ri":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#overlap"},"9Da0f5dCuN3NYcD7wuaTg":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#overlapN"},"hpWfKbVG3VPjrS-gZnLOB":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#overlapV"},"f2QgIAwPkfh6nbmTI1VBV":{"uri":"/melonJS/docs/melonjs/collision/ResponseObject.html#clear"},"JwGRD4wCMKI2BhdN9qZ-E":{"uri":"/melonJS/docs/melonjs/collision/types.html"},"mn86S-Z6Rt8myTG9cc9JP":{"uri":"/melonJS/docs/melonjs/collision/types.html#ACTION_OBJECT"},"3BFJUScTKDFhG7cnLovLS":{"uri":"/melonJS/docs/melonjs/collision/types.html#ALL_OBJECT"},"nfJSGJzydUHN7mInnXCcs":{"uri":"/melonJS/docs/melonjs/collision/types.html#COLLECTABLE_OBJECT"},"4VzpszZXtN-ui9f8GAnK8":{"uri":"/melonJS/docs/melonjs/collision/types.html#ENEMY_OBJECT"},"Mmh2-7sttiNpxVIE8eGJZ":{"uri":"/melonJS/docs/melonjs/collision/types.html#NO_OBJECT"},"HiA0cpgKiTcHDZNVZY-Gb":{"uri":"/melonJS/docs/melonjs/collision/types.html#NO_OBJECT"},"xpdGAfvOU-lVuoAeCu_oE":{"uri":"/melonJS/docs/melonjs/collision/types.html#NPC_OBJECT"},"PZI1OjOZePvwq2H62wW9U":{"uri":"/melonJS/docs/melonjs/collision/types.html#PLAYER_OBJECT"},"OldkcoU48hu6Wkk8P2KR3":{"uri":"/melonJS/docs/melonjs/collision/types.html#PROJECTILE_OBJECT"},"XC6Tf_u84UHm4ictwyB3g":{"uri":"/melonJS/docs/melonjs/collision/types.html#USER"},"NIUgtQKnALWaJqz9wDxDj":{"uri":"/melonJS/docs/melonjs/collision/types.html#WORLD_SHAPE"},"x8OKEiXnzZI487SHKWuL1":{"uri":"/melonJS/docs/melonjs/collision.html#maxChildren"},"v4_MfHwO6loyI1CxDBxl7":{"uri":"/melonJS/docs/melonjs/collision.html#maxDepth"},"jhkkl8cWjim0N0c-NU372":{"uri":"/melonJS/docs/melonjs/collision.html#response"},"G7ErAxUYwqmEnY_OGhHkc":{"uri":"/melonJS/docs/melonjs/collision.html#rayCast"},"Em3YJ-1psiXqjvq4hYWrX":{"uri":"/melonJS/docs/melonjs/device.html"},"5pT2YeMeDr3IjX5QP2so4":{"uri":"/melonJS/docs/melonjs/device.html#accelerationX"},"8EMi0P2dpSzyn6GspCpP3":{"uri":"/melonJS/docs/melonjs/device.html#accelerationY"},"POe9_OdKxbRxLuwnbliyN":{"uri":"/melonJS/docs/melonjs/device.html#accelerationZ"},"tNQlul0UD3G54z51LHB2o":{"uri":"/melonJS/docs/melonjs/device.html#alpha"},"751iX2UOb9Lvq18Y_OWrq":{"uri":"/melonJS/docs/melonjs/device.html#android"},"_VeqmUL0osbsjgXFN77Jm":{"uri":"/melonJS/docs/melonjs/device.html#android2"},"8GDkQnujLfIX7nfwN1eJn":{"uri":"/melonJS/docs/melonjs/device.html#autoFocus"},"eeCL1IZ6CPh5VGMweW8qj":{"uri":"/melonJS/docs/melonjs/device.html#beta"},"jmp0ygb2Za-1FcFSOxXjp":{"uri":"/melonJS/docs/melonjs/device.html#BlackBerry"},"4hipSHKpoTTxy4DzFXd_k":{"uri":"/melonJS/docs/melonjs/device.html#chromeOS"},"11omZf8c1_nxti6CFtlhE":{"uri":"/melonJS/docs/melonjs/device.html#devicePixelRatio"},"UK_lBZdK-Hg_7C1R_3n-1":{"uri":"/melonJS/docs/melonjs/device.html#ejecta"},"eU95ZmWNmdJ2YBZ-qfW-T":{"uri":"/melonJS/docs/melonjs/device.html#gamma"},"IswablfnVr3v5nCneHrwT":{"uri":"/melonJS/docs/melonjs/device.html#hasAccelerometer"},"whRoy6BrqX876Ll1sfaTU":{"uri":"/melonJS/docs/melonjs/device.html#hasDeviceOrientation"},"3yB9Dbvzi870tL-t_x_H8":{"uri":"/melonJS/docs/melonjs/device.html#hasFullscreenSupport"},"0e69k5uOQNqpPTd67ZsiZ":{"uri":"/melonJS/docs/melonjs/device.html#hasPointerLockSupport"},"CXYxxotsCqj2Qig_cOIWA":{"uri":"/melonJS/docs/melonjs/device.html#hasWebAudio"},"umKrxHlqPqF3iVTe134QL":{"uri":"/melonJS/docs/melonjs/device.html#iOS"},"oEkN8aN9NQLXIabW24Onn":{"uri":"/melonJS/docs/melonjs/device.html#isFullscreen"},"YPODL17_GfKJkKE649kWK":{"uri":"/melonJS/docs/melonjs/device.html#isMobile"},"HAiNMvve_qKhHT2DXXorg":{"uri":"/melonJS/docs/melonjs/device.html#isWeixin"},"H45WcvDlS-mlB7z7M8d7f":{"uri":"/melonJS/docs/melonjs/device.html#Kindle"},"k2jeki9erj7co2Vsl2Xev":{"uri":"/melonJS/docs/melonjs/device.html#language"},"WshxdxgZ2RdhYHtpLqlJC":{"uri":"/melonJS/docs/melonjs/device.html#linux"},"HJYvReql_LvbEnArbOktS":{"uri":"/melonJS/docs/melonjs/device.html#localStorage"},"kYHqryuPZj9I0-BzRB0if":{"uri":"/melonJS/docs/melonjs/device.html#maxTouchPoints"},"X9OFs3Ok5C3GqEGuCVpgi":{"uri":"/melonJS/docs/melonjs/device.html#nativeBase64"},"MuHd9jZdmjYrvDQN1elTk":{"uri":"/melonJS/docs/melonjs/device.html#nodeJS"},"7NzCPbSgnfTHy1YWK6jDU":{"uri":"/melonJS/docs/melonjs/device.html#OffScreenCanvas"},"zFhxC2-vHoeRJttTVXRqB":{"uri":"/melonJS/docs/melonjs/device.html#pauseOnBlur"},"HGJlIlsLfv0G3aK63smqn":{"uri":"/melonJS/docs/melonjs/device.html#resumeOnFocus"},"WO9VIy7BxGlKuQgo7Z7wW":{"uri":"/melonJS/docs/melonjs/device.html#ScreenOrientation"},"qXtBaTELx-R7wgaOzO3CD":{"uri":"/melonJS/docs/melonjs/device.html#sound"},"-HC8z99YZVG-oDuRqS3QS":{"uri":"/melonJS/docs/melonjs/device.html#stopOnBlur"},"ejRkcwGvMKe2ZiEaNWWL9":{"uri":"/melonJS/docs/melonjs/device.html#touch"},"AeAeuKaaL0JHN8s3sHa5C":{"uri":"/melonJS/docs/melonjs/device.html#ua"},"x7w-MMFRBpJgJJWHWRMpW":{"uri":"/melonJS/docs/melonjs/device.html#wheel"},"g-1X8JavEbYVe32GWk2Sd":{"uri":"/melonJS/docs/melonjs/device.html#wp"},"IOhvAJySNvY8GRXTwSRDO":{"uri":"/melonJS/docs/melonjs/device.html#turnOffPointerLock"},"3HfNvKGN_9A7aE7fe6DYG":{"uri":"/melonJS/docs/melonjs/device.html#turnOnPointerLock"},"MxN1_88-N0yPX9fCcknKV":{"uri":"/melonJS/docs/melonjs/device/enableSwipe.html"},"KVOVvGjvh8e1HRF4XV9Db":{"uri":"/melonJS/docs/melonjs/device/exitFullscreen.html"},"K_S26JVxD_JUPQkkovpld":{"uri":"/melonJS/docs/melonjs/device/focus.html"},"Qh83VMibSUXBnSoifOWnP":{"uri":"/melonJS/docs/melonjs/device/getElement.html"},"bVySmxpozRCIsZOnxc9CB":{"uri":"/melonJS/docs/melonjs/device/getElementBounds.html"},"PWEqcgvvc49iRR7FyhUyP":{"uri":"/melonJS/docs/melonjs/device/getMaxShaderPrecision.html"},"RUjbox7pCy-XHYW_zG8Hh":{"uri":"/melonJS/docs/melonjs/device/getParentBounds.html"},"GFHcDIaVhdg4b0SMgTLIc":{"uri":"/melonJS/docs/melonjs/device/getParentElement.html"},"NaGiLw_MtikrQ_nOaapAI":{"uri":"/melonJS/docs/melonjs/device/getScreenOrientation.html"},"z75kYzzq_PQ4N6Pbj_nCq":{"uri":"/melonJS/docs/melonjs/device/getStorage.html"},"CPQZKz9m0tdMdZjuZp7RQ":{"uri":"/melonJS/docs/melonjs/device/isLandscape.html"},"K8TQFOhYYqaBkg-0KIq4n":{"uri":"/melonJS/docs/melonjs/device/isPortrait.html"},"6zjCwubh0ekdgXhgrWOK2":{"uri":"/melonJS/docs/melonjs/device/isWebGLSupported.html"},"WmrYXLHN2yEUUGUKJ9AIz":{"uri":"/melonJS/docs/melonjs/device/lockOrientation.html"},"msKJ3Q23EbtrEtnaX1fDB":{"uri":"/melonJS/docs/melonjs/device/onReady.html"},"LpuneO7DxZCDzbn_Hp572":{"uri":"/melonJS/docs/melonjs/device/requestFullscreen.html"},"mLDWeO-Lz3K5rUoNeREXw":{"uri":"/melonJS/docs/melonjs/device/unlockOrientation.html"},"fw8tPxthG6OraK3vYLFQ5":{"uri":"/melonJS/docs/melonjs/device/unwatchAccelerometer.html"},"4BPQ5eqD_OziKfNaVZGU6":{"uri":"/melonJS/docs/melonjs/device/unwatchDeviceOrientation.html"},"kjFzQPnO4VDTw8AbcgiaM":{"uri":"/melonJS/docs/melonjs/device/vibrate.html"},"oMEeniq5NFTV1FatTpMXq":{"uri":"/melonJS/docs/melonjs/device/watchAccelerometer.html"},"rBKvUCd5KU2HKLlJ0NZW_":{"uri":"/melonJS/docs/melonjs/device/watchDeviceOrientation.html"},"j0dqaktBh8cCeo0_Hr4Dk":{"uri":"/melonJS/docs/melonjs/event.html"},"tFJudfYkKcjHEqk6XQc_6":{"uri":"/melonJS/docs/melonjs/event.html#BOOT"},"ow1WHwKuzs32ao9nefQRE":{"uri":"/melonJS/docs/melonjs/event.html#CANVAS_ONRESIZE"},"NLZJgxgo01cRsp0rwj01j":{"uri":"/melonJS/docs/melonjs/event.html#DRAGEND"},"j0CwxO-p_7f-LFPwG49tk":{"uri":"/melonJS/docs/melonjs/event.html#DRAGSTART"},"9ENTHtogVdZxV4ityB9dA":{"uri":"/melonJS/docs/melonjs/event.html#GAME_AFTER_DRAW"},"f4Le1Dv2HSCdcBpXO11tr":{"uri":"/melonJS/docs/melonjs/event.html#GAME_AFTER_UPDATE"},"qY8GWIxWNrPe-1Q0XUgQf":{"uri":"/melonJS/docs/melonjs/event.html#GAME_BEFORE_DRAW"},"z6zDp6PYZxj0mMTYIhZgz":{"uri":"/melonJS/docs/melonjs/event.html#GAME_BEFORE_UPDATE"},"TDDwOfYIR-lB0FCTXit-j":{"uri":"/melonJS/docs/melonjs/event.html#GAME_INIT"},"EJ1Itt35nxj4GNQlQ0L_1":{"uri":"/melonJS/docs/melonjs/event.html#GAME_RESET"},"H-f_QJ8A9-luEQPKFRNB2":{"uri":"/melonJS/docs/melonjs/event.html#GAME_UPDATE"},"3-3VrXvtmK9GycN_2BLFS":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_CONNECTED"},"jCkCQaOwuvCPBuyWCJPcp":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_DISCONNECTED"},"OIcoEserx9pNZgZKE_mV3":{"uri":"/melonJS/docs/melonjs/event.html#GAMEPAD_UPDATE"},"yBYOOf0_ojxvaSQtEXHfr":{"uri":"/melonJS/docs/melonjs/event.html#KEYDOWN"},"_a-JQMvaSqwoTwk5tBTa3":{"uri":"/melonJS/docs/melonjs/event.html#KEYUP"},"7xKxMqBTIOBz-VqotLSDC":{"uri":"/melonJS/docs/melonjs/event.html#LEVEL_LOADED"},"YYFGQlmoto4FloO4rzt5-":{"uri":"/melonJS/docs/melonjs/event.html#LOADER_COMPLETE"},"pXkBHAjV9n94I0kWoHGkG":{"uri":"/melonJS/docs/melonjs/event.html#LOADER_PROGRESS"},"NZG7gj2A8ad8zPF-6e1gC":{"uri":"/melonJS/docs/melonjs/event.html#ONCONTEXT_RESTORED"},"_fMBByLzcZp25qLaBUNd5":{"uri":"/melonJS/docs/melonjs/event.html#POINTERLOCKCHANGE"},"Pau-rzu1rHehdiQ3wVYg1":{"uri":"/melonJS/docs/melonjs/event.html#POINTERMOVE"},"7_NydVaTK_n2BeC7f-u5G":{"uri":"/melonJS/docs/melonjs/event.html#STATE_CHANGE"},"3AlyPgg0XAdqw2uLWLmdI":{"uri":"/melonJS/docs/melonjs/event.html#STATE_PAUSE"},"a2Zy_bKo6pEWRJfkuiakj":{"uri":"/melonJS/docs/melonjs/event.html#STATE_RESTART"},"w6zopmHBgwsaXL2VUWOff":{"uri":"/melonJS/docs/melonjs/event.html#STATE_RESUME"},"UaTDCIuPjpIbO1bIUiqVn":{"uri":"/melonJS/docs/melonjs/event.html#STATE_STOP"},"G6WnO8AYo6amiHfsP4xru":{"uri":"/melonJS/docs/melonjs/event.html#VIDEO_INIT"},"1UfxROGq0355f7Ya2EUUa":{"uri":"/melonJS/docs/melonjs/event.html#VIEWPORT_ONCHANGE"},"UulLfEAb0WXJ7oeiTqTHZ":{"uri":"/melonJS/docs/melonjs/event.html#VIEWPORT_ONRESIZE"},"oxCGeGZcp3Ld7HYx6vYZO":{"uri":"/melonJS/docs/melonjs/event.html#WEBGL_ONCONTEXT_LOST"},"Zzgh9BgnXDgGldVdsZH0u":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONORIENTATION_CHANGE"},"87G8_T1TA_8LHWdR28V3g":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONRESIZE"},"pNFdqB1ByJ7iPdzVfXJjv":{"uri":"/melonJS/docs/melonjs/event.html#WINDOW_ONSCROLL"},"hKWXs_tYzx_l9c2s1O-bs":{"uri":"/melonJS/docs/melonjs/event/emit.html"},"LceSsTDVWmTYnEX6dUF24":{"uri":"/melonJS/docs/melonjs/event/off.html"},"qM47Xr89JN-2E8Jlrw61b":{"uri":"/melonJS/docs/melonjs/event/on.html"},"1Pr-HMW6SERoyfyYdAk0v":{"uri":"/melonJS/docs/melonjs/event/once.html"},"KJUmIqPCiM3weOwO3UsCR":{"uri":"/melonJS/docs/melonjs/game.html"},"hZpin17RI_gjOr0JWaOht":{"uri":"/melonJS/docs/melonjs/game.html#lastUpdate"},"26h78rNhygfOXcAg_vUL_":{"uri":"/melonJS/docs/melonjs/game.html#mergeGroup"},"Vs7qKFL4lFYzMWkaioezz":{"uri":"/melonJS/docs/melonjs/game.html#sortOn"},"peRjfkDLJU4exuyGGdvCs":{"uri":"/melonJS/docs/melonjs/game.html#viewport"},"cvzmNGOkocR5tGeYYzZGz":{"uri":"/melonJS/docs/melonjs/game.html#world"},"WmNTI7BhsLI51cOx6tbrN":{"uri":"/melonJS/docs/melonjs/game/getParentContainer.html"},"pyc_Y-ELsKitiTVB6XbVg":{"uri":"/melonJS/docs/melonjs/game/onLevelLoaded.html"},"GmjhuaaOtu-FRG38tho0k":{"uri":"/melonJS/docs/melonjs/game/repaint.html"},"o7g68Flm8bDuSLWDpkncu":{"uri":"/melonJS/docs/melonjs/game/reset.html"},"qtEKPMSr4FJXsJBkwKt3m":{"uri":"/melonJS/docs/melonjs/game/updateFrameRate.html"},"Bx85V3pls-ixAb-SIB3mm":{"uri":"/melonJS/docs/melonjs/input.html"},"jcqk9plfOPhJssP1hfLfl":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD.html"},"RfqVobp--Nfudq7fPWX4e":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD/AXES.html"},"EoL78PltDNm_BVGGusIrr":{"uri":"/melonJS/docs/melonjs/input/GAMEPAD/BUTTONS.html"},"10RzsIAl_0o1G3J5uIujh":{"uri":"/melonJS/docs/melonjs/input/KEY.html"},"UGi_xAC2z0f5c0ctuj2RB":{"uri":"/melonJS/docs/melonjs/input/KEY.html#A"},"hymyG0H_B_6fhniuWxtCG":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ADD"},"mMY0lJhZTVF6GgbqAAF_T":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ALT"},"vcCopGg6ZXX2VEDlayrUR":{"uri":"/melonJS/docs/melonjs/input/KEY.html#B"},"hDeF1xMKWUZB2KWT7IGfU":{"uri":"/melonJS/docs/melonjs/input/KEY.html#BACK_SLASH"},"sWzxxl8937JATUohRj2GU":{"uri":"/melonJS/docs/melonjs/input/KEY.html#C"},"r8J1r5H4pXYHAU2vpnfZp":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CAPS_LOCK"},"mBe-wQcBR-nbPMMWC_JJf":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CLOSE_BRACKET"},"VIoRgUK6woqoaAFtzwKdA":{"uri":"/melonJS/docs/melonjs/input/KEY.html#COMMA"},"FkgBAdFk56Oqo6Abv_Yf2":{"uri":"/melonJS/docs/melonjs/input/KEY.html#CTRL"},"5PqJW8WnFDR9YHi6d4SLt":{"uri":"/melonJS/docs/melonjs/input/KEY.html#D"},"ZlM1a_lFoK9GONs_lWjFg":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DECIMAL"},"qfSkBd92WL9N_NyR1iH8q":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DELETE"},"yJoYrOEIUejRcL1ZkeS0t":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DIVIDE"},"zRt977cj2mJuNT-cNdXvM":{"uri":"/melonJS/docs/melonjs/input/KEY.html#DOWN"},"g0ieH2gKHoCZSHMe6UrTN":{"uri":"/melonJS/docs/melonjs/input/KEY.html#E"},"koi-c9JgfUAWgx3U0fIYl":{"uri":"/melonJS/docs/melonjs/input/KEY.html#END"},"EMZgtlWWANeq8U03v4Lo_":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ENTER"},"VUWVOToXpF-SQtBlp3OZ8":{"uri":"/melonJS/docs/melonjs/input/KEY.html#ESC"},"edXeqUCii8-0PkrvQFi4S":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F"},"4w8ULFmrLZu5aC3XA3SHm":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F1"},"_g9m3Bux4CX1cekz1ZT_z":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F10"},"1IJZmSRZP06Gz17T8ICn4":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F11"},"YKkYbrT_7-CxlgRnIWK2C":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F12"},"R9n2KqULzzv-UVYw9-0EF":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F2"},"BGhfqUSnLi9hw0YZR4B69":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F3"},"EL0u054brt-kzA1RFYDAX":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F4"},"IzEMyXfbu8C-iiV61SvME":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F5"},"vIj4FTEBEsEvCaPvkpzYG":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F6"},"jJS4eMrEKHVFj6PrtZzPt":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F7"},"bnbjn0hkh5v5cZRI6TiEZ":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F8"},"IoKxwyRYa4bUl7H4M64tC":{"uri":"/melonJS/docs/melonjs/input/KEY.html#F9"},"3PtVubfbBb36hMfupNmbv":{"uri":"/melonJS/docs/melonjs/input/KEY.html#FORWAND_SLASH"},"Ri2tc1JmwDBLB4OItjsFp":{"uri":"/melonJS/docs/melonjs/input/KEY.html#G"},"F3jQcCTR5OT1akMxaPXZy":{"uri":"/melonJS/docs/melonjs/input/KEY.html#GRAVE_ACCENT"},"okZdL0eCbwgCKUzR2KaSz":{"uri":"/melonJS/docs/melonjs/input/KEY.html#H"},"j8GHRZL20jSVpSZcwwlrl":{"uri":"/melonJS/docs/melonjs/input/KEY.html#HOME"},"mM5rUigoGtG9GMX2kBS5M":{"uri":"/melonJS/docs/melonjs/input/KEY.html#I"},"_UEjQaj32XtQJWKQcQXLf":{"uri":"/melonJS/docs/melonjs/input/KEY.html#INSERT"},"_pitooT8KL0oZvctPd3Gb":{"uri":"/melonJS/docs/melonjs/input/KEY.html#J"},"aFD1Llyuam5ULaBHTCtJF":{"uri":"/melonJS/docs/melonjs/input/KEY.html#K"},"djRvnRks5ETnKm8L_A3hM":{"uri":"/melonJS/docs/melonjs/input/KEY.html#L"},"Ql0pVht8WhPPM59GU64sI":{"uri":"/melonJS/docs/melonjs/input/KEY.html#LEFT"},"qidz2xHbt-rH9t2x88osk":{"uri":"/melonJS/docs/melonjs/input/KEY.html#M"},"2KD0832bBff_MWBa2nfUh":{"uri":"/melonJS/docs/melonjs/input/KEY.html#MINUS"},"NmZuLM4XpZLNLDfU52dgG":{"uri":"/melonJS/docs/melonjs/input/KEY.html#MULTIPLY"},"bHbTGRi4MRCQ-RGBKqM_V":{"uri":"/melonJS/docs/melonjs/input/KEY.html#N"},"FG9OdrvaKSp6ePK4_nzam":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM_LOCK"},"_BBI9KqxvcOiCZocWjPJ_":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM0"},"-rgHfbJ9DVMyv2c-lOyG-":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM1"},"-R_rK1bRKb5w0fPTbYSzL":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM2"},"CdRTHq0dNMEnlnL4blBOz":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM3"},"d3LXYOdM15yhijs6Et04q":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM4"},"cxGOT8eHai30_VuTDhxql":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM5"},"Kzq9pk3Eg2amxbWlwixJn":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM6"},"8hiYD6hQI1-FozOTu_qOm":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM7"},"kNrm9eqjrfxdTmhBaasXg":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM8"},"OcL91iogXu33DG6xFmVAB":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUM9"},"xpi7-2Sc4mRnYCFXeCdfj":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD0"},"EFFPl4sLw1Zj9OkvfpcMF":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD1"},"2G9L3xz-T7IxM3NCFJHOp":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD2"},"XNMhZ6kTYHzsTHhwq9jJI":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD3"},"_sJjnea_KVwehFu8Nf__5":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD4"},"a8Gel6NX2IOgmmdOyh9Aj":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD5"},"biWrT1THrM2QmJwriZR_T":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD6"},"wR-JqTeyLnSKdKWhK2f9y":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD7"},"jgaDi4Jsh5FcHDO4oSzkI":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD8"},"sIiYVyj1_RjKJS4S_xLbi":{"uri":"/melonJS/docs/melonjs/input/KEY.html#NUMPAD9"},"pq-oxfPL13nwC0ZLkCIEk":{"uri":"/melonJS/docs/melonjs/input/KEY.html#O"},"BhBbAlZkhBl-txpQrvVYV":{"uri":"/melonJS/docs/melonjs/input/KEY.html#OPEN_BRACKET"},"xBuV0GpFUr1RokwqBpEgR":{"uri":"/melonJS/docs/melonjs/input/KEY.html#P"},"PUxq_anf231VLYZwibfQI":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAGE_DOWN"},"idV3TeVviCF5sie2AutRW":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAGE_UP"},"cGKGlKhRP-aWRE8Mi6nKh":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PAUSE"},"JC0_R3ppZ1EM_dpNFwsIW":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PERIOD"},"U4MNWi1lUo-1DOuuBejJF":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PLUS"},"-vzH5CNUxAYa9I0TlirP4":{"uri":"/melonJS/docs/melonjs/input/KEY.html#PRINT_SCREEN"},"d2bPeOXe9wVuKdD1yLWGC":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Q"},"a3vdLlgLalS2tuDXJUMmw":{"uri":"/melonJS/docs/melonjs/input/KEY.html#R"},"fYdQxDl6CecmuKTp-kU8D":{"uri":"/melonJS/docs/melonjs/input/KEY.html#RIGHT"},"XvHOFBSu7BQmJvpgEt3jK":{"uri":"/melonJS/docs/melonjs/input/KEY.html#S"},"La4OYOKsMiex6tNeyIQ0N":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SCROLL_LOCK"},"678UqgodgSNi2hiRiI74w":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SEMICOLON"},"yDWcUla2jfvOJ0P_F9XgL":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SHIFT"},"-Qwckk22c_wkdYWDiL8-A":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SINGLE_QUOTE"},"KF7iC06AsGST1TwFlwEEd":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SPACE"},"XgsOvGppurBJm9Qw41Bra":{"uri":"/melonJS/docs/melonjs/input/KEY.html#SUBSTRACT"},"rnhmLzp_x17Vx4mQ366Wr":{"uri":"/melonJS/docs/melonjs/input/KEY.html#T"},"ekn9xmfqnjC6WepgrmFUS":{"uri":"/melonJS/docs/melonjs/input/KEY.html#TAB"},"j2N91T84x9RlSA_efpxi7":{"uri":"/melonJS/docs/melonjs/input/KEY.html#TILDE"},"iqSRCvGL9lJ4RH7aK5pSd":{"uri":"/melonJS/docs/melonjs/input/KEY.html#U"},"0n_1lJcViuNcc3z-Q_ElT":{"uri":"/melonJS/docs/melonjs/input/KEY.html#UP"},"6_e1Boc9NupPQO_JKQiuO":{"uri":"/melonJS/docs/melonjs/input/KEY.html#V"},"UN-n4mm_5RXPMGQ8xpCiq":{"uri":"/melonJS/docs/melonjs/input/KEY.html#W"},"0FGCId4ZhLwPXFPICsY8I":{"uri":"/melonJS/docs/melonjs/input/KEY.html#WINDOW_KEY"},"B0Oa4VZ1Cm0rwj8mXYLxH":{"uri":"/melonJS/docs/melonjs/input/KEY.html#X"},"3JMpEKN-3V90BrxqIzeWG":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Y"},"eXnovdE7VkEJJL7HSjFi5":{"uri":"/melonJS/docs/melonjs/input/KEY.html#Z"},"oOn11UB3udFfq_MBxUwgP":{"uri":"/melonJS/docs/melonjs/input.html#keyBoardEventTarget"},"elNS8pMmEg1IqDdQFD-xX":{"uri":"/melonJS/docs/melonjs/input.html#locked"},"icZW2GpikmWp5kAaz5COb":{"uri":"/melonJS/docs/melonjs/input.html#pointer"},"lgstVpiriRBg8uOKvp1Fk":{"uri":"/melonJS/docs/melonjs/input.html#pointerEventTarget"},"t-T-lAZfynh3spCbcF1ms":{"uri":"/melonJS/docs/melonjs/input.html#preventDefault"},"x1RkQmy1nBd_6UCKJZfw7":{"uri":"/melonJS/docs/melonjs/input.html#setGamepadMapping"},"h-aczgBVaLKEH6VLU0Ei1":{"uri":"/melonJS/docs/melonjs/input.html#throttlingInterval"},"tohOdRWA5AUy_DdkeDP4z":{"uri":"/melonJS/docs/melonjs/input/bindGamepad.html"},"bAGdau-MDPiou4li0pzf5":{"uri":"/melonJS/docs/melonjs/input/bindKey.html"},"6iu-DRRoyUbBr0utR_gHb":{"uri":"/melonJS/docs/melonjs/input/bindPointer.html"},"b9XKYooO0RK7mkqtPHie4":{"uri":"/melonJS/docs/melonjs/input/exitPointerLock.html"},"ovwXOHqEbW93vqngkw391":{"uri":"/melonJS/docs/melonjs/input/getBindingKey.html"},"2A8HL6gCDxkw5A71R9Cfb":{"uri":"/melonJS/docs/melonjs/input/globalToLocal.html"},"Rx67Zd_kI0y3_zpwPKGCl":{"uri":"/melonJS/docs/melonjs/input/isKeyPressed.html"},"TB7a1bpEVJfDx7QEG4LHq":{"uri":"/melonJS/docs/melonjs/input/keyStatus.html"},"KeRI9wntto8Td11yyvVQ-":{"uri":"/melonJS/docs/melonjs/input/registerPointerEvent.html"},"YIU0ya2bdlTUBivzCmxm_":{"uri":"/melonJS/docs/melonjs/input/releaseAllPointerEvents.html"},"-mTxCqELyPNUDNdLI9xOT":{"uri":"/melonJS/docs/melonjs/input/releasePointerEvent.html"},"fH2Ee1u2XnBGBbuEtW0gA":{"uri":"/melonJS/docs/melonjs/input/requestPointerLock.html"},"Scqf_k9NS-AFZX8zvCQdz":{"uri":"/melonJS/docs/melonjs/input/setGamepadDeadzone.html"},"vPJ5HyDyDkwdKkI-h-pwU":{"uri":"/melonJS/docs/melonjs/input/setTouchAction.html"},"1iyXvGQXuGdTsqWvxL49F":{"uri":"/melonJS/docs/melonjs/input/triggerKeyEvent.html"},"FIhK7geVKqgjnI7w2Pvpm":{"uri":"/melonJS/docs/melonjs/input/unbindGamepad.html"},"bs_f5FuCTUOV-k9mTXBF8":{"uri":"/melonJS/docs/melonjs/input/unbindKey.html"},"tqUfA_9DvfdkjJyQovb-B":{"uri":"/melonJS/docs/melonjs/input/unbindPointer.html"},"BMKOPmZneqiIZm6Z4cxB7":{"uri":"/melonJS/docs/melonjs/input/unlockKey.html"},"jh0kugFmYs1AWHxRqdhMz":{"uri":"/melonJS/docs/melonjs/level.html"},"31VxuEvo5dnlx1NF2A9P-":{"uri":"/melonJS/docs/melonjs/level.html#add"},"c3QIV5D4KtcZLsHhfJqdh":{"uri":"/melonJS/docs/melonjs/level.html#getCurrentLevel"},"6JjZOxpKd7bZwzrWXxukk":{"uri":"/melonJS/docs/melonjs/level.html#getCurrentLevelId"},"32ReunP-vfccm5R4VQ-SY":{"uri":"/melonJS/docs/melonjs/level.html#levelCount"},"JPQFtaAP6EmUJJ57F0kcK":{"uri":"/melonJS/docs/melonjs/level.html#load"},"pxRRklWyJBrQMZ95gofTB":{"uri":"/melonJS/docs/melonjs/level.html#next"},"wsZLtBAVCFub_2nNf9H3c":{"uri":"/melonJS/docs/melonjs/level.html#previous"},"Mmp3Rf9GwNnFcIFB0O9Uv":{"uri":"/melonJS/docs/melonjs/level.html#reload"},"LSiZvW8sc5aPu1NrVPOj2":{"uri":"/melonJS/docs/melonjs/loader.html"},"11676zJnYHXtCh8sBnRiK":{"uri":"/melonJS/docs/melonjs/loader.html#crossOrigin"},"6u8i_MdOSJy3HAR62cpqq":{"uri":"/melonJS/docs/melonjs/loader.html#onload"},"AULjrEsGmCSq70gy9Qs4D":{"uri":"/melonJS/docs/melonjs/loader.html#onProgress"},"Ig284h7rMolYowjFi7mxQ":{"uri":"/melonJS/docs/melonjs/loader.html#withCredentials"},"6U9Xm-8JBjl_r8K7I6HX2":{"uri":"/melonJS/docs/melonjs/loader.html#getBinary"},"v11Pkfsv-MbrzSOSFPqmx":{"uri":"/melonJS/docs/melonjs/loader.html#getImage"},"bO5abjk-3OjQAGFYhLJP7":{"uri":"/melonJS/docs/melonjs/loader.html#getJSON"},"xKFyncXryWdeg5Q9lIRTB":{"uri":"/melonJS/docs/melonjs/loader.html#getTMX"},"DoJPHumpdtseYDTdjB7UZ":{"uri":"/melonJS/docs/melonjs/loader.html#load"},"r1fID12OdQoe__AuDgfaj":{"uri":"/melonJS/docs/melonjs/loader.html#preload"},"bm7wkJrQP37M9cKVMZPZn":{"uri":"/melonJS/docs/melonjs/loader.html#setBaseURL"},"NvtUxkYKE0xl-wYcTUBil":{"uri":"/melonJS/docs/melonjs/loader.html#unload"},"lmd-tspRZ0xh6GrOFq-Et":{"uri":"/melonJS/docs/melonjs/loader.html#unloadAll"},"jRn2KB5BDSXU_1IdbTR2l":{"uri":"/melonJS/docs/melonjs/Math.html"},"3TOt1CK4CuAraJ-OdcRQM":{"uri":"/melonJS/docs/melonjs/Math.html#DEG_TO_RAD"},"jZADgDeDIkvNHrtJqzAof":{"uri":"/melonJS/docs/melonjs/Math.html#EPSILON"},"6by67P_B2Oi41GX5B-xPt":{"uri":"/melonJS/docs/melonjs/Math.html#ETA"},"t4ouRwRIshUIVjHJYeQRm":{"uri":"/melonJS/docs/melonjs/Math.html#RAD_TO_DEG"},"Z68_nkgKzc-8R7MZpizxj":{"uri":"/melonJS/docs/melonjs/Math.html#TAU"},"f9HVWW3dhdnvOfso2PnLS":{"uri":"/melonJS/docs/melonjs/Math/clamp.html"},"qPbMkzll0v2olHL_LktUb":{"uri":"/melonJS/docs/melonjs/Math/degToRad.html"},"uQvJ2eOQNx3kGgW8K5xJX":{"uri":"/melonJS/docs/melonjs/Math/isPowerOfTwo.html"},"VXbEtiX3a2XM57cUhJKRR":{"uri":"/melonJS/docs/melonjs/Math/nextPowerOfTwo.html"},"TDQROBDGaQEG46O7yBjGu":{"uri":"/melonJS/docs/melonjs/Math/radToDeg.html"},"jxZXB4NXFfEMmNZCE148S":{"uri":"/melonJS/docs/melonjs/Math/random.html"},"G-CXDR8_f5VPwg4sL2tyq":{"uri":"/melonJS/docs/melonjs/Math/randomFloat.html"},"SSYWEMRU8MaSEhYV0JuvI":{"uri":"/melonJS/docs/melonjs/Math/round.html"},"7Of6Vz-WdtL7Jb4tX3oZ9":{"uri":"/melonJS/docs/melonjs/Math/toBeCloseTo.html"},"lFD3OrrxTNZQQJYN5X4Ax":{"uri":"/melonJS/docs/melonjs/Math/weightedRandom.html"},"ZAFqEViErSAD7AtGlAebb":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html"},"aTRi9UU7jUZX6gldlt4Ch":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#angle"},"zx894xXrBNtwLe5XCwx-X":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#angleVariation"},"1tfEXsDHB58_6xfJljKAY":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#blendMode"},"Xh4gndogB-2kE6nznjrjA":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#duration"},"0uKxF33PnaSQX8nsUuXF1":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#floating"},"Y0cXqPdnW0cMrZwPZBggy":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#followTrajectory"},"ObY_iS6RaR9lX7UvYqVu-":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#framesToSkip"},"T26PqYMZmu1uriEsW1O4L":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#frequency"},"v9EWyV6wJUk4wGUr2VdmN":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#gravity"},"ztuovLhNv1GyISeIWkGLk":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#height"},"mOF8ifOuv81_ktfMu9qEd":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#image"},"sMFAfQIzDlyYe4kFeSu5Q":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxEndScale"},"ORI6s-6M1hZl5agdIxGRB":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxLife"},"XBF78Oj_iMvy6TI398wv0":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxParticles"},"mhl3v5-Uu4dFgmjSRHeFF":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxRotation"},"5OQ3s5iINroKB8mQ9CQjc":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#maxStartScale"},"o__TeAABcp9vN0WZln4wv":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minEndScale"},"GuK-pZA6fTlTDgTjtYznj":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minLife"},"BRDtH7FW05J9joHceZSAI":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minRotation"},"TjDuCxMeTxf55rxmceH1T":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#minStartScale"},"4jhS7gBI9WHIfobDE_BoD":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#onlyInViewport"},"OpSGrA0cBBki_KQRgGWEG":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#speed"},"Qc3kogO0TsNJ_xJkiNp-M":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#speedVariation"},"vALYKEUxyObbSf3TycvHs":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#textureAdditive"},"o8kCJc5c47AyH5oRnhosp":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#textureSize"},"FJdrVIICSWWRCJ1NQ7GyV":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#tint"},"RNcrdgnlxpiW_AQbVoAvZ":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#totalParticles"},"z4kOHKji70oOf-xWo7qH2":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#width"},"ZM1RafoPuYGRaHHRXMAkv":{"uri":"/melonJS/docs/melonjs/ParticleEmitterSettings.html#wind"},"t16bq3wVZKG0BtoUWwEpC":{"uri":"/melonJS/docs/melonjs/plugin.html"},"bGadQWhdaiExl8EOUeMav":{"uri":"/melonJS/docs/melonjs/plugin/Base.html"},"zM8IQUXG6QFiybT6pQ132":{"uri":"/melonJS/docs/melonjs/plugin/Base.html#version"},"ParHuKAKex7jF3jwL4OAf":{"uri":"/melonJS/docs/melonjs/plugin/Base.html#constructor"},"TbUPFkpCz3aQ-rmursL82":{"uri":"/melonJS/docs/melonjs/plugin.html#patch"},"G6ah9T-9cN7aYAprJJrPP":{"uri":"/melonJS/docs/melonjs/plugin.html#register"},"asfV1qpeRD2gTuP7dyAoH":{"uri":"/melonJS/docs/melonjs/plugins.html"},"xAe4rNiSaCB57VeIgjxlk":{"uri":"/melonJS/docs/melonjs/pool.html"},"bmd2mOZr0ZiGN-plnCp0N":{"uri":"/melonJS/docs/melonjs/save.html"},"vZj3O3eAPiqLaeK5lWOc1":{"uri":"/melonJS/docs/melonjs/save.html#add"},"FArKiJdzIu5EJngDbAz7W":{"uri":"/melonJS/docs/melonjs/save.html#remove"},"iBYJ_qIFby_M6YzW3uYAC":{"uri":"/melonJS/docs/melonjs/state.html"},"Q0VPGi3PUHE04ggRuZI_g":{"uri":"/melonJS/docs/melonjs/state.html#CREDITS"},"lQuGFtDfiG4VHw8GufCGu":{"uri":"/melonJS/docs/melonjs/state.html#GAME_END"},"rtX4swAmR7eCfO5NOwHnK":{"uri":"/melonJS/docs/melonjs/state.html#GAMEOVER"},"ybMKE9NhNI6c6vvonNg2e":{"uri":"/melonJS/docs/melonjs/state.html#LOADING"},"UcNLCIY4PPW8kT_iA1cRZ":{"uri":"/melonJS/docs/melonjs/state.html#MENU"},"tSypCWn4wvWjlVjUMp8Ry":{"uri":"/melonJS/docs/melonjs/state.html#PLAY"},"2VpQr3SIcNg65thas_EuR":{"uri":"/melonJS/docs/melonjs/state.html#READY"},"LZHhtZDvGY6Q6SH1h-G-P":{"uri":"/melonJS/docs/melonjs/state.html#SCORE"},"NsfA8-whGHNcflCRZH7eF":{"uri":"/melonJS/docs/melonjs/state.html#SETTINGS"},"cc2o8nt246j3Ifye2bsAO":{"uri":"/melonJS/docs/melonjs/state.html#SETTINGS"},"QlqtdhQse55ORx_FmGByc":{"uri":"/melonJS/docs/melonjs/state.html#USER"},"p0AVT5PgxgEu31AdvTqCr":{"uri":"/melonJS/docs/melonjs/state.html#change"},"auDGRddIGL4G8Mtqih3pq":{"uri":"/melonJS/docs/melonjs/state.html#current"},"gNx9J5eTkQymR6wSAfLcc":{"uri":"/melonJS/docs/melonjs/state.html#isCurrent"},"fv6hOP_mrhbwY77xUG7uq":{"uri":"/melonJS/docs/melonjs/state.html#isPaused"},"rwJZNA3faWXTKj5liYC2d":{"uri":"/melonJS/docs/melonjs/state.html#isRunning"},"pnUhVB8X8iNu4ejMn-kbV":{"uri":"/melonJS/docs/melonjs/state.html#pause"},"GtXyEOqrADAB8UAD6jIfO":{"uri":"/melonJS/docs/melonjs/state.html#restart"},"MtDC1UewUIJimzbSp5tyP":{"uri":"/melonJS/docs/melonjs/state.html#resume"},"yBB5jaLreib-5Kc1ej2HU":{"uri":"/melonJS/docs/melonjs/state.html#set"},"EFWyeNcDbuP47KsB5RkCR":{"uri":"/melonJS/docs/melonjs/state.html#setTransition"},"LD8xZ_CnI7u70zZXm7ep-":{"uri":"/melonJS/docs/melonjs/state.html#stop"},"evnqkFIAR7KdEqq5GGyEa":{"uri":"/melonJS/docs/melonjs/state.html#transition"},"OKx15uHAgHNCsnIA5uYnw":{"uri":"/melonJS/docs/melonjs/timer.html"},"pAyc0mBfvGzxGIpPucg55":{"uri":"/melonJS/docs/melonjs/timer.html#fps"},"FJ7IVoSKg1J1P-9RKMng5":{"uri":"/melonJS/docs/melonjs/timer.html#interpolation"},"B1oIRjy6Z4pazvhaMX5p0":{"uri":"/melonJS/docs/melonjs/timer.html#maxfps"},"ozzo2pbkyg_6ae4THE7et":{"uri":"/melonJS/docs/melonjs/timer.html#tick"},"FZ1HBlMuQ1eYEpvR3U_Rh":{"uri":"/melonJS/docs/melonjs/timer.html#clearInterval"},"q878M4GppKGu21BrdL7qu":{"uri":"/melonJS/docs/melonjs/timer.html#clearTimeout"},"I2MiIHuxQCXdO6fU2XpZY":{"uri":"/melonJS/docs/melonjs/timer.html#getDelta"},"MsbiIEmdUfbf9zX7hD8XM":{"uri":"/melonJS/docs/melonjs/timer.html#getTime"},"2SrrQ0k9vOBino-x6xuO8":{"uri":"/melonJS/docs/melonjs/timer.html#setInterval"},"sToUcBBTEpNX8Y9T7vv0A":{"uri":"/melonJS/docs/melonjs/timer.html#setTimeout"},"pkpPmeARxEABw8KkCm46p":{"uri":"/melonJS/docs/melonjs/utils.html"},"mrs3Fj5rNO15tiENV20Fy":{"uri":"/melonJS/docs/melonjs/utils/agent.html"},"UTkvIcMajroY3TwTq5tdq":{"uri":"/melonJS/docs/melonjs/utils/agent/prefixed.html"},"29_oVEp2LOt9aS-w4BCxW":{"uri":"/melonJS/docs/melonjs/utils/agent/setPrefixed.html"},"UoWnVaSNVqTNsDokIk3JK":{"uri":"/melonJS/docs/melonjs/utils/array.html"},"_Kp7_5fOq_2pJ1lS3B5Yn":{"uri":"/melonJS/docs/melonjs/utils/array/random.html"},"GDdnGX7q--gfjGvZamM5d":{"uri":"/melonJS/docs/melonjs/utils/array/remove.html"},"GsM_e_QnnZggZd3H-Xkjv":{"uri":"/melonJS/docs/melonjs/utils/array/weightedRandom.html"},"OUW277mQ2FB6r-SmurWcA":{"uri":"/melonJS/docs/melonjs/utils/file.html"},"bbjU2VcHBsLmkngtTDnZY":{"uri":"/melonJS/docs/melonjs/utils/file/getBasename.html"},"APxlexTBzp0WkOfHEexNo":{"uri":"/melonJS/docs/melonjs/utils/file/getExtension.html"},"0WosvuhtDSEQZg1ThLGFY":{"uri":"/melonJS/docs/melonjs/utils/function.html"},"zL_Sn5wX4joutTFMFjrgW":{"uri":"/melonJS/docs/melonjs/utils/function/defer.html"},"-ZgR-0lE0dYuh56v9dD4l":{"uri":"/melonJS/docs/melonjs/utils/function/throttle.html"},"JxlmOS7EPV-58ONY_hp1K":{"uri":"/melonJS/docs/melonjs/utils/string.html"},"xM75iXU5mfA4VKeAiy6Z1":{"uri":"/melonJS/docs/melonjs/utils/string/capitalize.html"},"sRvZJdAPyYzjihqNVD-hX":{"uri":"/melonJS/docs/melonjs/utils/string/isBoolean.html"},"r5liEDI8rvoU0Cg3lQOH_":{"uri":"/melonJS/docs/melonjs/utils/string/isNumeric.html"},"GW60WFhIDheJxTo57Y0va":{"uri":"/melonJS/docs/melonjs/utils/string/toHex.html"},"PtEQOve1ExWUoTLMj-T3j":{"uri":"/melonJS/docs/melonjs/utils/string/trimLeft.html"},"TCsh-5Z2nwBtymjCnY_um":{"uri":"/melonJS/docs/melonjs/utils/string/trimRight.html"},"oFZfYh61DdvRSgt6ZeCEU":{"uri":"/melonJS/docs/melonjs/utils.html#checkVersion"},"rO8K4siv_LGTeHbFYl5ok":{"uri":"/melonJS/docs/melonjs/utils.html#getPixels"},"_ZiAUms3Cv427_OpcDHKO":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment"},"1Ls-Dt96qUO59g1rGkZaf":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#debug"},"EZLtmhBhwZj4Nx7726t0o":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#debugToggleKey"},"6YFkU-gH9BirvCCCPS6NQ":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#hitbox"},"urof_q0u3BHEZ2hAFUtce":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#quadtree"},"3GvRWAKDsDKTUS_ARPxEN":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#velocity"},"IQ7piM--v95l89Hf2Rdx-":{"uri":"/melonJS/docs/melonjs/utils.html#getUriFragment#webgl"},"Rc46KLLVLaxjwZYXMk8E2":{"uri":"/melonJS/docs/melonjs/video.html"},"W2Jcw3P9jokV72F04ZUwd":{"uri":"/melonJS/docs/melonjs/video.html#AUTO"},"A2Kl7aJR6qfvxXgE47Q8k":{"uri":"/melonJS/docs/melonjs/video.html#CANVAS"},"BcwqfIzG544mzSHGrJNOt":{"uri":"/melonJS/docs/melonjs/video.html#renderer"},"GwbLIQvzwn2fDNY1i5-lV":{"uri":"/melonJS/docs/melonjs/video.html#scaleRatio"},"DV7wgIV9DH_WrCuAvz6WR":{"uri":"/melonJS/docs/melonjs/video.html#WEBGL"},"fB_bIH3sNoI3o7BrTT8t6":{"uri":"/melonJS/docs/melonjs/video/createCanvas.html"},"Ljc9ISArnNej2GNHyNOjO":{"uri":"/melonJS/docs/melonjs/video/getParent.html"},"UF_QVOoPG9zgOaOysPsmF":{"uri":"/melonJS/docs/melonjs/video/init.html"},"AptVXw6QY-lU9Ge3yUXGs":{"uri":"/melonJS/docs/melonjs/video/scale.html"},"FttMZygYX3nh7FdQ5k7nL":{"uri":"/melonJS/docs/melonjs/BitmapText.html"},"W2GwD_BpiS-x3HyEXnuPq":{"uri":"/melonJS/docs/melonjs/BitmapText.html#alpha"},"7wjNP2XLfslCQav5WRD_O":{"uri":"/melonJS/docs/melonjs/BitmapText.html#alwaysUpdate"},"vcMGg6FuAMA787btQH9uN":{"uri":"/melonJS/docs/melonjs/BitmapText.html#ancestor"},"pmpaOCAEuEii43jyzyM3g":{"uri":"/melonJS/docs/melonjs/BitmapText.html#anchorPoint"},"Y0RugB3UKUOc8c0W1VPY7":{"uri":"/melonJS/docs/melonjs/BitmapText.html#autoTransform"},"WesLQyBf8XW9sCz3O0S-Q":{"uri":"/melonJS/docs/melonjs/BitmapText.html#blendMode"},"E6iJYEzHFv42rl57QPJF1":{"uri":"/melonJS/docs/melonjs/BitmapText.html#body"},"P6A4zZwdqnWnUQAc6GnME":{"uri":"/melonJS/docs/melonjs/BitmapText.html#bottom"},"PaYjHxZAg78d0y5wW2sHe":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerX"},"1CpSYWjLdMX-mXpLD4EXV":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerY"},"zZqvQqZH6D0ePXI2q6j74":{"uri":"/melonJS/docs/melonjs/BitmapText.html#currentTransform"},"lWa3Ss8FIsHVa7iqQj4RD":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fillStyle"},"2vC3Ci-cp_X8xyoFZuWTc":{"uri":"/melonJS/docs/melonjs/BitmapText.html#floating"},"ShGY5x6jgVucex8DWQ56i":{"uri":"/melonJS/docs/melonjs/BitmapText.html#GUID"},"SM92ENSOl_u0uG0Wp-zlk":{"uri":"/melonJS/docs/melonjs/BitmapText.html#height"},"kg0z53Q7ebWVx_tDEtWPr":{"uri":"/melonJS/docs/melonjs/BitmapText.html#inViewport"},"K1Vslu_Db4aYU3ugQUYQu":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isDirty"},"u73z9xPdpigP-xZRBuxXY":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFlippedX"},"qjlDrFydQMb1oCOrDpLL0":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFlippedY"},"UbaqXJwirBTyIxr7VqaLL":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFloating"},"3_nh9yYiv7xCnW5sg1ovq":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isKinematic"},"PPgMEy7Sutpo4h7U5YdGp":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isPersistent"},"ZVxE5Z-FBqQlOFvYeMYQF":{"uri":"/melonJS/docs/melonjs/BitmapText.html#left"},"A3-V5R8eKL9Y6ImUM1Ws7":{"uri":"/melonJS/docs/melonjs/BitmapText.html#lineHeight"},"QersKu-ihNh-aWZ8qBmnO":{"uri":"/melonJS/docs/melonjs/BitmapText.html#mask"},"Rvd812E3-XOvgOKcniGSF":{"uri":"/melonJS/docs/melonjs/BitmapText.html#name"},"_K7Ibh9Yz9xYu4EpMMMAu":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onVisibilityChange"},"L9RtNM6eMAYB9xBJLCLIk":{"uri":"/melonJS/docs/melonjs/BitmapText.html#points"},"nMH77j6prI5xh2YHxUM7y":{"uri":"/melonJS/docs/melonjs/BitmapText.html#pos"},"7-IvauBnCe1Qkj7dsVaQ0":{"uri":"/melonJS/docs/melonjs/BitmapText.html#right"},"ftWQItp0BSc0nEAHyen4s":{"uri":"/melonJS/docs/melonjs/BitmapText.html#textAlign"},"VfVCNspcBwyNPig7GiQXw":{"uri":"/melonJS/docs/melonjs/BitmapText.html#textBaseline"},"tYBcropdOXzKJ5RE8Omo0":{"uri":"/melonJS/docs/melonjs/BitmapText.html#tint"},"UxqbgRX2eXJeuaLUw-MUW":{"uri":"/melonJS/docs/melonjs/BitmapText.html#top"},"U1pwDKzj3TXLODbTPylIH":{"uri":"/melonJS/docs/melonjs/BitmapText.html#updateWhenPaused"},"noHTuHHrsdHOOsMFu7f4d":{"uri":"/melonJS/docs/melonjs/BitmapText.html#width"},"c9E6vieksxahNBS6ZK6lC":{"uri":"/melonJS/docs/melonjs/BitmapText.html#wordWrapWidth"},"Sfo35NAkELnmkAv8h0f7G":{"uri":"/melonJS/docs/melonjs/BitmapText.html#_text"},"Uzyh7EFkJrWrzj_2ID2Tm":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontData"},"467uDA3b2X9b5Nox1UUE9":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontImage"},"XMSB_7RRnImLnxxNRnPry":{"uri":"/melonJS/docs/melonjs/BitmapText.html#fontScale"},"8PCn3oA5K7gW6_s7GYv5C":{"uri":"/melonJS/docs/melonjs/BitmapText.html#angleTo"},"UKldIr5_CrK5nyURnFKyr":{"uri":"/melonJS/docs/melonjs/BitmapText.html#centerOn"},"iTbHyYBRAzNysSngYP69M":{"uri":"/melonJS/docs/melonjs/BitmapText.html#clone"},"UkjchFXjQeGZQU20L-TSh":{"uri":"/melonJS/docs/melonjs/BitmapText.html#constructor"},"4Fta8SPZCC3qX_ZDgjBMM":{"uri":"/melonJS/docs/melonjs/BitmapText.html#contains"},"W_L9iXixFtNh6YVLskDgb":{"uri":"/melonJS/docs/melonjs/BitmapText.html#copy"},"X6EHj0BIem_Z3CtFetD_A":{"uri":"/melonJS/docs/melonjs/BitmapText.html#distanceTo"},"onv_TP8_gv7S7ARXoca4z":{"uri":"/melonJS/docs/melonjs/BitmapText.html#draw"},"qVVbHzgEYcu7lBHatsDUw":{"uri":"/melonJS/docs/melonjs/BitmapText.html#equals"},"DebuCE0fxo-mpohTKX5e2":{"uri":"/melonJS/docs/melonjs/BitmapText.html#flipX"},"TN6Ndord0o8J6TckHkWrW":{"uri":"/melonJS/docs/melonjs/BitmapText.html#flipY"},"4cpmxG6KEkthxPq-MQhXS":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getAbsolutePosition"},"QQhkvMOhNg93ujOcF_06w":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getBounds"},"Lb3_Dihq9Pp46n4_secYn":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getIndices"},"ynC6d7FC7zDferl58TgYE":{"uri":"/melonJS/docs/melonjs/BitmapText.html#getOpacity"},"nrbQ2Drx8Ixj5eukVC6RR":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isConvex"},"WNZGTufhjq2zhTVv8e2ck":{"uri":"/melonJS/docs/melonjs/BitmapText.html#isFinite"},"vZ0-HJvejyPiEx7XVbiCd":{"uri":"/melonJS/docs/melonjs/BitmapText.html#lookAt"},"ai5LVutCpOVomSFcMgJ7F":{"uri":"/melonJS/docs/melonjs/BitmapText.html#measureText"},"-cYL6pEtaVDrh0PBOHHlu":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onCollision"},"Yz4XEOyfkTJghhRYqdRhv":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onDestroyEvent"},"Q_u7FDWcB29ZTNfppczLp":{"uri":"/melonJS/docs/melonjs/BitmapText.html#overlaps"},"kZb8lOAegxuUwaAAFuX67":{"uri":"/melonJS/docs/melonjs/BitmapText.html#recalc"},"-7M1bdo-v2NKZ45BhGrHS":{"uri":"/melonJS/docs/melonjs/BitmapText.html#resize"},"vCmmkQ9PHwiPEhbICyKZ5":{"uri":"/melonJS/docs/melonjs/BitmapText.html#rotate"},"9l7POOaRSHatSlaglMSHR":{"uri":"/melonJS/docs/melonjs/BitmapText.html#scale"},"qf364Isiorl8oXj6_KWMN":{"uri":"/melonJS/docs/melonjs/BitmapText.html#scaleV"},"3Vrh1S66W9pG8seDsP2Km":{"uri":"/melonJS/docs/melonjs/BitmapText.html#set"},"xZZGYXtA49uDzcF39pddC":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setOpacity"},"xPS9AJyDlwSk18TVUNh8S":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setShape"},"1Orirr3-qbLqQ42NQ7H3e":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setText"},"G-aeq8ho-32RV6fwwC8oL":{"uri":"/melonJS/docs/melonjs/BitmapText.html#setVertices"},"YOy8V8GYEWml3LrTh3hWG":{"uri":"/melonJS/docs/melonjs/BitmapText.html#shift"},"1sO2oKgCrfdsXO-BMJ5dA":{"uri":"/melonJS/docs/melonjs/BitmapText.html#to2d"},"OYbmXPzTyky-hAlMwMqVZ":{"uri":"/melonJS/docs/melonjs/BitmapText.html#toIso"},"k4Pn6cgxisfofawRzQUoE":{"uri":"/melonJS/docs/melonjs/BitmapText.html#toPolygon"},"NQW0tfhZrn7j6FUfmHFeG":{"uri":"/melonJS/docs/melonjs/BitmapText.html#transform"},"0f6GIVhTU8Y9hTF3I86eh":{"uri":"/melonJS/docs/melonjs/BitmapText.html#translate"},"JvEKUjcSZ29fI2euxdGBK":{"uri":"/melonJS/docs/melonjs/BitmapText.html#union"},"uEQk3z-ZdTDfD3I627NpM":{"uri":"/melonJS/docs/melonjs/BitmapText.html#postDraw"},"53HkNyU_Mi1ID7ytkYyY1":{"uri":"/melonJS/docs/melonjs/BitmapText.html#preDraw"},"dBqt8Ur5Ll-eXLttnvjcC":{"uri":"/melonJS/docs/melonjs/BitmapText.html#update"},"D_KKoXsrtDqr8kSWyO_gX":{"uri":"/melonJS/docs/melonjs/BitmapText.html#onAnchorUpdate"},"VH54cwYy9M87MlUmFWWE_":{"uri":"/melonJS/docs/melonjs/Body.html"},"sRiXPvxChL2CWn3GSZeki":{"uri":"/melonJS/docs/melonjs/Body.html#ancestor"},"9-k7782e7W5iKQptg_8tN":{"uri":"/melonJS/docs/melonjs/Body.html#bounce"},"L70VJcUbNPYtbbNFi-YNt":{"uri":"/melonJS/docs/melonjs/Body.html#bounds"},"k-1iTopdjoh5xy5LhL4Cy":{"uri":"/melonJS/docs/melonjs/Body.html#collisionType"},"EBdL2DQFD4e-nkCSJW5sh":{"uri":"/melonJS/docs/melonjs/Body.html#falling"},"o8Jh2QDskiLfn_Wld-5Y-":{"uri":"/melonJS/docs/melonjs/Body.html#force"},"viK3hu8X430pQ700z4cuu":{"uri":"/melonJS/docs/melonjs/Body.html#friction"},"dI-oPZkAuDhanyYtycXvy":{"uri":"/melonJS/docs/melonjs/Body.html#gravityScale"},"relOGfJjOzIDu7394At_t":{"uri":"/melonJS/docs/melonjs/Body.html#ignoreGravity"},"OTpUyQgRrbAP9p41foXXX":{"uri":"/melonJS/docs/melonjs/Body.html#isStatic"},"X110wzAdWcaAtJq3vXYpz":{"uri":"/melonJS/docs/melonjs/Body.html#jumping"},"lAneIIPVZXed46skgmdfD":{"uri":"/melonJS/docs/melonjs/Body.html#mass"},"Fa1N9SEND03KyUPLh8xqg":{"uri":"/melonJS/docs/melonjs/Body.html#maxVel"},"cHwP-4NG-J1p7aX3Ur3dc":{"uri":"/melonJS/docs/melonjs/Body.html#vel"},"XLAYAviCF9ewBPN7mMopC":{"uri":"/melonJS/docs/melonjs/Body.html#addShape"},"pHIblexM4J9DJ_R58In4b":{"uri":"/melonJS/docs/melonjs/Body.html#addVertices"},"7TtiRnGzKPUQp73G0vrYq":{"uri":"/melonJS/docs/melonjs/Body.html#constructor"},"PNsBYuepo0zX3mPYJ6ivg":{"uri":"/melonJS/docs/melonjs/Body.html#contains"},"-clu28vHDZxQYwz9S-NdA":{"uri":"/melonJS/docs/melonjs/Body.html#contains"},"eb1avkif288uqITQpsTgb":{"uri":"/melonJS/docs/melonjs/Body.html#forEach"},"51yMiSEH2ZoiCwmi3AdXp":{"uri":"/melonJS/docs/melonjs/Body.html#fromJSON"},"dddQRnSJA0hZ7COiMuiui":{"uri":"/melonJS/docs/melonjs/Body.html#getBounds"},"gF5WsU4lpGY6k4oqKEs75":{"uri":"/melonJS/docs/melonjs/Body.html#getShape"},"fjEeiwIshCFTR6JyAjRhO":{"uri":"/melonJS/docs/melonjs/Body.html#removeShape"},"CCoyPZXQJFZGXd3tmjooZ":{"uri":"/melonJS/docs/melonjs/Body.html#removeShapeAt"},"uMIsCPvrCY6rk4ZBnnTEj":{"uri":"/melonJS/docs/melonjs/Body.html#respondToCollision"},"Yu-xP5nlkrf-Y7Vh_PqA5":{"uri":"/melonJS/docs/melonjs/Body.html#rotate"},"UhS_6LT185RXTuSKNoVtS":{"uri":"/melonJS/docs/melonjs/Body.html#setCollisionMask"},"4yg-AvjJsbkD-pp6VKakF":{"uri":"/melonJS/docs/melonjs/Body.html#setCollisionType"},"jOL4vtLC1bzzDmIczYrbQ":{"uri":"/melonJS/docs/melonjs/Body.html#setStatic"},"NmagobDC8j5hEAL_oAtaR":{"uri":"/melonJS/docs/melonjs/Body.html#setVertices"},"ViAE-5nq4sRLzKreRoPKS":{"uri":"/melonJS/docs/melonjs/Body.html#setFriction"},"zXzes8r2ODj-2iyMrxUIL":{"uri":"/melonJS/docs/melonjs/Body.html#setMaxVelocity"},"xoDTjzCt3i066ndGZ3WWn":{"uri":"/melonJS/docs/melonjs/Body.html#update"},"omQ7eRxqtQvqa0Ih_Zdze":{"uri":"/melonJS/docs/melonjs/Bounds.html"},"V5Ly0dsgeuuyPBJokjssa":{"uri":"/melonJS/docs/melonjs/Bounds.html#bottom"},"FZ-8Ak-nGNQhBAmDq_WIi":{"uri":"/melonJS/docs/melonjs/Bounds.html#center"},"lEi9RQIcMgUNAI3cO9xhQ":{"uri":"/melonJS/docs/melonjs/Bounds.html#centerX"},"IwsoktmQShNQqMkzBf323":{"uri":"/melonJS/docs/melonjs/Bounds.html#centerY"},"K0pIuUXG664RzZKxthnjP":{"uri":"/melonJS/docs/melonjs/Bounds.html#left"},"xj0wVOJIWDUTtCpk8DI9H":{"uri":"/melonJS/docs/melonjs/Bounds.html#right"},"GEccJaB0ValFeMv5soXbx":{"uri":"/melonJS/docs/melonjs/Bounds.html#top"},"yYu_nOPKc4yAwmDEfPP2D":{"uri":"/melonJS/docs/melonjs/Bounds.html#width"},"ZJWfvst1HjJ4t0ZspdYLI":{"uri":"/melonJS/docs/melonjs/Bounds.html#width"},"J1IiOLqOo3n1wE339ebj2":{"uri":"/melonJS/docs/melonjs/Bounds.html#x"},"uWNBP4pnEo8IU1HUaNWDV":{"uri":"/melonJS/docs/melonjs/Bounds.html#y"},"lYvaoUXL9R3wrFpKxkum6":{"uri":"/melonJS/docs/melonjs/Bounds.html#add"},"QNsnHG1-voeFjuMXfoX65":{"uri":"/melonJS/docs/melonjs/Bounds.html#addBounds"},"Q12oVCy8XJY9n55CQ-OnJ":{"uri":"/melonJS/docs/melonjs/Bounds.html#addFrame"},"kaQAhcYygZmkK4VKFMRVM":{"uri":"/melonJS/docs/melonjs/Bounds.html#addPoint"},"cg1WdBvbOMTtZf4btlYvy":{"uri":"/melonJS/docs/melonjs/Bounds.html#clear"},"MeeEpWPHUwDsaQ0bWJ_vo":{"uri":"/melonJS/docs/melonjs/Bounds.html#clone"},"gvYkX5mfT8rJZ8InAe3eR":{"uri":"/melonJS/docs/melonjs/Bounds.html#constructor"},"GMPUeT-HWPyxzus8i5fSz":{"uri":"/melonJS/docs/melonjs/Bounds.html#contains"},"1DwmXtKjCVKhIDT79-49s":{"uri":"/melonJS/docs/melonjs/Bounds.html#isFinite"},"GjJCOyWi3Se1axfLNYToB":{"uri":"/melonJS/docs/melonjs/Bounds.html#overlaps"},"pFMOZ3RXWZ6sADVhtwRBq":{"uri":"/melonJS/docs/melonjs/Bounds.html#setMinMax"},"Dc2SMYEo4-g8-E-VL_ngP":{"uri":"/melonJS/docs/melonjs/Bounds.html#shift"},"lg-e_gSoq3XuH-FjjrMub":{"uri":"/melonJS/docs/melonjs/Bounds.html#toPolygon"},"bNSxI6j1NhDxKoCDwyGvs":{"uri":"/melonJS/docs/melonjs/Bounds.html#translate"},"CUPcvCwgMuKDrppzaq8LT":{"uri":"/melonJS/docs/melonjs/Bounds.html#update"},"XrNYu5wtI7K5PwqxS4DF9":{"uri":"/melonJS/docs/melonjs/Bounds.html#contains"},"iysOqSvyLcN59W8FA2rP4":{"uri":"/melonJS/docs/melonjs/Bounds.html#shift"},"l8AdGTemHAPkRVWUgUh_l":{"uri":"/melonJS/docs/melonjs/Bounds.html#translate"},"yJdAg4x1NTVogMPtHHpcg":{"uri":"/melonJS/docs/melonjs/Camera2d.html"},"Qr4g1IRKG3XCfZyoJV8uq":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html"},"tgok10myHTE76qfewWzXc":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#BOTH"},"Lh-Dp8Z2Fi3KUXki-nB9b":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#HORIZONTAL"},"uHVLu3uU6Fc_z9JRXrjVQ":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#NONE"},"ujQVmPj_V6CCkSQN-abCn":{"uri":"/melonJS/docs/melonjs/Camera2d/AXIS.html#VERTICAL"},"Rup5g_y2EnIMKjOq2ahQO":{"uri":"/melonJS/docs/melonjs/Camera2d.html#alpha"},"ql6CQgLk6OfLklGASy7Vq":{"uri":"/melonJS/docs/melonjs/Camera2d.html#alwaysUpdate"},"gMYVdJPVDMUkQrXvz_aSP":{"uri":"/melonJS/docs/melonjs/Camera2d.html#ancestor"},"BP1QLaUB2PB2YZcAk7P5i":{"uri":"/melonJS/docs/melonjs/Camera2d.html#anchorPoint"},"i8U9JaXk7phWmSQQBQfjN":{"uri":"/melonJS/docs/melonjs/Camera2d.html#autoTransform"},"J2I-L20lN3rqJsyFNsRIW":{"uri":"/melonJS/docs/melonjs/Camera2d.html#blendMode"},"vjS-JG9NZ1gjzpNTySOXY":{"uri":"/melonJS/docs/melonjs/Camera2d.html#body"},"4AVS28oNEcQcQcPUjQ-8W":{"uri":"/melonJS/docs/melonjs/Camera2d.html#bottom"},"bHBD0wi6IJiVRG2PsSGYJ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#bounds"},"sEwGqUzMcaZNkSK50mf_j":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerX"},"_iCyF2o-39rE3EXMUtMPW":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerY"},"qzlvGbrzBvloNLFnHtkDd":{"uri":"/melonJS/docs/melonjs/Camera2d.html#currentTransform"},"8U7lwRFW3e1QPAkji9ry2":{"uri":"/melonJS/docs/melonjs/Camera2d.html#damping"},"xAKYmZ3rdZzAL-O4zDNMA":{"uri":"/melonJS/docs/melonjs/Camera2d.html#far"},"kcE_CVmAkqlPWYmZEs1Jn":{"uri":"/melonJS/docs/melonjs/Camera2d.html#floating"},"nf3soBk9kES6jRiyVSl-S":{"uri":"/melonJS/docs/melonjs/Camera2d.html#GUID"},"gQmfQGtrGNoqYFe1-FGYg":{"uri":"/melonJS/docs/melonjs/Camera2d.html#height"},"mzJDoJodbr4ciVP-RgiaQ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#inViewport"},"SN4mN5tEkfaaWZc5EzQeJ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isDirty"},"DcUdqF3RhXHSIYBf-fUwE":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFlippedX"},"eC39aJW_2CdxjQ6_fJQvv":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFlippedY"},"Bp8QpBzj940rjmwmsMfs7":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFloating"},"au6-bPZZmtZ91g6tkiWwk":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isKinematic"},"Z1v-Keylr0hbhN-S03TFH":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isPersistent"},"39Z5gJKoebz6l2JMxX9QZ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#left"},"eninTRvpt3UOdFucJvDyb":{"uri":"/melonJS/docs/melonjs/Camera2d.html#mask"},"rPv-AHjYUgbnbFU3mS7O6":{"uri":"/melonJS/docs/melonjs/Camera2d.html#name"},"gL8wpdaxGvxSjdMnjuD1b":{"uri":"/melonJS/docs/melonjs/Camera2d.html#near"},"2hgD8OaPbNb6__3cKHBUa":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onVisibilityChange"},"Jkoa50ay8v3tXWwFTuqnh":{"uri":"/melonJS/docs/melonjs/Camera2d.html#points"},"D9FgtJ7_Ok22jk-1_d1Xm":{"uri":"/melonJS/docs/melonjs/Camera2d.html#pos"},"d-5qw1ccGrFiH568ktvcv":{"uri":"/melonJS/docs/melonjs/Camera2d.html#projectionMatrix"},"LnjaVartHLXHuUgFut8Tt":{"uri":"/melonJS/docs/melonjs/Camera2d.html#right"},"15fqGNc0NUrUs77iS8fzo":{"uri":"/melonJS/docs/melonjs/Camera2d.html#tint"},"hws7jlgOnJoJekwRIjz8l":{"uri":"/melonJS/docs/melonjs/Camera2d.html#top"},"PchGMdpC1oxQSMlOrE1d_":{"uri":"/melonJS/docs/melonjs/Camera2d.html#updateWhenPaused"},"zBcgq_sqL53zav8MKnBG3":{"uri":"/melonJS/docs/melonjs/Camera2d.html#width"},"krXaPclYCROhSYW4IutRi":{"uri":"/melonJS/docs/melonjs/Camera2d.html#smoothFollow"},"cc924O1SRuceEplE4oLN9":{"uri":"/melonJS/docs/melonjs/Camera2d.html#angleTo"},"cybDHZTbeIu_y-ANQOGPj":{"uri":"/melonJS/docs/melonjs/Camera2d.html#centerOn"},"8cRk-B7TkKyUyrefx175t":{"uri":"/melonJS/docs/melonjs/Camera2d.html#clone"},"Z3TBtxl4VH609ahhHHDkp":{"uri":"/melonJS/docs/melonjs/Camera2d.html#constructor"},"hphvBerfDgaGsqhiZL3Nz":{"uri":"/melonJS/docs/melonjs/Camera2d.html#contains"},"TemcfDEWqebF55OxaMI2Q":{"uri":"/melonJS/docs/melonjs/Camera2d.html#copy"},"U-XXXy7oXD_DFfvYzY4CL":{"uri":"/melonJS/docs/melonjs/Camera2d.html#distanceTo"},"rP7bkz5I7EqMK6dJ6nhoj":{"uri":"/melonJS/docs/melonjs/Camera2d.html#equals"},"oFFtRanpgVUrBBLLN5u7i":{"uri":"/melonJS/docs/melonjs/Camera2d.html#fadeIn"},"FR_ny8GxIPqaq2kdlZ2F-":{"uri":"/melonJS/docs/melonjs/Camera2d.html#fadeOut"},"K-XFrPALI2VkIqokYeCho":{"uri":"/melonJS/docs/melonjs/Camera2d.html#flipX"},"aAiLYXcioeYalKUoa--4z":{"uri":"/melonJS/docs/melonjs/Camera2d.html#flipY"},"nKuvmA5k8QFWWWdQJWhw3":{"uri":"/melonJS/docs/melonjs/Camera2d.html#focusOn"},"T0TaDasgdByZxAKNpL4E3":{"uri":"/melonJS/docs/melonjs/Camera2d.html#follow"},"UaFiVvty0c1PHYFVr-ZdD":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getAbsolutePosition"},"2yYsjeUJU8q8QnXhahj6E":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getBounds"},"JmUk2YxsdgGHNEqqJXqRf":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getIndices"},"znSt9VK-Oc6V1R97LUbLp":{"uri":"/melonJS/docs/melonjs/Camera2d.html#getOpacity"},"NYRZwA9v98FtI6kECy5vY":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isConvex"},"1BlYxM5MIWP0U5VXqRaox":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isFinite"},"AuUjaqbiNhFWrwSZiweRA":{"uri":"/melonJS/docs/melonjs/Camera2d.html#isVisible"},"RoKwlEdjMp_DvoUs1EKOe":{"uri":"/melonJS/docs/melonjs/Camera2d.html#localToWorld"},"PI8iGQn3wH-xwDC24fMqW":{"uri":"/melonJS/docs/melonjs/Camera2d.html#lookAt"},"5rMRerQxameawvanI_hGf":{"uri":"/melonJS/docs/melonjs/Camera2d.html#move"},"pJJtN1V3p8uUig0cAdsqD":{"uri":"/melonJS/docs/melonjs/Camera2d.html#moveTo"},"A2KzhVAXZjETqAnk-AfgI":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onCollision"},"zYRaWKhoM24Abc0_w1MX8":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onDestroyEvent"},"TrqnEGENu5aXYMAx1Z77u":{"uri":"/melonJS/docs/melonjs/Camera2d.html#overlaps"},"5MjUNH5MKFIepmzs2a_WD":{"uri":"/melonJS/docs/melonjs/Camera2d.html#recalc"},"mCmelU8qCpu_1Qv06s4KE":{"uri":"/melonJS/docs/melonjs/Camera2d.html#reset"},"VPpCqbEehcKF-gJVvLewM":{"uri":"/melonJS/docs/melonjs/Camera2d.html#resize"},"LpxGQq6ndXZFyVHFEmHb9":{"uri":"/melonJS/docs/melonjs/Camera2d.html#rotate"},"It0s40VgQGbvRUtYNh_b6":{"uri":"/melonJS/docs/melonjs/Camera2d.html#scale"},"z38ZZuLjn7twxoqPmoTo5":{"uri":"/melonJS/docs/melonjs/Camera2d.html#scaleV"},"NtWM89HpqeccRBXsuh2C1":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setBounds"},"jNo-3D7fX_pmtzSChKhaV":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setDeadzone"},"VqTMWFpQndYGw94K_sh66":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setOpacity"},"DTb18LJ7lTMsv4le1UEfS":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setShape"},"VkCy_kXzCjyYrYEjwSBSL":{"uri":"/melonJS/docs/melonjs/Camera2d.html#setVertices"},"yWsVm6f1iGGEF_RZBV-7w":{"uri":"/melonJS/docs/melonjs/Camera2d.html#shake"},"nJZsfCItSy6HMnVXX_m4U":{"uri":"/melonJS/docs/melonjs/Camera2d.html#shift"},"My34yX3bkAyUy0c_AS2iL":{"uri":"/melonJS/docs/melonjs/Camera2d.html#to2d"},"AdC1Z3xqXrmIQX-ix3ngA":{"uri":"/melonJS/docs/melonjs/Camera2d.html#toIso"},"3BYH9TIu_PqNZ2Ibf-Klt":{"uri":"/melonJS/docs/melonjs/Camera2d.html#toPolygon"},"u4ip6BWIXHbC0m0SAaa3l":{"uri":"/melonJS/docs/melonjs/Camera2d.html#transform"},"HtNRIJhLHHHweMDGO0W8A":{"uri":"/melonJS/docs/melonjs/Camera2d.html#translate"},"i8VI-zivq1ohGct9JNKRb":{"uri":"/melonJS/docs/melonjs/Camera2d.html#unfollow"},"dNs9fn8_ikNuYd5QrzYKv":{"uri":"/melonJS/docs/melonjs/Camera2d.html#union"},"iPmDYUy4OBvOrNyXFGERk":{"uri":"/melonJS/docs/melonjs/Camera2d.html#worldToLocal"},"GJHpQtOoITL6VDFeNqJLx":{"uri":"/melonJS/docs/melonjs/Camera2d.html#draw"},"cJtWkHduSjWw5JY3uudke":{"uri":"/melonJS/docs/melonjs/Camera2d.html#postDraw"},"yYQeAJbmivuxVl1yxExVJ":{"uri":"/melonJS/docs/melonjs/Camera2d.html#preDraw"},"xBL9JjtIzv2KNHoUCVdjy":{"uri":"/melonJS/docs/melonjs/Camera2d.html#update"},"DKJMlst9l_r8sEq2gT71l":{"uri":"/melonJS/docs/melonjs/Camera2d.html#onAnchorUpdate"},"GFa353Oc6UkNKGEJNV62c":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html"},"sziZa_7DKMDOdk9lC_DKc":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#isContextValid"},"XlrFJ3atL1EVxnvGUi5o8":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#path2D"},"u0GkuZCSssdYC_HGC6ZWd":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#settings"},"exLoB4FG5DqI8c_vuUYjH":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clear"},"2Sbimuaq0XEPCKu9zekoF":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearColor"},"wsXQcZCCKXuSF_uwD219Q":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearMask"},"nWmrgM3MC0-tO3OVS8G_8":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearRect"},"KCIqbEVWSzjxQ4FkMq7eN":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clearTint"},"F89ZQ5d6bW7p0dyeDtm35":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#clipRect"},"mpSVURu6r9IzSwZbJ8pmi":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#constructor"},"rJVUkqyBe_fMEIB4eLj8f":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#createPattern"},"rB7WYn1aNSA75PMQ4w31N":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#drawImage"},"zSqJFK9xhHuKk59pF1-sa":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#drawPattern"},"n84yEuYanaVNAt_wWYgvW":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fill"},"MNyzK72s7NC35DHCoUxl8":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillArc"},"GDHKuFKBrUTL7VWLF_lhY":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillEllipse"},"1v2nOA6dS6hgg12OT2f0c":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillLine"},"aBfjttpTAatctMtuRSpXH":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillPolygon"},"uFJVUz5zdgJB2bpboH6aM":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillRect"},"HwP3o5Y1EGsIgEbsGAcx5":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#fillRoundRect"},"EKCKZ-vHMS5wXsvSVFWHk":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#flush"},"kgeLAXGzS0j6932wtUgjc":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getBlendMode"},"fVzOKcofKWLTw1USQXdN4":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getCanvas"},"b9A8zfwnB_-oXDrW7MluB":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getColor"},"A97vwonlGN-YZgV_AxTc5":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getContext"},"3-L_Ut4X_Mav_x2MnRmZS":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getContext2d"},"GSpOP151mZJbwFueAGfbG":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getGlobalAlpha"},"1uEgGaNBOkLqfmZ23sk9a":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getHeight"},"RPy0KXwZdsmMKDtZTPE5-":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getScreenCanvas"},"4F1Gk9sCAK5Z6Erqqg97m":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getScreenContext"},"rLc9TrPZYinK2knJtROM8":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#getWidth"},"jKpq8glH2NSjFPAMXDbm8":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#globalAlpha"},"-hyX1kR9cgBuiz0cWx55b":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#overlaps"},"XTsrlsomBtbdz2P66-dy1":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#reset"},"7VEpTc9iQ0Ge3J_G6vJm8":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#resetTransform"},"CD1zqcc_OA1g66C6uLZQR":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#resize"},"nSfGr8LsS0qF3MUMCrzUw":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#restore"},"zBY9LWLWQhZI3zprbFzWZ":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#rotate"},"emcM6SZiOCvAf7p_3Bt7x":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#save"},"ikSWDNd7iEmRTt4xnFTAG":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#scale"},"qgRAC_RxeKB7l1rr17jfw":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setAntiAlias"},"-JjuUA0g1aoxf26QcCH2c":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setBlendMode"},"oIXbPBTRY5lROV_SsjzBZ":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setColor"},"vCa2B2I-10cGDdbeM7gfP":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setGlobalAlpha"},"iRUTSY7PiUj0famFA4wpH":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setLineWidth"},"Pe1UHYHHdTw5nsZjDVmK-":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setMask"},"TR9-oUXBT19IzXDgWdUk8":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setProjection"},"XiZqhZpBZGA15xDAgC2an":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setTint"},"c1XjEh0W_ACGQHWpbtWyJ":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#setTransform"},"kemgNS3cIpp1lK9nIfq0w":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#stroke"},"7sLR1n2Dgbs-MrBRr159V":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeArc"},"hTzKvlrO_uBfS5Aknhvgt":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeEllipse"},"z0awxoKf_xCr36Jc0b3OU":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeLine"},"Qt9zGcU_LF19KxIF4OxKq":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokePolygon"},"WNhvfrvHQqlLlCogBYdnM":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeRect"},"-gLOIJs1C8fA9LgfrJ8Qs":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#strokeRoundRect"},"i_QnPQoCTvWvbf-w-MVol":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#tint"},"HwwaybatOTz8SC-qa0UzF":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#transform"},"2NbBH3e6zfmbY0Nv2iOe4":{"uri":"/melonJS/docs/melonjs/CanvasRenderer.html#translate"},"_aGvis8biFiinxvyx21ER":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html"},"ji79diVc-fel4AVJht3zv":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#canvas"},"oPtaOiij3vIs-liMZNX9G":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#context"},"ivgKt10xy0bT3Taogjbt3":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#height"},"0sMGJr264NkEl8h9DTmvP":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#width"},"Zuu7ZbAfNZApW08NFMHIe":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#clear"},"88qv3EjZqLHY2kKqLYym6":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#constructor"},"KSQuhixvXMKaCMq8J00ig":{"uri":"/melonJS/docs/melonjs/CanvasTexture.html#resize"},"c57WTONYqcv-zueyZhyAc":{"uri":"/melonJS/docs/melonjs/Collectable.html"},"cbCxZA4NW4UTut4pjaVXf":{"uri":"/melonJS/docs/melonjs/Collectable.html#alpha"},"nQz7BkBkZorFS0CFAM9-e":{"uri":"/melonJS/docs/melonjs/Collectable.html#alwaysUpdate"},"2EN7iJdDqFCTQNopvydHV":{"uri":"/melonJS/docs/melonjs/Collectable.html#ancestor"},"r8HLHz-vU1MQ_CsGlsdF-":{"uri":"/melonJS/docs/melonjs/Collectable.html#anchorPoint"},"8841487T2dJB49eOcdPtW":{"uri":"/melonJS/docs/melonjs/Collectable.html#animationpause"},"TnL2A3cW6RTVd5JoZzxAu":{"uri":"/melonJS/docs/melonjs/Collectable.html#animationspeed"},"kAn3WY0OJUacjh1MFrY47":{"uri":"/melonJS/docs/melonjs/Collectable.html#autoTransform"},"v-7swJ_XohP_skVP0q1uT":{"uri":"/melonJS/docs/melonjs/Collectable.html#blendMode"},"gEYUsfE__xQq4TwNcZ5WY":{"uri":"/melonJS/docs/melonjs/Collectable.html#body"},"iNOBYLDY4EEqhQE52aKT9":{"uri":"/melonJS/docs/melonjs/Collectable.html#bottom"},"59xb1GzCRezkOqiIRgaZ0":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerX"},"pJumV6JmdNCYqkx6sPhoe":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerY"},"_xIWIkintSJQ72bsCk49I":{"uri":"/melonJS/docs/melonjs/Collectable.html#currentTransform"},"Lfxs9ZoszCU62omVPI2zN":{"uri":"/melonJS/docs/melonjs/Collectable.html#floating"},"X5R9cDqtrTz5Khl9S295d":{"uri":"/melonJS/docs/melonjs/Collectable.html#GUID"},"XiEvmCDeMNLmKqtXgk3M3":{"uri":"/melonJS/docs/melonjs/Collectable.html#height"},"yQB2iKetu6htWuJD5F0HY":{"uri":"/melonJS/docs/melonjs/Collectable.html#inViewport"},"MT99xwuS3JTlUDc8Vgk_o":{"uri":"/melonJS/docs/melonjs/Collectable.html#isDirty"},"WEOmgKLH1_cbh18CgMmsM":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlippedX"},"K7vh4ASlWXEOrULrI9hIw":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlippedY"},"jwo8oRJbye4cjsJnr5aaE":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFloating"},"rz6jCBPdM1H_K1-_aBEEJ":{"uri":"/melonJS/docs/melonjs/Collectable.html#isKinematic"},"ESv2YpMfDKgqWWn7aB6WR":{"uri":"/melonJS/docs/melonjs/Collectable.html#isPersistent"},"wRXnelu7pXLXl62mvR3P_":{"uri":"/melonJS/docs/melonjs/Collectable.html#left"},"VFsDxNwBR5gv8oX4kLh6J":{"uri":"/melonJS/docs/melonjs/Collectable.html#mask"},"PcKkdACCa37w4mWlnYlp7":{"uri":"/melonJS/docs/melonjs/Collectable.html#name"},"6X9K6kduV_Se1ZI3lqI5B":{"uri":"/melonJS/docs/melonjs/Collectable.html#offset"},"lCMbAn6VHnDKDI_SO3ybL":{"uri":"/melonJS/docs/melonjs/Collectable.html#onVisibilityChange"},"-nqbslpRrzigAjcRCkkFB":{"uri":"/melonJS/docs/melonjs/Collectable.html#points"},"Zc46GpQAi7a7HLZZMqZOw":{"uri":"/melonJS/docs/melonjs/Collectable.html#pos"},"_Jm1Mb1FnsQZv1F3Ova49":{"uri":"/melonJS/docs/melonjs/Collectable.html#right"},"U5IuKb3qQjL7S1UGvoxhQ":{"uri":"/melonJS/docs/melonjs/Collectable.html#source"},"N8_tmXs4NCIeZ6iKfutzX":{"uri":"/melonJS/docs/melonjs/Collectable.html#tint"},"LH7CG-QkFtPYgYBpDiWsV":{"uri":"/melonJS/docs/melonjs/Collectable.html#top"},"BRJZpMsisZx-2U2nq3iBn":{"uri":"/melonJS/docs/melonjs/Collectable.html#updateWhenPaused"},"nzHRIU3sx1vKG-p815yzA":{"uri":"/melonJS/docs/melonjs/Collectable.html#width"},"7ALriTvSdpgtvlpY5HBZk":{"uri":"/melonJS/docs/melonjs/Collectable.html#addAnimation"},"rsXZAty4Fu0CJJxadfvij":{"uri":"/melonJS/docs/melonjs/Collectable.html#angleTo"},"vAGoLeusJA-u4cUmzf_kj":{"uri":"/melonJS/docs/melonjs/Collectable.html#centerOn"},"0vHm2M1-_jc3h0uuvqk1D":{"uri":"/melonJS/docs/melonjs/Collectable.html#clone"},"2OxoS6hSv3apO5KdKCvrH":{"uri":"/melonJS/docs/melonjs/Collectable.html#constructor"},"Y5arF03j8DYFqmmwJWdYn":{"uri":"/melonJS/docs/melonjs/Collectable.html#contains"},"ofKoFgT4r79UmXNxHLGvY":{"uri":"/melonJS/docs/melonjs/Collectable.html#copy"},"z1RJ5LzltuiT41Y8P63TI":{"uri":"/melonJS/docs/melonjs/Collectable.html#distanceTo"},"bmFGPrSRyVu6S1j_elHLQ":{"uri":"/melonJS/docs/melonjs/Collectable.html#equals"},"94Y2yhn5Bz2-XiUrQwGf5":{"uri":"/melonJS/docs/melonjs/Collectable.html#flicker"},"nlcLjru-seysVRaqG1tRA":{"uri":"/melonJS/docs/melonjs/Collectable.html#flipX"},"RF4q_w3SIyk_GZPr02L91":{"uri":"/melonJS/docs/melonjs/Collectable.html#flipY"},"gw-CNRZ4dKcfx9XkWKvnz":{"uri":"/melonJS/docs/melonjs/Collectable.html#getAbsolutePosition"},"pa670xTP3kgcCl3kHtWHg":{"uri":"/melonJS/docs/melonjs/Collectable.html#getBounds"},"0SxEQhvmzlfhGH8qU84rN":{"uri":"/melonJS/docs/melonjs/Collectable.html#getCurrentAnimationFrame"},"u2tzpPlBpVVzK3q4H3m9e":{"uri":"/melonJS/docs/melonjs/Collectable.html#getIndices"},"bA1SRKNtRSMOuYs7ebx0c":{"uri":"/melonJS/docs/melonjs/Collectable.html#getOpacity"},"0Glg1cm55afQXszGuJX_f":{"uri":"/melonJS/docs/melonjs/Collectable.html#isConvex"},"OntxBV73K18Og4glSDl6m":{"uri":"/melonJS/docs/melonjs/Collectable.html#isCurrentAnimation"},"AsClWd0gzWQFIaDwPj7n5":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFinite"},"b4dWp23-_N9nepV_n_fSg":{"uri":"/melonJS/docs/melonjs/Collectable.html#isFlickering"},"pl2N0N2u8ubJiZ-5rBabc":{"uri":"/melonJS/docs/melonjs/Collectable.html#lookAt"},"u_BsQDKIsxB-bIndELb3S":{"uri":"/melonJS/docs/melonjs/Collectable.html#onCollision"},"WpoUx4jjnzsf3phHpXwV3":{"uri":"/melonJS/docs/melonjs/Collectable.html#onDestroyEvent"},"rudvZdf0d2Ujk-4M3d8vQ":{"uri":"/melonJS/docs/melonjs/Collectable.html#overlaps"},"1Db9E_24d2gfnNXLD02Mt":{"uri":"/melonJS/docs/melonjs/Collectable.html#recalc"},"1zLa7_MPmMcyFLq-URyfO":{"uri":"/melonJS/docs/melonjs/Collectable.html#resize"},"lu5b8O3OhXk2szzu52goY":{"uri":"/melonJS/docs/melonjs/Collectable.html#reverseAnimation"},"Bfv9MiTQru0CMr003x2Fz":{"uri":"/melonJS/docs/melonjs/Collectable.html#rotate"},"cmzkSUNRuI4p8oXu16SSv":{"uri":"/melonJS/docs/melonjs/Collectable.html#scale"},"G8fdP-QXNLCpQ-enLJuUL":{"uri":"/melonJS/docs/melonjs/Collectable.html#scaleV"},"3E8S6s3P-HL60GnKYfHb0":{"uri":"/melonJS/docs/melonjs/Collectable.html#setAnimationFrame"},"pUJAM2CXWPZjgwp7st504":{"uri":"/melonJS/docs/melonjs/Collectable.html#setCurrentAnimation"},"fSZpVPqnqpUF1iU2hHmpw":{"uri":"/melonJS/docs/melonjs/Collectable.html#setOpacity"},"T84FOCGaTfYvx5EewN_HH":{"uri":"/melonJS/docs/melonjs/Collectable.html#setRegion"},"uKVE-m6XsPkFOh1jegyLK":{"uri":"/melonJS/docs/melonjs/Collectable.html#setShape"},"TszWIuJAQIT6G2KM-jIMn":{"uri":"/melonJS/docs/melonjs/Collectable.html#setVertices"},"uOpNPgHiytPNgLLAVJ5q6":{"uri":"/melonJS/docs/melonjs/Collectable.html#shift"},"AQy5Ao6IG-F9frIBvbIJd":{"uri":"/melonJS/docs/melonjs/Collectable.html#to2d"},"we6TI6-J4iVLI9MtHf2o9":{"uri":"/melonJS/docs/melonjs/Collectable.html#toIso"},"923iT6vF7K2PxYhpUMW4z":{"uri":"/melonJS/docs/melonjs/Collectable.html#toPolygon"},"a8_nph629an5vEPfbajhr":{"uri":"/melonJS/docs/melonjs/Collectable.html#transform"},"BXT-Ts35bBAS1n1Pl0j2n":{"uri":"/melonJS/docs/melonjs/Collectable.html#translate"},"S7HT24gDf0NFDLbJmSo9r":{"uri":"/melonJS/docs/melonjs/Collectable.html#union"},"foh2WCL7_hBFmsMDqYs3S":{"uri":"/melonJS/docs/melonjs/Collectable.html#draw"},"Ttl5rB5yU_RX0A6G4lPRX":{"uri":"/melonJS/docs/melonjs/Collectable.html#postDraw"},"fqZH2V30ucmf-w7pEe-5w":{"uri":"/melonJS/docs/melonjs/Collectable.html#preDraw"},"Zg_HRJEUDa1a9p4ObMiYV":{"uri":"/melonJS/docs/melonjs/Collectable.html#update"},"sgzf4LzBJO0iciyaA0op5":{"uri":"/melonJS/docs/melonjs/Collectable.html#onAnchorUpdate"},"hTOumMmAw4mvA7GESVMMD":{"uri":"/melonJS/docs/melonjs/Color.html"},"f_FhderLiqVKiysjWJ2lY":{"uri":"/melonJS/docs/melonjs/Color.html#alpha"},"128WcbU34rAJ1il7RKwJW":{"uri":"/melonJS/docs/melonjs/Color.html#b"},"BbV1tavnaYVTR89B7ePid":{"uri":"/melonJS/docs/melonjs/Color.html#g"},"QFSaYB4ctiDTnps9IgKJ4":{"uri":"/melonJS/docs/melonjs/Color.html#r"},"AntKhASJPxxWeHW2BkF7f":{"uri":"/melonJS/docs/melonjs/Color.html#add"},"WhNac33-8_VDXKg_Db2kM":{"uri":"/melonJS/docs/melonjs/Color.html#clone"},"A0MIsVYgTl2SJw7_LywbE":{"uri":"/melonJS/docs/melonjs/Color.html#constructor"},"7XpbbSHriOPwiR2YiuneM":{"uri":"/melonJS/docs/melonjs/Color.html#copy"},"0hXtzLHBNgzHDpYptXwOV":{"uri":"/melonJS/docs/melonjs/Color.html#darken"},"LwOy7CceEcEiv6WwJgiB4":{"uri":"/melonJS/docs/melonjs/Color.html#equals"},"b_yFxSK3QP3gwoQrKGwGq":{"uri":"/melonJS/docs/melonjs/Color.html#lerp"},"WmBdQav2rQtl_3zj7WOEQ":{"uri":"/melonJS/docs/melonjs/Color.html#lighten"},"AToL7b90nGtQuWoQk5Bz6":{"uri":"/melonJS/docs/melonjs/Color.html#parseCSS"},"AQpNM5quxfdKDaOJw1HCk":{"uri":"/melonJS/docs/melonjs/Color.html#parseHex"},"DTH5xugyYr193Qs15_Ryk":{"uri":"/melonJS/docs/melonjs/Color.html#parseRGB"},"7CjRJtUTFErFrP_Rr3EvB":{"uri":"/melonJS/docs/melonjs/Color.html#random"},"-Od4Un8mBZUxutPpqs-hp":{"uri":"/melonJS/docs/melonjs/Color.html#setColor"},"pEXm-CrINoL3-swqG9AJQ":{"uri":"/melonJS/docs/melonjs/Color.html#toArray"},"9RVOn-Dwd0POPTbM8m_4B":{"uri":"/melonJS/docs/melonjs/Color.html#toHex"},"yfwdInI9NJmbFcutYHYxB":{"uri":"/melonJS/docs/melonjs/Color.html#toHex8"},"nQo9yza170tuKfaG2Kwcy":{"uri":"/melonJS/docs/melonjs/Color.html#toRGB"},"1FLCkiSzh56x2WQbxYXaM":{"uri":"/melonJS/docs/melonjs/Color.html#toRGBA"},"olm_4d2-7D0rs_dX65ZuK":{"uri":"/melonJS/docs/melonjs/Color.html#toUint32"},"7pTcywzWi_e3mkil5j4xy":{"uri":"/melonJS/docs/melonjs/ColorLayer.html"},"RB9kCTx_cjI1U_b1cvq-r":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#alpha"},"A28-MKMndqi2QFogxaa6a":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#alwaysUpdate"},"ROwHYT-2iFBN1PDEgA9lq":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#ancestor"},"SolmOcZLqCsWtVyj3udCC":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#anchorPoint"},"YofHAFDgOuXu9g0zh7J0K":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#autoTransform"},"DdaesbpnARcnTYdGS4Hdu":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#blendMode"},"WqGIq5bCVHwILlvI4hzaR":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#body"},"-LG0jfXty9H53Ny7Xq5Ga":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#bottom"},"slQ9g04eg-6y5tY7fqYwk":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerX"},"Ikho466kmIqKsrCOrfcyi":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerY"},"fQBlsugKeAowg9vJKJYPr":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#color"},"LnKBgklisgRdwcNSOyKKc":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#currentTransform"},"w9g1wyzrJAZcj-jkaT-9C":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#floating"},"pOrubG88GAbb_nFhZhOnE":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#GUID"},"-5V5oPiJLk1bJFpxSv4YG":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#height"},"tbk5ytMOdGRAcuw8LtCSv":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#inViewport"},"hnqTZxcnTnwmemaoqQ0lf":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isDirty"},"gRNL8wVjmhIhcOUeHo2H5":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFlippedX"},"yAilmapd4SWSFzYch2G-k":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFlippedY"},"n6GlcXX60LMemY9RUpvDA":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFloating"},"dEFMBO4Ecd5F51OseDARa":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isKinematic"},"VOweX2D7gddG_-7xrcizc":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isPersistent"},"bK5tUOkoGTDTyTPlUX-L9":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#left"},"AnpoYcBmHmltHvtUKWeCe":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#mask"},"5H0G6Yfixx3woyyD7zG7g":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#name"},"iiJZE_pjBUR97JMxpU8fJ":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onVisibilityChange"},"8oBKj0V6Tqzg36zNk_4wr":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#points"},"kNmxDBhmFb6wYBy8Tw5jp":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#pos"},"fS-3jB0XTDoSzXWhdThwc":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#right"},"D-N_VP-r89jaNeBCUwf_5":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#tint"},"EkcL9Ra7aZCCndromg0VH":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#top"},"mDIsGdJeeXmmlNOExbaFn":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#updateWhenPaused"},"VUimNWlNp4gUshD08xxRZ":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#width"},"kySELqJihILvRwy851WHL":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#angleTo"},"lwXDyrbs0136IacgFRceH":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#centerOn"},"N-0v94aQMt2MHh2QOWeLG":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#clone"},"dj_sKF5UIULCkj_pekSwf":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#constructor"},"h4lNlfAqhnsjp_-5FQsHt":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#contains"},"ANiF4hW3eKggveH6tNpEQ":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#copy"},"9-K6vxFRwaGJayaWunZMi":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#distanceTo"},"Hb4mJjY6kwa1tT78w_OOj":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#equals"},"R4s8sTA7Svf6Z58G4LUYH":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#flipX"},"ohTRoGHtwwKTwPVefjR06":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#flipY"},"qzg3oed0ww3B0KqNM37YJ":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getAbsolutePosition"},"A2LvpP9A66rLOvA8Rf7Lf":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getBounds"},"VKRkWX85dsbGr1BZT-5LT":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getIndices"},"eI1PtD3RpfZqFXo5t305M":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#getOpacity"},"5mMuP6xwNIx_3axABi133":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isConvex"},"ATHIcJ_sp-xhupxNTZhpt":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#isFinite"},"I_BwMlXck8xoPstcJ3UDp":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#lookAt"},"0yIoR0T-1dLCCsbMOaVk1":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onCollision"},"k7dkiQFrmhigd7vrA3GJZ":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onDestroyEvent"},"NApZMRg1eBIcsi_5jwaTv":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#overlaps"},"tks_qoiDXnV5aPdtH8IP4":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#recalc"},"Zyysj2FcHIFov4o3vUW9g":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#resize"},"agQwcC6CbeRrZ0ow0uNYG":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#rotate"},"wsnmfyAkecGbOnQAXokai":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#scale"},"3d5sdrxyboRyPhNMr9Crl":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#scaleV"},"jxHaRJ-v9JrTvKl14NUnk":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setOpacity"},"nk1zw5sT05gkC0s-94a91":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setShape"},"o6iYjmqcwfMKUsXZ24brK":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#setVertices"},"yLix9H3JOxpw8SfQZvPEa":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#shift"},"TaOBbCbJx7cQIczwOTMRG":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#to2d"},"z2U_cJWm2whC8VRTyaYzs":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#toIso"},"JeEU0rWNAw4HkVxOKNMmf":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#toPolygon"},"lA9nFk8yrjkf8QvyW_K4a":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#transform"},"Ts7c0kRhp8vqorZbow7mE":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#translate"},"9CMsFiApSistjOjmWgV4k":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#union"},"psJaA02m21mlVLwN3-k1J":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#draw"},"1PEfEtBIHTlry8gn3LiYv":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#postDraw"},"1co2Qrkq_h0RcTDJrVYLH":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#preDraw"},"0bBbRk450rwweXG3VnxXw":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#update"},"0kkdfCBi6HVqP1ANpLFyL":{"uri":"/melonJS/docs/melonjs/ColorLayer.html#onAnchorUpdate"},"rqQwdjDvS5xm2rSFM2u9T":{"uri":"/melonJS/docs/melonjs/Container.html"},"nWZKYFyl6mkRsiBR4G4Lm":{"uri":"/melonJS/docs/melonjs/Container.html#alpha"},"UKJYVFywbnZeaV_ZjSvLO":{"uri":"/melonJS/docs/melonjs/Container.html#alwaysUpdate"},"NNtM4nraVih_IP_-ZM6TM":{"uri":"/melonJS/docs/melonjs/Container.html#ancestor"},"j9s9bVj5fslWP7Cxevazp":{"uri":"/melonJS/docs/melonjs/Container.html#anchorPoint"},"vtmdFasVWD_AtRdUBFnTZ":{"uri":"/melonJS/docs/melonjs/Container.html#autoDepth"},"Wy2M8om7QfjCszYxxgYXF":{"uri":"/melonJS/docs/melonjs/Container.html#autoSort"},"9t6aLQfGaKAYsqOsWnv_9":{"uri":"/melonJS/docs/melonjs/Container.html#autoTransform"},"c4NpuVEuWmEbuRgmyUDjQ":{"uri":"/melonJS/docs/melonjs/Container.html#backgroundColor"},"2grfN48cwcfyrIOnYss8r":{"uri":"/melonJS/docs/melonjs/Container.html#blendMode"},"wbMFz5YsPGJ88PFQFk4cd":{"uri":"/melonJS/docs/melonjs/Container.html#body"},"7lgpkOEd6ZGsDPP3xuGqt":{"uri":"/melonJS/docs/melonjs/Container.html#bottom"},"QM2K_rW7unzlgw_hxVWxk":{"uri":"/melonJS/docs/melonjs/Container.html#centerX"},"tQowmb_C8bnCyKsZY_7PA":{"uri":"/melonJS/docs/melonjs/Container.html#centerY"},"uuXoSOJTzXOTOh8H1WNBB":{"uri":"/melonJS/docs/melonjs/Container.html#clipping"},"tkNEx8Ch-nHjaC0hz-aeH":{"uri":"/melonJS/docs/melonjs/Container.html#currentTransform"},"1Qe9AKEd2rMmoSS-QHZHr":{"uri":"/melonJS/docs/melonjs/Container.html#enableChildBoundsUpdate"},"Hxr18c4-Bm5up0CegKCcx":{"uri":"/melonJS/docs/melonjs/Container.html#floating"},"0YTto8HtrNsqsCTvKAJ8_":{"uri":"/melonJS/docs/melonjs/Container.html#GUID"},"8jc8RQaooBGAJiQL7dAF7":{"uri":"/melonJS/docs/melonjs/Container.html#height"},"4wCLYSQfUIvulg7sfBHLu":{"uri":"/melonJS/docs/melonjs/Container.html#inViewport"},"0PWJ6kF7hN1iBK7-8EIqp":{"uri":"/melonJS/docs/melonjs/Container.html#isDirty"},"CJ2sP2t5g9H5LVkIcng59":{"uri":"/melonJS/docs/melonjs/Container.html#isFlippedX"},"EVhqoJlGUTQNrBBzaVohe":{"uri":"/melonJS/docs/melonjs/Container.html#isFlippedY"},"g6wM1Yl7na2_yADoukq-v":{"uri":"/melonJS/docs/melonjs/Container.html#isFloating"},"hIoB2OFLJvipgEl8vchGy":{"uri":"/melonJS/docs/melonjs/Container.html#isKinematic"},"D8M6Nt2y8gweDazaBSjRx":{"uri":"/melonJS/docs/melonjs/Container.html#isPersistent"},"I-qyPzMpE_wdLDVKPx2qH":{"uri":"/melonJS/docs/melonjs/Container.html#left"},"BT71j-EsRhcWxArwhpHAy":{"uri":"/melonJS/docs/melonjs/Container.html#mask"},"gqRw7C6xvRNwDU91mLlGE":{"uri":"/melonJS/docs/melonjs/Container.html#name"},"ZW1v77NXjScN-yjXEqh3u":{"uri":"/melonJS/docs/melonjs/Container.html#onVisibilityChange"},"QWUd_syeQSOM0iC4vC9zT":{"uri":"/melonJS/docs/melonjs/Container.html#points"},"sJwyqaoO_df4lyZRUwjEq":{"uri":"/melonJS/docs/melonjs/Container.html#pos"},"gYdej568dPGgJQnGE8wA1":{"uri":"/melonJS/docs/melonjs/Container.html#right"},"L6Imu6AB3hw8Xd5RRsSPW":{"uri":"/melonJS/docs/melonjs/Container.html#root"},"cSWLrBS90h7fYKCpRwrdb":{"uri":"/melonJS/docs/melonjs/Container.html#sortOn"},"nG--GJ6v6d0M4yMUqXuWt":{"uri":"/melonJS/docs/melonjs/Container.html#tint"},"pGZPlTGUNxmMKWpHbasxi":{"uri":"/melonJS/docs/melonjs/Container.html#top"},"E6qd8oZedgwWktePrmBdY":{"uri":"/melonJS/docs/melonjs/Container.html#updateWhenPaused"},"8lDwQIKTNbXzzQKQHIHFG":{"uri":"/melonJS/docs/melonjs/Container.html#width"},"yuDQ_r7eHTk3g-qk_kAje":{"uri":"/melonJS/docs/melonjs/Container.html#addChild"},"atDioQqrpMxDGmRrEvoP8":{"uri":"/melonJS/docs/melonjs/Container.html#addChildAt"},"7Tp3XzQyNlDiFz41-HemL":{"uri":"/melonJS/docs/melonjs/Container.html#angleTo"},"NNWf_znDqIQPUL8j4uT7J":{"uri":"/melonJS/docs/melonjs/Container.html#centerOn"},"_vt0wzuZ-vE0zopzWxzri":{"uri":"/melonJS/docs/melonjs/Container.html#clone"},"aeukGqILDF5COqN8M7sk2":{"uri":"/melonJS/docs/melonjs/Container.html#constructor"},"YnoOptXPcHVbYazpkZNCt":{"uri":"/melonJS/docs/melonjs/Container.html#contains"},"V0yYylNjTziuDbOuuUGaQ":{"uri":"/melonJS/docs/melonjs/Container.html#copy"},"LwujFHdXCkEwXQYzjB0T0":{"uri":"/melonJS/docs/melonjs/Container.html#distanceTo"},"dH00sZSbbwb_cSp70Pia9":{"uri":"/melonJS/docs/melonjs/Container.html#equals"},"RyEJ-nutVJT-Co7z3WCnq":{"uri":"/melonJS/docs/melonjs/Container.html#flipX"},"69A59aAlsFbnUpW6uR38S":{"uri":"/melonJS/docs/melonjs/Container.html#flipY"},"gKYBew55QunrZo0LY6kyR":{"uri":"/melonJS/docs/melonjs/Container.html#forEach"},"MZmha8DCggtYLO4j66Gu_":{"uri":"/melonJS/docs/melonjs/Container.html#getAbsolutePosition"},"u1fHpIEZ5Q8vDzBK7U1j4":{"uri":"/melonJS/docs/melonjs/Container.html#getBounds"},"HbbHN5SST2xVLCcvsyVES":{"uri":"/melonJS/docs/melonjs/Container.html#getChildAt"},"qiwRpzZP5MsSqsPW_lb_f":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByGUID"},"PIgpdN1Lj89oqBvGc-FOF":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByName"},"HCdVLLawLGmuXaTXYEvJS":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByProp"},"UxJPFyhhT4sKhQXcR8YAj":{"uri":"/melonJS/docs/melonjs/Container.html#getChildByType"},"vMasHH71IzYjb9l2fdOec":{"uri":"/melonJS/docs/melonjs/Container.html#getChildIndex"},"LM_nGpQc7awbrBVst36uj":{"uri":"/melonJS/docs/melonjs/Container.html#getChildren"},"RVwC5nxahD_oYnW2ETUZK":{"uri":"/melonJS/docs/melonjs/Container.html#getIndices"},"QfinochOFSom-H3MnVsQG":{"uri":"/melonJS/docs/melonjs/Container.html#getNextChild"},"KLC78zY2rtsXsPXtC639Y":{"uri":"/melonJS/docs/melonjs/Container.html#getOpacity"},"9SzwLkcXtPuq5rsZ54phf":{"uri":"/melonJS/docs/melonjs/Container.html#hasChild"},"MAJHaL7wCmcV4zjZg9lVH":{"uri":"/melonJS/docs/melonjs/Container.html#isConvex"},"TzUaSuisXdn3JZOTiOneP":{"uri":"/melonJS/docs/melonjs/Container.html#isFinite"},"7hkYOCf9aLERaF32WIMUp":{"uri":"/melonJS/docs/melonjs/Container.html#lookAt"},"3vxF0RT_7yyYibbwSyag1":{"uri":"/melonJS/docs/melonjs/Container.html#moveDown"},"vwPY-S4fWBUnEHVryCRLP":{"uri":"/melonJS/docs/melonjs/Container.html#moveToBottom"},"Opqllb1AG3aMO47ZmldqG":{"uri":"/melonJS/docs/melonjs/Container.html#moveToTop"},"-Lhg7nkAs-8pMf-uThPJM":{"uri":"/melonJS/docs/melonjs/Container.html#moveUp"},"LDRRQFMyAvS-WwoC1S-73":{"uri":"/melonJS/docs/melonjs/Container.html#onChildChange"},"pn8LV4r3REyepTN6d6kDq":{"uri":"/melonJS/docs/melonjs/Container.html#onCollision"},"AZMrllJ3k4B6VVpLo2TV2":{"uri":"/melonJS/docs/melonjs/Container.html#onDestroyEvent"},"ApQKfR1P2CDkZam-WsP5V":{"uri":"/melonJS/docs/melonjs/Container.html#overlaps"},"LQ0JqlS96rRdBsNe5KPAD":{"uri":"/melonJS/docs/melonjs/Container.html#recalc"},"lSUBGjzTQxLotTkoqpuyC":{"uri":"/melonJS/docs/melonjs/Container.html#removeChild"},"vcojBd8MSMFgJdi8JlNsU":{"uri":"/melonJS/docs/melonjs/Container.html#removeChildNow"},"nHUKD0ZZIDUq8ppeXXTE0":{"uri":"/melonJS/docs/melonjs/Container.html#reset"},"KJwb8wZAvxjwjasvKFa6f":{"uri":"/melonJS/docs/melonjs/Container.html#resize"},"QDFhjchBWEWtxCSDOJULd":{"uri":"/melonJS/docs/melonjs/Container.html#rotate"},"zP4wc3BxuhEOL0i0hdUFJ":{"uri":"/melonJS/docs/melonjs/Container.html#scale"},"sqbAON2-UMt1ADmn6DzXM":{"uri":"/melonJS/docs/melonjs/Container.html#scaleV"},"cmSnm1TLmfjjQmmTGLwGr":{"uri":"/melonJS/docs/melonjs/Container.html#setChildsProperty"},"OevoauATGw5pj7xkdvU9d":{"uri":"/melonJS/docs/melonjs/Container.html#setOpacity"},"DOqNiEs_hNmeXvIpKK-ih":{"uri":"/melonJS/docs/melonjs/Container.html#setShape"},"2WNp_pJgv0stQ53xTf5tR":{"uri":"/melonJS/docs/melonjs/Container.html#setVertices"},"iigTNvByGSdD20f273S3n":{"uri":"/melonJS/docs/melonjs/Container.html#shift"},"X6j3aIcvYwk_nOjXmq4jF":{"uri":"/melonJS/docs/melonjs/Container.html#sort"},"O38HRsTyK_BgFcpozqi-8":{"uri":"/melonJS/docs/melonjs/Container.html#swapChildren"},"RlDABDQsoSJkwpMNgC1Pc":{"uri":"/melonJS/docs/melonjs/Container.html#to2d"},"MqG1K6U1PzZ9aPVTc3T9R":{"uri":"/melonJS/docs/melonjs/Container.html#toIso"},"d6UY00EEGSdWJqD-v0gPP":{"uri":"/melonJS/docs/melonjs/Container.html#toPolygon"},"sAyGqXWohLMLD0pFkfUEz":{"uri":"/melonJS/docs/melonjs/Container.html#transform"},"DXQlIEeJtSCR53a7wkAG8":{"uri":"/melonJS/docs/melonjs/Container.html#translate"},"EiS4jm8_BT8NWkJQxRnnr":{"uri":"/melonJS/docs/melonjs/Container.html#union"},"9QM8_fxDPWEfdP7SIE6RD":{"uri":"/melonJS/docs/melonjs/Container.html#draw"},"_kPcrMG55JdJLtFISA1oS":{"uri":"/melonJS/docs/melonjs/Container.html#postDraw"},"Tz6CF92F49unsOPNeo06P":{"uri":"/melonJS/docs/melonjs/Container.html#preDraw"},"s7qNcrFqHaiBdL8E_aeyS":{"uri":"/melonJS/docs/melonjs/Container.html#update"},"4qCuJi9gbYe8IZ4h58Owb":{"uri":"/melonJS/docs/melonjs/Container.html#isAttachedToRoot"},"j3Xhb1ymNDy-hIC9qhsVX":{"uri":"/melonJS/docs/melonjs/Container.html#onAnchorUpdate"},"2xkWNbfgi_v85cxulx_hi":{"uri":"/melonJS/docs/melonjs/Draggable.html"},"-toHU2SnImSEYw8JhccKy":{"uri":"/melonJS/docs/melonjs/Draggable.html#alpha"},"Jx9jv4jZBvHqfgSBcmv5M":{"uri":"/melonJS/docs/melonjs/Draggable.html#alwaysUpdate"},"rZAXbP7SDUZNea5iKSLoJ":{"uri":"/melonJS/docs/melonjs/Draggable.html#ancestor"},"f-xNQKNuzNoyMJE7AW67I":{"uri":"/melonJS/docs/melonjs/Draggable.html#anchorPoint"},"XDm9IIaI-5GUwPDkUrNY1":{"uri":"/melonJS/docs/melonjs/Draggable.html#autoTransform"},"eOmSOaA1irrgQcck8KcPu":{"uri":"/melonJS/docs/melonjs/Draggable.html#blendMode"},"Knu9krYfXCV1myoN68R4L":{"uri":"/melonJS/docs/melonjs/Draggable.html#body"},"BxyVYngnOhXJ3-Zpzc5pj":{"uri":"/melonJS/docs/melonjs/Draggable.html#bottom"},"yT5YepodPFh1ZngzhcRLT":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerX"},"cgHK7t2-esDcgHYQ7b_KG":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerY"},"v1Hb0c8zZOA33wTGKEhln":{"uri":"/melonJS/docs/melonjs/Draggable.html#currentTransform"},"cDHsfCfTAZLri3j-o-_a1":{"uri":"/melonJS/docs/melonjs/Draggable.html#floating"},"q6Y6zHej5Qm2-2M-idrVZ":{"uri":"/melonJS/docs/melonjs/Draggable.html#GUID"},"yxAphiraeTkQVTNqKhRgp":{"uri":"/melonJS/docs/melonjs/Draggable.html#height"},"jHV6k_iQLN9mTiS16ypJy":{"uri":"/melonJS/docs/melonjs/Draggable.html#inViewport"},"mZrbGj7toqNuPpQPVgCRd":{"uri":"/melonJS/docs/melonjs/Draggable.html#isDirty"},"BlH5570SnWQa2OUj2pgBI":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFlippedX"},"L6nWpG0e5dEcBshQ7skka":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFlippedY"},"MnWV0AB5Gm5VFU7b6DlO8":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFloating"},"IZnmWtWnI7oPZJtaKzjTG":{"uri":"/melonJS/docs/melonjs/Draggable.html#isKinematic"},"4VzmDHjC3y3bf3OyfElpD":{"uri":"/melonJS/docs/melonjs/Draggable.html#isPersistent"},"o0tUCZarPt3BMhKXBXXWC":{"uri":"/melonJS/docs/melonjs/Draggable.html#left"},"YCBHslrhehJ1tkDOo1aee":{"uri":"/melonJS/docs/melonjs/Draggable.html#mask"},"9X8YSkSbbke-YrXynyLxl":{"uri":"/melonJS/docs/melonjs/Draggable.html#name"},"cR8NszFkrslQ92Ypuqaht":{"uri":"/melonJS/docs/melonjs/Draggable.html#onVisibilityChange"},"fZ2QoUqNLXTaQI5LHiDP0":{"uri":"/melonJS/docs/melonjs/Draggable.html#points"},"5vXLhTjqxwimN2uzeP7j3":{"uri":"/melonJS/docs/melonjs/Draggable.html#pos"},"mjJdBHBDuORzHwt_Bh5Lb":{"uri":"/melonJS/docs/melonjs/Draggable.html#right"},"cE1wB5MVSQS31FsLAq0An":{"uri":"/melonJS/docs/melonjs/Draggable.html#tint"},"NWtO3IdgsAU_SK3VFvlB4":{"uri":"/melonJS/docs/melonjs/Draggable.html#top"},"r8VbhBXDHtteZyrb4QX8V":{"uri":"/melonJS/docs/melonjs/Draggable.html#updateWhenPaused"},"NSYcfFRasR3NdbA8gvivR":{"uri":"/melonJS/docs/melonjs/Draggable.html#width"},"DjoFMddlITT6K8F7xSf1p":{"uri":"/melonJS/docs/melonjs/Draggable.html#angleTo"},"WLYfI1C3Fq8GDp_LAsppK":{"uri":"/melonJS/docs/melonjs/Draggable.html#centerOn"},"UH9srX81rHeuqDSzJ5QJB":{"uri":"/melonJS/docs/melonjs/Draggable.html#clone"},"NjmfJrztcj9Rl2Kqgckfn":{"uri":"/melonJS/docs/melonjs/Draggable.html#constructor"},"LROUwivsWgzKqZy127ggD":{"uri":"/melonJS/docs/melonjs/Draggable.html#contains"},"tYD64E6ITZ-NtVRAqH-Dc":{"uri":"/melonJS/docs/melonjs/Draggable.html#copy"},"D-GwXFJxQiOhGkgUKSqhC":{"uri":"/melonJS/docs/melonjs/Draggable.html#distanceTo"},"_knolHWeWCL5QHF-ZKZ0b":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragEnd"},"Va0c49aPf09YArVJiq6k-":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragMove"},"rjuce1OSZZtzJYnRBxx4H":{"uri":"/melonJS/docs/melonjs/Draggable.html#dragStart"},"Yxh_qWuqNulyrmEsuFRDt":{"uri":"/melonJS/docs/melonjs/Draggable.html#equals"},"8y1FrlxL47z4I8dy8UHby":{"uri":"/melonJS/docs/melonjs/Draggable.html#flipX"},"Lq4IDh2PlJkCq8wiLSi2p":{"uri":"/melonJS/docs/melonjs/Draggable.html#flipY"},"XJHv9mFe7vK32dAvtXTfQ":{"uri":"/melonJS/docs/melonjs/Draggable.html#getAbsolutePosition"},"YW86DyJUbJKrNwPoOw3Wc":{"uri":"/melonJS/docs/melonjs/Draggable.html#getBounds"},"YJZvzWJHfKXEsIe6z5oOO":{"uri":"/melonJS/docs/melonjs/Draggable.html#getIndices"},"Sw1xX5hgKd21ZNS_geAWo":{"uri":"/melonJS/docs/melonjs/Draggable.html#getOpacity"},"sasocTrKOFsKk0RypFpuy":{"uri":"/melonJS/docs/melonjs/Draggable.html#isConvex"},"WSDMEDq-nhh6HsdaDnaPE":{"uri":"/melonJS/docs/melonjs/Draggable.html#isFinite"},"-j0kcOKAeJ6OTVWcGExiC":{"uri":"/melonJS/docs/melonjs/Draggable.html#lookAt"},"4s0vQuHGnDi1C8Ldd6pBT":{"uri":"/melonJS/docs/melonjs/Draggable.html#onCollision"},"6QPjTcDWpe1IQ40iV0TNg":{"uri":"/melonJS/docs/melonjs/Draggable.html#onDestroyEvent"},"mC-TCXQ7_aOTl5obuGxJz":{"uri":"/melonJS/docs/melonjs/Draggable.html#overlaps"},"0g7r75FRg4bktG0mwOsg0":{"uri":"/melonJS/docs/melonjs/Draggable.html#recalc"},"-mFxHxR4ADeKShQ1noD0b":{"uri":"/melonJS/docs/melonjs/Draggable.html#resize"},"Hx0HQDuTK5RU42yap5FQP":{"uri":"/melonJS/docs/melonjs/Draggable.html#rotate"},"yO7i9zdS3RPYmbHtjlpKC":{"uri":"/melonJS/docs/melonjs/Draggable.html#scale"},"_zZYpMsscziifL4z9uN53":{"uri":"/melonJS/docs/melonjs/Draggable.html#scaleV"},"w20SENphW6CStOcnGUmAO":{"uri":"/melonJS/docs/melonjs/Draggable.html#setOpacity"},"zdYLZrkio8RT6k-SLO3jf":{"uri":"/melonJS/docs/melonjs/Draggable.html#setShape"},"z4fCGBgcKIwn-NKndn14L":{"uri":"/melonJS/docs/melonjs/Draggable.html#setVertices"},"iD75yXZJ9-m-wYCvdDoFX":{"uri":"/melonJS/docs/melonjs/Draggable.html#shift"},"9mXF8KyjQSXjCFGA_d5S_":{"uri":"/melonJS/docs/melonjs/Draggable.html#to2d"},"nwUmnJ1rtSu4jzM0mn6JF":{"uri":"/melonJS/docs/melonjs/Draggable.html#toIso"},"77r-4oJjRv1Wkgg-hK1Vi":{"uri":"/melonJS/docs/melonjs/Draggable.html#toPolygon"},"3tKMYDHQMhPk2lRlJAsw1":{"uri":"/melonJS/docs/melonjs/Draggable.html#transform"},"ZxtayMnWROMdvTmo9ZFFa":{"uri":"/melonJS/docs/melonjs/Draggable.html#translate"},"L862y3WjOzkaRA4oxVgF1":{"uri":"/melonJS/docs/melonjs/Draggable.html#union"},"DeqwnkXUjGiEOw0SVj14c":{"uri":"/melonJS/docs/melonjs/Draggable.html#draw"},"JkOUH65pm5tfsVkNNCaL3":{"uri":"/melonJS/docs/melonjs/Draggable.html#postDraw"},"xdnHbCSrJMbBcm6CumbMA":{"uri":"/melonJS/docs/melonjs/Draggable.html#preDraw"},"BePtui_Oy77CW6kRtEb2n":{"uri":"/melonJS/docs/melonjs/Draggable.html#update"},"qwDAoCD1CW8HN5unNdNDB":{"uri":"/melonJS/docs/melonjs/Draggable.html#initEvents"},"jHMTcyxrm3NX2_2FuwoBr":{"uri":"/melonJS/docs/melonjs/Draggable.html#onAnchorUpdate"},"EUBQwy5whLCeo0gwdj4DF":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html"},"3EPPm1WO6AAl3vedSZqXg":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alive"},"hErMvlxBMrprL_3pkOfy2":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alpha"},"NY6trF6RQd4sFMef88V6W":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#alwaysUpdate"},"r6sA5HBURpiFrFwjbHuAS":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#ancestor"},"sOY5nVQf-7pKBGpjy9pn9":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#anchorPoint"},"5Sic2FXxnJKCHb4kal7Ca":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#autoTransform"},"pzXMv-XAjff8QmVCbIj8K":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#blendMode"},"u54RyYW0ARMoOoXEM8G3n":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#bottom"},"GVkh6Zqfx9SEfBB_x9umf":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerX"},"f5pYUQHdIwGveVse3pqaD":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerY"},"hn3fGiwYaP_ewKziry8sO":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#currentTransform"},"v5GQIiuK2yLNkWvAD9pw6":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#floating"},"XF_TLLmYIr5MeaelGSCR_":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#GUID"},"VOW0_WmhrvRYoH6N1b7vJ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#height"},"NdBUVsGNYmBx-2ZK0K6Lu":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#id"},"sjvhWgfGYSA4jfbPFKgNS":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#inViewport"},"HEhFH3A7njyKg6MM8yO_H":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isDirty"},"1rkphceSNNruJYIjMTt8L":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFlippedX"},"EfrbX-QlQQEjL_jBm8HV6":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFlippedY"},"KdAL58ro0nugspdbS2qtm":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFloating"},"fFDbJmjDsvXW5bKMMg4Dw":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isKinematic"},"EoW7y_nqqu6r_RnJQ6VD7":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isPersistent"},"sQOhA6HdRYyt8aHR_Rokq":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#left"},"cIjfD0OaiRIOI5Fhig2rJ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#mask"},"Yb0BEZssSyRDo2C2Ck8nP":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#name"},"5k9816vD2Xd8dAqaOi8ws":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onVisibilityChange"},"p2UyaG92BJNXcS-FLRFap":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#points"},"j1VXmyx2Ve-N8DqYt57Ad":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#pos"},"0pv-j4MKN4IOQojglP62X":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#renderable"},"ZcVkhFc7xsVRAI3hXSKas":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#right"},"QvvAKAKxwPJ0de1sPCw1M":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#tint"},"yUYV7NLMgGPG_fpKRI-75":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#top"},"J5wzK8alWKfLsgtpEYGWp":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#type"},"iUjFuRxuJ6Q2WSneazZHM":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#updateWhenPaused"},"z4_PCJ77jQ8uUMLkdsvTr":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#width"},"1a71GqCTriH_wHHj31wnn":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#angleTo"},"UFeB8ernapT4yXT54w3d5":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#centerOn"},"rNys-8R33yGuvVBl6tEQB":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#clone"},"h9W_dUSnSsD-9FwehYLef":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#constructor"},"8KlVZAHmaZdfIGAYu4qDQ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#contains"},"FKv8s0uG-HoQvHa4dFO9P":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#copy"},"HLGdbV5llpk8T64rhg-qv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#distanceTo"},"jkuTSVrAnmhz-mRQVOgcu":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#equals"},"tGZ4wXrlhsMfdGz34NnCf":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#flipX"},"7umMj_h5obS8EX7W4igFC":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#flipY"},"kKT12PEjJw545rARp-D9Y":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getAbsolutePosition"},"p_7YXbaPkSQt93E_V74yy":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getBounds"},"GnppCIBCZ623dAExLtnHl":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getIndices"},"FccpFq6It_VkzU05nsChK":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#getOpacity"},"eZeWL7nsMXl6jttWahCFB":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isConvex"},"Ez4PO00Hckg_LvhJbl3CZ":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#isFinite"},"WGSzoolg6XZnPVfNDBaP-":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#lookAt"},"VWSUh4NldmzhF0ONFaPbL":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onCollision"},"_Re7gAEKLMYad5Y0S4tRr":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onDeactivateEvent"},"lR2iIaT59m01bd9pQUYTa":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onDestroyEvent"},"cCm3S_03z8vZ1fSWDMg_w":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#overlaps"},"kAycLXr0lPqVKg2ieXpvi":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#recalc"},"M-Dzlo6Y-asRuug3Cljjv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#resize"},"RTucN4URirIM8xdhjsWyM":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#rotate"},"B2Vj8LaZ-_q4f3VDlkJLA":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#scale"},"XhvS9KjqVi-TLH2QutQvv":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#scaleV"},"oA09yuJCrL66Q8aW3Vwan":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setOpacity"},"RIiNNMvfB3_hujkf4a0sa":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setShape"},"dxPuod0JrNguHk8UEGp3z":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#setVertices"},"SH8vOnAi5HDvm1Y-X9jDE":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#shift"},"IMliN4C2ZwPoku79YRWtG":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#to2d"},"afWC3G2PHgqQintZiGzrd":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#toIso"},"1mMd6QAXApUBZlW070odf":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#toPolygon"},"_Z5m2l3r2c8Ffj68JobgO":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#transform"},"agFjpMCWENiCFFGAZSrMI":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#translate"},"571J9dRyx4UD4QJJS0jv8":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#union"},"oSV3nX7W5fgiKr1X_S-IM":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#draw"},"MVoW_ep9QTEL3xpJW0iy1":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#postDraw"},"j2eTV1rsMLNX72Tg31_kD":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#preDraw"},"_lTRE0n1A3EQoXh-TpP9R":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#update"},"eR8ROz9Y8V6310OdtS71H":{"uri":"/melonJS/docs/melonjs/DraggableEntity.html#onAnchorUpdate"},"FI_T3ic6pAW-VWcF_6GHf":{"uri":"/melonJS/docs/melonjs/DropTarget.html"},"ZKqmzufIrBIKKZh0_Mkcm":{"uri":"/melonJS/docs/melonjs/DropTarget.html#alpha"},"7eTAhLQf_UYbAiK0PJC3J":{"uri":"/melonJS/docs/melonjs/DropTarget.html#alwaysUpdate"},"EgJ_0MPg2ShEjpqe3GHx2":{"uri":"/melonJS/docs/melonjs/DropTarget.html#ancestor"},"c_aRdxKbvFCxu4Xt5v3tx":{"uri":"/melonJS/docs/melonjs/DropTarget.html#anchorPoint"},"RYk30FGUYq4NwWaDfKUUT":{"uri":"/melonJS/docs/melonjs/DropTarget.html#autoTransform"},"mbDzui7tHd6Qz7SSrk5sO":{"uri":"/melonJS/docs/melonjs/DropTarget.html#blendMode"},"uPUFHdh3-Jw89P8O8H8jY":{"uri":"/melonJS/docs/melonjs/DropTarget.html#body"},"UplTQ7x6f-8J08HGQY4PJ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#bottom"},"6w5y-ablM1jwteQnsNXsy":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerX"},"8mTG89pAWTCjxSuPVC4EY":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerY"},"3XiT7gymHrU-_-0awvX-g":{"uri":"/melonJS/docs/melonjs/DropTarget.html#checkMethod"},"zBdZLsspOT6mPHNY_SjOa":{"uri":"/melonJS/docs/melonjs/DropTarget.html#CHECKMETHOD_CONTAINS"},"0z60Hsxs_w_ZlFdyyplms":{"uri":"/melonJS/docs/melonjs/DropTarget.html#CHECKMETHOD_OVERLAP"},"_hWxUe6ge5z8ObkMt9D9F":{"uri":"/melonJS/docs/melonjs/DropTarget.html#currentTransform"},"y84cTHzLPw3p0GrrgJuOk":{"uri":"/melonJS/docs/melonjs/DropTarget.html#floating"},"kKAn3GvC8cQb7PpQph26C":{"uri":"/melonJS/docs/melonjs/DropTarget.html#GUID"},"PM4dgWKL1wV1VuAnh_OSf":{"uri":"/melonJS/docs/melonjs/DropTarget.html#height"},"wdrGwTU1PMTjov-GUzq1m":{"uri":"/melonJS/docs/melonjs/DropTarget.html#inViewport"},"Jm8ME8JQLcYCVuBelCFxd":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isDirty"},"TUlQpzOyZEELZowJJrgPB":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFlippedX"},"PQq4z4MVt7krN4uNjJWx1":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFlippedY"},"N9NbtEHex096gpg96GUVw":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFloating"},"fX26g5b7XLYdIGw3gau2K":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isKinematic"},"kfDXEpnPDtWlfbUQMtuQz":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isPersistent"},"GiGN-hmBq5zNxls31MqzQ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#left"},"VvGr2-smACYCco-YTDi2r":{"uri":"/melonJS/docs/melonjs/DropTarget.html#mask"},"DI99gMfpQdkRQiFRyJ2x7":{"uri":"/melonJS/docs/melonjs/DropTarget.html#name"},"O_FMxPGbN4W6cca0rruM9":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onVisibilityChange"},"anz1VBSKgve1zt27mtQeK":{"uri":"/melonJS/docs/melonjs/DropTarget.html#points"},"nbkTRAp9xoDo7wxlEQ3Ok":{"uri":"/melonJS/docs/melonjs/DropTarget.html#pos"},"2MNlr8bAv2nYfL2nVecKZ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#right"},"tIGys6zKbnPbvjD0EHEoy":{"uri":"/melonJS/docs/melonjs/DropTarget.html#tint"},"bAMKPY4Iru9ALKAbnJ2o0":{"uri":"/melonJS/docs/melonjs/DropTarget.html#top"},"vD2tw7_JAcClsxESJpg44":{"uri":"/melonJS/docs/melonjs/DropTarget.html#updateWhenPaused"},"clXZrPsPYZbLkEXfANtwP":{"uri":"/melonJS/docs/melonjs/DropTarget.html#width"},"9Z2B7Va-wWzuFrIoDpIOt":{"uri":"/melonJS/docs/melonjs/DropTarget.html#angleTo"},"wqsZgp0q7eAsx-G-RqVdk":{"uri":"/melonJS/docs/melonjs/DropTarget.html#centerOn"},"HmNkkdI2Y0-3f6Y0zfoOP":{"uri":"/melonJS/docs/melonjs/DropTarget.html#checkOnMe"},"OkREOquoJVkNVS9aOUQBj":{"uri":"/melonJS/docs/melonjs/DropTarget.html#clone"},"CvD61Rj_14IkRJICQDWRv":{"uri":"/melonJS/docs/melonjs/DropTarget.html#constructor"},"akeiQ2AaR9rRnWiZM0DBY":{"uri":"/melonJS/docs/melonjs/DropTarget.html#contains"},"r9ctkkYit0Iff46-4arMg":{"uri":"/melonJS/docs/melonjs/DropTarget.html#copy"},"Ibs08NR2ItZPGSSAkbJkq":{"uri":"/melonJS/docs/melonjs/DropTarget.html#distanceTo"},"cx5fRFdQ4QeZ3mlnvUxJ1":{"uri":"/melonJS/docs/melonjs/DropTarget.html#drop"},"p2q0gTB60Q5D4dy4sbEAU":{"uri":"/melonJS/docs/melonjs/DropTarget.html#equals"},"gSzPg9IY8FAm9ixJmCpts":{"uri":"/melonJS/docs/melonjs/DropTarget.html#flipX"},"TcLTLOJewr0hvG1D-PiuI":{"uri":"/melonJS/docs/melonjs/DropTarget.html#flipY"},"J9jO9WNdISS-hYqDuf2Bf":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getAbsolutePosition"},"Xu4DaGR6XtMw6EWhQaooq":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getBounds"},"I5N3AIWzUTTutQEg4zgAo":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getIndices"},"e5kTSDYRv3zzArjST_rXU":{"uri":"/melonJS/docs/melonjs/DropTarget.html#getOpacity"},"ArT6iePMbbfJzOmi3Ed3-":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isConvex"},"gofPDCWFeaIgzTXLBZjPf":{"uri":"/melonJS/docs/melonjs/DropTarget.html#isFinite"},"ncvcgRKWYvNLvJUaEzmDa":{"uri":"/melonJS/docs/melonjs/DropTarget.html#lookAt"},"uPuM_gXdXizZZNWe4mASc":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onCollision"},"bJyiKQYhs7nmsKft1CaZa":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onDestroyEvent"},"2NVCt78otxmKvphqM-her":{"uri":"/melonJS/docs/melonjs/DropTarget.html#overlaps"},"rPDfELQzE7Cvv6PTohl8V":{"uri":"/melonJS/docs/melonjs/DropTarget.html#recalc"},"5LQ1SzHPiIerOZQlMp0YI":{"uri":"/melonJS/docs/melonjs/DropTarget.html#resize"},"TmDnTwq7LCOckya0bwpPp":{"uri":"/melonJS/docs/melonjs/DropTarget.html#rotate"},"SxnpC7k9EVMbgTKnbQXy1":{"uri":"/melonJS/docs/melonjs/DropTarget.html#scale"},"MU1WO-VvIm8bcLO7XeiFj":{"uri":"/melonJS/docs/melonjs/DropTarget.html#scaleV"},"r1l1NivMBfkuzcSOYAcum":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setCheckMethod"},"ee48Lwn8TBuabEfJNWWvm":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setOpacity"},"TiK6WU0qoyHEmarUDOgrE":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setShape"},"ClWdkIvC9sQwKO-19NpdW":{"uri":"/melonJS/docs/melonjs/DropTarget.html#setVertices"},"NBi_7NOMWbMPDtQjNhNyD":{"uri":"/melonJS/docs/melonjs/DropTarget.html#shift"},"AHIYcgdRYH3NQ5w1v-eeZ":{"uri":"/melonJS/docs/melonjs/DropTarget.html#to2d"},"JaW3x_A_dnAW7OOutbQbG":{"uri":"/melonJS/docs/melonjs/DropTarget.html#toIso"},"Or_7EF9gkXqVZ-jXAU6XW":{"uri":"/melonJS/docs/melonjs/DropTarget.html#toPolygon"},"wqGctggBwJUB48u74HFym":{"uri":"/melonJS/docs/melonjs/DropTarget.html#transform"},"8A0ThbbdCiU8BixTA8UUc":{"uri":"/melonJS/docs/melonjs/DropTarget.html#translate"},"1QewNxtuY1DiiaExTR9CB":{"uri":"/melonJS/docs/melonjs/DropTarget.html#union"},"Ie3k7kJSwVDMlFuSdhmw-":{"uri":"/melonJS/docs/melonjs/DropTarget.html#draw"},"NxGNouepmiZeVcIcOgASL":{"uri":"/melonJS/docs/melonjs/DropTarget.html#postDraw"},"qmUPu9tQvJuRubaQl6Lhv":{"uri":"/melonJS/docs/melonjs/DropTarget.html#preDraw"},"aUBDe9LyBAlg-9vNoS_-c":{"uri":"/melonJS/docs/melonjs/DropTarget.html#update"},"EAeaf3mlZewl8VqAGPCXd":{"uri":"/melonJS/docs/melonjs/DropTarget.html#onAnchorUpdate"},"l39vP0JclB9MMdL-WUs98":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html"},"y8-1r37eXJhECwiTV4I0G":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alive"},"Pje6UgU4LhZOSgA80vLcM":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alpha"},"xYUmHyMA--3XYwBic5Zyu":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#alwaysUpdate"},"LB7EDq9dr-LclK4QHINlj":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#ancestor"},"SZvIDwvoZ1zOKesZL2Keh":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#anchorPoint"},"AmMgaFLmAUlc8jJhjNWFD":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#autoTransform"},"31fBRG_3054JWWWff2eC_":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#blendMode"},"MMr2PT0Yyudt4L-AShiN_":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#bottom"},"zC2YvnpUId7vf3ZzfZ1hv":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerX"},"uRYk1cHEyHeCzOpqOIg9F":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerY"},"hMdwUhbzFEeqRSfxuTBfW":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#currentTransform"},"syoo5LPWR_bVEDxjCUyF4":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#floating"},"MtEwJ6pEOuqMwZHQS8KOU":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#GUID"},"P0je3S3E_Lbo6NSwvrtvq":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#height"},"-duHYxuxm4iMw9FDppZPa":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#id"},"YMMRgbnXV3ddsBZrHLkzN":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#inViewport"},"fjCLhvcaJ6G0IObEeqDz3":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isDirty"},"RKaJSEaThuTc0_F1d9DVJ":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFlippedX"},"Gj_4HIbq64IlpcZKhq4ws":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFlippedY"},"YHJ1BEQUStzB7Q78fXlb0":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFloating"},"IZ1wVHCZrZiRxhlDYULz4":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isKinematic"},"XZ4cn75Oy4SHjACmXBwqk":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isPersistent"},"U80BQCF9k9rwopoCeUz6n":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#left"},"VWpRKF76nYJ8kXZjKeJoz":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#mask"},"R8_oQ8YOsh43Wns4uEj-H":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#name"},"0nmLts5YEup_JxrvUviSh":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onVisibilityChange"},"7zEhMr8h-OPIiX73BbeVz":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#points"},"P1dSBJy14KmLtXKMuuT-I":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#pos"},"Q7FYKRCmYyO_muR0uu-Yi":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#renderable"},"yB0wGbJbOXIZ30dtIqKIG":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#right"},"-j7hAlI6IZW0G2wcDFvXr":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#tint"},"DG57fAgypiU8sH5UfETN3":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#top"},"_ttVxtxxtAlOitNVlLCKc":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#type"},"IbIDz3c1ApEGXRtFEpVix":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#updateWhenPaused"},"gfkplo5NtznQwOrwUFOpq":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#width"},"wYt8cMSKty5yFmZ4zqHSE":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#angleTo"},"5YbEm7UZczNaL9dOvpQjo":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#centerOn"},"Km0_LduHmmMDL-JfuYo3V":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#clone"},"7cwmn3DsAyvLabj7Ibm8n":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#constructor"},"u01sERK_0n_fsycfNNp6t":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#contains"},"IfMfTjRsVHkAUJeH4cQ49":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#copy"},"65EHLi-9DX3lL4Iaa_XT9":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#distanceTo"},"5Ch3s-yQ2EJ_r-bsI_SZj":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#equals"},"Y_DtoD8zkqtk8LO2TQuXn":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#flipX"},"zozZgjA29Q2QNnorLXObr":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#flipY"},"2Ov6oSLoI5iexsDNwXFD4":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getAbsolutePosition"},"ezL2V2DahP3rfEEW5py_V":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getBounds"},"32uOcDYU_EoMQNu_BInWu":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getIndices"},"67grqi0k3PwkGVvKDfLxn":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#getOpacity"},"wqBfM6lhGxhCGOB0BfEfb":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isConvex"},"fOlmQUePIXd5THNCjvvvP":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#isFinite"},"TAKQaAAxnVM0O-EJZIbP3":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#lookAt"},"6Bww_7bI11wSz7QtIDc5N":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onCollision"},"7z9WMM70YQTnRczkyYEbv":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onDeactivateEvent"},"8oMdAnwtOlRGKdj7tkMyI":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onDestroyEvent"},"OIgrrs2lHkNuQF6lwtgi4":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#overlaps"},"_xvgIB-m-f6PPS1s-CXyw":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#recalc"},"ZReNd9xX2pPTHVCj5YqcG":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#resize"},"EFgRDzqDaoiJvbRkKOBH2":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#rotate"},"ZXcnbomwN48E-qNfceGrF":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#scale"},"UZ7WRNed-KMdMZM-eYIBR":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#scaleV"},"SWCh8o87CRbJOwLjHaGim":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setOpacity"},"Faza1gD0LbqgUOC0CNsnt":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setShape"},"nNhW15wCvgVcB3zBFYGnG":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#setVertices"},"D5eoC6WQVfVtuKpwNlGVy":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#shift"},"GxAh69Z7pSBz5HavbA6JL":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#to2d"},"8lNKplCu2PZ3mZ23Hbdqh":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#toIso"},"nFQ3yFcuAqepbsulLycUS":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#toPolygon"},"yfgw9TulAR-YeELD8T-Z4":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#transform"},"2TsKta_v9MVqo4ALtjntE":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#translate"},"ioAhvmqj5aet1e3sM4Sbr":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#union"},"KBGAvivha_cfahKVg0zUf":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#draw"},"_f-m5gtw9zrD0IN5bEI78":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#postDraw"},"sll9PUAmcy5MsIdxal30g":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#preDraw"},"7kG4P7siEiSia9W_co4xP":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#update"},"fjIaevSQzpeqkO9la8q2x":{"uri":"/melonJS/docs/melonjs/DroptargetEntity.html#onAnchorUpdate"},"FPN3Dn27noETMJK0eaKF4":{"uri":"/melonJS/docs/melonjs/Ellipse.html"},"v5cDdSgTXcziVhJ4ENJFV":{"uri":"/melonJS/docs/melonjs/Ellipse.html#pos"},"87oGQv0BYPOIwcC9C-795":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radius"},"yhRy0h7Wz1gBj_3XyiorG":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radiusSq"},"MVISw9PpqLDTv4Hl9ddBl":{"uri":"/melonJS/docs/melonjs/Ellipse.html#radiusV"},"Q0dwReolji-w02075CdmQ":{"uri":"/melonJS/docs/melonjs/Ellipse.html#ratio"},"-TTzRWUp3G80bi4DWiiME":{"uri":"/melonJS/docs/melonjs/Ellipse.html#_bounds"},"0bWjYY0eiTX8xOScTrkbv":{"uri":"/melonJS/docs/melonjs/Ellipse.html#clone"},"UmmtewYnl5E8LaCzfD1eB":{"uri":"/melonJS/docs/melonjs/Ellipse.html#constructor"},"5Ij0G577vM97l9rb_w1W4":{"uri":"/melonJS/docs/melonjs/Ellipse.html#contains"},"U_9XduMEbrOxLEjdwtRxu":{"uri":"/melonJS/docs/melonjs/Ellipse.html#getBounds"},"bxPOIbPQzhoImrGtnVF1U":{"uri":"/melonJS/docs/melonjs/Ellipse.html#rotate"},"mi0Q4z9yVDfQ7wDQajym6":{"uri":"/melonJS/docs/melonjs/Ellipse.html#scale"},"MN2gXmp-WHZZnPCmCHIE9":{"uri":"/melonJS/docs/melonjs/Ellipse.html#scale"},"MtDnPHs-UUTCuPOKLGKu3":{"uri":"/melonJS/docs/melonjs/Ellipse.html#setShape"},"YVGwT-OzHrNgbJb_qSYHp":{"uri":"/melonJS/docs/melonjs/Ellipse.html#transform"},"hkdkj-QnDskMQYrrtDPHV":{"uri":"/melonJS/docs/melonjs/Ellipse.html#translate"},"l6-IBzbAUSL9MvdHkv4Ju":{"uri":"/melonJS/docs/melonjs/Ellipse.html#contains"},"16tqKJrRnfVKLqfP6GPEF":{"uri":"/melonJS/docs/melonjs/Ellipse.html#translate"},"E_Ac_mOBv3FHlfArvmXaz":{"uri":"/melonJS/docs/melonjs/Entity.html"},"JabV9awuM0__nzmgofV8l":{"uri":"/melonJS/docs/melonjs/Entity.html#alive"},"YaILFsxRpCEm1fy8whTRx":{"uri":"/melonJS/docs/melonjs/Entity.html#alpha"},"fx4WeyPqVFZn4O-9GXB62":{"uri":"/melonJS/docs/melonjs/Entity.html#alwaysUpdate"},"nNC22AP_kxtpDHi3ooOxk":{"uri":"/melonJS/docs/melonjs/Entity.html#ancestor"},"N_j-BAgZ4kZvjGxyrBCr9":{"uri":"/melonJS/docs/melonjs/Entity.html#anchorPoint"},"l-q0Cdm5KGrpxqO2nc3FY":{"uri":"/melonJS/docs/melonjs/Entity.html#autoTransform"},"GOui0_MNJ3W4BBosjBMHc":{"uri":"/melonJS/docs/melonjs/Entity.html#blendMode"},"l29kSm7Vo176GrmaTOlEP":{"uri":"/melonJS/docs/melonjs/Entity.html#bottom"},"ZqBQixPIHPNCw8U7g8REB":{"uri":"/melonJS/docs/melonjs/Entity.html#centerX"},"Oocfb36zAHxBhCsORCwQK":{"uri":"/melonJS/docs/melonjs/Entity.html#centerY"},"fAvCQitRENnXMTLO_xH1y":{"uri":"/melonJS/docs/melonjs/Entity.html#currentTransform"},"IkbRkgEH5it9DbGQoW2VU":{"uri":"/melonJS/docs/melonjs/Entity.html#floating"},"K9RSKU-94Th0OsmrXNNZ8":{"uri":"/melonJS/docs/melonjs/Entity.html#GUID"},"KAb7lAOLcrG1qnPxqontx":{"uri":"/melonJS/docs/melonjs/Entity.html#height"},"sVp-uZt_eGwcFThJTGxa5":{"uri":"/melonJS/docs/melonjs/Entity.html#id"},"ph2wrkLugz_x0WzUkN_8b":{"uri":"/melonJS/docs/melonjs/Entity.html#inViewport"},"ij_asOP4VBkR-8PYsawXG":{"uri":"/melonJS/docs/melonjs/Entity.html#isDirty"},"g6ZpkbZrZaUXgJBgoC3s4":{"uri":"/melonJS/docs/melonjs/Entity.html#isFlippedX"},"bOP1dcPEgm1j8G1Q9GCAr":{"uri":"/melonJS/docs/melonjs/Entity.html#isFlippedY"},"vWOBHxTDAYtGqTbTtxm5-":{"uri":"/melonJS/docs/melonjs/Entity.html#isFloating"},"iWRRD24-2n0YmG6mwljIJ":{"uri":"/melonJS/docs/melonjs/Entity.html#isKinematic"},"n2nFHroQ7GgDAtK8BPkbR":{"uri":"/melonJS/docs/melonjs/Entity.html#isPersistent"},"CRtD4iPfpN9Do9JojAxiA":{"uri":"/melonJS/docs/melonjs/Entity.html#left"},"r6lVlGsS6C5MzKcdVDhcQ":{"uri":"/melonJS/docs/melonjs/Entity.html#mask"},"frcyTrw6Dkbbw3S-hD-QL":{"uri":"/melonJS/docs/melonjs/Entity.html#name"},"mz464h6c5dgVCmjV5xtsA":{"uri":"/melonJS/docs/melonjs/Entity.html#onVisibilityChange"},"eKDHuW8fhntkzuZCFMVUg":{"uri":"/melonJS/docs/melonjs/Entity.html#points"},"_zZZAIsUEm9vhzG1Ip27h":{"uri":"/melonJS/docs/melonjs/Entity.html#pos"},"eW2XuUoHuWpTBOTHYN916":{"uri":"/melonJS/docs/melonjs/Entity.html#renderable"},"QdNBWV7VlNd2d8mIYXN-1":{"uri":"/melonJS/docs/melonjs/Entity.html#right"},"hix82Nh2A95NvsTd8ylqu":{"uri":"/melonJS/docs/melonjs/Entity.html#tint"},"OE-G4f-DxTqb6OrXt_dfv":{"uri":"/melonJS/docs/melonjs/Entity.html#top"},"FLYX5hCVa9LvdB2IisjQo":{"uri":"/melonJS/docs/melonjs/Entity.html#type"},"OjJo_ASyHfPDhWc_4B32O":{"uri":"/melonJS/docs/melonjs/Entity.html#updateWhenPaused"},"GfHxcm-Ej_UB0BbJGCkoE":{"uri":"/melonJS/docs/melonjs/Entity.html#width"},"fDzAZQ0DDVrpUYmxjUMl_":{"uri":"/melonJS/docs/melonjs/Entity.html#body"},"umi6zA8hv9SVyK4n8pu6A":{"uri":"/melonJS/docs/melonjs/Entity.html#angleTo"},"xlxHOp5OhG1UymVcUd_uw":{"uri":"/melonJS/docs/melonjs/Entity.html#centerOn"},"OzsEWw6LWnaJXM9_HNaYc":{"uri":"/melonJS/docs/melonjs/Entity.html#clone"},"Vpudc_hW1bvhQnursaJUH":{"uri":"/melonJS/docs/melonjs/Entity.html#constructor"},"IE1WBFHR7H8jdHO5-PXbp":{"uri":"/melonJS/docs/melonjs/Entity.html#contains"},"TbuOP8P6s_-7kg09IGNtG":{"uri":"/melonJS/docs/melonjs/Entity.html#copy"},"VNJ0Pluk7PSqSCROMBLYN":{"uri":"/melonJS/docs/melonjs/Entity.html#distanceTo"},"52k__qcqR_ddEfWxnW-8j":{"uri":"/melonJS/docs/melonjs/Entity.html#equals"},"V5MT7N6ugA_kDR5s1sN7y":{"uri":"/melonJS/docs/melonjs/Entity.html#flipX"},"UCLbUdnupzDsj7d4D_7ZN":{"uri":"/melonJS/docs/melonjs/Entity.html#flipY"},"O27B_H3j3kKHdGR30gfY0":{"uri":"/melonJS/docs/melonjs/Entity.html#getAbsolutePosition"},"TTDOOl0TK9ZamfuZmYWfH":{"uri":"/melonJS/docs/melonjs/Entity.html#getBounds"},"THcIsyZDmh6OBjCsv4X50":{"uri":"/melonJS/docs/melonjs/Entity.html#getIndices"},"5MODm3_oDRQ5euarEBZx1":{"uri":"/melonJS/docs/melonjs/Entity.html#getOpacity"},"2F33alRObo-Ccilm7yLEL":{"uri":"/melonJS/docs/melonjs/Entity.html#isConvex"},"rWiwcRKTUo6ykM3gMA-eK":{"uri":"/melonJS/docs/melonjs/Entity.html#isFinite"},"MqVvHBPJYldjLErkrMEwn":{"uri":"/melonJS/docs/melonjs/Entity.html#lookAt"},"fi0mrTkirf-FtOcZeVIDc":{"uri":"/melonJS/docs/melonjs/Entity.html#onCollision"},"OoqE5sdlElF2zQjEFUPs6":{"uri":"/melonJS/docs/melonjs/Entity.html#onDeactivateEvent"},"eLLQZTkDZY4Z-4gGTvllJ":{"uri":"/melonJS/docs/melonjs/Entity.html#onDestroyEvent"},"BFOUPsaasUQNoGFeBVRJH":{"uri":"/melonJS/docs/melonjs/Entity.html#overlaps"},"lLzZGSlzipT_5RS-f8hro":{"uri":"/melonJS/docs/melonjs/Entity.html#recalc"},"LelfO4xL7MNaejWGrPTHm":{"uri":"/melonJS/docs/melonjs/Entity.html#resize"},"wdYDhZG91M8oFVX3e8D0j":{"uri":"/melonJS/docs/melonjs/Entity.html#rotate"},"V8-CnFI6R18YMdf2ap4HI":{"uri":"/melonJS/docs/melonjs/Entity.html#scale"},"pnZLTbHmd-5_HZDhP5Mmv":{"uri":"/melonJS/docs/melonjs/Entity.html#scaleV"},"fGVxh_MtoBPDURWajF5Nx":{"uri":"/melonJS/docs/melonjs/Entity.html#setOpacity"},"OnchL9Y8Y_7vJB0dmR_OW":{"uri":"/melonJS/docs/melonjs/Entity.html#setShape"},"ZKw2yy-vDC7djgh_Haqum":{"uri":"/melonJS/docs/melonjs/Entity.html#setVertices"},"oHfTxPU4FTHYF3lPZlNJQ":{"uri":"/melonJS/docs/melonjs/Entity.html#shift"},"_Hr7-hl3otiKnqeVUTdKT":{"uri":"/melonJS/docs/melonjs/Entity.html#to2d"},"g6MqMVHMekHQF4lkxog7c":{"uri":"/melonJS/docs/melonjs/Entity.html#toIso"},"PAWIo4JOOm7hoQ5gOVt7e":{"uri":"/melonJS/docs/melonjs/Entity.html#toPolygon"},"Wn72QbXHjEKebytBtwc6D":{"uri":"/melonJS/docs/melonjs/Entity.html#transform"},"uOnHgRKii2YmUcyIhP_l7":{"uri":"/melonJS/docs/melonjs/Entity.html#translate"},"NI7aCIhU179aREWjmD6mE":{"uri":"/melonJS/docs/melonjs/Entity.html#union"},"aqUdKK2qHnZUeMaFMR22n":{"uri":"/melonJS/docs/melonjs/Entity.html#draw"},"aLQ_motQAEGoZBBZ1rffS":{"uri":"/melonJS/docs/melonjs/Entity.html#postDraw"},"8diMP6i1fECgiNcdx_tP2":{"uri":"/melonJS/docs/melonjs/Entity.html#preDraw"},"SQ4LoXLpIvlKaDvgd3jDh":{"uri":"/melonJS/docs/melonjs/Entity.html#update"},"rd4O10wRcEYAE0V4tkTjP":{"uri":"/melonJS/docs/melonjs/Entity.html#onAnchorUpdate"},"5nQ1ZF0vyK0qdrInQemPF":{"uri":"/melonJS/docs/melonjs/GLShader.html"},"PlIoH5vF6yyfqShWqimsG":{"uri":"/melonJS/docs/melonjs/GLShader.html#attributes"},"RwdVLxiqlVTmmeAPnriDs":{"uri":"/melonJS/docs/melonjs/GLShader.html#gl"},"jjDYzs2WAMVrLCTN-jvWq":{"uri":"/melonJS/docs/melonjs/GLShader.html#program"},"bDRgpg88FNHaeQVZ6Q-zd":{"uri":"/melonJS/docs/melonjs/GLShader.html#uniforms"},"9xJuqJ1fRYsdUXQVSLIl7":{"uri":"/melonJS/docs/melonjs/GLShader.html#vertex"},"POjcULgjttZyBKlxOHToh":{"uri":"/melonJS/docs/melonjs/GLShader.html#vertex"},"oM2BjbnSzWn2Ax-GsFPOH":{"uri":"/melonJS/docs/melonjs/GLShader.html#bind"},"1-1MeaZRn-K_KWF-kaBvm":{"uri":"/melonJS/docs/melonjs/GLShader.html#constructor"},"7HaVYGyQ6JY8pGpjoTQCQ":{"uri":"/melonJS/docs/melonjs/GLShader.html#destroy"},"ByC5XfJUwec96u7uioT65":{"uri":"/melonJS/docs/melonjs/GLShader.html#getAttribLocation"},"TLBuGXRDHecOU-DBOI054":{"uri":"/melonJS/docs/melonjs/GLShader.html#setUniform"},"DTgqT-gRw5kJTKjCkEJis":{"uri":"/melonJS/docs/melonjs/GLShader.html#setVertexAttributes"},"oDzsbo8ni7nzUNwTP6utn":{"uri":"/melonJS/docs/melonjs/GUI_Object.html"},"xswwX7Iy1IW6LmE_1NWbG":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#alpha"},"1VpK15PvaOnbLwMufgMBI":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#alwaysUpdate"},"Ctp2OqMZn9nNQjF6GZAER":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#ancestor"},"WmxPjeuBn3v_Twd5_Lm2v":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#anchorPoint"},"Nq0Aqkoli_Pf-iK77y8kw":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#animationpause"},"1SENk_BiFQ9W1iqBXowvE":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#animationspeed"},"1ve1HzSKmFPeYB8lpSqwN":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#autoTransform"},"hqoDarIRlTplQZn8gMKSl":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#blendMode"},"COZqxfMT6cDDmTwfyCf3Z":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#body"},"-TnY7MRrFyn_hZMvfNb1I":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#bottom"},"3vcwWsgDTaF_ldrjDocih":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerX"},"ApMFPMO8JZoadphU32CgI":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerY"},"zk04gf2cLESXoIOvceDYV":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#currentTransform"},"pKPOMXLj1jASsweZn2Pa8":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#floating"},"t3BagjlrV8V6igzWsPSMK":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#GUID"},"P_C-bkoCdab2ZN52p570f":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#height"},"Uva-9nWXJrGZ0UAwnxv4Z":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#holdThreshold"},"eHx6rc-1lUbIVkojn_-XM":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#hover"},"VUAXaNCeg7hLqpw6j2ve2":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#inViewport"},"ddSAFkLSf0MN7NpGP2cUQ":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isClickable"},"0-ALLc8WdsjnhKXCwfgQv":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isDirty"},"N6DWIiKZySGz-pqWYSKHC":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlippedX"},"iPzBH1HHmmPz9NQ-n0gfa":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlippedY"},"PWHSCFHTnSHxVIZ-mqeHp":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFloating"},"AYJCOFXfkeJ3NsiyYOt-C":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isHoldable"},"mMjjTPcDFWVjADy7K3mEV":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isKinematic"},"vNH8oxj-3w6yT4FhM7U02":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isPersistent"},"QyJEtfAygxqyyF3mr8SDu":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#left"},"JLLaqtqJs2ZhgxvRi7e5k":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#mask"},"yiloaCK2Ygz-X9noaSnN2":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#name"},"qCnhwACnZYgL7dRtJZ643":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#offset"},"e1qPeUaFgBeCcXB1AujEj":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onVisibilityChange"},"1KvjFj5kuRfdb2rZ68PlM":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#points"},"r2G330E6xugekL4GyWYOU":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#pos"},"xlhqFhr2EfRTnwEf_oyuk":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#right"},"KpDg4DOGEv-eUBviapRTt":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#source"},"bBJiG6DJ78xF9r0Ju16VI":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#tint"},"ZKp_-fmM5VYs1EUJNaZvH":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#top"},"Q7MXzrEhRm1O9pgaKUsSC":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#updateWhenPaused"},"0ev5lJSs31ckWqNfmcpS3":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#width"},"OYQ4s9QQCOLieUKDPNcNg":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#addAnimation"},"2zhT3IDbG7zS4sBv9Y63o":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#angleTo"},"PqcB6pqnahdBf4ZyBlOTu":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#centerOn"},"fXiZ3oMA5ZjFtjrmQNCKp":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#clone"},"tOXwT8hDQ7xlmxeHHnw25":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#constructor"},"X7tvoqVII7nX8IdqtCXus":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#contains"},"udh-m1cscN2Mw34EbnF3G":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#copy"},"0Bsoo5cIc15A_f9GvJVtm":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#distanceTo"},"Zyub0515wo_U8qMMLYx4f":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#equals"},"O830fT3Zt8rMhDlpjN4nk":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flicker"},"7xP_t1fikNDM5mnGH701q":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flipX"},"fhvF4UHUL35Y2y_v0f-i4":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#flipY"},"GAAa8fMEylywkBVVVw1Wj":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getAbsolutePosition"},"sw3ZvYsGdmi0EWOod7wZF":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getBounds"},"Q4rb6Q2LkJDkpZa1KTCgA":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getCurrentAnimationFrame"},"yL13-ti4MZjL5DhTgSLOw":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getIndices"},"zkv1HLe_C_bpWAiO8FBSE":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#getOpacity"},"7HQUrB9GFuYOFfTwStZkg":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isConvex"},"a-a2KuvU8O5CfRjXrUsEC":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isCurrentAnimation"},"wL2stZIV3d8MkqVaCICds":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFinite"},"XpIgFTHXtJjSLxn4633F2":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#isFlickering"},"hgHM7kpPtCubkM2hKTNtH":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#lookAt"},"d-vUu7Yn2_cJOS-LMWPUq":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onClick"},"MDuKyGKUJeFGtSffQcitb":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onCollision"},"D13jhvcCpc_HonqNUduUJ":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onDestroyEvent"},"F-5v3sYsF__qjRCrJpplP":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onHold"},"6tq8XjRZvLWoofyDnvA1r":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onOut"},"3xSyastelZsqp8gv0lAyY":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onOver"},"ONX97An7SLp3JHww7fM1U":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onRelease"},"4qHko4tSazTb2mOxEYt8F":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#overlaps"},"T97gNUhRtYVjk_onjPX_9":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#recalc"},"QAeMK3Ix-kMYXF4H9l1yA":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#resize"},"jBs07925w0HTe3hEG0dvA":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#reverseAnimation"},"kYuXlbp3FfUpQKPRYGPdS":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#rotate"},"7lINjNgsJVT0PMBat7Rjy":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#scale"},"lvYV-Y08-L_XTqPsqm281":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#scaleV"},"0s6InnQ_hl3xIsyGs7gd8":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setAnimationFrame"},"J8lzgZcQfdxlOKGbsBdLw":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setCurrentAnimation"},"2CNFUpAAcRwuEDxeQETAA":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setOpacity"},"gAXJFFXRMjbgKk_Ddr3ou":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setRegion"},"kh9dY5Gy1TR21PKtRznW8":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setShape"},"9MFolR2lSamhUMCkh31K9":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#setVertices"},"_qYpOPKvNj3_y-25t7Ri_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#shift"},"D5nkQUBjFg8FOFdh50eCK":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#to2d"},"BvkEleYwVpEUGf37_Rs7F":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#toIso"},"Z7mQ7pkH4LB5uVnU6gUK_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#toPolygon"},"8qfR3KhVEC_9b57fdmeAw":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#transform"},"CdxfKbyce3Z8m06yN6UPV":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#translate"},"sVlSkGl5CE9oOiQm3cjZq":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#union"},"YJ3MECPfYuwqjRj5cZ1fo":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#draw"},"dsPHD5u20DRZsTdINn_GW":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#postDraw"},"SR0FzBzBHUCp9MO4HhUni":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#preDraw"},"WE91OQ8nb_oNVe9WOWrP_":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#update"},"FWCQLzZpPCCdFJAHOb7oS":{"uri":"/melonJS/docs/melonjs/GUI_Object.html#onAnchorUpdate"},"tCOoI-y4eN8791exA_UZY":{"uri":"/melonJS/docs/melonjs/ImageLayer.html"},"uUiMlb01_Iq5PwCv-gXkN":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#alpha"},"A_n6gbwEeU9NSEh2ow5eb":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#alwaysUpdate"},"iwsDo4Xkx-KZXRyONQP-e":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#ancestor"},"yDKqcYdUuf-oNBKeY9ige":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#anchorPoint"},"FalrIxmY5Bn6oF4IMi0HW":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#autoTransform"},"TSnNJDnzq01WAUwPISjUq":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#blendMode"},"btfIsoha2Ph7_pg1DKntR":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#body"},"ticliSRNFGQmAtRENW2GN":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#bottom"},"8CMlsQaSoD8QoyBz3WaTA":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerX"},"QPj_wr2FFb-GoJNzjw_CM":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerY"},"5yGyngbeu65Lh7UGe81NG":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#currentTransform"},"nHgnZ9UgoJeR9sgB1KrW7":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#floating"},"St4Glj5y3xrxkIwsjvGOa":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#GUID"},"85hsEQzJVULoP5qimL9Ye":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#height"},"GcGIgFstILSnBevl-N0IT":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#inViewport"},"5KuojUq2RseQB8HqkhVc5":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isDirty"},"EG310FzNolJGUtmBd4KHz":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFlippedX"},"nvSt2u4jlink7EoZYDfyP":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFlippedY"},"HRUu42pJIjY8KayFb6zP5":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFloating"},"-FRcdLFrY3cIOzEOEUNCY":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isKinematic"},"wVDjXRiX5COo1-4R0oDUT":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isPersistent"},"uffJLr98ImfQJ-UWPhal3":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#left"},"rrBMdQqLpsblbTeY4PD2f":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#mask"},"zWtHPVjiUHGykQ8oz0I7C":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#name"},"HC7tqS6ugCMIWOJyQ7-Al":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onVisibilityChange"},"6_O4wa62jBB8PDCGkxloF":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#points"},"pXxz7hb8LN3dYwCCSrFUF":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#pos"},"2stR_J4pWC-Fa6TmAMlro":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#ratio"},"0y6-1qNFYOHAvS5DIP8lu":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#repeat"},"8kXiXdgBAe1iWZDyahq1E":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#right"},"EuFr12GCJdGwgEZ7fy0Pg":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#tint"},"0o0F_ayjt4PvZl8amzo--":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#top"},"nidmkxmDT2ov6x3o-8bBe":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#updateWhenPaused"},"IBDwRsiGvET3E-d_EcPi-":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#width"},"L2t-SP1SwwANB7Crmte8Z":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#angleTo"},"v9wTeMMbtZcToqeguc7oe":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#centerOn"},"xAwqaLzfOm_yCONBJgmRP":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#clone"},"WF-pX4GsVMgWnu3u1Z35Y":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#constructor"},"zRJFpuXOLo8-mnQjMFaJ7":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#contains"},"580eBSe3b14WEdfMyYunZ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#copy"},"jP2L3nG7qtekgbyKr80ry":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#distanceTo"},"5kNtYprpNN72UwREkCZXZ":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#equals"},"4Atgq4qt0Lo0qIrhxdeUR":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#flipX"},"7frYZP_fqg0pK0fK_dBxp":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#flipY"},"IdhcXCQDMdNirz4BKDx2O":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getAbsolutePosition"},"1pKAXNykRp1d_MlxGC3VH":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getBounds"},"-EHa2MhQpY0VrWTCfSx5j":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getIndices"},"lxQZQ92NYIAaAzn3ddohg":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#getOpacity"},"bZSeBe0L5MEx9xEZGvLcv":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isConvex"},"JM2BPzUXO6dWgCJ2ztiMh":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#isFinite"},"lCwttzeL7fTElnR9xmaID":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#lookAt"},"kHofyZLarCrRsbxqak8aa":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onCollision"},"dXipwdB-bLoXy04Gp0va8":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onDestroyEvent"},"O-fN1DXEoxv7skIg0PDqP":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#overlaps"},"JualXVMIIkk8ei0mbZjnS":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#recalc"},"biBvoJ-q_hvBI_PaXvO6H":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#resize"},"jAeOyci-VWRZWDTNOpBHt":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#rotate"},"nyvjPgqExxD1IbcApVsHt":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#scale"},"RkfhGAREYn1s_kXmLkal6":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#scaleV"},"LIi_fRpZzQLStOJ67AKU7":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setOpacity"},"eL7BCLSjwqbt-s72g6JQY":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setShape"},"VYU0zA6y-88AlRkfFB_oU":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#setVertices"},"wbmTWFxoE13HTdn_ghqIm":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#shift"},"qVy58gNgXZaXZUy4PZ2Py":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#to2d"},"VrY-o8DZSELVZZfuYVVK6":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#toIso"},"9HcneMB3xRWx-0HD44RAm":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#toPolygon"},"oBcN9J4YjlFhpk8lTQ3JO":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#transform"},"QOQTTPT_sQI2IIML01PBA":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#translate"},"NCAKaH7x7Xb91sL6JKKTn":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#union"},"PRKP-XfKMl-uGIakUisAN":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#draw"},"ER0RmSvsLFLPnHZM3SqB0":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#postDraw"},"qZGiudWogeCFeipY5i7Q3":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#preDraw"},"IglMYv02_ANLY0kkm8C4d":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#update"},"yd1igdjCOIK1Zt_aDKP4g":{"uri":"/melonJS/docs/melonjs/ImageLayer.html#onAnchorUpdate"},"9wu4njMeUXjOZGem_2tEw":{"uri":"/melonJS/docs/melonjs/Light2d.html"},"iohqkASXUhgrCth3JWKwm":{"uri":"/melonJS/docs/melonjs/Light2d.html#alpha"},"u12TaYEvZM5I4ED3iOXof":{"uri":"/melonJS/docs/melonjs/Light2d.html#alwaysUpdate"},"tnBtKeZ-XXQq-M1DhMhK_":{"uri":"/melonJS/docs/melonjs/Light2d.html#ancestor"},"9KPzO31ZAqr5-hOCx-F4Z":{"uri":"/melonJS/docs/melonjs/Light2d.html#anchorPoint"},"w9XP0R8sYXY09XcDhI1nt":{"uri":"/melonJS/docs/melonjs/Light2d.html#autoTransform"},"9GyQ5Lbg4B7rhMwlqHqTv":{"uri":"/melonJS/docs/melonjs/Light2d.html#blendMode"},"-W2o2wtlLLtdTb-1GmKiD":{"uri":"/melonJS/docs/melonjs/Light2d.html#body"},"dvc1zp8yVm_0PUnpiND0o":{"uri":"/melonJS/docs/melonjs/Light2d.html#bottom"},"grHdIrjTxdJuKcEAAYyx1":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerX"},"xCFfG0CR4zFOyaAipexXV":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerY"},"P29R4-meJ7Y-OvEkh6zQh":{"uri":"/melonJS/docs/melonjs/Light2d.html#color"},"Fac5ReHT0TABeaZG6qxIS":{"uri":"/melonJS/docs/melonjs/Light2d.html#currentTransform"},"Qw7YRrgVRBCvyUF4Xg0ow":{"uri":"/melonJS/docs/melonjs/Light2d.html#floating"},"_Wu0Zm5cgIrC-Ch2FKA5x":{"uri":"/melonJS/docs/melonjs/Light2d.html#GUID"},"OaGXqd778td9N3ALoai38":{"uri":"/melonJS/docs/melonjs/Light2d.html#height"},"9kJoMIIjexnE-fcXlOMyQ":{"uri":"/melonJS/docs/melonjs/Light2d.html#intensity"},"AAPJwkZxHydvuSKF_zWUa":{"uri":"/melonJS/docs/melonjs/Light2d.html#inViewport"},"UxlLxOfynOxYarBk87hBy":{"uri":"/melonJS/docs/melonjs/Light2d.html#isDirty"},"toJFeqEyE_mdiygjOhae0":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFlippedX"},"sLdvaQqJW-j3c3S53wKKT":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFlippedY"},"d8Q1AbzSIb3TAo9LRKsEE":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFloating"},"I9QE2YZBKTO0V5QG-P3_y":{"uri":"/melonJS/docs/melonjs/Light2d.html#isKinematic"},"PMdOMCPWKcje48ua-TsLw":{"uri":"/melonJS/docs/melonjs/Light2d.html#isPersistent"},"nlNhQXqMdvgZgjVH0rdhO":{"uri":"/melonJS/docs/melonjs/Light2d.html#left"},"cokbcliOgO21ATQrTL1AS":{"uri":"/melonJS/docs/melonjs/Light2d.html#mask"},"dvGdfJ10xm79F_POAKD9-":{"uri":"/melonJS/docs/melonjs/Light2d.html#name"},"yGfpyPh9IDFMyk6wAn2_0":{"uri":"/melonJS/docs/melonjs/Light2d.html#onVisibilityChange"},"FDHTKZ9hQUdYWvPVst1w1":{"uri":"/melonJS/docs/melonjs/Light2d.html#points"},"RKIn8ZlmA5s9WOSE9a9yB":{"uri":"/melonJS/docs/melonjs/Light2d.html#pos"},"NULi2wVgpoX2IyxVpt-cb":{"uri":"/melonJS/docs/melonjs/Light2d.html#radius"},"ERHMwWmvizPBzE7NiugXL":{"uri":"/melonJS/docs/melonjs/Light2d.html#right"},"gpZrtLSSMD1eK6HYyMGIT":{"uri":"/melonJS/docs/melonjs/Light2d.html#tint"},"rDhbfhU7uhcRV7GHpEwo4":{"uri":"/melonJS/docs/melonjs/Light2d.html#top"},"dcjfO07_xu96YBENGdFC-":{"uri":"/melonJS/docs/melonjs/Light2d.html#updateWhenPaused"},"2q1rFsgZrvRFXJjotjt34":{"uri":"/melonJS/docs/melonjs/Light2d.html#width"},"-5orbZUOVDWIoZntvRS37":{"uri":"/melonJS/docs/melonjs/Light2d.html#angleTo"},"TFQ2PuA34t7EuKKq5zpP5":{"uri":"/melonJS/docs/melonjs/Light2d.html#centerOn"},"J7IIe3okSLybpYE3I5rw7":{"uri":"/melonJS/docs/melonjs/Light2d.html#clone"},"J-WxmOYgtxQ1Xh5LQjpvB":{"uri":"/melonJS/docs/melonjs/Light2d.html#constructor"},"4OLMMLEATwkrMQt0rOSbA":{"uri":"/melonJS/docs/melonjs/Light2d.html#contains"},"Fa9lERTSsXtg36wRTFvMi":{"uri":"/melonJS/docs/melonjs/Light2d.html#copy"},"DpjL8CcVs_f9mN3skWwgF":{"uri":"/melonJS/docs/melonjs/Light2d.html#distanceTo"},"FNLQO0LU4Ft_0jmIP8rgS":{"uri":"/melonJS/docs/melonjs/Light2d.html#equals"},"7FdoZGoTSmdXD2eq3dpkk":{"uri":"/melonJS/docs/melonjs/Light2d.html#flipX"},"tv3NInuyVW-piWXwKq69K":{"uri":"/melonJS/docs/melonjs/Light2d.html#flipY"},"-Y_WBDPe9QZhH0Wp12Atb":{"uri":"/melonJS/docs/melonjs/Light2d.html#getAbsolutePosition"},"fu_Z98uig6RGsvIsp9I7m":{"uri":"/melonJS/docs/melonjs/Light2d.html#getBounds"},"ziLjlYuq-tM38QuxpVrLr":{"uri":"/melonJS/docs/melonjs/Light2d.html#getIndices"},"Jv419ILdRxJGH7c2oP-Ot":{"uri":"/melonJS/docs/melonjs/Light2d.html#getOpacity"},"-u0tcv2ZOWkSQKtnHprHL":{"uri":"/melonJS/docs/melonjs/Light2d.html#getVisibleArea"},"E1yWcabxbTv49lewfSGjH":{"uri":"/melonJS/docs/melonjs/Light2d.html#isConvex"},"BjiLP8kYzjfQB6HU3Szw9":{"uri":"/melonJS/docs/melonjs/Light2d.html#isFinite"},"3uATP6ZXTKpfKHMtKeTSW":{"uri":"/melonJS/docs/melonjs/Light2d.html#lookAt"},"KpiPUj6mkQA7QMDzXXSKe":{"uri":"/melonJS/docs/melonjs/Light2d.html#onCollision"},"HJlvg3zNJWTxWkNaI5het":{"uri":"/melonJS/docs/melonjs/Light2d.html#onDestroyEvent"},"PrQAh1J9qOnKMLtAlkY9p":{"uri":"/melonJS/docs/melonjs/Light2d.html#overlaps"},"33nIJqRmPk1WJb_EcvCxW":{"uri":"/melonJS/docs/melonjs/Light2d.html#recalc"},"M92fJSRMiqiEnoCEbG9TF":{"uri":"/melonJS/docs/melonjs/Light2d.html#resize"},"kecoDzWuzhIoPlxbcJwZ1":{"uri":"/melonJS/docs/melonjs/Light2d.html#rotate"},"2_d0rxIHW2mgGOclxTw4x":{"uri":"/melonJS/docs/melonjs/Light2d.html#scale"},"oQnuXA_9V9JPNdLgfbj50":{"uri":"/melonJS/docs/melonjs/Light2d.html#scaleV"},"WkRiJUEs2T0YI9WiUZr9J":{"uri":"/melonJS/docs/melonjs/Light2d.html#setOpacity"},"HaFGz0QvS-1g6PXh_b5Uc":{"uri":"/melonJS/docs/melonjs/Light2d.html#setShape"},"V7zwgl0WrEq9hfiKxcdte":{"uri":"/melonJS/docs/melonjs/Light2d.html#setVertices"},"TigYDttK8c-4ERVykpJgG":{"uri":"/melonJS/docs/melonjs/Light2d.html#shift"},"_8tP7L_8mwUswDdmEYTBH":{"uri":"/melonJS/docs/melonjs/Light2d.html#to2d"},"wsPKmnVsAK03qEKGF9SGQ":{"uri":"/melonJS/docs/melonjs/Light2d.html#toIso"},"w3dC5BXEMM5Z0zXAqVrle":{"uri":"/melonJS/docs/melonjs/Light2d.html#toPolygon"},"kAVIkdvT0DcfOyppbPqJx":{"uri":"/melonJS/docs/melonjs/Light2d.html#transform"},"mf4mDVyXscHbuVykC0uT_":{"uri":"/melonJS/docs/melonjs/Light2d.html#translate"},"GpyQC9D35yBNywyaohS0k":{"uri":"/melonJS/docs/melonjs/Light2d.html#union"},"NaGqREtsudT7Z9_EkY7kn":{"uri":"/melonJS/docs/melonjs/Light2d.html#draw"},"9ywW8yMnOIW9jNVYOLhAh":{"uri":"/melonJS/docs/melonjs/Light2d.html#postDraw"},"55Ej7D3fxXNuQIFBw23gg":{"uri":"/melonJS/docs/melonjs/Light2d.html#preDraw"},"ZU2VdMFXzuRok1eOscW7T":{"uri":"/melonJS/docs/melonjs/Light2d.html#update"},"rzOgpuSAwr1LaqlzXYTHH":{"uri":"/melonJS/docs/melonjs/Light2d.html#onAnchorUpdate"},"rno5G6INUDIpstUE3wcKx":{"uri":"/melonJS/docs/melonjs/Line.html"},"WBBhUANke72AG-M8DGDX2":{"uri":"/melonJS/docs/melonjs/Line.html#points"},"hoDyz0Rhu4lIuOGx3ncd9":{"uri":"/melonJS/docs/melonjs/Line.html#pos"},"ITvLGFNIL13Ur5hIGB2OV":{"uri":"/melonJS/docs/melonjs/Line.html#clone"},"GJqGecX0u9ZRiOtwKUnx0":{"uri":"/melonJS/docs/melonjs/Line.html#constructor"},"kSdWUvGJp9Iv2HXGRFpYV":{"uri":"/melonJS/docs/melonjs/Line.html#contains"},"mUQ05M3bEoU4nfrglLylY":{"uri":"/melonJS/docs/melonjs/Line.html#getBounds"},"2MLua4uCEesfLd-M2h-wP":{"uri":"/melonJS/docs/melonjs/Line.html#getIndices"},"xzv_83IE73sTQ9H0iLtv_":{"uri":"/melonJS/docs/melonjs/Line.html#isConvex"},"4__082TdcsJdoeIOXCOPu":{"uri":"/melonJS/docs/melonjs/Line.html#recalc"},"NFGh0oCOFE6OpWK3kdTje":{"uri":"/melonJS/docs/melonjs/Line.html#rotate"},"a-o_U6R334ITClaODSBI3":{"uri":"/melonJS/docs/melonjs/Line.html#scale"},"BJKoHJqW63izJz810M27Q":{"uri":"/melonJS/docs/melonjs/Line.html#scaleV"},"2l8vSkZ6HAKZqatYJv7Mv":{"uri":"/melonJS/docs/melonjs/Line.html#setShape"},"cuw4Hj5_iE2hNZlMX8rHv":{"uri":"/melonJS/docs/melonjs/Line.html#setVertices"},"ilkiJx7pNtVc8AC2P4jSq":{"uri":"/melonJS/docs/melonjs/Line.html#shift"},"GjzPZITmghPoXa3DW_6sb":{"uri":"/melonJS/docs/melonjs/Line.html#to2d"},"gUN27Bw7YiUQD0mM4UWEQ":{"uri":"/melonJS/docs/melonjs/Line.html#toIso"},"C4x2Tb4t816htCP7Hx5KV":{"uri":"/melonJS/docs/melonjs/Line.html#transform"},"4srv8kY60xbdgBaXA938j":{"uri":"/melonJS/docs/melonjs/Line.html#translate"},"pbbR0M983ES591ITZbg6h":{"uri":"/melonJS/docs/melonjs/Line.html#contains"},"Iwfzq6A4itAUiGfBpQpf4":{"uri":"/melonJS/docs/melonjs/Matrix2d.html"},"_AH2SkZAj1pVU4HJjNjFZ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#tx"},"uE8Y0a2fE7tLLhC0XSnYJ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#ty"},"12QNdwc6G0OdhkQP4BtbL":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#apply"},"F5RlksSQLpRTi2lRkllrf":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#applyInverse"},"WuZBH9rMnSqGguYlLBRnl":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#clone"},"A86NhxeJ4w6x_tYjPObN8":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#constructor"},"NzBM7ElIziIDz5nNVPBlj":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#copy"},"9hkw8vaHX-FqbpYLeZrRI":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#equals"},"bqJDf1bmkXu9gXctcSmUR":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#fromMat3d"},"ua1b1MKKjebomlVsBYMP8":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#identity"},"2JAUHN0By8Wtj6oo395so":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#invert"},"6DFoDyP1zuotPKq6h5FVz":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#isIdentity"},"cXsdDKAsifGlQfuk_Xe50":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#multiply"},"yCMqMsj4nt0vEoDIvkiI3":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#rotate"},"Sseg1gm5xt_phtGcB6pQt":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scale"},"ISIDT3qmx3vydqcAPP6wh":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleV"},"dKApN7Qtg5DfJgD0Qr_MZ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleX"},"LOhc4I_1b4f7v8VZhRiqH":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#scaleY"},"uP2m-JImjSFjVnPzrx8EX":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#setTransform"},"zyO90Npa3QzITo8nwhPAr":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#toArray"},"9jjNpTuk4q4EGqzSoS2tf":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#toString"},"nORDoNCgMIR4bUHI2xEnQ":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#translateV"},"Zb0psz2I-p8AHNPqrU6o2":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#transpose"},"RgfmF2tkBG4O89dwA-lb4":{"uri":"/melonJS/docs/melonjs/Matrix2d.html#translate"},"yxtHu1KRWLkB0Qvsxi5Cw":{"uri":"/melonJS/docs/melonjs/Matrix3d.html"},"5ipVfgERCIsYCOsPEj3WE":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#tx"},"fymVjB-QWKXvItCshChwZ":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#ty"},"Xm0yW_xhy4vpzNak71j5L":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#tz"},"KwfZ26VbT6AfBDrCW0VUq":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#apply"},"kvf4XGwcWn4Avh54Zz4Gj":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#applyInverse"},"aLPLMADQvUPxC7xNtlnpt":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#clone"},"ZB7BPETp0O6N4Yqvuh1ph":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#constructor"},"9JFop3KVuB6HHSHXuznwl":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#copy"},"OgWaYOoR0j6I3uZUoiM8d":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#equals"},"tdgyWNkAC8GqAs-LYuFTV":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#fromMat2d"},"3P1gJuNl9vL22O_XHnLb6":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#identity"},"uT6oJfaBTq_5U8rpMxh_C":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#invert"},"IwTe31g9dRXwWLeJ1-arN":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#isIdentity"},"tAgN3SvA_oYUVfBzclDl3":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#multiply"},"tlA5yh74KePywakv4lM6h":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#ortho"},"ZvgyM1V8FOg_aFMlKLA4z":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#rotate"},"bzIry67zmAlyZjYZV4xAe":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scale"},"5jgPVPRQRZlas92KoMGt_":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleV"},"SfBsZrLkQ0yjtzfDONDAT":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleX"},"7iGltufkV7YZ9pfumTnXf":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#scaleY"},"dZlxRBUxuDPBLSbqRIW3u":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#setTransform"},"l6OV1vVPbSZKOZ4ebqo3w":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#toArray"},"qouAJJhPPu6htSS-TsuOM":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#toString"},"RH5FmQ1h_tp0FPFDhAPej":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#translateV"},"iOJm3lgt4USBO7veGy-XC":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#transpose"},"Ep1SJ0k260Wv190PwsNb-":{"uri":"/melonJS/docs/melonjs/Matrix3d.html#translate"},"sgskYSMYYsQswiapE0WcW":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html"},"8GKdiV0Hbmd9CA2Dtc_5Z":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#alpha"},"XVrScn6IRR8CMcK0e8THf":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#alwaysUpdate"},"36g9wXYpQKuEeaQvHCtCw":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#ancestor"},"f8UZS0yiuNij3lq4aKNgH":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#anchorPoint"},"tqYhNXoX3rbYMpH1VzYYA":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#animationpause"},"qAYH9YyF78PamJAl2m9zV":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#animationspeed"},"TxF7f9owFjy0ZDqeqrer7":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#autoTransform"},"p2I79Jr-yj9nOiWpXPEc0":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#blendMode"},"K2VzDMjXhq0P2KvrutJr2":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#body"},"Qu4NavO8_OTnwdR25IAph":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#bottom"},"o0qRMeeF-JS8bvw05fGP1":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerX"},"Mm4RmIK8jrAL6HAog0Uwl":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerY"},"gMNUjxbtMaZymZnNgrDhz":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#currentTransform"},"6sKJMfHeIQj5unR0uHBbu":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#floating"},"yTBC95IeVkO_X8zJAMB-f":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#GUID"},"RnV2qvuLzeQvbE3Yy7DxI":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#height"},"bClADuce0TZXF_DvbWNc0":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#inViewport"},"u073FTAbDIoHVXD7cFG8M":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isDirty"},"J-mXQhEsFfs8B7ZECT9TY":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlippedX"},"1oLZINFVBeNE63aqwABGJ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlippedY"},"yWbaYQm2ANlAChIlJ7H7L":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFloating"},"ARSPEYcgf79GqEjeAVhvt":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isKinematic"},"DhzMLZiIVqOuF4k8ZFUf2":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isPersistent"},"iP1lzGwW8-aebs_4z2XpI":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#left"},"oOb5WNfhNtJQOwWlyAe9V":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#mask"},"vSiYbeVG7z_G416p0AlBh":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#name"},"EU0W8_QFONZyxyygPbSDl":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#offset"},"gKpmzBctNgCXLnNnbA14H":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onVisibilityChange"},"8763T0cLhNbf4rJSbh2jg":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#points"},"nlk5zZVsIQhehURRNUj77":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#pos"},"P9vFIs1JKAh_9vdVORbfp":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#right"},"Y7rGGTTd3XqdcLPwDRdEw":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#source"},"j_prSwh7CTZRD21vXy9hS":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#tint"},"pxoPrEAQv0rXVrxIrm5R_":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#top"},"e1WSav2xCZVHubeRDxrtM":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#updateWhenPaused"},"pqjrf3tjhs-ew7pvOMyyR":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#width"},"w5o3rrjW9Ps-oqSfySXDz":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#addAnimation"},"2sAGqJd8t96ppUYGnQlAF":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#angleTo"},"i5DIWK7zpRJUEjykDNPXo":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#centerOn"},"0ruKCH1a2dEXIkG1nUh11":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#clone"},"bDkmtoJSEzNCyRjN9BQQB":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#constructor"},"Jgo8h-wUY093ayh_UM9pV":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#contains"},"z2pvrPod5snf-YG_U5zjp":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#copy"},"HfoRXWrND5YshCXlx9vta":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#distanceTo"},"qv0T0ViHnpIVD72tJmRUu":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#equals"},"utXerQu6BHLOe53Oj2wrz":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flicker"},"th9mKg5g2GOxAQBz4tu_l":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flipX"},"8m0n9f3Y-bNOTxN42Ud6c":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#flipY"},"ZxGdGUR2VEeH4ZKxlhbhZ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getAbsolutePosition"},"28yJXnJ5226LiYgcuF3BN":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getBounds"},"Hv55K9PG4kVTmg_726zva":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getCurrentAnimationFrame"},"asXvNcO9By63PX3VsKN1A":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getIndices"},"Twqd_NG6r9MgOk82-1A9Z":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#getOpacity"},"hlVnHJMal-m7Onb-BmyhO":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isConvex"},"3J0YJJG5FnkeJsWAKpbvR":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isCurrentAnimation"},"M-lE82v390wk1V2wjqC6n":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFinite"},"4Hi8qyPMOM2DPnsyKbajl":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#isFlickering"},"KAJMGNTEmqHKNJ-HhojO6":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#lookAt"},"z_KYsOWQcQ7PLf6C0XWar":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onCollision"},"dqW4kOZH_nWFVJmNdJiJZ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onDestroyEvent"},"Orfm7TKRqGyB7EDeRvMJb":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#overlaps"},"b5nUhH17PtSPEEYce-DdV":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#recalc"},"nJ8C8gkLgY4NACeqkzqia":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#resize"},"DZGN_1BZ4xkVq1AE3sKG7":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#reverseAnimation"},"jVlmBtka9oKHl3NVu-ftD":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#rotate"},"2luke6wuc9TP4D_kx7Nuw":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#scale"},"LmzTJLUpX5XG3qM7ta-WE":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#scaleV"},"b8zB4X5qENDOMxGWKQUfD":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setAnimationFrame"},"ReIPjErwMmPIFC7k1_wWG":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setCurrentAnimation"},"dHCXOhrV5i_kjlTTc0qtP":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setOpacity"},"cH0P0skSuYwUnDZ2pWz02":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setRegion"},"RLxdWjCr_2C7cF65FoIpr":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setShape"},"4k3U-2oUJqU4SIm6jlfXJ":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#setVertices"},"__1FXr7muf9icSMVlsn10":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#shift"},"khvyn3Gr8SarnK-bYXhMj":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#to2d"},"6-WUrZpuFHgI_esnxbPkV":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#toIso"},"sVGP2DxIyK4kKlBbTcNIH":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#toPolygon"},"9B-FEJALhZuSRSyDop7P2":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#transform"},"I-xbl0aj6gwItF5yeF8xO":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#translate"},"Iv9c6sYuQrzKTqT1Ll68-":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#union"},"QktMMhP2VswESsECr8G8Y":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#draw"},"YEXVVaMS1oe2jSWmKX2OI":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#postDraw"},"xTHhqBtHLG8e8nqoDJHsj":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#preDraw"},"Al7YBFXlx9YC8PTPPfo4G":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#update"},"DYRHrs6y8ntXKrW4SiV99":{"uri":"/melonJS/docs/melonjs/NineSliceSprite.html#onAnchorUpdate"},"GgNKqcL_ebT-MuHbYH7uU":{"uri":"/melonJS/docs/melonjs/ObjectPool.html"},"UdxgIa188ZbLYEZEFgDN7":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#exists"},"TORND_7h1ZVCsonvrKfCr":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#getInstanceCount"},"-wxC1sHDGuioCQqdkMIrR":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#poolable"},"GBqnLSfxG7ZSb0NY8AWhZ":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#pull"},"u9TyBIYy77cDZY_P5gn-p":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#purge"},"oSzuDBffcocwG6ZpiOv7E":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#push"},"pKv4WKojdSaiB5HzaTuDc":{"uri":"/melonJS/docs/melonjs/ObjectPool.html#register"},"H_Ol6Dztd4PGBDe5qhkM6":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html"},"xJUA0FDiySMldpvjWN8Vy":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#x"},"Pk1cRdo2Q3ke7WM9ZHQb_":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#y"},"3KaQPBNl9cy4vEzcDJpYb":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#abs"},"_UGBE6NYj2LxUVITdQqap":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#add"},"6EdhiaucmZ7h28OOCFKO0":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#angle"},"3WPoNHMYa440esvDZ8eJM":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#ceil"},"x091PTNUgQkTeJY0AZPFu":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#ceilSelf"},"AS9yHbcDki67JAM-ZYQcg":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clamp"},"EgjtsoyaPgK_Zh89n59jp":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clampSelf"},"FZgobg6fOgbZ89iRWMh12":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#clone"},"93SmRiPvcO3hBkufKHMnf":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#constructor"},"ANkZAeIyKq3eN9KTJsfQz":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#copy"},"Bd_bE5VdFfChBqDAFIYKK":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#cross"},"6CORSM0JYKjTAP5vdtoP8":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#distance"},"iJY4gRRy0q-0zAjr-lHjD":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#div"},"j4iuxpvfxuxvD81XpAbbM":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#dot"},"rx7xneDbTcuKN4j8VzCKI":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#equals"},"NIjN4y5D8Y8xv7tgtDj8y":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#floor"},"ZKCjzSiSvUHf-BgYYuB_p":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#floorSelf"},"PAyeE6BKo96VnOom_UZRD":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#length"},"1MOf9NTo83l3wS-DDvuLm":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#length2"},"1n8V92EQ3iDDLSy3QdhcT":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#lerp"},"TvkprGGvCZmx4TWT_idIC":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#maxV"},"aCkOVUut0evJBBC3gJiiV":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#minV"},"krOEn3EAf0mcWhmDK0wVJ":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#negate"},"XUu0qR0s2VJnNP2QtQtWd":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#negateSelf"},"2_HQNJh6h5QglVVInyXXw":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#normalize"},"mCc8a7eMuWUMbsdnN8MgL":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#perp"},"X9_BDRrRH3mQi8mOLw2TD":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#project"},"jdGQWUsteqXMlZvACcWlh":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#projectN"},"dkhb2zyq7c6MtI-DLW77v":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#rotate"},"tus5o8UBNJaKOc6rbCj-c":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#scale"},"ytCfbWq7tcIyedJvfnyon":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#scaleV"},"YTGt_0tVLWT_r3-YQFoRr":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#set"},"fG9QgSQlOYgkZI1al-78T":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setCallback"},"3wx9gW6ZUtsNWXiulLPGm":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setMuted"},"bsKl8ZqdV4UsHMzXx6T7p":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setV"},"1ClLlQjSmSIJjzMRArrCw":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#setZero"},"4hp4rqh7oHeyQ1iUTYTDW":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#sub"},"-iLKYkSzC2kdOKMGQ2gcx":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#to2d"},"T_hvcksZSEkKen7qIW9Un":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toIso"},"SYhuxp0lJPw0p9irTuL-a":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toString"},"fZbmGi4W3CVzdaXJrmre3":{"uri":"/melonJS/docs/melonjs/ObservableVector2d.html#toVector2d"},"0aOIySF_Lfcw2Svjz-034":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html"},"-9tiZZA2yohj0-SyrqgZK":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#x"},"QV92uhoQ2uMNsmOAUJ3kz":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#y"},"RSeGybGNaiuVsTneMWvTQ":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#z"},"X8BUMfFmjvaiH6W-6zTs0":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#abs"},"W36LNkhUkzwDdpSG7dJ__":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#add"},"Bi1HCiWD4WGJGXYhCjKo9":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#angle"},"nz4-koSZivlvA6hn4xFNn":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#ceil"},"PYoxKZpb5_wiMmHPSu7E3":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#ceilSelf"},"BRWXR_s8lcGMuqUggXwOK":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clamp"},"rFAuCB81tNn0iSreU4dQd":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clampSelf"},"bY4vW9yDYZ8OiyQWn7aWy":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#clone"},"lqUM2YtNnE1G5YaC7PXM9":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#constructor"},"8MeUHF1PTr81DS5UGDFU4":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#copy"},"V5hxx5M7h6ZtKnysw6D6s":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#cross"},"Vv_XFbha1a8rj-6uTeJiB":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#distance"},"kZKLs805kYyFk30DoXCuV":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#div"},"fgwA8s0dIYeG3Aoe7hwsF":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#dot"},"-eMfOhoxHd6xc8UJcHcRN":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#equals"},"52gsPhnYMsLoYWzyhGvzF":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#floor"},"7dykOSXCTcdyxQBd3PEFr":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#floorSelf"},"aC80x4393ZxPYtNZ1HLpx":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#length"},"A61MGZH2BC7NoeID5D8IR":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#length2"},"c0_FRcs4oIuA6w5FaSyFI":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#lerp"},"pNuSQDQ_emZrERxlPxCqd":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#maxV"},"-JTI55Od0UZH8U7aTOUXH":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#minV"},"PSwMGpZv-ZoUgveSDcLcV":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#negate"},"eArUHf_yY6fg67m7A53Yh":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#negateSelf"},"jMNPkwBa9pqb31YFDNG49":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#normalize"},"K5FWLg2EJF1TVrcZe5Zvg":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#perp"},"XHVPcDanf3zAiCnYMkHcr":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#project"},"DoAQztdSBCdC7yFF_Ctl7":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#projectN"},"dtF6qv6y7rDuZJpoHHozX":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#rotate"},"F_Ywg9Bqh0ztSZBQdAuZR":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#scale"},"oxcxWHFKt2ivUS4fiyTsL":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#scaleV"},"8orNlJmu051-hKQ2A4Myt":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#set"},"qCef7TWwUtPpi7xUrEdyD":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setCallback"},"0FPgshylb2uoGlsum6ycx":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setMuted"},"9lEM8yhYBaXhWiG71XlcH":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setV"},"88nhIR1VOrHL6k8hlhgWe":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#setZero"},"bwjjPR3YF5z3yErlHrWu_":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#sub"},"KxzgVzreR4-OfC0OpeHDY":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#to2d"},"Z7jZVnPHSt5FibN5YQnWy":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toIso"},"ojH7a8tzCodc8P6tDC1SY":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toString"},"aq31VfWRcsUtSCLT-diaz":{"uri":"/melonJS/docs/melonjs/ObservableVector3d.html#toVector3d"},"Ms2rodSvcpM81zn_NALB1":{"uri":"/melonJS/docs/melonjs/Particle.html"},"t-cycacflAca5hfXacqvy":{"uri":"/melonJS/docs/melonjs/Particle.html#alpha"},"UCfzUeNlitwUSkfIcx2aT":{"uri":"/melonJS/docs/melonjs/Particle.html#alwaysUpdate"},"Y46LTML_XvHfM2iu00ODk":{"uri":"/melonJS/docs/melonjs/Particle.html#ancestor"},"luOTuyK6eZZ9d_4N6ED6l":{"uri":"/melonJS/docs/melonjs/Particle.html#anchorPoint"},"SWY_4erWu4N8ZVmC7Qdnj":{"uri":"/melonJS/docs/melonjs/Particle.html#autoTransform"},"wpYZZIcDC7mMwjfcONrUS":{"uri":"/melonJS/docs/melonjs/Particle.html#blendMode"},"nxPm-SSTl9qLeMJHh1h8A":{"uri":"/melonJS/docs/melonjs/Particle.html#body"},"TfeAcAm07QiyzHW9Coon6":{"uri":"/melonJS/docs/melonjs/Particle.html#bottom"},"rnHlDCimNeRXcs-23cJSU":{"uri":"/melonJS/docs/melonjs/Particle.html#centerX"},"3Omb3AUFAdk9fFemtilNa":{"uri":"/melonJS/docs/melonjs/Particle.html#centerY"},"1dned9R0Q975pts4s18qk":{"uri":"/melonJS/docs/melonjs/Particle.html#currentTransform"},"CXfcOuQT8AvAv6bFyzv84":{"uri":"/melonJS/docs/melonjs/Particle.html#floating"},"Uj3LXj4uDIoTn73Z0qLcl":{"uri":"/melonJS/docs/melonjs/Particle.html#GUID"},"UJEXY9TLU6zhUk3uDqrrN":{"uri":"/melonJS/docs/melonjs/Particle.html#height"},"v3cp9UqkcFZcnmwbuP4Iz":{"uri":"/melonJS/docs/melonjs/Particle.html#inViewport"},"DfJJBn3zoJv1M0HCrfR_2":{"uri":"/melonJS/docs/melonjs/Particle.html#isDirty"},"zfkW2QYsrHcW809CLsXoR":{"uri":"/melonJS/docs/melonjs/Particle.html#isFlippedX"},"ZWIJQSp1i5CJcMKUcqvtA":{"uri":"/melonJS/docs/melonjs/Particle.html#isFlippedY"},"gu4_EfNPGUCbhhZYuptPp":{"uri":"/melonJS/docs/melonjs/Particle.html#isFloating"},"Rnjqjr06CWtkWZK5DqiW7":{"uri":"/melonJS/docs/melonjs/Particle.html#isKinematic"},"o_jrSyH1-Mlr4UEFjVhbU":{"uri":"/melonJS/docs/melonjs/Particle.html#isPersistent"},"aLgF--JBVk5tCixhjAoia":{"uri":"/melonJS/docs/melonjs/Particle.html#left"},"9L07ZizUvDjlwFn_adWHQ":{"uri":"/melonJS/docs/melonjs/Particle.html#mask"},"aKHwQ_OyhaU6NFVrhOOiT":{"uri":"/melonJS/docs/melonjs/Particle.html#name"},"qsaoId2piaq6vrbzI8aOP":{"uri":"/melonJS/docs/melonjs/Particle.html#onVisibilityChange"},"lN2mrWNA-9AND8_AlAA6d":{"uri":"/melonJS/docs/melonjs/Particle.html#points"},"KZyBrvFItTasPN9BjUtyB":{"uri":"/melonJS/docs/melonjs/Particle.html#pos"},"-9LcGrJuvHoLXl6ccrWax":{"uri":"/melonJS/docs/melonjs/Particle.html#right"},"wx09VphIsBCdKJGvTSDZW":{"uri":"/melonJS/docs/melonjs/Particle.html#tint"},"AV4V2Dopfc1WOglFXF1vm":{"uri":"/melonJS/docs/melonjs/Particle.html#top"},"H7m1LBqSlp1k6vhxYDNUE":{"uri":"/melonJS/docs/melonjs/Particle.html#updateWhenPaused"},"bhD0fHOPPjNH--9xxCaHV":{"uri":"/melonJS/docs/melonjs/Particle.html#width"},"VeQAQVcNZggKE63nh-RPo":{"uri":"/melonJS/docs/melonjs/Particle.html#angleTo"},"gqrVrNiMV1igFsD9-i-sj":{"uri":"/melonJS/docs/melonjs/Particle.html#centerOn"},"Z-mVX72f00E06yrMrXR0D":{"uri":"/melonJS/docs/melonjs/Particle.html#clone"},"h5DWG1Rx29ByOOmhE6JPh":{"uri":"/melonJS/docs/melonjs/Particle.html#constructor"},"N8zVkEICcIaHJFXANxtX3":{"uri":"/melonJS/docs/melonjs/Particle.html#contains"},"66vw4sIey-4Z24X_kEe_K":{"uri":"/melonJS/docs/melonjs/Particle.html#copy"},"pk37zWb2pVTiZdv15m0Yd":{"uri":"/melonJS/docs/melonjs/Particle.html#distanceTo"},"2qezE8pyJRPQ8obYkV6Yx":{"uri":"/melonJS/docs/melonjs/Particle.html#equals"},"hhfHEtwF1Fqms0F-vrDal":{"uri":"/melonJS/docs/melonjs/Particle.html#flipX"},"P9J8x9rFNLJsTTLeyql_h":{"uri":"/melonJS/docs/melonjs/Particle.html#flipY"},"wDi5br8puqOz8fBTzjTMf":{"uri":"/melonJS/docs/melonjs/Particle.html#getAbsolutePosition"},"lAjkxClok_HgHlMzSjxEi":{"uri":"/melonJS/docs/melonjs/Particle.html#getBounds"},"KZAWGKEXjX5ZUW_wEwzmV":{"uri":"/melonJS/docs/melonjs/Particle.html#getIndices"},"Qy-KJtrv4hlMJsIiwBgvd":{"uri":"/melonJS/docs/melonjs/Particle.html#getOpacity"},"V1Y4hRiq2riPjxgEH072B":{"uri":"/melonJS/docs/melonjs/Particle.html#isConvex"},"rkG6DdsX6ti7_E0j__j-A":{"uri":"/melonJS/docs/melonjs/Particle.html#isFinite"},"ZwFzD59nJfSDcUZ9HQge7":{"uri":"/melonJS/docs/melonjs/Particle.html#lookAt"},"tPvTb1sjheKK6wT5D0_1S":{"uri":"/melonJS/docs/melonjs/Particle.html#onCollision"},"-zla0t_1VaxR2lcbnhvpg":{"uri":"/melonJS/docs/melonjs/Particle.html#onDestroyEvent"},"EjJwkQx6XvXIjx_1N2knP":{"uri":"/melonJS/docs/melonjs/Particle.html#overlaps"},"d5EfVsHdffdjRnFSDyLIy":{"uri":"/melonJS/docs/melonjs/Particle.html#recalc"},"IROcpwaW5Hsr2-qongUxK":{"uri":"/melonJS/docs/melonjs/Particle.html#resize"},"sw3mvQgh1GAXN6sgsfj0u":{"uri":"/melonJS/docs/melonjs/Particle.html#rotate"},"pqoIwP6AtPYe4cPZTlTjV":{"uri":"/melonJS/docs/melonjs/Particle.html#scale"},"0TWV5UO6uXPOVkMq9uZ5h":{"uri":"/melonJS/docs/melonjs/Particle.html#scaleV"},"Cco7-Hc1XA3sgjgtbRhqE":{"uri":"/melonJS/docs/melonjs/Particle.html#setOpacity"},"YcMz0me5Gx8vfgINAXYvZ":{"uri":"/melonJS/docs/melonjs/Particle.html#setShape"},"4mPNDWhgh3WABkS_psLOr":{"uri":"/melonJS/docs/melonjs/Particle.html#setVertices"},"DxcVc6ximJZ_pCAVItTaT":{"uri":"/melonJS/docs/melonjs/Particle.html#shift"},"eldNpihvKdUSgnAbSR4dc":{"uri":"/melonJS/docs/melonjs/Particle.html#to2d"},"Rf75rWMwlg3RA97sB-XQw":{"uri":"/melonJS/docs/melonjs/Particle.html#toIso"},"HC3hUPEsK4Zwsd4OpUZ6w":{"uri":"/melonJS/docs/melonjs/Particle.html#toPolygon"},"LpXx2uAxAWgHcjKc7tzZn":{"uri":"/melonJS/docs/melonjs/Particle.html#transform"},"PV3j5wvTg3jIfTZkCRVBt":{"uri":"/melonJS/docs/melonjs/Particle.html#translate"},"LIvxKN5wDQwgrArCpjSOg":{"uri":"/melonJS/docs/melonjs/Particle.html#union"},"mmvANp2IUfrVv_lpsIpsU":{"uri":"/melonJS/docs/melonjs/Particle.html#draw"},"w854JvIGHEoKxXN8JX10K":{"uri":"/melonJS/docs/melonjs/Particle.html#postDraw"},"MW-N6KonFFOEhzeOMCe_I":{"uri":"/melonJS/docs/melonjs/Particle.html#preDraw"},"42JFLdhJJzXmc1DL4wDEG":{"uri":"/melonJS/docs/melonjs/Particle.html#update"},"-20PcLBU0Hc7KIA94qI_y":{"uri":"/melonJS/docs/melonjs/Particle.html#onAnchorUpdate"},"zos3itLOGIM6epj3Dydu0":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html"},"rLfeg1ONsQdNtGMEErAEY":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#alpha"},"VVbAitMs7L4luVOVIpcxm":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#alwaysUpdate"},"CE-Y3DBI2VMKngQcoQCC-":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#ancestor"},"qqjptlE_EY7513um3o1xP":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#anchorPoint"},"0p_4Eokhyl5xRGwqA4uuS":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoDepth"},"Pe5qbhEA30-BnA_FljPI1":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoSort"},"fmEFJZs9VwIw_kgeudfx4":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#autoTransform"},"ZoG9nDuioh7nTf9jCOBwb":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#backgroundColor"},"N_vuwW1n-1YV8Xtbo7a-x":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#blendMode"},"XP3x3AYYqA4YLsWOm18EI":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#body"},"HEW39KfHyWVXGIFPlobaq":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#bottom"},"CKlBpA3ryVZ6yaGFePwCt":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerX"},"Jw1vy8qgCW_JMwwglQTIe":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerY"},"C0QL2AwqBaX2NXmM9XSjD":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#clipping"},"HuMScVx4YPz5NrisPApCI":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#currentTransform"},"vgXgPmmOo2TfqEnsNUmoi":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#enableChildBoundsUpdate"},"NY8eo6GIs1S4SePBhT9Cp":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#floating"},"PHJOkPUrBuxo1drFZMS9Z":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#GUID"},"PO3b4FP6O7jt9VDt1kjWT":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#height"},"e6x3bI97XpoKc7z-yBuju":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#inViewport"},"xnwZyVbYJGQtcdw7-Wn2S":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isDirty"},"gwC717OWo71mgzpYHL2Dq":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFlippedX"},"iWE5f4F-lJVn5Yf-h11Pn":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFlippedY"},"qJXI7hq4b_IQFIrYlniz7":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFloating"},"vRSTXAHJa0LloO-BDh_9h":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isKinematic"},"BC_Ejhls8VOIAvlcfVGi8":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isPersistent"},"kgfErPNwaU84e6rT-9tKR":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#left"},"1OOe2fIDjrVuILmc6jLML":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#mask"},"xy8IPTaswd9xQ2uzLH99n":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#name"},"FKRKV7w2h8T2_PK66_xDv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onVisibilityChange"},"hmFs1KfJXSsxotOtbxH3G":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#points"},"FgbsQpmNg3ZzHJGzv3i5L":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#pos"},"4Xor3V7B_q6IYfadkYZUj":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#right"},"WRoRbg7ye266u4n7vuQOr":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#root"},"OHImFU_B1Gv_bd3dthZCL":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#settings"},"UA3KAH9mBVb-fL_EsR8iR":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#sortOn"},"r2cxA9udA_WCprcV2_Ulc":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#tint"},"3yXslz8Hj35nVYy4iMYha":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#top"},"ZoeCWTnAoDxgZ8daeN7g2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#updateWhenPaused"},"0KTe7iVQ3UT4tqgNa5wsX":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#width"},"6njJbaRFlllJNOxXe2dB-":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#addChild"},"ppDkOT0OubY92J8OD6XKz":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#addChildAt"},"szBX5YlnlSaRA97T1Kgbl":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#angleTo"},"-POYkMM6eF7ZfRynLxMQ0":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#burstParticles"},"b_WMUCj0jQYELyoaqJbXE":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#centerOn"},"0D0q7aKZxKmc0RYJCVD20":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#clone"},"L5svjqaC7PN9bPLnJIINu":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#constructor"},"lF4QDDFl1MuEhI2-Wbo5f":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#contains"},"iFEGFGQYkczZrZCiecT9N":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#copy"},"Fdg-PtL89TPz1ECH1q-fv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#distanceTo"},"jvZ0hjJXcoG7H7V43xs1y":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#equals"},"W4bsVY55nZlVUMb152AiR":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#flipX"},"mSYbY-EPzI5ffULYNoZBr":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#flipY"},"kFvvExKIc2C47ZyhGX-hs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#forEach"},"591SJjK-0xe9EMvWTFWLs":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getAbsolutePosition"},"HF1yc0Fb12anWpgTCLniE":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getBounds"},"MDWvt2Tpx8Tz1S0MQl9SL":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildAt"},"YC-awLQov2hO48pSUlDid":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByGUID"},"bEB8pP-HQj-pkMRFZRo12":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByName"},"wVD52gH4Cl9W14BaUWuDh":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByProp"},"tv543MLY651-rW0ZWVugU":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildByType"},"aOVeXKCmsfRp1omZCXRsJ":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildIndex"},"jR6T5zL8KUvlTaB4YzVKN":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getChildren"},"lk9FQuN-QffcIccE76kuN":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getIndices"},"Ii3WldkmUcQSALh7kYtSM":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getNextChild"},"SLoBDHZT_R1E-LCbnU4qq":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getOpacity"},"RpHhi_QdQ2iEVb5nEm_Yx":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getRandomPointX"},"h0ZBw1TKwxG4dLcXS-HMT":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#getRandomPointY"},"5EI6a5xjW3L0H_-aSJBkx":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#hasChild"},"0SoxLYxY-4oLWkbitdU-r":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isConvex"},"Tg85FaGHBNL1N8FMMckFZ":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isFinite"},"CiWdXi8oEQHvwuX6p5GaX":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isRunning"},"RlXeiteRUmBhcMHMXDakb":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#lookAt"},"PlprvVz2m-RqNLtau9ZQc":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveDown"},"9UPN7CPcmkBwmMNhWyItr":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveToBottom"},"C_UhHKIPM2R-_rovAZZj2":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveToTop"},"FT7RZCB5KpZiNUfmZ4e4B":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#moveUp"},"RxYxcmMuVFyWTQvMKondw":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onChildChange"},"b2ySMixv8FPhiLwzP9Omb":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onCollision"},"4M8hwljKRxwo9yg52jSWU":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onDestroyEvent"},"Ecx7Ksnv2zal7mzSiStwj":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#overlaps"},"HszJGlaSW5lcOfliF570H":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#recalc"},"jPWeLva6LB-o_QNsv47OL":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#removeChild"},"ItGF87MFAfor6SajQbBL7":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#removeChildNow"},"sE-xlKP-HwuSeFWWgf7fv":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#reset"},"fEImSZu0vhk7WL23TVl1S":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#resize"},"0fqOadgoZimDxtfGHUokx":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#rotate"},"UAZwremJedV4GUG6Jgi7y":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#scale"},"bezMqmatwVbx7e58H_8IU":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#scaleV"},"GcVcFTvDdhpD9VDys5D4X":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setChildsProperty"},"2gjdrCjWD4MuZycdFy5M4":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setOpacity"},"UKmsEsnbTnv4dvHdwPdcn":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setShape"},"js7CHwNeWYqxndzigAnwJ":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#setVertices"},"1lZd_kghm7qmUSE2tRqE5":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#shift"},"jfDZ6k8HHpMsaW0g09I_B":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#sort"},"WcMuE6ZesmcIW1HRR3y4y":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#stopStream"},"wA33WDtTemKkbR23FNyxI":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#streamParticles"},"X_zhq_3Qzbmm0AkMlVTWx":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#swapChildren"},"OZONxAZWDv7ftNqMC_6fd":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#to2d"},"AADQPuXAN52JT_8q8d1AM":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#toIso"},"47CzjYsu4AXqMJJZ2e4RG":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#toPolygon"},"XjkDX2ok-6SEY7sDiEZi8":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#transform"},"eHKyEWcFmtfmtP6L6HW32":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#translate"},"eimaIQ0SdVgmYwcizW5CB":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#union"},"Int8jvyqkS7moVTPvjOL6":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#draw"},"-vw8vy7kt3qzYjFGbBHkL":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#postDraw"},"5pIUiMk27vB-nmeoW9X0i":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#preDraw"},"F6KQr1zlzmLiQWz3PAtaw":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#update"},"P28n-CVLu_me79HdOW727":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#isAttachedToRoot"},"npjZ2-mbbklJD7SLV_3UJ":{"uri":"/melonJS/docs/melonjs/ParticleEmitter.html#onAnchorUpdate"},"aLcef8BjXEHuuKASi3qN9":{"uri":"/melonJS/docs/melonjs/Path2D.html"},"IiojRdIyjEn32D8if27O4":{"uri":"/melonJS/docs/melonjs/Path2D.html#arcResolution"},"4qy4fDHM0tjHO6YWHhA78":{"uri":"/melonJS/docs/melonjs/Path2D.html#points"},"ry2-3AD1kd51PClYESZUV":{"uri":"/melonJS/docs/melonjs/Path2D.html#arc"},"-btEOFqjzrQUosNO4CoAd":{"uri":"/melonJS/docs/melonjs/Path2D.html#arcTo"},"SiPkwhXPEivC7VBYwPzel":{"uri":"/melonJS/docs/melonjs/Path2D.html#beginPath"},"XY6wVPs1yecwy8He5yCkd":{"uri":"/melonJS/docs/melonjs/Path2D.html#closePath"},"78ojHHIge6fBQ9ypVRha_":{"uri":"/melonJS/docs/melonjs/Path2D.html#ellipse"},"GJQTsBiYau9bD4BT462Fm":{"uri":"/melonJS/docs/melonjs/Path2D.html#lineTo"},"L45Q4v7rpuAk31dbn_N_B":{"uri":"/melonJS/docs/melonjs/Path2D.html#moveTo"},"z--6R8TAj6_8WuyAnTo-o":{"uri":"/melonJS/docs/melonjs/Path2D.html#rect"},"cWjTqwntM0gmn5D8W5kvW":{"uri":"/melonJS/docs/melonjs/Path2D.html#roundRect"},"ZGQLuE9lcWprfKuPMh0ES":{"uri":"/melonJS/docs/melonjs/Path2D.html#triangulatePath"},"I5yVakr5LvkdfEYdhVS8a":{"uri":"/melonJS/docs/melonjs/Pointer.html"},"BwVErESgcYfIOi9IEBraA":{"uri":"/melonJS/docs/melonjs/Pointer.html#bottom"},"Jd5aGepXwKeTQcrZJGPbU":{"uri":"/melonJS/docs/melonjs/Pointer.html#button"},"BQxrrIgCXYR8Nl1OFJ783":{"uri":"/melonJS/docs/melonjs/Pointer.html#center"},"bKoJK-R6yEFwWwvlOr1zT":{"uri":"/melonJS/docs/melonjs/Pointer.html#centerX"},"Pogz_XvWlHqBpnVtxU-cu":{"uri":"/melonJS/docs/melonjs/Pointer.html#centerY"},"QUm13GpBaH4EPmlPmNGVE":{"uri":"/melonJS/docs/melonjs/Pointer.html#clientX"},"tX8rXDtW5iNrdEPVhrEMv":{"uri":"/melonJS/docs/melonjs/Pointer.html#clientY"},"Nmdv-eUb_Ovwx13J2c705":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaMode"},"wb_mngdJfQwPBgui55Tfi":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaX"},"3f9Ap8WnnCSMgwWz39b25":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaY"},"-bTratlg9MD2fTmOoHQHS":{"uri":"/melonJS/docs/melonjs/Pointer.html#deltaZ"},"dhpDyfQ7ap9F1ggXpWluU":{"uri":"/melonJS/docs/melonjs/Pointer.html#event"},"FnepvNtVGAgKXqopA5A-_":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameLocalX"},"7RRBDwr3L3Jzvl3WiPmLj":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameLocalY"},"GzCF1DTeS0j78JtTA1-Pl":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameScreenX"},"Q2o4jodk_pumReBrq25rI":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameScreenY"},"mW6FwqxF2GuskdKyvfMWt":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameWorldX"},"7-sv91cfCHH_WPsiBbFgO":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameWorldY"},"IWl2x9mgEBEpQXiQeIDx0":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameX"},"7eD7LAq2PYAsAo0_WiRow":{"uri":"/melonJS/docs/melonjs/Pointer.html#gameY"},"HVzlnoYSX4v9RLyb7bMuD":{"uri":"/melonJS/docs/melonjs/Pointer.html#isNormalized"},"a5ghnAqhbhGfweEna9qqp":{"uri":"/melonJS/docs/melonjs/Pointer.html#isPrimary"},"gdVQSVFYcVZrAuli9Jx2h":{"uri":"/melonJS/docs/melonjs/Pointer.html#left"},"Mr6FE4TQUVqoU11kq97kv":{"uri":"/melonJS/docs/melonjs/Pointer.html#LEFT"},"OQON5WZsB5cshWmvswY7j":{"uri":"/melonJS/docs/melonjs/Pointer.html#locked"},"Amn-bJioA_6S2cIVP72OW":{"uri":"/melonJS/docs/melonjs/Pointer.html#MIDDLE"},"9UsLlYtYPibURGVnm9RRd":{"uri":"/melonJS/docs/melonjs/Pointer.html#movementX"},"nS2JGTkk5JTxolNMNq9md":{"uri":"/melonJS/docs/melonjs/Pointer.html#movementY"},"oryieMFlBsTAfOmXz4ByO":{"uri":"/melonJS/docs/melonjs/Pointer.html#pageX"},"hOfSPfNTCAH828ROgEnVr":{"uri":"/melonJS/docs/melonjs/Pointer.html#pageY"},"PN3R_Kw5SwPLYKFfG81eZ":{"uri":"/melonJS/docs/melonjs/Pointer.html#pointerId"},"sO7JOUTjMchPrV8DT752W":{"uri":"/melonJS/docs/melonjs/Pointer.html#right"},"6b2MyRMDoqSq91aIGfBr5":{"uri":"/melonJS/docs/melonjs/Pointer.html#RIGHT"},"V1SSUDvZ3cU3g6-QdXUbL":{"uri":"/melonJS/docs/melonjs/Pointer.html#top"},"XKzis6vZC_T02mzo-pAfe":{"uri":"/melonJS/docs/melonjs/Pointer.html#type"},"yfof5Y-i54kD1p_a_lqP3":{"uri":"/melonJS/docs/melonjs/Pointer.html#width"},"Vr8VOzRHMt1HtcaFnYf7P":{"uri":"/melonJS/docs/melonjs/Pointer.html#x"},"So-zCFVYm9m26ga7UX_Vh":{"uri":"/melonJS/docs/melonjs/Pointer.html#y"},"xBLOTPxCGceCv1B5yf7fn":{"uri":"/melonJS/docs/melonjs/Pointer.html#add"},"TmmvvjwtUaZ7QidXaChqF":{"uri":"/melonJS/docs/melonjs/Pointer.html#addBounds"},"ZbJF7rfqTN6wKdogDrmLb":{"uri":"/melonJS/docs/melonjs/Pointer.html#addFrame"},"kh9bAgUVFytc3LD4ih1ET":{"uri":"/melonJS/docs/melonjs/Pointer.html#addPoint"},"CRXf4YozF7iyDuiV6DXkZ":{"uri":"/melonJS/docs/melonjs/Pointer.html#clear"},"rBTtpP5RwSeChJBUc9NmS":{"uri":"/melonJS/docs/melonjs/Pointer.html#clone"},"y7pqu3ZIf20ViGbUvggkU":{"uri":"/melonJS/docs/melonjs/Pointer.html#contains"},"BAk8nPLa9UtgQAZkzEfMb":{"uri":"/melonJS/docs/melonjs/Pointer.html#isFinite"},"aSfMZjQglu1woM41bLYaO":{"uri":"/melonJS/docs/melonjs/Pointer.html#overlaps"},"00Xo7IGkAK7Wid2nRnkl5":{"uri":"/melonJS/docs/melonjs/Pointer.html#setMinMax"},"tkLK_sLI2A0S8EoqLhiHb":{"uri":"/melonJS/docs/melonjs/Pointer.html#shift"},"wYoMQ9iZHySCprMSjRokn":{"uri":"/melonJS/docs/melonjs/Pointer.html#toPolygon"},"SYut2rOkq04pUS1KRyBdn":{"uri":"/melonJS/docs/melonjs/Pointer.html#translate"},"S-SGIL4Bhh8vRdRx_m6v6":{"uri":"/melonJS/docs/melonjs/Pointer.html#update"},"3haDbee1aEywJaPZJbcs3":{"uri":"/melonJS/docs/melonjs/Pointer.html#set"},"UtI1OxbnLtxCO5oyIsUWn":{"uri":"/melonJS/docs/melonjs/Polygon.html"},"LavvrtZL_tOep9APgjT3x":{"uri":"/melonJS/docs/melonjs/Polygon.html#points"},"pSAy8C09g7LScFOECoWRT":{"uri":"/melonJS/docs/melonjs/Polygon.html#pos"},"pwEmnfOJQ4j0VM9SU7RBM":{"uri":"/melonJS/docs/melonjs/Polygon.html#clone"},"vkka9k8gLv7nKF-KmyIBD":{"uri":"/melonJS/docs/melonjs/Polygon.html#constructor"},"qTE-c2Z_sKTsUQEvDq0Jp":{"uri":"/melonJS/docs/melonjs/Polygon.html#contains"},"O9ZaOfCpwcd59o4N2JBC2":{"uri":"/melonJS/docs/melonjs/Polygon.html#getBounds"},"otBEi-S3GPwqqQpsNar6d":{"uri":"/melonJS/docs/melonjs/Polygon.html#getIndices"},"Imbo84EhoBpVvseHfcCcJ":{"uri":"/melonJS/docs/melonjs/Polygon.html#isConvex"},"t6LV9Qy5L46oVQS_vJHZJ":{"uri":"/melonJS/docs/melonjs/Polygon.html#recalc"},"Pt8JNVS9JlbaNMJA0MZQv":{"uri":"/melonJS/docs/melonjs/Polygon.html#rotate"},"guLduL2HyXUSZQwFfny90":{"uri":"/melonJS/docs/melonjs/Polygon.html#scale"},"gGdfaOH98xcjOBGDM4zy2":{"uri":"/melonJS/docs/melonjs/Polygon.html#scaleV"},"npO5pbTUwvNSdDy5bnalB":{"uri":"/melonJS/docs/melonjs/Polygon.html#setShape"},"l3l3tvS-n1nXMRNCwjEZb":{"uri":"/melonJS/docs/melonjs/Polygon.html#setVertices"},"Yf18IJVVpaVp_WzqpiKK5":{"uri":"/melonJS/docs/melonjs/Polygon.html#shift"},"g_CANZyJqa2-qs6zKvjix":{"uri":"/melonJS/docs/melonjs/Polygon.html#to2d"},"bEXYKj36RJwLf3kl0wZXC":{"uri":"/melonJS/docs/melonjs/Polygon.html#toIso"},"PoNjfp5xv8J-AN_w_oRQh":{"uri":"/melonJS/docs/melonjs/Polygon.html#transform"},"xubVxau75mm44UyDYzuLW":{"uri":"/melonJS/docs/melonjs/Polygon.html#translate"},"qeCCJ0GQ0hIiZlIP8L7sc":{"uri":"/melonJS/docs/melonjs/Polygon.html#contains"},"Js8nnJiQqPc28mN99b_5C":{"uri":"/melonJS/docs/melonjs/Polygon.html#shift"},"r7DMK5_53TwSwimkGPgqf":{"uri":"/melonJS/docs/melonjs/Polygon.html#translate"},"HAIbe2iLTaRQl1pYb1lRk":{"uri":"/melonJS/docs/melonjs/QuadTree.html"},"Tea8_VA6BbHaLZCoFZ_Ey":{"uri":"/melonJS/docs/melonjs/QuadTree.html#clear"},"eRP0JTnZNnFTOdeyOUyP2":{"uri":"/melonJS/docs/melonjs/QuadTree.html#constructor"},"yiQ72UArcQLAzsRy2JgRm":{"uri":"/melonJS/docs/melonjs/QuadTree.html#hasChildren"},"Y3f8_RV48evvMM4QsDibP":{"uri":"/melonJS/docs/melonjs/QuadTree.html#insert"},"r_BCEdR7pIr4qboVAveiJ":{"uri":"/melonJS/docs/melonjs/QuadTree.html#insertContainer"},"TmqIVUxxQcLw44tfdwIyW":{"uri":"/melonJS/docs/melonjs/QuadTree.html#isPrunable"},"YGWXXq063k_E7li4HfyY3":{"uri":"/melonJS/docs/melonjs/QuadTree.html#remove"},"Cn-yUKE7o5deEE9P9YR5x":{"uri":"/melonJS/docs/melonjs/QuadTree.html#retrieve"},"4ySu4LaM7RN9upNER3KGs":{"uri":"/melonJS/docs/melonjs/Rect.html"},"y5vCRgLvEjysvThdLHZoG":{"uri":"/melonJS/docs/melonjs/Rect.html#bottom"},"1KD3z11-32lbl1a7LZjKk":{"uri":"/melonJS/docs/melonjs/Rect.html#centerX"},"LlhXQJK2ywxmUmbweQvZz":{"uri":"/melonJS/docs/melonjs/Rect.html#centerY"},"oAHYqjRfzbPBKqbAmW1lJ":{"uri":"/melonJS/docs/melonjs/Rect.html#height"},"qjFfnkx4jR3JuNdd_EaJt":{"uri":"/melonJS/docs/melonjs/Rect.html#left"},"WZmm3hiOofyvVQfhKLh9D":{"uri":"/melonJS/docs/melonjs/Rect.html#points"},"l3sSLscgc-0Il2thtn5VB":{"uri":"/melonJS/docs/melonjs/Rect.html#pos"},"xP7UheUlZaF0K09TmrLxS":{"uri":"/melonJS/docs/melonjs/Rect.html#right"},"kn58A34vfwiHg5OLCjvGI":{"uri":"/melonJS/docs/melonjs/Rect.html#top"},"Bcf2oBaD1inVcEp6h5Qkn":{"uri":"/melonJS/docs/melonjs/Rect.html#width"},"U-UjzbPIz7ENpX057plcQ":{"uri":"/melonJS/docs/melonjs/Rect.html#centerOn"},"4-oCUsuUU2Q4TvDjplJ-P":{"uri":"/melonJS/docs/melonjs/Rect.html#clone"},"wn1u9CstcF1sEEm4ZCV-V":{"uri":"/melonJS/docs/melonjs/Rect.html#constructor"},"AZc_G7lwro2ZSovRdH84R":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"Ie83mA0tnmN6fYaYJa009":{"uri":"/melonJS/docs/melonjs/Rect.html#copy"},"FTIE5srE--YWsi__Y_9BO":{"uri":"/melonJS/docs/melonjs/Rect.html#equals"},"h4c0zxh1esuD4b80rS37o":{"uri":"/melonJS/docs/melonjs/Rect.html#getBounds"},"dix8bwKUOAtvgxB571n0q":{"uri":"/melonJS/docs/melonjs/Rect.html#getIndices"},"rRDvdjMS_aBzQ9_0sPblY":{"uri":"/melonJS/docs/melonjs/Rect.html#isConvex"},"cRSpPFDlch2-HoQQr7OGR":{"uri":"/melonJS/docs/melonjs/Rect.html#isFinite"},"wVtzUkeIr35jGq9DwbULF":{"uri":"/melonJS/docs/melonjs/Rect.html#overlaps"},"tiet6x9lOEDuKoCcI-32T":{"uri":"/melonJS/docs/melonjs/Rect.html#recalc"},"rnqPPQ9u4jbQEkGFD52Py":{"uri":"/melonJS/docs/melonjs/Rect.html#resize"},"Uf_mowHOA9i0RQz_F3Div":{"uri":"/melonJS/docs/melonjs/Rect.html#rotate"},"RbXgwSahsFGytzbwUNsob":{"uri":"/melonJS/docs/melonjs/Rect.html#scale"},"VjOEVNwkLi4IaX8lXuCRT":{"uri":"/melonJS/docs/melonjs/Rect.html#scaleV"},"VLcyh2E__P-XgGf4sqcWh":{"uri":"/melonJS/docs/melonjs/Rect.html#setShape"},"2wOzj4qjoofRaM6KMTaPq":{"uri":"/melonJS/docs/melonjs/Rect.html#setVertices"},"G6iZZTLwn4-mmM16Hdcum":{"uri":"/melonJS/docs/melonjs/Rect.html#shift"},"ktUTO4_g6Jd-JjycROm2q":{"uri":"/melonJS/docs/melonjs/Rect.html#to2d"},"8JW63yBtOdNkifrufFu1X":{"uri":"/melonJS/docs/melonjs/Rect.html#toIso"},"ZAskVniCmF20ZIrP1NF_X":{"uri":"/melonJS/docs/melonjs/Rect.html#toPolygon"},"Wd_TVgtgRRV-XiE5ohgo_":{"uri":"/melonJS/docs/melonjs/Rect.html#transform"},"TMr29ZMASzaN_9HF_dbUq":{"uri":"/melonJS/docs/melonjs/Rect.html#translate"},"jpqKABYWwedR8piLmEOrV":{"uri":"/melonJS/docs/melonjs/Rect.html#union"},"nDNWcfvTrN2-qLFM9cm8D":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"0kiE-qnBH7o3iPkhXnyqD":{"uri":"/melonJS/docs/melonjs/Rect.html#contains"},"C5D0xuWxVbbNvACrz5UJI":{"uri":"/melonJS/docs/melonjs/Renderable.html"},"iS32JCjirZrPxb9eVFHNY":{"uri":"/melonJS/docs/melonjs/Renderable.html#alpha"},"gagYaA5H-DWvr44KIIKLQ":{"uri":"/melonJS/docs/melonjs/Renderable.html#alwaysUpdate"},"owIFGRGzVFbCXSlGge7NP":{"uri":"/melonJS/docs/melonjs/Renderable.html#ancestor"},"hpk5zJLLB7zwDNqbbf8ey":{"uri":"/melonJS/docs/melonjs/Renderable.html#anchorPoint"},"FXxLeZXnxiqg0L61oPu6k":{"uri":"/melonJS/docs/melonjs/Renderable.html#autoTransform"},"5gec4B9xth7tCWSTFs7IA":{"uri":"/melonJS/docs/melonjs/Renderable.html#blendMode"},"KOK8U9593q0RAoMW2Tvm7":{"uri":"/melonJS/docs/melonjs/Renderable.html#body"},"Btiy97fAd0WGCty4dIIG4":{"uri":"/melonJS/docs/melonjs/Renderable.html#bottom"},"7AeNL7n4Udihqko8jaW2n":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerX"},"PZ1MURbfe9QPSUJTNOPEm":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerY"},"BjDjDARdvYVYA0bMbxSCm":{"uri":"/melonJS/docs/melonjs/Renderable.html#currentTransform"},"7cRxufnKA_ZDcchEltYk-":{"uri":"/melonJS/docs/melonjs/Renderable.html#floating"},"Gakgvbm6IKC-aMaJg_F-C":{"uri":"/melonJS/docs/melonjs/Renderable.html#GUID"},"3LzROiGJ4gDQg3unpWF2h":{"uri":"/melonJS/docs/melonjs/Renderable.html#height"},"VKsmSwKB-0i3aJEttvtdR":{"uri":"/melonJS/docs/melonjs/Renderable.html#inViewport"},"6-AvLUSoOslDq6OuPAgWW":{"uri":"/melonJS/docs/melonjs/Renderable.html#isDirty"},"QQbKCsolP8yHxJMYOfj1P":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFlippedX"},"Tn2At8gfhcR2XwCXdOAGy":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFlippedY"},"FSQKnYfphugmAax8XM6Ag":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFloating"},"M4ViLTSNtT2JtLeVtM5Z7":{"uri":"/melonJS/docs/melonjs/Renderable.html#isKinematic"},"0nRfecqucyc4rzZACFfB6":{"uri":"/melonJS/docs/melonjs/Renderable.html#isPersistent"},"4w-nxsbC3EmwiVGMAlna4":{"uri":"/melonJS/docs/melonjs/Renderable.html#left"},"dyP0OBcsrYA7gCcYpaAJq":{"uri":"/melonJS/docs/melonjs/Renderable.html#mask"},"UK2q6RH6V5sij6CBtyQ8-":{"uri":"/melonJS/docs/melonjs/Renderable.html#name"},"IXjWS5CVCi_sQRpLmU2Hh":{"uri":"/melonJS/docs/melonjs/Renderable.html#onVisibilityChange"},"LQxPijOfFtQZFawbFgJan":{"uri":"/melonJS/docs/melonjs/Renderable.html#points"},"TTKbSP9Mt2dg7O-n39d38":{"uri":"/melonJS/docs/melonjs/Renderable.html#pos"},"O76ysvHjtYR8fEEMQQ2Qu":{"uri":"/melonJS/docs/melonjs/Renderable.html#right"},"VuZPQkymWPlNfJkj-ZWtE":{"uri":"/melonJS/docs/melonjs/Renderable.html#tint"},"PFoBqen-wj1xZGM22hAx9":{"uri":"/melonJS/docs/melonjs/Renderable.html#top"},"wXZz2NSUyJCDRSDMyZYFi":{"uri":"/melonJS/docs/melonjs/Renderable.html#updateWhenPaused"},"UTE-_L9rjpTjMQtJpvggz":{"uri":"/melonJS/docs/melonjs/Renderable.html#width"},"UvL5FsDsq8ekenGLLs_fu":{"uri":"/melonJS/docs/melonjs/Renderable.html#angleTo"},"2MQ-dit4hvjNYUGVIKXgL":{"uri":"/melonJS/docs/melonjs/Renderable.html#centerOn"},"T_kEAZioLoRj8fN9RQzQv":{"uri":"/melonJS/docs/melonjs/Renderable.html#clone"},"4vjYPG3EbX7x9qB8MlquE":{"uri":"/melonJS/docs/melonjs/Renderable.html#constructor"},"R2u6ZJw5wx310Wv3uTKna":{"uri":"/melonJS/docs/melonjs/Renderable.html#contains"},"kAkdP2iSr0Gc2NuMXz1PH":{"uri":"/melonJS/docs/melonjs/Renderable.html#copy"},"h5TDF72QQQ3YuRu_EuOE5":{"uri":"/melonJS/docs/melonjs/Renderable.html#distanceTo"},"QbaL0mBgiCcgo5WE6glj7":{"uri":"/melonJS/docs/melonjs/Renderable.html#equals"},"yeGDETj_BFSlfj0ImGz55":{"uri":"/melonJS/docs/melonjs/Renderable.html#flipX"},"4h92UjWeDXjjaPKzFdCzR":{"uri":"/melonJS/docs/melonjs/Renderable.html#flipY"},"1wRw6E-FAaBMdG_2A0bjj":{"uri":"/melonJS/docs/melonjs/Renderable.html#getAbsolutePosition"},"WK4FQxmBOsCE-Id9hy9VY":{"uri":"/melonJS/docs/melonjs/Renderable.html#getBounds"},"H-p-W8tYsKRtlJEF3IsHN":{"uri":"/melonJS/docs/melonjs/Renderable.html#getIndices"},"iX0QkJMGj_TK7ZrWh_2RK":{"uri":"/melonJS/docs/melonjs/Renderable.html#getOpacity"},"KraFSnaqBez93Z5FhwKM5":{"uri":"/melonJS/docs/melonjs/Renderable.html#isConvex"},"wqZeRoCL0-Gua9Bo88fsS":{"uri":"/melonJS/docs/melonjs/Renderable.html#isFinite"},"T-H1zNkai7ctCNYyZ-LzO":{"uri":"/melonJS/docs/melonjs/Renderable.html#lookAt"},"wqLbi1Dt5nZOZBB2eoHuS":{"uri":"/melonJS/docs/melonjs/Renderable.html#onCollision"},"Cv9sO4KgNdFQlunsvIO_v":{"uri":"/melonJS/docs/melonjs/Renderable.html#onDestroyEvent"},"6TwYFZgME5eo5WEaqf5Ie":{"uri":"/melonJS/docs/melonjs/Renderable.html#overlaps"},"y6dUOTznXPzUlg1azQI6U":{"uri":"/melonJS/docs/melonjs/Renderable.html#recalc"},"COJehGLCYZopgFr299Rve":{"uri":"/melonJS/docs/melonjs/Renderable.html#resize"},"fs-rF1oHLOkQiaIf5fE_o":{"uri":"/melonJS/docs/melonjs/Renderable.html#rotate"},"2SAAoUVjTAPbx6qXDChGE":{"uri":"/melonJS/docs/melonjs/Renderable.html#scale"},"kfY_ZmGcXzt2oBbxlTY2T":{"uri":"/melonJS/docs/melonjs/Renderable.html#scaleV"},"b4hY_chiNWm1b57EAHX5d":{"uri":"/melonJS/docs/melonjs/Renderable.html#setOpacity"},"3fpCXsbUqoygrJ_8wg05I":{"uri":"/melonJS/docs/melonjs/Renderable.html#setShape"},"VyrnyJfyUhCmw5iOtAaih":{"uri":"/melonJS/docs/melonjs/Renderable.html#setVertices"},"adSam8qRvKfQx-wYVyz2N":{"uri":"/melonJS/docs/melonjs/Renderable.html#shift"},"HpoFaDsXycWIOaVuorJce":{"uri":"/melonJS/docs/melonjs/Renderable.html#to2d"},"sPqox32S6BkCzQKS7bZiv":{"uri":"/melonJS/docs/melonjs/Renderable.html#toIso"},"f83RMmMiTOuoiyUKhBhcC":{"uri":"/melonJS/docs/melonjs/Renderable.html#toPolygon"},"Ex5vHmNjGROXjl37e0PD-":{"uri":"/melonJS/docs/melonjs/Renderable.html#transform"},"DIePQIAg488FdEVMBtLid":{"uri":"/melonJS/docs/melonjs/Renderable.html#translate"},"zYkTZHDP9cOydfiO4pFvy":{"uri":"/melonJS/docs/melonjs/Renderable.html#union"},"b7vrQqHQoFHkZqnzbN_ql":{"uri":"/melonJS/docs/melonjs/Renderable.html#draw"},"l9Y-dnJbvIRTodyTmYqie":{"uri":"/melonJS/docs/melonjs/Renderable.html#postDraw"},"JphypSkdMsM9hNDSwqPed":{"uri":"/melonJS/docs/melonjs/Renderable.html#preDraw"},"S_kEoBStfRNU6yNA8iKZW":{"uri":"/melonJS/docs/melonjs/Renderable.html#update"},"doWLNIDH5FMIHB-MJBoA2":{"uri":"/melonJS/docs/melonjs/Renderable.html#onAnchorUpdate"},"gStOmM9A6Qk4WeGcpjxFE":{"uri":"/melonJS/docs/melonjs/Renderer.html"},"YMbaX_oNjlHgyvqUFAovB":{"uri":"/melonJS/docs/melonjs/Renderer/Texture.html"},"I2Jf_GBu2gt6XXTou5QKn":{"uri":"/melonJS/docs/melonjs/Renderer/Texture.html#constructor"},"EcoppvfPm92fTWewDDs3t":{"uri":"/melonJS/docs/melonjs/Renderer.html#isContextValid"},"1Szs21p3abJrI47ndvrFf":{"uri":"/melonJS/docs/melonjs/Renderer.html#path2D"},"ChQCYRLdp7N8wUB7Aej6e":{"uri":"/melonJS/docs/melonjs/Renderer.html#settings"},"5FcWKrMzkUkRBUIbqOJgb":{"uri":"/melonJS/docs/melonjs/Renderer.html#clear"},"1YoY-N9HCsTqx1L8MMGg3":{"uri":"/melonJS/docs/melonjs/Renderer.html#clearMask"},"she9BdU4eY0q82w-P5diJ":{"uri":"/melonJS/docs/melonjs/Renderer.html#clearTint"},"vTeUT8clHxmgho60FDg21":{"uri":"/melonJS/docs/melonjs/Renderer.html#constructor"},"ZN7Ds06MiMC9qIny7_73A":{"uri":"/melonJS/docs/melonjs/Renderer.html#fill"},"dpqOmRf0svOUreh1Xw_Vx":{"uri":"/melonJS/docs/melonjs/Renderer.html#getBlendMode"},"vGYxyxACPAcBDS0IuuHbi":{"uri":"/melonJS/docs/melonjs/Renderer.html#getCanvas"},"0zzaSUG_IuABBsSFLrGLH":{"uri":"/melonJS/docs/melonjs/Renderer.html#getColor"},"awpKLMpdD5DoaSX7kUCAF":{"uri":"/melonJS/docs/melonjs/Renderer.html#getContext2d"},"Dh58xqTQF-P7tgqyeJelD":{"uri":"/melonJS/docs/melonjs/Renderer.html#getHeight"},"9YxOtkZQwqMOFthylgDsF":{"uri":"/melonJS/docs/melonjs/Renderer.html#getScreenCanvas"},"_FoRG8iBNtqBXR0OToyof":{"uri":"/melonJS/docs/melonjs/Renderer.html#getScreenContext"},"IbzfzOsYB2nCL-lKN4JJg":{"uri":"/melonJS/docs/melonjs/Renderer.html#getWidth"},"2j4Q2FXWZ6lw2mcXAJqZH":{"uri":"/melonJS/docs/melonjs/Renderer.html#globalAlpha"},"hDNNmuHf9t2cTCwlHAj51":{"uri":"/melonJS/docs/melonjs/Renderer.html#overlaps"},"WF61S7mqntLcJv0fQHIMG":{"uri":"/melonJS/docs/melonjs/Renderer.html#reset"},"wDNHoJfBioh_d8xjDyY8A":{"uri":"/melonJS/docs/melonjs/Renderer.html#resize"},"2rpGjo6uqixykFIssjQeJ":{"uri":"/melonJS/docs/melonjs/Renderer.html#setAntiAlias"},"1p0odOhTil8CH9qApzW3b":{"uri":"/melonJS/docs/melonjs/Renderer.html#setMask"},"UmJdg_9pOP9CYCsaCwj8B":{"uri":"/melonJS/docs/melonjs/Renderer.html#setProjection"},"BFPbam6WZyHN_UZpzkjH-":{"uri":"/melonJS/docs/melonjs/Renderer.html#setTint"},"-uXmhiueHY1x1gjF-I69R":{"uri":"/melonJS/docs/melonjs/Renderer.html#stroke"},"TPkjmtyFgL5NKZd4MFl1Z":{"uri":"/melonJS/docs/melonjs/Renderer.html#tint"},"0aJooFfqnH-umkR0PIFXg":{"uri":"/melonJS/docs/melonjs/RoundRect.html"},"qawI1gD04Bpl5x5EYg6Uz":{"uri":"/melonJS/docs/melonjs/RoundRect.html#bottom"},"8pbeeEJ2Xuv47iutOMfMP":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerX"},"45hpA1iW4gpQnrv_JrEqa":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerY"},"0MtIFP0Eq3zIi1MsO6E8I":{"uri":"/melonJS/docs/melonjs/RoundRect.html#height"},"CCuo7d0wApgj_ut8efVOV":{"uri":"/melonJS/docs/melonjs/RoundRect.html#left"},"sQrj-DFXixP6LwE3l4ePW":{"uri":"/melonJS/docs/melonjs/RoundRect.html#points"},"ZBQHnmOmL3RNJizzHPfvs":{"uri":"/melonJS/docs/melonjs/RoundRect.html#pos"},"1Vin-oj_RgpdFttA4imxt":{"uri":"/melonJS/docs/melonjs/RoundRect.html#radius"},"0X3CvVL7Rrj6PgA-DtY3v":{"uri":"/melonJS/docs/melonjs/RoundRect.html#right"},"1XZk_mz00yOzdVAaZsmgx":{"uri":"/melonJS/docs/melonjs/RoundRect.html#top"},"GAyLQees-mEhzGFjxcf4U":{"uri":"/melonJS/docs/melonjs/RoundRect.html#width"},"IDLUQH5nx9lldjLq0Hn0x":{"uri":"/melonJS/docs/melonjs/RoundRect.html#centerOn"},"JmAGyV662X20i0LeFMfBI":{"uri":"/melonJS/docs/melonjs/RoundRect.html#clone"},"7TYH37SIW5d3uc7-brmbT":{"uri":"/melonJS/docs/melonjs/RoundRect.html#constructor"},"tLXQdNFjPCgrb5ZZGIird":{"uri":"/melonJS/docs/melonjs/RoundRect.html#contains"},"r4Eg2r0vZBGh0QKU4_KFW":{"uri":"/melonJS/docs/melonjs/RoundRect.html#copy"},"N4XrswFppH7y3NV-DwsxZ":{"uri":"/melonJS/docs/melonjs/RoundRect.html#equals"},"8t0GbhL_Qe1tWsvDSFCZ0":{"uri":"/melonJS/docs/melonjs/RoundRect.html#getBounds"},"_VxB67VslqEGOkdUfPNQ8":{"uri":"/melonJS/docs/melonjs/RoundRect.html#getIndices"},"z4arJ94EiaTYG99hDjfuj":{"uri":"/melonJS/docs/melonjs/RoundRect.html#isConvex"},"71m3EMHXHV3T9whGGnwUa":{"uri":"/melonJS/docs/melonjs/RoundRect.html#isFinite"},"O5jjWlHRIG922NcdmdKcZ":{"uri":"/melonJS/docs/melonjs/RoundRect.html#overlaps"},"gFFvRnMlzts3WT7R_8B3n":{"uri":"/melonJS/docs/melonjs/RoundRect.html#recalc"},"k2E2AbHl6d0m3WvVVG-un":{"uri":"/melonJS/docs/melonjs/RoundRect.html#resize"},"CtqDw-GRP6dHU2FCeqyAs":{"uri":"/melonJS/docs/melonjs/RoundRect.html#rotate"},"msoXbG5kBGOdTcCKf5-mp":{"uri":"/melonJS/docs/melonjs/RoundRect.html#scale"},"mhWOThPcQDc2E_aC5vbOy":{"uri":"/melonJS/docs/melonjs/RoundRect.html#scaleV"},"sHwNRda5VtB46FULUMx4O":{"uri":"/melonJS/docs/melonjs/RoundRect.html#setShape"},"6i9sUNQKulzJxdzt2axHG":{"uri":"/melonJS/docs/melonjs/RoundRect.html#setVertices"},"KH4PaFNLDCViP5MYQPsnL":{"uri":"/melonJS/docs/melonjs/RoundRect.html#shift"},"ig8yKK2erfugwZodq9S6-":{"uri":"/melonJS/docs/melonjs/RoundRect.html#to2d"},"4SQAzrLhxr50MbLZhP6jq":{"uri":"/melonJS/docs/melonjs/RoundRect.html#toIso"},"S9AZxJM51v0KWAsHz4uov":{"uri":"/melonJS/docs/melonjs/RoundRect.html#toPolygon"},"CVKJFM6m2NCIXzt52DIqE":{"uri":"/melonJS/docs/melonjs/RoundRect.html#transform"},"wL0K_d3xk0qy4ouBwtl8e":{"uri":"/melonJS/docs/melonjs/RoundRect.html#translate"},"QkpCrsNXG3I7UoGXxYjoD":{"uri":"/melonJS/docs/melonjs/RoundRect.html#union"},"1ogtPrJxy6bIXO1xzK6-8":{"uri":"/melonJS/docs/melonjs/RoundRect.html#contains"},"eMZntIVc6jsLDVraRuNl4":{"uri":"/melonJS/docs/melonjs/Sprite.html"},"uholXa-TZyXSIxIxIJAu1":{"uri":"/melonJS/docs/melonjs/Sprite.html#alpha"},"P2cZse5EdpVwds4br5Q20":{"uri":"/melonJS/docs/melonjs/Sprite.html#alwaysUpdate"},"VBetBZAac7pRlNxr470dS":{"uri":"/melonJS/docs/melonjs/Sprite.html#ancestor"},"vTV-LDMhvsM1TENBVNyF7":{"uri":"/melonJS/docs/melonjs/Sprite.html#anchorPoint"},"EvEW5up9EjdL1LOXc4tiC":{"uri":"/melonJS/docs/melonjs/Sprite.html#animationpause"},"z9TQp89lcp23n-Tpj4buI":{"uri":"/melonJS/docs/melonjs/Sprite.html#animationspeed"},"-8ApvfD-EI56FdByhkofU":{"uri":"/melonJS/docs/melonjs/Sprite.html#autoTransform"},"rr9FqV-Qrh3OWLU-68kkX":{"uri":"/melonJS/docs/melonjs/Sprite.html#blendMode"},"dZE6J7e7FI7uF38-aMFsB":{"uri":"/melonJS/docs/melonjs/Sprite.html#body"},"mQQSbI277Sxw1Wkdeg4u2":{"uri":"/melonJS/docs/melonjs/Sprite.html#bottom"},"v42UJYHaWXq-HxAf8JXEF":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerX"},"ewBqY5YfQ3aSuu2bq0qSv":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerY"},"jrvf1CHTZcZPYwhaaPT8m":{"uri":"/melonJS/docs/melonjs/Sprite.html#currentTransform"},"0JRnq1OBp5ZV4yBqQO8Rn":{"uri":"/melonJS/docs/melonjs/Sprite.html#floating"},"9BOX2IZ-4oWd2BADFOunB":{"uri":"/melonJS/docs/melonjs/Sprite.html#GUID"},"dTkwfMckY6jwou1_uBmJM":{"uri":"/melonJS/docs/melonjs/Sprite.html#height"},"QiUMIZZ1LCFkNVvjV8mM_":{"uri":"/melonJS/docs/melonjs/Sprite.html#inViewport"},"oHObkDiAUaJzEnlT_22cF":{"uri":"/melonJS/docs/melonjs/Sprite.html#isDirty"},"kJEjXv8NnS7HJEKVFJSSs":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlippedX"},"_2--MRvVEuNxtyoOhgoxj":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlippedY"},"wGsrn3bTqVD4lil2vyGY5":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFloating"},"B8Uw9GqItY-bf44XwL28W":{"uri":"/melonJS/docs/melonjs/Sprite.html#isKinematic"},"nHLZI7ogqkSwpUGYQBLh5":{"uri":"/melonJS/docs/melonjs/Sprite.html#isPersistent"},"KUUfvl5nZevTINHrN_D4t":{"uri":"/melonJS/docs/melonjs/Sprite.html#left"},"-G7tes2kSauuEP77GgsdU":{"uri":"/melonJS/docs/melonjs/Sprite.html#mask"},"51LIasJz144rzFIQRdOXo":{"uri":"/melonJS/docs/melonjs/Sprite.html#name"},"2HlxpakA2rKcggycfrpbb":{"uri":"/melonJS/docs/melonjs/Sprite.html#offset"},"vQOsc4JoFofPEA2OFICX8":{"uri":"/melonJS/docs/melonjs/Sprite.html#onVisibilityChange"},"hm0eTpmXxNZv_hMHwAHmB":{"uri":"/melonJS/docs/melonjs/Sprite.html#points"},"ieNlPBusSqy2SIMup5eMp":{"uri":"/melonJS/docs/melonjs/Sprite.html#pos"},"azdiLc60Jgh-e0C-yd_xR":{"uri":"/melonJS/docs/melonjs/Sprite.html#right"},"O4VxxfVs-win4LkKELO40":{"uri":"/melonJS/docs/melonjs/Sprite.html#source"},"z7uaYq36V3bjdNi7eSFG1":{"uri":"/melonJS/docs/melonjs/Sprite.html#tint"},"oetQ_o06nSOablalDVgch":{"uri":"/melonJS/docs/melonjs/Sprite.html#top"},"F7aqrzIGVvUgBkBQwjMUI":{"uri":"/melonJS/docs/melonjs/Sprite.html#updateWhenPaused"},"Aw3nBtaBcUW2tg0rYFiTw":{"uri":"/melonJS/docs/melonjs/Sprite.html#width"},"GLdB9xyY4zdvHy1H0oMoc":{"uri":"/melonJS/docs/melonjs/Sprite.html#addAnimation"},"jKquL75hnc4te6LNVkQ7f":{"uri":"/melonJS/docs/melonjs/Sprite.html#angleTo"},"Ap0QKUBwekm0TS7w2W0Mt":{"uri":"/melonJS/docs/melonjs/Sprite.html#centerOn"},"R8f0Yh8xhIv69DTToptT5":{"uri":"/melonJS/docs/melonjs/Sprite.html#clone"},"w9486s7oOqsxG0o3iRUXJ":{"uri":"/melonJS/docs/melonjs/Sprite.html#constructor"},"KiU799Fe6cxBOqLXr_30j":{"uri":"/melonJS/docs/melonjs/Sprite.html#contains"},"0EpcDjuIhnI6x6kctgh9V":{"uri":"/melonJS/docs/melonjs/Sprite.html#copy"},"aY6WnmKLkNI6bNOq3XQUE":{"uri":"/melonJS/docs/melonjs/Sprite.html#distanceTo"},"28xI2GvmYf4EwIZAU0JoG":{"uri":"/melonJS/docs/melonjs/Sprite.html#equals"},"xOQKoVbiKokYFVaA57dOL":{"uri":"/melonJS/docs/melonjs/Sprite.html#flicker"},"H6G1AhGuiruV5OCmkLLjD":{"uri":"/melonJS/docs/melonjs/Sprite.html#flipX"},"pz7J4F3r55W3T8fOYTjYu":{"uri":"/melonJS/docs/melonjs/Sprite.html#flipY"},"kjdtJ-xRSsKONXfaHfrPG":{"uri":"/melonJS/docs/melonjs/Sprite.html#getAbsolutePosition"},"whd6nYQGa11rli07ivv6c":{"uri":"/melonJS/docs/melonjs/Sprite.html#getBounds"},"hDifMW3iPxeRXk0Fxcnro":{"uri":"/melonJS/docs/melonjs/Sprite.html#getCurrentAnimationFrame"},"ABHxWjdwbbIykLCsDReCf":{"uri":"/melonJS/docs/melonjs/Sprite.html#getIndices"},"8jb06sKVwR6HgfO-Aj7tX":{"uri":"/melonJS/docs/melonjs/Sprite.html#getOpacity"},"ajFTeIaqzUzzWHuqmOqtf":{"uri":"/melonJS/docs/melonjs/Sprite.html#isConvex"},"IefEPquVZ68bTk21St1sg":{"uri":"/melonJS/docs/melonjs/Sprite.html#isCurrentAnimation"},"vHbU0_u5buyfPMbEc4Jr2":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFinite"},"EeFhSdqmFjoCM_zEDeJzW":{"uri":"/melonJS/docs/melonjs/Sprite.html#isFlickering"},"hLcH7xTZgApFW1FepMtFT":{"uri":"/melonJS/docs/melonjs/Sprite.html#lookAt"},"QVDlGwvBWtb3DzsnEkrYd":{"uri":"/melonJS/docs/melonjs/Sprite.html#onCollision"},"b8cBqExnNaU5SmxzXTbfB":{"uri":"/melonJS/docs/melonjs/Sprite.html#onDestroyEvent"},"9SCWJ5Q5EO6Cav8B9d9Nf":{"uri":"/melonJS/docs/melonjs/Sprite.html#overlaps"},"m8KSyENimbexsRBoZr5e2":{"uri":"/melonJS/docs/melonjs/Sprite.html#recalc"},"u8Xy55QPfW_06JW83u17T":{"uri":"/melonJS/docs/melonjs/Sprite.html#resize"},"_8_K61sM4ZqdeqPS4FfAz":{"uri":"/melonJS/docs/melonjs/Sprite.html#reverseAnimation"},"GWFbKHHDHhLZYSPSWhFcX":{"uri":"/melonJS/docs/melonjs/Sprite.html#rotate"},"ltL3Du7OWqXXPWowUaVCY":{"uri":"/melonJS/docs/melonjs/Sprite.html#scale"},"g2R6ShvNfeFH-EWoZPTk1":{"uri":"/melonJS/docs/melonjs/Sprite.html#scaleV"},"A3tSOjbBf3F4M04I-G6pr":{"uri":"/melonJS/docs/melonjs/Sprite.html#setAnimationFrame"},"M429_mWyPrfMxPZUuJqlN":{"uri":"/melonJS/docs/melonjs/Sprite.html#setCurrentAnimation"},"FxyW-IeQrR7Yz1YCY_zh3":{"uri":"/melonJS/docs/melonjs/Sprite.html#setOpacity"},"CWLDmOqynjrsiKKCAsNnR":{"uri":"/melonJS/docs/melonjs/Sprite.html#setRegion"},"0_5oLEB5E1rE2puIaZgsQ":{"uri":"/melonJS/docs/melonjs/Sprite.html#setShape"},"Xy-6Jo6CCb1tv5sGlsgRg":{"uri":"/melonJS/docs/melonjs/Sprite.html#setVertices"},"iactF6F_jcVd8wkw6rn6J":{"uri":"/melonJS/docs/melonjs/Sprite.html#shift"},"bT0w8kjyBP64QWWDg0fv1":{"uri":"/melonJS/docs/melonjs/Sprite.html#to2d"},"YM5XuRLLLlMUkIyQzf9Pc":{"uri":"/melonJS/docs/melonjs/Sprite.html#toIso"},"xMCzehx05nyteAP3I9_g7":{"uri":"/melonJS/docs/melonjs/Sprite.html#toPolygon"},"ITDDVBV5qAyRNLE6E8vON":{"uri":"/melonJS/docs/melonjs/Sprite.html#transform"},"tHmuzxH1w-v9dgAJ6XXKr":{"uri":"/melonJS/docs/melonjs/Sprite.html#translate"},"LLUmIUjU5CdMtz4VwS_Oy":{"uri":"/melonJS/docs/melonjs/Sprite.html#union"},"dVsFWQHDP9CiAqLhgDwAQ":{"uri":"/melonJS/docs/melonjs/Sprite.html#draw"},"NNPIkz8eVlDeLiKnfjDBo":{"uri":"/melonJS/docs/melonjs/Sprite.html#postDraw"},"05CYSvSJ6tjHIqyWg_Wbu":{"uri":"/melonJS/docs/melonjs/Sprite.html#preDraw"},"6RkMOWqQO9IuqcbYIy1XB":{"uri":"/melonJS/docs/melonjs/Sprite.html#update"},"uVNCl-xVjnqX-TGdVs0Q1":{"uri":"/melonJS/docs/melonjs/Sprite.html#onAnchorUpdate"},"_MbCDc0UTa6kI0g7wT9Ff":{"uri":"/melonJS/docs/melonjs/Stage.html"},"othGWfgN0GuT-R6Kk_kjK":{"uri":"/melonJS/docs/melonjs/Stage.html#ambientLight"},"TRh3picKfZ7L0FTCj9Joi":{"uri":"/melonJS/docs/melonjs/Stage.html#cameras"},"tYXA3shOlxn-FxFokJKt7":{"uri":"/melonJS/docs/melonjs/Stage.html#lights"},"2LIkoBM4wUtRZrml2mljo":{"uri":"/melonJS/docs/melonjs/Stage.html#settings"},"QiGFietra6rm3cj13reLu":{"uri":"/melonJS/docs/melonjs/Stage.html#constructor"},"-SFXMLygZghHm9A0ZoAnc":{"uri":"/melonJS/docs/melonjs/Stage.html#onDestroyEvent"},"0wBr-iAJMPD8QZG3WTjZF":{"uri":"/melonJS/docs/melonjs/Stage.html#onResetEvent"},"hdiwmzUV1ZOM9Tu0F4I40":{"uri":"/melonJS/docs/melonjs/Text.html"},"G4F2o8vClqHRRT_SbZDFB":{"uri":"/melonJS/docs/melonjs/Text.html#alpha"},"0ebD5ndFmnrcfOIkSeS1Y":{"uri":"/melonJS/docs/melonjs/Text.html#alwaysUpdate"},"3KhxGPIYYY-n3WZEzZwQ0":{"uri":"/melonJS/docs/melonjs/Text.html#ancestor"},"-UDSFwnitvd13NLEziT6U":{"uri":"/melonJS/docs/melonjs/Text.html#anchorPoint"},"0GZnzmN10DOyopeWh_iOj":{"uri":"/melonJS/docs/melonjs/Text.html#autoTransform"},"U8j0Vg5wP55Hu3Wf40btl":{"uri":"/melonJS/docs/melonjs/Text.html#blendMode"},"sEozxDYT8vI19h-XR9zlt":{"uri":"/melonJS/docs/melonjs/Text.html#body"},"Y_CPC9E0GqUluP6kOKOLr":{"uri":"/melonJS/docs/melonjs/Text.html#bottom"},"Vv1WEpcDWookL0fcYiLy4":{"uri":"/melonJS/docs/melonjs/Text.html#centerX"},"XPnueFVOQxn5NNk2qay8R":{"uri":"/melonJS/docs/melonjs/Text.html#centerY"},"7oFMDKIWnNVakSBnjwuDS":{"uri":"/melonJS/docs/melonjs/Text.html#currentTransform"},"-QYAfbq01BjvcHjbPmy9S":{"uri":"/melonJS/docs/melonjs/Text.html#fillStyle"},"wIBmd5ZO93zK_rXp3HH3Z":{"uri":"/melonJS/docs/melonjs/Text.html#floating"},"bcEkl0gKYOVxZBVu0lZaz":{"uri":"/melonJS/docs/melonjs/Text.html#fontSize"},"l8w2GO7BpUtR3tooLfE4Q":{"uri":"/melonJS/docs/melonjs/Text.html#GUID"},"bjNEXu4OmdLcxXbP_e9l1":{"uri":"/melonJS/docs/melonjs/Text.html#height"},"X48UMGCadwdcGBmFthNhB":{"uri":"/melonJS/docs/melonjs/Text.html#inViewport"},"zOEjbd8mpNhiWjBSnc6v_":{"uri":"/melonJS/docs/melonjs/Text.html#isDirty"},"LCG-GStnV1basrUezhanO":{"uri":"/melonJS/docs/melonjs/Text.html#isFlippedX"},"csRXEwTgx8E1eh1PwtfIq":{"uri":"/melonJS/docs/melonjs/Text.html#isFlippedY"},"xWaI0Q534yNAvN_L2hsp-":{"uri":"/melonJS/docs/melonjs/Text.html#isFloating"},"1AAmuVQtFqqbVAbUxHDcc":{"uri":"/melonJS/docs/melonjs/Text.html#isKinematic"},"SZjI91yUqPg8Tl6r1hQZ8":{"uri":"/melonJS/docs/melonjs/Text.html#isPersistent"},"iQaIibkjcWFp0wwyEyq-y":{"uri":"/melonJS/docs/melonjs/Text.html#left"},"Wg4nNlaTPlwbKfqAt4ZQl":{"uri":"/melonJS/docs/melonjs/Text.html#lineHeight"},"Jg-I3ZUnVlXZfet00oqSm":{"uri":"/melonJS/docs/melonjs/Text.html#lineWidth"},"7-IpoBaT8HS6xFt6gC99o":{"uri":"/melonJS/docs/melonjs/Text.html#mask"},"jn9IHUMYuj6Z0zQyZTyhx":{"uri":"/melonJS/docs/melonjs/Text.html#name"},"nszf-D9zhvZI03xbEnKAW":{"uri":"/melonJS/docs/melonjs/Text.html#offScreenCanvas"},"4598sDnlPuTbE5JPfH6vj":{"uri":"/melonJS/docs/melonjs/Text.html#onVisibilityChange"},"NwQki-bKf-05DkHlr40Ph":{"uri":"/melonJS/docs/melonjs/Text.html#points"},"16vu8DbLSkYxf9HhxahvO":{"uri":"/melonJS/docs/melonjs/Text.html#pos"},"9gz84eutWsTc4IvtGnMgj":{"uri":"/melonJS/docs/melonjs/Text.html#right"},"ybzfXZyv8vVG_bfyqzhtx":{"uri":"/melonJS/docs/melonjs/Text.html#textAlign"},"8WnJwjudKJr3yqEv64TDW":{"uri":"/melonJS/docs/melonjs/Text.html#textBaseline"},"msEcYsNIY_WqdGqAjxypd":{"uri":"/melonJS/docs/melonjs/Text.html#tint"},"vlDdqxwugHfY0Wsln6h86":{"uri":"/melonJS/docs/melonjs/Text.html#top"},"v9A8UI_AZxcSCDCqcPMom":{"uri":"/melonJS/docs/melonjs/Text.html#updateWhenPaused"},"kkJDDwX1bde3lQpy3rZDR":{"uri":"/melonJS/docs/melonjs/Text.html#width"},"iwaSvtoNBXxUVpNFaw0iR":{"uri":"/melonJS/docs/melonjs/Text.html#wordWrapWidth"},"ky_DcCKUXBw2imsn9cK1u":{"uri":"/melonJS/docs/melonjs/Text.html#_text"},"937DCGVEwsfBdKTvn4jRs":{"uri":"/melonJS/docs/melonjs/Text.html#angleTo"},"SBzO7ZNCckmrnqMsUmWJh":{"uri":"/melonJS/docs/melonjs/Text.html#bold"},"rq5FPkfBFTxC8nZXybmjl":{"uri":"/melonJS/docs/melonjs/Text.html#centerOn"},"chiQOEBKbYKpeptoryKfo":{"uri":"/melonJS/docs/melonjs/Text.html#clone"},"7ydN9ZYD8Ayy54zx6iCGG":{"uri":"/melonJS/docs/melonjs/Text.html#constructor"},"jE2749Nf_z0WnK3F1vpXc":{"uri":"/melonJS/docs/melonjs/Text.html#contains"},"0iIT7Vta2yG7lF6UXLhyt":{"uri":"/melonJS/docs/melonjs/Text.html#copy"},"n8rkbLAQd2M7fOX-eMvN6":{"uri":"/melonJS/docs/melonjs/Text.html#distanceTo"},"K1_Vh2TtoqvACsyc3qPxc":{"uri":"/melonJS/docs/melonjs/Text.html#draw"},"XGL_1AhZGdJ61vb6B5dhn":{"uri":"/melonJS/docs/melonjs/Text.html#drawStroke"},"0DpTpyo3dM-q5CUHLM1or":{"uri":"/melonJS/docs/melonjs/Text.html#equals"},"bGOIyzGF0F81AWU7nf5Rf":{"uri":"/melonJS/docs/melonjs/Text.html#flipX"},"fs26JIJOH4qpSLxfzoTHJ":{"uri":"/melonJS/docs/melonjs/Text.html#flipY"},"UV9nqjFIn568xNSi3MetN":{"uri":"/melonJS/docs/melonjs/Text.html#getAbsolutePosition"},"nvzqMjE_hzsd4losjJJgC":{"uri":"/melonJS/docs/melonjs/Text.html#getBounds"},"UUVCRdlKMxnOQo3uy8qqm":{"uri":"/melonJS/docs/melonjs/Text.html#getIndices"},"Nji0WrtUiMXYrtzgF3afl":{"uri":"/melonJS/docs/melonjs/Text.html#getOpacity"},"Bu1UG1hbwa4tj8jcONBRm":{"uri":"/melonJS/docs/melonjs/Text.html#isConvex"},"qQGU7BQzmEJWxklTXv5MX":{"uri":"/melonJS/docs/melonjs/Text.html#isFinite"},"S1DPDwaLFnR0z5eS_qnQ_":{"uri":"/melonJS/docs/melonjs/Text.html#italic"},"tH6XWOoOWDdtHC2OOIunK":{"uri":"/melonJS/docs/melonjs/Text.html#lookAt"},"Jib-Cb5OmLSIJT0s3un18":{"uri":"/melonJS/docs/melonjs/Text.html#measureText"},"fvtYQGJO7tIphs-LBWEbn":{"uri":"/melonJS/docs/melonjs/Text.html#onCollision"},"SkXiFzTbCEZ6qCC-61O5v":{"uri":"/melonJS/docs/melonjs/Text.html#onDestroyEvent"},"aXMcGwrR_1dWgO1lvhZQW":{"uri":"/melonJS/docs/melonjs/Text.html#overlaps"},"Z_JSUM6ljAAeXatM7yrLc":{"uri":"/melonJS/docs/melonjs/Text.html#recalc"},"g3XBJ20C4Lad2RR7X5NQk":{"uri":"/melonJS/docs/melonjs/Text.html#resize"},"apMU_yCfSEreDox83z5JO":{"uri":"/melonJS/docs/melonjs/Text.html#rotate"},"si24J2jse2KZrh-X7B-Bo":{"uri":"/melonJS/docs/melonjs/Text.html#scale"},"-2_kp_kVybEUyGHBoD_Yf":{"uri":"/melonJS/docs/melonjs/Text.html#scaleV"},"Jb43K_OVq4d1WUV383C3q":{"uri":"/melonJS/docs/melonjs/Text.html#setFont"},"zTeWvYTBbkKj_-Mw5pfab":{"uri":"/melonJS/docs/melonjs/Text.html#setOpacity"},"1Ah17N13teuCq0QqoieN6":{"uri":"/melonJS/docs/melonjs/Text.html#setShape"},"IJVVb2kCFgdbVzl1jx3XD":{"uri":"/melonJS/docs/melonjs/Text.html#setText"},"DCbw-aFM2yR1P6KpRVaul":{"uri":"/melonJS/docs/melonjs/Text.html#setVertices"},"uSUpkip6kTA0HdsjvFgkq":{"uri":"/melonJS/docs/melonjs/Text.html#shift"},"P9ZMAFZ9rGXaivhxpSIMd":{"uri":"/melonJS/docs/melonjs/Text.html#to2d"},"zKoTQYurP68uQERm0XJZ_":{"uri":"/melonJS/docs/melonjs/Text.html#toIso"},"LTsDI9VqEgLHLMsT3Ju0M":{"uri":"/melonJS/docs/melonjs/Text.html#toPolygon"},"KiPsCnksXHrzqF8i2C7Ml":{"uri":"/melonJS/docs/melonjs/Text.html#transform"},"uNH47bulrgh_pNqFi1dvq":{"uri":"/melonJS/docs/melonjs/Text.html#translate"},"sSlvzTeISf9m4BH41P6Np":{"uri":"/melonJS/docs/melonjs/Text.html#union"},"1eJeFu9kfREYaaxmlEYXl":{"uri":"/melonJS/docs/melonjs/Text.html#postDraw"},"CzFJGWIzQQRkeBdVFk1WL":{"uri":"/melonJS/docs/melonjs/Text.html#preDraw"},"lL9xB2UtckV8ue70uOjlp":{"uri":"/melonJS/docs/melonjs/Text.html#update"},"HXW7aQq0vS3e2bQrJ6Mst":{"uri":"/melonJS/docs/melonjs/Text.html#onAnchorUpdate"},"RDkFrdx9MOEElPMqPCykX":{"uri":"/melonJS/docs/melonjs/TextMetrics.html"},"BUZHiB9jtOD2b5Skv_BEI":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#ancestor"},"3yeCtG0QQKibimaQLBryF":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#bottom"},"9evfiwKVA48wL2DPjOGXy":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#center"},"HqABMxcc7LYV-ROamWSoW":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#centerX"},"Qw4dZgpM_P1Mi09fNu1vH":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#centerY"},"ccEqeeXWH24Sg715LMeCW":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#left"},"HY06rfSm72RXg1TXxW6iP":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#right"},"cppx3g1KjBGkICJU9x2pU":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#top"},"wj4ws87At4HGAvfz_RghG":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#width"},"qMJe_M_ypbBU_0wvAxpMp":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#x"},"GE6gbChXwquB6Z4K6of3H":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#y"},"Ihpt4DhVZ2ZSvOYWmThEy":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#add"},"SVIvZXOW-OMkwjHMcvI9G":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addBounds"},"HnS9LH2N1Ua_z_qs8qbtB":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addFrame"},"avBlKfqWWtkyTjHU-fSMh":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#addPoint"},"xKk8r-njR9CY9t-QeHDK8":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#clear"},"N_lcxtn0lYMPrjHZc9E-f":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#clone"},"sye-jPibCD17F0HJ82uYI":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#constructor"},"Lw_GT9SMisNQuCMhrq66H":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#contains"},"xrTJFGQUQn0qaLzGjo3ot":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#isFinite"},"TKDVO1ulQynwL4bVW_QWy":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#lineHeight"},"UzGLE-0rCnLrO1hm84tmi":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#lineWidth"},"nvUTzPSUc1oZymRA94WME":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#measureText"},"9KXqu4ZadA2HtVE62z3tj":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#overlaps"},"iE0UBEGh0w0031dLSOQGD":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#setMinMax"},"9dnWE_lcq9AHu_79Gd6l7":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#shift"},"GOIQD5CZL98DUkNS1ZNMG":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#toPolygon"},"huBNB0j6rF23EVTcFooTO":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#translate"},"qPiCtKpIPXM-5Vpj8Ktc4":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#update"},"ZAaBFTaJNsOxjJPYh1j3R":{"uri":"/melonJS/docs/melonjs/TextMetrics.html#wordWrap"},"E9bb0hQ-jceIfHB5Vsc4d":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html"},"HUakpg_s5I3oZyG1B0DMV":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#addRegion"},"FhiJ1uM8ymeYN4ie7dbhR":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#addUVs"},"5PrTMqaqMlxITLjxYN203":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#constructor"},"uGomRbcPPwUFFRDcZqiaq":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#createAnimationFromName"},"55MmXDT6wkflfIlGwurer":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#createSpriteFromName"},"9rL2xHxEspaXXJv-RlHzM":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getAtlas"},"fpGlj3ZVh3yHidq13qqYR":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getFormat"},"dqn4JmvE-WUkTu02RD2ql":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getRegion"},"Xs-IlkY90H-r-8nXYmaji":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getTexture"},"slvG0ZMyodt2VFvoB8g4y":{"uri":"/melonJS/docs/melonjs/TextureAtlas.html#getUVs"},"72XoFU7AB_GkudeFsA_Mf":{"uri":"/melonJS/docs/melonjs/Tile.html"},"5LojmRUmuScgKsnAhoJSB":{"uri":"/melonJS/docs/melonjs/Tile.html#bottom"},"_lm7NFcupgdvlvKE6_yiE":{"uri":"/melonJS/docs/melonjs/Tile.html#center"},"-XcnDNgaZPGVWatgwCIDn":{"uri":"/melonJS/docs/melonjs/Tile.html#centerX"},"lgOSaZCBTDfxV5jlxr_3C":{"uri":"/melonJS/docs/melonjs/Tile.html#centerY"},"in70z4WV_2Xn4uMIp9-fH":{"uri":"/melonJS/docs/melonjs/Tile.html#flipped"},"nRm8xP1jpHlbl5kR92lst":{"uri":"/melonJS/docs/melonjs/Tile.html#flippedAD"},"aJg1qaVX0TsEyhjGsl0gl":{"uri":"/melonJS/docs/melonjs/Tile.html#flippedY"},"pYoRQGiwQU5L8c_OEmbWz":{"uri":"/melonJS/docs/melonjs/Tile.html#flipX"},"pMBe48VbYsP--AaSndi2u":{"uri":"/melonJS/docs/melonjs/Tile.html#left"},"cji3qqibXV958sObm5t9M":{"uri":"/melonJS/docs/melonjs/Tile.html#right"},"Fmi6rvPpsTrmbCU-Uq_AT":{"uri":"/melonJS/docs/melonjs/Tile.html#tileId"},"KgGN0FZ20fECl-llYI7Xm":{"uri":"/melonJS/docs/melonjs/Tile.html#tileset"},"gpV-HjZOTPDwZ8H_7b9Wt":{"uri":"/melonJS/docs/melonjs/Tile.html#top"},"U4eVpZHVqvZ3xL-oijrOr":{"uri":"/melonJS/docs/melonjs/Tile.html#width"},"tBps9VaLXNe_C9Yfv10ey":{"uri":"/melonJS/docs/melonjs/Tile.html#x"},"joKZid72KC_i2O7DKJoR6":{"uri":"/melonJS/docs/melonjs/Tile.html#y"},"N9IzT_gTPp1d_Dz-l0Rk9":{"uri":"/melonJS/docs/melonjs/Tile.html#add"},"UnuGT6-Gzru9AfT_l6XtX":{"uri":"/melonJS/docs/melonjs/Tile.html#addBounds"},"XurgfUzDki1NFk8YtP2Yh":{"uri":"/melonJS/docs/melonjs/Tile.html#addFrame"},"wGcpnXA6ZRi7bwKVgKhon":{"uri":"/melonJS/docs/melonjs/Tile.html#addPoint"},"49k1MNXix70aR-ojJ-Ivs":{"uri":"/melonJS/docs/melonjs/Tile.html#clear"},"Acqb7Nbg7B7eDqrwVn4tN":{"uri":"/melonJS/docs/melonjs/Tile.html#clone"},"jwBdmHqEHK41q1ZcXeIWm":{"uri":"/melonJS/docs/melonjs/Tile.html#constructor"},"r9x3rg8gCQviSKumRLXyR":{"uri":"/melonJS/docs/melonjs/Tile.html#contains"},"Znh9swEL-ZkvCc-OQHWr6":{"uri":"/melonJS/docs/melonjs/Tile.html#getRenderable"},"VhnAtFkTohBC66X0y6wxc":{"uri":"/melonJS/docs/melonjs/Tile.html#isFinite"},"HeQvvQ1TbC7sFw1X6eNoX":{"uri":"/melonJS/docs/melonjs/Tile.html#overlaps"},"SA7TsnPY8saqmaWcXbG3-":{"uri":"/melonJS/docs/melonjs/Tile.html#setMinMax"},"ecnnJp-qosdGAO3ITyfX-":{"uri":"/melonJS/docs/melonjs/Tile.html#shift"},"DvupE8BJLDLi0J3KStde2":{"uri":"/melonJS/docs/melonjs/Tile.html#toPolygon"},"CjzmvCBP57_XNua1Ku9Kr":{"uri":"/melonJS/docs/melonjs/Tile.html#translate"},"_HaNdtXFt7i84iyal4y_0":{"uri":"/melonJS/docs/melonjs/Tile.html#update"},"QIY6jBVCO8-A0HjCuIyqa":{"uri":"/melonJS/docs/melonjs/Timer.html"},"284-NnXgkTGKKHgeceT5t":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html"},"EOorMP5P25BeyzTB_XMKx":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#canRender"},"DrXSHOVp3kjSCaLwlh_Jg":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#constructor"},"tbUCHLueH2JDU4ds1rHxJ":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#drawTile"},"YFKamN6zlM18ZyDeHeeQI":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#drawTileLayer"},"qxYG0PZ0YJTuxwUt95guC":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#getBounds"},"gTfCP9q8H-L1Hraq4riZ-":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#pixelToTileCoords"},"42tzNBWszEjEaIIJjiwdf":{"uri":"/melonJS/docs/melonjs/TMXHexagonalRenderer.html#tileToPixelCoords"},"Ic9-8sqOC9sGwy1v0A90t":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html"},"pNEmMafXl-qHh9GsTbVAU":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#canRender"},"nJegzWJYjhs1Od5Pwa9c0":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#constructor"},"reqZrgu1xPq6jYkbY18NS":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#drawTile"},"VLEWGsRnR-pHV65cjFW7Y":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#drawTileLayer"},"qJqy4UJSYKyGGzJvKIh33":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#getBounds"},"2iGUs5B4hN-PwI5N-Fy1A":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#pixelToTileCoords"},"lMbkz43P0PMTrqWNlViqZ":{"uri":"/melonJS/docs/melonjs/TMXIsometricRenderer.html#tileToPixelCoords"},"vQkI_IIS-adQLwwgGf0nf":{"uri":"/melonJS/docs/melonjs/TMXLayer.html"},"tUkfQHE3EOgr7HUxPXYwu":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#alpha"},"Vouj1AFs0_5NV8_pyTrRV":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#alwaysUpdate"},"FNXD9xhPCIBoCwpoN1OYH":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#ancestor"},"RVUojlK8B4RpGL_wQ2kvb":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#anchorPoint"},"HnBpcqgBG8keA8CR-FkoX":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#autoTransform"},"VnhLNrQZwk5EzAHo8jUaZ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#blendMode"},"YQlPqxq_at9WU8ogF-Qnn":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#body"},"LjEWBd8uvxzu_zMFZ89zI":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#bottom"},"pePoZJ7H4evUg8kEt8vj0":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerX"},"PE7hH9iPpRQaPgGKEjw7l":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerY"},"d21FSc2fSAQ9mMesTjfNs":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#currentTransform"},"bz36FeTx6gpocp6uzJJ5L":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#floating"},"0NqMVK7aOsacAviC6FuZS":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#GUID"},"CY1pjRbILVheAh0ysopjL":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#height"},"MIkWNme5-8CTPcC6hbz9z":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#inViewport"},"TmkKK6fj_K0MTE-QN_8YG":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isAnimated"},"6rN2SurLXwfejGRwjm3dD":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isDirty"},"_SfM7wp7kPtXadB84exS3":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFlippedX"},"qmPdKkWtDVXZOfL_fhWoP":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFlippedY"},"KDVQCCjUWx1nJO0XJ8Hhh":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFloating"},"cnaiuBs6A_XGMagnV5MCJ":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isKinematic"},"e1MtMyp4AzmwS-wdyydVG":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isPersistent"},"vGEMkWrFPGMhW5wMY0NdD":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#left"},"OrUL-LrWdEpRTJuXUfjAs":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#mask"},"jS7NDWokrGb4jzvl2Fqd8":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#name"},"XrXML1y-Vnqjnk5qWNDPX":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onVisibilityChange"},"J_IgF7B1guVGrG_-JX8HP":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#points"},"BHYKZ9ikrj_H5z6tFfQxl":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#pos"},"9cqFCutMAj4Yo2EkIBAqw":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#renderorder"},"X4LBwzVIbHR5Me67sCCm_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#right"},"mIsRYMFYRbzD23QQU5nlW":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#tilesets"},"SgeeBlky8-T1kWgPKZEjf":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#tint"},"JkBJIPg-Na1-If6OII9MV":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#top"},"cOdJvy4Yzwo51e-CNTgPd":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#updateWhenPaused"},"0XUofq_Dwg9SH7xQEnXW_":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#width"},"realqQUbaARPaw_PpLGDM":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#angleTo"},"opuxQ7cqC6CPiNY372jKD":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#cellAt"},"-VsZV8ryIACBx7g8CfEU5":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#centerOn"},"pSBZda6q4JaTKMzAO3i8G":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#clearTile"},"G_rVN8hP9Tw-qKHeJASJD":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#clone"},"WHC2hsujv0qFkNw-33GxL":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#constructor"},"bIsNf9SmHMtNHFc2-c0Tp":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#contains"},"gL9A-hyEoeQPWNX7mcJXU":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#copy"},"MplRf1jg9YHmHy5WJ1VL5":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#distanceTo"},"7vvHGuU_Nz3SkhSz2a__J":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#equals"},"i2TfJs0UKAgZMvU1Mlppx":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#flipX"},"P9v5KOmQHsSaW4YEBTA7F":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#flipY"},"mwAMgZZ5PMJ8BaFyZdbBF":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getAbsolutePosition"},"l_QQm9tH0eZfC0wEfv3Kt":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getBounds"},"68rm9i8Ieac5cE8hmS090":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getIndices"},"lYGvtvumzBFZTdm20tkCW":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getOpacity"},"xU-D-cCuXG2uJXbSCeeek":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getRenderer"},"OaoUoG17id4XOQ5S5kLVm":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTile"},"nz9J0M74cD2ipCyTEjLVX":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTile"},"87m2OKmyZbWuV1DMDNbnu":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#getTileId"},"60EoMVmKUSH4q71JVwpQd":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isConvex"},"9jUln9IqN05iGgUlU6tA4":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#isFinite"},"ddepUUk_SpKjZwEJ2yw2v":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#lookAt"},"ZeKlMHI2uUNcakGRptajF":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onCollision"},"-SP_QeFlaJEYrLRsPBj9g":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onDestroyEvent"},"QMD_T-_BfauFdGljhqe-1":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#overlaps"},"vXQDxf5u9OwypdN6RXneY":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#recalc"},"LOk_j0M9rLU6BrO4V37kU":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#resize"},"ydh8AQPm4veKaAOIRgIlF":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#rotate"},"Jz47A9zZdG2fbpKQlI-Nt":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#scale"},"28951JDQVDVm0r_JZQr51":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#scaleV"},"D7RMQ4FwuiPXyi9UcTDwa":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setOpacity"},"FjC2HZ7VUc6Qht-jHotNa":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setRenderer"},"QI5S1DIRGVm8efSm1HNDT":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setShape"},"dHkMScUWnUcykyALLJAN1":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setTile"},"DoKk3dJCNhDqyNC-QlK1B":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#setVertices"},"2DQMP_9Qg6NnuVWWeIK3n":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#shift"},"17Eb7r2uFSy0V9hU-klqD":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#to2d"},"v0AAHZNwU4zQYIIDHK6M2":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#toIso"},"Yab70Nlhu7RoGN5bb6DyE":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#toPolygon"},"Dx7Rm8nD60EAkxa1z9GK0":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#transform"},"f5qELVI_GqQE7UClHPchT":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#translate"},"r-PGAyD3lZTW5tGBt9VKv":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#union"},"Ze4mSDy6xPBmDSycIRbEA":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#draw"},"dM6naFwMO-yEgMmDQjeGD":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#postDraw"},"9xZwDEbU0z_oXZtQXta04":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#preDraw"},"OyiRJS7VWGA3HKD31vIfk":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#update"},"glt81iuE_9kVos4xt2gcP":{"uri":"/melonJS/docs/melonjs/TMXLayer.html#onAnchorUpdate"},"RDPCQHoFe2lDakoBWK4Pp":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html"},"SR4PWKjqfESqTbEf3-S_y":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#canRender"},"UpfpyeX94SF7b7muyhbNx":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#constructor"},"iLAvz9x_UF-W_HDclR12S":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#drawTile"},"elK_HG51DppV7ctbBmEWo":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#drawTileLayer"},"ruoWv8UDgNwxWNXbjM-5i":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#getBounds"},"WlEHeoDcE80LpxVhwPXl6":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#getBounds"},"ugeHR9nZHBGQ8NYP6Sbut":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#pixelToTileCoords"},"g8UKcc-7tv8_3MI5sf_Lq":{"uri":"/melonJS/docs/melonjs/TMXOrthogonalRenderer.html#tileToPixelCoords"},"AlSFphUiQQU7zmV33a0AU":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html"},"0aVdGZ8JE-6lLGzS6Th0u":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#canRender"},"e4UJNozkjNdrtKvYUyvEe":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#constructor"},"hba_nLEcGboU4VJnoImh8":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#drawTile"},"k0GX1jCnGd2v7ta33lj8C":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#drawTileLayer"},"D6Z-4oQkEU8TBpDs5Ujha":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#getBounds"},"k2EtLFqI_d_X6e6zH1l-8":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#getBounds"},"0LTc1mguZAtRtimQRFdnC":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#pixelToTileCoords"},"lv_28fqCpdYl6sQlqqxQ5":{"uri":"/melonJS/docs/melonjs/TMXRenderer.html#tileToPixelCoords"},"FxSerVSCNBOIjnvaDr1G_":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html"},"QmewMKZVqXNrjBAX4I9NE":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#canRender"},"jCG_iWxgmhhbfTov_Vq-v":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#constructor"},"4FQdt4VV2MjPLR0ZnXxhJ":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#drawTile"},"Fc3fHzS9FCCiory8IF0UX":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#drawTileLayer"},"ds-bwPf3PkTpv6CSKWGPk":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#getBounds"},"m4TUoxUkd8-R8iQnL1hMr":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#pixelToTileCoords"},"Ks3dHV66dLuu0AOwVgSOV":{"uri":"/melonJS/docs/melonjs/TMXStaggeredRenderer.html#tileToPixelCoords"},"Rf9-QuflYUnVzBhW1pHeg":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html"},"oJsRk3S_iQImKMrojR7d0":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#cols"},"ypI-hftwlhhRJQoxjE93Z":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#infinite"},"2GQn6uqJs7hWBdueeGgpQ":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#name"},"zEEqUazA5FZ5ijNP2mBlx":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#orientation"},"3TZRMmWOJGKsZ0zCb4UZc":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#renderorder"},"4T0u47MwEMjA30LLH3_a0":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#rows"},"62c0qJusKMiSrSdbgtEFF":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tiledversion"},"UjdVr7B4iuhTjanQ15KQh":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tileheight"},"tQCRpuOgv__HZLYaRMOgw":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#tilewidth"},"7XW4wGWeHJ-Y_0whw-xuW":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#version"},"VEAKrVty5Ao_81a8zEBms":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#addTo"},"my8EnrSt9vRqH1IX1uC6V":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#constructor"},"WybywpSAZ_hDvdKn2GUJs":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#destroy"},"Sn9Svy-Aw_WEfpjOmGew7":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getLayers"},"iWww4cGFafubFwwX8diEP":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getObjects"},"wCZ6jugGug5Q6ncvSfZTi":{"uri":"/melonJS/docs/melonjs/TMXTileMap.html#getRenderer"},"BTDuWP8hf2Kwoi2bKcWw8":{"uri":"/melonJS/docs/melonjs/TMXTileset.html"},"V7ump3pFjUSLqXBPtVy-U":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#isAnimated"},"Z2vTDfRvzHzWeJGUDqOPn":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#isCollection"},"0pluNgb3CuPsq_CEPrJrs":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#_lastUpdate"},"JOcI1BVvylTH0g8kz52JZ":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#animations"},"2u5mWCe1tAe3j9yIf7IpP":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#constructor"},"X-kFExineTnczsBAi3yJm":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#contains"},"hkJ20IT3O4xOtwunmBUZW":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getTileImage"},"Bpp9subfamnAGUz1dccRN":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getTileProperties"},"y6PanRun9lAp1EODVV08s":{"uri":"/melonJS/docs/melonjs/TMXTileset.html#getViewTileId"},"dEbjIStCeyMmc7JXYNRSb":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html"},"B2FTrW1XZHjuIYDXlll4b":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#add"},"I8LCcKJjYYbs2SDq9IsyX":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#getTilesetByGid"},"shlrTMDy3emWW2M3H5JBN":{"uri":"/melonJS/docs/melonjs/TMXTilesetGroup.html#getTilesetByIndex"},"wUL3zRsK1XjSIvmId505J":{"uri":"/melonJS/docs/melonjs/Trigger.html"},"uymRiUzmTZkyqCqdfFRKL":{"uri":"/melonJS/docs/melonjs/Trigger.html#alpha"},"bm_oBVPPfG_AeCC0_p8cs":{"uri":"/melonJS/docs/melonjs/Trigger.html#alwaysUpdate"},"ul4hfuw48ET46xr7jtl2o":{"uri":"/melonJS/docs/melonjs/Trigger.html#ancestor"},"T8ezlWCkUiJot-z_DBY2s":{"uri":"/melonJS/docs/melonjs/Trigger.html#anchorPoint"},"LHgpkMCUkB7Bwz7UZxb_r":{"uri":"/melonJS/docs/melonjs/Trigger.html#autoTransform"},"UQr02784UlQ0F7n3qR9AZ":{"uri":"/melonJS/docs/melonjs/Trigger.html#blendMode"},"GI5wjWn2o7VAFnNDfaJVp":{"uri":"/melonJS/docs/melonjs/Trigger.html#body"},"nw3qPCbADmXothd0XS5qr":{"uri":"/melonJS/docs/melonjs/Trigger.html#bottom"},"af4eZEqIZZx0oCxxTj8vI":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerX"},"7s0lH5wds1EIZpgONruE1":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerY"},"icZKv2kcB6On3ai8rM53j":{"uri":"/melonJS/docs/melonjs/Trigger.html#currentTransform"},"8ZFUuoXHQwVu_nWc3aExJ":{"uri":"/melonJS/docs/melonjs/Trigger.html#floating"},"ohGMbk8QPLYgQEbUgdMAw":{"uri":"/melonJS/docs/melonjs/Trigger.html#GUID"},"_dkal-dbKcCRjP_DXcnXS":{"uri":"/melonJS/docs/melonjs/Trigger.html#height"},"QqjSsToX5IYKR765yq5d6":{"uri":"/melonJS/docs/melonjs/Trigger.html#inViewport"},"rYYfarvBg43JQTrpzw-d8":{"uri":"/melonJS/docs/melonjs/Trigger.html#isDirty"},"UCJwe00YnJrk-BVy3RGWX":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFlippedX"},"ZqM3nxoNxgH5TkFIDlSa7":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFlippedY"},"_uG4gV8wIlvfOjrrFXMxC":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFloating"},"vH4S5WCDzl2qUXKDRdR2s":{"uri":"/melonJS/docs/melonjs/Trigger.html#isKinematic"},"w6ug4XOu6-Egn_xUg_rxk":{"uri":"/melonJS/docs/melonjs/Trigger.html#isPersistent"},"-4ZQ88pow5gQZXA34-soP":{"uri":"/melonJS/docs/melonjs/Trigger.html#left"},"dCOnM9O8hdYhkhBvxDd6Q":{"uri":"/melonJS/docs/melonjs/Trigger.html#mask"},"XjTrEhPe1NLcZRObxl5kV":{"uri":"/melonJS/docs/melonjs/Trigger.html#name"},"VaG00sh6WSsGYFjtyijkx":{"uri":"/melonJS/docs/melonjs/Trigger.html#onVisibilityChange"},"_GLLujZdPNJ6lkrviPSMF":{"uri":"/melonJS/docs/melonjs/Trigger.html#points"},"XjCHH7LruVm8sPunBpLqP":{"uri":"/melonJS/docs/melonjs/Trigger.html#pos"},"WFriYUAaP_KIklH_M3iGX":{"uri":"/melonJS/docs/melonjs/Trigger.html#right"},"07A69fsMt9LOYedmrPJiG":{"uri":"/melonJS/docs/melonjs/Trigger.html#tint"},"lCCruyhHf2Bf8zX7qO6De":{"uri":"/melonJS/docs/melonjs/Trigger.html#top"},"m4NZ96fkvf8I8sRApsVde":{"uri":"/melonJS/docs/melonjs/Trigger.html#updateWhenPaused"},"uyGCxmNTS8Y0Db-wNjgNL":{"uri":"/melonJS/docs/melonjs/Trigger.html#width"},"EnYSg9HCA4WsUBBxpH_2M":{"uri":"/melonJS/docs/melonjs/Trigger.html#angleTo"},"SydFckNDT7q9LaNUEyIoC":{"uri":"/melonJS/docs/melonjs/Trigger.html#centerOn"},"NJuyOd5X0ucq---qQoOSt":{"uri":"/melonJS/docs/melonjs/Trigger.html#clone"},"E1aQHyifhkwUOzA8oBjUN":{"uri":"/melonJS/docs/melonjs/Trigger.html#constructor"},"M8PFIQtlC4cPOlckh4Yv8":{"uri":"/melonJS/docs/melonjs/Trigger.html#contains"},"POiRTzkFFw_k8_1l0XNCc":{"uri":"/melonJS/docs/melonjs/Trigger.html#copy"},"ejtvqeHsMp6h9_t1SaJuo":{"uri":"/melonJS/docs/melonjs/Trigger.html#distanceTo"},"zTKH1IOcowFvdgpB2emfE":{"uri":"/melonJS/docs/melonjs/Trigger.html#equals"},"Hl6-XCtFKsZx4_bVAZLjN":{"uri":"/melonJS/docs/melonjs/Trigger.html#flipX"},"SRgmFQG9Zx0aR6MLVn6Lx":{"uri":"/melonJS/docs/melonjs/Trigger.html#flipY"},"cPD-sV2HrSuRjuGY53acx":{"uri":"/melonJS/docs/melonjs/Trigger.html#getAbsolutePosition"},"ES5kU1Ou9ynIMf-XN5Qrw":{"uri":"/melonJS/docs/melonjs/Trigger.html#getBounds"},"3uvFM2VX3S48rjqG88QXi":{"uri":"/melonJS/docs/melonjs/Trigger.html#getIndices"},"a4fczMbi4OQfwyGhXoQUC":{"uri":"/melonJS/docs/melonjs/Trigger.html#getOpacity"},"BAkiafE6vIhJfnRMm-Nz6":{"uri":"/melonJS/docs/melonjs/Trigger.html#isConvex"},"zH-yaVTz7XfKzZn8HX3DN":{"uri":"/melonJS/docs/melonjs/Trigger.html#isFinite"},"lzA_txa-D0iZahZshPyh7":{"uri":"/melonJS/docs/melonjs/Trigger.html#lookAt"},"ROZyTYIQ4-y0FTqt0ktmr":{"uri":"/melonJS/docs/melonjs/Trigger.html#onCollision"},"QjVdhvuFmrCp1Q324Dosw":{"uri":"/melonJS/docs/melonjs/Trigger.html#onDestroyEvent"},"1v0HVTg79vuDzcN8W5h7l":{"uri":"/melonJS/docs/melonjs/Trigger.html#overlaps"},"DuLh5ui1BBtfhXTT-LNrK":{"uri":"/melonJS/docs/melonjs/Trigger.html#recalc"},"O_nrKN3_guu0XpIIDXW5s":{"uri":"/melonJS/docs/melonjs/Trigger.html#resize"},"Xjg2Ft-0ORhDzwXCqbImy":{"uri":"/melonJS/docs/melonjs/Trigger.html#rotate"},"jRzJILE_CV5FG74iYhphr":{"uri":"/melonJS/docs/melonjs/Trigger.html#scale"},"oWPckJ8DUtaa1jZjaEWi-":{"uri":"/melonJS/docs/melonjs/Trigger.html#scaleV"},"YIBDoNVsQfzd6PqVcRhwX":{"uri":"/melonJS/docs/melonjs/Trigger.html#setOpacity"},"x3JtO9WquhKMrVffh8JnR":{"uri":"/melonJS/docs/melonjs/Trigger.html#setShape"},"CjTUMBKkyrJCOTHUuYV7u":{"uri":"/melonJS/docs/melonjs/Trigger.html#setVertices"},"rwNvEkovn2vFQ-RXctmxy":{"uri":"/melonJS/docs/melonjs/Trigger.html#shift"},"LomULfOpxE9VeeFkFHE-y":{"uri":"/melonJS/docs/melonjs/Trigger.html#to2d"},"SYRLRoSU4N8k_J7c3OuYT":{"uri":"/melonJS/docs/melonjs/Trigger.html#toIso"},"Vd_B6OKgZqR1DpyFVHD1f":{"uri":"/melonJS/docs/melonjs/Trigger.html#toPolygon"},"vwoerCo9yFSRdAcj00xUP":{"uri":"/melonJS/docs/melonjs/Trigger.html#transform"},"Ujoo70JjnCVQXY7sotDjb":{"uri":"/melonJS/docs/melonjs/Trigger.html#translate"},"kZc_HBb1EkYODrfj1crQs":{"uri":"/melonJS/docs/melonjs/Trigger.html#union"},"ryKtxiQTWVygZVsDlqLJ2":{"uri":"/melonJS/docs/melonjs/Trigger.html#draw"},"WwlFgbbV8MB1P_I2KfPex":{"uri":"/melonJS/docs/melonjs/Trigger.html#postDraw"},"KHxoZiP_IlqN7J6tOL5sL":{"uri":"/melonJS/docs/melonjs/Trigger.html#preDraw"},"SPQMkVrFAyaqg4AqV5cIv":{"uri":"/melonJS/docs/melonjs/Trigger.html#triggerEvent"},"9RyN6Wp9cTT1DFXqzcpa1":{"uri":"/melonJS/docs/melonjs/Trigger.html#update"},"izKBLBosSFlssSvYZQDEJ":{"uri":"/melonJS/docs/melonjs/Trigger.html#onAnchorUpdate"},"cH9-RIKLggiir1l5EA13y":{"uri":"/melonJS/docs/melonjs/Tween.html"},"5TPTLSKwQoCmmxL3RYyx-":{"uri":"/melonJS/docs/melonjs/Tween/Easing.html"},"ToAgHmCOmKVoq_nAibCOM":{"uri":"/melonJS/docs/melonjs/Tween/Interpolation.html"},"vf0zrIK-7Pq5q4FewUZor":{"uri":"/melonJS/docs/melonjs/Tween.html#chain"},"NlD-1UmkK30MeELSXn75f":{"uri":"/melonJS/docs/melonjs/Tween.html#constructor"},"FRVyxxbhCdVV0Hd5GW5MD":{"uri":"/melonJS/docs/melonjs/Tween.html#delay"},"qo55R5ol0dYyzIAxamskI":{"uri":"/melonJS/docs/melonjs/Tween.html#easing"},"H79KuuhlJKH5_FMutsSLX":{"uri":"/melonJS/docs/melonjs/Tween.html#interpolation"},"RYP-b3PzP9LQXqTVcpYRy":{"uri":"/melonJS/docs/melonjs/Tween.html#onComplete"},"VrMrABvkY3oL7wlcfrTcb":{"uri":"/melonJS/docs/melonjs/Tween.html#onStart"},"GM7iQu13ZKIOFYmmbQLAY":{"uri":"/melonJS/docs/melonjs/Tween.html#onUpdate"},"71suOK5Q8kaAL3DRRPvis":{"uri":"/melonJS/docs/melonjs/Tween.html#repeat"},"coXgrSIHjLFrh0jRy1juS":{"uri":"/melonJS/docs/melonjs/Tween.html#start"},"wjqWvkcJ_hVJugZcUIe6U":{"uri":"/melonJS/docs/melonjs/Tween.html#stop"},"9jye6_VbBTZt5fpoCNIqT":{"uri":"/melonJS/docs/melonjs/Tween.html#to"},"ff-NvKXKUwU2h3On0rSVb":{"uri":"/melonJS/docs/melonjs/Tween.html#yoyo"},"LMPDl2W9q-Z-uSmA5ujAf":{"uri":"/melonJS/docs/melonjs/Vector2d.html"},"v0z7vlNze8VC07dMa0zSL":{"uri":"/melonJS/docs/melonjs/Vector2d.html#x"},"A9RMBWD4XpsUIObg8DzOI":{"uri":"/melonJS/docs/melonjs/Vector2d.html#y"},"KV9_oQM6cAe1c52ds8TRW":{"uri":"/melonJS/docs/melonjs/Vector2d.html#abs"},"4LwkdauXiZSAgwQBFUbus":{"uri":"/melonJS/docs/melonjs/Vector2d.html#add"},"sGaCCfJ7gu7abnXiETgfY":{"uri":"/melonJS/docs/melonjs/Vector2d.html#angle"},"I2dSEKfBzY2_4xdkHVt8V":{"uri":"/melonJS/docs/melonjs/Vector2d.html#ceil"},"rMjdebIxY2j0fg-IM1pc-":{"uri":"/melonJS/docs/melonjs/Vector2d.html#ceilSelf"},"0b6qIUoKqcmnnmJVy53zK":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clamp"},"V4VkUue2KyUt6XQcWCFha":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clampSelf"},"C_vifzP5M6svVrcAmZ8Pl":{"uri":"/melonJS/docs/melonjs/Vector2d.html#clone"},"3oiMouUWlMewkddr-kkh0":{"uri":"/melonJS/docs/melonjs/Vector2d.html#constructor"},"nUGkgHKUUJjtFBSFjcc0O":{"uri":"/melonJS/docs/melonjs/Vector2d.html#copy"},"ywNiz303lwRN2YFtOx-WV":{"uri":"/melonJS/docs/melonjs/Vector2d.html#cross"},"fciMn78TdbCVafzgIfhGy":{"uri":"/melonJS/docs/melonjs/Vector2d.html#distance"},"SVrMpJV_ZAjYKnWQTDRrt":{"uri":"/melonJS/docs/melonjs/Vector2d.html#div"},"GKfEDtowezLSpSD8YMjQ8":{"uri":"/melonJS/docs/melonjs/Vector2d.html#dot"},"T2-j5fKrS_C9-rgK-9Ctu":{"uri":"/melonJS/docs/melonjs/Vector2d.html#equals"},"gnN1QOaELUlkpV-Vc8Dig":{"uri":"/melonJS/docs/melonjs/Vector2d.html#floor"},"5IfNT8RDe7BaXON70GsX6":{"uri":"/melonJS/docs/melonjs/Vector2d.html#floorSelf"},"oVRNf1rxgpBXAWLQHf714":{"uri":"/melonJS/docs/melonjs/Vector2d.html#length"},"3gciGKx_qqg3yRhYlNq21":{"uri":"/melonJS/docs/melonjs/Vector2d.html#length2"},"MdCSX9QjY6rAMuRBRi0N4":{"uri":"/melonJS/docs/melonjs/Vector2d.html#lerp"},"w08kpJX_rVP8biNs7XpQF":{"uri":"/melonJS/docs/melonjs/Vector2d.html#maxV"},"sJrGe6K8SfMbOe_a_s209":{"uri":"/melonJS/docs/melonjs/Vector2d.html#minV"},"U-SRFaZ0E_BrOTz2lsgb0":{"uri":"/melonJS/docs/melonjs/Vector2d.html#negate"},"gFpF-Vj_PFRq1Z_Xiap32":{"uri":"/melonJS/docs/melonjs/Vector2d.html#negateSelf"},"0rpItB7zD_sflc7RmJHqd":{"uri":"/melonJS/docs/melonjs/Vector2d.html#normalize"},"LUUyc7mA3yhgV9TimqJqw":{"uri":"/melonJS/docs/melonjs/Vector2d.html#perp"},"W0o7uRVp68YLme5_txYN8":{"uri":"/melonJS/docs/melonjs/Vector2d.html#project"},"MjsadiruWowIy52VZruaw":{"uri":"/melonJS/docs/melonjs/Vector2d.html#projectN"},"d8w5kcgsHxPW6ZKgMa5dN":{"uri":"/melonJS/docs/melonjs/Vector2d.html#rotate"},"2q9R-R17iJNI5g8swKtKf":{"uri":"/melonJS/docs/melonjs/Vector2d.html#scale"},"9YSRTpjYfX_gHCb2nXEQv":{"uri":"/melonJS/docs/melonjs/Vector2d.html#scaleV"},"4f5qa0jMrqTYzwsRvvTv9":{"uri":"/melonJS/docs/melonjs/Vector2d.html#set"},"6t5kcIk722mJi4_ZizEK_":{"uri":"/melonJS/docs/melonjs/Vector2d.html#setV"},"AbAxCogRy5RCp_wYNVdTM":{"uri":"/melonJS/docs/melonjs/Vector2d.html#setZero"},"iSXMheE2m-mvXM0XM_UCW":{"uri":"/melonJS/docs/melonjs/Vector2d.html#sub"},"idGnVEHzpSQGU9i0BrFJ_":{"uri":"/melonJS/docs/melonjs/Vector2d.html#to2d"},"qWGftZmvihDlddSZWr2lJ":{"uri":"/melonJS/docs/melonjs/Vector2d.html#toIso"},"BYol5G8tZKGXStEVzPquX":{"uri":"/melonJS/docs/melonjs/Vector2d.html#toString"},"s-7ddKDAeFbC78B_Iy4DF":{"uri":"/melonJS/docs/melonjs/Vector2d.html#equals"},"p6giKk1giHHBJeBCP4Bim":{"uri":"/melonJS/docs/melonjs/Vector3d.html"},"LYPag7zjFAsqtkPohfoSp":{"uri":"/melonJS/docs/melonjs/Vector3d.html#x"},"YOwochH0skFzdnq3BFmuf":{"uri":"/melonJS/docs/melonjs/Vector3d.html#y"},"dqYLhvxdhApADVPpmC0r9":{"uri":"/melonJS/docs/melonjs/Vector3d.html#z"},"BRPL7twKNGi2aekeU6aQ9":{"uri":"/melonJS/docs/melonjs/Vector3d.html#abs"},"a-ctpRCYV0D4s4PN1ImPk":{"uri":"/melonJS/docs/melonjs/Vector3d.html#add"},"14qqY6YJqL9fNUDXMS_RM":{"uri":"/melonJS/docs/melonjs/Vector3d.html#angle"},"3idIVrVi9caxrbZx7QLRC":{"uri":"/melonJS/docs/melonjs/Vector3d.html#ceil"},"EhaQsJ9NqGcmGUVnB8oyx":{"uri":"/melonJS/docs/melonjs/Vector3d.html#ceilSelf"},"8s7y5BB5W2k3LufgZs0Tr":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clamp"},"_DdW9ij7mA1Q93eMrFAP9":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clampSelf"},"MIpmQ_fXnRmd7shc3X1Io":{"uri":"/melonJS/docs/melonjs/Vector3d.html#clone"},"CUa2RmiNQYY8rF27QA1vS":{"uri":"/melonJS/docs/melonjs/Vector3d.html#constructor"},"vQrI-X6v0Vd5N75a4gFaw":{"uri":"/melonJS/docs/melonjs/Vector3d.html#copy"},"UZFhBeS8ciMScs11zYR3c":{"uri":"/melonJS/docs/melonjs/Vector3d.html#cross"},"0tOaJOLXMDFW0tVMLRfCr":{"uri":"/melonJS/docs/melonjs/Vector3d.html#distance"},"r5VJwuppl17z7zFqz1jaG":{"uri":"/melonJS/docs/melonjs/Vector3d.html#div"},"DgjkKeMb3kfTBtx13YLtL":{"uri":"/melonJS/docs/melonjs/Vector3d.html#dot"},"CrlLGmOaMviVyoK-OE3ES":{"uri":"/melonJS/docs/melonjs/Vector3d.html#equals"},"wgNQesWD_7IDdHjv5N0zn":{"uri":"/melonJS/docs/melonjs/Vector3d.html#floor"},"009fagQe2H2XfksdK2dC2":{"uri":"/melonJS/docs/melonjs/Vector3d.html#floorSelf"},"ltPXXbGma1RJ3xeanp7HZ":{"uri":"/melonJS/docs/melonjs/Vector3d.html#length"},"dc6lOHsdbhZI87l2frZ0y":{"uri":"/melonJS/docs/melonjs/Vector3d.html#length2"},"SvpNtWIis-_Q6WW5TaRN8":{"uri":"/melonJS/docs/melonjs/Vector3d.html#lerp"},"8xdCtZV_J9-E21WtI0TkI":{"uri":"/melonJS/docs/melonjs/Vector3d.html#maxV"},"9zjdfXiip6PdIscs4FPDj":{"uri":"/melonJS/docs/melonjs/Vector3d.html#minV"},"OekDUcdilKKgOvis9ASC9":{"uri":"/melonJS/docs/melonjs/Vector3d.html#negate"},"_hoSnhUvTZrP6PVeHyUQM":{"uri":"/melonJS/docs/melonjs/Vector3d.html#negateSelf"},"tR1oQMBhN6NRkiviTnOyv":{"uri":"/melonJS/docs/melonjs/Vector3d.html#normalize"},"Gl_9IwydbAY5UHmxWkyni":{"uri":"/melonJS/docs/melonjs/Vector3d.html#perp"},"tMacthyM94IHKyW3bXEXj":{"uri":"/melonJS/docs/melonjs/Vector3d.html#project"},"hh318DPc0zh0wpz5WoShg":{"uri":"/melonJS/docs/melonjs/Vector3d.html#projectN"},"jIFj_meHA3UtnoyH0Povu":{"uri":"/melonJS/docs/melonjs/Vector3d.html#rotate"},"ieQ9eXqgQD7tC7a51DrwJ":{"uri":"/melonJS/docs/melonjs/Vector3d.html#scale"},"RAE3r3UptKZPz8T6OhV4Q":{"uri":"/melonJS/docs/melonjs/Vector3d.html#scaleV"},"G-yNQ0c0BaRLoReTlAXj4":{"uri":"/melonJS/docs/melonjs/Vector3d.html#set"},"g2-28LEsFUtO4ZUeVKHLH":{"uri":"/melonJS/docs/melonjs/Vector3d.html#setV"},"iSn0hobYPvWSJCJEqxn7P":{"uri":"/melonJS/docs/melonjs/Vector3d.html#setZero"},"51J3nqBImUHpQYwkNErtx":{"uri":"/melonJS/docs/melonjs/Vector3d.html#sub"},"MSVKN8AE9N1hGdyraTYMa":{"uri":"/melonJS/docs/melonjs/Vector3d.html#to2d"},"yf898YHdk5E0LBPO6vc2W":{"uri":"/melonJS/docs/melonjs/Vector3d.html#toIso"},"OIu0mHJwGHQE5CnjbgpgB":{"uri":"/melonJS/docs/melonjs/Vector3d.html#toString"},"qmrCsWWcC9HG2GM_CsyCB":{"uri":"/melonJS/docs/melonjs/Vector3d.html#equals"},"kML216H9B0RhcmVpx31-5":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html"},"panxttRFoeMrprrmBUY1j":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#activeShader"},"Ae2RM44-s_8SP4aPpbbja":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#attributes"},"jqbYjMyrXyCdmjjxMb9Tb":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#mode"},"M3i29yOtoyLNf8TzV4c9M":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#vertexByteSize"},"zcLZRqU89C8AzIcBDxp3p":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#vertexSize"},"eHtNQIVuAjZGNohp2YQ_h":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#addAttribute"},"NQZy1TxvnW5bvYksfOOow":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#addQuad"},"aNIY6xZH_uH8WwXsKRVdr":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"6-bpyZqtlkF1ZYvSii3fK":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"LaVqZaSYWZk36eiiwDd9J":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#bindTexture2D"},"0sd3RBAniWeCvDA1VtiEm":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#clear"},"lC7b4xzp2rayPFhPSWOyZ":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#clearColor"},"dMEXTRq6Gi-_V1Mj_-rie":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#constructor"},"DEk3cRPEFZ-yFKFtBLuAW":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#createTexture2D"},"BM4q8snLYpsJ5xQBi3Lte":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#drawVertices"},"UBDdWbIpvDKhz1YRDugEy":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#flush"},"VSDkKTpGxIvgZsazmN8Db":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#setProjection"},"4t67NGc8w54S6TmNplbHC":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#setViewport"},"VA5IsF3_Mqq2q56oA9qon":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#unbindTexture2D"},"vbFbt52PJrtY5wUKUEEQn":{"uri":"/melonJS/docs/melonjs/WebGLCompositor.html#useShader"},"f26nsMS88NAJc66e0kFl5":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html"},"tz6Ev0E1qji_KbMeikx4o":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#compositors"},"iBpvZGC_BSUOhhPwjstYn":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#currentCompositor"},"KxrYaJoi54iP0KPGZ-Ong":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#currentTransform"},"v5QUks00DlHtLYh0PpnZM":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#gl"},"AC5cfR7XDvBxJVnp2_c2a":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#GPURenderer"},"MIrGg5oY7vHJQuXfJpdEx":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#GPUVendor"},"6rNPLnaUPzBji63wE3tPE":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#isContextValid"},"urfzGwKpX5qVJG5dSjr_V":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#maxTextures"},"jkkQ4IEFIOeEwYZvJDODX":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#path2D"},"DiywGvIw-IoiZ7YNw9UMH":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#settings"},"8uZKItJ109B-RLISQ7Y6j":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#WebGLVersion"},"L9gjFMxBdhYO-0VnWwqLB":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clear"},"AUpoZA_02zX6viwa89_8E":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearColor"},"4uA_0B_hkar0ieTQlqPZ-":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearMask"},"sZ9gROT_AzBL_UVqcRLGt":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearRect"},"-7UOojc0zngiRpxPHqEER":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clearTint"},"gv6suwrilADGzJlcOcdUJ":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#clipRect"},"Syz6pTrmThiMxgyPpsT0p":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#constructor"},"rMkmH7a79DxxdNRe2yYy4":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#createPattern"},"YMecUx5Ncq6JPo_xYrLO9":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#drawImage"},"8d0r9fSmaDpjhNnzaHFp6":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#drawPattern"},"zhaVyjI-kGM53Yjgn0whw":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fill"},"g4FRtSnxXHYpVWGd6F3JP":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillArc"},"ZziYVMN6_yEApudMiULMV":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillEllipse"},"S9jpTL1mdOxx5V0klWYbC":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillLine"},"OofOWnvr7fBEqXMtdaIR-":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillPolygon"},"JdN_RK1rohp8lprfaXgRB":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillRect"},"EgorhqKwTaP0BdOAi93Sb":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#fillRoundRect"},"XrdgT0sozU8MERgd55zx8":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#flush"},"vzUVVsjAKj2gwd6mEnuKM":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getBlendMode"},"bDbI6B34npWSLsm72X-e9":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getCanvas"},"mjF1tDS-JShAn9DL1YDvf":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getColor"},"mI0cLlspQZBslLeOZAphq":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContext"},"Ev3ix2wXytiVhfOjLhSk2":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContext2d"},"8B-v--QboUiOAUCLg9zau":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getContextGL"},"HCpBopwepsEWpP3sPhRAV":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getGlobalAlpha"},"OY-F_rOHIg3EcEafTehkf":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getHeight"},"JNhrpORiBnpoONUMMDPLo":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getScreenCanvas"},"pQ41J4pOjzx-Hj9Hd2SGU":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getScreenContext"},"uDI6Du6alr6SKhmO1w2_n":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#getWidth"},"E8SdYPqNnmFEe3ssUBl6d":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#globalAlpha"},"HTPWIHXYYpgiWM03y-47V":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#overlaps"},"_6LUbPn9H_JZrLdELKP7O":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#reset"},"enMBTYB8tJyoxWTCPgtZW":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#resetTransform"},"174Ulug04yASCWzl9j4zz":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#resize"},"cy3P3ybA-skd_6w072lxn":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#restore"},"OKEsBZh5DnwFTm-cCpERp":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#rotate"},"EsnZYwjNgYp3m9SmFmLdn":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#save"},"N-v_4DTBuiu6I17sEUm0-":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#scale"},"tFt_R7wBdiRX4AU8PsdJq":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setAntiAlias"},"GKkMIcJMKzq8cSFpAsJ82":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setBlendMode"},"ehNZ3lbgIDL7IT5CBDANe":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setColor"},"uSFhBhUMYa3SfB8_92YbZ":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setCompositor"},"IJd7SXOUESz-6vvOCO9XW":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setGlobalAlpha"},"yQ2-sBnJ5yKv5zRjXXmIO":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setLineWidth"},"rfVzaxxY0zspA6_gWIugF":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setMask"},"sOrUi1Jg2zE_SgEvPwqnG":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setProjection"},"HePPOVuW6xf8m8TfiHXPI":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setTint"},"Cs6bkg50k4OFVQn3_QCSx":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#setTransform"},"D1kgLGhxkfdKofTDClGXn":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#stroke"},"EI7g-RtzZ1QxoYbphAPCw":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeArc"},"zjS4C0kGzJvTJwLpggTeB":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeEllipse"},"6zZbaGcax5i1XCYBI8eNH":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeLine"},"jJGfMzBi5s4bEo_cLf2nP":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokePolygon"},"5Ypqot2YuUYNgcQbzKbE_":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeRect"},"RiUs5zKwR-QYDX616FTIo":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#strokeRoundRect"},"f94-XC5_kRkIduhAoVwDY":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#tint"},"xAs-IEJZGiD71jCqUycEO":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#transform"},"YnRq5rRtQ8G_VsnBdSu3a":{"uri":"/melonJS/docs/melonjs/WebGLRenderer.html#translate"},"tstKtFQzT5qZfuYrvrkRc":{"uri":"/melonJS/docs/melonjs/World.html"},"RoxqnEZHv0hkSeEd4kNSo":{"uri":"/melonJS/docs/melonjs/World.html#alpha"},"grYOhZ9eOi5bJr8i1xcGs":{"uri":"/melonJS/docs/melonjs/World.html#alwaysUpdate"},"p1lqa6wlJlWoz7AkTumQj":{"uri":"/melonJS/docs/melonjs/World.html#ancestor"},"sikhrcOoKw01VE368k-ze":{"uri":"/melonJS/docs/melonjs/World.html#anchorPoint"},"gv0go5j3hf3qmVwTAhgug":{"uri":"/melonJS/docs/melonjs/World.html#autoDepth"},"abEIMrBf2nO7I07DP9cKP":{"uri":"/melonJS/docs/melonjs/World.html#autoSort"},"xfb1qRDO6l8lm3LtS4o95":{"uri":"/melonJS/docs/melonjs/World.html#autoTransform"},"CDhuQ-Xolv36MC4itcszX":{"uri":"/melonJS/docs/melonjs/World.html#backgroundColor"},"b48JvNu7cpfF_ND6io-S7":{"uri":"/melonJS/docs/melonjs/World.html#blendMode"},"uzMsXCt8RzRbtfTvTExv_":{"uri":"/melonJS/docs/melonjs/World.html#bodies"},"Khfq2b4r0_w10n5a73bHP":{"uri":"/melonJS/docs/melonjs/World.html#body"},"XQoiejqOuNij15lYgQfaq":{"uri":"/melonJS/docs/melonjs/World.html#bottom"},"4oAZDsYseTihtqDNlypfQ":{"uri":"/melonJS/docs/melonjs/World.html#broadphase"},"2g5GD-F8DHuszoMQov_Za":{"uri":"/melonJS/docs/melonjs/World.html#centerX"},"bnClKR8y-yTEnl5BwG_2G":{"uri":"/melonJS/docs/melonjs/World.html#centerY"},"yjG06UY3HX4SY_KPoYjcx":{"uri":"/melonJS/docs/melonjs/World.html#clipping"},"RGDEt-mCR6OSmqQJM-jv4":{"uri":"/melonJS/docs/melonjs/World.html#currentTransform"},"gLDCjo6ajge9HqwWvxtmU":{"uri":"/melonJS/docs/melonjs/World.html#enableChildBoundsUpdate"},"uAp3YXKfCZqLFlMVtJYrz":{"uri":"/melonJS/docs/melonjs/World.html#floating"},"as4Xmd-Z7rKKOb4nZvLTJ":{"uri":"/melonJS/docs/melonjs/World.html#fps"},"1i4J3ieTiLCb0dGjkJms2":{"uri":"/melonJS/docs/melonjs/World.html#gravity"},"zApLdmiRhEePxfv06Ovxw":{"uri":"/melonJS/docs/melonjs/World.html#GUID"},"L16EIx6b_uVMOSAKULbkm":{"uri":"/melonJS/docs/melonjs/World.html#height"},"TUXJoWfGbGb2nHOEKVJMR":{"uri":"/melonJS/docs/melonjs/World.html#inViewport"},"1_RSIxuQUzH7voYL9EJIj":{"uri":"/melonJS/docs/melonjs/World.html#isDirty"},"Vrr44gnFkqH2nUE6BN45u":{"uri":"/melonJS/docs/melonjs/World.html#isFlippedX"},"BlVIrmSrzLl54AxnTY59_":{"uri":"/melonJS/docs/melonjs/World.html#isFlippedY"},"8oLLJNdJYRZUGs1UKc4id":{"uri":"/melonJS/docs/melonjs/World.html#isFloating"},"1c4lgSPwx3BJXlULt2ZJa":{"uri":"/melonJS/docs/melonjs/World.html#isKinematic"},"cApoSxSyZUz8bXuLR6KSW":{"uri":"/melonJS/docs/melonjs/World.html#isPersistent"},"pkmm4Ypn9FU-DetXgSiSw":{"uri":"/melonJS/docs/melonjs/World.html#left"},"1eO4qKzR7vjPmJRpEQoyH":{"uri":"/melonJS/docs/melonjs/World.html#mask"},"ap78MNfpRChBjmZoKTkts":{"uri":"/melonJS/docs/melonjs/World.html#name"},"OB589rDbAiNvG-NstUqG0":{"uri":"/melonJS/docs/melonjs/World.html#onVisibilityChange"},"qfHTt-lFfzHOGT8a3RZZm":{"uri":"/melonJS/docs/melonjs/World.html#points"},"1dTdSUsf6lUxhfq6TEblc":{"uri":"/melonJS/docs/melonjs/World.html#pos"},"PexkNAaD0S2E-zlscH0Il":{"uri":"/melonJS/docs/melonjs/World.html#preRender"},"bF6OREWpSen76ySivfcmI":{"uri":"/melonJS/docs/melonjs/World.html#right"},"c7ieAoNBrRRyWXNPJAxc5":{"uri":"/melonJS/docs/melonjs/World.html#root"},"DCz78pb-yJD7_727ELmg8":{"uri":"/melonJS/docs/melonjs/World.html#sortOn"},"hvNFXIrMnjfWjQm0OWyWw":{"uri":"/melonJS/docs/melonjs/World.html#tint"},"xTOyub9YGOseeJzhyBWaC":{"uri":"/melonJS/docs/melonjs/World.html#top"},"vp9cD7O0S1mGF0r8hiXz-":{"uri":"/melonJS/docs/melonjs/World.html#updateWhenPaused"},"imjmv5MmAQiWPQt7J4N6L":{"uri":"/melonJS/docs/melonjs/World.html#width"},"JRzhuLMuX3ult9WBaiMOR":{"uri":"/melonJS/docs/melonjs/World.html#addBody"},"JztDPFvR1Jhu3rVMBJBAN":{"uri":"/melonJS/docs/melonjs/World.html#addChild"},"EGVz1u0pQwG43cHtlkBVt":{"uri":"/melonJS/docs/melonjs/World.html#addChildAt"},"wd0nzXUAwhYVdamdbaHHr":{"uri":"/melonJS/docs/melonjs/World.html#angleTo"},"iQ8Bd5eu-veiof2WXeS6D":{"uri":"/melonJS/docs/melonjs/World.html#centerOn"},"4Q-NAGaDwProqlJA5pgz3":{"uri":"/melonJS/docs/melonjs/World.html#clone"},"OeZrn8UcFgMcZr3MWyvM5":{"uri":"/melonJS/docs/melonjs/World.html#constructor"},"umjhcaUVylQOtc3H-QnA3":{"uri":"/melonJS/docs/melonjs/World.html#contains"},"VRHgO3y75E68CrvF_1kpW":{"uri":"/melonJS/docs/melonjs/World.html#copy"},"Do80lRb5olxsi6Mn52eu0":{"uri":"/melonJS/docs/melonjs/World.html#distanceTo"},"sxAwl09lYdhSW438U4VHN":{"uri":"/melonJS/docs/melonjs/World.html#equals"},"3j02g35cHo2f_ktS0JGoz":{"uri":"/melonJS/docs/melonjs/World.html#flipX"},"lM6o_lcNBF90jJ8fJ7Wlq":{"uri":"/melonJS/docs/melonjs/World.html#flipY"},"rdymxlFmhIeNx2iPFHEhQ":{"uri":"/melonJS/docs/melonjs/World.html#forEach"},"a7lqArl7jMOmQUm7Qha3_":{"uri":"/melonJS/docs/melonjs/World.html#getAbsolutePosition"},"wFz9BnVqsHkXRtPQbQR6o":{"uri":"/melonJS/docs/melonjs/World.html#getBounds"},"wUW2WfqZtX7OSe5CU6inp":{"uri":"/melonJS/docs/melonjs/World.html#getChildAt"},"eZK8LtIkHVINV6tcKqFqt":{"uri":"/melonJS/docs/melonjs/World.html#getChildByGUID"},"DWzWuKNbyhG_WIOv6SoZG":{"uri":"/melonJS/docs/melonjs/World.html#getChildByName"},"kq9vB4XZKrnSdeaVBcCTL":{"uri":"/melonJS/docs/melonjs/World.html#getChildByProp"},"aZ5gh4mIKwzLgBs4HD8eY":{"uri":"/melonJS/docs/melonjs/World.html#getChildByType"},"hkYFC7gc0C6uQ-y1wcCwO":{"uri":"/melonJS/docs/melonjs/World.html#getChildIndex"},"8OuWqRTGOO7Um7_zmYBQI":{"uri":"/melonJS/docs/melonjs/World.html#getChildren"},"xepo2udzd5m0n3H6W_spZ":{"uri":"/melonJS/docs/melonjs/World.html#getIndices"},"F_PxLRmuEpkySnBUxX4ji":{"uri":"/melonJS/docs/melonjs/World.html#getNextChild"},"JZfcJfUt4rqD0Rg4BzUZ7":{"uri":"/melonJS/docs/melonjs/World.html#getOpacity"},"-s31e4X1Tuh5LdNXj5Dfv":{"uri":"/melonJS/docs/melonjs/World.html#hasChild"},"yqjWzHCBHyQTaKhyKJ-95":{"uri":"/melonJS/docs/melonjs/World.html#isConvex"},"wNRjagccvIrmGj_xfdikX":{"uri":"/melonJS/docs/melonjs/World.html#isFinite"},"ObLVoJ9TyOBheoRB_6k9m":{"uri":"/melonJS/docs/melonjs/World.html#lookAt"},"zFO9S4Y2iZ85JlsjEcGuh":{"uri":"/melonJS/docs/melonjs/World.html#moveDown"},"1aYNa6TAh_KqA19mjiBzp":{"uri":"/melonJS/docs/melonjs/World.html#moveToBottom"},"vPeFjN6uV3XWPbIhnShgw":{"uri":"/melonJS/docs/melonjs/World.html#moveToTop"},"KuQMPVVHLwZ-AzSz8B69w":{"uri":"/melonJS/docs/melonjs/World.html#moveUp"},"IFoEbTGU6m1pqlVnUWaZd":{"uri":"/melonJS/docs/melonjs/World.html#onChildChange"},"2UpRQCAw2J1G22oaeccfj":{"uri":"/melonJS/docs/melonjs/World.html#onCollision"},"dmBjknrCihV4dXn-gttOX":{"uri":"/melonJS/docs/melonjs/World.html#onDestroyEvent"},"yCGt3TaxPYdT2N-WTfXFA":{"uri":"/melonJS/docs/melonjs/World.html#overlaps"},"P89IVgBj7X5YTJWz1K1zK":{"uri":"/melonJS/docs/melonjs/World.html#recalc"},"y8_bj9o7-KtDB1Dfghy4t":{"uri":"/melonJS/docs/melonjs/World.html#removeBody"},"X2OwFkVFfVrJ5MF2MLUME":{"uri":"/melonJS/docs/melonjs/World.html#removeChild"},"bmIsChyXyXiZyk0xw2ETI":{"uri":"/melonJS/docs/melonjs/World.html#removeChildNow"},"8onmS3B1rKygEfzP2202h":{"uri":"/melonJS/docs/melonjs/World.html#reset"},"mP4zZUwm4jqeJqFU3sStq":{"uri":"/melonJS/docs/melonjs/World.html#reset"},"FmujD3G8uStf_h4zIzh7s":{"uri":"/melonJS/docs/melonjs/World.html#resize"},"xbaOje9QuL1wXr8MaM0LM":{"uri":"/melonJS/docs/melonjs/World.html#rotate"},"6ZHiUmQvfj6V0v1NARAf5":{"uri":"/melonJS/docs/melonjs/World.html#scale"},"YXxGFW8vlY9Fr9lIdScWO":{"uri":"/melonJS/docs/melonjs/World.html#scaleV"},"LqTJ82mRBoSIPv9Hq10Wy":{"uri":"/melonJS/docs/melonjs/World.html#setChildsProperty"},"lRSB1QC1WgACjtces16Ja":{"uri":"/melonJS/docs/melonjs/World.html#setOpacity"},"_juC0lNbc4WkibCmEw2Ti":{"uri":"/melonJS/docs/melonjs/World.html#setShape"},"G55bKORotSYTwaS2YsY9Z":{"uri":"/melonJS/docs/melonjs/World.html#setVertices"},"_TQoT-gr9VAYSu6sNfNJw":{"uri":"/melonJS/docs/melonjs/World.html#shift"},"aJhd_51n4xhOFWZIzMjgn":{"uri":"/melonJS/docs/melonjs/World.html#sort"},"mHPJHw9kuM42WUTbtFM3t":{"uri":"/melonJS/docs/melonjs/World.html#swapChildren"},"ewphIfHftdeSG9AwMJ94g":{"uri":"/melonJS/docs/melonjs/World.html#to2d"},"0ojjPc6ltAUOS2bOoI4rB":{"uri":"/melonJS/docs/melonjs/World.html#toIso"},"ivcqSpinszrF2UpSRO0I1":{"uri":"/melonJS/docs/melonjs/World.html#toPolygon"},"yLrjpGI19wUjsN4nLrrPi":{"uri":"/melonJS/docs/melonjs/World.html#transform"},"9tWD44Np2EGTF3N-RsNys":{"uri":"/melonJS/docs/melonjs/World.html#translate"},"y9Q1JXz2YnbnSjsAyjHkw":{"uri":"/melonJS/docs/melonjs/World.html#union"},"HYANUeQ8bxb-l35d1jAMk":{"uri":"/melonJS/docs/melonjs/World.html#draw"},"GX5Fmt_EhqBGUPOgw5f29":{"uri":"/melonJS/docs/melonjs/World.html#postDraw"},"bRXOonQFMWaOdYbMyZNRV":{"uri":"/melonJS/docs/melonjs/World.html#preDraw"},"F78grCyM_Ov8WBqUI08Wx":{"uri":"/melonJS/docs/melonjs/World.html#update"},"oSpssAs-CGHNI0jpJfCb9":{"uri":"/melonJS/docs/melonjs/World.html#isAttachedToRoot"},"HuRAFdZPNgaCBC9UUoO3N":{"uri":"/melonJS/docs/melonjs/World.html#onAnchorUpdate"},"3c6VakBBJgIQX00Nl-wG5":{"uri":"global.html#version"},"o1Pbz4AeztMOoFvDaZAGk":{"uri":"global.html#initialized"},"096f-D47vsQO1T2CxlXTS":{"uri":"global.html#skipAutoInit"},"Ea7WOaTZBdXIrsPipMJU8":{"uri":"/melonJS/docs/melonjs/boot.html"}}}